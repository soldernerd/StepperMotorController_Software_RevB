

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Jan 01 23:47:33 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=2
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1,group=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1,group=2
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1,group=2
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=1
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=1
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1,group=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1,group=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=2
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1,group=2
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1,group=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1,group=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1,group=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1,group=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	text192,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   255                           	psect	text234,global,reloc=2,class=CODE,delta=1
   256                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   257                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   258                           	dabs	1,0x600,512,_msd_buffer
   259                           	dabs	1,0xD00,48,_BDT
   260                           	dabs	1,0xD40,31,_msd_cbw
   261                           	dabs	1,0xD80,13,_msd_csw
   262                           	dabs	1,0xD38,8,_CtrlTrfData
   263                           	dabs	1,0xD30,8,_SetupPkt
   264  0000                     
   265                           ; Version 2.00
   266                           ; Generated 27/05/2018 GMT
   267                           ; 
   268                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   269                           ; All rights reserved.
   270                           ; 
   271                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   272                           ; 
   273                           ; Redistribution and use in source and binary forms, with or without modification, are
   274                           ; permitted provided that the following conditions are met:
   275                           ; 
   276                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   277                           ;        conditions and the following disclaimer.
   278                           ; 
   279                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   280                           ;        of conditions and the following disclaimer in the documentation and/or other
   281                           ;        materials provided with the distribution.
   282                           ; 
   283                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   284                           ;        software without specific prior written permission.
   285                           ; 
   286                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   287                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   288                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   289                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   290                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   291                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   292                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   293                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   294                           ; 
   295                           ; 
   296                           ; Code-generator required, PIC18F47J53 Definitions
   297                           ; 
   298                           ; SFR Addresses
   299  0000                     
   300                           	psect	idataBANK2
   301  014DE4                     __pidataBANK2:
   302                           	opt stack 0
   303                           
   304                           ;initializer for _LUN
   305  014DE4  4E                 	db	low _ExternalFlash_MediaInitialize
   306  014DE5  58                 	db	high _ExternalFlash_MediaInitialize
   307  014DE6  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   308  014DE7  7A                 	db	low _ExternalFlash_CapacityRead
   309  014DE8  59                 	db	high _ExternalFlash_CapacityRead
   310  014DE9  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   311  014DEA  F6                 	db	low _ExternalFlash_SectorSizeRead
   312  014DEB  59                 	db	high _ExternalFlash_SectorSizeRead
   313  014DEC  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   314  014DED  36                 	db	low _ExternalFlash_MediaDetect
   315  014DEE  5A                 	db	high _ExternalFlash_MediaDetect
   316  014DEF  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   317  014DF0  7A                 	db	low _ExternalFlash_SectorRead
   318  014DF1  53                 	db	high _ExternalFlash_SectorRead
   319  014DF2  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   320  014DF3  7C                 	db	low _ExternalFlash_WriteProtectStateGet
   321  014DF4  5A                 	db	high _ExternalFlash_WriteProtectStateGet
   322  014DF5  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   323  014DF6  46                 	db	low _ExternalFlash_SectorWrite
   324  014DF7  53                 	db	high _ExternalFlash_SectorWrite
   325  014DF8  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   326  014DF9  00                 	db	0
   327  014DFA  00                 	db	0
   328  014DFB  00                 	db	0
   329  014DFC  00                 	db	0
   330  014DFD  00                 	db	0
   331  014DFE  00                 	db	0
   332  014DFF  00                 	db	0
   333  014E00  00                 	db	0
   334                           
   335                           ;initializer for i2c_display_init@F6951
   336  014E01  3A                 	db	58
   337  014E02  1E                 	db	30
   338  014E03  39                 	db	57
   339  014E04  0C                 	db	12
   340  014E05  74                 	db	116
   341  014E06  5C                 	db	92
   342  014E07  6D                 	db	109
   343  014E08  0C                 	db	12
   344  014E09  01                 	db	1
   345                           
   346                           ;initializer for __i2c_display_send_init_sequence@F6948
   347  014E0A  3A                 	db	58
   348  014E0B  1E                 	db	30
   349  014E0C  39                 	db	57
   350  014E0D  0C                 	db	12
   351  014E0E  74                 	db	116
   352  014E0F  5C                 	db	92
   353  014E10  6D                 	db	109
   354  014E11  0C                 	db	12
   355  014E12  01                 	db	1
   356                           
   357                           ;initializer for _tx_buf
   358  014E13  01                 	db	1
   359  014E14  02                 	db	2
   360  014E15  03                 	db	3
   361  014E16  04                 	db	4
   362  014E17  05                 	db	5
   363  014E18  06                 	db	6
   364  014E19  07                 	db	7
   365  014E1A  08                 	db	8
   366                           
   367                           ;initializer for _configFile_used_name
   368  014E1B  55                 	db	85
   369  014E1C  53                 	db	83
   370  014E1D  45                 	db	69
   371  014E1E  44                 	db	68
   372  014E1F  43                 	db	67
   373  014E20  4F                 	db	79
   374  014E21  4E                 	db	78
   375  014E22  46                 	db	70
   376                           
   377                           ;initializer for _configFile_name
   378  014E23  43                 	db	67
   379  014E24  4F                 	db	79
   380  014E25  4E                 	db	78
   381  014E26  46                 	db	70
   382  014E27  49                 	db	73
   383  014E28  47                 	db	71
   384  014E29  20                 	db	32
   385  014E2A  20                 	db	32
   386                           
   387                           ;initializer for _configFile_used_extention
   388  014E2B  54                 	db	84
   389  014E2C  58                 	db	88
   390  014E2D  54                 	db	84
   391                           
   392                           ;initializer for _configFile_extention
   393  014E2E  54                 	db	84
   394  014E2F  58                 	db	88
   395  014E30  54                 	db	84
   396                           
   397                           	psect	idataBANK4
   398  014C54                     __pidataBANK4:
   399                           	opt stack 0
   400                           
   401                           ;initializer for _dc_startup
   402  014C54  2A                 	db	42
   403  014C55  20                 	db	32
   404  014C56  20                 	db	32
   405  014C57  53                 	db	83
   406  014C58  74                 	db	116
   407  014C59  65                 	db	101
   408  014C5A  70                 	db	112
   409  014C5B  70                 	db	112
   410  014C5C  65                 	db	101
   411  014C5D  72                 	db	114
   412  014C5E  20                 	db	32
   413  014C5F  4D                 	db	77
   414  014C60  6F                 	db	111
   415  014C61  74                 	db	116
   416  014C62  6F                 	db	111
   417  014C63  72                 	db	114
   418  014C64  20                 	db	32
   419  014C65  20                 	db	32
   420  014C66  20                 	db	32
   421  014C67  2A                 	db	42
   422  014C68  2A                 	db	42
   423  014C69  20                 	db	32
   424  014C6A  20                 	db	32
   425  014C6B  20                 	db	32
   426  014C6C  20                 	db	32
   427  014C6D  43                 	db	67
   428  014C6E  6F                 	db	111
   429  014C6F  6E                 	db	110
   430  014C70  74                 	db	116
   431  014C71  72                 	db	114
   432  014C72  6F                 	db	111
   433  014C73  6C                 	db	108
   434  014C74  6C                 	db	108
   435  014C75  65                 	db	101
   436  014C76  72                 	db	114
   437  014C77  20                 	db	32
   438  014C78  20                 	db	32
   439  014C79  20                 	db	32
   440  014C7A  20                 	db	32
   441  014C7B  2A                 	db	42
   442  014C7C  2A                 	db	42
   443  014C7D  20                 	db	32
   444  014C7E  20                 	db	32
   445  014C7F  20                 	db	32
   446  014C80  20                 	db	32
   447  014C81  76                 	db	118
   448  014C82  20                 	db	32
   449  014C83  20                 	db	32
   450  014C84  20                 	db	32
   451  014C85  20                 	db	32
   452  014C86  20                 	db	32
   453  014C87  20                 	db	32
   454  014C88  20                 	db	32
   455  014C89  20                 	db	32
   456  014C8A  20                 	db	32
   457  014C8B  20                 	db	32
   458  014C8C  20                 	db	32
   459  014C8D  20                 	db	32
   460  014C8E  20                 	db	32
   461  014C8F  2A                 	db	42
   462  014C90  2A                 	db	42
   463  014C91  20                 	db	32
   464  014C92  20                 	db	32
   465  014C93  73                 	db	115
   466  014C94  6F                 	db	111
   467  014C95  6C                 	db	108
   468  014C96  64                 	db	100
   469  014C97  65                 	db	101
   470  014C98  72                 	db	114
   471  014C99  6E                 	db	110
   472  014C9A  65                 	db	101
   473  014C9B  72                 	db	114
   474  014C9C  64                 	db	100
   475  014C9D  2E                 	db	46
   476  014C9E  63                 	db	99
   477  014C9F  6F                 	db	111
   478  014CA0  6D                 	db	109
   479  014CA1  20                 	db	32
   480  014CA2  20                 	db	32
   481  014CA3  2A                 	db	42
   482                           
   483                           	psect	mediumconst
   484  009092                     __pmediumconst:
   485                           	opt stack 0
   486  009092  00                 	db	0
   487  009093                     _motor_speed_lookup:
   488                           	opt stack 0
   489  009093  0008               	dw	8
   490  009095  000C               	dw	12
   491  009097  0010               	dw	16
   492  009099  0013               	dw	19
   493  00909B  0016               	dw	22
   494  00909D  0019               	dw	25
   495  00909F  001C               	dw	28
   496  0090A1  001E               	dw	30
   497  0090A3  0021               	dw	33
   498  0090A5  0023               	dw	35
   499  0090A7  0026               	dw	38
   500  0090A9  0028               	dw	40
   501  0090AB  002A               	dw	42
   502  0090AD  002C               	dw	44
   503  0090AF  002E               	dw	46
   504  0090B1  0030               	dw	48
   505  0090B3  0032               	dw	50
   506  0090B5  0034               	dw	52
   507  0090B7  0036               	dw	54
   508  0090B9  0038               	dw	56
   509  0090BB  003A               	dw	58
   510  0090BD  003C               	dw	60
   511  0090BF  003D               	dw	61
   512  0090C1  003F               	dw	63
   513  0090C3  0041               	dw	65
   514  0090C5  0043               	dw	67
   515  0090C7  0045               	dw	69
   516  0090C9  0046               	dw	70
   517  0090CB  0048               	dw	72
   518  0090CD  0049               	dw	73
   519  0090CF  004B               	dw	75
   520  0090D1  004D               	dw	77
   521  0090D3  004E               	dw	78
   522  0090D5  0050               	dw	80
   523  0090D7  0051               	dw	81
   524  0090D9  0053               	dw	83
   525  0090DB  0054               	dw	84
   526  0090DD  0056               	dw	86
   527  0090DF  0057               	dw	87
   528  0090E1  0059               	dw	89
   529  0090E3  005A               	dw	90
   530  0090E5  005C               	dw	92
   531  0090E7  005D               	dw	93
   532  0090E9  005F               	dw	95
   533  0090EB  0060               	dw	96
   534  0090ED  0062               	dw	98
   535  0090EF  0063               	dw	99
   536  0090F1  0064               	dw	100
   537  0090F3  0066               	dw	102
   538  0090F5  0067               	dw	103
   539  0090F7  0069               	dw	105
   540  0090F9  006A               	dw	106
   541  0090FB  006C               	dw	108
   542  0090FD  006D               	dw	109
   543  0090FF  006E               	dw	110
   544  009101  0070               	dw	112
   545  009103  0071               	dw	113
   546  009105  0072               	dw	114
   547  009107  0073               	dw	115
   548  009109  0074               	dw	116
   549  00910B  0076               	dw	118
   550  00910D  0078               	dw	120
   551  00910F  0079               	dw	121
   552  009111  007A               	dw	122
   553  009113  007B               	dw	123
   554  009115  007D               	dw	125
   555  009117  007E               	dw	126
   556  009119  007F               	dw	127
   557  00911B  0082               	dw	130
   558  00911D  0085               	dw	133
   559  00911F  0087               	dw	135
   560  009121  008A               	dw	138
   561  009123  008C               	dw	140
   562  009125  008F               	dw	143
   563  009127  0091               	dw	145
   564  009129  0092               	dw	146
   565  00912B  0094               	dw	148
   566  00912D  0098               	dw	152
   567  00912F  009A               	dw	154
   568  009131  009C               	dw	156
   569  009133  009E               	dw	158
   570  009135  00A1               	dw	161
   571  009137  00A3               	dw	163
   572  009139  00A5               	dw	165
   573  00913B  00A7               	dw	167
   574  00913D  00AA               	dw	170
   575  00913F  00AC               	dw	172
   576  009141  00AF               	dw	175
   577  009143  00B2               	dw	178
   578  009145  00B4               	dw	180
   579  009147  00B7               	dw	183
   580  009149  00B8               	dw	184
   581  00914B  00BA               	dw	186
   582  00914D  00BC               	dw	188
   583  00914F  00BE               	dw	190
   584  009151  00C0               	dw	192
   585  009153  00C3               	dw	195
   586  009155  00C4               	dw	196
   587  009157  00C6               	dw	198
   588  009159  00C8               	dw	200
   589  00915B  00CA               	dw	202
   590  00915D  00CC               	dw	204
   591  00915F  00CE               	dw	206
   592  009161  00D0               	dw	208
   593  009163  00D2               	dw	210
   594  009165  00D4               	dw	212
   595  009167  00D6               	dw	214
   596  009169  00D8               	dw	216
   597  00916B  00D9               	dw	217
   598  00916D  00DB               	dw	219
   599  00916F  00DD               	dw	221
   600  009171  00DF               	dw	223
   601  009173  00E1               	dw	225
   602  009175  00E2               	dw	226
   603  009177  00E5               	dw	229
   604  009179  00E7               	dw	231
   605  00917B  00E8               	dw	232
   606  00917D  00EA               	dw	234
   607  00917F  00EC               	dw	236
   608  009181  00EE               	dw	238
   609  009183  00EF               	dw	239
   610  009185  00F2               	dw	242
   611  009187  00F3               	dw	243
   612  009189  00F5               	dw	245
   613  00918B  00F7               	dw	247
   614  00918D  00F8               	dw	248
   615  00918F  00FB               	dw	251
   616  009191  00FD               	dw	253
   617  009193  0100               	dw	256
   618  009195  0103               	dw	259
   619  009197  0104               	dw	260
   620  009199  0107               	dw	263
   621  00919B  010A               	dw	266
   622  00919D  010C               	dw	268
   623  00919F  010F               	dw	271
   624  0091A1  0112               	dw	274
   625  0091A3  0114               	dw	276
   626  0091A5  0117               	dw	279
   627  0091A7  0119               	dw	281
   628  0091A9  011C               	dw	284
   629  0091AB  011E               	dw	286
   630  0091AD  0121               	dw	289
   631  0091AF  0123               	dw	291
   632  0091B1  0125               	dw	293
   633  0091B3  0129               	dw	297
   634  0091B5  012B               	dw	299
   635  0091B7  012C               	dw	300
   636  0091B9  012E               	dw	302
   637  0091BB  0132               	dw	306
   638  0091BD  0134               	dw	308
   639  0091BF  0136               	dw	310
   640  0091C1  0138               	dw	312
   641  0091C3  013B               	dw	315
   642  0091C5  013D               	dw	317
   643  0091C7  013F               	dw	319
   644  0091C9  0143               	dw	323
   645  0091CB  0146               	dw	326
   646  0091CD  0148               	dw	328
   647  0091CF  014A               	dw	330
   648  0091D1  014C               	dw	332
   649  0091D3  014F               	dw	335
   650  0091D5  0151               	dw	337
   651  0091D7  0154               	dw	340
   652  0091D9  0156               	dw	342
   653  0091DB  0159               	dw	345
   654  0091DD  015B               	dw	347
   655  0091DF  015E               	dw	350
   656  0091E1  0160               	dw	352
   657  0091E3  0163               	dw	355
   658  0091E5  0166               	dw	358
   659  0091E7  0169               	dw	361
   660  0091E9  016B               	dw	363
   661  0091EB  016E               	dw	366
   662  0091ED  0171               	dw	369
   663  0091EF  0174               	dw	372
   664  0091F1  0177               	dw	375
   665  0091F3  017A               	dw	378
   666  0091F5  017D               	dw	381
   667  0091F7  0180               	dw	384
   668  0091F9  0183               	dw	387
   669  0091FB  0187               	dw	391
   670  0091FD  018A               	dw	394
   671  0091FF  018D               	dw	397
   672  009201  0191               	dw	401
   673  009203  0194               	dw	404
   674  009205  0198               	dw	408
   675  009207  019B               	dw	411
   676  009209  019F               	dw	415
   677  00920B  01A3               	dw	419
   678  00920D  01A6               	dw	422
   679  00920F  01AA               	dw	426
   680  009211  01AE               	dw	430
   681  009213  01B2               	dw	434
   682  009215  01B6               	dw	438
   683  009217  01BA               	dw	442
   684  009219  01BE               	dw	446
   685  00921B  01C3               	dw	451
   686  00921D  01C7               	dw	455
   687  00921F  01CC               	dw	460
   688  009221  01D0               	dw	464
   689  009223  01D5               	dw	469
   690  009225  01D9               	dw	473
   691  009227  01DE               	dw	478
   692  009229  01E3               	dw	483
   693  00922B  01E8               	dw	488
   694  00922D  01ED               	dw	493
   695  00922F  01F3               	dw	499
   696  009231  01F8               	dw	504
   697  009233  01FE               	dw	510
   698  009235  0203               	dw	515
   699  009237  0209               	dw	521
   700  009239  020F               	dw	527
   701  00923B  0215               	dw	533
   702  00923D  021B               	dw	539
   703  00923F  0221               	dw	545
   704  009241  0227               	dw	551
   705  009243  022E               	dw	558
   706  009245  0235               	dw	565
   707  009247  023C               	dw	572
   708  009249  0243               	dw	579
   709  00924B  024A               	dw	586
   710  00924D  0251               	dw	593
   711  00924F  0259               	dw	601
   712  009251  0261               	dw	609
   713  009253  0269               	dw	617
   714  009255  0271               	dw	625
   715  009257  0279               	dw	633
   716  009259  0282               	dw	642
   717  00925B  028B               	dw	651
   718  00925D  0294               	dw	660
   719  00925F  029E               	dw	670
   720  009261  02A7               	dw	679
   721  009263  02B1               	dw	689
   722  009265  02BC               	dw	700
   723  009267  02C6               	dw	710
   724  009269  02D1               	dw	721
   725  00926B  02DC               	dw	732
   726  00926D  02DC               	dw	732
   727  00926F  02DF               	dw	735
   728  009271  02E2               	dw	738
   729  009273  02E5               	dw	741
   730  009275  02E8               	dw	744
   731  009277  02EB               	dw	747
   732  009279  02EE               	dw	750
   733  00927B  02F1               	dw	753
   734  00927D  02F4               	dw	756
   735  00927F  02F7               	dw	759
   736  009281  02FA               	dw	762
   737  009283  02FD               	dw	765
   738  009285  0300               	dw	768
   739  009287  0304               	dw	772
   740  009289  0307               	dw	775
   741  00928B  030A               	dw	778
   742  00928D  030D               	dw	781
   743  00928F  0311               	dw	785
   744  009291  0314               	dw	788
   745  009293  0317               	dw	791
   746  009295  031A               	dw	794
   747  009297  031E               	dw	798
   748  009299  0321               	dw	801
   749  00929B  0325               	dw	805
   750  00929D  0328               	dw	808
   751  00929F  032C               	dw	812
   752  0092A1  032F               	dw	815
   753  0092A3  0333               	dw	819
   754  0092A5  0336               	dw	822
   755  0092A7  033A               	dw	826
   756  0092A9  033E               	dw	830
   757  0092AB  0341               	dw	833
   758  0092AD  0345               	dw	837
   759  0092AF  0349               	dw	841
   760  0092B1  034D               	dw	845
   761  0092B3  0350               	dw	848
   762  0092B5  0354               	dw	852
   763  0092B7  0358               	dw	856
   764  0092B9  035C               	dw	860
   765  0092BB  0360               	dw	864
   766  0092BD  0364               	dw	868
   767  0092BF  0368               	dw	872
   768  0092C1  036C               	dw	876
   769  0092C3  0370               	dw	880
   770  0092C5  0374               	dw	884
   771  0092C7  0379               	dw	889
   772  0092C9  037D               	dw	893
   773  0092CB  0381               	dw	897
   774  0092CD  0385               	dw	901
   775  0092CF  038A               	dw	906
   776  0092D1  038E               	dw	910
   777  0092D3  0393               	dw	915
   778  0092D5  0397               	dw	919
   779  0092D7  039C               	dw	924
   780  0092D9  03A0               	dw	928
   781  0092DB  03A5               	dw	933
   782  0092DD  03AA               	dw	938
   783  0092DF  03AE               	dw	942
   784  0092E1  03B3               	dw	947
   785  0092E3  03B8               	dw	952
   786  0092E5  03BD               	dw	957
   787  0092E7  03C2               	dw	962
   788  0092E9  03C6               	dw	966
   789  0092EB  03CC               	dw	972
   790  0092ED  03D1               	dw	977
   791  0092EF  03D6               	dw	982
   792  0092F1  03DB               	dw	987
   793  0092F3  03E0               	dw	992
   794  0092F5  03E5               	dw	997
   795  0092F7  03EB               	dw	1003
   796  0092F9  03F0               	dw	1008
   797  0092FB  03F6               	dw	1014
   798  0092FD  03FB               	dw	1019
   799  0092FF  0401               	dw	1025
   800  009301  0406               	dw	1030
   801  009303  040C               	dw	1036
   802  009305  0412               	dw	1042
   803  009307  0417               	dw	1047
   804  009309  041D               	dw	1053
   805  00930B  0423               	dw	1059
   806  00930D  0429               	dw	1065
   807  00930F  042F               	dw	1071
   808  009311  0436               	dw	1078
   809  009313  043C               	dw	1084
   810  009315  0442               	dw	1090
   811  009317  0448               	dw	1096
   812  009319  044F               	dw	1103
   813  00931B  0455               	dw	1109
   814  00931D  045C               	dw	1116
   815  00931F  0463               	dw	1123
   816  009321  046A               	dw	1130
   817  009323  0470               	dw	1136
   818  009325  0477               	dw	1143
   819  009327  047E               	dw	1150
   820  009329  0485               	dw	1157
   821  00932B  048D               	dw	1165
   822  00932D  0494               	dw	1172
   823  00932F  049B               	dw	1179
   824  009331  04A3               	dw	1187
   825  009333  04AA               	dw	1194
   826  009335  04B2               	dw	1202
   827  009337  04BA               	dw	1210
   828  009339  04C2               	dw	1218
   829  00933B  04C9               	dw	1225
   830  00933D  04D2               	dw	1234
   831  00933F  04DA               	dw	1242
   832  009341  04E2               	dw	1250
   833  009343  04EA               	dw	1258
   834  009345  04F3               	dw	1267
   835  009347  04FC               	dw	1276
   836  009349  0504               	dw	1284
   837  00934B  050D               	dw	1293
   838  00934D  0516               	dw	1302
   839  00934F  051F               	dw	1311
   840  009351  0528               	dw	1320
   841  009353  0532               	dw	1330
   842  009355  053B               	dw	1339
   843  009357  0545               	dw	1349
   844  009359  054F               	dw	1359
   845  00935B  0559               	dw	1369
   846  00935D  0563               	dw	1379
   847  00935F  056D               	dw	1389
   848  009361  0577               	dw	1399
   849  009363  0582               	dw	1410
   850  009365  058C               	dw	1420
   851  009367  0597               	dw	1431
   852  009369  05A2               	dw	1442
   853  00936B  05AD               	dw	1453
   854  00936D  05B9               	dw	1465
   855  00936F  05C4               	dw	1476
   856  009371  05D0               	dw	1488
   857  009373  05DC               	dw	1500
   858  009375  05E8               	dw	1512
   859  009377  05F4               	dw	1524
   860  009379  0601               	dw	1537
   861  00937B  060E               	dw	1550
   862  00937D  061A               	dw	1562
   863  00937F  0628               	dw	1576
   864  009381  0635               	dw	1589
   865  009383  0643               	dw	1603
   866  009385  0650               	dw	1616
   867  009387  065E               	dw	1630
   868  009389  066D               	dw	1645
   869  00938B  067B               	dw	1659
   870  00938D  068A               	dw	1674
   871  00938F  0699               	dw	1689
   872  009391  06A9               	dw	1705
   873  009393  06B8               	dw	1720
   874  009395  06C8               	dw	1736
   875  009397  06D8               	dw	1752
   876  009399  06E9               	dw	1769
   877  00939B  06FA               	dw	1786
   878  00939D  070B               	dw	1803
   879  00939F  071C               	dw	1820
   880  0093A1  072E               	dw	1838
   881  0093A3  0740               	dw	1856
   882  0093A5  0753               	dw	1875
   883  0093A7  0766               	dw	1894
   884  0093A9  0779               	dw	1913
   885  0093AB  078D               	dw	1933
   886  0093AD  07A1               	dw	1953
   887  0093AF  07B6               	dw	1974
   888  0093B1  07CB               	dw	1995
   889  0093B3  07E0               	dw	2016
   890  0093B5  07F6               	dw	2038
   891  0093B7  080C               	dw	2060
   892  0093B9  0823               	dw	2083
   893  0093BB  083B               	dw	2107
   894  0093BD  0853               	dw	2131
   895  0093BF  086B               	dw	2155
   896  0093C1  0884               	dw	2180
   897  0093C3  089E               	dw	2206
   898  0093C5  08B8               	dw	2232
   899  0093C7  08D3               	dw	2259
   900  0093C9  08EF               	dw	2287
   901  0093CB  090B               	dw	2315
   902  0093CD  0928               	dw	2344
   903  0093CF  0945               	dw	2373
   904  0093D1  0964               	dw	2404
   905  0093D3  0983               	dw	2435
   906  0093D5  09A3               	dw	2467
   907  0093D7  09C4               	dw	2500
   908  0093D9  09E6               	dw	2534
   909  0093DB  0A08               	dw	2568
   910  0093DD  0A2C               	dw	2604
   911  0093DF  0A51               	dw	2641
   912  0093E1  0A77               	dw	2679
   913  0093E3  0A9D               	dw	2717
   914  0093E5  0AC5               	dw	2757
   915  0093E7  0AEF               	dw	2799
   916  0093E9  0B19               	dw	2841
   917  0093EB  0B45               	dw	2885
   918  0093ED  0B72               	dw	2930
   919  0093EF  0B72               	dw	2930
   920  0093F1  0B7D               	dw	2941
   921  0093F3  0B89               	dw	2953
   922  0093F5  0B94               	dw	2964
   923  0093F7  0BA0               	dw	2976
   924  0093F9  0BAC               	dw	2988
   925  0093FB  0BB8               	dw	3000
   926  0093FD  0BC4               	dw	3012
   927  0093FF  0BD0               	dw	3024
   928  009401  0BDC               	dw	3036
   929  009403  0BE9               	dw	3049
   930  009405  0BF5               	dw	3061
   931  009407  0C02               	dw	3074
   932  009409  0C0E               	dw	3086
   933  00940B  0C1B               	dw	3099
   934  00940D  0C28               	dw	3112
   935  00940F  0C35               	dw	3125
   936  009411  0C42               	dw	3138
   937  009413  0C4F               	dw	3151
   938  009415  0C5D               	dw	3165
   939  009417  0C6A               	dw	3178
   940  009419  0C77               	dw	3191
   941  00941B  0C85               	dw	3205
   942  00941D  0C93               	dw	3219
   943  00941F  0CA1               	dw	3233
   944  009421  0CAF               	dw	3247
   945  009423  0CBD               	dw	3261
   946  009425  0CCB               	dw	3275
   947  009427  0CD9               	dw	3289
   948  009429  0CE8               	dw	3304
   949  00942B  0CF7               	dw	3319
   950  00942D  0D05               	dw	3333
   951  00942F  0D14               	dw	3348
   952  009431  0D23               	dw	3363
   953  009433  0D32               	dw	3378
   954  009435  0D42               	dw	3394
   955  009437  0D51               	dw	3409
   956  009439  0D61               	dw	3425
   957  00943B  0D70               	dw	3440
   958  00943D  0D80               	dw	3456
   959  00943F  0D90               	dw	3472
   960  009441  0DA0               	dw	3488
   961  009443  0DB1               	dw	3505
   962  009445  0DC1               	dw	3521
   963  009447  0DD2               	dw	3538
   964  009449  0DE3               	dw	3555
   965  00944B  0DF3               	dw	3571
   966  00944D  0E05               	dw	3589
   967  00944F  0E16               	dw	3606
   968  009451  0E27               	dw	3623
   969  009453  0E39               	dw	3641
   970  009455  0E4B               	dw	3659
   971  009457  0E5C               	dw	3676
   972  009459  0E6F               	dw	3695
   973  00945B  0E81               	dw	3713
   974  00945D  0E93               	dw	3731
   975  00945F  0EA6               	dw	3750
   976  009461                     __end_of_motor_speed_lookup:
   977                           	opt stack 0
   978  009461                     _motor_steps_lookup:
   979                           	opt stack 0
   980  009461  0001               	dw	1
   981  009463  0002               	dw	2
   982  009465  0003               	dw	3
   983  009467  0004               	dw	4
   984  009469  0005               	dw	5
   985  00946B  0006               	dw	6
   986  00946D  0007               	dw	7
   987  00946F  0008               	dw	8
   988  009471  0009               	dw	9
   989  009473  000A               	dw	10
   990  009475  000B               	dw	11
   991  009477  000C               	dw	12
   992  009479  000D               	dw	13
   993  00947B  000E               	dw	14
   994  00947D  000F               	dw	15
   995  00947F  0010               	dw	16
   996  009481  0011               	dw	17
   997  009483  0012               	dw	18
   998  009485  0013               	dw	19
   999  009487  0014               	dw	20
  1000  009489  0015               	dw	21
  1001  00948B  0016               	dw	22
  1002  00948D  0017               	dw	23
  1003  00948F  0018               	dw	24
  1004  009491  0019               	dw	25
  1005  009493  001A               	dw	26
  1006  009495  001B               	dw	27
  1007  009497  001C               	dw	28
  1008  009499  001D               	dw	29
  1009  00949B  001E               	dw	30
  1010  00949D  001F               	dw	31
  1011  00949F  0020               	dw	32
  1012  0094A1  0021               	dw	33
  1013  0094A3  0022               	dw	34
  1014  0094A5  0023               	dw	35
  1015  0094A7  0024               	dw	36
  1016  0094A9  0025               	dw	37
  1017  0094AB  0026               	dw	38
  1018  0094AD  0027               	dw	39
  1019  0094AF  0028               	dw	40
  1020  0094B1  0029               	dw	41
  1021  0094B3  002A               	dw	42
  1022  0094B5  002B               	dw	43
  1023  0094B7  002C               	dw	44
  1024  0094B9  002D               	dw	45
  1025  0094BB  002E               	dw	46
  1026  0094BD  002F               	dw	47
  1027  0094BF  0030               	dw	48
  1028  0094C1  0031               	dw	49
  1029  0094C3  0032               	dw	50
  1030  0094C5  0033               	dw	51
  1031  0094C7  0034               	dw	52
  1032  0094C9  0035               	dw	53
  1033  0094CB  0036               	dw	54
  1034  0094CD  0037               	dw	55
  1035  0094CF  0038               	dw	56
  1036  0094D1  0039               	dw	57
  1037  0094D3  003A               	dw	58
  1038  0094D5  003B               	dw	59
  1039  0094D7  003C               	dw	60
  1040  0094D9  003D               	dw	61
  1041  0094DB  003E               	dw	62
  1042  0094DD  003F               	dw	63
  1043  0094DF  0040               	dw	64
  1044  0094E1  0041               	dw	65
  1045  0094E3  0042               	dw	66
  1046  0094E5  0043               	dw	67
  1047  0094E7  0045               	dw	69
  1048  0094E9  0047               	dw	71
  1049  0094EB  0049               	dw	73
  1050  0094ED  004B               	dw	75
  1051  0094EF  004D               	dw	77
  1052  0094F1  004F               	dw	79
  1053  0094F3  0051               	dw	81
  1054  0094F5  0053               	dw	83
  1055  0094F7  0055               	dw	85
  1056  0094F9  0057               	dw	87
  1057  0094FB  0059               	dw	89
  1058  0094FD  005B               	dw	91
  1059  0094FF  005D               	dw	93
  1060  009501  005F               	dw	95
  1061  009503  0061               	dw	97
  1062  009505  0063               	dw	99
  1063  009507  0065               	dw	101
  1064  009509  0067               	dw	103
  1065  00950B  0069               	dw	105
  1066  00950D  006B               	dw	107
  1067  00950F  006E               	dw	110
  1068  009511  0070               	dw	112
  1069  009513  0073               	dw	115
  1070  009515  0075               	dw	117
  1071  009517  0077               	dw	119
  1072  009519  0079               	dw	121
  1073  00951B  007B               	dw	123
  1074  00951D  007D               	dw	125
  1075  00951F  007F               	dw	127
  1076  009521  0081               	dw	129
  1077  009523  0083               	dw	131
  1078  009525  0085               	dw	133
  1079  009527  0087               	dw	135
  1080  009529  0089               	dw	137
  1081  00952B  008B               	dw	139
  1082  00952D  008D               	dw	141
  1083  00952F  008F               	dw	143
  1084  009531  0091               	dw	145
  1085  009533  0093               	dw	147
  1086  009535  0095               	dw	149
  1087  009537  0097               	dw	151
  1088  009539  0099               	dw	153
  1089  00953B  009B               	dw	155
  1090  00953D  009D               	dw	157
  1091  00953F  009F               	dw	159
  1092  009541  00A1               	dw	161
  1093  009543  00A3               	dw	163
  1094  009545  00A5               	dw	165
  1095  009547  00A7               	dw	167
  1096  009549  00A9               	dw	169
  1097  00954B  00AB               	dw	171
  1098  00954D  00AD               	dw	173
  1099  00954F  00AF               	dw	175
  1100  009551  00B1               	dw	177
  1101  009553  00B3               	dw	179
  1102  009555  00B5               	dw	181
  1103  009557  00B7               	dw	183
  1104  009559  00B9               	dw	185
  1105  00955B  00BB               	dw	187
  1106  00955D  00BD               	dw	189
  1107  00955F  00C0               	dw	192
  1108  009561  00C3               	dw	195
  1109  009563  00C6               	dw	198
  1110  009565  00C9               	dw	201
  1111  009567  00CC               	dw	204
  1112  009569  00CF               	dw	207
  1113  00956B  00D2               	dw	210
  1114  00956D  00D5               	dw	213
  1115  00956F  00D8               	dw	216
  1116  009571  00DB               	dw	219
  1117  009573  00DE               	dw	222
  1118  009575  00E1               	dw	225
  1119  009577  00E4               	dw	228
  1120  009579  00E7               	dw	231
  1121  00957B  00EA               	dw	234
  1122  00957D  00ED               	dw	237
  1123  00957F  00F0               	dw	240
  1124  009581  00F3               	dw	243
  1125  009583  00F6               	dw	246
  1126  009585  00F9               	dw	249
  1127  009587  00FC               	dw	252
  1128  009589  00FF               	dw	255
  1129  00958B  0102               	dw	258
  1130  00958D  0105               	dw	261
  1131  00958F  0108               	dw	264
  1132  009591  010B               	dw	267
  1133  009593  010E               	dw	270
  1134  009595  0111               	dw	273
  1135  009597  0114               	dw	276
  1136  009599  0117               	dw	279
  1137  00959B  011A               	dw	282
  1138  00959D  011D               	dw	285
  1139  00959F  0120               	dw	288
  1140  0095A1  0123               	dw	291
  1141  0095A3  0126               	dw	294
  1142  0095A5  012A               	dw	298
  1143  0095A7  012D               	dw	301
  1144  0095A9  0130               	dw	304
  1145  0095AB  0133               	dw	307
  1146  0095AD  0137               	dw	311
  1147  0095AF  013A               	dw	314
  1148  0095B1  013E               	dw	318
  1149  0095B3  0142               	dw	322
  1150  0095B5  0145               	dw	325
  1151  0095B7  0149               	dw	329
  1152  0095B9  014D               	dw	333
  1153  0095BB  0151               	dw	337
  1154  0095BD  0155               	dw	341
  1155  0095BF  0159               	dw	345
  1156  0095C1  015D               	dw	349
  1157  0095C3  0161               	dw	353
  1158  0095C5  0166               	dw	358
  1159  0095C7  016A               	dw	362
  1160  0095C9  016E               	dw	366
  1161  0095CB  0173               	dw	371
  1162  0095CD  0178               	dw	376
  1163  0095CF  017D               	dw	381
  1164  0095D1  0182               	dw	386
  1165  0095D3  0187               	dw	391
  1166  0095D5  018C               	dw	396
  1167  0095D7  0191               	dw	401
  1168  0095D9  0196               	dw	406
  1169  0095DB  019C               	dw	412
  1170  0095DD  01A1               	dw	417
  1171  0095DF  01A7               	dw	423
  1172  0095E1  01AD               	dw	429
  1173  0095E3  01B3               	dw	435
  1174  0095E5  01B9               	dw	441
  1175  0095E7  01BF               	dw	447
  1176  0095E9  01C6               	dw	454
  1177  0095EB  01CC               	dw	460
  1178  0095ED  01D3               	dw	467
  1179  0095EF  01DA               	dw	474
  1180  0095F1  01E1               	dw	481
  1181  0095F3  01E8               	dw	488
  1182  0095F5  01F0               	dw	496
  1183  0095F7  01F7               	dw	503
  1184  0095F9  01FF               	dw	511
  1185  0095FB  0207               	dw	519
  1186  0095FD  020F               	dw	527
  1187  0095FF  0218               	dw	536
  1188  009601  0221               	dw	545
  1189  009603  022A               	dw	554
  1190  009605  0233               	dw	563
  1191  009607  023D               	dw	573
  1192  009609  0247               	dw	583
  1193  00960B  0251               	dw	593
  1194  00960D  025C               	dw	604
  1195  00960F  0267               	dw	615
  1196  009611  0272               	dw	626
  1197  009613  027E               	dw	638
  1198  009615  028A               	dw	650
  1199  009617  0297               	dw	663
  1200  009619  02A4               	dw	676
  1201  00961B  02B2               	dw	690
  1202  00961D  02C0               	dw	704
  1203  00961F  02CF               	dw	719
  1204  009621  02DF               	dw	735
  1205  009623  02EF               	dw	751
  1206  009625  02FF               	dw	767
  1207  009627  0311               	dw	785
  1208  009629  0323               	dw	803
  1209  00962B  0336               	dw	822
  1210  00962D  0349               	dw	841
  1211  00962F  035E               	dw	862
  1212  009631  0373               	dw	883
  1213  009633  0389               	dw	905
  1214  009635  03A1               	dw	929
  1215  009637  03B9               	dw	953
  1216  009639  03D3               	dw	979
  1217  00963B  03DD               	dw	989
  1218  00963D  03E4               	dw	996
  1219  00963F  03EA               	dw	1002
  1220  009641  03F1               	dw	1009
  1221  009643  03F8               	dw	1016
  1222  009645  03FF               	dw	1023
  1223  009647  0406               	dw	1030
  1224  009649  040D               	dw	1037
  1225  00964B  0415               	dw	1045
  1226  00964D  041C               	dw	1052
  1227  00964F  0424               	dw	1060
  1228  009651  042B               	dw	1067
  1229  009653  0433               	dw	1075
  1230  009655  043B               	dw	1083
  1231  009657  0442               	dw	1090
  1232  009659  044A               	dw	1098
  1233  00965B  0452               	dw	1106
  1234  00965D  045A               	dw	1114
  1235  00965F  0463               	dw	1123
  1236  009661  046B               	dw	1131
  1237  009663  0474               	dw	1140
  1238  009665  047C               	dw	1148
  1239  009667  0485               	dw	1157
  1240  009669  048E               	dw	1166
  1241  00966B  0496               	dw	1174
  1242  00966D  049F               	dw	1183
  1243  00966F  04A9               	dw	1193
  1244  009671  04B2               	dw	1202
  1245  009673  04BB               	dw	1211
  1246  009675  04C5               	dw	1221
  1247  009677  04CE               	dw	1230
  1248  009679  04D8               	dw	1240
  1249  00967B  04E2               	dw	1250
  1250  00967D  04EC               	dw	1260
  1251  00967F  04F6               	dw	1270
  1252  009681  0500               	dw	1280
  1253  009683  050B               	dw	1291
  1254  009685  0515               	dw	1301
  1255  009687  0520               	dw	1312
  1256  009689  052B               	dw	1323
  1257  00968B  0536               	dw	1334
  1258  00968D  0541               	dw	1345
  1259  00968F  054C               	dw	1356
  1260  009691  0558               	dw	1368
  1261  009693  0564               	dw	1380
  1262  009695  056F               	dw	1391
  1263  009697  057B               	dw	1403
  1264  009699  0587               	dw	1415
  1265  00969B  0594               	dw	1428
  1266  00969D  05A0               	dw	1440
  1267  00969F  05AD               	dw	1453
  1268  0096A1  05BA               	dw	1466
  1269  0096A3  05C7               	dw	1479
  1270  0096A5  05D4               	dw	1492
  1271  0096A7  05E2               	dw	1506
  1272  0096A9  05EF               	dw	1519
  1273  0096AB  05FD               	dw	1533
  1274  0096AD  060B               	dw	1547
  1275  0096AF  0619               	dw	1561
  1276  0096B1  0628               	dw	1576
  1277  0096B3  0637               	dw	1591
  1278  0096B5  0646               	dw	1606
  1279  0096B7  0655               	dw	1621
  1280  0096B9  0664               	dw	1636
  1281  0096BB  0674               	dw	1652
  1282  0096BD  0684               	dw	1668
  1283  0096BF  0694               	dw	1684
  1284  0096C1  06A4               	dw	1700
  1285  0096C3  06B5               	dw	1717
  1286  0096C5  06C6               	dw	1734
  1287  0096C7  06D7               	dw	1751
  1288  0096C9  06E9               	dw	1769
  1289  0096CB  06FA               	dw	1786
  1290  0096CD  070C               	dw	1804
  1291  0096CF  071F               	dw	1823
  1292  0096D1  0731               	dw	1841
  1293  0096D3  0744               	dw	1860
  1294  0096D5  0758               	dw	1880
  1295  0096D7  076B               	dw	1899
  1296  0096D9  077F               	dw	1919
  1297  0096DB  0793               	dw	1939
  1298  0096DD  07A8               	dw	1960
  1299  0096DF  07BD               	dw	1981
  1300  0096E1  07D2               	dw	2002
  1301  0096E3  07E8               	dw	2024
  1302  0096E5  07FE               	dw	2046
  1303  0096E7  0815               	dw	2069
  1304  0096E9  082C               	dw	2092
  1305  0096EB  0843               	dw	2115
  1306  0096ED  085B               	dw	2139
  1307  0096EF  0873               	dw	2163
  1308  0096F1  088B               	dw	2187
  1309  0096F3  08A5               	dw	2213
  1310  0096F5  08BE               	dw	2238
  1311  0096F7  08D8               	dw	2264
  1312  0096F9  08F2               	dw	2290
  1313  0096FB  090D               	dw	2317
  1314  0096FD  0929               	dw	2345
  1315  0096FF  0945               	dw	2373
  1316  009701  0961               	dw	2401
  1317  009703  097E               	dw	2430
  1318  009705  099C               	dw	2460
  1319  009707  09BA               	dw	2490
  1320  009709  09D9               	dw	2521
  1321  00970B  09F9               	dw	2553
  1322  00970D  0A19               	dw	2585
  1323  00970F  0A39               	dw	2617
  1324  009711  0A5B               	dw	2651
  1325  009713  0A7D               	dw	2685
  1326  009715  0A9F               	dw	2719
  1327  009717  0AC3               	dw	2755
  1328  009719  0AE7               	dw	2791
  1329  00971B  0B0C               	dw	2828
  1330  00971D  0B31               	dw	2865
  1331  00971F  0B58               	dw	2904
  1332  009721  0B7F               	dw	2943
  1333  009723  0BA7               	dw	2983
  1334  009725  0BD0               	dw	3024
  1335  009727  0BFA               	dw	3066
  1336  009729  0C25               	dw	3109
  1337  00972B  0C51               	dw	3153
  1338  00972D  0C7E               	dw	3198
  1339  00972F  0CAB               	dw	3243
  1340  009731  0CDA               	dw	3290
  1341  009733  0D0A               	dw	3338
  1342  009735  0D3B               	dw	3387
  1343  009737  0D6D               	dw	3437
  1344  009739  0DA0               	dw	3488
  1345  00973B  0DD4               	dw	3540
  1346  00973D  0E0A               	dw	3594
  1347  00973F  0E41               	dw	3649
  1348  009741  0E79               	dw	3705
  1349  009743  0EB3               	dw	3763
  1350  009745  0EEE               	dw	3822
  1351  009747  0F2A               	dw	3882
  1352  009749  0F68               	dw	3944
  1353  00974B  0FA8               	dw	4008
  1354  00974D  0FE9               	dw	4073
  1355  00974F  102C               	dw	4140
  1356  009751  1070               	dw	4208
  1357  009753  10B6               	dw	4278
  1358  009755  10FE               	dw	4350
  1359  009757  1148               	dw	4424
  1360  009759  1194               	dw	4500
  1361  00975B  11E2               	dw	4578
  1362  00975D  1232               	dw	4658
  1363  00975F  1285               	dw	4741
  1364  009761  12D9               	dw	4825
  1365  009763  1330               	dw	4912
  1366  009765  1389               	dw	5001
  1367  009767  13E5               	dw	5093
  1368  009769  1444               	dw	5188
  1369  00976B  14A5               	dw	5285
  1370  00976D  1509               	dw	5385
  1371  00976F  1570               	dw	5488
  1372  009771  15DA               	dw	5594
  1373  009773  1647               	dw	5703
  1374  009775  16B8               	dw	5816
  1375  009777  172B               	dw	5931
  1376  009779  17A3               	dw	6051
  1377  00977B  181E               	dw	6174
  1378  00977D  189D               	dw	6301
  1379  00977F  1921               	dw	6433
  1380  009781  19A8               	dw	6568
  1381  009783  1A34               	dw	6708
  1382  009785  1AC4               	dw	6852
  1383  009787  1B5A               	dw	7002
  1384  009789  1BF4               	dw	7156
  1385  00978B  1C94               	dw	7316
  1386  00978D  1D39               	dw	7481
  1387  00978F  1DE4               	dw	7652
  1388  009791  1E95               	dw	7829
  1389  009793  1F4C               	dw	8012
  1390  009795  200A               	dw	8202
  1391  009797  20CE               	dw	8398
  1392  009799  219A               	dw	8602
  1393  00979B  226E               	dw	8814
  1394  00979D  234A               	dw	9034
  1395  00979F  242E               	dw	9262
  1396  0097A1  251B               	dw	9499
  1397  0097A3  2612               	dw	9746
  1398  0097A5  2712               	dw	10002
  1399  0097A7  281D               	dw	10269
  1400  0097A9  2932               	dw	10546
  1401  0097AB  2A53               	dw	10835
  1402  0097AD  2B81               	dw	11137
  1403  0097AF  2CBB               	dw	11451
  1404  0097B1  2E03               	dw	11779
  1405  0097B3  2F5A               	dw	12122
  1406  0097B5  30C0               	dw	12480
  1407  0097B7  3236               	dw	12854
  1408  0097B9  33BD               	dw	13245
  1409  0097BB  3557               	dw	13655
  1410  0097BD  35F5               	dw	13813
  1411  0097BF  3661               	dw	13921
  1412  0097C1  36CD               	dw	14029
  1413  0097C3  373B               	dw	14139
  1414  0097C5  37AA               	dw	14250
  1415  0097C7  381B               	dw	14363
  1416  0097C9  388C               	dw	14476
  1417  0097CB  3900               	dw	14592
  1418  0097CD  3974               	dw	14708
  1419  0097CF  39EA               	dw	14826
  1420  0097D1  3A62               	dw	14946
  1421  0097D3  3ADB               	dw	15067
  1422  0097D5  3B55               	dw	15189
  1423  0097D7  3BD1               	dw	15313
  1424  0097D9  3C4E               	dw	15438
  1425  0097DB  3CCD               	dw	15565
  1426  0097DD  3D4E               	dw	15694
  1427  0097DF  3DD0               	dw	15824
  1428  0097E1  3E54               	dw	15956
  1429  0097E3  3EDA               	dw	16090
  1430  0097E5  3F61               	dw	16225
  1431  0097E7  3FEA               	dw	16362
  1432  0097E9  4074               	dw	16500
  1433  0097EB  4101               	dw	16641
  1434  0097ED  418F               	dw	16783
  1435  0097EF  421F               	dw	16927
  1436  0097F1  42B1               	dw	17073
  1437  0097F3  4345               	dw	17221
  1438  0097F5  43DB               	dw	17371
  1439  0097F7  4473               	dw	17523
  1440  0097F9  450D               	dw	17677
  1441  0097FB  45A9               	dw	17833
  1442  0097FD  4647               	dw	17991
  1443  0097FF  46E7               	dw	18151
  1444  009801  4789               	dw	18313
  1445  009803  482E               	dw	18478
  1446  009805  48D5               	dw	18645
  1447  009807  497E               	dw	18814
  1448  009809  4A29               	dw	18985
  1449  00980B  4AD7               	dw	19159
  1450  00980D  4B87               	dw	19335
  1451  00980F  4C3A               	dw	19514
  1452  009811  4CEF               	dw	19695
  1453  009813  4DA6               	dw	19878
  1454  009815  4E61               	dw	20065
  1455  009817  4F1E               	dw	20254
  1456  009819  4FDD               	dw	20445
  1457  00981B  50A0               	dw	20640
  1458  00981D  5165               	dw	20837
  1459  00981F  522D               	dw	21037
  1460  009821  52F8               	dw	21240
  1461  009823  53C6               	dw	21446
  1462  009825  5497               	dw	21655
  1463  009827  556B               	dw	21867
  1464  009829  5642               	dw	22082
  1465  00982B  571C               	dw	22300
  1466  00982D  57FA               	dw	22522
  1467  00982F                     __end_of_motor_steps_lookup:
  1468                           	opt stack 0
  1469  00982F                     _motor_postscaler_lookup:
  1470                           	opt stack 0
  1471  00982F  0C                 	db	12
  1472  009830  07                 	db	7
  1473  009831  05                 	db	5
  1474  009832  04                 	db	4
  1475  009833  04                 	db	4
  1476  009834  03                 	db	3
  1477  009835  03                 	db	3
  1478  009836  03                 	db	3
  1479  009837  02                 	db	2
  1480  009838  02                 	db	2
  1481  009839  02                 	db	2
  1482  00983A  02                 	db	2
  1483  00983B  02                 	db	2
  1484  00983C  02                 	db	2
  1485  00983D  01                 	db	1
  1486  00983E  01                 	db	1
  1487  00983F  01                 	db	1
  1488  009840  01                 	db	1
  1489  009841  01                 	db	1
  1490  009842  01                 	db	1
  1491  009843  01                 	db	1
  1492  009844  01                 	db	1
  1493  009845  01                 	db	1
  1494  009846  01                 	db	1
  1495  009847  01                 	db	1
  1496  009848  01                 	db	1
  1497  009849  01                 	db	1
  1498  00984A  01                 	db	1
  1499  00984B  01                 	db	1
  1500  00984C  01                 	db	1
  1501  00984D  01                 	db	1
  1502  00984E  01                 	db	1
  1503  00984F  01                 	db	1
  1504  009850  01                 	db	1
  1505  009851  01                 	db	1
  1506  009852  01                 	db	1
  1507  009853  01                 	db	1
  1508  009854  01                 	db	1
  1509  009855  01                 	db	1
  1510  009856  01                 	db	1
  1511  009857  01                 	db	1
  1512  009858  01                 	db	1
  1513  009859  01                 	db	1
  1514  00985A  01                 	db	1
  1515  00985B  01                 	db	1
  1516  00985C  01                 	db	1
  1517  00985D  01                 	db	1
  1518  00985E  01                 	db	1
  1519  00985F  01                 	db	1
  1520  009860  01                 	db	1
  1521  009861  01                 	db	1
  1522  009862  01                 	db	1
  1523  009863  01                 	db	1
  1524  009864  01                 	db	1
  1525  009865  01                 	db	1
  1526  009866  01                 	db	1
  1527  009867  01                 	db	1
  1528  009868  01                 	db	1
  1529  009869  01                 	db	1
  1530  00986A  01                 	db	1
  1531  00986B  01                 	db	1
  1532  00986C  01                 	db	1
  1533  00986D  01                 	db	1
  1534  00986E  01                 	db	1
  1535  00986F  01                 	db	1
  1536  009870  01                 	db	1
  1537  009871  01                 	db	1
  1538  009872  01                 	db	1
  1539  009873  01                 	db	1
  1540  009874  01                 	db	1
  1541  009875  01                 	db	1
  1542  009876  01                 	db	1
  1543  009877  01                 	db	1
  1544  009878  01                 	db	1
  1545  009879  01                 	db	1
  1546  00987A  01                 	db	1
  1547  00987B  01                 	db	1
  1548  00987C  01                 	db	1
  1549  00987D  01                 	db	1
  1550  00987E  01                 	db	1
  1551  00987F  01                 	db	1
  1552  009880  01                 	db	1
  1553  009881  01                 	db	1
  1554  009882  01                 	db	1
  1555  009883  01                 	db	1
  1556  009884  01                 	db	1
  1557  009885  01                 	db	1
  1558  009886  01                 	db	1
  1559  009887  01                 	db	1
  1560  009888  01                 	db	1
  1561  009889  01                 	db	1
  1562  00988A  00                 	db	0
  1563  00988B  00                 	db	0
  1564  00988C  00                 	db	0
  1565  00988D  00                 	db	0
  1566  00988E  00                 	db	0
  1567  00988F  00                 	db	0
  1568  009890  00                 	db	0
  1569  009891  00                 	db	0
  1570  009892  00                 	db	0
  1571  009893  00                 	db	0
  1572  009894  00                 	db	0
  1573  009895  00                 	db	0
  1574  009896  00                 	db	0
  1575  009897  00                 	db	0
  1576  009898  00                 	db	0
  1577  009899  00                 	db	0
  1578  00989A  00                 	db	0
  1579  00989B  00                 	db	0
  1580  00989C  00                 	db	0
  1581  00989D  00                 	db	0
  1582  00989E  00                 	db	0
  1583  00989F  00                 	db	0
  1584  0098A0  00                 	db	0
  1585  0098A1  00                 	db	0
  1586  0098A2  00                 	db	0
  1587  0098A3  00                 	db	0
  1588  0098A4  00                 	db	0
  1589  0098A5  00                 	db	0
  1590  0098A6  00                 	db	0
  1591  0098A7  00                 	db	0
  1592  0098A8  00                 	db	0
  1593  0098A9  00                 	db	0
  1594  0098AA  00                 	db	0
  1595  0098AB  00                 	db	0
  1596  0098AC  00                 	db	0
  1597  0098AD  00                 	db	0
  1598  0098AE  00                 	db	0
  1599  0098AF  00                 	db	0
  1600  0098B0  00                 	db	0
  1601  0098B1  00                 	db	0
  1602  0098B2  00                 	db	0
  1603  0098B3  00                 	db	0
  1604  0098B4  00                 	db	0
  1605  0098B5  00                 	db	0
  1606  0098B6  00                 	db	0
  1607  0098B7  00                 	db	0
  1608  0098B8  00                 	db	0
  1609  0098B9  00                 	db	0
  1610  0098BA  00                 	db	0
  1611  0098BB  00                 	db	0
  1612  0098BC  00                 	db	0
  1613  0098BD  00                 	db	0
  1614  0098BE  00                 	db	0
  1615  0098BF  00                 	db	0
  1616  0098C0  00                 	db	0
  1617  0098C1  00                 	db	0
  1618  0098C2  00                 	db	0
  1619  0098C3  00                 	db	0
  1620  0098C4  00                 	db	0
  1621  0098C5  00                 	db	0
  1622  0098C6  00                 	db	0
  1623  0098C7  00                 	db	0
  1624  0098C8  00                 	db	0
  1625  0098C9  00                 	db	0
  1626  0098CA  00                 	db	0
  1627  0098CB  00                 	db	0
  1628  0098CC  00                 	db	0
  1629  0098CD  00                 	db	0
  1630  0098CE  00                 	db	0
  1631  0098CF  00                 	db	0
  1632  0098D0  00                 	db	0
  1633  0098D1  00                 	db	0
  1634  0098D2  00                 	db	0
  1635  0098D3  00                 	db	0
  1636  0098D4  00                 	db	0
  1637  0098D5  00                 	db	0
  1638  0098D6  00                 	db	0
  1639  0098D7  00                 	db	0
  1640  0098D8  00                 	db	0
  1641  0098D9  00                 	db	0
  1642  0098DA  00                 	db	0
  1643  0098DB  00                 	db	0
  1644  0098DC  00                 	db	0
  1645  0098DD  00                 	db	0
  1646  0098DE  00                 	db	0
  1647  0098DF  00                 	db	0
  1648  0098E0  00                 	db	0
  1649  0098E1  00                 	db	0
  1650  0098E2  00                 	db	0
  1651  0098E3  00                 	db	0
  1652  0098E4  00                 	db	0
  1653  0098E5  00                 	db	0
  1654  0098E6  00                 	db	0
  1655  0098E7  00                 	db	0
  1656  0098E8  00                 	db	0
  1657  0098E9  00                 	db	0
  1658  0098EA  00                 	db	0
  1659  0098EB  00                 	db	0
  1660  0098EC  00                 	db	0
  1661  0098ED  00                 	db	0
  1662  0098EE  00                 	db	0
  1663  0098EF  00                 	db	0
  1664  0098F0  00                 	db	0
  1665  0098F1  00                 	db	0
  1666  0098F2  00                 	db	0
  1667  0098F3  00                 	db	0
  1668  0098F4  00                 	db	0
  1669  0098F5  00                 	db	0
  1670  0098F6  00                 	db	0
  1671  0098F7  00                 	db	0
  1672  0098F8  00                 	db	0
  1673  0098F9  00                 	db	0
  1674  0098FA  00                 	db	0
  1675  0098FB  00                 	db	0
  1676  0098FC  00                 	db	0
  1677  0098FD  00                 	db	0
  1678  0098FE  00                 	db	0
  1679  0098FF  00                 	db	0
  1680  009900  00                 	db	0
  1681  009901  00                 	db	0
  1682  009902  00                 	db	0
  1683  009903  00                 	db	0
  1684  009904  00                 	db	0
  1685  009905  00                 	db	0
  1686  009906  00                 	db	0
  1687  009907  00                 	db	0
  1688  009908  00                 	db	0
  1689  009909  00                 	db	0
  1690  00990A  00                 	db	0
  1691  00990B  00                 	db	0
  1692  00990C  00                 	db	0
  1693  00990D  00                 	db	0
  1694  00990E  00                 	db	0
  1695  00990F  00                 	db	0
  1696  009910  00                 	db	0
  1697  009911  00                 	db	0
  1698  009912  00                 	db	0
  1699  009913  00                 	db	0
  1700  009914  00                 	db	0
  1701  009915  00                 	db	0
  1702  009916  00                 	db	0
  1703  009917  00                 	db	0
  1704  009918  00                 	db	0
  1705  009919  00                 	db	0
  1706  00991A  00                 	db	0
  1707  00991B  00                 	db	0
  1708  00991C  00                 	db	0
  1709  00991D  00                 	db	0
  1710  00991E  00                 	db	0
  1711  00991F  00                 	db	0
  1712  009920  00                 	db	0
  1713  009921  00                 	db	0
  1714  009922  00                 	db	0
  1715  009923  00                 	db	0
  1716  009924  00                 	db	0
  1717  009925  00                 	db	0
  1718  009926  00                 	db	0
  1719  009927  00                 	db	0
  1720  009928  00                 	db	0
  1721  009929  00                 	db	0
  1722  00992A  00                 	db	0
  1723  00992B  00                 	db	0
  1724  00992C  00                 	db	0
  1725  00992D  00                 	db	0
  1726  00992E  00                 	db	0
  1727  00992F  00                 	db	0
  1728  009930  00                 	db	0
  1729  009931  00                 	db	0
  1730  009932  00                 	db	0
  1731  009933  00                 	db	0
  1732  009934  00                 	db	0
  1733  009935  00                 	db	0
  1734  009936  00                 	db	0
  1735  009937  00                 	db	0
  1736  009938  00                 	db	0
  1737  009939  00                 	db	0
  1738  00993A  00                 	db	0
  1739  00993B  00                 	db	0
  1740  00993C  00                 	db	0
  1741  00993D  00                 	db	0
  1742  00993E  00                 	db	0
  1743  00993F  00                 	db	0
  1744  009940  00                 	db	0
  1745  009941  00                 	db	0
  1746  009942  00                 	db	0
  1747  009943  00                 	db	0
  1748  009944  00                 	db	0
  1749  009945  00                 	db	0
  1750  009946  00                 	db	0
  1751  009947  00                 	db	0
  1752  009948  00                 	db	0
  1753  009949  00                 	db	0
  1754  00994A  00                 	db	0
  1755  00994B  00                 	db	0
  1756  00994C  00                 	db	0
  1757  00994D  00                 	db	0
  1758  00994E  00                 	db	0
  1759  00994F  00                 	db	0
  1760  009950  00                 	db	0
  1761  009951  00                 	db	0
  1762  009952  00                 	db	0
  1763  009953  00                 	db	0
  1764  009954  00                 	db	0
  1765  009955  00                 	db	0
  1766  009956  00                 	db	0
  1767  009957  00                 	db	0
  1768  009958  00                 	db	0
  1769  009959  00                 	db	0
  1770  00995A  00                 	db	0
  1771  00995B  00                 	db	0
  1772  00995C  00                 	db	0
  1773  00995D  00                 	db	0
  1774  00995E  00                 	db	0
  1775  00995F  00                 	db	0
  1776  009960  00                 	db	0
  1777  009961  00                 	db	0
  1778  009962  00                 	db	0
  1779  009963  00                 	db	0
  1780  009964  00                 	db	0
  1781  009965  00                 	db	0
  1782  009966  00                 	db	0
  1783  009967  00                 	db	0
  1784  009968  00                 	db	0
  1785  009969  00                 	db	0
  1786  00996A  00                 	db	0
  1787  00996B  00                 	db	0
  1788  00996C  00                 	db	0
  1789  00996D  00                 	db	0
  1790  00996E  00                 	db	0
  1791  00996F  00                 	db	0
  1792  009970  00                 	db	0
  1793  009971  00                 	db	0
  1794  009972  00                 	db	0
  1795  009973  00                 	db	0
  1796  009974  00                 	db	0
  1797  009975  00                 	db	0
  1798  009976  00                 	db	0
  1799  009977  00                 	db	0
  1800  009978  00                 	db	0
  1801  009979  00                 	db	0
  1802  00997A  00                 	db	0
  1803  00997B  00                 	db	0
  1804  00997C  00                 	db	0
  1805  00997D  00                 	db	0
  1806  00997E  00                 	db	0
  1807  00997F  00                 	db	0
  1808  009980  00                 	db	0
  1809  009981  00                 	db	0
  1810  009982  00                 	db	0
  1811  009983  00                 	db	0
  1812  009984  00                 	db	0
  1813  009985  00                 	db	0
  1814  009986  00                 	db	0
  1815  009987  00                 	db	0
  1816  009988  00                 	db	0
  1817  009989  00                 	db	0
  1818  00998A  00                 	db	0
  1819  00998B  00                 	db	0
  1820  00998C  00                 	db	0
  1821  00998D  00                 	db	0
  1822  00998E  00                 	db	0
  1823  00998F  00                 	db	0
  1824  009990  00                 	db	0
  1825  009991  00                 	db	0
  1826  009992  00                 	db	0
  1827  009993  00                 	db	0
  1828  009994  00                 	db	0
  1829  009995  00                 	db	0
  1830  009996  00                 	db	0
  1831  009997  00                 	db	0
  1832  009998  00                 	db	0
  1833  009999  00                 	db	0
  1834  00999A  00                 	db	0
  1835  00999B  00                 	db	0
  1836  00999C  00                 	db	0
  1837  00999D  00                 	db	0
  1838  00999E  00                 	db	0
  1839  00999F  00                 	db	0
  1840  0099A0  00                 	db	0
  1841  0099A1  00                 	db	0
  1842  0099A2  00                 	db	0
  1843  0099A3  00                 	db	0
  1844  0099A4  00                 	db	0
  1845  0099A5  00                 	db	0
  1846  0099A6  00                 	db	0
  1847  0099A7  00                 	db	0
  1848  0099A8  00                 	db	0
  1849  0099A9  00                 	db	0
  1850  0099AA  00                 	db	0
  1851  0099AB  00                 	db	0
  1852  0099AC  00                 	db	0
  1853  0099AD  00                 	db	0
  1854  0099AE  00                 	db	0
  1855  0099AF  00                 	db	0
  1856  0099B0  00                 	db	0
  1857  0099B1  00                 	db	0
  1858  0099B2  00                 	db	0
  1859  0099B3  00                 	db	0
  1860  0099B4  00                 	db	0
  1861  0099B5  00                 	db	0
  1862  0099B6  00                 	db	0
  1863  0099B7  00                 	db	0
  1864  0099B8  00                 	db	0
  1865  0099B9  00                 	db	0
  1866  0099BA  00                 	db	0
  1867  0099BB  00                 	db	0
  1868  0099BC  00                 	db	0
  1869  0099BD  00                 	db	0
  1870  0099BE  00                 	db	0
  1871  0099BF  00                 	db	0
  1872  0099C0  00                 	db	0
  1873  0099C1  00                 	db	0
  1874  0099C2  00                 	db	0
  1875  0099C3  00                 	db	0
  1876  0099C4  00                 	db	0
  1877  0099C5  00                 	db	0
  1878  0099C6  00                 	db	0
  1879  0099C7  00                 	db	0
  1880  0099C8  00                 	db	0
  1881  0099C9  00                 	db	0
  1882  0099CA  00                 	db	0
  1883  0099CB  00                 	db	0
  1884  0099CC  00                 	db	0
  1885  0099CD  00                 	db	0
  1886  0099CE  00                 	db	0
  1887  0099CF  00                 	db	0
  1888  0099D0  00                 	db	0
  1889  0099D1  00                 	db	0
  1890  0099D2  00                 	db	0
  1891  0099D3  00                 	db	0
  1892  0099D4  00                 	db	0
  1893  0099D5  00                 	db	0
  1894  0099D6  00                 	db	0
  1895  0099D7  00                 	db	0
  1896  0099D8  00                 	db	0
  1897  0099D9  00                 	db	0
  1898  0099DA  00                 	db	0
  1899  0099DB  00                 	db	0
  1900  0099DC  00                 	db	0
  1901  0099DD  00                 	db	0
  1902  0099DE  00                 	db	0
  1903  0099DF  00                 	db	0
  1904  0099E0  00                 	db	0
  1905  0099E1  00                 	db	0
  1906  0099E2  00                 	db	0
  1907  0099E3  00                 	db	0
  1908  0099E4  00                 	db	0
  1909  0099E5  00                 	db	0
  1910  0099E6  00                 	db	0
  1911  0099E7  00                 	db	0
  1912  0099E8  00                 	db	0
  1913  0099E9  00                 	db	0
  1914  0099EA  00                 	db	0
  1915  0099EB  00                 	db	0
  1916  0099EC  00                 	db	0
  1917  0099ED  00                 	db	0
  1918  0099EE  00                 	db	0
  1919  0099EF  00                 	db	0
  1920  0099F0  00                 	db	0
  1921  0099F1  00                 	db	0
  1922  0099F2  00                 	db	0
  1923  0099F3  00                 	db	0
  1924  0099F4  00                 	db	0
  1925  0099F5  00                 	db	0
  1926  0099F6  00                 	db	0
  1927  0099F7  00                 	db	0
  1928  0099F8  00                 	db	0
  1929  0099F9  00                 	db	0
  1930  0099FA  00                 	db	0
  1931  0099FB  00                 	db	0
  1932  0099FC  00                 	db	0
  1933  0099FD  00                 	db	0
  1934  0099FE  00                 	db	0
  1935  0099FF  00                 	db	0
  1936  009A00  00                 	db	0
  1937  009A01  00                 	db	0
  1938  009A02  00                 	db	0
  1939  009A03  00                 	db	0
  1940  009A04  00                 	db	0
  1941  009A05  00                 	db	0
  1942  009A06  00                 	db	0
  1943  009A07  00                 	db	0
  1944  009A08  00                 	db	0
  1945  009A09  00                 	db	0
  1946  009A0A  00                 	db	0
  1947  009A0B  00                 	db	0
  1948  009A0C  00                 	db	0
  1949  009A0D  00                 	db	0
  1950  009A0E  00                 	db	0
  1951  009A0F  00                 	db	0
  1952  009A10  00                 	db	0
  1953  009A11  00                 	db	0
  1954  009A12  00                 	db	0
  1955  009A13  00                 	db	0
  1956  009A14  00                 	db	0
  1957  009A15  00                 	db	0
  1958  009A16                     __end_of_motor_postscaler_lookup:
  1959                           	opt stack 0
  1960  009A16                     _motor_period_lookup:
  1961                           	opt stack 0
  1962  009A16  EC                 	db	236
  1963  009A17  F2                 	db	242
  1964  009A18  F6                 	db	246
  1965  009A19  F4                 	db	244
  1966  009A1A  D2                 	db	210
  1967  009A1B  E8                 	db	232
  1968  009A1C  D2                 	db	210
  1969  009A1D  C0                 	db	192
  1970  009A1E  EC                 	db	236
  1971  009A1F  DC                 	db	220
  1972  009A20  CF                 	db	207
  1973  009A21  C3                 	db	195
  1974  009A22  B9                 	db	185
  1975  009A23  B0                 	db	176
  1976  009A24  FC                 	db	252
  1977  009A25  F2                 	db	242
  1978  009A26  E8                 	db	232
  1979  009A27  DF                 	db	223
  1980  009A28  D7                 	db	215
  1981  009A29  D0                 	db	208
  1982  009A2A  CA                 	db	202
  1983  009A2B  C3                 	db	195
  1984  009A2C  BE                 	db	190
  1985  009A2D  B8                 	db	184
  1986  009A2E  B3                 	db	179
  1987  009A2F  AF                 	db	175
  1988  009A30  AA                 	db	170
  1989  009A31  A6                 	db	166
  1990  009A32  A2                 	db	162
  1991  009A33  9F                 	db	159
  1992  009A34  9B                 	db	155
  1993  009A35  98                 	db	152
  1994  009A36  95                 	db	149
  1995  009A37  92                 	db	146
  1996  009A38  8F                 	db	143
  1997  009A39  8C                 	db	140
  1998  009A3A  8A                 	db	138
  1999  009A3B  87                 	db	135
  2000  009A3C  85                 	db	133
  2001  009A3D  83                 	db	131
  2002  009A3E  81                 	db	129
  2003  009A3F  7F                 	db	127
  2004  009A40  7D                 	db	125
  2005  009A41  7B                 	db	123
  2006  009A42  79                 	db	121
  2007  009A43  77                 	db	119
  2008  009A44  75                 	db	117
  2009  009A45  74                 	db	116
  2010  009A46  72                 	db	114
  2011  009A47  71                 	db	113
  2012  009A48  6F                 	db	111
  2013  009A49  6E                 	db	110
  2014  009A4A  6C                 	db	108
  2015  009A4B  6B                 	db	107
  2016  009A4C  6A                 	db	106
  2017  009A4D  68                 	db	104
  2018  009A4E  67                 	db	103
  2019  009A4F  66                 	db	102
  2020  009A50  65                 	db	101
  2021  009A51  64                 	db	100
  2022  009A52  62                 	db	98
  2023  009A53  61                 	db	97
  2024  009A54  60                 	db	96
  2025  009A55  5F                 	db	95
  2026  009A56  5E                 	db	94
  2027  009A57  5D                 	db	93
  2028  009A58  5C                 	db	92
  2029  009A59  5B                 	db	91
  2030  009A5A  59                 	db	89
  2031  009A5B  57                 	db	87
  2032  009A5C  56                 	db	86
  2033  009A5D  54                 	db	84
  2034  009A5E  53                 	db	83
  2035  009A5F  51                 	db	81
  2036  009A60  50                 	db	80
  2037  009A61  4F                 	db	79
  2038  009A62  4E                 	db	78
  2039  009A63  4C                 	db	76
  2040  009A64  4B                 	db	75
  2041  009A65  4A                 	db	74
  2042  009A66  49                 	db	73
  2043  009A67  48                 	db	72
  2044  009A68  47                 	db	71
  2045  009A69  46                 	db	70
  2046  009A6A  45                 	db	69
  2047  009A6B  44                 	db	68
  2048  009A6C  43                 	db	67
  2049  009A6D  42                 	db	66
  2050  009A6E  41                 	db	65
  2051  009A6F  40                 	db	64
  2052  009A70  3F                 	db	63
  2053  009A71  FE                 	db	254
  2054  009A72  FB                 	db	251
  2055  009A73  F8                 	db	248
  2056  009A74  F6                 	db	246
  2057  009A75  F3                 	db	243
  2058  009A76  F0                 	db	240
  2059  009A77  EE                 	db	238
  2060  009A78  EC                 	db	236
  2061  009A79  E9                 	db	233
  2062  009A7A  E7                 	db	231
  2063  009A7B  E5                 	db	229
  2064  009A7C  E3                 	db	227
  2065  009A7D  E0                 	db	224
  2066  009A7E  DE                 	db	222
  2067  009A7F  DC                 	db	220
  2068  009A80  DA                 	db	218
  2069  009A81  D8                 	db	216
  2070  009A82  D7                 	db	215
  2071  009A83  D5                 	db	213
  2072  009A84  D3                 	db	211
  2073  009A85  D1                 	db	209
  2074  009A86  CF                 	db	207
  2075  009A87  CE                 	db	206
  2076  009A88  CC                 	db	204
  2077  009A89  CA                 	db	202
  2078  009A8A  C9                 	db	201
  2079  009A8B  C7                 	db	199
  2080  009A8C  C6                 	db	198
  2081  009A8D  C4                 	db	196
  2082  009A8E  C3                 	db	195
  2083  009A8F  C1                 	db	193
  2084  009A90  C0                 	db	192
  2085  009A91  BE                 	db	190
  2086  009A92  BD                 	db	189
  2087  009A93  BC                 	db	188
  2088  009A94  BA                 	db	186
  2089  009A95  B8                 	db	184
  2090  009A96  B6                 	db	182
  2091  009A97  B4                 	db	180
  2092  009A98  B3                 	db	179
  2093  009A99  B1                 	db	177
  2094  009A9A  AF                 	db	175
  2095  009A9B  AE                 	db	174
  2096  009A9C  AC                 	db	172
  2097  009A9D  AA                 	db	170
  2098  009A9E  A9                 	db	169
  2099  009A9F  A7                 	db	167
  2100  009AA0  A6                 	db	166
  2101  009AA1  A4                 	db	164
  2102  009AA2  A3                 	db	163
  2103  009AA3  A1                 	db	161
  2104  009AA4  A0                 	db	160
  2105  009AA5  9F                 	db	159
  2106  009AA6  9D                 	db	157
  2107  009AA7  9C                 	db	156
  2108  009AA8  9B                 	db	155
  2109  009AA9  9A                 	db	154
  2110  009AAA  98                 	db	152
  2111  009AAB  97                 	db	151
  2112  009AAC  96                 	db	150
  2113  009AAD  95                 	db	149
  2114  009AAE  94                 	db	148
  2115  009AAF  93                 	db	147
  2116  009AB0  92                 	db	146
  2117  009AB1  90                 	db	144
  2118  009AB2  8F                 	db	143
  2119  009AB3  8E                 	db	142
  2120  009AB4  8D                 	db	141
  2121  009AB5  8C                 	db	140
  2122  009AB6  8B                 	db	139
  2123  009AB7  8A                 	db	138
  2124  009AB8  89                 	db	137
  2125  009AB9  88                 	db	136
  2126  009ABA  87                 	db	135
  2127  009ABB  86                 	db	134
  2128  009ABC  85                 	db	133
  2129  009ABD  84                 	db	132
  2130  009ABE  83                 	db	131
  2131  009ABF  82                 	db	130
  2132  009AC0  81                 	db	129
  2133  009AC1  80                 	db	128
  2134  009AC2  7F                 	db	127
  2135  009AC3  7E                 	db	126
  2136  009AC4  7D                 	db	125
  2137  009AC5  7C                 	db	124
  2138  009AC6  7B                 	db	123
  2139  009AC7  7A                 	db	122
  2140  009AC8  79                 	db	121
  2141  009AC9  78                 	db	120
  2142  009ACA  77                 	db	119
  2143  009ACB  76                 	db	118
  2144  009ACC  75                 	db	117
  2145  009ACD  74                 	db	116
  2146  009ACE  73                 	db	115
  2147  009ACF  72                 	db	114
  2148  009AD0  71                 	db	113
  2149  009AD1  70                 	db	112
  2150  009AD2  6F                 	db	111
  2151  009AD3  6E                 	db	110
  2152  009AD4  6D                 	db	109
  2153  009AD5  6C                 	db	108
  2154  009AD6  6B                 	db	107
  2155  009AD7  6A                 	db	106
  2156  009AD8  69                 	db	105
  2157  009AD9  68                 	db	104
  2158  009ADA  67                 	db	103
  2159  009ADB  66                 	db	102
  2160  009ADC  65                 	db	101
  2161  009ADD  64                 	db	100
  2162  009ADE  63                 	db	99
  2163  009ADF  62                 	db	98
  2164  009AE0  61                 	db	97
  2165  009AE1  60                 	db	96
  2166  009AE2  5F                 	db	95
  2167  009AE3  5E                 	db	94
  2168  009AE4  5D                 	db	93
  2169  009AE5  5C                 	db	92
  2170  009AE6  5B                 	db	91
  2171  009AE7  5A                 	db	90
  2172  009AE8  59                 	db	89
  2173  009AE9  58                 	db	88
  2174  009AEA  57                 	db	87
  2175  009AEB  56                 	db	86
  2176  009AEC  55                 	db	85
  2177  009AED  54                 	db	84
  2178  009AEE  53                 	db	83
  2179  009AEF  52                 	db	82
  2180  009AF0  51                 	db	81
  2181  009AF1  50                 	db	80
  2182  009AF2  4F                 	db	79
  2183  009AF3  4E                 	db	78
  2184  009AF4  4D                 	db	77
  2185  009AF5  4C                 	db	76
  2186  009AF6  4B                 	db	75
  2187  009AF7  4A                 	db	74
  2188  009AF8  49                 	db	73
  2189  009AF9  48                 	db	72
  2190  009AFA  47                 	db	71
  2191  009AFB  46                 	db	70
  2192  009AFC  45                 	db	69
  2193  009AFD  44                 	db	68
  2194  009AFE  43                 	db	67
  2195  009AFF  42                 	db	66
  2196  009B00  41                 	db	65
  2197  009B01  40                 	db	64
  2198  009B02  3F                 	db	63
  2199  009B03  FF                 	db	255
  2200  009B04  FE                 	db	254
  2201  009B05  FD                 	db	253
  2202  009B06  FC                 	db	252
  2203  009B07  FB                 	db	251
  2204  009B08  FA                 	db	250
  2205  009B09  F9                 	db	249
  2206  009B0A  F8                 	db	248
  2207  009B0B  F7                 	db	247
  2208  009B0C  F6                 	db	246
  2209  009B0D  F5                 	db	245
  2210  009B0E  F4                 	db	244
  2211  009B0F  F3                 	db	243
  2212  009B10  F2                 	db	242
  2213  009B11  F1                 	db	241
  2214  009B12  F0                 	db	240
  2215  009B13  EF                 	db	239
  2216  009B14  EE                 	db	238
  2217  009B15  ED                 	db	237
  2218  009B16  EC                 	db	236
  2219  009B17  EB                 	db	235
  2220  009B18  EA                 	db	234
  2221  009B19  E9                 	db	233
  2222  009B1A  E8                 	db	232
  2223  009B1B  E7                 	db	231
  2224  009B1C  E6                 	db	230
  2225  009B1D  E5                 	db	229
  2226  009B1E  E4                 	db	228
  2227  009B1F  E3                 	db	227
  2228  009B20  E2                 	db	226
  2229  009B21  E1                 	db	225
  2230  009B22  E0                 	db	224
  2231  009B23  DF                 	db	223
  2232  009B24  DE                 	db	222
  2233  009B25  DD                 	db	221
  2234  009B26  DC                 	db	220
  2235  009B27  DB                 	db	219
  2236  009B28  DA                 	db	218
  2237  009B29  D9                 	db	217
  2238  009B2A  D8                 	db	216
  2239  009B2B  D7                 	db	215
  2240  009B2C  D6                 	db	214
  2241  009B2D  D5                 	db	213
  2242  009B2E  D4                 	db	212
  2243  009B2F  D3                 	db	211
  2244  009B30  D2                 	db	210
  2245  009B31  D1                 	db	209
  2246  009B32  D0                 	db	208
  2247  009B33  CF                 	db	207
  2248  009B34  CE                 	db	206
  2249  009B35  CD                 	db	205
  2250  009B36  CC                 	db	204
  2251  009B37  CB                 	db	203
  2252  009B38  CA                 	db	202
  2253  009B39  C9                 	db	201
  2254  009B3A  C8                 	db	200
  2255  009B3B  C7                 	db	199
  2256  009B3C  C6                 	db	198
  2257  009B3D  C5                 	db	197
  2258  009B3E  C4                 	db	196
  2259  009B3F  C3                 	db	195
  2260  009B40  C2                 	db	194
  2261  009B41  C1                 	db	193
  2262  009B42  C0                 	db	192
  2263  009B43  BF                 	db	191
  2264  009B44  BE                 	db	190
  2265  009B45  BD                 	db	189
  2266  009B46  BC                 	db	188
  2267  009B47  BB                 	db	187
  2268  009B48  BA                 	db	186
  2269  009B49  B9                 	db	185
  2270  009B4A  B8                 	db	184
  2271  009B4B  B7                 	db	183
  2272  009B4C  B6                 	db	182
  2273  009B4D  B5                 	db	181
  2274  009B4E  B4                 	db	180
  2275  009B4F  B3                 	db	179
  2276  009B50  B2                 	db	178
  2277  009B51  B1                 	db	177
  2278  009B52  B0                 	db	176
  2279  009B53  AF                 	db	175
  2280  009B54  AE                 	db	174
  2281  009B55  AD                 	db	173
  2282  009B56  AC                 	db	172
  2283  009B57  AB                 	db	171
  2284  009B58  AA                 	db	170
  2285  009B59  A9                 	db	169
  2286  009B5A  A8                 	db	168
  2287  009B5B  A7                 	db	167
  2288  009B5C  A6                 	db	166
  2289  009B5D  A5                 	db	165
  2290  009B5E  A4                 	db	164
  2291  009B5F  A3                 	db	163
  2292  009B60  A2                 	db	162
  2293  009B61  A1                 	db	161
  2294  009B62  A0                 	db	160
  2295  009B63  9F                 	db	159
  2296  009B64  9E                 	db	158
  2297  009B65  9D                 	db	157
  2298  009B66  9C                 	db	156
  2299  009B67  9B                 	db	155
  2300  009B68  9A                 	db	154
  2301  009B69  99                 	db	153
  2302  009B6A  98                 	db	152
  2303  009B6B  97                 	db	151
  2304  009B6C  96                 	db	150
  2305  009B6D  95                 	db	149
  2306  009B6E  94                 	db	148
  2307  009B6F  93                 	db	147
  2308  009B70  92                 	db	146
  2309  009B71  91                 	db	145
  2310  009B72  90                 	db	144
  2311  009B73  8F                 	db	143
  2312  009B74  8E                 	db	142
  2313  009B75  8D                 	db	141
  2314  009B76  8C                 	db	140
  2315  009B77  8B                 	db	139
  2316  009B78  8A                 	db	138
  2317  009B79  89                 	db	137
  2318  009B7A  88                 	db	136
  2319  009B7B  87                 	db	135
  2320  009B7C  86                 	db	134
  2321  009B7D  85                 	db	133
  2322  009B7E  84                 	db	132
  2323  009B7F  83                 	db	131
  2324  009B80  82                 	db	130
  2325  009B81  81                 	db	129
  2326  009B82  80                 	db	128
  2327  009B83  7F                 	db	127
  2328  009B84  7E                 	db	126
  2329  009B85  7D                 	db	125
  2330  009B86  7C                 	db	124
  2331  009B87  7B                 	db	123
  2332  009B88  7A                 	db	122
  2333  009B89  79                 	db	121
  2334  009B8A  78                 	db	120
  2335  009B8B  77                 	db	119
  2336  009B8C  76                 	db	118
  2337  009B8D  75                 	db	117
  2338  009B8E  74                 	db	116
  2339  009B8F  73                 	db	115
  2340  009B90  72                 	db	114
  2341  009B91  71                 	db	113
  2342  009B92  70                 	db	112
  2343  009B93  6F                 	db	111
  2344  009B94  6E                 	db	110
  2345  009B95  6D                 	db	109
  2346  009B96  6C                 	db	108
  2347  009B97  6B                 	db	107
  2348  009B98  6A                 	db	106
  2349  009B99  69                 	db	105
  2350  009B9A  68                 	db	104
  2351  009B9B  67                 	db	103
  2352  009B9C  66                 	db	102
  2353  009B9D  65                 	db	101
  2354  009B9E  64                 	db	100
  2355  009B9F  63                 	db	99
  2356  009BA0  62                 	db	98
  2357  009BA1  61                 	db	97
  2358  009BA2  60                 	db	96
  2359  009BA3  5F                 	db	95
  2360  009BA4  5E                 	db	94
  2361  009BA5  5D                 	db	93
  2362  009BA6  5C                 	db	92
  2363  009BA7  5B                 	db	91
  2364  009BA8  5A                 	db	90
  2365  009BA9  59                 	db	89
  2366  009BAA  58                 	db	88
  2367  009BAB  57                 	db	87
  2368  009BAC  56                 	db	86
  2369  009BAD  55                 	db	85
  2370  009BAE  54                 	db	84
  2371  009BAF  53                 	db	83
  2372  009BB0  52                 	db	82
  2373  009BB1  51                 	db	81
  2374  009BB2  50                 	db	80
  2375  009BB3  4F                 	db	79
  2376  009BB4  4E                 	db	78
  2377  009BB5  4D                 	db	77
  2378  009BB6  4C                 	db	76
  2379  009BB7  4B                 	db	75
  2380  009BB8  4A                 	db	74
  2381  009BB9  49                 	db	73
  2382  009BBA  48                 	db	72
  2383  009BBB  47                 	db	71
  2384  009BBC  46                 	db	70
  2385  009BBD  45                 	db	69
  2386  009BBE  44                 	db	68
  2387  009BBF  43                 	db	67
  2388  009BC0  42                 	db	66
  2389  009BC1  41                 	db	65
  2390  009BC2  40                 	db	64
  2391  009BC3  3F                 	db	63
  2392  009BC4  FF                 	db	255
  2393  009BC5  FE                 	db	254
  2394  009BC6  FD                 	db	253
  2395  009BC7  FC                 	db	252
  2396  009BC8  FB                 	db	251
  2397  009BC9  FA                 	db	250
  2398  009BCA  F9                 	db	249
  2399  009BCB  F8                 	db	248
  2400  009BCC  F7                 	db	247
  2401  009BCD  F6                 	db	246
  2402  009BCE  F5                 	db	245
  2403  009BCF  F4                 	db	244
  2404  009BD0  F3                 	db	243
  2405  009BD1  F2                 	db	242
  2406  009BD2  F1                 	db	241
  2407  009BD3  F0                 	db	240
  2408  009BD4  EF                 	db	239
  2409  009BD5  EE                 	db	238
  2410  009BD6  ED                 	db	237
  2411  009BD7  EC                 	db	236
  2412  009BD8  EB                 	db	235
  2413  009BD9  EA                 	db	234
  2414  009BDA  E9                 	db	233
  2415  009BDB  E8                 	db	232
  2416  009BDC  E7                 	db	231
  2417  009BDD  E6                 	db	230
  2418  009BDE  E5                 	db	229
  2419  009BDF  E4                 	db	228
  2420  009BE0  E3                 	db	227
  2421  009BE1  E2                 	db	226
  2422  009BE2  E1                 	db	225
  2423  009BE3  E0                 	db	224
  2424  009BE4  DF                 	db	223
  2425  009BE5  DE                 	db	222
  2426  009BE6  DD                 	db	221
  2427  009BE7  DC                 	db	220
  2428  009BE8  DB                 	db	219
  2429  009BE9  DA                 	db	218
  2430  009BEA  D9                 	db	217
  2431  009BEB  D8                 	db	216
  2432  009BEC  D7                 	db	215
  2433  009BED  D6                 	db	214
  2434  009BEE  D5                 	db	213
  2435  009BEF  D4                 	db	212
  2436  009BF0  D3                 	db	211
  2437  009BF1  D2                 	db	210
  2438  009BF2  D1                 	db	209
  2439  009BF3  D0                 	db	208
  2440  009BF4  CF                 	db	207
  2441  009BF5  CE                 	db	206
  2442  009BF6  CD                 	db	205
  2443  009BF7  CC                 	db	204
  2444  009BF8  CB                 	db	203
  2445  009BF9  CA                 	db	202
  2446  009BFA  C9                 	db	201
  2447  009BFB  C8                 	db	200
  2448  009BFC  C7                 	db	199
  2449  009BFD                     __end_of_motor_period_lookup:
  2450                           	opt stack 0
  2451  009BFD                     _motor_prescaler_lookup:
  2452                           	opt stack 0
  2453  009BFD  02                 	db	2
  2454  009BFE  02                 	db	2
  2455  009BFF  02                 	db	2
  2456  009C00  02                 	db	2
  2457  009C01  02                 	db	2
  2458  009C02  02                 	db	2
  2459  009C03  02                 	db	2
  2460  009C04  02                 	db	2
  2461  009C05  02                 	db	2
  2462  009C06  02                 	db	2
  2463  009C07  02                 	db	2
  2464  009C08  02                 	db	2
  2465  009C09  02                 	db	2
  2466  009C0A  02                 	db	2
  2467  009C0B  02                 	db	2
  2468  009C0C  02                 	db	2
  2469  009C0D  02                 	db	2
  2470  009C0E  02                 	db	2
  2471  009C0F  02                 	db	2
  2472  009C10  02                 	db	2
  2473  009C11  02                 	db	2
  2474  009C12  02                 	db	2
  2475  009C13  02                 	db	2
  2476  009C14  02                 	db	2
  2477  009C15  02                 	db	2
  2478  009C16  02                 	db	2
  2479  009C17  02                 	db	2
  2480  009C18  02                 	db	2
  2481  009C19  02                 	db	2
  2482  009C1A  02                 	db	2
  2483  009C1B  02                 	db	2
  2484  009C1C  02                 	db	2
  2485  009C1D  02                 	db	2
  2486  009C1E  02                 	db	2
  2487  009C1F  02                 	db	2
  2488  009C20  02                 	db	2
  2489  009C21  02                 	db	2
  2490  009C22  02                 	db	2
  2491  009C23  02                 	db	2
  2492  009C24  02                 	db	2
  2493  009C25  02                 	db	2
  2494  009C26  02                 	db	2
  2495  009C27  02                 	db	2
  2496  009C28  02                 	db	2
  2497  009C29  02                 	db	2
  2498  009C2A  02                 	db	2
  2499  009C2B  02                 	db	2
  2500  009C2C  02                 	db	2
  2501  009C2D  02                 	db	2
  2502  009C2E  02                 	db	2
  2503  009C2F  02                 	db	2
  2504  009C30  02                 	db	2
  2505  009C31  02                 	db	2
  2506  009C32  02                 	db	2
  2507  009C33  02                 	db	2
  2508  009C34  02                 	db	2
  2509  009C35  02                 	db	2
  2510  009C36  02                 	db	2
  2511  009C37  02                 	db	2
  2512  009C38  02                 	db	2
  2513  009C39  02                 	db	2
  2514  009C3A  02                 	db	2
  2515  009C3B  02                 	db	2
  2516  009C3C  02                 	db	2
  2517  009C3D  02                 	db	2
  2518  009C3E  02                 	db	2
  2519  009C3F  02                 	db	2
  2520  009C40  02                 	db	2
  2521  009C41  02                 	db	2
  2522  009C42  02                 	db	2
  2523  009C43  02                 	db	2
  2524  009C44  02                 	db	2
  2525  009C45  02                 	db	2
  2526  009C46  02                 	db	2
  2527  009C47  02                 	db	2
  2528  009C48  02                 	db	2
  2529  009C49  02                 	db	2
  2530  009C4A  02                 	db	2
  2531  009C4B  02                 	db	2
  2532  009C4C  02                 	db	2
  2533  009C4D  02                 	db	2
  2534  009C4E  02                 	db	2
  2535  009C4F  02                 	db	2
  2536  009C50  02                 	db	2
  2537  009C51  02                 	db	2
  2538  009C52  02                 	db	2
  2539  009C53  02                 	db	2
  2540  009C54  02                 	db	2
  2541  009C55  02                 	db	2
  2542  009C56  02                 	db	2
  2543  009C57  02                 	db	2
  2544  009C58  02                 	db	2
  2545  009C59  02                 	db	2
  2546  009C5A  02                 	db	2
  2547  009C5B  02                 	db	2
  2548  009C5C  02                 	db	2
  2549  009C5D  02                 	db	2
  2550  009C5E  02                 	db	2
  2551  009C5F  02                 	db	2
  2552  009C60  02                 	db	2
  2553  009C61  02                 	db	2
  2554  009C62  02                 	db	2
  2555  009C63  02                 	db	2
  2556  009C64  02                 	db	2
  2557  009C65  02                 	db	2
  2558  009C66  02                 	db	2
  2559  009C67  02                 	db	2
  2560  009C68  02                 	db	2
  2561  009C69  02                 	db	2
  2562  009C6A  02                 	db	2
  2563  009C6B  02                 	db	2
  2564  009C6C  02                 	db	2
  2565  009C6D  02                 	db	2
  2566  009C6E  02                 	db	2
  2567  009C6F  02                 	db	2
  2568  009C70  02                 	db	2
  2569  009C71  02                 	db	2
  2570  009C72  02                 	db	2
  2571  009C73  02                 	db	2
  2572  009C74  02                 	db	2
  2573  009C75  02                 	db	2
  2574  009C76  02                 	db	2
  2575  009C77  02                 	db	2
  2576  009C78  02                 	db	2
  2577  009C79  02                 	db	2
  2578  009C7A  02                 	db	2
  2579  009C7B  02                 	db	2
  2580  009C7C  02                 	db	2
  2581  009C7D  02                 	db	2
  2582  009C7E  02                 	db	2
  2583  009C7F  02                 	db	2
  2584  009C80  02                 	db	2
  2585  009C81  02                 	db	2
  2586  009C82  02                 	db	2
  2587  009C83  02                 	db	2
  2588  009C84  02                 	db	2
  2589  009C85  02                 	db	2
  2590  009C86  02                 	db	2
  2591  009C87  02                 	db	2
  2592  009C88  02                 	db	2
  2593  009C89  02                 	db	2
  2594  009C8A  02                 	db	2
  2595  009C8B  02                 	db	2
  2596  009C8C  02                 	db	2
  2597  009C8D  02                 	db	2
  2598  009C8E  02                 	db	2
  2599  009C8F  02                 	db	2
  2600  009C90  02                 	db	2
  2601  009C91  02                 	db	2
  2602  009C92  02                 	db	2
  2603  009C93  02                 	db	2
  2604  009C94  02                 	db	2
  2605  009C95  02                 	db	2
  2606  009C96  02                 	db	2
  2607  009C97  02                 	db	2
  2608  009C98  02                 	db	2
  2609  009C99  02                 	db	2
  2610  009C9A  02                 	db	2
  2611  009C9B  02                 	db	2
  2612  009C9C  02                 	db	2
  2613  009C9D  02                 	db	2
  2614  009C9E  02                 	db	2
  2615  009C9F  02                 	db	2
  2616  009CA0  02                 	db	2
  2617  009CA1  02                 	db	2
  2618  009CA2  02                 	db	2
  2619  009CA3  02                 	db	2
  2620  009CA4  02                 	db	2
  2621  009CA5  02                 	db	2
  2622  009CA6  02                 	db	2
  2623  009CA7  02                 	db	2
  2624  009CA8  02                 	db	2
  2625  009CA9  02                 	db	2
  2626  009CAA  02                 	db	2
  2627  009CAB  02                 	db	2
  2628  009CAC  02                 	db	2
  2629  009CAD  02                 	db	2
  2630  009CAE  02                 	db	2
  2631  009CAF  02                 	db	2
  2632  009CB0  02                 	db	2
  2633  009CB1  02                 	db	2
  2634  009CB2  02                 	db	2
  2635  009CB3  02                 	db	2
  2636  009CB4  02                 	db	2
  2637  009CB5  02                 	db	2
  2638  009CB6  02                 	db	2
  2639  009CB7  02                 	db	2
  2640  009CB8  02                 	db	2
  2641  009CB9  02                 	db	2
  2642  009CBA  02                 	db	2
  2643  009CBB  02                 	db	2
  2644  009CBC  02                 	db	2
  2645  009CBD  02                 	db	2
  2646  009CBE  02                 	db	2
  2647  009CBF  02                 	db	2
  2648  009CC0  02                 	db	2
  2649  009CC1  02                 	db	2
  2650  009CC2  02                 	db	2
  2651  009CC3  02                 	db	2
  2652  009CC4  02                 	db	2
  2653  009CC5  02                 	db	2
  2654  009CC6  02                 	db	2
  2655  009CC7  02                 	db	2
  2656  009CC8  02                 	db	2
  2657  009CC9  02                 	db	2
  2658  009CCA  02                 	db	2
  2659  009CCB  02                 	db	2
  2660  009CCC  02                 	db	2
  2661  009CCD  02                 	db	2
  2662  009CCE  02                 	db	2
  2663  009CCF  02                 	db	2
  2664  009CD0  02                 	db	2
  2665  009CD1  02                 	db	2
  2666  009CD2  02                 	db	2
  2667  009CD3  02                 	db	2
  2668  009CD4  02                 	db	2
  2669  009CD5  02                 	db	2
  2670  009CD6  02                 	db	2
  2671  009CD7  02                 	db	2
  2672  009CD8  02                 	db	2
  2673  009CD9  02                 	db	2
  2674  009CDA  02                 	db	2
  2675  009CDB  02                 	db	2
  2676  009CDC  02                 	db	2
  2677  009CDD  02                 	db	2
  2678  009CDE  02                 	db	2
  2679  009CDF  02                 	db	2
  2680  009CE0  02                 	db	2
  2681  009CE1  02                 	db	2
  2682  009CE2  02                 	db	2
  2683  009CE3  02                 	db	2
  2684  009CE4  02                 	db	2
  2685  009CE5  02                 	db	2
  2686  009CE6  02                 	db	2
  2687  009CE7  02                 	db	2
  2688  009CE8  02                 	db	2
  2689  009CE9  02                 	db	2
  2690  009CEA  01                 	db	1
  2691  009CEB  01                 	db	1
  2692  009CEC  01                 	db	1
  2693  009CED  01                 	db	1
  2694  009CEE  01                 	db	1
  2695  009CEF  01                 	db	1
  2696  009CF0  01                 	db	1
  2697  009CF1  01                 	db	1
  2698  009CF2  01                 	db	1
  2699  009CF3  01                 	db	1
  2700  009CF4  01                 	db	1
  2701  009CF5  01                 	db	1
  2702  009CF6  01                 	db	1
  2703  009CF7  01                 	db	1
  2704  009CF8  01                 	db	1
  2705  009CF9  01                 	db	1
  2706  009CFA  01                 	db	1
  2707  009CFB  01                 	db	1
  2708  009CFC  01                 	db	1
  2709  009CFD  01                 	db	1
  2710  009CFE  01                 	db	1
  2711  009CFF  01                 	db	1
  2712  009D00  01                 	db	1
  2713  009D01  01                 	db	1
  2714  009D02  01                 	db	1
  2715  009D03  01                 	db	1
  2716  009D04  01                 	db	1
  2717  009D05  01                 	db	1
  2718  009D06  01                 	db	1
  2719  009D07  01                 	db	1
  2720  009D08  01                 	db	1
  2721  009D09  01                 	db	1
  2722  009D0A  01                 	db	1
  2723  009D0B  01                 	db	1
  2724  009D0C  01                 	db	1
  2725  009D0D  01                 	db	1
  2726  009D0E  01                 	db	1
  2727  009D0F  01                 	db	1
  2728  009D10  01                 	db	1
  2729  009D11  01                 	db	1
  2730  009D12  01                 	db	1
  2731  009D13  01                 	db	1
  2732  009D14  01                 	db	1
  2733  009D15  01                 	db	1
  2734  009D16  01                 	db	1
  2735  009D17  01                 	db	1
  2736  009D18  01                 	db	1
  2737  009D19  01                 	db	1
  2738  009D1A  01                 	db	1
  2739  009D1B  01                 	db	1
  2740  009D1C  01                 	db	1
  2741  009D1D  01                 	db	1
  2742  009D1E  01                 	db	1
  2743  009D1F  01                 	db	1
  2744  009D20  01                 	db	1
  2745  009D21  01                 	db	1
  2746  009D22  01                 	db	1
  2747  009D23  01                 	db	1
  2748  009D24  01                 	db	1
  2749  009D25  01                 	db	1
  2750  009D26  01                 	db	1
  2751  009D27  01                 	db	1
  2752  009D28  01                 	db	1
  2753  009D29  01                 	db	1
  2754  009D2A  01                 	db	1
  2755  009D2B  01                 	db	1
  2756  009D2C  01                 	db	1
  2757  009D2D  01                 	db	1
  2758  009D2E  01                 	db	1
  2759  009D2F  01                 	db	1
  2760  009D30  01                 	db	1
  2761  009D31  01                 	db	1
  2762  009D32  01                 	db	1
  2763  009D33  01                 	db	1
  2764  009D34  01                 	db	1
  2765  009D35  01                 	db	1
  2766  009D36  01                 	db	1
  2767  009D37  01                 	db	1
  2768  009D38  01                 	db	1
  2769  009D39  01                 	db	1
  2770  009D3A  01                 	db	1
  2771  009D3B  01                 	db	1
  2772  009D3C  01                 	db	1
  2773  009D3D  01                 	db	1
  2774  009D3E  01                 	db	1
  2775  009D3F  01                 	db	1
  2776  009D40  01                 	db	1
  2777  009D41  01                 	db	1
  2778  009D42  01                 	db	1
  2779  009D43  01                 	db	1
  2780  009D44  01                 	db	1
  2781  009D45  01                 	db	1
  2782  009D46  01                 	db	1
  2783  009D47  01                 	db	1
  2784  009D48  01                 	db	1
  2785  009D49  01                 	db	1
  2786  009D4A  01                 	db	1
  2787  009D4B  01                 	db	1
  2788  009D4C  01                 	db	1
  2789  009D4D  01                 	db	1
  2790  009D4E  01                 	db	1
  2791  009D4F  01                 	db	1
  2792  009D50  01                 	db	1
  2793  009D51  01                 	db	1
  2794  009D52  01                 	db	1
  2795  009D53  01                 	db	1
  2796  009D54  01                 	db	1
  2797  009D55  01                 	db	1
  2798  009D56  01                 	db	1
  2799  009D57  01                 	db	1
  2800  009D58  01                 	db	1
  2801  009D59  01                 	db	1
  2802  009D5A  01                 	db	1
  2803  009D5B  01                 	db	1
  2804  009D5C  01                 	db	1
  2805  009D5D  01                 	db	1
  2806  009D5E  01                 	db	1
  2807  009D5F  01                 	db	1
  2808  009D60  01                 	db	1
  2809  009D61  01                 	db	1
  2810  009D62  01                 	db	1
  2811  009D63  01                 	db	1
  2812  009D64  01                 	db	1
  2813  009D65  01                 	db	1
  2814  009D66  01                 	db	1
  2815  009D67  01                 	db	1
  2816  009D68  01                 	db	1
  2817  009D69  01                 	db	1
  2818  009D6A  01                 	db	1
  2819  009D6B  01                 	db	1
  2820  009D6C  01                 	db	1
  2821  009D6D  01                 	db	1
  2822  009D6E  01                 	db	1
  2823  009D6F  01                 	db	1
  2824  009D70  01                 	db	1
  2825  009D71  01                 	db	1
  2826  009D72  01                 	db	1
  2827  009D73  01                 	db	1
  2828  009D74  01                 	db	1
  2829  009D75  01                 	db	1
  2830  009D76  01                 	db	1
  2831  009D77  01                 	db	1
  2832  009D78  01                 	db	1
  2833  009D79  01                 	db	1
  2834  009D7A  01                 	db	1
  2835  009D7B  01                 	db	1
  2836  009D7C  01                 	db	1
  2837  009D7D  01                 	db	1
  2838  009D7E  01                 	db	1
  2839  009D7F  01                 	db	1
  2840  009D80  01                 	db	1
  2841  009D81  01                 	db	1
  2842  009D82  01                 	db	1
  2843  009D83  01                 	db	1
  2844  009D84  01                 	db	1
  2845  009D85  01                 	db	1
  2846  009D86  01                 	db	1
  2847  009D87  01                 	db	1
  2848  009D88  01                 	db	1
  2849  009D89  01                 	db	1
  2850  009D8A  01                 	db	1
  2851  009D8B  01                 	db	1
  2852  009D8C  01                 	db	1
  2853  009D8D  01                 	db	1
  2854  009D8E  01                 	db	1
  2855  009D8F  01                 	db	1
  2856  009D90  01                 	db	1
  2857  009D91  01                 	db	1
  2858  009D92  01                 	db	1
  2859  009D93  01                 	db	1
  2860  009D94  01                 	db	1
  2861  009D95  01                 	db	1
  2862  009D96  01                 	db	1
  2863  009D97  01                 	db	1
  2864  009D98  01                 	db	1
  2865  009D99  01                 	db	1
  2866  009D9A  01                 	db	1
  2867  009D9B  01                 	db	1
  2868  009D9C  01                 	db	1
  2869  009D9D  01                 	db	1
  2870  009D9E  01                 	db	1
  2871  009D9F  01                 	db	1
  2872  009DA0  01                 	db	1
  2873  009DA1  01                 	db	1
  2874  009DA2  01                 	db	1
  2875  009DA3  01                 	db	1
  2876  009DA4  01                 	db	1
  2877  009DA5  01                 	db	1
  2878  009DA6  01                 	db	1
  2879  009DA7  01                 	db	1
  2880  009DA8  01                 	db	1
  2881  009DA9  01                 	db	1
  2882  009DAA  01                 	db	1
  2883  009DAB  00                 	db	0
  2884  009DAC  00                 	db	0
  2885  009DAD  00                 	db	0
  2886  009DAE  00                 	db	0
  2887  009DAF  00                 	db	0
  2888  009DB0  00                 	db	0
  2889  009DB1  00                 	db	0
  2890  009DB2  00                 	db	0
  2891  009DB3  00                 	db	0
  2892  009DB4  00                 	db	0
  2893  009DB5  00                 	db	0
  2894  009DB6  00                 	db	0
  2895  009DB7  00                 	db	0
  2896  009DB8  00                 	db	0
  2897  009DB9  00                 	db	0
  2898  009DBA  00                 	db	0
  2899  009DBB  00                 	db	0
  2900  009DBC  00                 	db	0
  2901  009DBD  00                 	db	0
  2902  009DBE  00                 	db	0
  2903  009DBF  00                 	db	0
  2904  009DC0  00                 	db	0
  2905  009DC1  00                 	db	0
  2906  009DC2  00                 	db	0
  2907  009DC3  00                 	db	0
  2908  009DC4  00                 	db	0
  2909  009DC5  00                 	db	0
  2910  009DC6  00                 	db	0
  2911  009DC7  00                 	db	0
  2912  009DC8  00                 	db	0
  2913  009DC9  00                 	db	0
  2914  009DCA  00                 	db	0
  2915  009DCB  00                 	db	0
  2916  009DCC  00                 	db	0
  2917  009DCD  00                 	db	0
  2918  009DCE  00                 	db	0
  2919  009DCF  00                 	db	0
  2920  009DD0  00                 	db	0
  2921  009DD1  00                 	db	0
  2922  009DD2  00                 	db	0
  2923  009DD3  00                 	db	0
  2924  009DD4  00                 	db	0
  2925  009DD5  00                 	db	0
  2926  009DD6  00                 	db	0
  2927  009DD7  00                 	db	0
  2928  009DD8  00                 	db	0
  2929  009DD9  00                 	db	0
  2930  009DDA  00                 	db	0
  2931  009DDB  00                 	db	0
  2932  009DDC  00                 	db	0
  2933  009DDD  00                 	db	0
  2934  009DDE  00                 	db	0
  2935  009DDF  00                 	db	0
  2936  009DE0  00                 	db	0
  2937  009DE1  00                 	db	0
  2938  009DE2  00                 	db	0
  2939  009DE3  00                 	db	0
  2940  009DE4                     __end_of_motor_prescaler_lookup:
  2941                           	opt stack 0
  2942  009DE4                     _USB_SD_Ptr:
  2943                           	opt stack 0
  2944  009DE4  E5                 	db	low _sd000
  2945  009DE5  A2                 	db	high _sd000
  2946  009DE6  FE                 	db	low _sd001
  2947  009DE7  A0                 	db	high _sd001
  2948  009DE8  32                 	db	low _sd002
  2949  009DE9  A1                 	db	high _sd002
  2950  009DEA  A1                 	db	low _sd003
  2951  009DEB  A1                 	db	high _sd003
  2952  009DEC                     __end_of_USB_SD_Ptr:
  2953                           	opt stack 0
  2954  009DEC                     _USB_CD_Ptr:
  2955                           	opt stack 0
  2956  009DEC  BE                 	db	low _configDescriptor1
  2957  009DED  A0                 	db	high _configDescriptor1
  2958  009DEE                     __end_of_USB_CD_Ptr:
  2959                           	opt stack 0
  2960  009DEE                     _dc_manual:
  2961                           	opt stack 0
  2962  009DEE  4D                 	db	77
  2963  009DEF  61                 	db	97
  2964  009DF0  6E                 	db	110
  2965  009DF1  75                 	db	117
  2966  009DF2  61                 	db	97
  2967  009DF3  6C                 	db	108
  2968  009DF4  20                 	db	32
  2969  009DF5  4D                 	db	77
  2970  009DF6  6F                 	db	111
  2971  009DF7  64                 	db	100
  2972  009DF8  65                 	db	101
  2973  009DF9  20                 	db	32
  2974  009DFA  20                 	db	32
  2975  009DFB  20                 	db	32
  2976  009DFC  20                 	db	32
  2977  009DFD  20                 	db	32
  2978  009DFE  20                 	db	32
  2979  009DFF  20                 	db	32
  2980  009E00  20                 	db	32
  2981  009E01  20                 	db	32
  2982  009E02  43                 	db	67
  2983  009E03  75                 	db	117
  2984  009E04  72                 	db	114
  2985  009E05  72                 	db	114
  2986  009E06  65                 	db	101
  2987  009E07  6E                 	db	110
  2988  009E08  74                 	db	116
  2989  009E09  20                 	db	32
  2990  009E0A  70                 	db	112
  2991  009E0B  6F                 	db	111
  2992  009E0C  73                 	db	115
  2993  009E0D  3A                 	db	58
  2994  009E0E  20                 	db	32
  2995  009E0F  20                 	db	32
  2996  009E10  20                 	db	32
  2997  009E11  20                 	db	32
  2998  009E12  20                 	db	32
  2999  009E13  20                 	db	32
  3000  009E14  20                 	db	32
  3001  009E15  01                 	db	1
  3002  009E16  54                 	db	84
  3003  009E17  75                 	db	117
  3004  009E18  72                 	db	114
  3005  009E19  6E                 	db	110
  3006  009E1A  20                 	db	32
  3007  009E1B  43                 	db	67
  3008  009E1C  43                 	db	67
  3009  009E1D  57                 	db	87
  3010  009E1E  20                 	db	32
  3011  009E1F  00                 	db	0
  3012  009E20  20                 	db	32
  3013  009E21  53                 	db	83
  3014  009E22  70                 	db	112
  3015  009E23  65                 	db	101
  3016  009E24  65                 	db	101
  3017  009E25  64                 	db	100
  3018  009E26  20                 	db	32
  3019  009E27  20                 	db	32
  3020  009E28  20                 	db	32
  3021  009E29  20                 	db	32
  3022  009E2A  53                 	db	83
  3023  009E2B  74                 	db	116
  3024  009E2C  61                 	db	97
  3025  009E2D  72                 	db	114
  3026  009E2E  74                 	db	116
  3027  009E2F  20                 	db	32
  3028  009E30  20                 	db	32
  3029  009E31  20                 	db	32
  3030  009E32  20                 	db	32
  3031  009E33  00                 	db	0
  3032  009E34  20                 	db	32
  3033  009E35  20                 	db	32
  3034  009E36  20                 	db	32
  3035  009E37  20                 	db	32
  3036  009E38  20                 	db	32
  3037  009E39  20                 	db	32
  3038  009E3A  20                 	db	32
  3039  009E3B  20                 	db	32
  3040  009E3C  20                 	db	32
  3041  009E3D  20                 	db	32
  3042  009E3E                     __end_of_dc_manual:
  3043                           	opt stack 0
  3044  009E3E                     _dc_zero:
  3045                           	opt stack 0
  3046  009E3E  52                 	db	82
  3047  009E3F  65                 	db	101
  3048  009E40  74                 	db	116
  3049  009E41  75                 	db	117
  3050  009E42  72                 	db	114
  3051  009E43  6E                 	db	110
  3052  009E44  20                 	db	32
  3053  009E45  74                 	db	116
  3054  009E46  6F                 	db	111
  3055  009E47  20                 	db	32
  3056  009E48  5A                 	db	90
  3057  009E49  65                 	db	101
  3058  009E4A  72                 	db	114
  3059  009E4B  6F                 	db	111
  3060  009E4C  3F                 	db	63
  3061  009E4D  20                 	db	32
  3062  009E4E  20                 	db	32
  3063  009E4F  20                 	db	32
  3064  009E50  20                 	db	32
  3065  009E51  20                 	db	32
  3066  009E52  43                 	db	67
  3067  009E53  75                 	db	117
  3068  009E54  72                 	db	114
  3069  009E55  72                 	db	114
  3070  009E56  65                 	db	101
  3071  009E57  6E                 	db	110
  3072  009E58  74                 	db	116
  3073  009E59  20                 	db	32
  3074  009E5A  70                 	db	112
  3075  009E5B  6F                 	db	111
  3076  009E5C  73                 	db	115
  3077  009E5D  3A                 	db	58
  3078  009E5E  20                 	db	32
  3079  009E5F  20                 	db	32
  3080  009E60  20                 	db	32
  3081  009E61  20                 	db	32
  3082  009E62  20                 	db	32
  3083  009E63  20                 	db	32
  3084  009E64  20                 	db	32
  3085  009E65  20                 	db	32
  3086  009E66  20                 	db	32
  3087  009E67  20                 	db	32
  3088  009E68  20                 	db	32
  3089  009E69  20                 	db	32
  3090  009E6A  20                 	db	32
  3091  009E6B  20                 	db	32
  3092  009E6C  20                 	db	32
  3093  009E6D  20                 	db	32
  3094  009E6E  20                 	db	32
  3095  009E6F  20                 	db	32
  3096  009E70  20                 	db	32
  3097  009E71  20                 	db	32
  3098  009E72  20                 	db	32
  3099  009E73  20                 	db	32
  3100  009E74  20                 	db	32
  3101  009E75  20                 	db	32
  3102  009E76  20                 	db	32
  3103  009E77  20                 	db	32
  3104  009E78  20                 	db	32
  3105  009E79  20                 	db	32
  3106  009E7A  20                 	db	32
  3107  009E7B  59                 	db	89
  3108  009E7C  65                 	db	101
  3109  009E7D  73                 	db	115
  3110  009E7E  20                 	db	32
  3111  009E7F  20                 	db	32
  3112  009E80  20                 	db	32
  3113  009E81  20                 	db	32
  3114  009E82  20                 	db	32
  3115  009E83  20                 	db	32
  3116  009E84  20                 	db	32
  3117  009E85  20                 	db	32
  3118  009E86  20                 	db	32
  3119  009E87  20                 	db	32
  3120  009E88  20                 	db	32
  3121  009E89  20                 	db	32
  3122  009E8A  4E                 	db	78
  3123  009E8B  6F                 	db	111
  3124  009E8C  20                 	db	32
  3125  009E8D  20                 	db	32
  3126  009E8E                     __end_of_dc_zero:
  3127                           	opt stack 0
  3128  009E8E                     _dc_arc2:
  3129                           	opt stack 0
  3130  009E8E  41                 	db	65
  3131  009E8F  72                 	db	114
  3132  009E90  63                 	db	99
  3133  009E91  3A                 	db	58
  3134  009E92  20                 	db	32
  3135  009E93  53                 	db	83
  3136  009E94  69                 	db	105
  3137  009E95  7A                 	db	122
  3138  009E96  65                 	db	101
  3139  009E97  3D                 	db	61
  3140  009E98  20                 	db	32
  3141  009E99  20                 	db	32
  3142  009E9A  20                 	db	32
  3143  009E9B  20                 	db	32
  3144  009E9C  20                 	db	32
  3145  009E9D  20                 	db	32
  3146  009E9E  20                 	db	32
  3147  009E9F  20                 	db	32
  3148  009EA0  20                 	db	32
  3149  009EA1  20                 	db	32
  3150  009EA2  43                 	db	67
  3151  009EA3  75                 	db	117
  3152  009EA4  72                 	db	114
  3153  009EA5  72                 	db	114
  3154  009EA6  65                 	db	101
  3155  009EA7  6E                 	db	110
  3156  009EA8  74                 	db	116
  3157  009EA9  20                 	db	32
  3158  009EAA  70                 	db	112
  3159  009EAB  6F                 	db	111
  3160  009EAC  73                 	db	115
  3161  009EAD  3A                 	db	58
  3162  009EAE  20                 	db	32
  3163  009EAF  20                 	db	32
  3164  009EB0  20                 	db	32
  3165  009EB1  20                 	db	32
  3166  009EB2  20                 	db	32
  3167  009EB3  20                 	db	32
  3168  009EB4  20                 	db	32
  3169  009EB5  01                 	db	1
  3170  009EB6  54                 	db	84
  3171  009EB7  75                 	db	117
  3172  009EB8  72                 	db	114
  3173  009EB9  6E                 	db	110
  3174  009EBA  20                 	db	32
  3175  009EBB  43                 	db	67
  3176  009EBC  43                 	db	67
  3177  009EBD  57                 	db	87
  3178  009EBE  20                 	db	32
  3179  009EBF  00                 	db	0
  3180  009EC0  20                 	db	32
  3181  009EC1  53                 	db	83
  3182  009EC2  70                 	db	112
  3183  009EC3  65                 	db	101
  3184  009EC4  65                 	db	101
  3185  009EC5  64                 	db	100
  3186  009EC6  20                 	db	32
  3187  009EC7  20                 	db	32
  3188  009EC8  20                 	db	32
  3189  009EC9  20                 	db	32
  3190  009ECA  53                 	db	83
  3191  009ECB  74                 	db	116
  3192  009ECC  61                 	db	97
  3193  009ECD  72                 	db	114
  3194  009ECE  74                 	db	116
  3195  009ECF  20                 	db	32
  3196  009ED0  20                 	db	32
  3197  009ED1  20                 	db	32
  3198  009ED2  20                 	db	32
  3199  009ED3  00                 	db	0
  3200  009ED4  20                 	db	32
  3201  009ED5  20                 	db	32
  3202  009ED6  20                 	db	32
  3203  009ED7  20                 	db	32
  3204  009ED8  20                 	db	32
  3205  009ED9  20                 	db	32
  3206  009EDA  20                 	db	32
  3207  009EDB  20                 	db	32
  3208  009EDC  20                 	db	32
  3209  009EDD  20                 	db	32
  3210  009EDE                     __end_of_dc_arc2:
  3211                           	opt stack 0
  3212  009EDE                     _dc_arc1:
  3213                           	opt stack 0
  3214  009EDE  41                 	db	65
  3215  009EDF  72                 	db	114
  3216  009EE0  63                 	db	99
  3217  009EE1  3A                 	db	58
  3218  009EE2  20                 	db	32
  3219  009EE3  53                 	db	83
  3220  009EE4  65                 	db	101
  3221  009EE5  74                 	db	116
  3222  009EE6  20                 	db	32
  3223  009EE7  61                 	db	97
  3224  009EE8  72                 	db	114
  3225  009EE9  63                 	db	99
  3226  009EEA  20                 	db	32
  3227  009EEB  73                 	db	115
  3228  009EEC  69                 	db	105
  3229  009EED  7A                 	db	122
  3230  009EEE  65                 	db	101
  3231  009EEF  20                 	db	32
  3232  009EF0  20                 	db	32
  3233  009EF1  20                 	db	32
  3234  009EF2  41                 	db	65
  3235  009EF3  72                 	db	114
  3236  009EF4  63                 	db	99
  3237  009EF5  20                 	db	32
  3238  009EF6  73                 	db	115
  3239  009EF7  69                 	db	105
  3240  009EF8  7A                 	db	122
  3241  009EF9  65                 	db	101
  3242  009EFA  3A                 	db	58
  3243  009EFB  20                 	db	32
  3244  009EFC  20                 	db	32
  3245  009EFD  20                 	db	32
  3246  009EFE  20                 	db	32
  3247  009EFF  20                 	db	32
  3248  009F00  20                 	db	32
  3249  009F01  20                 	db	32
  3250  009F02  20                 	db	32
  3251  009F03  20                 	db	32
  3252  009F04  20                 	db	32
  3253  009F05  20                 	db	32
  3254  009F06  53                 	db	83
  3255  009F07  74                 	db	116
  3256  009F08  65                 	db	101
  3257  009F09  70                 	db	112
  3258  009F0A  20                 	db	32
  3259  009F0B  73                 	db	115
  3260  009F0C  69                 	db	105
  3261  009F0D  7A                 	db	122
  3262  009F0E  65                 	db	101
  3263  009F0F  20                 	db	32
  3264  009F10  00                 	db	0
  3265  009F11  20                 	db	32
  3266  009F12  20                 	db	32
  3267  009F13  43                 	db	67
  3268  009F14  6F                 	db	111
  3269  009F15  6E                 	db	110
  3270  009F16  66                 	db	102
  3271  009F17  69                 	db	105
  3272  009F18  72                 	db	114
  3273  009F19  6D                 	db	109
  3274  009F1A  20                 	db	32
  3275  009F1B  20                 	db	32
  3276  009F1C  20                 	db	32
  3277  009F1D  20                 	db	32
  3278  009F1E  20                 	db	32
  3279  009F1F  20                 	db	32
  3280  009F20  20                 	db	32
  3281  009F21  20                 	db	32
  3282  009F22  20                 	db	32
  3283  009F23  20                 	db	32
  3284  009F24  00                 	db	0
  3285  009F25  20                 	db	32
  3286  009F26  20                 	db	32
  3287  009F27  43                 	db	67
  3288  009F28  61                 	db	97
  3289  009F29  6E                 	db	110
  3290  009F2A  63                 	db	99
  3291  009F2B  65                 	db	101
  3292  009F2C  6C                 	db	108
  3293  009F2D  20                 	db	32
  3294  009F2E                     __end_of_dc_arc1:
  3295                           	opt stack 0
  3296  009F2E                     _dc_divide2:
  3297                           	opt stack 0
  3298  009F2E  44                 	db	68
  3299  009F2F  69                 	db	105
  3300  009F30  76                 	db	118
  3301  009F31  69                 	db	105
  3302  009F32  64                 	db	100
  3303  009F33  65                 	db	101
  3304  009F34  3A                 	db	58
  3305  009F35  20                 	db	32
  3306  009F36  20                 	db	32
  3307  009F37  20                 	db	32
  3308  009F38  20                 	db	32
  3309  009F39  20                 	db	32
  3310  009F3A  20                 	db	32
  3311  009F3B  20                 	db	32
  3312  009F3C  20                 	db	32
  3313  009F3D  20                 	db	32
  3314  009F3E  20                 	db	32
  3315  009F3F  20                 	db	32
  3316  009F40  20                 	db	32
  3317  009F41  20                 	db	32
  3318  009F42  50                 	db	80
  3319  009F43  6F                 	db	111
  3320  009F44  73                 	db	115
  3321  009F45  3A                 	db	58
  3322  009F46  20                 	db	32
  3323  009F47  20                 	db	32
  3324  009F48  20                 	db	32
  3325  009F49  20                 	db	32
  3326  009F4A  20                 	db	32
  3327  009F4B  20                 	db	32
  3328  009F4C  20                 	db	32
  3329  009F4D  20                 	db	32
  3330  009F4E  20                 	db	32
  3331  009F4F  20                 	db	32
  3332  009F50  20                 	db	32
  3333  009F51  20                 	db	32
  3334  009F52  20                 	db	32
  3335  009F53  20                 	db	32
  3336  009F54  20                 	db	32
  3337  009F55  20                 	db	32
  3338  009F56  4A                 	db	74
  3339  009F57  75                 	db	117
  3340  009F58  6D                 	db	109
  3341  009F59  70                 	db	112
  3342  009F5A  20                 	db	32
  3343  009F5B  73                 	db	115
  3344  009F5C  69                 	db	105
  3345  009F5D  7A                 	db	122
  3346  009F5E  65                 	db	101
  3347  009F5F  3A                 	db	58
  3348  009F60  20                 	db	32
  3349  009F61  20                 	db	32
  3350  009F62  20                 	db	32
  3351  009F63  20                 	db	32
  3352  009F64  20                 	db	32
  3353  009F65  20                 	db	32
  3354  009F66  20                 	db	32
  3355  009F67  20                 	db	32
  3356  009F68  20                 	db	32
  3357  009F69  20                 	db	32
  3358  009F6A  50                 	db	80
  3359  009F6B  72                 	db	114
  3360  009F6C  65                 	db	101
  3361  009F6D  73                 	db	115
  3362  009F6E  73                 	db	115
  3363  009F6F  54                 	db	84
  3364  009F70  6F                 	db	111
  3365  009F71  4A                 	db	74
  3366  009F72  75                 	db	117
  3367  009F73  6D                 	db	109
  3368  009F74  70                 	db	112
  3369  009F75  20                 	db	32
  3370  009F76  00                 	db	0
  3371  009F77  20                 	db	32
  3372  009F78  43                 	db	67
  3373  009F79  61                 	db	97
  3374  009F7A  6E                 	db	110
  3375  009F7B  63                 	db	99
  3376  009F7C  65                 	db	101
  3377  009F7D  6C                 	db	108
  3378  009F7E                     __end_of_dc_divide2:
  3379                           	opt stack 0
  3380  009F7E                     _dc_divide1:
  3381                           	opt stack 0
  3382  009F7E  44                 	db	68
  3383  009F7F  69                 	db	105
  3384  009F80  76                 	db	118
  3385  009F81  69                 	db	105
  3386  009F82  64                 	db	100
  3387  009F83  65                 	db	101
  3388  009F84  3A                 	db	58
  3389  009F85  20                 	db	32
  3390  009F86  53                 	db	83
  3391  009F87  65                 	db	101
  3392  009F88  74                 	db	116
  3393  009F89  20                 	db	32
  3394  009F8A  64                 	db	100
  3395  009F8B  69                 	db	105
  3396  009F8C  76                 	db	118
  3397  009F8D  69                 	db	105
  3398  009F8E  73                 	db	115
  3399  009F8F  69                 	db	105
  3400  009F90  6F                 	db	111
  3401  009F91  6E                 	db	110
  3402  009F92  20                 	db	32
  3403  009F93  20                 	db	32
  3404  009F94  20                 	db	32
  3405  009F95  20                 	db	32
  3406  009F96  20                 	db	32
  3407  009F97  20                 	db	32
  3408  009F98  20                 	db	32
  3409  009F99  20                 	db	32
  3410  009F9A  20                 	db	32
  3411  009F9B  20                 	db	32
  3412  009F9C  20                 	db	32
  3413  009F9D  20                 	db	32
  3414  009F9E  20                 	db	32
  3415  009F9F  20                 	db	32
  3416  009FA0  20                 	db	32
  3417  009FA1  20                 	db	32
  3418  009FA2  20                 	db	32
  3419  009FA3  20                 	db	32
  3420  009FA4  20                 	db	32
  3421  009FA5  20                 	db	32
  3422  009FA6  20                 	db	32
  3423  009FA7  20                 	db	32
  3424  009FA8  20                 	db	32
  3425  009FA9  2F                 	db	47
  3426  009FAA  73                 	db	115
  3427  009FAB  74                 	db	116
  3428  009FAC  65                 	db	101
  3429  009FAD  70                 	db	112
  3430  009FAE  20                 	db	32
  3431  009FAF  20                 	db	32
  3432  009FB0  00                 	db	0
  3433  009FB1  20                 	db	32
  3434  009FB2  20                 	db	32
  3435  009FB3  43                 	db	67
  3436  009FB4  6F                 	db	111
  3437  009FB5  6E                 	db	110
  3438  009FB6  66                 	db	102
  3439  009FB7  69                 	db	105
  3440  009FB8  72                 	db	114
  3441  009FB9  6D                 	db	109
  3442  009FBA  31                 	db	49
  3443  009FBB  32                 	db	50
  3444  009FBC  33                 	db	51
  3445  009FBD  34                 	db	52
  3446  009FBE  20                 	db	32
  3447  009FBF  20                 	db	32
  3448  009FC0  20                 	db	32
  3449  009FC1  20                 	db	32
  3450  009FC2  20                 	db	32
  3451  009FC3  20                 	db	32
  3452  009FC4  00                 	db	0
  3453  009FC5  20                 	db	32
  3454  009FC6  20                 	db	32
  3455  009FC7  43                 	db	67
  3456  009FC8  61                 	db	97
  3457  009FC9  6E                 	db	110
  3458  009FCA  63                 	db	99
  3459  009FCB  65                 	db	101
  3460  009FCC  6C                 	db	108
  3461  009FCD  20                 	db	32
  3462  009FCE                     __end_of_dc_divide1:
  3463                           	opt stack 0
  3464  009FCE                     _dc_setup2:
  3465                           	opt stack 0
  3466  009FCE  53                 	db	83
  3467  009FCF  65                 	db	101
  3468  009FD0  74                 	db	116
  3469  009FD1  75                 	db	117
  3470  009FD2  70                 	db	112
  3471  009FD3  3A                 	db	58
  3472  009FD4  20                 	db	32
  3473  009FD5  53                 	db	83
  3474  009FD6  65                 	db	101
  3475  009FD7  74                 	db	116
  3476  009FD8  20                 	db	32
  3477  009FD9  64                 	db	100
  3478  009FDA  69                 	db	105
  3479  009FDB  72                 	db	114
  3480  009FDC  65                 	db	101
  3481  009FDD  63                 	db	99
  3482  009FDE  74                 	db	116
  3483  009FDF  69                 	db	105
  3484  009FE0  6F                 	db	111
  3485  009FE1  6E                 	db	110
  3486  009FE2  20                 	db	32
  3487  009FE3  20                 	db	32
  3488  009FE4  20                 	db	32
  3489  009FE5  20                 	db	32
  3490  009FE6  20                 	db	32
  3491  009FE7  20                 	db	32
  3492  009FE8  20                 	db	32
  3493  009FE9  20                 	db	32
  3494  009FEA  20                 	db	32
  3495  009FEB  20                 	db	32
  3496  009FEC  20                 	db	32
  3497  009FED  20                 	db	32
  3498  009FEE  20                 	db	32
  3499  009FEF  20                 	db	32
  3500  009FF0  20                 	db	32
  3501  009FF1  20                 	db	32
  3502  009FF2  20                 	db	32
  3503  009FF3  20                 	db	32
  3504  009FF4  20                 	db	32
  3505  009FF5  20                 	db	32
  3506  009FF6  20                 	db	32
  3507  009FF7  43                 	db	67
  3508  009FF8  6F                 	db	111
  3509  009FF9  75                 	db	117
  3510  009FFA  6E                 	db	110
  3511  009FFB  74                 	db	116
  3512  009FFC  65                 	db	101
  3513  009FFD  72                 	db	114
  3514  009FFE  43                 	db	67
  3515  009FFF  6C                 	db	108
  3516  00A000  6F                 	db	111
  3517  00A001  63                 	db	99
  3518  00A002  6B                 	db	107
  3519  00A003  77                 	db	119
  3520  00A004  69                 	db	105
  3521  00A005  73                 	db	115
  3522  00A006  65                 	db	101
  3523  00A007  20                 	db	32
  3524  00A008  20                 	db	32
  3525  00A009  20                 	db	32
  3526  00A00A  20                 	db	32
  3527  00A00B  43                 	db	67
  3528  00A00C  6C                 	db	108
  3529  00A00D  6F                 	db	111
  3530  00A00E  63                 	db	99
  3531  00A00F  6B                 	db	107
  3532  00A010  77                 	db	119
  3533  00A011  69                 	db	105
  3534  00A012  73                 	db	115
  3535  00A013  65                 	db	101
  3536  00A014  20                 	db	32
  3537  00A015  20                 	db	32
  3538  00A016  20                 	db	32
  3539  00A017  20                 	db	32
  3540  00A018  20                 	db	32
  3541  00A019  20                 	db	32
  3542  00A01A  20                 	db	32
  3543  00A01B  20                 	db	32
  3544  00A01C  20                 	db	32
  3545  00A01D  20                 	db	32
  3546  00A01E                     __end_of_dc_setup2:
  3547                           	opt stack 0
  3548  00A01E                     _dc_setup1:
  3549                           	opt stack 0
  3550  00A01E  53                 	db	83
  3551  00A01F  65                 	db	101
  3552  00A020  74                 	db	116
  3553  00A021  75                 	db	117
  3554  00A022  70                 	db	112
  3555  00A023  3A                 	db	58
  3556  00A024  20                 	db	32
  3557  00A025  53                 	db	83
  3558  00A026  65                 	db	101
  3559  00A027  74                 	db	116
  3560  00A028  20                 	db	32
  3561  00A029  7A                 	db	122
  3562  00A02A  65                 	db	101
  3563  00A02B  72                 	db	114
  3564  00A02C  6F                 	db	111
  3565  00A02D  20                 	db	32
  3566  00A02E  70                 	db	112
  3567  00A02F  6F                 	db	111
  3568  00A030  73                 	db	115
  3569  00A031  2E                 	db	46
  3570  00A032  20                 	db	32
  3571  00A033  20                 	db	32
  3572  00A034  20                 	db	32
  3573  00A035  20                 	db	32
  3574  00A036  20                 	db	32
  3575  00A037  20                 	db	32
  3576  00A038  20                 	db	32
  3577  00A039  20                 	db	32
  3578  00A03A  20                 	db	32
  3579  00A03B  20                 	db	32
  3580  00A03C  20                 	db	32
  3581  00A03D  20                 	db	32
  3582  00A03E  20                 	db	32
  3583  00A03F  20                 	db	32
  3584  00A040  20                 	db	32
  3585  00A041  20                 	db	32
  3586  00A042  20                 	db	32
  3587  00A043  20                 	db	32
  3588  00A044  20                 	db	32
  3589  00A045  20                 	db	32
  3590  00A046  53                 	db	83
  3591  00A047  74                 	db	116
  3592  00A048  65                 	db	101
  3593  00A049  70                 	db	112
  3594  00A04A  20                 	db	32
  3595  00A04B  73                 	db	115
  3596  00A04C  69                 	db	105
  3597  00A04D  7A                 	db	122
  3598  00A04E  65                 	db	101
  3599  00A04F  20                 	db	32
  3600  00A050  00                 	db	0
  3601  00A051  20                 	db	32
  3602  00A052  20                 	db	32
  3603  00A053  43                 	db	67
  3604  00A054  6F                 	db	111
  3605  00A055  6E                 	db	110
  3606  00A056  66                 	db	102
  3607  00A057  69                 	db	105
  3608  00A058  72                 	db	114
  3609  00A059  6D                 	db	109
  3610  00A05A  20                 	db	32
  3611  00A05B  78                 	db	120
  3612  00A05C  2E                 	db	46
  3613  00A05D  78                 	db	120
  3614  00A05E  78                 	db	120
  3615  00A05F  01                 	db	1
  3616  00A060  20                 	db	32
  3617  00A061  20                 	db	32
  3618  00A062  20                 	db	32
  3619  00A063  20                 	db	32
  3620  00A064  00                 	db	0
  3621  00A065  20                 	db	32
  3622  00A066  20                 	db	32
  3623  00A067  43                 	db	67
  3624  00A068  61                 	db	97
  3625  00A069  6E                 	db	110
  3626  00A06A  63                 	db	99
  3627  00A06B  65                 	db	101
  3628  00A06C  6C                 	db	108
  3629  00A06D  20                 	db	32
  3630  00A06E                     __end_of_dc_setup1:
  3631                           	opt stack 0
  3632  00A06E                     _dc_main:
  3633                           	opt stack 0
  3634  00A06E  4D                 	db	77
  3635  00A06F  61                 	db	97
  3636  00A070  69                 	db	105
  3637  00A071  6E                 	db	110
  3638  00A072  20                 	db	32
  3639  00A073  4D                 	db	77
  3640  00A074  65                 	db	101
  3641  00A075  6E                 	db	110
  3642  00A076  75                 	db	117
  3643  00A077  3A                 	db	58
  3644  00A078  20                 	db	32
  3645  00A079  20                 	db	32
  3646  00A07A  20                 	db	32
  3647  00A07B  20                 	db	32
  3648  00A07C  20                 	db	32
  3649  00A07D  20                 	db	32
  3650  00A07E  20                 	db	32
  3651  00A07F  20                 	db	32
  3652  00A080  20                 	db	32
  3653  00A081  20                 	db	32
  3654  00A082  20                 	db	32
  3655  00A083  53                 	db	83
  3656  00A084  65                 	db	101
  3657  00A085  74                 	db	116
  3658  00A086  75                 	db	117
  3659  00A087  70                 	db	112
  3660  00A088  20                 	db	32
  3661  00A089  20                 	db	32
  3662  00A08A  20                 	db	32
  3663  00A08B  20                 	db	32
  3664  00A08C  44                 	db	68
  3665  00A08D  69                 	db	105
  3666  00A08E  76                 	db	118
  3667  00A08F  69                 	db	105
  3668  00A090  64                 	db	100
  3669  00A091  65                 	db	101
  3670  00A092  20                 	db	32
  3671  00A093  20                 	db	32
  3672  00A094  20                 	db	32
  3673  00A095  20                 	db	32
  3674  00A096  20                 	db	32
  3675  00A097  41                 	db	65
  3676  00A098  72                 	db	114
  3677  00A099  63                 	db	99
  3678  00A09A  20                 	db	32
  3679  00A09B  20                 	db	32
  3680  00A09C  20                 	db	32
  3681  00A09D  20                 	db	32
  3682  00A09E  20                 	db	32
  3683  00A09F  20                 	db	32
  3684  00A0A0  4D                 	db	77
  3685  00A0A1  61                 	db	97
  3686  00A0A2  6E                 	db	110
  3687  00A0A3  75                 	db	117
  3688  00A0A4  61                 	db	97
  3689  00A0A5  6C                 	db	108
  3690  00A0A6  20                 	db	32
  3691  00A0A7  20                 	db	32
  3692  00A0A8  20                 	db	32
  3693  00A0A9  20                 	db	32
  3694  00A0AA  20                 	db	32
  3695  00A0AB  47                 	db	71
  3696  00A0AC  6F                 	db	111
  3697  00A0AD  32                 	db	50
  3698  00A0AE  5A                 	db	90
  3699  00A0AF  65                 	db	101
  3700  00A0B0  72                 	db	114
  3701  00A0B1  6F                 	db	111
  3702  00A0B2  20                 	db	32
  3703  00A0B3  20                 	db	32
  3704  00A0B4  20                 	db	32
  3705  00A0B5  20                 	db	32
  3706  00A0B6  20                 	db	32
  3707  00A0B7  20                 	db	32
  3708  00A0B8  20                 	db	32
  3709  00A0B9  20                 	db	32
  3710  00A0BA  20                 	db	32
  3711  00A0BB  20                 	db	32
  3712  00A0BC  20                 	db	32
  3713  00A0BD  20                 	db	32
  3714  00A0BE                     __end_of_dc_main:
  3715                           	opt stack 0
  3716  00A0BE                     _configDescriptor1:
  3717                           	opt stack 0
  3718  00A0BE  09                 	db	9
  3719  00A0BF  02                 	db	2
  3720  00A0C0  40                 	db	64
  3721  00A0C1  00                 	db	0
  3722  00A0C2  02                 	db	2
  3723  00A0C3  01                 	db	1
  3724  00A0C4  00                 	db	0
  3725  00A0C5  C0                 	db	192
  3726  00A0C6  32                 	db	50
  3727  00A0C7  09                 	db	9
  3728  00A0C8  04                 	db	4
  3729  00A0C9  00                 	db	0
  3730  00A0CA  00                 	db	0
  3731  00A0CB  02                 	db	2
  3732  00A0CC  03                 	db	3
  3733  00A0CD  00                 	db	0
  3734  00A0CE  00                 	db	0
  3735  00A0CF  00                 	db	0
  3736  00A0D0  09                 	db	9
  3737  00A0D1  21                 	db	33
  3738  00A0D2  11                 	db	17
  3739  00A0D3  01                 	db	1
  3740  00A0D4  00                 	db	0
  3741  00A0D5  01                 	db	1
  3742  00A0D6  22                 	db	34
  3743  00A0D7  1D                 	db	29
  3744  00A0D8  00                 	db	0
  3745  00A0D9  07                 	db	7
  3746  00A0DA  05                 	db	5
  3747  00A0DB  81                 	db	129
  3748  00A0DC  03                 	db	3
  3749  00A0DD  40                 	db	64
  3750  00A0DE  00                 	db	0
  3751  00A0DF  01                 	db	1
  3752  00A0E0  07                 	db	7
  3753  00A0E1  05                 	db	5
  3754  00A0E2  01                 	db	1
  3755  00A0E3  03                 	db	3
  3756  00A0E4  40                 	db	64
  3757  00A0E5  00                 	db	0
  3758  00A0E6  01                 	db	1
  3759  00A0E7  09                 	db	9
  3760  00A0E8  04                 	db	4
  3761  00A0E9  01                 	db	1
  3762  00A0EA  00                 	db	0
  3763  00A0EB  02                 	db	2
  3764  00A0EC  08                 	db	8
  3765  00A0ED  06                 	db	6
  3766  00A0EE  50                 	db	80
  3767  00A0EF  00                 	db	0
  3768  00A0F0  07                 	db	7
  3769  00A0F1  05                 	db	5
  3770  00A0F2  82                 	db	130
  3771  00A0F3  02                 	db	2
  3772  00A0F4  40                 	db	64
  3773  00A0F5  00                 	db	0
  3774  00A0F6  01                 	db	1
  3775  00A0F7  07                 	db	7
  3776  00A0F8  05                 	db	5
  3777  00A0F9  02                 	db	2
  3778  00A0FA  02                 	db	2
  3779  00A0FB  40                 	db	64
  3780  00A0FC  00                 	db	0
  3781  00A0FD  01                 	db	1
  3782  00A0FE                     __end_of_configDescriptor1:
  3783                           	opt stack 0
  3784  00A0FE                     _sd001:
  3785                           	opt stack 0
  3786  00A0FE  34                 	db	52
  3787  00A0FF  03                 	db	3
  3788  00A100  0053               	dw	83
  3789  00A102  006F               	dw	111
  3790  00A104  006C               	dw	108
  3791  00A106  0064               	dw	100
  3792  00A108  0065               	dw	101
  3793  00A10A  0072               	dw	114
  3794  00A10C  006E               	dw	110
  3795  00A10E  0065               	dw	101
  3796  00A110  0072               	dw	114
  3797  00A112  0064               	dw	100
  3798  00A114  002E               	dw	46
  3799  00A116  0063               	dw	99
  3800  00A118  006F               	dw	111
  3801  00A11A  006D               	dw	109
  3802  00A11C  0020               	dw	32
  3803  00A11E  0020               	dw	32
  3804  00A120  0020               	dw	32
  3805  00A122  0020               	dw	32
  3806  00A124  0020               	dw	32
  3807  00A126  0020               	dw	32
  3808  00A128  0020               	dw	32
  3809  00A12A  0020               	dw	32
  3810  00A12C  0020               	dw	32
  3811  00A12E  0020               	dw	32
  3812  00A130  0020               	dw	32
  3813  00A132                     __end_of_sd001:
  3814                           	opt stack 0
  3815  00A132                     _sd002:
  3816                           	opt stack 0
  3817  00A132  2E                 	db	46
  3818  00A133  03                 	db	3
  3819  00A134  0053               	dw	83
  3820  00A136  0074               	dw	116
  3821  00A138  0065               	dw	101
  3822  00A13A  0070               	dw	112
  3823  00A13C  0070               	dw	112
  3824  00A13E  0065               	dw	101
  3825  00A140  0072               	dw	114
  3826  00A142  004D               	dw	77
  3827  00A144  006F               	dw	111
  3828  00A146  0074               	dw	116
  3829  00A148  006F               	dw	111
  3830  00A14A  0072               	dw	114
  3831  00A14C  0043               	dw	67
  3832  00A14E  006F               	dw	111
  3833  00A150  006E               	dw	110
  3834  00A152  0074               	dw	116
  3835  00A154  0072               	dw	114
  3836  00A156  006F               	dw	111
  3837  00A158  006C               	dw	108
  3838  00A15A  006C               	dw	108
  3839  00A15C  0065               	dw	101
  3840  00A15E  0072               	dw	114
  3841  00A160                     __end_of_sd002:
  3842                           	opt stack 0
  3843  00A160                     _inq_resp:
  3844                           	opt stack 0
  3845  00A160  00                 	db	0
  3846  00A161  80                 	db	128
  3847  00A162  04                 	db	4
  3848  00A163  02                 	db	2
  3849  00A164  20                 	db	32
  3850  00A165  00                 	db	0
  3851  00A166  00                 	db	0
  3852  00A167  00                 	db	0
  3853  00A168  4D                 	db	77
  3854  00A169  69                 	db	105
  3855  00A16A  63                 	db	99
  3856  00A16B  72                 	db	114
  3857  00A16C  6F                 	db	111
  3858  00A16D  63                 	db	99
  3859  00A16E  68                 	db	104
  3860  00A16F  70                 	db	112
  3861  00A170  4D                 	db	77
  3862  00A171  61                 	db	97
  3863  00A172  73                 	db	115
  3864  00A173  73                 	db	115
  3865  00A174  20                 	db	32
  3866  00A175  53                 	db	83
  3867  00A176  74                 	db	116
  3868  00A177  6F                 	db	111
  3869  00A178  72                 	db	114
  3870  00A179  61                 	db	97
  3871  00A17A  67                 	db	103
  3872  00A17B  65                 	db	101
  3873  00A17C  20                 	db	32
  3874  00A17D  20                 	db	32
  3875  00A17E  20                 	db	32
  3876  00A17F  20                 	db	32
  3877  00A180  30                 	db	48
  3878  00A181  30                 	db	48
  3879  00A182  30                 	db	48
  3880  00A183  31                 	db	49
  3881  00A184                     __end_of_inq_resp:
  3882                           	opt stack 0
  3883  00A184                     _hid_rpt01:
  3884                           	opt stack 0
  3885  00A184  06                 	db	6
  3886  00A185  00                 	db	0
  3887  00A186  FF                 	db	255
  3888  00A187  09                 	db	9
  3889  00A188  01                 	db	1
  3890  00A189  A1                 	db	161
  3891  00A18A  01                 	db	1
  3892  00A18B  19                 	db	25
  3893  00A18C  01                 	db	1
  3894  00A18D  29                 	db	41
  3895  00A18E  40                 	db	64
  3896  00A18F  15                 	db	21
  3897  00A190  00                 	db	0
  3898  00A191  26                 	db	38
  3899  00A192  FF                 	db	255
  3900  00A193  00                 	db	0
  3901  00A194  75                 	db	117
  3902  00A195  08                 	db	8
  3903  00A196  95                 	db	149
  3904  00A197  40                 	db	64
  3905  00A198  81                 	db	129
  3906  00A199  00                 	db	0
  3907  00A19A  19                 	db	25
  3908  00A19B  01                 	db	1
  3909  00A19C  29                 	db	41
  3910  00A19D  40                 	db	64
  3911  00A19E  91                 	db	145
  3912  00A19F  00                 	db	0
  3913  00A1A0  C0                 	db	192
  3914  00A1A1                     __end_of_hid_rpt01:
  3915                           	opt stack 0
  3916  00A1A1                     _sd003:
  3917                           	opt stack 0
  3918  00A1A1  1A                 	db	26
  3919  00A1A2  03                 	db	3
  3920  00A1A3  0031               	dw	49
  3921  00A1A5  0032               	dw	50
  3922  00A1A7  0033               	dw	51
  3923  00A1A9  0034               	dw	52
  3924  00A1AB  0035               	dw	53
  3925  00A1AD  0036               	dw	54
  3926  00A1AF  0037               	dw	55
  3927  00A1B1  0038               	dw	56
  3928  00A1B3  0039               	dw	57
  3929  00A1B5  0030               	dw	48
  3930  00A1B7  0039               	dw	57
  3931  00A1B9  0039               	dw	57
  3932  00A1BB                     __end_of_sd003:
  3933                           	opt stack 0
  3934  00A1BB                     _overshoot_cost_in_steps_string:
  3935                           	opt stack 0
  3936  00A1BB  4F                 	db	79
  3937  00A1BC  56                 	db	86
  3938  00A1BD  45                 	db	69
  3939  00A1BE  52                 	db	82
  3940  00A1BF  53                 	db	83
  3941  00A1C0  48                 	db	72
  3942  00A1C1  4F                 	db	79
  3943  00A1C2  4F                 	db	79
  3944  00A1C3  54                 	db	84
  3945  00A1C4  5F                 	db	95
  3946  00A1C5  43                 	db	67
  3947  00A1C6  4F                 	db	79
  3948  00A1C7  53                 	db	83
  3949  00A1C8  54                 	db	84
  3950  00A1C9  5F                 	db	95
  3951  00A1CA  49                 	db	73
  3952  00A1CB  4E                 	db	78
  3953  00A1CC  5F                 	db	95
  3954  00A1CD  53                 	db	83
  3955  00A1CE  54                 	db	84
  3956  00A1CF  45                 	db	69
  3957  00A1D0  50                 	db	80
  3958  00A1D1  53                 	db	83
  3959  00A1D2  00                 	db	0
  3960  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3961                           	opt stack 0
  3962  00A1D3                     _maximum_speed_manual_string:
  3963                           	opt stack 0
  3964  00A1D3  4D                 	db	77
  3965  00A1D4  41                 	db	65
  3966  00A1D5  58                 	db	88
  3967  00A1D6  49                 	db	73
  3968  00A1D7  4D                 	db	77
  3969  00A1D8  55                 	db	85
  3970  00A1D9  4D                 	db	77
  3971  00A1DA  5F                 	db	95
  3972  00A1DB  53                 	db	83
  3973  00A1DC  50                 	db	80
  3974  00A1DD  45                 	db	69
  3975  00A1DE  45                 	db	69
  3976  00A1DF  44                 	db	68
  3977  00A1E0  5F                 	db	95
  3978  00A1E1  4D                 	db	77
  3979  00A1E2  41                 	db	65
  3980  00A1E3  4E                 	db	78
  3981  00A1E4  55                 	db	85
  3982  00A1E5  41                 	db	65
  3983  00A1E6  4C                 	db	76
  3984  00A1E7  00                 	db	0
  3985  00A1E8                     __end_of_maximum_speed_manual_string:
  3986                           	opt stack 0
  3987  00A1E8                     _initial_speed_manual_string:
  3988                           	opt stack 0
  3989  00A1E8  49                 	db	73
  3990  00A1E9  4E                 	db	78
  3991  00A1EA  49                 	db	73
  3992  00A1EB  54                 	db	84
  3993  00A1EC  49                 	db	73
  3994  00A1ED  41                 	db	65
  3995  00A1EE  4C                 	db	76
  3996  00A1EF  5F                 	db	95
  3997  00A1F0  53                 	db	83
  3998  00A1F1  50                 	db	80
  3999  00A1F2  45                 	db	69
  4000  00A1F3  45                 	db	69
  4001  00A1F4  44                 	db	68
  4002  00A1F5  5F                 	db	95
  4003  00A1F6  4D                 	db	77
  4004  00A1F7  41                 	db	65
  4005  00A1F8  4E                 	db	78
  4006  00A1F9  55                 	db	85
  4007  00A1FA  41                 	db	65
  4008  00A1FB  4C                 	db	76
  4009  00A1FC  00                 	db	0
  4010  00A1FD                     __end_of_initial_speed_manual_string:
  4011                           	opt stack 0
  4012  00A1FD                     _full_circle_in_steps_string:
  4013                           	opt stack 0
  4014  00A1FD  46                 	db	70
  4015  00A1FE  55                 	db	85
  4016  00A1FF  4C                 	db	76
  4017  00A200  4C                 	db	76
  4018  00A201  5F                 	db	95
  4019  00A202  43                 	db	67
  4020  00A203  49                 	db	73
  4021  00A204  52                 	db	82
  4022  00A205  43                 	db	67
  4023  00A206  4C                 	db	76
  4024  00A207  45                 	db	69
  4025  00A208  5F                 	db	95
  4026  00A209  49                 	db	73
  4027  00A20A  4E                 	db	78
  4028  00A20B  5F                 	db	95
  4029  00A20C  53                 	db	83
  4030  00A20D  54                 	db	84
  4031  00A20E  45                 	db	69
  4032  00A20F  50                 	db	80
  4033  00A210  53                 	db	83
  4034  00A211  00                 	db	0
  4035  00A212                     __end_of_full_circle_in_steps_string:
  4036                           	opt stack 0
  4037  00A212                     _overshoot_in_steps_string:
  4038                           	opt stack 0
  4039  00A212  4F                 	db	79
  4040  00A213  56                 	db	86
  4041  00A214  45                 	db	69
  4042  00A215  52                 	db	82
  4043  00A216  53                 	db	83
  4044  00A217  48                 	db	72
  4045  00A218  4F                 	db	79
  4046  00A219  4F                 	db	79
  4047  00A21A  54                 	db	84
  4048  00A21B  5F                 	db	95
  4049  00A21C  49                 	db	73
  4050  00A21D  4E                 	db	78
  4051  00A21E  5F                 	db	95
  4052  00A21F  53                 	db	83
  4053  00A220  54                 	db	84
  4054  00A221  45                 	db	69
  4055  00A222  50                 	db	80
  4056  00A223  53                 	db	83
  4057  00A224  00                 	db	0
  4058  00A225                     __end_of_overshoot_in_steps_string:
  4059                           	opt stack 0
  4060  00A225                     _maximum_speed_arc_string:
  4061                           	opt stack 0
  4062  00A225  4D                 	db	77
  4063  00A226  41                 	db	65
  4064  00A227  58                 	db	88
  4065  00A228  49                 	db	73
  4066  00A229  4D                 	db	77
  4067  00A22A  55                 	db	85
  4068  00A22B  4D                 	db	77
  4069  00A22C  5F                 	db	95
  4070  00A22D  53                 	db	83
  4071  00A22E  50                 	db	80
  4072  00A22F  45                 	db	69
  4073  00A230  45                 	db	69
  4074  00A231  44                 	db	68
  4075  00A232  5F                 	db	95
  4076  00A233  41                 	db	65
  4077  00A234  52                 	db	82
  4078  00A235  43                 	db	67
  4079  00A236  00                 	db	0
  4080  00A237                     __end_of_maximum_speed_arc_string:
  4081                           	opt stack 0
  4082  00A237                     _initial_speed_arc_string:
  4083                           	opt stack 0
  4084  00A237  49                 	db	73
  4085  00A238  4E                 	db	78
  4086  00A239  49                 	db	73
  4087  00A23A  54                 	db	84
  4088  00A23B  49                 	db	73
  4089  00A23C  41                 	db	65
  4090  00A23D  4C                 	db	76
  4091  00A23E  5F                 	db	95
  4092  00A23F  53                 	db	83
  4093  00A240  50                 	db	80
  4094  00A241  45                 	db	69
  4095  00A242  45                 	db	69
  4096  00A243  44                 	db	68
  4097  00A244  5F                 	db	95
  4098  00A245  41                 	db	65
  4099  00A246  52                 	db	82
  4100  00A247  43                 	db	67
  4101  00A248  00                 	db	0
  4102  00A249                     __end_of_initial_speed_arc_string:
  4103                           	opt stack 0
  4104  00A249                     _inverse_direction_string:
  4105                           	opt stack 0
  4106  00A249  49                 	db	73
  4107  00A24A  4E                 	db	78
  4108  00A24B  56                 	db	86
  4109  00A24C  45                 	db	69
  4110  00A24D  52                 	db	82
  4111  00A24E  53                 	db	83
  4112  00A24F  45                 	db	69
  4113  00A250  5F                 	db	95
  4114  00A251  44                 	db	68
  4115  00A252  49                 	db	73
  4116  00A253  52                 	db	82
  4117  00A254  45                 	db	69
  4118  00A255  43                 	db	67
  4119  00A256  54                 	db	84
  4120  00A257  49                 	db	73
  4121  00A258  4F                 	db	79
  4122  00A259  4E                 	db	78
  4123  00A25A  00                 	db	0
  4124  00A25B                     __end_of_inverse_direction_string:
  4125                           	opt stack 0
  4126  00A25B                     _device_dsc:
  4127                           	opt stack 0
  4128  00A25B  12                 	db	18
  4129  00A25C  01                 	db	1
  4130  00A25D  0200               	dw	512
  4131  00A25F  00                 	db	0
  4132  00A260  00                 	db	0
  4133  00A261  00                 	db	0
  4134  00A262  08                 	db	8
  4135  00A263  04D8               	dw	1240
  4136  00A265  EDCF               	dw	60879
  4137  00A267  0100               	dw	256
  4138  00A269  01                 	db	1
  4139  00A26A  02                 	db	2
  4140  00A26B  00                 	db	0
  4141  00A26C  01                 	db	1
  4142  00A26D                     __end_of_device_dsc:
  4143                           	opt stack 0
  4144  00A26D                     _use_ccw_limit_string:
  4145                           	opt stack 0
  4146  00A26D  55                 	db	85
  4147  00A26E  53                 	db	83
  4148  00A26F  45                 	db	69
  4149  00A270  5F                 	db	95
  4150  00A271  43                 	db	67
  4151  00A272  43                 	db	67
  4152  00A273  57                 	db	87
  4153  00A274  5F                 	db	95
  4154  00A275  4C                 	db	76
  4155  00A276  49                 	db	73
  4156  00A277  4D                 	db	77
  4157  00A278  49                 	db	73
  4158  00A279  54                 	db	84
  4159  00A27A  00                 	db	0
  4160  00A27B                     __end_of_use_ccw_limit_string:
  4161                           	opt stack 0
  4162  00A27B                     _beep_duration_string:
  4163                           	opt stack 0
  4164  00A27B  42                 	db	66
  4165  00A27C  45                 	db	69
  4166  00A27D  45                 	db	69
  4167  00A27E  50                 	db	80
  4168  00A27F  5F                 	db	95
  4169  00A280  44                 	db	68
  4170  00A281  55                 	db	85
  4171  00A282  52                 	db	82
  4172  00A283  41                 	db	65
  4173  00A284  54                 	db	84
  4174  00A285  49                 	db	73
  4175  00A286  4F                 	db	79
  4176  00A287  4E                 	db	78
  4177  00A288  00                 	db	0
  4178  00A289                     __end_of_beep_duration_string:
  4179                           	opt stack 0
  4180  00A289                     _maximum_speed_string:
  4181                           	opt stack 0
  4182  00A289  4D                 	db	77
  4183  00A28A  41                 	db	65
  4184  00A28B  58                 	db	88
  4185  00A28C  49                 	db	73
  4186  00A28D  4D                 	db	77
  4187  00A28E  55                 	db	85
  4188  00A28F  4D                 	db	77
  4189  00A290  5F                 	db	95
  4190  00A291  53                 	db	83
  4191  00A292  50                 	db	80
  4192  00A293  45                 	db	69
  4193  00A294  45                 	db	69
  4194  00A295  44                 	db	68
  4195  00A296  00                 	db	0
  4196  00A297                     __end_of_maximum_speed_string:
  4197                           	opt stack 0
  4198  00A297                     _minimum_speed_string:
  4199                           	opt stack 0
  4200  00A297  4D                 	db	77
  4201  00A298  49                 	db	73
  4202  00A299  4E                 	db	78
  4203  00A29A  49                 	db	73
  4204  00A29B  4D                 	db	77
  4205  00A29C  55                 	db	85
  4206  00A29D  4D                 	db	77
  4207  00A29E  5F                 	db	95
  4208  00A29F  53                 	db	83
  4209  00A2A0  50                 	db	80
  4210  00A2A1  45                 	db	69
  4211  00A2A2  45                 	db	69
  4212  00A2A3  44                 	db	68
  4213  00A2A4  00                 	db	0
  4214  00A2A5                     __end_of_minimum_speed_string:
  4215                           	opt stack 0
  4216  00A2A5                     _use_cw_limit_string:
  4217                           	opt stack 0
  4218  00A2A5  55                 	db	85
  4219  00A2A6  53                 	db	83
  4220  00A2A7  45                 	db	69
  4221  00A2A8  5F                 	db	95
  4222  00A2A9  43                 	db	67
  4223  00A2AA  57                 	db	87
  4224  00A2AB  5F                 	db	95
  4225  00A2AC  4C                 	db	76
  4226  00A2AD  49                 	db	73
  4227  00A2AE  4D                 	db	77
  4228  00A2AF  49                 	db	73
  4229  00A2B0  54                 	db	84
  4230  00A2B1  00                 	db	0
  4231  00A2B2                     __end_of_use_cw_limit_string:
  4232                           	opt stack 0
  4233  00A2B2                     _ccw_limit_string:
  4234                           	opt stack 0
  4235  00A2B2  43                 	db	67
  4236  00A2B3  43                 	db	67
  4237  00A2B4  57                 	db	87
  4238  00A2B5  5F                 	db	95
  4239  00A2B6  4C                 	db	76
  4240  00A2B7  49                 	db	73
  4241  00A2B8  4D                 	db	77
  4242  00A2B9  49                 	db	73
  4243  00A2BA  54                 	db	84
  4244  00A2BB  00                 	db	0
  4245  00A2BC                     __end_of_ccw_limit_string:
  4246                           	opt stack 0
  4247  00A2BC                     _cw_limit_string:
  4248                           	opt stack 0
  4249  00A2BC  43                 	db	67
  4250  00A2BD  57                 	db	87
  4251  00A2BE  5F                 	db	95
  4252  00A2BF  4C                 	db	76
  4253  00A2C0  49                 	db	73
  4254  00A2C1  4D                 	db	77
  4255  00A2C2  49                 	db	73
  4256  00A2C3  54                 	db	84
  4257  00A2C4  00                 	db	0
  4258  00A2C5                     __end_of_cw_limit_string:
  4259                           	opt stack 0
  4260  00A2C5                     _bit_pattern_ae:
  4261                           	opt stack 0
  4262  00A2C5  0A                 	db	10
  4263  00A2C6  00                 	db	0
  4264  00A2C7  0E                 	db	14
  4265  00A2C8  01                 	db	1
  4266  00A2C9  0F                 	db	15
  4267  00A2CA  11                 	db	17
  4268  00A2CB  0F                 	db	15
  4269  00A2CC  00                 	db	0
  4270  00A2CD                     __end_of_bit_pattern_ae:
  4271                           	opt stack 0
  4272  00A2CD                     _bit_pattern_degree:
  4273                           	opt stack 0
  4274  00A2CD  18                 	db	24
  4275  00A2CE  18                 	db	24
  4276  00A2CF  00                 	db	0
  4277  00A2D0  00                 	db	0
  4278  00A2D1  00                 	db	0
  4279  00A2D2  00                 	db	0
  4280  00A2D3  00                 	db	0
  4281  00A2D4  00                 	db	0
  4282  00A2D5                     __end_of_bit_pattern_degree:
  4283                           	opt stack 0
  4284  00A2D5                     _bit_pattern_verticalbar:
  4285                           	opt stack 0
  4286  00A2D5  04                 	db	4
  4287  00A2D6  04                 	db	4
  4288  00A2D7  04                 	db	4
  4289  00A2D8  04                 	db	4
  4290  00A2D9  04                 	db	4
  4291  00A2DA  04                 	db	4
  4292  00A2DB  04                 	db	4
  4293  00A2DC  04                 	db	4
  4294  00A2DD                     __end_of_bit_pattern_verticalbar:
  4295                           	opt stack 0
  4296  00A2DD                     _flash_command_pagesize_528:
  4297                           	opt stack 0
  4298  00A2DD  3D                 	db	61
  4299  00A2DE  2A                 	db	42
  4300  00A2DF  80                 	db	128
  4301  00A2E0  A7                 	db	167
  4302  00A2E1                     __end_of_flash_command_pagesize_528:
  4303                           	opt stack 0
  4304  00A2E1                     _flash_command_pagesize_512:
  4305                           	opt stack 0
  4306  00A2E1  3D                 	db	61
  4307  00A2E2  2A                 	db	42
  4308  00A2E3  80                 	db	128
  4309  00A2E4  A6                 	db	166
  4310  00A2E5                     __end_of_flash_command_pagesize_512:
  4311                           	opt stack 0
  4312  00A2E5                     _sd000:
  4313                           	opt stack 0
  4314  00A2E5  04                 	db	4
  4315  00A2E6  03                 	db	3
  4316  00A2E7  0409               	dw	1033
  4317  00A2E9                     __end_of_sd000:
  4318                           	opt stack 0
  4319  0000                     _RPINR22	set	3837
  4320  0000                     _RPOR23	set	3799
  4321  0000                     _RPOR21	set	3797
  4322  0000                     _RPINR21	set	3836
  4323  0000                     _RPOR4	set	3780
  4324  0000                     _PPSCONbits	set	3775
  4325  0000                     _CCPTMRS0bits	set	3922
  4326  0000                     _ANCON0bits	set	3912
  4327  0000                     _ANCON1bits	set	3913
  4328  0000                     _UEP0bits	set	3878
  4329  0000                     _UIEbits	set	3894
  4330  0000                     _UADDR	set	3896
  4331  0000                     _UIE	set	3894
  4332  0000                     _UEIE	set	3895
  4333  0000                     _UCFG	set	3897
  4334  0000                     _UEP1	set	3879
  4335  0000                     _UEP0	set	3878
  4336  0000                     _ADRESL	set	4035
  4337  0000                     _ADRESH	set	4036
  4338  0000                     _ADCON1bits	set	4033
  4339  0000                     _ADCON0bits	set	4034
  4340  0000                     _PORTA	set	3968
  4341  0000                     _PORTE	set	3972
  4342  0000                     _TMR2	set	4044
  4343  0000                     _PIE1bits	set	3997
  4344  0000                     _CCPR1L	set	4027
  4345  0000                     _PR2	set	4043
  4346  0000                     _T2CONbits	set	4042
  4347  0000                     _CCP1CONbits	set	4026
  4348  0000                     _RXADDRL	set	3945
  4349  0000                     _RXADDRH	set	3944
  4350  0000                     _DMABCL	set	3943
  4351  0000                     _DMABCH	set	3942
  4352  0000                     _TXADDRL	set	3947
  4353  0000                     _TXADDRH	set	3946
  4354  0000                     _DMACON2bits	set	3974
  4355  0000                     _DMACON1bits	set	3976
  4356  0000                     _SSP2CON1bits	set	3954
  4357  0000                     _SSP2STATbits	set	3955
  4358  0000                     _PORTDbits	set	3971
  4359  0000                     _PORTEbits	set	3972
  4360  0000                     _SSP1BUF	set	4041
  4361  0000                     _SSP1CON2bits	set	4037
  4362  0000                     _SSP1CON1bits	set	4038
  4363  0000                     _SSP1ADD	set	4040
  4364  0000                     _SSP1STATbits	set	4039
  4365  0000                     _PORTAbits	set	3968
  4366  0000                     _T0CONbits	set	4053
  4367  0000                     _TRISEbits	set	3990
  4368  0000                     _EECON2	set	4007
  4369  0000                     _LATBbits	set	3978
  4370  0000                     _LATAbits	set	3977
  4371  0000                     _TRISAbits	set	3986
  4372  0000                     _LATCbits	set	3979
  4373  0000                     _TRISCbits	set	3988
  4374  0000                     _TRISBbits	set	3987
  4375  0000                     _LATDbits	set	3980
  4376  0000                     _TRISDbits	set	3989
  4377  0000                     _TMR0L	set	4054
  4378  0000                     _TMR0H	set	4055
  4379  0000                     _PIR1bits	set	3998
  4380  0000                     _OSCCON	set	4051
  4381  0000                     _OSCTUNEbits	set	3995
  4382  0000                     _INTCONbits	set	4082
  4383  0000                     _IPR2bits	set	4002
  4384  0000                     _RCONbits	set	4048
  4385  0000                     _UCON	set	3941
  4386  0000                     _USTAT	set	3940
  4387  0000                     _PIR2bits	set	4001
  4388  0000                     _UIRbits	set	3938
  4389  0000                     _UCONbits	set	3941
  4390  0000                     _UIR	set	3938
  4391  0000                     _UEIR	set	3939
  4392  0000                     _PIE2bits	set	4000
  4393  00A2E9                     STR_18:
  4394                           
  4395                           ; BSR set to: 1
  4396  00A2E9  68                 	db	104	;'h'
  4397  00A2EA  65                 	db	101	;'e'
  4398  00A2EB  6C                 	db	108	;'l'
  4399  00A2EC  6C                 	db	108	;'l'
  4400  00A2ED  6F                 	db	111	;'o'
  4401  00A2EE  20                 	db	32
  4402  00A2EF  77                 	db	119	;'w'
  4403  00A2F0  6F                 	db	111	;'o'
  4404  00A2F1  72                 	db	114	;'r'
  4405  00A2F2  6C                 	db	108	;'l'
  4406  00A2F3  64                 	db	100	;'d'
  4407  00A2F4  21                 	db	33
  4408  00A2F5  00                 	db	0
  4409  00A2F6                     STR_15:
  4410                           
  4411                           ; BSR set to: 1
  4412  00A2F6  53                 	db	83	;'S'
  4413  00A2F7  74                 	db	116	;'t'
  4414  00A2F8  65                 	db	101	;'e'
  4415  00A2F9  70                 	db	112	;'p'
  4416  00A2FA  70                 	db	112	;'p'
  4417  00A2FB  65                 	db	101	;'e'
  4418  00A2FC  72                 	db	114	;'r'
  4419  00A2FD  43                 	db	67	;'C'
  4420  00A2FE  74                 	db	116	;'t'
  4421  00A2FF  72                 	db	114	;'r'
  4422  00A300  6C                 	db	108	;'l'
  4423  00A301  00                 	db	0
  4424  00A302                     STR_16:
  4425                           
  4426                           ; BSR set to: 1
  4427  00A302  46                 	db	70	;'F'
  4428  00A303  49                 	db	73	;'I'
  4429  00A304  4C                 	db	76	;'L'
  4430  00A305  45                 	db	69	;'E'
  4431  00A306  20                 	db	32
  4432  00A307  20                 	db	32
  4433  00A308  20                 	db	32
  4434  00A309  20                 	db	32
  4435  00A30A  00                 	db	0
  4436  00A30B                     STR_7:
  4437                           
  4438                           ; BSR set to: 1
  4439  00A30B  4D                 	db	77	;'M'
  4440  00A30C  53                 	db	83	;'S'
  4441  00A30D  44                 	db	68	;'D'
  4442  00A30E  4F                 	db	79	;'O'
  4443  00A30F  53                 	db	83	;'S'
  4444  00A310  35                 	db	53	;'5'
  4445  00A311  2E                 	db	46
  4446  00A312  30                 	db	48	;'0'
  4447  00A313  00                 	db	0
  4448  00A314                     STR_1:
  4449                           
  4450                           ; BSR set to: 1
  4451  00A314  20                 	db	32
  4452  00A315  20                 	db	32
  4453  00A316  20                 	db	32
  4454  00A317  20                 	db	32
  4455  00A318  20                 	db	32
  4456  00A319  20                 	db	32
  4457  00A31A  20                 	db	32
  4458  00A31B  20                 	db	32
  4459  00A31C  00                 	db	0
  4460  00A31D                     STR_2:
  4461                           
  4462                           ; BSR set to: 1
  4463  00A31D  43                 	db	67	;'C'
  4464  00A31E  61                 	db	97	;'a'
  4465  00A31F  6E                 	db	110	;'n'
  4466  00A320  63                 	db	99	;'c'
  4467  00A321  65                 	db	101	;'e'
  4468  00A322  6C                 	db	108	;'l'
  4469  00A323  00                 	db	0
  4470  00A324                     STR_6:
  4471                           
  4472                           ; BSR set to: 1
  4473  00A324  53                 	db	83	;'S'
  4474  00A325  74                 	db	116	;'t'
  4475  00A326  6F                 	db	111	;'o'
  4476  00A327  70                 	db	112	;'p'
  4477  00A328  20                 	db	32
  4478  00A329  00                 	db	0
  4479  00A32A                     STR_17:
  4480                           
  4481                           ; BSR set to: 1
  4482  00A32A  54                 	db	84	;'T'
  4483  00A32B  58                 	db	88	;'X'
  4484  00A32C  54                 	db	84	;'T'
  4485  00A32D  00                 	db	0
  4486  0000                     
  4487                           ; #config settings
  4488  00A32E  00                 	db	0	; dummy byte at the end
  4489  0000                     
  4490                           	psect	cinit
  4491  013732                     __pcinit:
  4492                           	opt stack 0
  4493  013732                     start_initialization:
  4494                           	opt stack 0
  4495  013732                     __initialization:
  4496                           	opt stack 0
  4497                           
  4498                           ; Initialize objects allocated to BANK4 (80 bytes)
  4499                           ; load TBLPTR registers with __pidataBANK4
  4500  013732  0E54               	movlw	low __pidataBANK4
  4501  013734  6EF6               	movwf	tblptrl,c
  4502  013736  0E4C               	movlw	high __pidataBANK4
  4503  013738  6EF7               	movwf	tblptrh,c
  4504  01373A  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4505  01373C  6EF8               	movwf	tblptru,c
  4506  01373E  EE04  F000         	lfsr	0,__pdataBANK4
  4507  013742  EE10 F050          	lfsr	1,80
  4508  013746                     copy_data0:
  4509  013746  0009               	tblrd		*+
  4510  013748  CFF5 FFEE          	movff	tablat,postinc0
  4511  01374C  50E5               	movf	postdec1,w,c
  4512  01374E  50E1               	movf	fsr1l,w,c
  4513  013750  E1FA               	bnz	copy_data0
  4514                           
  4515                           ; Initialize objects allocated to BANK2 (77 bytes)
  4516                           ; load TBLPTR registers with __pidataBANK2
  4517  013752  0EE4               	movlw	low __pidataBANK2
  4518  013754  6EF6               	movwf	tblptrl,c
  4519  013756  0E4D               	movlw	high __pidataBANK2
  4520  013758  6EF7               	movwf	tblptrh,c
  4521  01375A  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4522  01375C  6EF8               	movwf	tblptru,c
  4523  01375E  EE02  F089         	lfsr	0,__pdataBANK2
  4524  013762  EE10 F04D          	lfsr	1,77
  4525  013766                     copy_data1:
  4526  013766  0009               	tblrd		*+
  4527  013768  CFF5 FFEE          	movff	tablat,postinc0
  4528  01376C  50E5               	movf	postdec1,w,c
  4529  01376E  50E1               	movf	fsr1l,w,c
  4530  013770  E1FA               	bnz	copy_data1
  4531                           
  4532                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4533  013772  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4534  013776  EE14 F000          	lfsr	1,1024
  4535  01377A                     clear_0:
  4536  01377A  6AEE               	clrf	postinc0,c
  4537  01377C  50E5               	movf	postdec1,w,c
  4538  01377E  50E1               	movf	fsr1l,w,c
  4539  013780  E1FC               	bnz	clear_0
  4540  013782  50E2               	movf	fsr1h,w,c
  4541  013784  E1FA               	bnz	clear_0
  4542                           
  4543                           ; Clear objects allocated to BANK3 (192 bytes)
  4544  013786  EE03  F000         	lfsr	0,__pbssBANK3
  4545  01378A  0EC0               	movlw	192
  4546  01378C                     clear_1:
  4547  01378C  6AEE               	clrf	postinc0,c
  4548  01378E  06E8               	decf	wreg,f,c
  4549  013790  E1FD               	bnz	clear_1
  4550                           
  4551                           ; Clear objects allocated to BANK2 (137 bytes)
  4552  013792  EE02  F000         	lfsr	0,__pbssBANK2
  4553  013796  0E89               	movlw	137
  4554  013798                     clear_2:
  4555  013798  6AEE               	clrf	postinc0,c
  4556  01379A  06E8               	decf	wreg,f,c
  4557  01379C  E1FD               	bnz	clear_2
  4558                           
  4559                           ; Clear objects allocated to BANK1 (195 bytes)
  4560  01379E  EE01  F000         	lfsr	0,__pbssBANK1
  4561  0137A2  0EC3               	movlw	195
  4562  0137A4                     clear_3:
  4563  0137A4  6AEE               	clrf	postinc0,c
  4564  0137A6  06E8               	decf	wreg,f,c
  4565  0137A8  E1FD               	bnz	clear_3
  4566                           
  4567                           ; Clear objects allocated to BANK0 (2 bytes)
  4568  0137AA  0100               	movlb	0
  4569  0137AC  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4570  0137AE  6BFE               	clrf	__pbssBANK0& (0+255),b
  4571                           
  4572                           ; Clear objects allocated to COMRAM (13 bytes)
  4573  0137B0  EE00  F052         	lfsr	0,__pbssCOMRAM
  4574  0137B4  0E0D               	movlw	13
  4575  0137B6                     clear_4:
  4576  0137B6  6AEE               	clrf	postinc0,c
  4577  0137B8  06E8               	decf	wreg,f,c
  4578  0137BA  E1FD               	bnz	clear_4
  4579  0137BC                     end_of_initialization:
  4580                           	opt stack 0
  4581  0137BC                     __end_of__initialization:
  4582                           	opt stack 0
  4583  0137BC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4584  0137BE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4585  0137C0  0100               	movlb	0
  4586  0137C2  EF03  F09B         	goto	_main	;jump to C main() function
  4587                           tblptru	equ	0xFF8
  4588                           tblptrh	equ	0xFF7
  4589                           tblptrl	equ	0xFF6
  4590                           tablat	equ	0xFF5
  4591                           postinc0	equ	0xFEE
  4592                           wreg	equ	0xFE8
  4593                           postdec1	equ	0xFE5
  4594                           fsr1h	equ	0xFE2
  4595                           fsr1l	equ	0xFE1
  4596                           
  4597                           	psect	bssCOMRAM
  4598  000052                     __pbssCOMRAM:
  4599                           	opt stack 0
  4600  000052                     _inPipes:
  4601                           	opt stack 0
  4602  000052                     	ds	6
  4603  000058                     _motor_current_stepcount:
  4604                           	opt stack 0
  4605  000058                     	ds	4
  4606  00005C                     _pBDTEntryEP0OutNext:
  4607                           	opt stack 0
  4608  00005C                     	ds	2
  4609  00005E                     _USBDeviceState:
  4610                           	opt stack 0
  4611  00005E                     	ds	1
  4612                           tblptru	equ	0xFF8
  4613                           tblptrh	equ	0xFF7
  4614                           tblptrl	equ	0xFF6
  4615                           tablat	equ	0xFF5
  4616                           postinc0	equ	0xFEE
  4617                           wreg	equ	0xFE8
  4618                           postdec1	equ	0xFE5
  4619                           fsr1h	equ	0xFE2
  4620                           fsr1l	equ	0xFE1
  4621                           
  4622                           	psect	bssBANK0
  4623  0000FE                     __pbssBANK0:
  4624                           	opt stack 0
  4625  0000FE                     _motor_current_speed:
  4626                           	opt stack 0
  4627  0000FE                     	ds	2
  4628                           tblptru	equ	0xFF8
  4629                           tblptrh	equ	0xFF7
  4630                           tblptrl	equ	0xFF6
  4631                           tablat	equ	0xFF5
  4632                           postinc0	equ	0xFEE
  4633                           wreg	equ	0xFE8
  4634                           postdec1	equ	0xFE5
  4635                           fsr1h	equ	0xFE2
  4636                           fsr1l	equ	0xFE1
  4637                           
  4638                           	psect	bssBANK1
  4639  000100                     __pbssBANK1:
  4640                           	opt stack 0
  4641  000100                     _gblSenseData:
  4642                           	opt stack 0
  4643  000100                     	ds	18
  4644  000112                     _outPipes:
  4645                           	opt stack 0
  4646  000112                     	ds	9
  4647  00011B                     _pBDTEntryIn:
  4648                           	opt stack 0
  4649  00011B                     	ds	6
  4650  000121                     _pBDTEntryOut:
  4651                           	opt stack 0
  4652  000121                     	ds	6
  4653  000127                     _motor_final_stepcount:
  4654                           	opt stack 0
  4655  000127                     	ds	4
  4656  00012B                     _LBA:
  4657                           	opt stack 0
  4658  00012B                     	ds	4
  4659  00012F                     _USB1msTickCount:
  4660                           	opt stack 0
  4661  00012F                     	ds	4
  4662  000133                     _config_external:
  4663                           	opt stack 0
  4664  000133                     	ds	3
  4665  000136                     _config_internal:
  4666                           	opt stack 0
  4667  000136                     	ds	3
  4668  000139                     _ep_data_out:
  4669                           	opt stack 0
  4670  000139                     	ds	3
  4671  00013C                     _ep_data_in:
  4672                           	opt stack 0
  4673  00013C                     	ds	3
  4674  00013F                     _motor_maximum_speed:
  4675                           	opt stack 0
  4676  00013F                     	ds	2
  4677  000141                     _USBInHandle:
  4678                           	opt stack 0
  4679  000141                     	ds	2
  4680  000143                     _USBOutHandle:
  4681                           	opt stack 0
  4682  000143                     	ds	2
  4683  000145                     _TransferLength:
  4684                           	opt stack 0
  4685  000145                     	ds	2
  4686  000147                     _gblMediaPresent:
  4687                           	opt stack 0
  4688  000147                     	ds	2
  4689  000149                     _USBMSDInHandle:
  4690                           	opt stack 0
  4691  000149                     	ds	2
  4692  00014B                     _USBMSDOutHandle:
  4693                           	opt stack 0
  4694  00014B                     	ds	2
  4695  00014D                     _ptrNextData:
  4696                           	opt stack 0
  4697  00014D                     	ds	2
  4698  00014F                     _pDst:
  4699                           	opt stack 0
  4700  00014F                     	ds	2
  4701  000151                     _pBDTEntryEP0OutCurrent:
  4702                           	opt stack 0
  4703  000151                     	ds	2
  4704  000153                     _enc2:
  4705                           	opt stack 0
  4706  000153                     	ds	1
  4707  000154                     _enc1:
  4708                           	opt stack 0
  4709  000154                     	ds	1
  4710  000155                     _motor_direction:
  4711                           	opt stack 0
  4712  000155                     	ds	1
  4713  000156                     _motor_mode:
  4714                           	opt stack 0
  4715  000156                     	ds	1
  4716  000157                     _motor_cue_write_index:
  4717                           	opt stack 0
  4718  000157                     	ds	1
  4719  000158                     _motor_cue_read_index:
  4720                           	opt stack 0
  4721  000158                     	ds	1
  4722  000159                     _active_configuration:
  4723                           	opt stack 0
  4724  000159                     	ds	1
  4725  00015A                     _power_state:
  4726                           	opt stack 0
  4727  00015A                     	ds	1
  4728  00015B                     _MSDCBWValid:
  4729                           	opt stack 0
  4730  00015B                     	ds	1
  4731  00015C                     _MSDHostNoData:
  4732                           	opt stack 0
  4733  00015C                     	ds	1
  4734  00015D                     _SoftDetach:
  4735                           	opt stack 0
  4736  00015D                     	ds	1
  4737  00015E                     _gblCBWLength:
  4738                           	opt stack 0
  4739  00015E                     	ds	1
  4740  00015F                     _MSDRetryAttempt:
  4741                           	opt stack 0
  4742  00015F                     	ds	1
  4743  000160                     _MSDWriteState:
  4744                           	opt stack 0
  4745  000160                     	ds	1
  4746  000161                     _MSDReadState:
  4747                           	opt stack 0
  4748  000161                     	ds	1
  4749  000162                     _MSDCommandState:
  4750                           	opt stack 0
  4751  000162                     	ds	1
  4752  000163                     _MSD_State:
  4753                           	opt stack 0
  4754  000163                     	ds	1
  4755  000164                     _USBTicksSinceSuspendEnd:
  4756                           	opt stack 0
  4757  000164                     	ds	1
  4758  000165                     _USBDeferOUTDataStagePackets:
  4759                           	opt stack 0
  4760  000165                     	ds	1
  4761  000166                     _USBDeferINDataStagePackets:
  4762                           	opt stack 0
  4763  000166                     	ds	1
  4764  000167                     _USBStatusStageEnabledFlag2:
  4765                           	opt stack 0
  4766  000167                     	ds	1
  4767  000168                     _USBStatusStageEnabledFlag1:
  4768                           	opt stack 0
  4769  000168                     	ds	1
  4770  000169                     _USBDeferStatusStagePacket:
  4771                           	opt stack 0
  4772  000169                     	ds	1
  4773  00016A                     _USBStatusStageTimeoutCounter:
  4774                           	opt stack 0
  4775  00016A                     	ds	1
  4776  00016B                     _BothEP0OutUOWNsSet:
  4777                           	opt stack 0
  4778  00016B                     	ds	1
  4779  00016C                     _endpoint_number:
  4780                           	opt stack 0
  4781  00016C                     	ds	1
  4782  00016D                     _USBBusIsSuspended:
  4783                           	opt stack 0
  4784  00016D                     	ds	1
  4785  00016E                     _RemoteWakeup:
  4786                           	opt stack 0
  4787  00016E                     	ds	1
  4788  00016F                     _controlTransferState:
  4789                           	opt stack 0
  4790  00016F                     	ds	1
  4791  000170                     _shortPacketStatus:
  4792                           	opt stack 0
  4793  000170                     	ds	1
  4794  000171                     _os:
  4795                           	opt stack 0
  4796  000171                     	ds	48
  4797  0001A1                     _config:
  4798                           	opt stack 0
  4799  0001A1                     	ds	28
  4800  0001BD                     _USBAlternateInterface:
  4801                           	opt stack 0
  4802  0001BD                     	ds	2
  4803  0001BF                     _active_protocol:
  4804                           	opt stack 0
  4805  0001BF                     	ds	1
  4806  0001C0                     _idle_rate:
  4807                           	opt stack 0
  4808  0001C0                     	ds	1
  4809  0001C1                     _USTATcopy:
  4810                           	opt stack 0
  4811  0001C1                     	ds	1
  4812  0001C2                     _USBActiveConfiguration:
  4813                           	opt stack 0
  4814  0001C2                     	ds	1
  4815                           tblptru	equ	0xFF8
  4816                           tblptrh	equ	0xFF7
  4817                           tblptrl	equ	0xFF6
  4818                           tablat	equ	0xFF5
  4819                           postinc0	equ	0xFEE
  4820                           wreg	equ	0xFE8
  4821                           postdec1	equ	0xFE5
  4822                           fsr1h	equ	0xFE2
  4823                           fsr1l	equ	0xFE1
  4824                           
  4825                           	psect	bssBANK2
  4826  000200                     __pbssBANK2:
  4827                           	opt stack 0
  4828  000200                     _gblCBW:
  4829                           	opt stack 0
  4830  000200                     	ds	31
  4831  00021F                     _params:
  4832                           	opt stack 0
  4833  00021F                     	ds	7
  4834  000226                     _motor_next_speed_check:
  4835                           	opt stack 0
  4836  000226                     	ds	4
  4837  00022A                     _gblBLKLen:
  4838                           	opt stack 0
  4839  00022A                     	ds	4
  4840  00022E                     _gblNumBLKS:
  4841                           	opt stack 0
  4842  00022E                     	ds	4
  4843  000232                     _MSBBufferIndex:
  4844                           	opt stack 0
  4845  000232                     	ds	2
  4846  000234                     _display_content:
  4847                           	opt stack 0
  4848  000234                     	ds	80
  4849  000284                     _mediaInformation:
  4850                           	opt stack 0
  4851  000284                     	ds	5
  4852                           tblptru	equ	0xFF8
  4853                           tblptrh	equ	0xFF7
  4854                           tblptrl	equ	0xFF6
  4855                           tablat	equ	0xFF5
  4856                           postinc0	equ	0xFEE
  4857                           wreg	equ	0xFE8
  4858                           postdec1	equ	0xFE5
  4859                           fsr1h	equ	0xFE2
  4860                           fsr1l	equ	0xFE1
  4861                           
  4862                           	psect	dataBANK2
  4863  000289                     __pdataBANK2:
  4864                           	opt stack 0
  4865  000289                     _LUN:
  4866                           	opt stack 0
  4867  000289                     	ds	29
  4868  0002A6                     i2c_display_init@F6951:
  4869                           	opt stack 0
  4870  0002A6                     	ds	9
  4871  0002AF                     __i2c_display_send_init_sequence@F6948:
  4872                           	opt stack 0
  4873  0002AF                     	ds	9
  4874  0002B8                     	ds	8
  4875  0002C0                     _configFile_used_name:
  4876                           	opt stack 0
  4877  0002C0                     	ds	8
  4878  0002C8                     _configFile_name:
  4879                           	opt stack 0
  4880  0002C8                     	ds	8
  4881  0002D0                     _configFile_used_extention:
  4882                           	opt stack 0
  4883  0002D0                     	ds	3
  4884  0002D3                     _configFile_extention:
  4885                           	opt stack 0
  4886  0002D3                     	ds	3
  4887                           tblptru	equ	0xFF8
  4888                           tblptrh	equ	0xFF7
  4889                           tblptrl	equ	0xFF6
  4890                           tablat	equ	0xFF5
  4891                           postinc0	equ	0xFEE
  4892                           wreg	equ	0xFE8
  4893                           postdec1	equ	0xFE5
  4894                           fsr1h	equ	0xFE2
  4895                           fsr1l	equ	0xFE1
  4896                           
  4897                           	psect	bssBANK3
  4898  000300                     __pbssBANK3:
  4899                           	opt stack 0
  4900  000300                     _motor_command_cue:
  4901                           	opt stack 0
  4902  000300                     	ds	64
  4903  000340                     _ToSendDataBuffer:
  4904                           	opt stack 0
  4905  000340                     	ds	64
  4906  000380                     _ReceivedDataBuffer:
  4907                           	opt stack 0
  4908  000380                     	ds	64
  4909                           tblptru	equ	0xFF8
  4910                           tblptrh	equ	0xFF7
  4911                           tblptrl	equ	0xFF6
  4912                           tablat	equ	0xFF5
  4913                           postinc0	equ	0xFEE
  4914                           wreg	equ	0xFE8
  4915                           postdec1	equ	0xFE5
  4916                           fsr1h	equ	0xFE2
  4917                           fsr1l	equ	0xFE1
  4918                           
  4919                           	psect	dataBANK4
  4920  000400                     __pdataBANK4:
  4921                           	opt stack 0
  4922  000400                     _dc_startup:
  4923                           	opt stack 0
  4924  000400                     	ds	80
  4925                           tblptru	equ	0xFF8
  4926                           tblptrh	equ	0xFF7
  4927                           tblptrl	equ	0xFF6
  4928                           tablat	equ	0xFF5
  4929                           postinc0	equ	0xFEE
  4930                           wreg	equ	0xFE8
  4931                           postdec1	equ	0xFE5
  4932                           fsr1h	equ	0xFE2
  4933                           fsr1l	equ	0xFE1
  4934                           
  4935                           	psect	bssBIGRAMll
  4936  000800                     __pbssBIGRAMll:
  4937                           	opt stack 0
  4938  000800                     _ConfigFile_buffer:
  4939                           	opt stack 0
  4940  000800                     	ds	512
  4941  000A00                     _buffer:
  4942                           	opt stack 0
  4943  000A00                     	ds	512
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           postinc0	equ	0xFEE
  4949                           wreg	equ	0xFE8
  4950                           postdec1	equ	0xFE5
  4951                           fsr1h	equ	0xFE2
  4952                           fsr1l	equ	0xFE1
  4953                           
  4954                           	psect	cstackBANK1
  4955  0001C3                     __pcstackBANK1:
  4956                           	opt stack 0
  4957  0001C3                     ??_configFile_read:
  4958                           
  4959                           ; 1 bytes @ 0x0
  4960  0001C3                     	ds	8
  4961  0001CB                     configFile_read@item_string:
  4962                           	opt stack 0
  4963                           
  4964                           ; 31 bytes @ 0x8
  4965  0001CB                     	ds	31
  4966  0001EA                     configFile_read@value_string:
  4967                           	opt stack 0
  4968                           
  4969                           ; 12 bytes @ 0x27
  4970  0001EA                     	ds	12
  4971  0001F6                     configFile_read@file_size:
  4972                           	opt stack 0
  4973                           
  4974                           ; 4 bytes @ 0x33
  4975  0001F6                     	ds	4
  4976  0001FA                     configFile_read@file_number:
  4977                           	opt stack 0
  4978                           
  4979                           ; 1 bytes @ 0x37
  4980  0001FA                     	ds	1
  4981  0001FB                     configFile_read@position:
  4982                           	opt stack 0
  4983                           
  4984                           ; 4 bytes @ 0x38
  4985  0001FB                     	ds	4
  4986                           tblptru	equ	0xFF8
  4987                           tblptrh	equ	0xFF7
  4988                           tblptrl	equ	0xFF6
  4989                           tablat	equ	0xFF5
  4990                           postinc0	equ	0xFEE
  4991                           wreg	equ	0xFE8
  4992                           postdec1	equ	0xFE5
  4993                           fsr1h	equ	0xFE2
  4994                           fsr1l	equ	0xFE1
  4995                           
  4996                           	psect	cstackBANK0
  4997  000060                     __pcstackBANK0:
  4998                           	opt stack 0
  4999  000060                     ??_motor_stop:
  5000  000060                     ??_isdigit:
  5001  000060                     ??__i2c_wait_idle:
  5002  000060                     ??__display_clear:
  5003  000060                     ??__divide_jump_size_increment:
  5004  000060                     ??__divide_jump_size_decrement:
  5005  000060                     ?_USBTransferOnePacket:
  5006                           	opt stack 0
  5007  000060                     ?_ExternalFlash_MediaInitialize:
  5008                           	opt stack 0
  5009  000060                     ?_ExternalFlash_SectorSizeRead:
  5010                           	opt stack 0
  5011  000060                     ?_strlen:
  5012                           	opt stack 0
  5013  000060                     ?_strncmp:
  5014                           	opt stack 0
  5015  000060                     ?__sector_from_file_number:
  5016                           	opt stack 0
  5017  000060                     ?__offset_from_file_number:
  5018                           	opt stack 0
  5019  000060                     ?__data_sector_from_cluster:
  5020                           	opt stack 0
  5021  000060                     ?__fat_sector_from_cluster:
  5022                           	opt stack 0
  5023  000060                     ?__fat_offset_from_cluster:
  5024                           	opt stack 0
  5025  000060                     ?__cluster_from_sector_and_offset:
  5026                           	opt stack 0
  5027  000060                     ?__get_available_offset_from_buffer:
  5028                           	opt stack 0
  5029  000060                     ?__read_value_from_offset:
  5030                           	opt stack 0
  5031  000060                     ?__get_time:
  5032                           	opt stack 0
  5033  000060                     ?__get_date:
  5034                           	opt stack 0
  5035  000060                     ?__encoder_next_setup_stepsize:
  5036                           	opt stack 0
  5037  000060                     ?__encoder_next_arc_step_size:
  5038                           	opt stack 0
  5039  000060                     ?___wmul:
  5040                           	opt stack 0
  5041  000060                     ?___lwdiv:
  5042                           	opt stack 0
  5043  000060                     ?___lwmod:
  5044                           	opt stack 0
  5045  000060                     ?_ExternalFlash_CapacityRead:
  5046                           	opt stack 0
  5047  000060                     ?___lmul:
  5048                           	opt stack 0
  5049  000060                     ?___lldiv:
  5050                           	opt stack 0
  5051  000060                     ?___aldiv:
  5052                           	opt stack 0
  5053  000060                     ?___almod:
  5054                           	opt stack 0
  5055  000060                     ?___fltol:
  5056                           	opt stack 0
  5057  000060                     ?___llmod:
  5058                           	opt stack 0
  5059  000060                     ?___xxtofl:
  5060                           	opt stack 0
  5061  000060                     USBTransferOnePacket@dir:
  5062                           	opt stack 0
  5063  000060                     USBStallEndpoint@dir:
  5064                           	opt stack 0
  5065  000060                     __i2c_send@dat:
  5066                           	opt stack 0
  5067  000060                     display_get_character@position:
  5068                           	opt stack 0
  5069  000060                     __encoder_next_divide_step_size@old_stepsize:
  5070                           	opt stack 0
  5071  000060                     toupper@c:
  5072                           	opt stack 0
  5073  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5074                           	opt stack 0
  5075  000060                     SYSTEM_Initialize@pll_startup_counter:
  5076                           	opt stack 0
  5077  000060                     ExternalFlash_MediaInitialize@config:
  5078                           	opt stack 0
  5079  000060                     ExternalFlash_SectorSizeRead@config:
  5080                           	opt stack 0
  5081  000060                     ExternalFlash_CapacityRead@config:
  5082                           	opt stack 0
  5083  000060                     ExternalFlash_MediaDetect@config:
  5084                           	opt stack 0
  5085  000060                     ExternalFlash_WriteProtectStateGet@config:
  5086                           	opt stack 0
  5087  000060                     __data_sector_from_cluster@fat_cluster:
  5088                           	opt stack 0
  5089  000060                     __fat_sector_from_cluster@cluster:
  5090                           	opt stack 0
  5091  000060                     __fat_offset_from_cluster@cluster:
  5092                           	opt stack 0
  5093  000060                     __cluster_from_sector_and_offset@sector:
  5094                           	opt stack 0
  5095  000060                     __get_available_offset_from_buffer@minimum_offset:
  5096                           	opt stack 0
  5097  000060                     __read_value_from_offset@offset:
  5098                           	opt stack 0
  5099  000060                     __write_value_to_offset@offset:
  5100                           	opt stack 0
  5101  000060                     __get_mbr@idx:
  5102                           	opt stack 0
  5103  000060                     __get_fbr@idx:
  5104                           	opt stack 0
  5105  000060                     __get_fat@idx:
  5106                           	opt stack 0
  5107  000060                     __get_root@idx:
  5108                           	opt stack 0
  5109  000060                     __get_data@idx:
  5110                           	opt stack 0
  5111  000060                     spi_tx@data:
  5112                           	opt stack 0
  5113  000060                     spi_tx_tx@command:
  5114                           	opt stack 0
  5115  000060                     spi_tx_rx@command:
  5116                           	opt stack 0
  5117  000060                     __fill_buffer_get_mode_details@outBuffer:
  5118                           	opt stack 0
  5119  000060                     motor_change_speed@new_speed:
  5120                           	opt stack 0
  5121  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5122                           	opt stack 0
  5123  000060                     __encoder_next_arc_step_size@old_stepsize:
  5124                           	opt stack 0
  5125  000060                     __get_item@item_string:
  5126                           	opt stack 0
  5127  000060                     ___wmul@multiplier:
  5128                           	opt stack 0
  5129  000060                     ___lwdiv@dividend:
  5130                           	opt stack 0
  5131  000060                     ___lwmod@dividend:
  5132                           	opt stack 0
  5133  000060                     memcpy@d1:
  5134                           	opt stack 0
  5135  000060                     memset@p1:
  5136                           	opt stack 0
  5137  000060                     strlen@s:
  5138                           	opt stack 0
  5139  000060                     strncmp@s1:
  5140                           	opt stack 0
  5141  000060                     __spi_init@details:
  5142                           	opt stack 0
  5143  000060                     ___lmul@multiplier:
  5144                           	opt stack 0
  5145  000060                     ___lldiv@dividend:
  5146                           	opt stack 0
  5147  000060                     ___aldiv@dividend:
  5148                           	opt stack 0
  5149  000060                     ___almod@dividend:
  5150                           	opt stack 0
  5151  000060                     ___fltol@f1:
  5152                           	opt stack 0
  5153  000060                     ___llmod@dividend:
  5154                           	opt stack 0
  5155  000060                     ___xxtofl@val:
  5156                           	opt stack 0
  5157                           
  5158                           ; 4 bytes @ 0x0
  5159  000060                     	ds	1
  5160  000061                     ??_USBStallEndpoint:
  5161  000061                     ??_display_get_character:
  5162  000061                     ?_stricmp:
  5163                           	opt stack 0
  5164  000061                     _isdigit$8210:
  5165                           	opt stack 0
  5166  000061                     USBTransferOnePacket@data:
  5167                           	opt stack 0
  5168  000061                     stricmp@s1:
  5169                           	opt stack 0
  5170                           
  5171                           ; 2 bytes @ 0x1
  5172  000061                     	ds	1
  5173  000062                     ??_MSDComputeDeviceInAndResidue:
  5174  000062                     ??_strlen:
  5175  000062                     ??__fill_buffer_get_mode_details:
  5176  000062                     ??__get_mbr:
  5177  000062                     ??__get_fbr:
  5178  000062                     ??__get_fat:
  5179  000062                     ??__get_root:
  5180  000062                     ??__encoder_next_setup_stepsize:
  5181  000062                     ??__encoder_next_arc_step_size:
  5182  000062                     __display_clear@row:
  5183                           	opt stack 0
  5184  000062                     __sector_from_file_number@file_number:
  5185                           	opt stack 0
  5186  000062                     __offset_from_file_number@file_number:
  5187                           	opt stack 0
  5188  000062                     isdigit@c:
  5189                           	opt stack 0
  5190  000062                     SYSTEM_Initialize@pll_startup_counter_3132:
  5191                           	opt stack 0
  5192  000062                     __cluster_from_sector_and_offset@offset:
  5193                           	opt stack 0
  5194  000062                     __get_available_offset_from_buffer@buffer:
  5195                           	opt stack 0
  5196  000062                     __read_value_from_offset@buffer:
  5197                           	opt stack 0
  5198  000062                     __write_value_to_offset@buffer:
  5199                           	opt stack 0
  5200  000062                     spi_tx@length:
  5201                           	opt stack 0
  5202  000062                     spi_tx_tx@command_length:
  5203                           	opt stack 0
  5204  000062                     spi_tx_rx@command_length:
  5205                           	opt stack 0
  5206  000062                     motor_set_manual_speed@new_speed:
  5207                           	opt stack 0
  5208  000062                     __get_item@value_string:
  5209                           	opt stack 0
  5210  000062                     ___wmul@multiplicand:
  5211                           	opt stack 0
  5212  000062                     ___lwdiv@divisor:
  5213                           	opt stack 0
  5214  000062                     ___lwmod@divisor:
  5215                           	opt stack 0
  5216  000062                     memcpy@s1:
  5217                           	opt stack 0
  5218  000062                     memset@c:
  5219                           	opt stack 0
  5220  000062                     strncmp@s2:
  5221                           	opt stack 0
  5222                           
  5223                           ; 2 bytes @ 0x2
  5224  000062                     	ds	1
  5225  000063                     USBTransferOnePacket@len:
  5226                           	opt stack 0
  5227  000063                     __display_clear@col:
  5228                           	opt stack 0
  5229  000063                     display_get_character@line:
  5230                           	opt stack 0
  5231  000063                     spi_init@configuration:
  5232                           	opt stack 0
  5233  000063                     __sector_from_file_number@sector:
  5234                           	opt stack 0
  5235  000063                     __offset_from_file_number@offset:
  5236                           	opt stack 0
  5237  000063                     stricmp@s2:
  5238                           	opt stack 0
  5239                           
  5240                           ; 2 bytes @ 0x3
  5241  000063                     	ds	1
  5242  000064                     ??_USBTransferOnePacket:
  5243  000064                     ??_spi_tx:
  5244  000064                     ??__get_available_offset_from_buffer:
  5245  000064                     ??__read_value_from_offset:
  5246  000064                     ??___fltol:
  5247  000064                     ??___xxtofl:
  5248  000064                     SYSTEM_Initialize@state:
  5249                           	opt stack 0
  5250  000064                     ___lwmod@counter:
  5251                           	opt stack 0
  5252  000064                     __write_value_to_offset@value:
  5253                           	opt stack 0
  5254  000064                     spi_tx_tx@data:
  5255                           	opt stack 0
  5256  000064                     spi_tx_rx@data:
  5257                           	opt stack 0
  5258  000064                     __fill_buffer_get_display@outBuffer:
  5259                           	opt stack 0
  5260  000064                     __parse_set_manual_speed@data:
  5261                           	opt stack 0
  5262  000064                     __get_item@buffer:
  5263                           	opt stack 0
  5264  000064                     ___wmul@product:
  5265                           	opt stack 0
  5266  000064                     ___lwdiv@quotient:
  5267                           	opt stack 0
  5268  000064                     memcpy@n:
  5269                           	opt stack 0
  5270  000064                     memset@n:
  5271                           	opt stack 0
  5272  000064                     strlen@cp:
  5273                           	opt stack 0
  5274  000064                     strncmp@len:
  5275                           	opt stack 0
  5276  000064                     ___lmul@multiplicand:
  5277                           	opt stack 0
  5278  000064                     ___lldiv@divisor:
  5279                           	opt stack 0
  5280  000064                     ___aldiv@divisor:
  5281                           	opt stack 0
  5282  000064                     ___almod@divisor:
  5283                           	opt stack 0
  5284  000064                     ___llmod@divisor:
  5285                           	opt stack 0
  5286                           
  5287                           ; 4 bytes @ 0x4
  5288  000064                     	ds	1
  5289  000065                     ??_stricmp:
  5290  000065                     USBStallEndpoint@ep:
  5291                           	opt stack 0
  5292  000065                     __i2c_eeprom_busy@busy:
  5293                           	opt stack 0
  5294  000065                     __i2c_write@data:
  5295                           	opt stack 0
  5296  000065                     __i2c_read@data:
  5297                           	opt stack 0
  5298  000065                     i2c_display_write_fixed@data:
  5299                           	opt stack 0
  5300                           
  5301                           ; 2 bytes @ 0x5
  5302  000065                     	ds	1
  5303  000066                     ??_strncmp:
  5304  000066                     ??__write_value_to_offset:
  5305  000066                     ??__get_item:
  5306  000066                     ?_atoi:
  5307                           	opt stack 0
  5308  000066                     __fill_buffer_get_display@secondHalf:
  5309                           	opt stack 0
  5310  000066                     ___lwdiv@counter:
  5311                           	opt stack 0
  5312  000066                     stricmp@r:
  5313                           	opt stack 0
  5314  000066                     USBStallEndpoint@p:
  5315                           	opt stack 0
  5316  000066                     __get_available_offset_from_buffer@offset:
  5317                           	opt stack 0
  5318  000066                     spi_tx_tx@data_length:
  5319                           	opt stack 0
  5320  000066                     spi_tx_rx@data_length:
  5321                           	opt stack 0
  5322  000066                     __parse_set_manual_speed@out_buffer:
  5323                           	opt stack 0
  5324  000066                     atoi@s:
  5325                           	opt stack 0
  5326  000066                     memcpy@d:
  5327                           	opt stack 0
  5328  000066                     memset@p:
  5329                           	opt stack 0
  5330                           
  5331                           ; 2 bytes @ 0x6
  5332  000066                     	ds	1
  5333  000067                     ??__fill_buffer_get_display:
  5334  000067                     __i2c_write@length:
  5335                           	opt stack 0
  5336  000067                     __i2c_read@length:
  5337                           	opt stack 0
  5338  000067                     i2c_display_write_fixed@length:
  5339                           	opt stack 0
  5340  000067                     __read_value_from_offset@value:
  5341                           	opt stack 0
  5342  000067                     utoa@buf:
  5343                           	opt stack 0
  5344                           
  5345                           ; 2 bytes @ 0x7
  5346  000067                     	ds	1
  5347  000068                     ??_spi_tx_rx:
  5348  000068                     ??_spi_tx_tx:
  5349  000068                     ??_atoi:
  5350  000068                     ??__i2c_read:
  5351  000068                     USBDeviceInit@i:
  5352                           	opt stack 0
  5353  000068                     USBTransferOnePacket@ep:
  5354                           	opt stack 0
  5355  000068                     MSDErrorHandler@ErrorCase:
  5356                           	opt stack 0
  5357  000068                     __i2c_write@slave_address:
  5358                           	opt stack 0
  5359  000068                     i2c_display_write_fixed@pos:
  5360                           	opt stack 0
  5361  000068                     __flash_wakeup@command:
  5362                           	opt stack 0
  5363  000068                     ___aldiv@counter:
  5364                           	opt stack 0
  5365  000068                     ___almod@counter:
  5366                           	opt stack 0
  5367  000068                     ___fltol@sign1:
  5368                           	opt stack 0
  5369  000068                     ___llmod@counter:
  5370                           	opt stack 0
  5371  000068                     ___xxtofl@sign:
  5372                           	opt stack 0
  5373  000068                     __parse_set_manual_speed@out_idx_ptr:
  5374                           	opt stack 0
  5375  000068                     memcpy@s:
  5376                           	opt stack 0
  5377  000068                     ___lmul@product:
  5378                           	opt stack 0
  5379  000068                     ___lldiv@quotient:
  5380                           	opt stack 0
  5381                           
  5382                           ; 4 bytes @ 0x8
  5383  000068                     	ds	1
  5384  000069                     MSDErrorHandler@OldMSD_State:
  5385                           	opt stack 0
  5386  000069                     __i2c_write@cntr:
  5387                           	opt stack 0
  5388  000069                     __get_item@value_ctr:
  5389                           	opt stack 0
  5390  000069                     ___aldiv@sign:
  5391                           	opt stack 0
  5392  000069                     ___almod@sign:
  5393                           	opt stack 0
  5394  000069                     ___fltol@exp1:
  5395                           	opt stack 0
  5396  000069                     ___xxtofl@exp:
  5397                           	opt stack 0
  5398  000069                     USBTransferOnePacket@handle:
  5399                           	opt stack 0
  5400  000069                     utoa@val:
  5401                           	opt stack 0
  5402                           
  5403                           ; 2 bytes @ 0x9
  5404  000069                     	ds	1
  5405  00006A                     ??__parse_set_manual_speed:
  5406  00006A                     ??_i2c_display_init:
  5407  00006A                     __ic2_display_set_ddram_address@address:
  5408                           	opt stack 0
  5409  00006A                     __get_item@item_ctr:
  5410                           	opt stack 0
  5411  00006A                     atoi@sign:
  5412                           	opt stack 0
  5413  00006A                     memcpy@tmp:
  5414                           	opt stack 0
  5415  00006A                     __ic2_display_set_cgram_address@data_array:
  5416                           	opt stack 0
  5417  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5418                           	opt stack 0
  5419  00006A                     ___aldiv@quotient:
  5420                           	opt stack 0
  5421  00006A                     ___xxtofl@arg:
  5422                           	opt stack 0
  5423                           
  5424                           ; 4 bytes @ 0xA
  5425  00006A                     	ds	1
  5426  00006B                     __ic2_display_set_ddram_address@data_array:
  5427                           	opt stack 0
  5428  00006B                     __fill_buffer_get_status@outBuffer:
  5429                           	opt stack 0
  5430  00006B                     __parse_set_manual_speed@new_speed:
  5431                           	opt stack 0
  5432  00006B                     atoi@a:
  5433                           	opt stack 0
  5434  00006B                     utoa@base:
  5435                           	opt stack 0
  5436  00006B                     i2c_display_init@init_sequence:
  5437                           	opt stack 0
  5438                           
  5439                           ; 9 bytes @ 0xB
  5440  00006B                     	ds	1
  5441  00006C                     ?__flash_get_status:
  5442                           	opt stack 0
  5443  00006C                     ?_atol:
  5444                           	opt stack 0
  5445  00006C                     __fill_buffer_get_display@cntr:
  5446                           	opt stack 0
  5447  00006C                     ___lldiv@counter:
  5448                           	opt stack 0
  5449  00006C                     atol@s:
  5450                           	opt stack 0
  5451                           
  5452                           ; 2 bytes @ 0xC
  5453  00006C                     	ds	1
  5454  00006D                     __ic2_display_set_cgram_address@address:
  5455                           	opt stack 0
  5456  00006D                     i2c_display_cursor@position:
  5457                           	opt stack 0
  5458  00006D                     __fill_buffer_get_display@line:
  5459                           	opt stack 0
  5460  00006D                     utoa@v:
  5461                           	opt stack 0
  5462  00006D                     ultoa@buf:
  5463                           	opt stack 0
  5464                           
  5465                           ; 2 bytes @ 0xD
  5466  00006D                     	ds	1
  5467  00006E                     ?___fldiv:
  5468                           	opt stack 0
  5469  00006E                     ?___flmul:
  5470                           	opt stack 0
  5471  00006E                     ?___flneg:
  5472                           	opt stack 0
  5473  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5474                           	opt stack 0
  5475  00006E                     i2c_display_cursor@line:
  5476                           	opt stack 0
  5477  00006E                     __flash_get_status@command:
  5478                           	opt stack 0
  5479  00006E                     __fill_buffer_get_display@start_line:
  5480                           	opt stack 0
  5481  00006E                     i2c_display_program_custom_character@bit_pattern:
  5482                           	opt stack 0
  5483  00006E                     ___flneg@f1:
  5484                           	opt stack 0
  5485  00006E                     ___fldiv@b:
  5486                           	opt stack 0
  5487  00006E                     ___flmul@b:
  5488                           	opt stack 0
  5489                           
  5490                           ; 4 bytes @ 0xE
  5491  00006E                     	ds	1
  5492  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5493                           	opt stack 0
  5494  00006F                     __i2c_read@slave_address:
  5495                           	opt stack 0
  5496  00006F                     i2c_display_cursor@address:
  5497                           	opt stack 0
  5498  00006F                     __fill_buffer_get_display@position:
  5499                           	opt stack 0
  5500  00006F                     utoa@c:
  5501                           	opt stack 0
  5502  00006F                     __flash_get_status@status:
  5503                           	opt stack 0
  5504  00006F                     ultoa@val:
  5505                           	opt stack 0
  5506                           
  5507                           ; 4 bytes @ 0xF
  5508  00006F                     	ds	1
  5509  000070                     ??_atol:
  5510  000070                     ??_i2c_display_program_custom_character:
  5511  000070                     MSDCheckForErrorCases@DeviceNoData:
  5512                           	opt stack 0
  5513  000070                     __i2c_read@cntr:
  5514                           	opt stack 0
  5515  000070                     display_update@line:
  5516                           	opt stack 0
  5517  000070                     api_prepare@inBuffer:
  5518                           	opt stack 0
  5519  000070                     itoa@buf:
  5520                           	opt stack 0
  5521                           
  5522                           ; 2 bytes @ 0x10
  5523  000070                     	ds	1
  5524  000071                     i2c_eeprom_read@address:
  5525                           	opt stack 0
  5526  000071                     __flash_is_busy@status:
  5527                           	opt stack 0
  5528                           
  5529                           ; 2 bytes @ 0x11
  5530  000071                     	ds	1
  5531  000072                     ?___fladd:
  5532                           	opt stack 0
  5533  000072                     api_prepare@outBuffer:
  5534                           	opt stack 0
  5535  000072                     itoa@val:
  5536                           	opt stack 0
  5537  000072                     ___fladd@b:
  5538                           	opt stack 0
  5539  000072                     ___fldiv@a:
  5540                           	opt stack 0
  5541  000072                     ___flmul@a:
  5542                           	opt stack 0
  5543                           
  5544                           ; 4 bytes @ 0x12
  5545  000072                     	ds	1
  5546  000073                     i2c_eeprom_read@data:
  5547                           	opt stack 0
  5548  000073                     __flash_copy_page_to_buffer@page:
  5549                           	opt stack 0
  5550  000073                     __flash_compare_page_to_buffer@page:
  5551                           	opt stack 0
  5552  000073                     __flash_write_to_buffer@start:
  5553                           	opt stack 0
  5554  000073                     __flash_write_page_from_buffer@page:
  5555                           	opt stack 0
  5556  000073                     __flash_partial_read@page:
  5557                           	opt stack 0
  5558  000073                     ultoa@base:
  5559                           	opt stack 0
  5560  000073                     __flash_set_page_size@command:
  5561                           	opt stack 0
  5562                           
  5563                           ; 4 bytes @ 0x13
  5564  000073                     	ds	1
  5565  000074                     api_prepare@command:
  5566                           	opt stack 0
  5567  000074                     atol@sign:
  5568                           	opt stack 0
  5569  000074                     itoa@base:
  5570                           	opt stack 0
  5571  000074                     i2c_display_program_custom_character@data_array:
  5572                           	opt stack 0
  5573                           
  5574                           ; 11 bytes @ 0x14
  5575  000074                     	ds	1
  5576  000075                     i2c_eeprom_read@length:
  5577                           	opt stack 0
  5578  000075                     __flash_copy_page_to_buffer@buffer:
  5579                           	opt stack 0
  5580  000075                     __flash_compare_page_to_buffer@buffer:
  5581                           	opt stack 0
  5582  000075                     __flash_write_page_from_buffer@buffer:
  5583                           	opt stack 0
  5584  000075                     __flash_write_to_buffer@data:
  5585                           	opt stack 0
  5586  000075                     __flash_partial_read@start:
  5587                           	opt stack 0
  5588  000075                     atol@a:
  5589                           	opt stack 0
  5590  000075                     ultoa@v:
  5591                           	opt stack 0
  5592                           
  5593                           ; 4 bytes @ 0x15
  5594  000075                     	ds	1
  5595  000076                     ??_i2c_eeprom_read:
  5596  000076                     ??___fldiv:
  5597  000076                     ??___flmul:
  5598  000076                     ??__flash_copy_page_to_buffer:
  5599  000076                     ??__flash_compare_page_to_buffer:
  5600  000076                     ??__flash_write_page_from_buffer:
  5601  000076                     itoa@cp:
  5602                           	opt stack 0
  5603  000076                     ___fladd@a:
  5604                           	opt stack 0
  5605                           
  5606                           ; 4 bytes @ 0x16
  5607  000076                     	ds	1
  5608  000077                     i2c_eeprom_read@addr:
  5609                           	opt stack 0
  5610  000077                     __flash_set_page_size@size:
  5611                           	opt stack 0
  5612  000077                     __flash_write_to_buffer@data_length:
  5613                           	opt stack 0
  5614  000077                     __flash_partial_read@length:
  5615                           	opt stack 0
  5616                           
  5617                           ; 2 bytes @ 0x17
  5618  000077                     	ds	1
  5619  000078                     i2c_eeprom_read@slave_address:
  5620                           	opt stack 0
  5621  000078                     __display_padded_itoa@value:
  5622                           	opt stack 0
  5623  000078                     __display_itoa_u16@value:
  5624                           	opt stack 0
  5625                           
  5626                           ; 2 bytes @ 0x18
  5627  000078                     	ds	1
  5628  000079                     ?_i2c_eeprom_readUint32:
  5629                           	opt stack 0
  5630  000079                     __flash_write_to_buffer@buffer:
  5631                           	opt stack 0
  5632  000079                     atol@c:
  5633                           	opt stack 0
  5634  000079                     ultoa@c:
  5635                           	opt stack 0
  5636  000079                     i2c_eeprom_readUint32@address:
  5637                           	opt stack 0
  5638  000079                     __flash_compare_page_to_buffer@status:
  5639                           	opt stack 0
  5640  000079                     __flash_partial_read@data:
  5641                           	opt stack 0
  5642  000079                     __flash_copy_page_to_buffer@command:
  5643                           	opt stack 0
  5644  000079                     __flash_write_page_from_buffer@command:
  5645                           	opt stack 0
  5646                           
  5647                           ; 4 bytes @ 0x19
  5648  000079                     	ds	1
  5649  00007A                     ??___fladd:
  5650  00007A                     __display_padded_itoa@length:
  5651                           	opt stack 0
  5652  00007A                     ___flmul@sign:
  5653                           	opt stack 0
  5654  00007A                     __display_itoa_u16@text:
  5655                           	opt stack 0
  5656  00007A                     __parse_item@item_string:
  5657                           	opt stack 0
  5658  00007A                     ltoa@buf:
  5659                           	opt stack 0
  5660  00007A                     __flash_write_to_buffer@command:
  5661                           	opt stack 0
  5662  00007A                     ___fldiv@rem:
  5663                           	opt stack 0
  5664                           
  5665                           ; 4 bytes @ 0x1A
  5666  00007A                     	ds	1
  5667  00007B                     ??__flash_partial_read:
  5668  00007B                     __display_padded_itoa@text:
  5669                           	opt stack 0
  5670  00007B                     __flash_compare_page_to_buffer@command:
  5671                           	opt stack 0
  5672  00007B                     ___flmul@grs:
  5673                           	opt stack 0
  5674                           
  5675                           ; 4 bytes @ 0x1B
  5676  00007B                     	ds	1
  5677  00007C                     __display_start@cntr:
  5678                           	opt stack 0
  5679  00007C                     __parse_item@value_string:
  5680                           	opt stack 0
  5681  00007C                     ltoa@val:
  5682                           	opt stack 0
  5683                           
  5684                           ; 4 bytes @ 0x1C
  5685  00007C                     	ds	1
  5686  00007D                     ??__display_padded_itoa:
  5687  00007D                     i2c_eeprom_readUint32@data:
  5688                           	opt stack 0
  5689                           
  5690                           ; 4 bytes @ 0x1D
  5691  00007D                     	ds	1
  5692  00007E                     ___fldiv@sign:
  5693                           	opt stack 0
  5694                           
  5695                           ; 1 bytes @ 0x1E
  5696  00007E                     	ds	1
  5697  00007F                     i2c_display_program_custom_character@address:
  5698                           	opt stack 0
  5699  00007F                     ___flmul@aexp:
  5700                           	opt stack 0
  5701  00007F                     flash_sector_write@page:
  5702                           	opt stack 0
  5703  00007F                     flash_partial_write@page:
  5704                           	opt stack 0
  5705  00007F                     ___fldiv@new_exp:
  5706                           	opt stack 0
  5707  00007F                     __flash_partial_read@command:
  5708                           	opt stack 0
  5709                           
  5710                           ; 4 bytes @ 0x1F
  5711  00007F                     	ds	1
  5712  000080                     i2c_display_program_custom_character@cntr:
  5713                           	opt stack 0
  5714  000080                     ___flmul@bexp:
  5715                           	opt stack 0
  5716  000080                     ltoa@base:
  5717                           	opt stack 0
  5718                           
  5719                           ; 2 bytes @ 0x20
  5720  000080                     	ds	1
  5721  000081                     flash_sector_write@data:
  5722                           	opt stack 0
  5723  000081                     flash_partial_write@start:
  5724                           	opt stack 0
  5725  000081                     ___fldiv@grs:
  5726                           	opt stack 0
  5727  000081                     ___flmul@prod:
  5728                           	opt stack 0
  5729                           
  5730                           ; 4 bytes @ 0x21
  5731  000081                     	ds	1
  5732  000082                     ___fladd@signs:
  5733                           	opt stack 0
  5734  000082                     ltoa@cp:
  5735                           	opt stack 0
  5736  000082                     __display_padded_itoa@tmp:
  5737                           	opt stack 0
  5738                           
  5739                           ; 10 bytes @ 0x22
  5740  000082                     	ds	1
  5741  000083                     flash_sector_write@match:
  5742                           	opt stack 0
  5743  000083                     ___fladd@aexp:
  5744                           	opt stack 0
  5745  000083                     flash_partial_write@length:
  5746                           	opt stack 0
  5747  000083                     __flash_partial_read@address:
  5748                           	opt stack 0
  5749                           
  5750                           ; 4 bytes @ 0x23
  5751  000083                     	ds	1
  5752  000084                     ___fladd@bexp:
  5753                           	opt stack 0
  5754  000084                     ExternalFlash_SectorWrite@config:
  5755                           	opt stack 0
  5756  000084                     fat_format@cntr:
  5757                           	opt stack 0
  5758  000084                     __add_item@item_string:
  5759                           	opt stack 0
  5760                           
  5761                           ; 2 bytes @ 0x24
  5762  000084                     	ds	1
  5763  000085                     ___fladd@grs:
  5764                           	opt stack 0
  5765  000085                     ___fldiv@bexp:
  5766                           	opt stack 0
  5767  000085                     flash_partial_write@data:
  5768                           	opt stack 0
  5769  000085                     ___flmul@temp:
  5770                           	opt stack 0
  5771                           
  5772                           ; 2 bytes @ 0x25
  5773  000085                     	ds	1
  5774  000086                     ___fldiv@aexp:
  5775                           	opt stack 0
  5776  000086                     ExternalFlash_SectorWrite@sector_addr:
  5777                           	opt stack 0
  5778  000086                     __add_item@value:
  5779                           	opt stack 0
  5780                           
  5781                           ; 4 bytes @ 0x26
  5782  000086                     	ds	1
  5783  000087                     ??_adc_read_temperature:
  5784  000087                     ?__motor_get_speed_in_degrees:
  5785                           	opt stack 0
  5786  000087                     ?_motor_steps_from_degrees:
  5787                           	opt stack 0
  5788  000087                     ?__step_position_from_divide_position:
  5789                           	opt stack 0
  5790  000087                     flash_partial_write@match:
  5791                           	opt stack 0
  5792  000087                     flash_sector_read@page:
  5793                           	opt stack 0
  5794  000087                     flash_partial_read@page:
  5795                           	opt stack 0
  5796  000087                     motor_steps_from_degrees@degrees:
  5797                           	opt stack 0
  5798  000087                     __motor_get_speed_in_degrees@speed_index:
  5799                           	opt stack 0
  5800  000087                     __step_position_from_divide_position@divide_position:
  5801                           	opt stack 0
  5802  000087                     motor_calculate_position_in_degrees@tmp:
  5803                           	opt stack 0
  5804                           
  5805                           ; 4 bytes @ 0x27
  5806  000087                     	ds	1
  5807  000088                     __write_root@data:
  5808                           	opt stack 0
  5809                           
  5810                           ; 2 bytes @ 0x28
  5811  000088                     	ds	1
  5812  000089                     ??__motor_get_speed_in_degrees:
  5813  000089                     flash_sector_read@data:
  5814                           	opt stack 0
  5815  000089                     flash_partial_read@start:
  5816                           	opt stack 0
  5817  000089                     adc_read_temperature@adc_result:
  5818                           	opt stack 0
  5819                           
  5820                           ; 2 bytes @ 0x29
  5821  000089                     	ds	1
  5822  00008A                     ExternalFlash_SectorWrite@buffer:
  5823                           	opt stack 0
  5824  00008A                     __write_root@sector:
  5825                           	opt stack 0
  5826  00008A                     __add_item@buffer:
  5827                           	opt stack 0
  5828                           
  5829                           ; 2 bytes @ 0x2A
  5830  00008A                     	ds	1
  5831  00008B                     ??_fat_get_format_status:
  5832  00008B                     ?__get_available_cluster:
  5833                           	opt stack 0
  5834  00008B                     flash_partial_read@length:
  5835                           	opt stack 0
  5836  00008B                     ExternalFlash_SectorRead@config:
  5837                           	opt stack 0
  5838  00008B                     __get_available_cluster@first_sector:
  5839                           	opt stack 0
  5840  00008B                     fat_find_file@name:
  5841                           	opt stack 0
  5842  00008B                     motor_steps_from_degrees@steps:
  5843                           	opt stack 0
  5844  00008B                     __motor_get_speed_in_degrees@speed:
  5845                           	opt stack 0
  5846  00008B                     __step_position_from_divide_position@target_position:
  5847                           	opt stack 0
  5848  00008B                     adc_read_temperature@temperature:
  5849                           	opt stack 0
  5850                           
  5851                           ; 4 bytes @ 0x2B
  5852  00008B                     	ds	1
  5853  00008C                     ??__add_item:
  5854  00008C                     __display_padded_itoa@len:
  5855                           	opt stack 0
  5856  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5857                           	opt stack 0
  5858  00008C                     __write_root@offset:
  5859                           	opt stack 0
  5860                           
  5861                           ; 2 bytes @ 0x2C
  5862  00008C                     	ds	1
  5863  00008D                     __display_padded_itoa@pos:
  5864                           	opt stack 0
  5865  00008D                     flash_partial_read@data:
  5866                           	opt stack 0
  5867  00008D                     ExternalFlash_SectorWrite@page:
  5868                           	opt stack 0
  5869  00008D                     __get_available_cluster@skip_sector:
  5870                           	opt stack 0
  5871  00008D                     fat_find_file@extension:
  5872                           	opt stack 0
  5873  00008D                     fat_get_format_status@cntr:
  5874                           	opt stack 0
  5875  00008D                     ExternalFlash_SectorRead@sector_addr:
  5876                           	opt stack 0
  5877                           
  5878                           ; 4 bytes @ 0x2D
  5879  00008D                     	ds	1
  5880  00008E                     __display_padded_itoa@padding:
  5881                           	opt stack 0
  5882  00008E                     __write_root@file_number:
  5883                           	opt stack 0
  5884  00008E                     __add_item@length:
  5885                           	opt stack 0
  5886                           
  5887                           ; 1 bytes @ 0x2E
  5888  00008E                     	ds	1
  5889  00008F                     ??_MSDWriteHandler:
  5890  00008F                     ??_fat_find_file:
  5891  00008F                     ?__read_fat:
  5892                           	opt stack 0
  5893  00008F                     ?_motor_nonzero_steps_from_degrees:
  5894                           	opt stack 0
  5895  00008F                     __display_signed_itoa@value:
  5896                           	opt stack 0
  5897  00008F                     __get_available_cluster@cluster:
  5898                           	opt stack 0
  5899  00008F                     __root_is_available@root_sector:
  5900                           	opt stack 0
  5901  00008F                     __read_fat@cluster:
  5902                           	opt stack 0
  5903  00008F                     fat_get_file_information@data:
  5904                           	opt stack 0
  5905  00008F                     motor_nonzero_steps_from_degrees@degrees:
  5906                           	opt stack 0
  5907  00008F                     __motor_get_speed_in_degrees@lookup:
  5908                           	opt stack 0
  5909  00008F                     __motor_run@distance_in_steps:
  5910                           	opt stack 0
  5911                           
  5912                           ; 4 bytes @ 0x2F
  5913  00008F                     	ds	2
  5914  000091                     fat_find_file@file_number:
  5915                           	opt stack 0
  5916  000091                     __display_signed_itoa@text:
  5917                           	opt stack 0
  5918  000091                     ExternalFlash_SectorRead@buffer:
  5919                           	opt stack 0
  5920  000091                     __get_available_cluster@offset:
  5921                           	opt stack 0
  5922  000091                     __root_is_available@offset:
  5923                           	opt stack 0
  5924  000091                     __read_fat@sector:
  5925                           	opt stack 0
  5926                           
  5927                           ; 2 bytes @ 0x31
  5928  000091                     	ds	1
  5929  000092                     fat_find_file@sector:
  5930                           	opt stack 0
  5931  000092                     fat_get_file_information@root_sector:
  5932                           	opt stack 0
  5933                           
  5934                           ; 2 bytes @ 0x32
  5935  000092                     	ds	1
  5936  000093                     ?_motor_speed_from_index:
  5937                           	opt stack 0
  5938  000093                     __root_is_available@file_number:
  5939                           	opt stack 0
  5940  000093                     ExternalFlash_SectorRead@page:
  5941                           	opt stack 0
  5942  000093                     __get_available_cluster@sector:
  5943                           	opt stack 0
  5944  000093                     __read_fat@offset:
  5945                           	opt stack 0
  5946  000093                     motor_speed_from_index@speed_index:
  5947                           	opt stack 0
  5948  000093                     __motor_run@speed:
  5949                           	opt stack 0
  5950  000093                     motor_nonzero_steps_from_degrees@steps:
  5951                           	opt stack 0
  5952                           
  5953                           ; 4 bytes @ 0x33
  5954  000093                     	ds	1
  5955  000094                     __root_is_available@first_byte:
  5956                           	opt stack 0
  5957  000094                     fat_find_file@offset:
  5958                           	opt stack 0
  5959  000094                     fat_get_file_information@offset:
  5960                           	opt stack 0
  5961                           
  5962                           ; 2 bytes @ 0x34
  5963  000094                     	ds	1
  5964  000095                     ??_MSDReadHandler:
  5965  000095                     ?__make_cluster_chain:
  5966                           	opt stack 0
  5967  000095                     ?_fat_get_file_size:
  5968                           	opt stack 0
  5969  000095                     __get_available_root_entry@file_number:
  5970                           	opt stack 0
  5971  000095                     __motor_run@type:
  5972                           	opt stack 0
  5973  000095                     __display_itoa@value:
  5974                           	opt stack 0
  5975  000095                     __make_cluster_chain@first_cluster:
  5976                           	opt stack 0
  5977  000095                     __read_fat@value:
  5978                           	opt stack 0
  5979                           
  5980                           ; 2 bytes @ 0x35
  5981  000095                     	ds	1
  5982  000096                     ??__motor_run:
  5983  000096                     fat_get_file_information@file_number:
  5984                           	opt stack 0
  5985                           
  5986                           ; 1 bytes @ 0x36
  5987  000096                     	ds	1
  5988  000097                     ?__find_nth_cluster:
  5989                           	opt stack 0
  5990  000097                     __display_itoa@decimals:
  5991                           	opt stack 0
  5992  000097                     __find_nth_cluster@cluster:
  5993                           	opt stack 0
  5994  000097                     __make_cluster_chain@number_of_clusters:
  5995                           	opt stack 0
  5996                           
  5997                           ; 2 bytes @ 0x37
  5998  000097                     	ds	1
  5999  000098                     __display_itoa@text:
  6000                           	opt stack 0
  6001                           
  6002                           ; 2 bytes @ 0x38
  6003  000098                     	ds	1
  6004  000099                     ??_MSDProcessCommandMediaPresent:
  6005  000099                     ??__make_cluster_chain:
  6006  000099                     __find_nth_cluster@n:
  6007                           	opt stack 0
  6008  000099                     fat_get_file_size@sector:
  6009                           	opt stack 0
  6010                           
  6011                           ; 2 bytes @ 0x39
  6012  000099                     	ds	1
  6013  00009A                     ??__display_itoa:
  6014  00009A                     __motor_run@direction:
  6015                           	opt stack 0
  6016                           
  6017                           ; 1 bytes @ 0x3A
  6018  00009A                     	ds	1
  6019  00009B                     _MSDProcessCommandMediaPresent$2606:
  6020                           	opt stack 0
  6021  00009B                     __find_nth_cluster@offset:
  6022                           	opt stack 0
  6023  00009B                     __make_cluster_chain@next_offset:
  6024                           	opt stack 0
  6025  00009B                     fat_get_file_size@offset:
  6026                           	opt stack 0
  6027  00009B                     __motor_run@maximum_distance_in_degrees:
  6028                           	opt stack 0
  6029                           
  6030                           ; 2 bytes @ 0x3B
  6031  00009B                     	ds	2
  6032  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6033                           	opt stack 0
  6034  00009D                     __find_nth_cluster@sector_in_buffer:
  6035                           	opt stack 0
  6036  00009D                     __make_cluster_chain@minimum_sector:
  6037                           	opt stack 0
  6038  00009D                     fat_get_file_size@file_size:
  6039                           	opt stack 0
  6040  00009D                     __motor_run@maximum_distance_in_steps:
  6041                           	opt stack 0
  6042                           
  6043                           ; 4 bytes @ 0x3D
  6044  00009D                     	ds	1
  6045  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6046                           	opt stack 0
  6047                           
  6048                           ; 4 bytes @ 0x3E
  6049  00009E                     	ds	1
  6050  00009F                     __find_nth_cluster@sector:
  6051                           	opt stack 0
  6052  00009F                     __make_cluster_chain@different_sector_cluster:
  6053                           	opt stack 0
  6054                           
  6055                           ; 2 bytes @ 0x3F
  6056  00009F                     	ds	1
  6057  0000A0                     __display_itoa@tmp:
  6058                           	opt stack 0
  6059                           
  6060                           ; 10 bytes @ 0x40
  6061  0000A0                     	ds	1
  6062  0000A1                     __make_cluster_chain@data_changed:
  6063                           	opt stack 0
  6064  0000A1                     fat_get_file_size@file_number:
  6065                           	opt stack 0
  6066  0000A1                     fat_read_from_file_fast@start_byte:
  6067                           	opt stack 0
  6068  0000A1                     fat_modify_file@start_byte:
  6069                           	opt stack 0
  6070  0000A1                     motor_schedule_command@distance_in_steps:
  6071                           	opt stack 0
  6072                           
  6073                           ; 4 bytes @ 0x41
  6074  0000A1                     	ds	1
  6075  0000A2                     __make_cluster_chain@remaining_clusters:
  6076                           	opt stack 0
  6077  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6078                           	opt stack 0
  6079                           
  6080                           ; 4 bytes @ 0x42
  6081  0000A2                     	ds	2
  6082  0000A4                     __make_cluster_chain@sector:
  6083                           	opt stack 0
  6084                           
  6085                           ; 2 bytes @ 0x44
  6086  0000A4                     	ds	1
  6087  0000A5                     fat_modify_file@length:
  6088                           	opt stack 0
  6089  0000A5                     motor_schedule_command@speed:
  6090                           	opt stack 0
  6091  0000A5                     fat_read_from_file_fast@length:
  6092                           	opt stack 0
  6093                           
  6094                           ; 4 bytes @ 0x45
  6095  0000A5                     	ds	1
  6096  0000A6                     MSDProcessCommandMediaPresent@i:
  6097                           	opt stack 0
  6098  0000A6                     __make_cluster_chain@sector_in_buffer:
  6099                           	opt stack 0
  6100                           
  6101                           ; 2 bytes @ 0x46
  6102  0000A6                     	ds	1
  6103  0000A7                     ??_MSDProcessCommand:
  6104  0000A7                     motor_schedule_command@type:
  6105                           	opt stack 0
  6106  0000A7                     fat_modify_file@data:
  6107                           	opt stack 0
  6108                           
  6109                           ; 2 bytes @ 0x47
  6110  0000A7                     	ds	1
  6111  0000A8                     motor_schedule_command@direction:
  6112                           	opt stack 0
  6113  0000A8                     __make_cluster_chain@offset:
  6114                           	opt stack 0
  6115                           
  6116                           ; 2 bytes @ 0x48
  6117  0000A8                     	ds	1
  6118  0000A9                     ??_fat_modify_file:
  6119  0000A9                     motor_set_zero@direction:
  6120                           	opt stack 0
  6121  0000A9                     fat_read_from_file_fast@data:
  6122                           	opt stack 0
  6123  0000A9                     __parse_jump_steps@data:
  6124                           	opt stack 0
  6125  0000A9                     motor_go_to_steps_position@target_position:
  6126                           	opt stack 0
  6127  0000A9                     _motor_arc_move$8817:
  6128                           	opt stack 0
  6129                           
  6130                           ; 4 bytes @ 0x49
  6131  0000A9                     	ds	1
  6132  0000AA                     __display_itoa@len:
  6133                           	opt stack 0
  6134  0000AA                     __make_cluster_chain@next_cluster:
  6135                           	opt stack 0
  6136                           
  6137                           ; 2 bytes @ 0x4A
  6138  0000AA                     	ds	1
  6139  0000AB                     __display_itoa@missing:
  6140                           	opt stack 0
  6141  0000AB                     fat_read_from_file_fast@cluster:
  6142                           	opt stack 0
  6143  0000AB                     __parse_jump_steps@out_buffer:
  6144                           	opt stack 0
  6145                           
  6146                           ; 2 bytes @ 0x4B
  6147  0000AB                     	ds	1
  6148  0000AC                     ??_MSDTasks:
  6149  0000AC                     __display_itoa@pos:
  6150                           	opt stack 0
  6151  0000AC                     fat_create_file@name:
  6152                           	opt stack 0
  6153  0000AC                     fat_resize_file@new_file_size:
  6154                           	opt stack 0
  6155                           
  6156                           ; 4 bytes @ 0x4C
  6157  0000AC                     	ds	1
  6158  0000AD                     ??_motor_go_to_steps_position:
  6159  0000AD                     motor_arc_move@direction:
  6160                           	opt stack 0
  6161  0000AD                     _MSDTasks$2588:
  6162                           	opt stack 0
  6163  0000AD                     fat_read_from_file_fast@cluster_number:
  6164                           	opt stack 0
  6165  0000AD                     __parse_jump_steps@out_idx_ptr:
  6166                           	opt stack 0
  6167  0000AD                     __display_itoa_long@value:
  6168                           	opt stack 0
  6169                           
  6170                           ; 4 bytes @ 0x4D
  6171  0000AD                     	ds	1
  6172  0000AE                     fat_create_file@extension:
  6173                           	opt stack 0
  6174  0000AE                     motor_arc_move@arc_in_steps:
  6175                           	opt stack 0
  6176                           
  6177                           ; 4 bytes @ 0x4E
  6178  0000AE                     	ds	1
  6179  0000AF                     ??_fat_read_from_file_fast:
  6180  0000AF                     ??__parse_jump_steps:
  6181  0000AF                     _MSDTasks$2589:
  6182                           	opt stack 0
  6183                           
  6184                           ; 2 bytes @ 0x4F
  6185  0000AF                     	ds	1
  6186  0000B0                     ??_fat_resize_file:
  6187  0000B0                     __parse_jump_steps@return_value:
  6188                           	opt stack 0
  6189  0000B0                     fat_create_file@size:
  6190                           	opt stack 0
  6191                           
  6192                           ; 4 bytes @ 0x50
  6193  0000B0                     	ds	1
  6194  0000B1                     MSDTasks@i:
  6195                           	opt stack 0
  6196  0000B1                     __display_itoa_long@decimals:
  6197                           	opt stack 0
  6198  0000B1                     __parse_jump_steps@number_of_steps:
  6199                           	opt stack 0
  6200                           
  6201                           ; 4 bytes @ 0x51
  6202  0000B1                     	ds	1
  6203  0000B2                     __display_itoa_long@text:
  6204                           	opt stack 0
  6205                           
  6206                           ; 2 bytes @ 0x52
  6207  0000B2                     	ds	2
  6208  0000B4                     ??__display_itoa_long:
  6209  0000B4                     ??_fat_create_file:
  6210  0000B4                     fat_resize_file@old_number_of_clusters:
  6211                           	opt stack 0
  6212                           
  6213                           ; 2 bytes @ 0x54
  6214  0000B4                     	ds	1
  6215  0000B5                     fat_modify_file@sector:
  6216                           	opt stack 0
  6217  0000B5                     __parse_command_long@data:
  6218                           	opt stack 0
  6219  0000B5                     motor_go_to_steps_position@overhead_cw:
  6220                           	opt stack 0
  6221                           
  6222                           ; 4 bytes @ 0x55
  6223  0000B5                     	ds	1
  6224  0000B6                     fat_resize_file@new_number_of_clusters:
  6225                           	opt stack 0
  6226                           
  6227                           ; 2 bytes @ 0x56
  6228  0000B6                     	ds	1
  6229  0000B7                     fat_modify_file@file_number:
  6230                           	opt stack 0
  6231  0000B7                     __parse_command_long@out_buffer:
  6232                           	opt stack 0
  6233                           
  6234                           ; 2 bytes @ 0x57
  6235  0000B7                     	ds	1
  6236  0000B8                     __display_itoa_long@length:
  6237                           	opt stack 0
  6238  0000B8                     fat_modify_file@return_code:
  6239                           	opt stack 0
  6240  0000B8                     fat_create_file@number_of_clusters:
  6241                           	opt stack 0
  6242  0000B8                     fat_resize_file@first_cluster:
  6243                           	opt stack 0
  6244                           
  6245                           ; 2 bytes @ 0x58
  6246  0000B8                     	ds	1
  6247  0000B9                     __display_itoa_long@short_value:
  6248                           	opt stack 0
  6249  0000B9                     fat_modify_file@cluster:
  6250                           	opt stack 0
  6251  0000B9                     __parse_command_long@out_idx_ptr:
  6252                           	opt stack 0
  6253  0000B9                     motor_go_to_steps_position@overhead_ccw:
  6254                           	opt stack 0
  6255                           
  6256                           ; 4 bytes @ 0x59
  6257  0000B9                     	ds	1
  6258  0000BA                     fat_resize_file@file_number:
  6259                           	opt stack 0
  6260  0000BA                     fat_create_file@first_cluster:
  6261                           	opt stack 0
  6262                           
  6263                           ; 2 bytes @ 0x5A
  6264  0000BA                     	ds	1
  6265  0000BB                     __display_itoa_long@last_digit:
  6266                           	opt stack 0
  6267  0000BB                     __parse_command_long@length:
  6268                           	opt stack 0
  6269  0000BB                     fat_read_from_file_fast@sector:
  6270                           	opt stack 0
  6271  0000BB                     fat_modify_file@offset:
  6272                           	opt stack 0
  6273  0000BB                     fat_resize_file@root:
  6274                           	opt stack 0
  6275                           
  6276                           ; 32 bytes @ 0x5B
  6277  0000BB                     	ds	1
  6278  0000BC                     ??_display_prepare:
  6279  0000BC                     fat_create_file@file_number:
  6280                           	opt stack 0
  6281                           
  6282                           ; 1 bytes @ 0x5C
  6283  0000BC                     	ds	1
  6284  0000BD                     fat_read_from_file_fast@working_cluster:
  6285                           	opt stack 0
  6286  0000BD                     fat_modify_file@number_of_bytes:
  6287                           	opt stack 0
  6288  0000BD                     motor_go_to_steps_position@distance_cw:
  6289                           	opt stack 0
  6290  0000BD                     fat_create_file@root_entry:
  6291                           	opt stack 0
  6292                           
  6293                           ; 32 bytes @ 0x5D
  6294  0000BD                     	ds	1
  6295  0000BE                     display_prepare@temp:
  6296                           	opt stack 0
  6297                           
  6298                           ; 10 bytes @ 0x5E
  6299  0000BE                     	ds	1
  6300  0000BF                     fat_read_from_file_fast@offset:
  6301                           	opt stack 0
  6302  0000BF                     fat_modify_file@position:
  6303                           	opt stack 0
  6304                           
  6305                           ; 4 bytes @ 0x5F
  6306  0000BF                     	ds	2
  6307  0000C1                     fat_read_from_file_fast@needed_cluster:
  6308                           	opt stack 0
  6309  0000C1                     motor_go_to_steps_position@distance_ccw:
  6310                           	opt stack 0
  6311                           
  6312                           ; 4 bytes @ 0x61
  6313  0000C1                     	ds	2
  6314  0000C3                     fat_read_from_file_fast@read_length:
  6315                           	opt stack 0
  6316  0000C3                     fat_modify_file@root:
  6317                           	opt stack 0
  6318                           
  6319                           ; 32 bytes @ 0x63
  6320  0000C3                     	ds	2
  6321  0000C5                     ??_motor_divide_jump:
  6322  0000C5                     __parse_command_short@cmd:
  6323                           	opt stack 0
  6324  0000C5                     fat_read_from_file_fast@position:
  6325                           	opt stack 0
  6326  0000C5                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6327                           	opt stack 0
  6328                           
  6329                           ; 4 bytes @ 0x65
  6330  0000C5                     	ds	1
  6331  0000C6                     api_parse@inBuffer:
  6332                           	opt stack 0
  6333  0000C6                     motor_divide_jump@target_position_in_steps:
  6334                           	opt stack 0
  6335                           
  6336                           ; 4 bytes @ 0x66
  6337  0000C6                     	ds	2
  6338  0000C8                     display_prepare@space:
  6339                           	opt stack 0
  6340  0000C8                     api_parse@receivedDataLength:
  6341                           	opt stack 0
  6342                           
  6343                           ; 1 bytes @ 0x68
  6344  0000C8                     	ds	1
  6345  0000C9                     display_prepare@cntr:
  6346                           	opt stack 0
  6347  0000C9                     api_parse@outBuffer:
  6348                           	opt stack 0
  6349  0000C9                     motor_divide_jump_to_nearest@nearest_divide_position:
  6350                           	opt stack 0
  6351  0000C9                     fat_read_from_file@start_byte:
  6352                           	opt stack 0
  6353                           
  6354                           ; 4 bytes @ 0x69
  6355  0000C9                     	ds	1
  6356  0000CA                     motor_divide_jump@target_divide_position:
  6357                           	opt stack 0
  6358                           
  6359                           ; 2 bytes @ 0x6A
  6360  0000CA                     	ds	1
  6361  0000CB                     ??_api_parse:
  6362  0000CB                     motor_divide_jump_to_nearest@divide_position_float:
  6363                           	opt stack 0
  6364                           
  6365                           ; 4 bytes @ 0x6B
  6366  0000CB                     	ds	2
  6367  0000CD                     api_parse@out_idx_ptr:
  6368                           	opt stack 0
  6369  0000CD                     fat_read_from_file@length:
  6370                           	opt stack 0
  6371                           
  6372                           ; 4 bytes @ 0x6D
  6373  0000CD                     	ds	2
  6374  0000CF                     ??_encoder_statemachine:
  6375  0000CF                     api_parse@out_idx:
  6376                           	opt stack 0
  6377                           
  6378                           ; 1 bytes @ 0x6F
  6379  0000CF                     	ds	1
  6380  0000D0                     api_parse@in_idx:
  6381                           	opt stack 0
  6382                           
  6383                           ; 1 bytes @ 0x70
  6384  0000D0                     	ds	1
  6385  0000D1                     fat_read_from_file@data:
  6386                           	opt stack 0
  6387                           
  6388                           ; 2 bytes @ 0x71
  6389  0000D1                     	ds	2
  6390  0000D3                     ??_fat_read_from_file:
  6391                           
  6392                           ; 1 bytes @ 0x73
  6393  0000D3                     	ds	4
  6394  0000D7                     fat_read_from_file@file_number:
  6395                           	opt stack 0
  6396                           
  6397                           ; 1 bytes @ 0x77
  6398  0000D7                     	ds	1
  6399  0000D8                     fat_read_from_file@return_code:
  6400                           	opt stack 0
  6401                           
  6402                           ; 1 bytes @ 0x78
  6403  0000D8                     	ds	1
  6404  0000D9                     fat_read_from_file@cluster:
  6405                           	opt stack 0
  6406                           
  6407                           ; 2 bytes @ 0x79
  6408  0000D9                     	ds	2
  6409  0000DB                     fat_read_from_file@cluster_number:
  6410                           	opt stack 0
  6411                           
  6412                           ; 2 bytes @ 0x7B
  6413  0000DB                     	ds	2
  6414  0000DD                     fat_read_from_file@root:
  6415                           	opt stack 0
  6416                           
  6417                           ; 32 bytes @ 0x7D
  6418  0000DD                     	ds	6
  6419  0000E3                     ??_configFile_write:
  6420                           
  6421                           ; 1 bytes @ 0x83
  6422  0000E3                     	ds	1
  6423  0000E4                     configFile_write@file_number:
  6424                           	opt stack 0
  6425                           
  6426                           ; 1 bytes @ 0x84
  6427  0000E4                     	ds	1
  6428  0000E5                     configFile_write@file_size:
  6429                           	opt stack 0
  6430                           
  6431                           ; 4 bytes @ 0x85
  6432  0000E5                     	ds	24
  6433  0000FD                     main@startup_timer:
  6434                           	opt stack 0
  6435                           
  6436                           ; 1 bytes @ 0x9D
  6437  0000FD                     	ds	1
  6438                           tblptru	equ	0xFF8
  6439                           tblptrh	equ	0xFF7
  6440                           tblptrl	equ	0xFF6
  6441                           tablat	equ	0xFF5
  6442                           postinc0	equ	0xFEE
  6443                           wreg	equ	0xFE8
  6444                           postdec1	equ	0xFE5
  6445                           fsr1h	equ	0xFE2
  6446                           fsr1l	equ	0xFE1
  6447                           
  6448                           	psect	cstackCOMRAM
  6449  000001                     __pcstackCOMRAM:
  6450                           	opt stack 0
  6451  000001                     ??_USBStdGetDscHandler:
  6452  000001                     ??_USBStdGetStatusHandler:
  6453  000001                     ??i2__i2c_wait_idle:
  6454  000001                     ?i2_USBTransferOnePacket:
  6455                           	opt stack 0
  6456  000001                     ?i2_ExternalFlash_MediaInitialize:
  6457                           	opt stack 0
  6458  000001                     USBConfigureEndpoint@direction:
  6459                           	opt stack 0
  6460  000001                     USBCtrlTrfTxService@byteToSend:
  6461                           	opt stack 0
  6462  000001                     USBCtrlTrfRxService@i:
  6463                           	opt stack 0
  6464  000001                     i2USBTransferOnePacket@dir:
  6465                           	opt stack 0
  6466  000001                     i2USBStallEndpoint@dir:
  6467                           	opt stack 0
  6468  000001                     i2__i2c_send@dat:
  6469                           	opt stack 0
  6470  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6471                           	opt stack 0
  6472  000001                     i2ExternalFlash_MediaInitialize@config:
  6473                           	opt stack 0
  6474  000001                     i2ExternalFlash_MediaDetect@config:
  6475                           	opt stack 0
  6476  000001                     i2memcpy@d1:
  6477                           	opt stack 0
  6478  000001                     i2memset@p1:
  6479                           	opt stack 0
  6480                           
  6481                           ; 2 bytes @ 0x0
  6482  000001                     	ds	1
  6483  000002                     ??_USBConfigureEndpoint:
  6484  000002                     ??i2_USBStallEndpoint:
  6485  000002                     USBCtrlTrfRxService@byteToRead:
  6486                           	opt stack 0
  6487  000002                     USBCtrlTrfInHandler@lastDTS:
  6488                           	opt stack 0
  6489  000002                     USBStdGetStatusHandler@p:
  6490                           	opt stack 0
  6491  000002                     i2USBTransferOnePacket@data:
  6492                           	opt stack 0
  6493                           
  6494                           ; 2 bytes @ 0x1
  6495  000002                     	ds	1
  6496  000003                     i2SYSTEM_Initialize@pll_startup_counter_3132:
  6497                           	opt stack 0
  6498  000003                     i2memcpy@s1:
  6499                           	opt stack 0
  6500  000003                     i2memset@c:
  6501                           	opt stack 0
  6502                           
  6503                           ; 2 bytes @ 0x2
  6504  000003                     	ds	1
  6505  000004                     i2USBTransferOnePacket@len:
  6506                           	opt stack 0
  6507                           
  6508                           ; 1 bytes @ 0x3
  6509  000004                     	ds	1
  6510  000005                     ??i2_USBTransferOnePacket:
  6511  000005                     i2SYSTEM_Initialize@state:
  6512                           	opt stack 0
  6513  000005                     i2memcpy@n:
  6514                           	opt stack 0
  6515  000005                     i2memset@n:
  6516                           	opt stack 0
  6517                           
  6518                           ; 2 bytes @ 0x4
  6519  000005                     	ds	1
  6520  000006                     USBConfigureEndpoint@EPNum:
  6521                           	opt stack 0
  6522  000006                     i2USBStallEndpoint@ep:
  6523                           	opt stack 0
  6524  000006                     i2__i2c_eeprom_busy@busy:
  6525                           	opt stack 0
  6526  000006                     i2__i2c_write@data:
  6527                           	opt stack 0
  6528                           
  6529                           ; 2 bytes @ 0x5
  6530  000006                     	ds	1
  6531  000007                     USBConfigureEndpoint@handle:
  6532                           	opt stack 0
  6533  000007                     i2USBStallEndpoint@p:
  6534                           	opt stack 0
  6535  000007                     i2memcpy@d:
  6536                           	opt stack 0
  6537  000007                     i2memset@p:
  6538                           	opt stack 0
  6539                           
  6540                           ; 2 bytes @ 0x6
  6541  000007                     	ds	1
  6542  000008                     i2__i2c_write@length:
  6543                           	opt stack 0
  6544                           
  6545                           ; 1 bytes @ 0x7
  6546  000008                     	ds	1
  6547  000009                     USBEnableEndpoint@options:
  6548                           	opt stack 0
  6549  000009                     i2USBDeviceInit@i:
  6550                           	opt stack 0
  6551  000009                     i2USBTransferOnePacket@ep:
  6552                           	opt stack 0
  6553  000009                     i2__i2c_write@slave_address:
  6554                           	opt stack 0
  6555  000009                     i2memcpy@s:
  6556                           	opt stack 0
  6557                           
  6558                           ; 2 bytes @ 0x8
  6559  000009                     	ds	1
  6560  00000A                     i2__i2c_write@cntr:
  6561                           	opt stack 0
  6562  00000A                     USBEnableEndpoint@p:
  6563                           	opt stack 0
  6564  00000A                     i2USBTransferOnePacket@handle:
  6565                           	opt stack 0
  6566                           
  6567                           ; 2 bytes @ 0x9
  6568  00000A                     	ds	1
  6569  00000B                     i2memcpy@tmp:
  6570                           	opt stack 0
  6571  00000B                     i2c_eeprom_write@address:
  6572                           	opt stack 0
  6573                           
  6574                           ; 2 bytes @ 0xA
  6575  00000B                     	ds	1
  6576  00000C                     ??_USBMSDInit:
  6577  00000C                     USBEnableEndpoint@ep:
  6578                           	opt stack 0
  6579  00000C                     _USBCheckMSDRequest$2534:
  6580                           	opt stack 0
  6581  00000C                     MSDTransferTerminated@handle:
  6582                           	opt stack 0
  6583                           
  6584                           ; 2 bytes @ 0xB
  6585  00000C                     	ds	1
  6586  00000D                     i2c_eeprom_write@data:
  6587                           	opt stack 0
  6588                           
  6589                           ; 2 bytes @ 0xC
  6590  00000D                     	ds	1
  6591  00000E                     _USBCheckMSDRequest$2535:
  6592                           	opt stack 0
  6593  00000E                     _MSDTransferTerminated$2623:
  6594                           	opt stack 0
  6595                           
  6596                           ; 2 bytes @ 0xD
  6597  00000E                     	ds	1
  6598  00000F                     i2c_eeprom_write@length:
  6599                           	opt stack 0
  6600                           
  6601                           ; 1 bytes @ 0xE
  6602  00000F                     	ds	1
  6603  000010                     ??_i2c_eeprom_write:
  6604  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6605                           	opt stack 0
  6606                           
  6607                           ; 2 bytes @ 0xF
  6608  000010                     	ds	2
  6609  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6610                           	opt stack 0
  6611                           
  6612                           ; 2 bytes @ 0x11
  6613  000012                     	ds	1
  6614  000013                     i2c_eeprom_write@dat:
  6615                           	opt stack 0
  6616                           
  6617                           ; 17 bytes @ 0x12
  6618  000013                     	ds	1
  6619  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6620                           	opt stack 0
  6621                           
  6622                           ; 2 bytes @ 0x13
  6623  000014                     	ds	2
  6624  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6625                           
  6626                           ; 1 bytes @ 0x15
  6627  000016                     	ds	2
  6628  000018                     ??_USBStdFeatureReqHandler:
  6629  000018                     USBStdSetCfgHandler@i:
  6630                           	opt stack 0
  6631                           
  6632                           ; 1 bytes @ 0x17
  6633  000018                     	ds	1
  6634  000019                     USBStdFeatureReqHandler@pUEP:
  6635                           	opt stack 0
  6636                           
  6637                           ; 2 bytes @ 0x18
  6638  000019                     	ds	2
  6639  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6640                           	opt stack 0
  6641                           
  6642                           ; 1 bytes @ 0x1A
  6643  00001B                     	ds	1
  6644  00001C                     USBStdFeatureReqHandler@p:
  6645                           	opt stack 0
  6646                           
  6647                           ; 2 bytes @ 0x1B
  6648  00001C                     	ds	2
  6649  00001E                     ??_USBCtrlEPService:
  6650  00001E                     
  6651                           ; 1 bytes @ 0x1D
  6652  00001E                     	ds	1
  6653  00001F                     USBDeviceTasks@i:
  6654                           	opt stack 0
  6655                           
  6656                           ; 1 bytes @ 0x1E
  6657  00001F                     	ds	5
  6658  000024                     i2c_eeprom_write@slave_address:
  6659                           	opt stack 0
  6660                           
  6661                           ; 1 bytes @ 0x23
  6662  000024                     	ds	1
  6663  000025                     i2c_eeprom_write@cntr:
  6664                           	opt stack 0
  6665                           
  6666                           ; 1 bytes @ 0x24
  6667  000025                     	ds	1
  6668  000026                     i2c_eeprom_writeUint32@address:
  6669                           	opt stack 0
  6670                           
  6671                           ; 2 bytes @ 0x25
  6672  000026                     	ds	2
  6673  000028                     i2c_eeprom_writeUint32@data:
  6674                           	opt stack 0
  6675                           
  6676                           ; 4 bytes @ 0x27
  6677  000028                     	ds	4
  6678  00002C                     ??_motor_isr:
  6679  00002C                     
  6680                           ; 1 bytes @ 0x2B
  6681  00002C                     	ds	16
  6682  00003C                     motor_isr@steps_until_standstill:
  6683                           	opt stack 0
  6684                           
  6685                           ; 2 bytes @ 0x3B
  6686  00003C                     	ds	2
  6687  00003E                     motor_isr@steps_until_standstill_if_accelerate:
  6688                           	opt stack 0
  6689                           
  6690                           ; 2 bytes @ 0x3D
  6691  00003E                     	ds	2
  6692  000040                     motor_isr@steps_remaining:
  6693                           	opt stack 0
  6694                           
  6695                           ; 4 bytes @ 0x3F
  6696  000040                     	ds	4
  6697  000044                     ??_SYS_InterruptHigh:
  6698                           
  6699                           ; 1 bytes @ 0x43
  6700  000044                     	ds	14
  6701                           tblptru	equ	0xFF8
  6702                           tblptrh	equ	0xFF7
  6703                           tblptrl	equ	0xFF6
  6704                           tablat	equ	0xFF5
  6705                           postinc0	equ	0xFEE
  6706                           wreg	equ	0xFE8
  6707                           postdec1	equ	0xFE5
  6708                           fsr1h	equ	0xFE2
  6709                           fsr1l	equ	0xFE1
  6710                           
  6711 ;;
  6712 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6713 ;;
  6714 ;; *************** function _main *****************
  6715 ;; Defined at:
  6716 ;;		line 49 in file "main.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;		None
  6719 ;; Auto vars:     Size  Location     Type
  6720 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  1    wreg      void 
  6723 ;; Registers used:
  6724 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6731 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6733 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6734 ;;Total ram usage:        1 bytes
  6735 ;; Hardware stack levels required when called:   22
  6736 ;; This function calls:
  6737 ;;		_APP_DeviceCustomHIDTasks
  6738 ;;		_APP_DeviceMSDTasks
  6739 ;;		_SYSTEM_Initialize
  6740 ;;		_USBDeviceAttach
  6741 ;;		_USBDeviceInit
  6742 ;;		_adc_read_temperature
  6743 ;;		_display_prepare
  6744 ;;		_display_update
  6745 ;;		_encoder_statemachine
  6746 ;;		_motor_calculate_position_in_degrees
  6747 ;;		_motor_process_cue
  6748 ;;		_system_init
  6749 ;; This function is called by:
  6750 ;;		Startup code after reset
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           	psect	text0
  6755  013606                     __ptext0:
  6756                           	opt stack 0
  6757  013606                     _main:
  6758                           	opt stack 9
  6759                           
  6760                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6761                           
  6762                           ;incstack = 0
  6763  013606  EC26  F08D         	call	_system_init	;wreg free
  6764                           
  6765                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6766  01360A  0E00               	movlw	0
  6767  01360C  EC74  F0A3         	call	_SYSTEM_Initialize
  6768                           
  6769                           ;main.c: 59: USBDeviceInit();
  6770  013610  EC76  F07F         	call	_USBDeviceInit	;wreg free
  6771                           
  6772                           ;main.c: 60: USBDeviceAttach();
  6773  013614  EC0B  F0AA         	call	_USBDeviceAttach	;wreg free
  6774                           
  6775                           ;main.c: 63: startup_timer = 150;
  6776  013618  0E96               	movlw	150
  6777  01361A  0100               	movlb	0	; () banked
  6778  01361C  6FFD               	movwf	main@startup_timer& (0+255),b
  6779                           
  6780                           ;main.c: 64: while(startup_timer)
  6781  01361E  D00D               	goto	l863
  6782  013620                     
  6783                           ; BSR set to: 0
  6784                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6785                           
  6786                           ; BSR set to: 0
  6787  013620  ECC7  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6788                           
  6789                           ;main.c: 69: if(!os.done)
  6790  013624  0101               	movlb	1	; () banked
  6791  013626  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6792  013628  A4D8               	btfss	status,2,c
  6793  01362A  D007               	goto	l863
  6794                           
  6795                           ; BSR set to: 1
  6796                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6797  01362C  EC26  F099         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6798                           
  6799                           ;main.c: 74: --startup_timer;
  6800  013630  0100               	movlb	0	; () banked
  6801  013632  07FD               	decf	main@startup_timer& (0+255),f,b
  6802                           
  6803                           ; BSR set to: 0
  6804                           ;main.c: 75: os.done = 1;
  6805  013634  0E01               	movlw	1
  6806  013636  0101               	movlb	1	; () banked
  6807  013638  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6808  01363A                     l863:
  6809                           
  6810                           ; BSR set to: 1
  6811                           
  6812                           ; BSR set to: 1
  6813  01363A  0100               	movlb	0	; () banked
  6814  01363C  51FD               	movf	main@startup_timer& (0+255),w,b
  6815  01363E  A4D8               	btfss	status,2,c
  6816  013640  D7EF               	goto	l862
  6817  013642                     u18780:
  6818                           
  6819                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6820                           
  6821                           ; BSR set to: 0
  6822                           
  6823                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6824                           
  6825                           ; BSR set to: 0
  6826  013642  ECC7  F0AC         	call	_APP_DeviceMSDTasks	;wreg free
  6827                           
  6828                           ;main.c: 85: if(!os.done)
  6829  013646  0101               	movlb	1	; () banked
  6830  013648  5173               	movf	(_os+2)& (0+255),w,b	;volatile
  6831  01364A  A4D8               	btfss	status,2,c
  6832  01364C  D7FA               	goto	u18780
  6833                           
  6834                           ; BSR set to: 1
  6835  01364E  0004               	clrwdt		;# 
  6836                           
  6837                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6838  013650  EC26  F099         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6839                           
  6840                           ;main.c: 94: encoder_statemachine();
  6841  013654  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6842                           
  6843                           ;main.c: 97: motor_process_cue();
  6844  013658  EC4E  F09B         	call	_motor_process_cue	;wreg free
  6845                           
  6846                           ;main.c: 100: adc_read_temperature();
  6847  01365C  EC3D  F079         	call	_adc_read_temperature	;wreg free
  6848                           
  6849                           ;main.c: 103: switch(os.timeSlot)
  6850  013660  D008               	goto	l867
  6851  013662                     
  6852                           ;main.c: 114: motor_calculate_position_in_degrees();
  6853  013662  EC4B  F090         	call	_motor_calculate_position_in_degrees	;wreg free
  6854  013666                     
  6855                           ;main.c: 117: display_prepare();
  6856  013666  EC98  F051         	call	_display_prepare	;wreg free
  6857                           
  6858                           ;main.c: 118: break;
  6859  01366A  D014               	goto	l869
  6860  01366C                     
  6861                           ;main.c: 121: display_update();
  6862  01366C  EC50  F0A9         	call	_display_update	;wreg free
  6863                           
  6864                           ;main.c: 123: }
  6865                           
  6866                           ;main.c: 122: break;
  6867  013670  D011               	goto	l869
  6868  013672                     l867:
  6869  013672  0101               	movlb	1	; () banked
  6870  013674  5172               	movf	(_os+1)& (0+255),w,b	;volatile
  6871                           
  6872                           ; Switch size 1, requested type "space"
  6873                           ; Number of cases is 5, Range of values is 0 to 7
  6874                           ; switch strategies available:
  6875                           ; Name         Instructions Cycles
  6876                           ; simple_byte           16     9 (average)
  6877                           ;	Chosen strategy is simple_byte
  6878  013676  0A00               	xorlw	0	; case 0
  6879  013678  B4D8               	btfsc	status,2,c
  6880  01367A  D00C               	goto	l869
  6881  01367C  0A01               	xorlw	1	; case 1
  6882  01367E  B4D8               	btfsc	status,2,c
  6883  013680  D009               	goto	l869
  6884  013682  0A04               	xorlw	4	; case 5
  6885  013684  B4D8               	btfsc	status,2,c
  6886  013686  D7ED               	goto	l871
  6887  013688  0A03               	xorlw	3	; case 6
  6888  01368A  B4D8               	btfsc	status,2,c
  6889  01368C  D7EC               	goto	l872
  6890  01368E  0A01               	xorlw	1	; case 7
  6891  013690  B4D8               	btfsc	status,2,c
  6892  013692  D7EC               	goto	l873
  6893  013694                     l869:
  6894                           
  6895                           ;main.c: 125: os.done = 1;
  6896                           
  6897                           ; BSR set to: 1
  6898  013694  0E01               	movlw	1
  6899  013696  0101               	movlb	1	; () banked
  6900  013698  6F73               	movwf	(_os+2)& (0+255),b	;volatile
  6901                           
  6902                           ; BSR set to: 1
  6903                           
  6904                           ; BSR set to: 1
  6905  01369A  D7D3               	goto	u18780
  6906  01369C                     __end_of_main:
  6907                           	opt stack 0
  6908                           tblptru	equ	0xFF8
  6909                           tblptrh	equ	0xFF7
  6910                           tblptrl	equ	0xFF6
  6911                           tablat	equ	0xFF5
  6912                           postinc0	equ	0xFEE
  6913                           wreg	equ	0xFE8
  6914                           postdec1	equ	0xFE5
  6915                           fsr1h	equ	0xFE2
  6916                           fsr1l	equ	0xFE1
  6917                           status	equ	0xFD8
  6918                           
  6919 ;; *************** function _system_init *****************
  6920 ;; Defined at:
  6921 ;;		line 177 in file "os.c"
  6922 ;; Parameters:    Size  Location     Type
  6923 ;;		None
  6924 ;; Auto vars:     Size  Location     Type
  6925 ;;		None
  6926 ;; Return value:  Size  Location     Type
  6927 ;;                  1    wreg      void 
  6928 ;; Registers used:
  6929 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6930 ;; Tracked objects:
  6931 ;;		On entry : 0/0
  6932 ;;		On exit  : 0/0
  6933 ;;		Unchanged: 0/0
  6934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6937 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6938 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6939 ;;Total ram usage:        0 bytes
  6940 ;; Hardware stack levels used:    1
  6941 ;; Hardware stack levels required when called:   20
  6942 ;; This function calls:
  6943 ;;		__backlight_init
  6944 ;;		__system_pin_setup
  6945 ;;		__system_timer0_init
  6946 ;;		_adc_init
  6947 ;;		_configFile_read
  6948 ;;		_configFile_readDefault
  6949 ;;		_configFile_write
  6950 ;;		_display_init
  6951 ;;		_display_update
  6952 ;;		_encoder_init
  6953 ;;		_fat_init
  6954 ;;		_flash_init
  6955 ;;		_i2c_eeprom_readUint32
  6956 ;;		_i2c_init
  6957 ;;		_motor_calculate_position_in_degrees
  6958 ;;		_motor_init
  6959 ;; This function is called by:
  6960 ;;		_main
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           	psect	text1
  6965  011A4C                     __ptext1:
  6966                           	opt stack 0
  6967  011A4C                     _system_init:
  6968                           	opt stack 10
  6969                           
  6970                           ;os.c: 180: _system_pin_setup();
  6971                           
  6972                           ; BSR set to: 1
  6973                           ;incstack = 0
  6974  011A4C  ECCC  F0A0         	call	__system_pin_setup	;wreg free
  6975                           
  6976                           ;os.c: 183: adc_init();
  6977  011A50  EC53  F0A4         	call	_adc_init	;wreg free
  6978                           
  6979                           ;os.c: 186: flash_init();
  6980  011A54  ECE8  F0AC         	call	_flash_init	;wreg free
  6981                           
  6982                           ;os.c: 189: fat_init();
  6983  011A58  ECD0  F0AC         	call	_fat_init	;wreg free
  6984                           
  6985                           ;os.c: 192: encoder_init();
  6986  011A5C  ECBE  F0AB         	call	_encoder_init	;wreg free
  6987                           
  6988                           ;os.c: 195: i2c_init();
  6989  011A60  EC57  F0AC         	call	_i2c_init	;wreg free
  6990                           
  6991                           ;os.c: 198: display_init();
  6992  011A64  ECFA  F0A8         	call	_display_init	;wreg free
  6993                           
  6994                           ;os.c: 199: display_update();
  6995  011A68  EC50  F0A9         	call	_display_update	;wreg free
  6996                           
  6997                           ;os.c: 200: _backlight_init();
  6998  011A6C  EC3C  F0AD         	call	__backlight_init	;wreg free
  6999                           
  7000                           ;os.c: 203: motor_init();
  7001  011A70  EC48  F0AC         	call	_motor_init	;wreg free
  7002                           
  7003                           ;os.c: 206: configFile_readDefault();
  7004  011A74  EC67  F0A1         	call	_configFile_readDefault	;wreg free
  7005                           
  7006                           ;os.c: 209: configFile_read();
  7007  011A78  EC03  F07B         	call	_configFile_read	;wreg free
  7008                           
  7009                           ;os.c: 212: configFile_write();
  7010  011A7C  ECD4  F060         	call	_configFile_write	;wreg free
  7011                           
  7012                           ;os.c: 215: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7013  011A80  0E01               	movlw	1
  7014  011A82  0101               	movlb	1	; () banked
  7015  011A84  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
  7016                           
  7017                           ; BSR set to: 1
  7018                           ;os.c: 216: os.busy = 0;
  7019  011A86  0E00               	movlw	0
  7020  011A88  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
  7021                           
  7022                           ; BSR set to: 1
  7023                           ;os.c: 218: os.last_approach_direction = MOTOR_DIRECTION_CW;
  7024  011A8A  0E01               	movlw	1
  7025  011A8C  6F80               	movwf	(_os+15)& (0+255),b	;volatile
  7026                           
  7027                           ; BSR set to: 1
  7028                           ;os.c: 219: os.setup_step_size = 1000;
  7029  011A8E  0E03               	movlw	3
  7030  011A90  6F82               	movwf	(_os+17)& (0+255),b	;volatile
  7031  011A92  0EE8               	movlw	232
  7032  011A94  6F81               	movwf	(_os+16)& (0+255),b	;volatile
  7033                           
  7034                           ; BSR set to: 1
  7035                           ;os.c: 220: os.approach_direction = MOTOR_DIRECTION_CW;
  7036  011A96  0E01               	movlw	1
  7037  011A98  6F83               	movwf	(_os+18)& (0+255),b	;volatile
  7038                           
  7039                           ; BSR set to: 1
  7040                           ;os.c: 221: os.division = 36;
  7041  011A9A  0E00               	movlw	0
  7042  011A9C  6F85               	movwf	(_os+20)& (0+255),b	;volatile
  7043  011A9E  0E24               	movlw	36
  7044  011AA0  6F84               	movwf	(_os+19)& (0+255),b	;volatile
  7045                           
  7046                           ; BSR set to: 1
  7047                           ;os.c: 222: os.divide_step_size = 10;
  7048  011AA2  0E0A               	movlw	10
  7049  011AA4  6F86               	movwf	(_os+21)& (0+255),b	;volatile
  7050                           
  7051                           ; BSR set to: 1
  7052                           ;os.c: 223: os.divide_position = 0;
  7053  011AA6  0E00               	movlw	0
  7054  011AA8  6F88               	movwf	(_os+23)& (0+255),b	;volatile
  7055  011AAA  0E00               	movlw	0
  7056  011AAC  6F87               	movwf	(_os+22)& (0+255),b	;volatile
  7057                           
  7058                           ; BSR set to: 1
  7059                           ;os.c: 224: os.divide_jump_size = 1;
  7060  011AAE  0E00               	movlw	0
  7061  011AB0  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
  7062  011AB2  0E01               	movlw	1
  7063  011AB4  6F89               	movwf	(_os+24)& (0+255),b	;volatile
  7064                           
  7065                           ; BSR set to: 1
  7066                           ;os.c: 225: os.arc_step_size = 1000;
  7067  011AB6  0E03               	movlw	3
  7068  011AB8  6F8C               	movwf	(_os+27)& (0+255),b	;volatile
  7069  011ABA  0EE8               	movlw	232
  7070  011ABC  6F8B               	movwf	(_os+26)& (0+255),b	;volatile
  7071                           
  7072                           ; BSR set to: 1
  7073                           ;os.c: 226: os.arc_size = 1000;
  7074  011ABE  0EE8               	movlw	232
  7075  011AC0  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
  7076  011AC2  0E03               	movlw	3
  7077  011AC4  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
  7078  011AC6  0E00               	movlw	0
  7079  011AC8  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
  7080  011ACA  0E00               	movlw	0
  7081  011ACC  6F90               	movwf	(_os+31)& (0+255),b	;volatile
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;os.c: 227: os.arc_speed = config.initial_speed_arc;
  7085  011ACE  C1AE  F191         	movff	_config+13,_os+32	;volatile
  7086  011AD2  C1AF  F192         	movff	_config+14,_os+33	;volatile
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;os.c: 228: os.arc_direction = MOTOR_DIRECTION_CW;
  7090  011AD6  0E01               	movlw	1
  7091  011AD8  6F93               	movwf	(_os+34)& (0+255),b	;volatile
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;os.c: 229: os.manual_speed = config.initial_speed_manual;
  7095  011ADA  C1B2  F194         	movff	_config+17,_os+35	;volatile
  7096  011ADE  C1B3  F195         	movff	_config+18,_os+36	;volatile
  7097                           
  7098                           ; BSR set to: 1
  7099                           ;os.c: 230: os.manual_direction = MOTOR_DIRECTION_CW;
  7100  011AE2  0E01               	movlw	1
  7101  011AE4  6F96               	movwf	(_os+37)& (0+255),b	;volatile
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;os.c: 231: os.beep_count = 0;
  7105  011AE6  0E00               	movlw	0
  7106  011AE8  6F97               	movwf	(_os+38)& (0+255),b	;volatile
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;os.c: 234: os.current_position_in_steps = i2c_eeprom_readUint32(0x200);
  7110  011AEA  0E02               	movlw	2
  7111  011AEC  0100               	movlb	0	; () banked
  7112  011AEE  6F7A               	movwf	(i2c_eeprom_readUint32@address+1)& (0+255),b
  7113  011AF0  0E00               	movlw	0
  7114  011AF2  6F79               	movwf	i2c_eeprom_readUint32@address& (0+255),b
  7115  011AF4  ECB2  F0AA         	call	_i2c_eeprom_readUint32	;wreg free
  7116  011AF8  C079  F178         	movff	?_i2c_eeprom_readUint32,_os+7	;volatile
  7117  011AFC  C07A  F179         	movff	?_i2c_eeprom_readUint32+1,_os+8	;volatile
  7118  011B00  C07B  F17A         	movff	?_i2c_eeprom_readUint32+2,_os+9	;volatile
  7119  011B04  C07C  F17B         	movff	?_i2c_eeprom_readUint32+3,_os+10	;volatile
  7120                           
  7121                           ;os.c: 235: if(os.current_position_in_steps>config.full_circle_in_steps)
  7122  011B08  0101               	movlb	1	; () banked
  7123  011B0A  5178               	movf	(_os+7)& (0+255),w,b	;volatile
  7124  011B0C  5DA1               	subwf	_config& (0+255),w,b
  7125  011B0E  5179               	movf	(_os+8)& (0+255),w,b	;volatile
  7126  011B10  59A2               	subwfb	(_config+1)& (0+255),w,b
  7127  011B12  517A               	movf	(_os+9)& (0+255),w,b	;volatile
  7128  011B14  59A3               	subwfb	(_config+2)& (0+255),w,b
  7129  011B16  517B               	movf	(_os+10)& (0+255),w,b	;volatile
  7130  011B18  59A4               	subwfb	(_config+3)& (0+255),w,b
  7131  011B1A  B0D8               	btfsc	status,0,c
  7132  011B1C  D008               	goto	l1082
  7133                           
  7134                           ; BSR set to: 1
  7135                           ;os.c: 236: {;os.c: 237: os.current_position_in_steps = 0;
  7136  011B1E  0E00               	movlw	0
  7137  011B20  6F78               	movwf	(_os+7)& (0+255),b	;volatile
  7138  011B22  0E00               	movlw	0
  7139  011B24  6F79               	movwf	(_os+8)& (0+255),b	;volatile
  7140  011B26  0E00               	movlw	0
  7141  011B28  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
  7142  011B2A  0E00               	movlw	0
  7143  011B2C  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
  7144  011B2E                     l1082:
  7145                           
  7146                           ; BSR set to: 1
  7147                           ;os.c: 238: };os.c: 239: motor_calculate_position_in_degrees();
  7148                           
  7149                           ; BSR set to: 1
  7150  011B2E  EC4B  F090         	call	_motor_calculate_position_in_degrees	;wreg free
  7151                           
  7152                           ;os.c: 242: _system_timer0_init();
  7153  011B32  ECC8  F0AA         	call	__system_timer0_init	;wreg free
  7154  011B36  0012               	return		;funcret
  7155  011B38                     __end_of_system_init:
  7156                           	opt stack 0
  7157                           tblptru	equ	0xFF8
  7158                           tblptrh	equ	0xFF7
  7159                           tblptrl	equ	0xFF6
  7160                           tablat	equ	0xFF5
  7161                           postinc0	equ	0xFEE
  7162                           wreg	equ	0xFE8
  7163                           postdec1	equ	0xFE5
  7164                           fsr1h	equ	0xFE2
  7165                           fsr1l	equ	0xFE1
  7166                           status	equ	0xFD8
  7167                           
  7168 ;; *************** function _motor_init *****************
  7169 ;; Defined at:
  7170 ;;		line 186 in file "motor.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;		None
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;Total ram usage:        0 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:   10
  7191 ;; This function calls:
  7192 ;;		Nothing
  7193 ;; This function is called by:
  7194 ;;		_system_init
  7195 ;; This function uses a non-reentrant model
  7196 ;;
  7197                           
  7198                           	psect	text2
  7199  015890                     __ptext2:
  7200                           	opt stack 0
  7201  015890                     _motor_init:
  7202                           	opt stack 19
  7203                           
  7204                           ;motor.c: 189: motor_cue_read_index = 0;
  7205                           
  7206                           ;incstack = 0
  7207  015890  0E00               	movlw	0
  7208  015892  0101               	movlb	1	; () banked
  7209  015894  6F58               	movwf	_motor_cue_read_index& (0+255),b
  7210                           
  7211                           ;motor.c: 190: motor_cue_write_index = 0;
  7212  015896  0E00               	movlw	0
  7213  015898  6F57               	movwf	_motor_cue_write_index& (0+255),b
  7214                           
  7215                           ; BSR set to: 1
  7216                           ;motor.c: 196: CCPTMRS0bits.C2TSEL = 0b000;
  7217  01589A  010F               	movlb	15	; () banked
  7218  01589C  9752               	bcf	82,3,b	;volatile
  7219  01589E  9952               	bcf	82,4,b	;volatile
  7220  0158A0  9B52               	bcf	82,5,b	;volatile
  7221                           
  7222                           ;motor.c: 201: CCP1CONbits.P1M = 0b00;
  7223  0158A2  0E3F               	movlw	-193
  7224  0158A4  16BA               	andwf	4026,f,c	;volatile
  7225                           
  7226                           ;motor.c: 204: CCP1CONbits.DC1B = 0b00;
  7227  0158A6  0ECF               	movlw	-49
  7228  0158A8  16BA               	andwf	4026,f,c	;volatile
  7229                           
  7230                           ; BSR set to: 15
  7231                           ;motor.c: 207: LATBbits.LB0 = 0;
  7232  0158AA  908A               	bcf	3978,0,c	;volatile
  7233                           
  7234                           ; BSR set to: 15
  7235  0158AC  0012               	return		;funcret
  7236  0158AE                     __end_of_motor_init:
  7237                           	opt stack 0
  7238                           tblptru	equ	0xFF8
  7239                           tblptrh	equ	0xFF7
  7240                           tblptrl	equ	0xFF6
  7241                           tablat	equ	0xFF5
  7242                           postinc0	equ	0xFEE
  7243                           wreg	equ	0xFE8
  7244                           postdec1	equ	0xFE5
  7245                           fsr1h	equ	0xFE2
  7246                           fsr1l	equ	0xFE1
  7247                           status	equ	0xFD8
  7248                           
  7249 ;; *************** function _i2c_init *****************
  7250 ;; Defined at:
  7251 ;;		line 24 in file "i2c.c"
  7252 ;; Parameters:    Size  Location     Type
  7253 ;;		None
  7254 ;; Auto vars:     Size  Location     Type
  7255 ;;		None
  7256 ;; Return value:  Size  Location     Type
  7257 ;;                  1    wreg      void 
  7258 ;; Registers used:
  7259 ;;		wreg, status,2
  7260 ;; Tracked objects:
  7261 ;;		On entry : 0/0
  7262 ;;		On exit  : 0/0
  7263 ;;		Unchanged: 0/0
  7264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7269 ;;Total ram usage:        0 bytes
  7270 ;; Hardware stack levels used:    1
  7271 ;; Hardware stack levels required when called:   10
  7272 ;; This function calls:
  7273 ;;		Nothing
  7274 ;; This function is called by:
  7275 ;;		_system_init
  7276 ;; This function uses a non-reentrant model
  7277 ;;
  7278                           
  7279                           	psect	text3
  7280  0158AE                     __ptext3:
  7281                           	opt stack 0
  7282  0158AE                     _i2c_init:
  7283                           	opt stack 19
  7284                           
  7285                           ;i2c.c: 26: TRISBbits.TRISB5 = 1;
  7286                           
  7287                           ; BSR set to: 15
  7288                           ;incstack = 0
  7289  0158AE  8A93               	bsf	3987,5,c	;volatile
  7290                           
  7291                           ;i2c.c: 27: TRISBbits.TRISB4 = 1;
  7292  0158B0  8893               	bsf	3987,4,c	;volatile
  7293                           
  7294                           ;i2c.c: 29: SSP1STATbits.SMP = 1;
  7295  0158B2  8EC7               	bsf	4039,7,c	;volatile
  7296                           
  7297                           ;i2c.c: 30: SSP1STATbits.CKE = 0;
  7298  0158B4  9CC7               	bcf	4039,6,c	;volatile
  7299                           
  7300                           ;i2c.c: 32: SSP1ADD = 119;
  7301  0158B6  0E77               	movlw	119
  7302  0158B8  6EC8               	movwf	4040,c	;volatile
  7303                           
  7304                           ;i2c.c: 34: SSP1CON1bits.WCOL = 0;
  7305  0158BA  9EC6               	bcf	4038,7,c	;volatile
  7306                           
  7307                           ;i2c.c: 35: SSP1CON1bits.SSPOV = 0;
  7308  0158BC  9CC6               	bcf	4038,6,c	;volatile
  7309                           
  7310                           ;i2c.c: 36: SSP1CON1bits.SSPM = 0b1000;
  7311  0158BE  50C6               	movf	4038,w,c	;volatile
  7312  0158C0  0BF0               	andlw	-16
  7313  0158C2  0908               	iorlw	8
  7314  0158C4  6EC6               	movwf	4038,c	;volatile
  7315                           
  7316                           ;i2c.c: 37: SSP1CON1bits.SSPEN = 1;
  7317  0158C6  8AC6               	bsf	4038,5,c	;volatile
  7318  0158C8  0012               	return		;funcret
  7319  0158CA                     __end_of_i2c_init:
  7320                           	opt stack 0
  7321                           tblptru	equ	0xFF8
  7322                           tblptrh	equ	0xFF7
  7323                           tblptrl	equ	0xFF6
  7324                           tablat	equ	0xFF5
  7325                           postinc0	equ	0xFEE
  7326                           wreg	equ	0xFE8
  7327                           postdec1	equ	0xFE5
  7328                           fsr1h	equ	0xFE2
  7329                           fsr1l	equ	0xFE1
  7330                           status	equ	0xFD8
  7331                           
  7332 ;; *************** function _i2c_eeprom_readUint32 *****************
  7333 ;; Defined at:
  7334 ;;		line 235 in file "i2c.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  address         2   25[BANK0 ] unsigned int 
  7337 ;; Auto vars:     Size  Location     Type
  7338 ;;  data            4   29[BANK0 ] unsigned long 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  4   25[BANK0 ] unsigned long 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7348 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7349 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7351 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7352 ;;Total ram usage:        8 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:   13
  7355 ;; This function calls:
  7356 ;;		_i2c_eeprom_read
  7357 ;; This function is called by:
  7358 ;;		_system_init
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text4
  7363  015564                     __ptext4:
  7364                           	opt stack 0
  7365  015564                     _i2c_eeprom_readUint32:
  7366                           	opt stack 16
  7367                           
  7368                           ;i2c.c: 237: uint32_t data;;i2c.c: 238: i2c_eeprom_read(address, &data, 4);
  7369                           
  7370                           ;incstack = 0
  7371  015564  C079  F071         	movff	i2c_eeprom_readUint32@address,i2c_eeprom_read@address
  7372  015568  C07A  F072         	movff	i2c_eeprom_readUint32@address+1,i2c_eeprom_read@address+1
  7373  01556C  0E7D               	movlw	low i2c_eeprom_readUint32@data
  7374  01556E  0100               	movlb	0	; () banked
  7375  015570  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7376  015572  0E00               	movlw	high i2c_eeprom_readUint32@data
  7377  015574  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7378  015576  0E04               	movlw	4
  7379  015578  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7380  01557A  EC03  F0A5         	call	_i2c_eeprom_read	;wreg free
  7381                           
  7382                           ;i2c.c: 239: return data;
  7383  01557E  C07D  F079         	movff	i2c_eeprom_readUint32@data,?_i2c_eeprom_readUint32
  7384  015582  C07E  F07A         	movff	i2c_eeprom_readUint32@data+1,?_i2c_eeprom_readUint32+1
  7385  015586  C07F  F07B         	movff	i2c_eeprom_readUint32@data+2,?_i2c_eeprom_readUint32+2
  7386  01558A  C080  F07C         	movff	i2c_eeprom_readUint32@data+3,?_i2c_eeprom_readUint32+3
  7387  01558E  0012               	return	
  7388  015590                     __end_of_i2c_eeprom_readUint32:
  7389                           	opt stack 0
  7390                           tblptru	equ	0xFF8
  7391                           tblptrh	equ	0xFF7
  7392                           tblptrl	equ	0xFF6
  7393                           tablat	equ	0xFF5
  7394                           postinc0	equ	0xFEE
  7395                           wreg	equ	0xFE8
  7396                           postdec1	equ	0xFE5
  7397                           fsr1h	equ	0xFE2
  7398                           fsr1l	equ	0xFE1
  7399                           status	equ	0xFD8
  7400                           
  7401 ;; *************** function _i2c_eeprom_read *****************
  7402 ;; Defined at:
  7403 ;;		line 263 in file "i2c.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  address         2   17[BANK0 ] unsigned int 
  7406 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7407 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), 
  7408 ;;  length          1   21[BANK0 ] unsigned char 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7411 ;;  addr            1   23[BANK0 ] unsigned char 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7421 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7422 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7423 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7424 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;Total ram usage:        8 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:   12
  7428 ;; This function calls:
  7429 ;;		__i2c_eeprom_busy
  7430 ;;		__i2c_read
  7431 ;;		__i2c_write
  7432 ;; This function is called by:
  7433 ;;		_i2c_eeprom_readUint32
  7434 ;;		_i2c_eeprom_readUint16
  7435 ;; This function uses a non-reentrant model
  7436 ;;
  7437                           
  7438                           	psect	text5
  7439  014A06                     __ptext5:
  7440                           	opt stack 0
  7441  014A06                     _i2c_eeprom_read:
  7442                           	opt stack 16
  7443                           
  7444                           ;i2c.c: 265: uint8_t slave_address;;i2c.c: 266: uint8_t addr;;i2c.c: 267: addr = address
      +                           & 0xFF;
  7445                           
  7446                           ;incstack = 0
  7447  014A06  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7448                           
  7449                           ;i2c.c: 268: address &= 0b0000011100000000;
  7450  014A0A  0100               	movlb	0	; () banked
  7451  014A0C  0E00               	movlw	0
  7452  014A0E  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7453  014A10  0E07               	movlw	7
  7454  014A12  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7455                           
  7456                           ;i2c.c: 269: address >>= 7;
  7457  014A14  0E07               	movlw	7
  7458  014A16  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7459  014A18                     u14175:
  7460  014A18  90D8               	bcf	status,0,c
  7461  014A1A  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7462  014A1C  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7463  014A1E  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7464  014A20  D7FB               	goto	u14175
  7465                           
  7466                           ;i2c.c: 270: slave_address = 0b10100000 | address;
  7467  014A22  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7468  014A24  09A0               	iorlw	160
  7469  014A26  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7470  014A28                     
  7471                           ; BSR set to: 0
  7472                           
  7473                           ; BSR set to: 0
  7474  014A28  EC48  F0AB         	call	__i2c_eeprom_busy	;wreg free
  7475  014A2C  0900               	iorlw	0
  7476  014A2E  A4D8               	btfss	status,2,c
  7477  014A30  D7FB               	goto	l1213
  7478                           
  7479                           ;i2c.c: 275: _i2c_write(slave_address, &addr, 1);
  7480  014A32  0E77               	movlw	low i2c_eeprom_read@addr
  7481  014A34  0100               	movlb	0	; () banked
  7482  014A36  6F65               	movwf	__i2c_write@data& (0+255),b
  7483  014A38  0E00               	movlw	high i2c_eeprom_read@addr
  7484  014A3A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7485  014A3C  0E01               	movlw	1
  7486  014A3E  6F67               	movwf	__i2c_write@length& (0+255),b
  7487  014A40  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7488  014A42  EC7A  F0A6         	call	__i2c_write
  7489                           
  7490                           ;i2c.c: 276: _i2c_read(slave_address, &data[0], length);
  7491  014A46  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7492  014A4A  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7493  014A4E  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7494  014A52  0100               	movlb	0	; () banked
  7495  014A54  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7496  014A56  ECE3  F09B         	call	__i2c_read
  7497  014A5A  0012               	return		;funcret
  7498  014A5C                     __end_of_i2c_eeprom_read:
  7499                           	opt stack 0
  7500                           tblptru	equ	0xFF8
  7501                           tblptrh	equ	0xFF7
  7502                           tblptrl	equ	0xFF6
  7503                           tablat	equ	0xFF5
  7504                           postinc0	equ	0xFEE
  7505                           wreg	equ	0xFE8
  7506                           postdec1	equ	0xFE5
  7507                           fsr1h	equ	0xFE2
  7508                           fsr1l	equ	0xFE1
  7509                           status	equ	0xFD8
  7510                           
  7511 ;; *************** function __i2c_read *****************
  7512 ;; Defined at:
  7513 ;;		line 103 in file "i2c.c"
  7514 ;; Parameters:    Size  Location     Type
  7515 ;;  slave_addres    1    wreg     unsigned char 
  7516 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7517 ;;		 -> i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), i2c_eeprom_readByte@addr(1), 
  7518 ;;  length          1    7[BANK0 ] unsigned char 
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7521 ;;  cntr            1   16[BANK0 ] unsigned char 
  7522 ;; Return value:  Size  Location     Type
  7523 ;;                  1    wreg      void 
  7524 ;; Registers used:
  7525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7531 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7532 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7533 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7534 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7535 ;;Total ram usage:       12 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:   11
  7538 ;; This function calls:
  7539 ;;		__i2c_acknowledge
  7540 ;;		__i2c_get
  7541 ;;		__i2c_not_acknowledge
  7542 ;;		__i2c_send
  7543 ;;		__i2c_start
  7544 ;;		__i2c_stop
  7545 ;;		__i2c_wait_idle
  7546 ;; This function is called by:
  7547 ;;		_i2c_eeprom_read
  7548 ;;		_i2c_eeprom_readByte
  7549 ;; This function uses a non-reentrant model
  7550 ;;
  7551                           
  7552                           	psect	text6
  7553  0137C6                     __ptext6:
  7554                           	opt stack 0
  7555  0137C6                     __i2c_read:
  7556                           	opt stack 16
  7557                           
  7558                           ;incstack = 0
  7559                           ;__i2c_read@slave_address stored from wreg
  7560  0137C6  0100               	movlb	0	; () banked
  7561  0137C8  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7562                           
  7563                           ;i2c.c: 105: uint8_t cntr;;i2c.c: 107: _i2c_wait_idle();
  7564  0137CA  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
  7565                           
  7566                           ;i2c.c: 108: _i2c_start();
  7567  0137CE  EC29  F0AD         	call	__i2c_start	;wreg free
  7568                           
  7569                           ;i2c.c: 109: _i2c_wait_idle();
  7570  0137D2  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
  7571                           
  7572                           ;i2c.c: 110: _i2c_send(slave_address | 0x01);
  7573  0137D6  0100               	movlb	0	; () banked
  7574  0137D8  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7575  0137DA  0901               	iorlw	1
  7576  0137DC  EC16  F0AD         	call	__i2c_send
  7577                           
  7578                           ;i2c.c: 111: _i2c_wait_idle();
  7579  0137E0  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
  7580                           
  7581                           ;i2c.c: 121: for(cntr=0; cntr<length-1; ++cntr)
  7582  0137E4  0E00               	movlw	0
  7583  0137E6  0100               	movlb	0	; () banked
  7584  0137E8  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7585  0137EA  D00F               	goto	l1164
  7586  0137EC                     
  7587                           ; BSR set to: 0
  7588                           ;i2c.c: 122: {;i2c.c: 123: data[cntr] = _i2c_get();
  7589                           
  7590                           ; BSR set to: 0
  7591  0137EC  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7592  0137EE  0D01               	mullw	1
  7593  0137F0  50F3               	movf	prodl,w,c
  7594  0137F2  2565               	addwf	__i2c_read@data& (0+255),w,b
  7595  0137F4  6ED9               	movwf	fsr2l,c
  7596  0137F6  50F4               	movf	prodh,w,c
  7597  0137F8  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7598  0137FA  6EDA               	movwf	fsr2h,c
  7599  0137FC  EC0C  F0AD         	call	__i2c_get	;wreg free
  7600  013800  6EDF               	movwf	indf2,c
  7601                           
  7602                           ;i2c.c: 124: _i2c_acknowledge();
  7603  013802  EC11  F0AD         	call	__i2c_acknowledge	;wreg free
  7604  013806  0100               	movlb	0	; () banked
  7605  013808  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7606  01380A                     l1164:
  7607                           
  7608                           ; BSR set to: 0
  7609                           
  7610                           ; BSR set to: 0
  7611  01380A  0EFF               	movlw	255
  7612  01380C  6F68               	movwf	??__i2c_read& (0+255),b
  7613  01380E  0EFF               	movlw	255
  7614  013810  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7615  013812  5167               	movf	__i2c_read@length& (0+255),w,b
  7616  013814  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7617  013816  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7618  013818  5168               	movf	??__i2c_read& (0+255),w,b
  7619  01381A  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7620  01381C  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7621  01381E  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7622  013820  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7623  013822  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7624  013824  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7625  013826  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7626  013828  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7627  01382A  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7628  01382C  0A80               	xorlw	128
  7629  01382E  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7630  013830  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7631  013832  0A80               	xorlw	128
  7632  013834  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7633  013836  A0D8               	btfss	status,0,c
  7634  013838  D7D9               	goto	l1165
  7635                           
  7636                           ; BSR set to: 0
  7637                           ;i2c.c: 125: };i2c.c: 126: data[cntr] = _i2c_get();
  7638                           
  7639                           ; BSR set to: 0
  7640  01383A  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7641  01383C  0D01               	mullw	1
  7642  01383E  50F3               	movf	prodl,w,c
  7643  013840  2565               	addwf	__i2c_read@data& (0+255),w,b
  7644  013842  6ED9               	movwf	fsr2l,c
  7645  013844  50F4               	movf	prodh,w,c
  7646  013846  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7647  013848  6EDA               	movwf	fsr2h,c
  7648  01384A  EC0C  F0AD         	call	__i2c_get	;wreg free
  7649  01384E  6EDF               	movwf	indf2,c
  7650                           
  7651                           ;i2c.c: 127: _i2c_not_acknowledge();
  7652  013850  EC07  F0AD         	call	__i2c_not_acknowledge	;wreg free
  7653                           
  7654                           ;i2c.c: 129: _i2c_stop();
  7655  013854  EC25  F0AD         	call	__i2c_stop	;wreg free
  7656  013858  0012               	return		;funcret
  7657  01385A                     __end_of__i2c_read:
  7658                           	opt stack 0
  7659                           tblptru	equ	0xFF8
  7660                           tblptrh	equ	0xFF7
  7661                           tblptrl	equ	0xFF6
  7662                           tablat	equ	0xFF5
  7663                           prodh	equ	0xFF4
  7664                           prodl	equ	0xFF3
  7665                           postinc0	equ	0xFEE
  7666                           wreg	equ	0xFE8
  7667                           postdec1	equ	0xFE5
  7668                           fsr1h	equ	0xFE2
  7669                           fsr1l	equ	0xFE1
  7670                           indf2	equ	0xFDF
  7671                           fsr2h	equ	0xFDA
  7672                           fsr2l	equ	0xFD9
  7673                           status	equ	0xFD8
  7674                           
  7675 ;; *************** function __i2c_not_acknowledge *****************
  7676 ;; Defined at:
  7677 ;;		line 76 in file "i2c.c"
  7678 ;; Parameters:    Size  Location     Type
  7679 ;;		None
  7680 ;; Auto vars:     Size  Location     Type
  7681 ;;		None
  7682 ;; Return value:  Size  Location     Type
  7683 ;;                  1    wreg      void 
  7684 ;; Registers used:
  7685 ;;		None
  7686 ;; Tracked objects:
  7687 ;;		On entry : 0/0
  7688 ;;		On exit  : 0/0
  7689 ;;		Unchanged: 0/0
  7690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7695 ;;Total ram usage:        0 bytes
  7696 ;; Hardware stack levels used:    1
  7697 ;; Hardware stack levels required when called:   10
  7698 ;; This function calls:
  7699 ;;		Nothing
  7700 ;; This function is called by:
  7701 ;;		__i2c_read
  7702 ;;		_i2c_adc_read
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text7
  7707  015A0E                     __ptext7:
  7708                           	opt stack 0
  7709  015A0E                     __i2c_not_acknowledge:
  7710                           	opt stack 16
  7711                           
  7712                           ;i2c.c: 78: SSP1CON2bits.ACKDT = 1;
  7713                           
  7714                           ;incstack = 0
  7715  015A0E  8AC5               	bsf	4037,5,c	;volatile
  7716                           
  7717                           ;i2c.c: 79: SSP1CON2bits.ACKEN = 1;
  7718  015A10  88C5               	bsf	4037,4,c	;volatile
  7719  015A12  A8C5               	btfss	4037,4,c	;volatile
  7720  015A14  0012               	return	
  7721  015A16  D7FD               	goto	l1153
  7722  015A18                     __end_of__i2c_not_acknowledge:
  7723                           	opt stack 0
  7724                           tblptru	equ	0xFF8
  7725                           tblptrh	equ	0xFF7
  7726                           tblptrl	equ	0xFF6
  7727                           tablat	equ	0xFF5
  7728                           prodh	equ	0xFF4
  7729                           prodl	equ	0xFF3
  7730                           postinc0	equ	0xFEE
  7731                           wreg	equ	0xFE8
  7732                           postdec1	equ	0xFE5
  7733                           fsr1h	equ	0xFE2
  7734                           fsr1l	equ	0xFE1
  7735                           indf2	equ	0xFDF
  7736                           fsr2h	equ	0xFDA
  7737                           fsr2l	equ	0xFD9
  7738                           status	equ	0xFD8
  7739                           
  7740 ;; *************** function __i2c_get *****************
  7741 ;; Defined at:
  7742 ;;		line 56 in file "i2c.c"
  7743 ;; Parameters:    Size  Location     Type
  7744 ;;		None
  7745 ;; Auto vars:     Size  Location     Type
  7746 ;;		None
  7747 ;; Return value:  Size  Location     Type
  7748 ;;                  1    wreg      unsigned char 
  7749 ;; Registers used:
  7750 ;;		wreg, status,2
  7751 ;; Tracked objects:
  7752 ;;		On entry : 0/0
  7753 ;;		On exit  : 0/0
  7754 ;;		Unchanged: 0/0
  7755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7760 ;;Total ram usage:        0 bytes
  7761 ;; Hardware stack levels used:    1
  7762 ;; Hardware stack levels required when called:   10
  7763 ;; This function calls:
  7764 ;;		Nothing
  7765 ;; This function is called by:
  7766 ;;		__i2c_read
  7767 ;;		_i2c_adc_read
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text8
  7772  015A18                     __ptext8:
  7773                           	opt stack 0
  7774  015A18                     __i2c_get:
  7775                           	opt stack 16
  7776                           
  7777                           ;i2c.c: 58: SSP1CON2bits.RCEN = 1 ;
  7778                           
  7779                           ;incstack = 0
  7780  015A18  86C5               	bsf	4037,3,c	;volatile
  7781  015A1A  B6C5               	btfsc	4037,3,c	;volatile
  7782  015A1C  D7FE               	goto	l1135
  7783                           
  7784                           ;i2c.c: 60: return SSP1BUF;
  7785  015A1E  50C9               	movf	4041,w,c	;volatile
  7786  015A20  0012               	return	
  7787  015A22                     __end_of__i2c_get:
  7788                           	opt stack 0
  7789                           tblptru	equ	0xFF8
  7790                           tblptrh	equ	0xFF7
  7791                           tblptrl	equ	0xFF6
  7792                           tablat	equ	0xFF5
  7793                           prodh	equ	0xFF4
  7794                           prodl	equ	0xFF3
  7795                           postinc0	equ	0xFEE
  7796                           wreg	equ	0xFE8
  7797                           postdec1	equ	0xFE5
  7798                           fsr1h	equ	0xFE2
  7799                           fsr1l	equ	0xFE1
  7800                           indf2	equ	0xFDF
  7801                           fsr2h	equ	0xFDA
  7802                           fsr2l	equ	0xFD9
  7803                           status	equ	0xFD8
  7804                           
  7805 ;; *************** function __i2c_acknowledge *****************
  7806 ;; Defined at:
  7807 ;;		line 69 in file "i2c.c"
  7808 ;; Parameters:    Size  Location     Type
  7809 ;;		None
  7810 ;; Auto vars:     Size  Location     Type
  7811 ;;		None
  7812 ;; Return value:  Size  Location     Type
  7813 ;;                  1    wreg      void 
  7814 ;; Registers used:
  7815 ;;		None
  7816 ;; Tracked objects:
  7817 ;;		On entry : 0/0
  7818 ;;		On exit  : 0/0
  7819 ;;		Unchanged: 0/0
  7820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7821 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7822 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7823 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7824 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7825 ;;Total ram usage:        0 bytes
  7826 ;; Hardware stack levels used:    1
  7827 ;; Hardware stack levels required when called:   10
  7828 ;; This function calls:
  7829 ;;		Nothing
  7830 ;; This function is called by:
  7831 ;;		__i2c_read
  7832 ;;		_i2c_adc_read
  7833 ;; This function uses a non-reentrant model
  7834 ;;
  7835                           
  7836                           	psect	text9
  7837  015A22                     __ptext9:
  7838                           	opt stack 0
  7839  015A22                     __i2c_acknowledge:
  7840                           	opt stack 16
  7841                           
  7842                           ;i2c.c: 71: SSP1CON2bits.ACKDT = 0;
  7843                           
  7844                           ;incstack = 0
  7845  015A22  9AC5               	bcf	4037,5,c	;volatile
  7846                           
  7847                           ;i2c.c: 72: SSP1CON2bits.ACKEN = 1;
  7848  015A24  88C5               	bsf	4037,4,c	;volatile
  7849  015A26  A8C5               	btfss	4037,4,c	;volatile
  7850  015A28  0012               	return	
  7851  015A2A  D7FD               	goto	l1147
  7852  015A2C                     __end_of__i2c_acknowledge:
  7853                           	opt stack 0
  7854                           tblptru	equ	0xFF8
  7855                           tblptrh	equ	0xFF7
  7856                           tblptrl	equ	0xFF6
  7857                           tablat	equ	0xFF5
  7858                           prodh	equ	0xFF4
  7859                           prodl	equ	0xFF3
  7860                           postinc0	equ	0xFEE
  7861                           wreg	equ	0xFE8
  7862                           postdec1	equ	0xFE5
  7863                           fsr1h	equ	0xFE2
  7864                           fsr1l	equ	0xFE1
  7865                           indf2	equ	0xFDF
  7866                           fsr2h	equ	0xFDA
  7867                           fsr2l	equ	0xFD9
  7868                           status	equ	0xFD8
  7869                           
  7870 ;; *************** function __i2c_eeprom_busy *****************
  7871 ;; Defined at:
  7872 ;;		line 169 in file "i2c.c"
  7873 ;; Parameters:    Size  Location     Type
  7874 ;;		None
  7875 ;; Auto vars:     Size  Location     Type
  7876 ;;  busy            1    5[BANK0 ] unsigned char 
  7877 ;; Return value:  Size  Location     Type
  7878 ;;                  1    wreg      unsigned char 
  7879 ;; Registers used:
  7880 ;;		wreg, status,2, status,0, cstack
  7881 ;; Tracked objects:
  7882 ;;		On entry : 0/0
  7883 ;;		On exit  : 0/0
  7884 ;;		Unchanged: 0/0
  7885 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7886 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7887 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7888 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7889 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7890 ;;Total ram usage:        1 bytes
  7891 ;; Hardware stack levels used:    1
  7892 ;; Hardware stack levels required when called:   11
  7893 ;; This function calls:
  7894 ;;		__i2c_send
  7895 ;;		__i2c_start
  7896 ;;		__i2c_stop
  7897 ;;		__i2c_wait_idle
  7898 ;; This function is called by:
  7899 ;;		_i2c_eeprom_read
  7900 ;;		_i2c_eeprom_writeByte
  7901 ;;		_i2c_eeprom_readByte
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           	psect	text10
  7906  015690                     __ptext10:
  7907                           	opt stack 0
  7908  015690                     __i2c_eeprom_busy:
  7909                           	opt stack 16
  7910                           
  7911                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
  7912                           
  7913                           ;incstack = 0
  7914  015690  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
  7915                           
  7916                           ;i2c.c: 173: _i2c_start();
  7917  015694  EC29  F0AD         	call	__i2c_start	;wreg free
  7918                           
  7919                           ;i2c.c: 174: _i2c_wait_idle();
  7920  015698  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
  7921                           
  7922                           ;i2c.c: 175: _i2c_send(0b10100000);
  7923  01569C  0EA0               	movlw	160
  7924  01569E  EC16  F0AD         	call	__i2c_send
  7925                           
  7926                           ;i2c.c: 176: _i2c_wait_idle();
  7927  0156A2  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
  7928                           
  7929                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
  7930  0156A6  0E00               	movlw	0
  7931  0156A8  BCC5               	btfsc	4037,6,c	;volatile
  7932  0156AA  0E01               	movlw	1
  7933  0156AC  0100               	movlb	0	; () banked
  7934  0156AE  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;i2c.c: 181: _i2c_stop();
  7938  0156B0  EC25  F0AD         	call	__i2c_stop	;wreg free
  7939                           
  7940                           ;i2c.c: 183: return 0;
  7941  0156B4  0E00               	movlw	0
  7942  0156B6  0012               	return	
  7943  0156B8                     __end_of__i2c_eeprom_busy:
  7944                           	opt stack 0
  7945                           tblptru	equ	0xFF8
  7946                           tblptrh	equ	0xFF7
  7947                           tblptrl	equ	0xFF6
  7948                           tablat	equ	0xFF5
  7949                           prodh	equ	0xFF4
  7950                           prodl	equ	0xFF3
  7951                           postinc0	equ	0xFEE
  7952                           wreg	equ	0xFE8
  7953                           postdec1	equ	0xFE5
  7954                           fsr1h	equ	0xFE2
  7955                           fsr1l	equ	0xFE1
  7956                           indf2	equ	0xFDF
  7957                           fsr2h	equ	0xFDA
  7958                           fsr2l	equ	0xFD9
  7959                           status	equ	0xFD8
  7960                           
  7961 ;; *************** function _flash_init *****************
  7962 ;; Defined at:
  7963 ;;		line 361 in file "flash.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;		None
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  1    wreg      void 
  7970 ;; Registers used:
  7971 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7981 ;;Total ram usage:        0 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:   14
  7984 ;; This function calls:
  7985 ;;		__flash_set_page_size
  7986 ;;		_spi_init
  7987 ;; This function is called by:
  7988 ;;		_system_init
  7989 ;; This function uses a non-reentrant model
  7990 ;;
  7991                           
  7992                           	psect	text11
  7993  0159D0                     __ptext11:
  7994                           	opt stack 0
  7995  0159D0                     _flash_init:
  7996                           	opt stack 15
  7997                           
  7998                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  7999                           
  8000                           ;incstack = 0
  8001  0159D0  0E00               	movlw	0
  8002  0159D2  EC7D  F0A8         	call	_spi_init
  8003                           
  8004                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8005  0159D6  0E00               	movlw	0
  8006  0159D8  ECF2  F09F         	call	__flash_set_page_size
  8007  0159DC  0012               	return		;funcret
  8008  0159DE                     __end_of_flash_init:
  8009                           	opt stack 0
  8010                           tblptru	equ	0xFF8
  8011                           tblptrh	equ	0xFF7
  8012                           tblptrl	equ	0xFF6
  8013                           tablat	equ	0xFF5
  8014                           prodh	equ	0xFF4
  8015                           prodl	equ	0xFF3
  8016                           postinc0	equ	0xFEE
  8017                           wreg	equ	0xFE8
  8018                           postdec1	equ	0xFE5
  8019                           fsr1h	equ	0xFE2
  8020                           fsr1l	equ	0xFE1
  8021                           indf2	equ	0xFDF
  8022                           fsr2h	equ	0xFDA
  8023                           fsr2l	equ	0xFD9
  8024                           status	equ	0xFD8
  8025                           
  8026 ;; *************** function _spi_init *****************
  8027 ;; Defined at:
  8028 ;;		line 89 in file "spi.c"
  8029 ;; Parameters:    Size  Location     Type
  8030 ;;  configuratio    1    wreg     enum E6832
  8031 ;; Auto vars:     Size  Location     Type
  8032 ;;  configuratio    1    3[BANK0 ] enum E6832
  8033 ;; Return value:  Size  Location     Type
  8034 ;;                  1    wreg      void 
  8035 ;; Registers used:
  8036 ;;		wreg, status,2, status,0, cstack
  8037 ;; Tracked objects:
  8038 ;;		On entry : 0/0
  8039 ;;		On exit  : 0/0
  8040 ;;		Unchanged: 0/0
  8041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8043 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8045 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8046 ;;Total ram usage:        1 bytes
  8047 ;; Hardware stack levels used:    1
  8048 ;; Hardware stack levels required when called:   11
  8049 ;; This function calls:
  8050 ;;		__spi_init
  8051 ;; This function is called by:
  8052 ;;		_flash_init
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text12
  8057  0150FA                     __ptext12:
  8058                           	opt stack 0
  8059  0150FA                     _spi_init:
  8060                           	opt stack 17
  8061                           
  8062                           ;incstack = 0
  8063                           ;spi_init@configuration stored from wreg
  8064  0150FA  0100               	movlb	0	; () banked
  8065  0150FC  6F63               	movwf	spi_init@configuration& (0+255),b
  8066                           
  8067                           ;spi.c: 91: switch(configuration)
  8068  0150FE  D012               	goto	l2164
  8069  015100                     
  8070                           ;spi.c: 94: _spi_init(config_internal);
  8071  015100  C136  F060         	movff	_config_internal,__spi_init@details
  8072  015104  C137  F061         	movff	_config_internal+1,__spi_init@details+1
  8073  015108  C138  F062         	movff	_config_internal+2,__spi_init@details+2
  8074  01510C  EC34  F0A9         	call	__spi_init	;wreg free
  8075                           
  8076                           ;spi.c: 95: break;
  8077  015110  D011               	goto	l2166
  8078  015112                     
  8079                           ;spi.c: 98: _spi_init(config_external);
  8080  015112  C133  F060         	movff	_config_external,__spi_init@details
  8081  015116  C134  F061         	movff	_config_external+1,__spi_init@details+1
  8082  01511A  C135  F062         	movff	_config_external+2,__spi_init@details+2
  8083  01511E  EC34  F0A9         	call	__spi_init	;wreg free
  8084                           
  8085                           ;spi.c: 100: }
  8086                           
  8087                           ;spi.c: 99: break;
  8088  015122  D008               	goto	l2166
  8089  015124                     l2164:
  8090  015124  0100               	movlb	0	; () banked
  8091  015126  5163               	movf	spi_init@configuration& (0+255),w,b
  8092                           
  8093                           ; Switch size 1, requested type "space"
  8094                           ; Number of cases is 2, Range of values is 0 to 1
  8095                           ; switch strategies available:
  8096                           ; Name         Instructions Cycles
  8097                           ; simple_byte            7     4 (average)
  8098                           ;	Chosen strategy is simple_byte
  8099  015128  0A00               	xorlw	0	; case 0
  8100  01512A  B4D8               	btfsc	status,2,c
  8101  01512C  D7E9               	goto	l2165
  8102  01512E  0A01               	xorlw	1	; case 1
  8103  015130  B4D8               	btfsc	status,2,c
  8104  015132  D7EF               	goto	l2167
  8105  015134                     l2166:
  8106                           
  8107                           ;spi.c: 102: active_configuration = configuration;
  8108  015134  C063  F159         	movff	spi_init@configuration,_active_configuration
  8109  015138  0012               	return		;funcret
  8110  01513A                     __end_of_spi_init:
  8111                           	opt stack 0
  8112                           tblptru	equ	0xFF8
  8113                           tblptrh	equ	0xFF7
  8114                           tblptrl	equ	0xFF6
  8115                           tablat	equ	0xFF5
  8116                           prodh	equ	0xFF4
  8117                           prodl	equ	0xFF3
  8118                           postinc0	equ	0xFEE
  8119                           wreg	equ	0xFE8
  8120                           postdec1	equ	0xFE5
  8121                           fsr1h	equ	0xFE2
  8122                           fsr1l	equ	0xFE1
  8123                           indf2	equ	0xFDF
  8124                           fsr2h	equ	0xFDA
  8125                           fsr2l	equ	0xFD9
  8126                           status	equ	0xFD8
  8127                           
  8128 ;; *************** function __spi_init *****************
  8129 ;; Defined at:
  8130 ;;		line 24 in file "spi.c"
  8131 ;; Parameters:    Size  Location     Type
  8132 ;;  details         3    0[BANK0 ] struct .
  8133 ;; Auto vars:     Size  Location     Type
  8134 ;;		None
  8135 ;; Return value:  Size  Location     Type
  8136 ;;                  1    wreg      void 
  8137 ;; Registers used:
  8138 ;;		wreg, status,2
  8139 ;; Tracked objects:
  8140 ;;		On entry : 0/0
  8141 ;;		On exit  : 0/0
  8142 ;;		Unchanged: 0/0
  8143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8144 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8145 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8146 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8147 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8148 ;;Total ram usage:        3 bytes
  8149 ;; Hardware stack levels used:    1
  8150 ;; Hardware stack levels required when called:   10
  8151 ;; This function calls:
  8152 ;;		Nothing
  8153 ;; This function is called by:
  8154 ;;		_spi_init
  8155 ;; This function uses a non-reentrant model
  8156 ;;
  8157                           
  8158                           	psect	text13
  8159  015268                     __ptext13:
  8160                           	opt stack 0
  8161  015268                     __spi_init:
  8162                           	opt stack 17
  8163                           
  8164                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8165                           
  8166                           ;incstack = 0
  8167  015268  0E55               	movlw	85
  8168  01526A  6EA7               	movwf	4007,c	;volsfr
  8169  01526C  0EAA               	movlw	170
  8170  01526E  6EA7               	movwf	4007,c	;volsfr
  8171  015270  010E               	movlb	14	; () banked
  8172  015272  91BF               	bcf	191,0,b	;volatile
  8173                           
  8174                           ;spi.c: 31: RPINR21 = 22;
  8175  015274  0E16               	movlw	22
  8176  015276  6FFC               	movwf	252,b	;volatile
  8177                           
  8178                           ;spi.c: 32: RPOR21 = 10;
  8179  015278  0E0A               	movlw	10
  8180  01527A  6FD5               	movwf	213,b	;volatile
  8181                           
  8182                           ;spi.c: 34: RPOR23 = 11;
  8183  01527C  0E0B               	movlw	11
  8184  01527E  6FD7               	movwf	215,b	;volatile
  8185                           
  8186                           ;spi.c: 35: RPINR22 = 23;
  8187  015280  0E17               	movlw	23
  8188  015282  6FFD               	movwf	253,b	;volatile
  8189                           
  8190                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8191  015284  0E55               	movlw	85
  8192  015286  6EA7               	movwf	4007,c	;volsfr
  8193  015288  0EAA               	movlw	170
  8194  01528A  6EA7               	movwf	4007,c	;volsfr
  8195                           
  8196                           ; BSR set to: 14
  8197  01528C  81BF               	bsf	191,0,b	;volatile
  8198                           
  8199                           ; BSR set to: 14
  8200                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8201  01528E  8E73               	bsf	3955,7,c	;volatile
  8202                           
  8203                           ; BSR set to: 14
  8204                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8205  015290  8C73               	bsf	3955,6,c	;volatile
  8206                           
  8207                           ; BSR set to: 14
  8208                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8209  015292  9872               	bcf	3954,4,c	;volatile
  8210                           
  8211                           ; BSR set to: 14
  8212                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8213  015294  9072               	bcf	3954,0,c	;volatile
  8214  015296  9272               	bcf	3954,1,c	;volatile
  8215  015298  9472               	bcf	3954,2,c	;volatile
  8216  01529A  9672               	bcf	3954,3,c	;volatile
  8217                           
  8218                           ; BSR set to: 14
  8219                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8220  01529C  8A72               	bsf	3954,5,c	;volatile
  8221                           
  8222                           ; BSR set to: 14
  8223  01529E  0012               	return		;funcret
  8224  0152A0                     __end_of__spi_init:
  8225                           	opt stack 0
  8226                           tblptru	equ	0xFF8
  8227                           tblptrh	equ	0xFF7
  8228                           tblptrl	equ	0xFF6
  8229                           tablat	equ	0xFF5
  8230                           prodh	equ	0xFF4
  8231                           prodl	equ	0xFF3
  8232                           postinc0	equ	0xFEE
  8233                           wreg	equ	0xFE8
  8234                           postdec1	equ	0xFE5
  8235                           fsr1h	equ	0xFE2
  8236                           fsr1l	equ	0xFE1
  8237                           indf2	equ	0xFDF
  8238                           fsr2h	equ	0xFDA
  8239                           fsr2l	equ	0xFD9
  8240                           status	equ	0xFD8
  8241                           
  8242 ;; *************** function __flash_set_page_size *****************
  8243 ;; Defined at:
  8244 ;;		line 99 in file "flash.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  size            1    wreg     enum E7005
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  size            1   23[BANK0 ] enum E7005
  8249 ;;  command         4   19[BANK0 ] unsigned char [4]
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  1    wreg      void 
  8252 ;; Registers used:
  8253 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8260 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8262 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8263 ;;Total ram usage:        5 bytes
  8264 ;; Hardware stack levels used:    1
  8265 ;; Hardware stack levels required when called:   13
  8266 ;; This function calls:
  8267 ;;		__flash_is_busy
  8268 ;;		_memcpy
  8269 ;;		_spi_tx
  8270 ;; This function is called by:
  8271 ;;		_flash_init
  8272 ;; This function uses a non-reentrant model
  8273 ;;
  8274                           
  8275                           	psect	text14
  8276  013FE4                     __ptext14:
  8277                           	opt stack 0
  8278  013FE4                     __flash_set_page_size:
  8279                           	opt stack 15
  8280                           
  8281                           ; BSR set to: 14
  8282                           ;incstack = 0
  8283                           ;__flash_set_page_size@size stored from wreg
  8284  013FE4  0100               	movlb	0	; () banked
  8285  013FE6  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8286  013FE8                     
  8287                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8288  013FE8  ECE2  F0AB         	call	__flash_is_busy	;wreg free
  8289  013FEC  0900               	iorlw	0
  8290  013FEE  A4D8               	btfss	status,2,c
  8291  013FF0  D7FB               	goto	l15575
  8292                           
  8293                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8294  013FF2  0100               	movlb	0	; () banked
  8295  013FF4  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8296  013FF6  A4D8               	btfss	status,2,c
  8297  013FF8  D00E               	goto	l1522
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8301  013FFA  0E73               	movlw	low __flash_set_page_size@command
  8302  013FFC  6F60               	movwf	memcpy@d1& (0+255),b
  8303  013FFE  0E00               	movlw	high __flash_set_page_size@command
  8304  014000  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8305  014002  0EE1               	movlw	low _flash_command_pagesize_512
  8306  014004  6F62               	movwf	memcpy@s1& (0+255),b
  8307  014006  0EA2               	movlw	high _flash_command_pagesize_512
  8308  014008  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8309  01400A  0E00               	movlw	0
  8310  01400C  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8311  01400E  0E04               	movlw	4
  8312  014010  6F64               	movwf	memcpy@n& (0+255),b
  8313  014012  EC5D  F0A2         	call	_memcpy	;wreg free
  8314  014016                     l1522:
  8315                           
  8316                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8317  014016  0100               	movlb	0	; () banked
  8318  014018  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8319  01401A  A4D8               	btfss	status,2,c
  8320  01401C  D00E               	goto	l1523
  8321                           
  8322                           ; BSR set to: 0
  8323                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8324  01401E  0E73               	movlw	low __flash_set_page_size@command
  8325  014020  6F60               	movwf	memcpy@d1& (0+255),b
  8326  014022  0E00               	movlw	high __flash_set_page_size@command
  8327  014024  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8328  014026  0EDD               	movlw	low _flash_command_pagesize_528
  8329  014028  6F62               	movwf	memcpy@s1& (0+255),b
  8330  01402A  0EA2               	movlw	high _flash_command_pagesize_528
  8331  01402C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8332  01402E  0E00               	movlw	0
  8333  014030  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8334  014032  0E04               	movlw	4
  8335  014034  6F64               	movwf	memcpy@n& (0+255),b
  8336  014036  EC5D  F0A2         	call	_memcpy	;wreg free
  8337  01403A                     l1523:
  8338                           
  8339                           ;flash.c: 113: spi_tx(command, 4);
  8340  01403A  0E73               	movlw	low __flash_set_page_size@command
  8341  01403C  0100               	movlb	0	; () banked
  8342  01403E  6F60               	movwf	spi_tx@data& (0+255),b
  8343  014040  0E00               	movlw	high __flash_set_page_size@command
  8344  014042  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8345  014044  0E00               	movlw	0
  8346  014046  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8347  014048  0E04               	movlw	4
  8348  01404A  6F62               	movwf	spi_tx@length& (0+255),b
  8349  01404C  ECCE  F0A3         	call	_spi_tx	;wreg free
  8350  014050  0012               	return		;funcret
  8351  014052                     __end_of__flash_set_page_size:
  8352                           	opt stack 0
  8353                           tblptru	equ	0xFF8
  8354                           tblptrh	equ	0xFF7
  8355                           tblptrl	equ	0xFF6
  8356                           tablat	equ	0xFF5
  8357                           prodh	equ	0xFF4
  8358                           prodl	equ	0xFF3
  8359                           postinc0	equ	0xFEE
  8360                           wreg	equ	0xFE8
  8361                           postdec1	equ	0xFE5
  8362                           fsr1h	equ	0xFE2
  8363                           fsr1l	equ	0xFE1
  8364                           indf2	equ	0xFDF
  8365                           fsr2h	equ	0xFDA
  8366                           fsr2l	equ	0xFD9
  8367                           status	equ	0xFD8
  8368                           
  8369 ;; *************** function _fat_init *****************
  8370 ;; Defined at:
  8371 ;;		line 1382 in file "fat16.c"
  8372 ;; Parameters:    Size  Location     Type
  8373 ;;		None
  8374 ;; Auto vars:     Size  Location     Type
  8375 ;;		None
  8376 ;; Return value:  Size  Location     Type
  8377 ;;                  1    wreg      void 
  8378 ;; Registers used:
  8379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8380 ;; Tracked objects:
  8381 ;;		On entry : 0/0
  8382 ;;		On exit  : 0/0
  8383 ;;		Unchanged: 0/0
  8384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8389 ;;Total ram usage:        0 bytes
  8390 ;; Hardware stack levels used:    1
  8391 ;; Hardware stack levels required when called:   16
  8392 ;; This function calls:
  8393 ;;		_fat_format
  8394 ;;		_fat_get_format_status
  8395 ;; This function is called by:
  8396 ;;		_system_init
  8397 ;; This function uses a non-reentrant model
  8398 ;;
  8399                           
  8400                           	psect	text15
  8401  0159A0                     __ptext15:
  8402                           	opt stack 0
  8403  0159A0                     _fat_init:
  8404                           	opt stack 13
  8405                           
  8406                           ;fat16.c: 1385: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8407                           
  8408                           ;incstack = 0
  8409  0159A0  ECCE  F097         	call	_fat_get_format_status	;wreg free
  8410  0159A4  0900               	iorlw	0
  8411  0159A6  A4D8               	btfss	status,2,c
  8412  0159A8  0012               	return	
  8413                           
  8414                           ;fat16.c: 1386: {;fat16.c: 1387: fat_format();
  8415  0159AA  EC45  F076         	call	_fat_format	;wreg free
  8416  0159AE  0012               	return	
  8417  0159B0                     __end_of_fat_init:
  8418                           	opt stack 0
  8419                           tblptru	equ	0xFF8
  8420                           tblptrh	equ	0xFF7
  8421                           tblptrl	equ	0xFF6
  8422                           tablat	equ	0xFF5
  8423                           prodh	equ	0xFF4
  8424                           prodl	equ	0xFF3
  8425                           postinc0	equ	0xFEE
  8426                           wreg	equ	0xFE8
  8427                           postdec1	equ	0xFE5
  8428                           fsr1h	equ	0xFE2
  8429                           fsr1l	equ	0xFE1
  8430                           indf2	equ	0xFDF
  8431                           fsr2h	equ	0xFDA
  8432                           fsr2l	equ	0xFD9
  8433                           status	equ	0xFD8
  8434                           
  8435 ;; *************** function _fat_get_format_status *****************
  8436 ;; Defined at:
  8437 ;;		line 1292 in file "fat16.c"
  8438 ;; Parameters:    Size  Location     Type
  8439 ;;		None
  8440 ;; Auto vars:     Size  Location     Type
  8441 ;;  cntr            2   45[BANK0 ] unsigned int 
  8442 ;; Return value:  Size  Location     Type
  8443 ;;                  1    wreg      enum E6979
  8444 ;; Registers used:
  8445 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8446 ;; Tracked objects:
  8447 ;;		On entry : 0/0
  8448 ;;		On exit  : 0/0
  8449 ;;		Unchanged: 0/0
  8450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8452 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8453 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8454 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8455 ;;Total ram usage:        4 bytes
  8456 ;; Hardware stack levels used:    1
  8457 ;; Hardware stack levels required when called:   15
  8458 ;; This function calls:
  8459 ;;		__get_fbr
  8460 ;;		__get_mbr
  8461 ;;		_flash_sector_read
  8462 ;; This function is called by:
  8463 ;;		_fat_init
  8464 ;; This function uses a non-reentrant model
  8465 ;;
  8466                           
  8467                           	psect	text16
  8468  012F9C                     __ptext16:
  8469                           	opt stack 0
  8470  012F9C                     _fat_get_format_status:
  8471                           	opt stack 13
  8472                           
  8473                           ;fat16.c: 1294: uint16_t cntr;;fat16.c: 1297: flash_sector_read(0, buffer);
  8474                           
  8475                           ;incstack = 0
  8476  012F9C  0E00               	movlw	0
  8477  012F9E  0100               	movlb	0	; () banked
  8478  012FA0  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8479  012FA2  0E00               	movlw	0
  8480  012FA4  6F87               	movwf	flash_sector_read@page& (0+255),b
  8481  012FA6  0E00               	movlw	low _buffer
  8482  012FA8  6F89               	movwf	flash_sector_read@data& (0+255),b
  8483  012FAA  0E0A               	movlw	high _buffer
  8484  012FAC  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8485  012FAE  EC84  F0AB         	call	_flash_sector_read	;wreg free
  8486                           
  8487                           ;fat16.c: 1298: for(cntr=0; cntr<512; ++cntr)
  8488  012FB2  0E00               	movlw	0
  8489  012FB4  0100               	movlb	0	; () banked
  8490  012FB6  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8491  012FB8  0E00               	movlw	0
  8492  012FBA  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8493  012FBC                     l15767:
  8494                           
  8495                           ; BSR set to: 0
  8496  012FBC  0E02               	movlw	2
  8497  012FBE  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8498  012FC0  B0D8               	btfsc	status,0,c
  8499  012FC2  D017               	goto	u14630
  8500                           
  8501                           ; BSR set to: 0
  8502                           ;fat16.c: 1299: {;fat16.c: 1300: if(buffer[cntr] != _get_mbr(cntr))
  8503                           
  8504                           ; BSR set to: 0
  8505                           
  8506                           ; BSR set to: 0
  8507  012FC4  0E00               	movlw	low _buffer
  8508  012FC6  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8509  012FC8  6ED9               	movwf	fsr2l,c
  8510  012FCA  0E0A               	movlw	high _buffer
  8511  012FCC  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8512  012FCE  6EDA               	movwf	fsr2h,c
  8513  012FD0  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  8514  012FD4  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  8515  012FD8  EC44  F093         	call	__get_mbr	;wreg free
  8516  012FDC  0100               	movlb	0	; () banked
  8517  012FDE  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8518  012FE0  50DE               	movf	postinc2,w,c
  8519  012FE2  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8520  012FE4  B4D8               	btfsc	status,2,c
  8521  012FE6  D002               	goto	l2046
  8522                           
  8523                           ; BSR set to: 0
  8524                           ;fat16.c: 1301: {;fat16.c: 1302: return DRIVE_NOT_FORMATED;
  8525  012FE8  0E00               	movlw	0
  8526                           
  8527                           ; BSR set to: 0
  8528  012FEA  0012               	return	
  8529  012FEC                     l2046:
  8530                           
  8531                           ; BSR set to: 0
  8532                           
  8533                           ; BSR set to: 0
  8534  012FEC  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8535  012FEE  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8536  012FF0  D7E5               	goto	l15767
  8537  012FF2                     u14630:
  8538                           
  8539                           ; BSR set to: 0
  8540                           ;fat16.c: 1303: };fat16.c: 1304: };fat16.c: 1307: flash_sector_read(1, buffer);
  8541                           
  8542                           ; BSR set to: 0
  8543  012FF2  0E00               	movlw	0
  8544  012FF4  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8545  012FF6  0E01               	movlw	1
  8546  012FF8  6F87               	movwf	flash_sector_read@page& (0+255),b
  8547  012FFA  0E00               	movlw	low _buffer
  8548  012FFC  6F89               	movwf	flash_sector_read@data& (0+255),b
  8549  012FFE  0E0A               	movlw	high _buffer
  8550  013000  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8551  013002  EC84  F0AB         	call	_flash_sector_read	;wreg free
  8552                           
  8553                           ;fat16.c: 1308: for(cntr=0; cntr<512; ++cntr)
  8554  013006  0E00               	movlw	0
  8555  013008  0100               	movlb	0	; () banked
  8556  01300A  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8557  01300C  0E00               	movlw	0
  8558  01300E  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8559  013010                     l15785:
  8560                           
  8561                           ; BSR set to: 0
  8562  013010  0E02               	movlw	2
  8563  013012  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8564  013014  B0D8               	btfsc	status,0,c
  8565  013016  D017               	goto	u14660
  8566                           
  8567                           ; BSR set to: 0
  8568                           ;fat16.c: 1309: {;fat16.c: 1310: if(buffer[cntr] != _get_fbr(cntr))
  8569                           
  8570                           ; BSR set to: 0
  8571                           
  8572                           ; BSR set to: 0
  8573  013018  0E00               	movlw	low _buffer
  8574  01301A  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8575  01301C  6ED9               	movwf	fsr2l,c
  8576  01301E  0E0A               	movlw	high _buffer
  8577  013020  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8578  013022  6EDA               	movwf	fsr2h,c
  8579  013024  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  8580  013028  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  8581  01302C  EC97  F070         	call	__get_fbr	;wreg free
  8582  013030  0100               	movlb	0	; () banked
  8583  013032  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8584  013034  50DE               	movf	postinc2,w,c
  8585  013036  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8586  013038  B4D8               	btfsc	status,2,c
  8587  01303A  D002               	goto	l2050
  8588                           
  8589                           ; BSR set to: 0
  8590                           ;fat16.c: 1311: {;fat16.c: 1312: return DRIVE_NOT_FORMATED;
  8591  01303C  0E00               	movlw	0
  8592                           
  8593                           ; BSR set to: 0
  8594  01303E  0012               	return	
  8595  013040                     l2050:
  8596                           
  8597                           ; BSR set to: 0
  8598                           
  8599                           ; BSR set to: 0
  8600  013040  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8601  013042  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8602  013044  D7E5               	goto	l15785
  8603  013046                     u14660:
  8604                           
  8605                           ; BSR set to: 0
  8606                           ;fat16.c: 1313: };fat16.c: 1314: };fat16.c: 1317: return DRIVE_FORMATED;
  8607                           
  8608                           ; BSR set to: 0
  8609  013046  0E01               	movlw	1
  8610  013048  0012               	return	
  8611  01304A                     __end_of_fat_get_format_status:
  8612                           	opt stack 0
  8613                           tblptru	equ	0xFF8
  8614                           tblptrh	equ	0xFF7
  8615                           tblptrl	equ	0xFF6
  8616                           tablat	equ	0xFF5
  8617                           prodh	equ	0xFF4
  8618                           prodl	equ	0xFF3
  8619                           postinc0	equ	0xFEE
  8620                           wreg	equ	0xFE8
  8621                           postdec1	equ	0xFE5
  8622                           fsr1h	equ	0xFE2
  8623                           fsr1l	equ	0xFE1
  8624                           indf2	equ	0xFDF
  8625                           postinc2	equ	0xFDE
  8626                           fsr2h	equ	0xFDA
  8627                           fsr2l	equ	0xFD9
  8628                           status	equ	0xFD8
  8629                           
  8630 ;; *************** function _fat_format *****************
  8631 ;; Defined at:
  8632 ;;		line 1320 in file "fat16.c"
  8633 ;; Parameters:    Size  Location     Type
  8634 ;;		None
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  cntr            2   36[BANK0 ] unsigned int 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      unsigned char 
  8639 ;; Registers used:
  8640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8647 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8649 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8650 ;;Total ram usage:        2 bytes
  8651 ;; Hardware stack levels used:    1
  8652 ;; Hardware stack levels required when called:   15
  8653 ;; This function calls:
  8654 ;;		__get_data
  8655 ;;		__get_fat
  8656 ;;		__get_fbr
  8657 ;;		__get_mbr
  8658 ;;		__get_root
  8659 ;;		_flash_sector_write
  8660 ;; This function is called by:
  8661 ;;		_fat_init
  8662 ;; This function uses a non-reentrant model
  8663 ;;
  8664                           
  8665                           	psect	text17
  8666  00EC8A                     __ptext17:
  8667                           	opt stack 0
  8668  00EC8A                     _fat_format:
  8669                           	opt stack 13
  8670                           
  8671                           ;fat16.c: 1322: uint16_t cntr;;fat16.c: 1325: for(cntr=0; cntr<512; ++cntr)
  8672                           
  8673                           ; BSR set to: 0
  8674                           ;incstack = 0
  8675  00EC8A  0E00               	movlw	0
  8676  00EC8C  0100               	movlb	0	; () banked
  8677  00EC8E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8678  00EC90  0E00               	movlw	0
  8679  00EC92  6F84               	movwf	fat_format@cntr& (0+255),b
  8680  00EC94                     l15805:
  8681                           
  8682                           ; BSR set to: 0
  8683  00EC94  0E02               	movlw	2
  8684  00EC96  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8685  00EC98  B0D8               	btfsc	status,0,c
  8686  00EC9A  D011               	goto	u14680
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;fat16.c: 1326: {;fat16.c: 1327: buffer[cntr] = _get_mbr(cntr);
  8690                           
  8691                           ; BSR set to: 0
  8692                           
  8693                           ; BSR set to: 0
  8694  00EC9C  0E00               	movlw	low _buffer
  8695  00EC9E  2584               	addwf	fat_format@cntr& (0+255),w,b
  8696  00ECA0  6ED9               	movwf	fsr2l,c
  8697  00ECA2  0E0A               	movlw	high _buffer
  8698  00ECA4  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8699  00ECA6  6EDA               	movwf	fsr2h,c
  8700  00ECA8  C084  F060         	movff	fat_format@cntr,__get_mbr@idx
  8701  00ECAC  C085  F061         	movff	fat_format@cntr+1,__get_mbr@idx+1
  8702  00ECB0  EC44  F093         	call	__get_mbr	;wreg free
  8703  00ECB4  6EDF               	movwf	indf2,c
  8704  00ECB6  0100               	movlb	0	; () banked
  8705  00ECB8  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8706  00ECBA  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8707  00ECBC  D7EB               	goto	l15805
  8708  00ECBE                     u14680:
  8709                           
  8710                           ; BSR set to: 0
  8711                           ;fat16.c: 1328: };fat16.c: 1329: flash_sector_write(0, buffer);
  8712                           
  8713                           ; BSR set to: 0
  8714  00ECBE  0E00               	movlw	0
  8715  00ECC0  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8716  00ECC2  0E00               	movlw	0
  8717  00ECC4  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8718  00ECC6  0E00               	movlw	low _buffer
  8719  00ECC8  6F81               	movwf	flash_sector_write@data& (0+255),b
  8720  00ECCA  0E0A               	movlw	high _buffer
  8721  00ECCC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8722  00ECCE  ECA2  F0A6         	call	_flash_sector_write	;wreg free
  8723                           
  8724                           ;fat16.c: 1332: for(cntr=0; cntr<512; ++cntr)
  8725  00ECD2  0E00               	movlw	0
  8726  00ECD4  0100               	movlb	0	; () banked
  8727  00ECD6  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8728  00ECD8  0E00               	movlw	0
  8729  00ECDA  6F84               	movwf	fat_format@cntr& (0+255),b
  8730  00ECDC                     l15819:
  8731                           
  8732                           ; BSR set to: 0
  8733  00ECDC  0E02               	movlw	2
  8734  00ECDE  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8735  00ECE0  B0D8               	btfsc	status,0,c
  8736  00ECE2  D011               	goto	u14700
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;fat16.c: 1333: {;fat16.c: 1334: buffer[cntr] = _get_fbr(cntr);
  8740                           
  8741                           ; BSR set to: 0
  8742                           
  8743                           ; BSR set to: 0
  8744  00ECE4  0E00               	movlw	low _buffer
  8745  00ECE6  2584               	addwf	fat_format@cntr& (0+255),w,b
  8746  00ECE8  6ED9               	movwf	fsr2l,c
  8747  00ECEA  0E0A               	movlw	high _buffer
  8748  00ECEC  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8749  00ECEE  6EDA               	movwf	fsr2h,c
  8750  00ECF0  C084  F060         	movff	fat_format@cntr,__get_fbr@idx
  8751  00ECF4  C085  F061         	movff	fat_format@cntr+1,__get_fbr@idx+1
  8752  00ECF8  EC97  F070         	call	__get_fbr	;wreg free
  8753  00ECFC  6EDF               	movwf	indf2,c
  8754  00ECFE  0100               	movlb	0	; () banked
  8755  00ED00  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8756  00ED02  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8757  00ED04  D7EB               	goto	l15819
  8758  00ED06                     u14700:
  8759                           
  8760                           ; BSR set to: 0
  8761                           ;fat16.c: 1335: };fat16.c: 1336: flash_sector_write(1, buffer);
  8762                           
  8763                           ; BSR set to: 0
  8764  00ED06  0E00               	movlw	0
  8765  00ED08  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8766  00ED0A  0E01               	movlw	1
  8767  00ED0C  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8768  00ED0E  0E00               	movlw	low _buffer
  8769  00ED10  6F81               	movwf	flash_sector_write@data& (0+255),b
  8770  00ED12  0E0A               	movlw	high _buffer
  8771  00ED14  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8772  00ED16  ECA2  F0A6         	call	_flash_sector_write	;wreg free
  8773                           
  8774                           ;fat16.c: 1339: for(cntr=0; cntr<512; ++cntr)
  8775  00ED1A  0E00               	movlw	0
  8776  00ED1C  0100               	movlb	0	; () banked
  8777  00ED1E  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8778  00ED20  0E00               	movlw	0
  8779  00ED22  6F84               	movwf	fat_format@cntr& (0+255),b
  8780  00ED24                     l15833:
  8781                           
  8782                           ; BSR set to: 0
  8783  00ED24  0E02               	movlw	2
  8784  00ED26  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8785  00ED28  B0D8               	btfsc	status,0,c
  8786  00ED2A  D011               	goto	u14720
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;fat16.c: 1340: {;fat16.c: 1341: buffer[cntr] = _get_fat(cntr);
  8790                           
  8791                           ; BSR set to: 0
  8792                           
  8793                           ; BSR set to: 0
  8794  00ED2C  0E00               	movlw	low _buffer
  8795  00ED2E  2584               	addwf	fat_format@cntr& (0+255),w,b
  8796  00ED30  6ED9               	movwf	fsr2l,c
  8797  00ED32  0E0A               	movlw	high _buffer
  8798  00ED34  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8799  00ED36  6EDA               	movwf	fsr2h,c
  8800  00ED38  C084  F060         	movff	fat_format@cntr,__get_fat@idx
  8801  00ED3C  C085  F061         	movff	fat_format@cntr+1,__get_fat@idx+1
  8802  00ED40  ECFB  F0A3         	call	__get_fat	;wreg free
  8803  00ED44  6EDF               	movwf	indf2,c
  8804  00ED46  0100               	movlb	0	; () banked
  8805  00ED48  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8806  00ED4A  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8807  00ED4C  D7EB               	goto	l15833
  8808  00ED4E                     u14720:
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;fat16.c: 1342: };fat16.c: 1343: flash_sector_write(2, buffer);
  8812                           
  8813                           ; BSR set to: 0
  8814  00ED4E  0E00               	movlw	0
  8815  00ED50  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8816  00ED52  0E02               	movlw	2
  8817  00ED54  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8818  00ED56  0E00               	movlw	low _buffer
  8819  00ED58  6F81               	movwf	flash_sector_write@data& (0+255),b
  8820  00ED5A  0E0A               	movlw	high _buffer
  8821  00ED5C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8822  00ED5E  ECA2  F0A6         	call	_flash_sector_write	;wreg free
  8823                           
  8824                           ;fat16.c: 1346: for(cntr=0; cntr<512; ++cntr)
  8825  00ED62  0E00               	movlw	0
  8826  00ED64  0100               	movlb	0	; () banked
  8827  00ED66  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8828  00ED68  0E00               	movlw	0
  8829  00ED6A  6F84               	movwf	fat_format@cntr& (0+255),b
  8830  00ED6C                     l15847:
  8831                           
  8832                           ; BSR set to: 0
  8833  00ED6C  0E02               	movlw	2
  8834  00ED6E  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8835  00ED70  B0D8               	btfsc	status,0,c
  8836  00ED72  D00B               	goto	u14740
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;fat16.c: 1347: {;fat16.c: 1348: buffer[cntr] = 0x00;
  8840                           
  8841                           ; BSR set to: 0
  8842                           
  8843                           ; BSR set to: 0
  8844  00ED74  0E00               	movlw	low _buffer
  8845  00ED76  2584               	addwf	fat_format@cntr& (0+255),w,b
  8846  00ED78  6ED9               	movwf	fsr2l,c
  8847  00ED7A  0E0A               	movlw	high _buffer
  8848  00ED7C  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8849  00ED7E  6EDA               	movwf	fsr2h,c
  8850  00ED80  0E00               	movlw	0
  8851  00ED82  6EDF               	movwf	indf2,c
  8852                           
  8853                           ; BSR set to: 0
  8854  00ED84  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8855  00ED86  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8856  00ED88  D7F1               	goto	l15847
  8857  00ED8A                     u14740:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;fat16.c: 1349: };fat16.c: 1350: for(cntr=2+1; cntr<=33; ++cntr)
  8861                           
  8862                           ; BSR set to: 0
  8863  00ED8A  0E00               	movlw	0
  8864  00ED8C  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8865  00ED8E  0E03               	movlw	3
  8866  00ED90  6F84               	movwf	fat_format@cntr& (0+255),b
  8867  00ED92                     l15859:
  8868                           
  8869                           ; BSR set to: 0
  8870  00ED92  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8871  00ED94  E112               	bnz	l15869
  8872  00ED96  0E22               	movlw	34
  8873  00ED98  5D84               	subwf	fat_format@cntr& (0+255),w,b
  8874  00ED9A  B0D8               	btfsc	status,0,c
  8875  00ED9C  D00E               	goto	u14760
  8876                           
  8877                           ; BSR set to: 0
  8878                           ;fat16.c: 1351: {;fat16.c: 1352: flash_sector_write(cntr, buffer);
  8879                           
  8880                           ; BSR set to: 0
  8881                           
  8882                           ; BSR set to: 0
  8883  00ED9E  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  8884  00EDA2  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  8885  00EDA6  0E00               	movlw	low _buffer
  8886  00EDA8  6F81               	movwf	flash_sector_write@data& (0+255),b
  8887  00EDAA  0E0A               	movlw	high _buffer
  8888  00EDAC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8889  00EDAE  ECA2  F0A6         	call	_flash_sector_write	;wreg free
  8890  00EDB2  0100               	movlb	0	; () banked
  8891  00EDB4  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8892  00EDB6  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8893  00EDB8  D7EC               	goto	l15859
  8894  00EDBA                     u14760:
  8895  00EDBA                     l15869:
  8896                           
  8897                           ; BSR set to: 0
  8898                           ;fat16.c: 1353: };fat16.c: 1356: for(cntr=0; cntr<512; ++cntr)
  8899  00EDBA  0E00               	movlw	0
  8900  00EDBC  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8901  00EDBE  0E00               	movlw	0
  8902  00EDC0  6F84               	movwf	fat_format@cntr& (0+255),b
  8903  00EDC2                     l15871:
  8904                           
  8905                           ; BSR set to: 0
  8906  00EDC2  0E02               	movlw	2
  8907  00EDC4  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8908  00EDC6  B0D8               	btfsc	status,0,c
  8909  00EDC8  D011               	goto	u14780
  8910                           
  8911                           ; BSR set to: 0
  8912                           ;fat16.c: 1357: {;fat16.c: 1358: buffer[cntr] = _get_root(cntr);
  8913                           
  8914                           ; BSR set to: 0
  8915                           
  8916                           ; BSR set to: 0
  8917  00EDCA  0E00               	movlw	low _buffer
  8918  00EDCC  2584               	addwf	fat_format@cntr& (0+255),w,b
  8919  00EDCE  6ED9               	movwf	fsr2l,c
  8920  00EDD0  0E0A               	movlw	high _buffer
  8921  00EDD2  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8922  00EDD4  6EDA               	movwf	fsr2h,c
  8923  00EDD6  C084  F060         	movff	fat_format@cntr,__get_root@idx
  8924  00EDDA  C085  F061         	movff	fat_format@cntr+1,__get_root@idx+1
  8925  00EDDE  ECD5  F07B         	call	__get_root	;wreg free
  8926  00EDE2  6EDF               	movwf	indf2,c
  8927  00EDE4  0100               	movlb	0	; () banked
  8928  00EDE6  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8929  00EDE8  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8930  00EDEA  D7EB               	goto	l15871
  8931  00EDEC                     u14780:
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;fat16.c: 1359: };fat16.c: 1360: flash_sector_write(34, buffer);
  8935                           
  8936                           ; BSR set to: 0
  8937  00EDEC  0E00               	movlw	0
  8938  00EDEE  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8939  00EDF0  0E22               	movlw	34
  8940  00EDF2  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8941  00EDF4  0E00               	movlw	low _buffer
  8942  00EDF6  6F81               	movwf	flash_sector_write@data& (0+255),b
  8943  00EDF8  0E0A               	movlw	high _buffer
  8944  00EDFA  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8945  00EDFC  ECA2  F0A6         	call	_flash_sector_write	;wreg free
  8946                           
  8947                           ;fat16.c: 1363: for(cntr=0; cntr<512; ++cntr)
  8948  00EE00  0E00               	movlw	0
  8949  00EE02  0100               	movlb	0	; () banked
  8950  00EE04  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8951  00EE06  0E00               	movlw	0
  8952  00EE08  6F84               	movwf	fat_format@cntr& (0+255),b
  8953  00EE0A                     l15885:
  8954                           
  8955                           ; BSR set to: 0
  8956  00EE0A  0E02               	movlw	2
  8957  00EE0C  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  8958  00EE0E  B0D8               	btfsc	status,0,c
  8959  00EE10  D00B               	goto	u14800
  8960                           
  8961                           ; BSR set to: 0
  8962                           ;fat16.c: 1364: {;fat16.c: 1365: buffer[cntr] = 0x00;
  8963                           
  8964                           ; BSR set to: 0
  8965                           
  8966                           ; BSR set to: 0
  8967  00EE12  0E00               	movlw	low _buffer
  8968  00EE14  2584               	addwf	fat_format@cntr& (0+255),w,b
  8969  00EE16  6ED9               	movwf	fsr2l,c
  8970  00EE18  0E0A               	movlw	high _buffer
  8971  00EE1A  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  8972  00EE1C  6EDA               	movwf	fsr2h,c
  8973  00EE1E  0E00               	movlw	0
  8974  00EE20  6EDF               	movwf	indf2,c
  8975                           
  8976                           ; BSR set to: 0
  8977  00EE22  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  8978  00EE24  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  8979  00EE26  D7F1               	goto	l15885
  8980  00EE28                     u14800:
  8981                           
  8982                           ; BSR set to: 0
  8983                           ;fat16.c: 1366: };fat16.c: 1367: for(cntr=34+1; cntr<=37; ++cntr)
  8984                           
  8985                           ; BSR set to: 0
  8986  00EE28  0E00               	movlw	0
  8987  00EE2A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  8988  00EE2C  0E23               	movlw	35
  8989  00EE2E  6F84               	movwf	fat_format@cntr& (0+255),b
  8990  00EE30                     l15897:
  8991                           
  8992                           ; BSR set to: 0
  8993  00EE30  5185               	movf	(fat_format@cntr+1)& (0+255),w,b
  8994  00EE32  E112               	bnz	l15907
  8995  00EE34  0E26               	movlw	38
  8996  00EE36  5D84               	subwf	fat_format@cntr& (0+255),w,b
  8997  00EE38  B0D8               	btfsc	status,0,c
  8998  00EE3A  D00E               	goto	u14820
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;fat16.c: 1368: {;fat16.c: 1369: flash_sector_write(cntr, buffer);
  9002                           
  9003                           ; BSR set to: 0
  9004                           
  9005                           ; BSR set to: 0
  9006  00EE3C  C084  F07F         	movff	fat_format@cntr,flash_sector_write@page
  9007  00EE40  C085  F080         	movff	fat_format@cntr+1,flash_sector_write@page+1
  9008  00EE44  0E00               	movlw	low _buffer
  9009  00EE46  6F81               	movwf	flash_sector_write@data& (0+255),b
  9010  00EE48  0E0A               	movlw	high _buffer
  9011  00EE4A  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9012  00EE4C  ECA2  F0A6         	call	_flash_sector_write	;wreg free
  9013  00EE50  0100               	movlb	0	; () banked
  9014  00EE52  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9015  00EE54  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9016  00EE56  D7EC               	goto	l15897
  9017  00EE58                     u14820:
  9018  00EE58                     l15907:
  9019                           
  9020                           ; BSR set to: 0
  9021                           ;fat16.c: 1370: };fat16.c: 1373: for(cntr=0; cntr<512; ++cntr)
  9022  00EE58  0E00               	movlw	0
  9023  00EE5A  6F85               	movwf	(fat_format@cntr+1)& (0+255),b
  9024  00EE5C  0E00               	movlw	0
  9025  00EE5E  6F84               	movwf	fat_format@cntr& (0+255),b
  9026  00EE60                     l15909:
  9027                           
  9028                           ; BSR set to: 0
  9029  00EE60  0E02               	movlw	2
  9030  00EE62  5D85               	subwf	(fat_format@cntr+1)& (0+255),w,b
  9031  00EE64  B0D8               	btfsc	status,0,c
  9032  00EE66  D011               	goto	u14840
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;fat16.c: 1374: {;fat16.c: 1375: buffer[cntr] = _get_data(cntr);
  9036                           
  9037                           ; BSR set to: 0
  9038                           
  9039                           ; BSR set to: 0
  9040  00EE68  0E00               	movlw	low _buffer
  9041  00EE6A  2584               	addwf	fat_format@cntr& (0+255),w,b
  9042  00EE6C  6ED9               	movwf	fsr2l,c
  9043  00EE6E  0E0A               	movlw	high _buffer
  9044  00EE70  2185               	addwfc	(fat_format@cntr+1)& (0+255),w,b
  9045  00EE72  6EDA               	movwf	fsr2h,c
  9046  00EE74  C084  F060         	movff	fat_format@cntr,__get_data@idx
  9047  00EE78  C085  F061         	movff	fat_format@cntr+1,__get_data@idx+1
  9048  00EE7C  ECF4  F0AA         	call	__get_data	;wreg free
  9049  00EE80  6EDF               	movwf	indf2,c
  9050  00EE82  0100               	movlb	0	; () banked
  9051  00EE84  4B84               	infsnz	fat_format@cntr& (0+255),f,b
  9052  00EE86  2B85               	incf	(fat_format@cntr+1)& (0+255),f,b
  9053  00EE88  D7EB               	goto	l15909
  9054  00EE8A                     u14840:
  9055                           
  9056                           ; BSR set to: 0
  9057                           ;fat16.c: 1376: };fat16.c: 1377: flash_sector_write(38, buffer);
  9058                           
  9059                           ; BSR set to: 0
  9060  00EE8A  0E00               	movlw	0
  9061  00EE8C  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  9062  00EE8E  0E26               	movlw	38
  9063  00EE90  6F7F               	movwf	flash_sector_write@page& (0+255),b
  9064  00EE92  0E00               	movlw	low _buffer
  9065  00EE94  6F81               	movwf	flash_sector_write@data& (0+255),b
  9066  00EE96  0E0A               	movlw	high _buffer
  9067  00EE98  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  9068  00EE9A  ECA2  F0A6         	call	_flash_sector_write	;wreg free
  9069  00EE9E  0012               	return	
  9070  00EEA0                     __end_of_fat_format:
  9071                           	opt stack 0
  9072                           tblptru	equ	0xFF8
  9073                           tblptrh	equ	0xFF7
  9074                           tblptrl	equ	0xFF6
  9075                           tablat	equ	0xFF5
  9076                           prodh	equ	0xFF4
  9077                           prodl	equ	0xFF3
  9078                           postinc0	equ	0xFEE
  9079                           wreg	equ	0xFE8
  9080                           postdec1	equ	0xFE5
  9081                           fsr1h	equ	0xFE2
  9082                           fsr1l	equ	0xFE1
  9083                           indf2	equ	0xFDF
  9084                           postinc2	equ	0xFDE
  9085                           fsr2h	equ	0xFDA
  9086                           fsr2l	equ	0xFD9
  9087                           status	equ	0xFD8
  9088                           
  9089 ;; *************** function __get_root *****************
  9090 ;; Defined at:
  9091 ;;		line 1210 in file "fat16.c"
  9092 ;; Parameters:    Size  Location     Type
  9093 ;;  idx             2    0[BANK0 ] unsigned int 
  9094 ;; Auto vars:     Size  Location     Type
  9095 ;;		None
  9096 ;; Return value:  Size  Location     Type
  9097 ;;                  1    wreg      unsigned char 
  9098 ;; Registers used:
  9099 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9100 ;; Tracked objects:
  9101 ;;		On entry : 0/0
  9102 ;;		On exit  : 0/0
  9103 ;;		Unchanged: 0/0
  9104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9105 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9107 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9108 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9109 ;;Total ram usage:        6 bytes
  9110 ;; Hardware stack levels used:    1
  9111 ;; Hardware stack levels required when called:   10
  9112 ;; This function calls:
  9113 ;;		Nothing
  9114 ;; This function is called by:
  9115 ;;		_fat_format
  9116 ;; This function uses a non-reentrant model
  9117 ;;
  9118                           
  9119                           	psect	text18
  9120  00F7AA                     __ptext18:
  9121                           	opt stack 0
  9122  00F7AA                     __get_root:
  9123                           	opt stack 17
  9124                           
  9125                           ;fat16.c: 1212: if(idx < 0x20)
  9126                           
  9127                           ;incstack = 0
  9128  00F7AA  0100               	movlb	0	; () banked
  9129  00F7AC  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9130  00F7AE  E11D               	bnz	l14891
  9131  00F7B0  0E20               	movlw	32
  9132  00F7B2  5D60               	subwf	__get_root@idx& (0+255),w,b
  9133  00F7B4  B0D8               	btfsc	status,0,c
  9134  00F7B6  D019               	goto	l2011
  9135                           
  9136                           ; BSR set to: 0
  9137                           ;fat16.c: 1213: {;fat16.c: 1214: if(idx < 11)
  9138  00F7B8  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9139  00F7BA  E110               	bnz	l14885
  9140  00F7BC  0E0B               	movlw	11
  9141  00F7BE  5D60               	subwf	__get_root@idx& (0+255),w,b
  9142  00F7C0  B0D8               	btfsc	status,0,c
  9143  00F7C2  D00C               	goto	l2009
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;fat16.c: 1215: {;fat16.c: 1216: return "StepperCtrl"[idx];
  9147  00F7C4  0EF6               	movlw	low STR_15
  9148  00F7C6  2560               	addwf	__get_root@idx& (0+255),w,b
  9149  00F7C8  6EF6               	movwf	tblptrl,c
  9150  00F7CA  0EA2               	movlw	high STR_15
  9151  00F7CC  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9152  00F7CE  6EF7               	movwf	tblptrh,c
  9153  00F7D0                     	if	1	;There are 3 active tblptr bytes
  9154  00F7D0  6AF8               	clrf	tblptru,c
  9155  00F7D2  0E00               	movlw	low (__mediumconst shr (0+16))
  9156  00F7D4  22F8               	addwfc	tblptru,f,c
  9157  00F7D6                     	endif
  9158  00F7D6  0008               	tblrd		*
  9159  00F7D8  50F5               	movf	tablat,w,c
  9160                           
  9161                           ; BSR set to: 0
  9162  00F7DA  0012               	return	
  9163  00F7DC                     l2009:
  9164  00F7DC                     l14885:
  9165                           
  9166                           ; BSR set to: 0
  9167                           ;fat16.c: 1217: };fat16.c: 1218: if(idx==11)
  9168  00F7DC  0E0B               	movlw	11
  9169  00F7DE  1960               	xorwf	__get_root@idx& (0+255),w,b
  9170  00F7E0  1161               	iorwf	(__get_root@idx+1)& (0+255),w,b
  9171  00F7E2  A4D8               	btfss	status,2,c
  9172  00F7E4  D002               	goto	l2011
  9173                           
  9174                           ; BSR set to: 0
  9175                           ;fat16.c: 1219: {;fat16.c: 1220: return 0x08;
  9176  00F7E6  0E08               	movlw	8
  9177                           
  9178                           ; BSR set to: 0
  9179  00F7E8  0012               	return	
  9180  00F7EA                     l2011:
  9181  00F7EA                     l14891:
  9182                           
  9183                           ; BSR set to: 0
  9184                           ;fat16.c: 1221: };fat16.c: 1222: };fat16.c: 1223: if(idx < 0x40)
  9185  00F7EA  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9186  00F7EC  E103               	bnz	u13591
  9187  00F7EE  0E40               	movlw	64
  9188  00F7F0  5D60               	subwf	__get_root@idx& (0+255),w,b
  9189  00F7F2  B0D8               	btfsc	status,0,c
  9190  00F7F4                     u13591:
  9191  00F7F4  D0A4               	goto	l2037
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;fat16.c: 1224: {;fat16.c: 1225: idx -= 0x20;
  9195  00F7F6  0E20               	movlw	32
  9196  00F7F8  5F60               	subwf	__get_root@idx& (0+255),f,b
  9197  00F7FA  0E00               	movlw	0
  9198  00F7FC  5B61               	subwfb	(__get_root@idx+1)& (0+255),f,b
  9199                           
  9200                           ;fat16.c: 1226: if(idx < 0+8)
  9201  00F7FE  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9202  00F800  E110               	bnz	l14899
  9203  00F802  0E08               	movlw	8
  9204  00F804  5D60               	subwf	__get_root@idx& (0+255),w,b
  9205  00F806  B0D8               	btfsc	status,0,c
  9206  00F808  D00C               	goto	l2013
  9207                           
  9208                           ; BSR set to: 0
  9209                           ;fat16.c: 1227: {;fat16.c: 1228: return "FILE    "[idx];
  9210  00F80A  0E02               	movlw	low STR_16
  9211  00F80C  2560               	addwf	__get_root@idx& (0+255),w,b
  9212  00F80E  6EF6               	movwf	tblptrl,c
  9213  00F810  0EA3               	movlw	high STR_16
  9214  00F812  2161               	addwfc	(__get_root@idx+1)& (0+255),w,b
  9215  00F814  6EF7               	movwf	tblptrh,c
  9216  00F816                     	if	1	;There are 3 active tblptr bytes
  9217  00F816  6AF8               	clrf	tblptru,c
  9218  00F818  0E00               	movlw	low (__mediumconst shr (0+16))
  9219  00F81A  22F8               	addwfc	tblptru,f,c
  9220  00F81C                     	endif
  9221  00F81C  0008               	tblrd		*
  9222  00F81E  50F5               	movf	tablat,w,c
  9223                           
  9224                           ; BSR set to: 0
  9225  00F820  0012               	return	
  9226  00F822                     l2013:
  9227  00F822                     l14899:
  9228                           
  9229                           ; BSR set to: 0
  9230                           ;fat16.c: 1229: };fat16.c: 1230: if(idx < 11)
  9231  00F822  5161               	movf	(__get_root@idx+1)& (0+255),w,b
  9232  00F824  E146               	bnz	l14991
  9233  00F826  0E0B               	movlw	11
  9234  00F828  5D60               	subwf	__get_root@idx& (0+255),w,b
  9235  00F82A  B0D8               	btfsc	status,0,c
  9236  00F82C  D042               	goto	l2015
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;fat16.c: 1231: {;fat16.c: 1232: return "TXT"[idx-8];
  9240  00F82E  0EF8               	movlw	248
  9241  00F830  6F62               	movwf	??__get_root& (0+255),b
  9242  00F832  0EFF               	movlw	255
  9243  00F834  6F63               	movwf	(??__get_root+1)& (0+255),b
  9244  00F836  C060  F064         	movff	__get_root@idx,??__get_root+2
  9245  00F83A  C061  F065         	movff	__get_root@idx+1,??__get_root+3
  9246  00F83E  5162               	movf	??__get_root& (0+255),w,b
  9247  00F840  2764               	addwf	(??__get_root+2)& (0+255),f,b
  9248  00F842  5163               	movf	(??__get_root+1)& (0+255),w,b
  9249  00F844  2365               	addwfc	(??__get_root+3)& (0+255),f,b
  9250  00F846  0E2A               	movlw	low STR_17
  9251  00F848  2564               	addwf	(??__get_root+2)& (0+255),w,b
  9252  00F84A  6EF6               	movwf	tblptrl,c
  9253  00F84C  0EA3               	movlw	high STR_17
  9254  00F84E  2165               	addwfc	(??__get_root+3)& (0+255),w,b
  9255  00F850  6EF7               	movwf	tblptrh,c
  9256  00F852                     	if	1	;There are 3 active tblptr bytes
  9257  00F852  6AF8               	clrf	tblptru,c
  9258  00F854  0E00               	movlw	low (__mediumconst shr (0+16))
  9259  00F856  22F8               	addwfc	tblptru,f,c
  9260  00F858                     	endif
  9261  00F858  0008               	tblrd		*
  9262  00F85A  50F5               	movf	tablat,w,c
  9263                           
  9264                           ; BSR set to: 0
  9265  00F85C  0012               	return	
  9266  00F85E                     
  9267                           ; BSR set to: 0
  9268                           ;fat16.c: 1237: return 0x20;
  9269                           
  9270                           ; BSR set to: 0
  9271  00F85E  0E20               	movlw	32
  9272                           
  9273                           ; BSR set to: 0
  9274  00F860  0012               	return	
  9275  00F862                     
  9276                           ; BSR set to: 0
  9277                           ;fat16.c: 1239: return 0x06;
  9278                           
  9279                           ; BSR set to: 0
  9280  00F862  0E06               	movlw	6
  9281                           
  9282                           ; BSR set to: 0
  9283  00F864  0012               	return	
  9284  00F866                     
  9285                           ; BSR set to: 0
  9286                           ;fat16.c: 1241: return 0x28;
  9287                           
  9288                           ; BSR set to: 0
  9289  00F866  0E28               	movlw	40
  9290                           
  9291                           ; BSR set to: 0
  9292  00F868  0012               	return	
  9293  00F86A                     
  9294                           ; BSR set to: 0
  9295                           ;fat16.c: 1243: return 0x78;
  9296                           
  9297                           ; BSR set to: 0
  9298  00F86A  0E78               	movlw	120
  9299                           
  9300                           ; BSR set to: 0
  9301  00F86C  0012               	return	
  9302  00F86E                     
  9303                           ; BSR set to: 0
  9304                           ;fat16.c: 1245: return 0xDE;
  9305                           
  9306                           ; BSR set to: 0
  9307  00F86E  0EDE               	movlw	222
  9308                           
  9309                           ; BSR set to: 0
  9310  00F870  0012               	return	
  9311  00F872                     
  9312                           ; BSR set to: 0
  9313                           ;fat16.c: 1247: return 0x38;
  9314                           
  9315                           ; BSR set to: 0
  9316  00F872  0E38               	movlw	56
  9317                           
  9318                           ; BSR set to: 0
  9319  00F874  0012               	return	
  9320  00F876                     
  9321                           ; BSR set to: 0
  9322                           ;fat16.c: 1249: return 0x5F;
  9323                           
  9324                           ; BSR set to: 0
  9325  00F876  0E5F               	movlw	95
  9326                           
  9327                           ; BSR set to: 0
  9328  00F878  0012               	return	
  9329  00F87A                     
  9330                           ; BSR set to: 0
  9331                           ;fat16.c: 1251: return 0x4B;
  9332                           
  9333                           ; BSR set to: 0
  9334  00F87A  0E4B               	movlw	75
  9335                           
  9336                           ; BSR set to: 0
  9337  00F87C  0012               	return	
  9338  00F87E                     
  9339                           ; BSR set to: 0
  9340                           ;fat16.c: 1253: return 0x00;
  9341                           
  9342                           ; BSR set to: 0
  9343  00F87E  0E00               	movlw	0
  9344                           
  9345                           ; BSR set to: 0
  9346  00F880  0012               	return	
  9347  00F882                     
  9348                           ; BSR set to: 0
  9349                           ;fat16.c: 1255: return 0x00;
  9350                           
  9351                           ; BSR set to: 0
  9352  00F882  0E00               	movlw	0
  9353                           
  9354                           ; BSR set to: 0
  9355  00F884  0012               	return	
  9356  00F886                     
  9357                           ; BSR set to: 0
  9358                           ;fat16.c: 1257: return 0x04;
  9359                           
  9360                           ; BSR set to: 0
  9361  00F886  0E04               	movlw	4
  9362                           
  9363                           ; BSR set to: 0
  9364  00F888  0012               	return	
  9365  00F88A                     
  9366                           ; BSR set to: 0
  9367                           ;fat16.c: 1259: return 0x77;
  9368                           
  9369                           ; BSR set to: 0
  9370  00F88A  0E77               	movlw	119
  9371                           
  9372                           ; BSR set to: 0
  9373  00F88C  0012               	return	
  9374  00F88E                     
  9375                           ; BSR set to: 0
  9376                           ;fat16.c: 1261: return 0xDE;
  9377                           
  9378                           ; BSR set to: 0
  9379  00F88E  0EDE               	movlw	222
  9380                           
  9381                           ; BSR set to: 0
  9382  00F890  0012               	return	
  9383  00F892                     
  9384                           ; BSR set to: 0
  9385                           ;fat16.c: 1263: return 0x38;
  9386                           
  9387                           ; BSR set to: 0
  9388  00F892  0E38               	movlw	56
  9389                           
  9390                           ; BSR set to: 0
  9391  00F894  0012               	return	
  9392  00F896                     
  9393                           ; BSR set to: 0
  9394                           ;fat16.c: 1265: return ((unsigned char)((((uint16_t)2))&0xFF));
  9395                           
  9396                           ; BSR set to: 0
  9397  00F896  0E02               	movlw	2
  9398                           
  9399                           ; BSR set to: 0
  9400  00F898  0012               	return	
  9401  00F89A                     
  9402                           ; BSR set to: 0
  9403                           ;fat16.c: 1267: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  9404                           
  9405                           ; BSR set to: 0
  9406  00F89A  0E00               	movlw	0
  9407                           
  9408                           ; BSR set to: 0
  9409  00F89C  0012               	return	
  9410  00F89E                     
  9411                           ; BSR set to: 0
  9412                           ;fat16.c: 1269: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
  9413                           
  9414                           ; BSR set to: 0
  9415  00F89E  0E0C               	movlw	12
  9416                           
  9417                           ; BSR set to: 0
  9418  00F8A0  0012               	return	
  9419  00F8A2                     
  9420                           ; BSR set to: 0
  9421                           ;fat16.c: 1271: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
  9422                           
  9423                           ; BSR set to: 0
  9424  00F8A2  0E00               	movlw	0
  9425                           
  9426                           ; BSR set to: 0
  9427  00F8A4  0012               	return	
  9428  00F8A6                     
  9429                           ; BSR set to: 0
  9430                           ;fat16.c: 1273: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
  9431                           
  9432                           ; BSR set to: 0
  9433  00F8A6  0E00               	movlw	0
  9434                           
  9435                           ; BSR set to: 0
  9436  00F8A8  0012               	return	
  9437  00F8AA                     
  9438                           ; BSR set to: 0
  9439                           ;fat16.c: 1275: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9440                           
  9441                           ; BSR set to: 0
  9442  00F8AA  0E00               	movlw	0
  9443                           
  9444                           ; BSR set to: 0
  9445  00F8AC  0012               	return	
  9446  00F8AE                     
  9447                           ; BSR set to: 0
  9448                           ;fat16.c: 1277: return 0x00;
  9449                           
  9450                           ; BSR set to: 0
  9451  00F8AE  0E00               	movlw	0
  9452                           
  9453                           ; BSR set to: 0
  9454  00F8B0  0012               	return	
  9455  00F8B2                     l2015:
  9456  00F8B2                     l14991:
  9457                           
  9458                           ; BSR set to: 0
  9459  00F8B2  C060  F062         	movff	__get_root@idx,??__get_root
  9460  00F8B6  C061  F063         	movff	__get_root@idx+1,??__get_root+1
  9461                           
  9462                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9463                           ; Switch size 1, requested type "space"
  9464                           ; Number of cases is 1, Range of values is 0 to 0
  9465                           ; switch strategies available:
  9466                           ; Name         Instructions Cycles
  9467                           ; simple_byte            4     3 (average)
  9468                           ;	Chosen strategy is simple_byte
  9469  00F8BA  5163               	movf	(??__get_root+1)& (0+255),w,b
  9470  00F8BC  0A00               	xorlw	0	; case 0
  9471  00F8BE  A4D8               	btfss	status,2,c
  9472  00F8C0  D7F6               	goto	l2036
  9473                           
  9474                           ; BSR set to: 0
  9475                           ; Switch size 1, requested type "space"
  9476                           ; Number of cases is 20, Range of values is 11 to 31
  9477                           ; switch strategies available:
  9478                           ; Name         Instructions Cycles
  9479                           ; simple_byte           61    31 (average)
  9480                           ;	Chosen strategy is simple_byte
  9481  00F8C2  5162               	movf	??__get_root& (0+255),w,b
  9482  00F8C4  0A0B               	xorlw	11	; case 11
  9483  00F8C6  B4D8               	btfsc	status,2,c
  9484  00F8C8  D7CA               	goto	l2016
  9485  00F8CA  0A06               	xorlw	6	; case 13
  9486  00F8CC  B4D8               	btfsc	status,2,c
  9487  00F8CE  D7C9               	goto	l2017
  9488  00F8D0  0A03               	xorlw	3	; case 14
  9489  00F8D2  B4D8               	btfsc	status,2,c
  9490  00F8D4  D7C8               	goto	l2018
  9491  00F8D6  0A01               	xorlw	1	; case 15
  9492  00F8D8  B4D8               	btfsc	status,2,c
  9493  00F8DA  D7C7               	goto	l2019
  9494  00F8DC  0A1F               	xorlw	31	; case 16
  9495  00F8DE  B4D8               	btfsc	status,2,c
  9496  00F8E0  D7C6               	goto	l2020
  9497  00F8E2  0A01               	xorlw	1	; case 17
  9498  00F8E4  B4D8               	btfsc	status,2,c
  9499  00F8E6  D7C5               	goto	l2021
  9500  00F8E8  0A03               	xorlw	3	; case 18
  9501  00F8EA  B4D8               	btfsc	status,2,c
  9502  00F8EC  D7C4               	goto	l2022
  9503  00F8EE  0A01               	xorlw	1	; case 19
  9504  00F8F0  B4D8               	btfsc	status,2,c
  9505  00F8F2  D7C3               	goto	l2023
  9506  00F8F4  0A07               	xorlw	7	; case 20
  9507  00F8F6  B4D8               	btfsc	status,2,c
  9508  00F8F8  D7C2               	goto	l2024
  9509  00F8FA  0A01               	xorlw	1	; case 21
  9510  00F8FC  B4D8               	btfsc	status,2,c
  9511  00F8FE  D7C1               	goto	l2025
  9512  00F900  0A03               	xorlw	3	; case 22
  9513  00F902  B4D8               	btfsc	status,2,c
  9514  00F904  D7C0               	goto	l2026
  9515  00F906  0A01               	xorlw	1	; case 23
  9516  00F908  B4D8               	btfsc	status,2,c
  9517  00F90A  D7BF               	goto	l2027
  9518  00F90C  0A0F               	xorlw	15	; case 24
  9519  00F90E  B4D8               	btfsc	status,2,c
  9520  00F910  D7BE               	goto	l2028
  9521  00F912  0A01               	xorlw	1	; case 25
  9522  00F914  B4D8               	btfsc	status,2,c
  9523  00F916  D7BD               	goto	l2029
  9524  00F918  0A03               	xorlw	3	; case 26
  9525  00F91A  B4D8               	btfsc	status,2,c
  9526  00F91C  D7BC               	goto	l2030
  9527  00F91E  0A01               	xorlw	1	; case 27
  9528  00F920  B4D8               	btfsc	status,2,c
  9529  00F922  D7BB               	goto	l2031
  9530  00F924  0A07               	xorlw	7	; case 28
  9531  00F926  B4D8               	btfsc	status,2,c
  9532  00F928  D7BA               	goto	l2032
  9533  00F92A  0A01               	xorlw	1	; case 29
  9534  00F92C  B4D8               	btfsc	status,2,c
  9535  00F92E  D7B9               	goto	l2033
  9536  00F930  0A03               	xorlw	3	; case 30
  9537  00F932  B4D8               	btfsc	status,2,c
  9538  00F934  D7B8               	goto	l2034
  9539  00F936  0A01               	xorlw	1	; case 31
  9540  00F938  B4D8               	btfsc	status,2,c
  9541  00F93A  D7B7               	goto	l2035
  9542  00F93C  D7B8               	goto	l2036
  9543  00F93E                     l2037:
  9544                           
  9545                           ; BSR set to: 0
  9546                           ;fat16.c: 1279: };fat16.c: 1280: return 0X00;
  9547                           
  9548                           ; BSR set to: 0
  9549                           
  9550                           ; BSR set to: 0
  9551  00F93E  0E00               	movlw	0
  9552  00F940  0012               	return	
  9553  00F942                     __end_of__get_root:
  9554                           	opt stack 0
  9555                           tblptru	equ	0xFF8
  9556                           tblptrh	equ	0xFF7
  9557                           tblptrl	equ	0xFF6
  9558                           tablat	equ	0xFF5
  9559                           prodh	equ	0xFF4
  9560                           prodl	equ	0xFF3
  9561                           postinc0	equ	0xFEE
  9562                           wreg	equ	0xFE8
  9563                           postdec1	equ	0xFE5
  9564                           fsr1h	equ	0xFE2
  9565                           fsr1l	equ	0xFE1
  9566                           indf2	equ	0xFDF
  9567                           postinc2	equ	0xFDE
  9568                           fsr2h	equ	0xFDA
  9569                           fsr2l	equ	0xFD9
  9570                           status	equ	0xFD8
  9571                           
  9572 ;; *************** function __get_mbr *****************
  9573 ;; Defined at:
  9574 ;;		line 1037 in file "fat16.c"
  9575 ;; Parameters:    Size  Location     Type
  9576 ;;  idx             2    0[BANK0 ] unsigned int 
  9577 ;; Auto vars:     Size  Location     Type
  9578 ;;		None
  9579 ;; Return value:  Size  Location     Type
  9580 ;;                  1    wreg      unsigned char 
  9581 ;; Registers used:
  9582 ;;		wreg, status,2, status,0
  9583 ;; Tracked objects:
  9584 ;;		On entry : 0/0
  9585 ;;		On exit  : 0/0
  9586 ;;		Unchanged: 0/0
  9587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9588 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9590 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9591 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9592 ;;Total ram usage:        4 bytes
  9593 ;; Hardware stack levels used:    1
  9594 ;; Hardware stack levels required when called:   10
  9595 ;; This function calls:
  9596 ;;		Nothing
  9597 ;; This function is called by:
  9598 ;;		_fat_get_format_status
  9599 ;;		_fat_format
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           
  9603                           	psect	text19
  9604  012688                     __ptext19:
  9605                           	opt stack 0
  9606  012688                     __get_mbr:
  9607                           	opt stack 17
  9608                           
  9609                           ;fat16.c: 1039: switch (idx)
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;incstack = 0
  9613  012688  D026               	goto	l1918
  9614  01268A                     
  9615                           ;fat16.c: 1042: return 0x80;
  9616  01268A  0E80               	movlw	128
  9617  01268C  0012               	return	
  9618  01268E                     
  9619                           ;fat16.c: 1044: return 0;
  9620  01268E  0E00               	movlw	0
  9621  012690  0012               	return	
  9622  012692                     
  9623                           ;fat16.c: 1046: return 2;
  9624  012692  0E02               	movlw	2
  9625  012694  0012               	return	
  9626  012696                     
  9627                           ;fat16.c: 1048: return 0;
  9628  012696  0E00               	movlw	0
  9629  012698  0012               	return	
  9630  01269A                     
  9631                           ;fat16.c: 1050: return 0x04;
  9632  01269A  0E04               	movlw	4
  9633  01269C  0012               	return	
  9634  01269E                     
  9635                           ;fat16.c: 1052: return 2;
  9636  01269E  0E02               	movlw	2
  9637  0126A0  0012               	return	
  9638  0126A2                     
  9639                           ;fat16.c: 1054: return 3;
  9640  0126A2  0E03               	movlw	3
  9641  0126A4  0012               	return	
  9642  0126A6                     
  9643                           ;fat16.c: 1056: return 8;
  9644  0126A6  0E08               	movlw	8
  9645  0126A8  0012               	return	
  9646  0126AA                     
  9647                           ;fat16.c: 1058: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9648  0126AA  0E01               	movlw	1
  9649  0126AC  0012               	return	
  9650  0126AE                     
  9651                           ;fat16.c: 1060: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9652  0126AE  0E00               	movlw	0
  9653  0126B0  0012               	return	
  9654  0126B2                     
  9655                           ;fat16.c: 1062: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9656  0126B2  0E00               	movlw	0
  9657  0126B4  0012               	return	
  9658  0126B6                     
  9659                           ;fat16.c: 1064: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9660  0126B6  0E00               	movlw	0
  9661  0126B8  0012               	return	
  9662  0126BA                     
  9663                           ;fat16.c: 1066: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9664  0126BA  0EFF               	movlw	255
  9665  0126BC  0012               	return	
  9666  0126BE                     
  9667                           ;fat16.c: 1068: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9668  0126BE  0E1F               	movlw	31
  9669  0126C0  0012               	return	
  9670  0126C2                     
  9671                           ;fat16.c: 1070: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9672  0126C2  0E00               	movlw	0
  9673  0126C4  0012               	return	
  9674  0126C6                     
  9675                           ;fat16.c: 1072: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9676  0126C6  0E00               	movlw	0
  9677  0126C8  0012               	return	
  9678  0126CA                     
  9679                           ;fat16.c: 1074: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9680  0126CA  0E55               	movlw	85
  9681  0126CC  0012               	return	
  9682  0126CE                     
  9683                           ;fat16.c: 1076: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9684  0126CE  0EAA               	movlw	170
  9685  0126D0  0012               	return	
  9686  0126D2                     
  9687                           ;fat16.c: 1078: return 0X00;
  9688  0126D2  0E00               	movlw	0
  9689                           
  9690                           ;fat16.c: 1079: }
  9691  0126D4  0012               	return	
  9692  0126D6                     l1918:
  9693  0126D6  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9694  0126DA  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9695                           
  9696                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9697                           ; Switch size 1, requested type "space"
  9698                           ; Number of cases is 1, Range of values is 1 to 1
  9699                           ; switch strategies available:
  9700                           ; Name         Instructions Cycles
  9701                           ; simple_byte            4     3 (average)
  9702                           ;	Chosen strategy is simple_byte
  9703  0126DE  0100               	movlb	0	; () banked
  9704  0126E0  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9705  0126E2  0A01               	xorlw	1	; case 1
  9706  0126E4  A4D8               	btfss	status,2,c
  9707  0126E6  D7F5               	goto	l1938
  9708                           
  9709                           ; BSR set to: 0
  9710                           ; Switch size 1, requested type "space"
  9711                           ; Number of cases is 18, Range of values is 190 to 255
  9712                           ; switch strategies available:
  9713                           ; Name         Instructions Cycles
  9714                           ; simple_byte           55    28 (average)
  9715                           ;	Chosen strategy is simple_byte
  9716  0126E8  5162               	movf	??__get_mbr& (0+255),w,b
  9717  0126EA  0ABE               	xorlw	190	; case 190
  9718  0126EC  B4D8               	btfsc	status,2,c
  9719  0126EE  D7CD               	goto	l1919
  9720  0126F0  0A01               	xorlw	1	; case 191
  9721  0126F2  B4D8               	btfsc	status,2,c
  9722  0126F4  D7CC               	goto	l1921
  9723  0126F6  0A7F               	xorlw	127	; case 192
  9724  0126F8  B4D8               	btfsc	status,2,c
  9725  0126FA  D7CB               	goto	l1922
  9726  0126FC  0A01               	xorlw	1	; case 193
  9727  0126FE  B4D8               	btfsc	status,2,c
  9728  012700  D7CA               	goto	l1923
  9729  012702  0A03               	xorlw	3	; case 194
  9730  012704  B4D8               	btfsc	status,2,c
  9731  012706  D7C9               	goto	l1924
  9732  012708  0A01               	xorlw	1	; case 195
  9733  01270A  B4D8               	btfsc	status,2,c
  9734  01270C  D7C8               	goto	l1925
  9735  01270E  0A07               	xorlw	7	; case 196
  9736  012710  B4D8               	btfsc	status,2,c
  9737  012712  D7C7               	goto	l1926
  9738  012714  0A01               	xorlw	1	; case 197
  9739  012716  B4D8               	btfsc	status,2,c
  9740  012718  D7C6               	goto	l1927
  9741  01271A  0A03               	xorlw	3	; case 198
  9742  01271C  B4D8               	btfsc	status,2,c
  9743  01271E  D7C5               	goto	l1928
  9744  012720  0A01               	xorlw	1	; case 199
  9745  012722  B4D8               	btfsc	status,2,c
  9746  012724  D7C4               	goto	l1929
  9747  012726  0A0F               	xorlw	15	; case 200
  9748  012728  B4D8               	btfsc	status,2,c
  9749  01272A  D7C3               	goto	l1930
  9750  01272C  0A01               	xorlw	1	; case 201
  9751  01272E  B4D8               	btfsc	status,2,c
  9752  012730  D7C2               	goto	l1931
  9753  012732  0A03               	xorlw	3	; case 202
  9754  012734  B4D8               	btfsc	status,2,c
  9755  012736  D7C1               	goto	l1932
  9756  012738  0A01               	xorlw	1	; case 203
  9757  01273A  B4D8               	btfsc	status,2,c
  9758  01273C  D7C0               	goto	l1933
  9759  01273E  0A07               	xorlw	7	; case 204
  9760  012740  B4D8               	btfsc	status,2,c
  9761  012742  D7BF               	goto	l1934
  9762  012744  0A01               	xorlw	1	; case 205
  9763  012746  B4D8               	btfsc	status,2,c
  9764  012748  D7BE               	goto	l1935
  9765  01274A  0A33               	xorlw	51	; case 254
  9766  01274C  B4D8               	btfsc	status,2,c
  9767  01274E  D7BD               	goto	l1936
  9768  012750  0A01               	xorlw	1	; case 255
  9769  012752  B4D8               	btfsc	status,2,c
  9770  012754  D7BC               	goto	l1937
  9771  012756  D7BD               	goto	l1938
  9772  012758                     __end_of__get_mbr:
  9773                           	opt stack 0
  9774                           tblptru	equ	0xFF8
  9775                           tblptrh	equ	0xFF7
  9776                           tblptrl	equ	0xFF6
  9777                           tablat	equ	0xFF5
  9778                           prodh	equ	0xFF4
  9779                           prodl	equ	0xFF3
  9780                           postinc0	equ	0xFEE
  9781                           wreg	equ	0xFE8
  9782                           postdec1	equ	0xFE5
  9783                           fsr1h	equ	0xFE2
  9784                           fsr1l	equ	0xFE1
  9785                           indf2	equ	0xFDF
  9786                           postinc2	equ	0xFDE
  9787                           fsr2h	equ	0xFDA
  9788                           fsr2l	equ	0xFD9
  9789                           status	equ	0xFD8
  9790                           
  9791 ;; *************** function __get_fbr *****************
  9792 ;; Defined at:
  9793 ;;		line 1082 in file "fat16.c"
  9794 ;; Parameters:    Size  Location     Type
  9795 ;;  idx             2    0[BANK0 ] unsigned int 
  9796 ;; Auto vars:     Size  Location     Type
  9797 ;;		None
  9798 ;; Return value:  Size  Location     Type
  9799 ;;                  1    wreg      unsigned char 
  9800 ;; Registers used:
  9801 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9802 ;; Tracked objects:
  9803 ;;		On entry : 0/0
  9804 ;;		On exit  : 0/0
  9805 ;;		Unchanged: 0/0
  9806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9807 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9809 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9810 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9811 ;;Total ram usage:        4 bytes
  9812 ;; Hardware stack levels used:    1
  9813 ;; Hardware stack levels required when called:   10
  9814 ;; This function calls:
  9815 ;;		Nothing
  9816 ;; This function is called by:
  9817 ;;		_fat_get_format_status
  9818 ;;		_fat_format
  9819 ;; This function uses a non-reentrant model
  9820 ;;
  9821                           
  9822                           	psect	text20
  9823  00E12E                     __ptext20:
  9824                           	opt stack 0
  9825  00E12E                     __get_fbr:
  9826                           	opt stack 17
  9827                           
  9828                           ;fat16.c: 1084: switch (idx)
  9829                           
  9830                           ;incstack = 0
  9831  00E12E  D098               	goto	l1942
  9832  00E130                     
  9833                           ;fat16.c: 1087: return 0xEB;
  9834  00E130  0EEB               	movlw	235
  9835  00E132  0012               	return	
  9836  00E134                     
  9837                           ;fat16.c: 1089: return 0x3C;
  9838  00E134  0E3C               	movlw	60
  9839  00E136  0012               	return	
  9840  00E138                     
  9841                           ;fat16.c: 1091: return 0x90;
  9842  00E138  0E90               	movlw	144
  9843  00E13A  0012               	return	
  9844  00E13C                     
  9845                           ;fat16.c: 1093: return "MSDOS5.0"[0];
  9846  00E13C  0E0B               	movlw	low STR_7
  9847  00E13E  6EF6               	movwf	tblptrl,c
  9848  00E140                     	if	1	;There is more than 1 active tblptr byte
  9849  00E140  0EA3               	movlw	high STR_7
  9850  00E142  6EF7               	movwf	tblptrh,c
  9851  00E144                     	endif
  9852  00E144                     	if	1	;There are 3 active tblptr bytes
  9853  00E144  0E00               	movlw	low (STR_7 shr (0+16))
  9854  00E146  6EF8               	movwf	tblptru,c
  9855  00E148                     	endif
  9856  00E148  0008               	tblrd		*
  9857  00E14A  50F5               	movf	tablat,w,c
  9858  00E14C  0012               	return	
  9859  00E14E                     
  9860                           ;fat16.c: 1095: return "MSDOS5.0"[1];
  9861  00E14E  0E0C               	movlw	low (STR_7+1)
  9862  00E150  6EF6               	movwf	tblptrl,c
  9863  00E152  0EA3               	movlw	high (STR_7+1)
  9864  00E154  6EF7               	movwf	tblptrh,c
  9865  00E156                     	if	0	;tblptru may be non-zero
  9866  00E156                     	endif
  9867  00E156                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9868  00E156  0E00               	movlw	low (__mediumconst shr (0+16))
  9869  00E158  6EF8               	movwf	tblptru,c
  9870  00E15A                     	endif
  9871  00E15A  0008               	tblrd		*
  9872  00E15C  50F5               	movf	tablat,w,c
  9873  00E15E  0012               	return	
  9874  00E160                     
  9875                           ;fat16.c: 1097: return "MSDOS5.0"[2];
  9876  00E160  0E0D               	movlw	low (STR_7+2)
  9877  00E162  6EF6               	movwf	tblptrl,c
  9878  00E164  0EA3               	movlw	high (STR_7+2)
  9879  00E166  6EF7               	movwf	tblptrh,c
  9880  00E168                     	if	0	;tblptru may be non-zero
  9881  00E168                     	endif
  9882  00E168                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9883  00E168  0E00               	movlw	low (__mediumconst shr (0+16))
  9884  00E16A  6EF8               	movwf	tblptru,c
  9885  00E16C                     	endif
  9886  00E16C  0008               	tblrd		*
  9887  00E16E  50F5               	movf	tablat,w,c
  9888  00E170  0012               	return	
  9889  00E172                     
  9890                           ;fat16.c: 1099: return "MSDOS5.0"[3];
  9891  00E172  0E0E               	movlw	low (STR_7+3)
  9892  00E174  6EF6               	movwf	tblptrl,c
  9893  00E176  0EA3               	movlw	high (STR_7+3)
  9894  00E178  6EF7               	movwf	tblptrh,c
  9895  00E17A                     	if	0	;tblptru may be non-zero
  9896  00E17A                     	endif
  9897  00E17A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9898  00E17A  0E00               	movlw	low (__mediumconst shr (0+16))
  9899  00E17C  6EF8               	movwf	tblptru,c
  9900  00E17E                     	endif
  9901  00E17E  0008               	tblrd		*
  9902  00E180  50F5               	movf	tablat,w,c
  9903  00E182  0012               	return	
  9904  00E184                     
  9905                           ;fat16.c: 1101: return "MSDOS5.0"[4];
  9906  00E184  0E0F               	movlw	low (STR_7+4)
  9907  00E186  6EF6               	movwf	tblptrl,c
  9908  00E188  0EA3               	movlw	high (STR_7+4)
  9909  00E18A  6EF7               	movwf	tblptrh,c
  9910  00E18C                     	if	0	;tblptru may be non-zero
  9911  00E18C                     	endif
  9912  00E18C                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9913  00E18C  0E00               	movlw	low (__mediumconst shr (0+16))
  9914  00E18E  6EF8               	movwf	tblptru,c
  9915  00E190                     	endif
  9916  00E190  0008               	tblrd		*
  9917  00E192  50F5               	movf	tablat,w,c
  9918  00E194  0012               	return	
  9919  00E196                     
  9920                           ;fat16.c: 1103: return "MSDOS5.0"[5];
  9921  00E196  0E10               	movlw	low (STR_7+5)
  9922  00E198  6EF6               	movwf	tblptrl,c
  9923  00E19A  0EA3               	movlw	high (STR_7+5)
  9924  00E19C  6EF7               	movwf	tblptrh,c
  9925  00E19E                     	if	0	;tblptru may be non-zero
  9926  00E19E                     	endif
  9927  00E19E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9928  00E19E  0E00               	movlw	low (__mediumconst shr (0+16))
  9929  00E1A0  6EF8               	movwf	tblptru,c
  9930  00E1A2                     	endif
  9931  00E1A2  0008               	tblrd		*
  9932  00E1A4  50F5               	movf	tablat,w,c
  9933  00E1A6  0012               	return	
  9934  00E1A8                     
  9935                           ;fat16.c: 1105: return "MSDOS5.0"[6];
  9936  00E1A8  0E11               	movlw	low (STR_7+6)
  9937  00E1AA  6EF6               	movwf	tblptrl,c
  9938  00E1AC  0EA3               	movlw	high (STR_7+6)
  9939  00E1AE  6EF7               	movwf	tblptrh,c
  9940  00E1B0                     	if	0	;tblptru may be non-zero
  9941  00E1B0                     	endif
  9942  00E1B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9943  00E1B0  0E00               	movlw	low (__mediumconst shr (0+16))
  9944  00E1B2  6EF8               	movwf	tblptru,c
  9945  00E1B4                     	endif
  9946  00E1B4  0008               	tblrd		*
  9947  00E1B6  50F5               	movf	tablat,w,c
  9948  00E1B8  0012               	return	
  9949  00E1BA                     
  9950                           ;fat16.c: 1107: return "MSDOS5.0"[7];
  9951  00E1BA  0E12               	movlw	low (STR_7+7)
  9952  00E1BC  6EF6               	movwf	tblptrl,c
  9953  00E1BE  0EA3               	movlw	high (STR_7+7)
  9954  00E1C0  6EF7               	movwf	tblptrh,c
  9955  00E1C2                     	if	0	;tblptru may be non-zero
  9956  00E1C2                     	endif
  9957  00E1C2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9958  00E1C2  0E00               	movlw	low (__mediumconst shr (0+16))
  9959  00E1C4  6EF8               	movwf	tblptru,c
  9960  00E1C6                     	endif
  9961  00E1C6  0008               	tblrd		*
  9962  00E1C8  50F5               	movf	tablat,w,c
  9963  00E1CA  0012               	return	
  9964  00E1CC                     
  9965                           ;fat16.c: 1109: return ((unsigned char)((((uint16_t)512))&0xFF));
  9966  00E1CC  0E00               	movlw	0
  9967  00E1CE  0012               	return	
  9968  00E1D0                     
  9969                           ;fat16.c: 1111: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9970  00E1D0  0E02               	movlw	2
  9971  00E1D2  0012               	return	
  9972  00E1D4                     
  9973                           ;fat16.c: 1113: return 1;
  9974  00E1D4  0E01               	movlw	1
  9975  00E1D6  0012               	return	
  9976  00E1D8                     
  9977                           ;fat16.c: 1115: return ((unsigned char)((((uint16_t)1))&0xFF));
  9978  00E1D8  0E01               	movlw	1
  9979  00E1DA  0012               	return	
  9980  00E1DC                     
  9981                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9982  00E1DC  0E00               	movlw	0
  9983  00E1DE  0012               	return	
  9984  00E1E0                     
  9985                           ;fat16.c: 1119: return 1;
  9986  00E1E0  0E01               	movlw	1
  9987  00E1E2  0012               	return	
  9988  00E1E4                     
  9989                           ;fat16.c: 1121: return ((unsigned char)((((uint16_t)64))&0xFF));
  9990  00E1E4  0E40               	movlw	64
  9991  00E1E6  0012               	return	
  9992  00E1E8                     
  9993                           ;fat16.c: 1123: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9994  00E1E8  0E00               	movlw	0
  9995  00E1EA  0012               	return	
  9996  00E1EC                     
  9997                           ;fat16.c: 1125: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9998  00E1EC  0EFF               	movlw	255
  9999  00E1EE  0012               	return	
 10000  00E1F0                     
 10001                           ;fat16.c: 1127: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 10002  00E1F0  0E1F               	movlw	31
 10003  00E1F2  0012               	return	
 10004  00E1F4                     
 10005                           ;fat16.c: 1129: return 0XF8;
 10006  00E1F4  0EF8               	movlw	248
 10007  00E1F6  0012               	return	
 10008  00E1F8                     
 10009                           ;fat16.c: 1131: return ((unsigned char)((((uint16_t)32))&0xFF));
 10010  00E1F8  0E20               	movlw	32
 10011  00E1FA  0012               	return	
 10012  00E1FC                     
 10013                           ;fat16.c: 1133: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 10014  00E1FC  0E00               	movlw	0
 10015  00E1FE  0012               	return	
 10016  00E200                     
 10017                           ;fat16.c: 1135: return ((unsigned char)((((uint16_t)63))&0xFF));
 10018  00E200  0E3F               	movlw	63
 10019  00E202  0012               	return	
 10020  00E204                     
 10021                           ;fat16.c: 1137: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 10022  00E204  0E00               	movlw	0
 10023  00E206  0012               	return	
 10024  00E208                     
 10025                           ;fat16.c: 1139: return ((unsigned char)((((uint16_t)16))&0xFF));
 10026  00E208  0E10               	movlw	16
 10027  00E20A  0012               	return	
 10028  00E20C                     
 10029                           ;fat16.c: 1141: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 10030  00E20C  0E00               	movlw	0
 10031  00E20E  0012               	return	
 10032  00E210                     
 10033                           ;fat16.c: 1143: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 10034  00E210  0E00               	movlw	0
 10035  00E212  0012               	return	
 10036  00E214                     
 10037                           ;fat16.c: 1145: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 10038  00E214  0E00               	movlw	0
 10039  00E216  0012               	return	
 10040  00E218                     
 10041                           ;fat16.c: 1147: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 10042  00E218  0E00               	movlw	0
 10043  00E21A  0012               	return	
 10044  00E21C                     
 10045                           ;fat16.c: 1149: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 10046  00E21C  0E00               	movlw	0
 10047  00E21E  0012               	return	
 10048  00E220                     
 10049                           ;fat16.c: 1151: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 10050  00E220  0E01               	movlw	1
 10051  00E222  0012               	return	
 10052  00E224                     
 10053                           ;fat16.c: 1153: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 10054  00E224  0E00               	movlw	0
 10055  00E226  0012               	return	
 10056  00E228                     
 10057                           ;fat16.c: 1155: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 10058  00E228  0E22               	movlw	34
 10059  00E22A  0012               	return	
 10060  00E22C                     
 10061                           ;fat16.c: 1157: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 10062  00E22C  0E00               	movlw	0
 10063  00E22E  0012               	return	
 10064  00E230                     
 10065                           ;fat16.c: 1161: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 10066                           
 10067                           ;fat16.c: 1160: case 0x2F:
 10068  00E230  0E00               	movlw	0
 10069  00E232  0012               	return	
 10070  00E234                     
 10071                           ;fat16.c: 1163: return 'F';
 10072  00E234  0E46               	movlw	70
 10073  00E236  0012               	return	
 10074  00E238                     
 10075                           ;fat16.c: 1165: return 'A';
 10076  00E238  0E41               	movlw	65
 10077  00E23A  0012               	return	
 10078  00E23C                     
 10079                           ;fat16.c: 1167: return 'T';
 10080  00E23C  0E54               	movlw	84
 10081  00E23E  0012               	return	
 10082  00E240                     
 10083                           ;fat16.c: 1169: return '1';
 10084  00E240  0E31               	movlw	49
 10085  00E242  0012               	return	
 10086  00E244                     
 10087                           ;fat16.c: 1171: return '6';
 10088  00E244  0E36               	movlw	54
 10089  00E246  0012               	return	
 10090  00E248                     
 10091                           ;fat16.c: 1173: return ' ';
 10092  00E248  0E20               	movlw	32
 10093  00E24A  0012               	return	
 10094  00E24C                     
 10095                           ;fat16.c: 1175: return ' ';
 10096  00E24C  0E20               	movlw	32
 10097  00E24E  0012               	return	
 10098  00E250                     
 10099                           ;fat16.c: 1177: return ' ';
 10100  00E250  0E20               	movlw	32
 10101  00E252  0012               	return	
 10102  00E254                     
 10103                           ;fat16.c: 1179: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 10104  00E254  0E55               	movlw	85
 10105  00E256  0012               	return	
 10106  00E258                     
 10107                           ;fat16.c: 1181: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 10108  00E258  0EAA               	movlw	170
 10109  00E25A  0012               	return	
 10110  00E25C                     
 10111                           ;fat16.c: 1183: return 0X00;
 10112  00E25C  0E00               	movlw	0
 10113                           
 10114                           ;fat16.c: 1184: }
 10115  00E25E  0012               	return	
 10116  00E260                     l1942:
 10117  00E260  C060  F062         	movff	__get_fbr@idx,??__get_fbr
 10118  00E264  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
 10119                           
 10120                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 10121                           ; Switch size 1, requested type "space"
 10122                           ; Number of cases is 2, Range of values is 0 to 1
 10123                           ; switch strategies available:
 10124                           ; Name         Instructions Cycles
 10125                           ; simple_byte            7     4 (average)
 10126                           ;	Chosen strategy is simple_byte
 10127  00E268  0100               	movlb	0	; () banked
 10128  00E26A  5163               	movf	(??__get_fbr+1)& (0+255),w,b
 10129  00E26C  0A00               	xorlw	0	; case 0
 10130  00E26E  B4D8               	btfsc	status,2,c
 10131  00E270  D004               	goto	l19441
 10132  00E272  0A01               	xorlw	1	; case 1
 10133  00E274  B4D8               	btfsc	status,2,c
 10134  00E276  D08D               	goto	l19443
 10135  00E278  D7F1               	goto	l1992
 10136  00E27A                     l19441:
 10137                           
 10138                           ; BSR set to: 0
 10139                           ; Switch size 1, requested type "space"
 10140                           ; Number of cases is 46, Range of values is 0 to 61
 10141                           ; switch strategies available:
 10142                           ; Name         Instructions Cycles
 10143                           ; simple_byte          139    70 (average)
 10144                           ;	Chosen strategy is simple_byte
 10145  00E27A  5162               	movf	??__get_fbr& (0+255),w,b
 10146  00E27C  0A00               	xorlw	0	; case 0
 10147  00E27E  B4D8               	btfsc	status,2,c
 10148  00E280  D757               	goto	l1943
 10149  00E282  0A01               	xorlw	1	; case 1
 10150  00E284  B4D8               	btfsc	status,2,c
 10151  00E286  D756               	goto	l1945
 10152  00E288  0A03               	xorlw	3	; case 2
 10153  00E28A  B4D8               	btfsc	status,2,c
 10154  00E28C  D755               	goto	l1946
 10155  00E28E  0A01               	xorlw	1	; case 3
 10156  00E290  B4D8               	btfsc	status,2,c
 10157  00E292  D754               	goto	l1947
 10158  00E294  0A07               	xorlw	7	; case 4
 10159  00E296  B4D8               	btfsc	status,2,c
 10160  00E298  D75A               	goto	l1948
 10161  00E29A  0A01               	xorlw	1	; case 5
 10162  00E29C  B4D8               	btfsc	status,2,c
 10163  00E29E  D760               	goto	l1949
 10164  00E2A0  0A03               	xorlw	3	; case 6
 10165  00E2A2  B4D8               	btfsc	status,2,c
 10166  00E2A4  D766               	goto	l1950
 10167  00E2A6  0A01               	xorlw	1	; case 7
 10168  00E2A8  B4D8               	btfsc	status,2,c
 10169  00E2AA  D76C               	goto	l1951
 10170  00E2AC  0A0F               	xorlw	15	; case 8
 10171  00E2AE  B4D8               	btfsc	status,2,c
 10172  00E2B0  D772               	goto	l1952
 10173  00E2B2  0A01               	xorlw	1	; case 9
 10174  00E2B4  B4D8               	btfsc	status,2,c
 10175  00E2B6  D778               	goto	l1953
 10176  00E2B8  0A03               	xorlw	3	; case 10
 10177  00E2BA  B4D8               	btfsc	status,2,c
 10178  00E2BC  D77E               	goto	l1954
 10179  00E2BE  0A01               	xorlw	1	; case 11
 10180  00E2C0  B4D8               	btfsc	status,2,c
 10181  00E2C2  D784               	goto	l1955
 10182  00E2C4  0A07               	xorlw	7	; case 12
 10183  00E2C6  B4D8               	btfsc	status,2,c
 10184  00E2C8  D783               	goto	l1956
 10185  00E2CA  0A01               	xorlw	1	; case 13
 10186  00E2CC  B4D8               	btfsc	status,2,c
 10187  00E2CE  D782               	goto	l1957
 10188  00E2D0  0A03               	xorlw	3	; case 14
 10189  00E2D2  B4D8               	btfsc	status,2,c
 10190  00E2D4  D781               	goto	l1958
 10191  00E2D6  0A01               	xorlw	1	; case 15
 10192  00E2D8  B4D8               	btfsc	status,2,c
 10193  00E2DA  D780               	goto	l1959
 10194  00E2DC  0A1F               	xorlw	31	; case 16
 10195  00E2DE  B4D8               	btfsc	status,2,c
 10196  00E2E0  D77F               	goto	l1960
 10197  00E2E2  0A01               	xorlw	1	; case 17
 10198  00E2E4  B4D8               	btfsc	status,2,c
 10199  00E2E6  D77E               	goto	l1961
 10200  00E2E8  0A03               	xorlw	3	; case 18
 10201  00E2EA  B4D8               	btfsc	status,2,c
 10202  00E2EC  D77D               	goto	l1962
 10203  00E2EE  0A01               	xorlw	1	; case 19
 10204  00E2F0  B4D8               	btfsc	status,2,c
 10205  00E2F2  D77C               	goto	l1963
 10206  00E2F4  0A07               	xorlw	7	; case 20
 10207  00E2F6  B4D8               	btfsc	status,2,c
 10208  00E2F8  D77B               	goto	l1964
 10209  00E2FA  0A01               	xorlw	1	; case 21
 10210  00E2FC  B4D8               	btfsc	status,2,c
 10211  00E2FE  D77A               	goto	l1965
 10212  00E300  0A03               	xorlw	3	; case 22
 10213  00E302  B4D8               	btfsc	status,2,c
 10214  00E304  D779               	goto	l1966
 10215  00E306  0A01               	xorlw	1	; case 23
 10216  00E308  B4D8               	btfsc	status,2,c
 10217  00E30A  D778               	goto	l1967
 10218  00E30C  0A0F               	xorlw	15	; case 24
 10219  00E30E  B4D8               	btfsc	status,2,c
 10220  00E310  D777               	goto	l1968
 10221  00E312  0A01               	xorlw	1	; case 25
 10222  00E314  B4D8               	btfsc	status,2,c
 10223  00E316  D776               	goto	l1969
 10224  00E318  0A03               	xorlw	3	; case 26
 10225  00E31A  B4D8               	btfsc	status,2,c
 10226  00E31C  D775               	goto	l1970
 10227  00E31E  0A01               	xorlw	1	; case 27
 10228  00E320  B4D8               	btfsc	status,2,c
 10229  00E322  D774               	goto	l1971
 10230  00E324  0A07               	xorlw	7	; case 28
 10231  00E326  B4D8               	btfsc	status,2,c
 10232  00E328  D773               	goto	l1972
 10233  00E32A  0A01               	xorlw	1	; case 29
 10234  00E32C  B4D8               	btfsc	status,2,c
 10235  00E32E  D772               	goto	l1973
 10236  00E330  0A03               	xorlw	3	; case 30
 10237  00E332  B4D8               	btfsc	status,2,c
 10238  00E334  D771               	goto	l1974
 10239  00E336  0A01               	xorlw	1	; case 31
 10240  00E338  B4D8               	btfsc	status,2,c
 10241  00E33A  D770               	goto	l1975
 10242  00E33C  0A37               	xorlw	55	; case 40
 10243  00E33E  B4D8               	btfsc	status,2,c
 10244  00E340  D76F               	goto	l1976
 10245  00E342  0A01               	xorlw	1	; case 41
 10246  00E344  B4D8               	btfsc	status,2,c
 10247  00E346  D76E               	goto	l1977
 10248  00E348  0A05               	xorlw	5	; case 44
 10249  00E34A  B4D8               	btfsc	status,2,c
 10250  00E34C  D76D               	goto	l1978
 10251  00E34E  0A01               	xorlw	1	; case 45
 10252  00E350  B4D8               	btfsc	status,2,c
 10253  00E352  D76C               	goto	l1979
 10254  00E354  0A03               	xorlw	3	; case 46
 10255  00E356  B4D8               	btfsc	status,2,c
 10256  00E358  D76B               	goto	l1980
 10257  00E35A  0A01               	xorlw	1	; case 47
 10258  00E35C  B4D8               	btfsc	status,2,c
 10259  00E35E  D768               	goto	l1980
 10260  00E360  0A19               	xorlw	25	; case 54
 10261  00E362  B4D8               	btfsc	status,2,c
 10262  00E364  D767               	goto	l1982
 10263  00E366  0A01               	xorlw	1	; case 55
 10264  00E368  B4D8               	btfsc	status,2,c
 10265  00E36A  D766               	goto	l1983
 10266  00E36C  0A0F               	xorlw	15	; case 56
 10267  00E36E  B4D8               	btfsc	status,2,c
 10268  00E370  D765               	goto	l1984
 10269  00E372  0A01               	xorlw	1	; case 57
 10270  00E374  B4D8               	btfsc	status,2,c
 10271  00E376  D764               	goto	l1985
 10272  00E378  0A03               	xorlw	3	; case 58
 10273  00E37A  B4D8               	btfsc	status,2,c
 10274  00E37C  D763               	goto	l1986
 10275  00E37E  0A01               	xorlw	1	; case 59
 10276  00E380  B4D8               	btfsc	status,2,c
 10277  00E382  D762               	goto	l1987
 10278  00E384  0A07               	xorlw	7	; case 60
 10279  00E386  B4D8               	btfsc	status,2,c
 10280  00E388  D761               	goto	l1988
 10281  00E38A  0A01               	xorlw	1	; case 61
 10282  00E38C  B4D8               	btfsc	status,2,c
 10283  00E38E  D760               	goto	l1989
 10284  00E390  D765               	goto	l1992
 10285  00E392                     l19443:
 10286                           
 10287                           ; BSR set to: 0
 10288                           ; Switch size 1, requested type "space"
 10289                           ; Number of cases is 2, Range of values is 254 to 255
 10290                           ; switch strategies available:
 10291                           ; Name         Instructions Cycles
 10292                           ; simple_byte            7     4 (average)
 10293                           ;	Chosen strategy is simple_byte
 10294  00E392  5162               	movf	??__get_fbr& (0+255),w,b
 10295  00E394  0AFE               	xorlw	254	; case 254
 10296  00E396  B4D8               	btfsc	status,2,c
 10297  00E398  D75D               	goto	l1990
 10298  00E39A  0A01               	xorlw	1	; case 255
 10299  00E39C  B4D8               	btfsc	status,2,c
 10300  00E39E  D75C               	goto	l1991
 10301  00E3A0  D75D               	goto	l1992
 10302  00E3A2                     __end_of__get_fbr:
 10303                           	opt stack 0
 10304                           tblptru	equ	0xFF8
 10305                           tblptrh	equ	0xFF7
 10306                           tblptrl	equ	0xFF6
 10307                           tablat	equ	0xFF5
 10308                           prodh	equ	0xFF4
 10309                           prodl	equ	0xFF3
 10310                           postinc0	equ	0xFEE
 10311                           wreg	equ	0xFE8
 10312                           postdec1	equ	0xFE5
 10313                           fsr1h	equ	0xFE2
 10314                           fsr1l	equ	0xFE1
 10315                           indf2	equ	0xFDF
 10316                           postinc2	equ	0xFDE
 10317                           fsr2h	equ	0xFDA
 10318                           fsr2l	equ	0xFD9
 10319                           status	equ	0xFD8
 10320                           
 10321 ;; *************** function __get_fat *****************
 10322 ;; Defined at:
 10323 ;;		line 1187 in file "fat16.c"
 10324 ;; Parameters:    Size  Location     Type
 10325 ;;  idx             2    0[BANK0 ] unsigned int 
 10326 ;; Auto vars:     Size  Location     Type
 10327 ;;		None
 10328 ;; Return value:  Size  Location     Type
 10329 ;;                  1    wreg      unsigned char 
 10330 ;; Registers used:
 10331 ;;		wreg, status,2, status,0
 10332 ;; Tracked objects:
 10333 ;;		On entry : 0/0
 10334 ;;		On exit  : 0/0
 10335 ;;		Unchanged: 0/0
 10336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10337 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10338 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10339 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10340 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10341 ;;Total ram usage:        4 bytes
 10342 ;; Hardware stack levels used:    1
 10343 ;; Hardware stack levels required when called:   10
 10344 ;; This function calls:
 10345 ;;		Nothing
 10346 ;; This function is called by:
 10347 ;;		_fat_format
 10348 ;; This function uses a non-reentrant model
 10349 ;;
 10350                           
 10351                           	psect	text21
 10352  0147F6                     __ptext21:
 10353                           	opt stack 0
 10354  0147F6                     __get_fat:
 10355                           	opt stack 17
 10356                           
 10357                           ;fat16.c: 1189: switch (idx)
 10358                           
 10359                           ;incstack = 0
 10360  0147F6  D00E               	goto	l1996
 10361  0147F8                     
 10362                           ;fat16.c: 1193: return 0xF8;
 10363  0147F8  0EF8               	movlw	248
 10364  0147FA  0012               	return	
 10365  0147FC                     
 10366                           ;fat16.c: 1195: return 0xFF;
 10367  0147FC  0EFF               	movlw	255
 10368  0147FE  0012               	return	
 10369  014800                     
 10370                           ;fat16.c: 1197: return 0xFF;
 10371  014800  0EFF               	movlw	255
 10372  014802  0012               	return	
 10373  014804                     
 10374                           ;fat16.c: 1199: return 0xFF;
 10375  014804  0EFF               	movlw	255
 10376  014806  0012               	return	
 10377  014808                     
 10378                           ;fat16.c: 1202: return 0xFF;
 10379  014808  0EFF               	movlw	255
 10380  01480A  0012               	return	
 10381  01480C                     
 10382                           ;fat16.c: 1204: return 0xFF;
 10383  01480C  0EFF               	movlw	255
 10384  01480E  0012               	return	
 10385  014810                     
 10386                           ;fat16.c: 1206: return 0X00;
 10387  014810  0E00               	movlw	0
 10388                           
 10389                           ;fat16.c: 1207: }
 10390  014812  0012               	return	
 10391  014814                     l1996:
 10392  014814  C060  F062         	movff	__get_fat@idx,??__get_fat
 10393  014818  C061  F063         	movff	__get_fat@idx+1,??__get_fat+1
 10394                           
 10395                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10396                           ; Switch size 1, requested type "space"
 10397                           ; Number of cases is 1, Range of values is 0 to 0
 10398                           ; switch strategies available:
 10399                           ; Name         Instructions Cycles
 10400                           ; simple_byte            4     3 (average)
 10401                           ;	Chosen strategy is simple_byte
 10402  01481C  0100               	movlb	0	; () banked
 10403  01481E  5163               	movf	(??__get_fat+1)& (0+255),w,b
 10404  014820  0A00               	xorlw	0	; case 0
 10405  014822  A4D8               	btfss	status,2,c
 10406  014824  D7F5               	goto	l2004
 10407                           
 10408                           ; BSR set to: 0
 10409                           ; Switch size 1, requested type "space"
 10410                           ; Number of cases is 6, Range of values is 0 to 5
 10411                           ; switch strategies available:
 10412                           ; Name         Instructions Cycles
 10413                           ; simple_byte           19    10 (average)
 10414                           ;	Chosen strategy is simple_byte
 10415  014826  5162               	movf	??__get_fat& (0+255),w,b
 10416  014828  0A00               	xorlw	0	; case 0
 10417  01482A  B4D8               	btfsc	status,2,c
 10418  01482C  D7E5               	goto	l1997
 10419  01482E  0A01               	xorlw	1	; case 1
 10420  014830  B4D8               	btfsc	status,2,c
 10421  014832  D7E4               	goto	l1999
 10422  014834  0A03               	xorlw	3	; case 2
 10423  014836  B4D8               	btfsc	status,2,c
 10424  014838  D7E3               	goto	l2000
 10425  01483A  0A01               	xorlw	1	; case 3
 10426  01483C  B4D8               	btfsc	status,2,c
 10427  01483E  D7E2               	goto	l2001
 10428  014840  0A07               	xorlw	7	; case 4
 10429  014842  B4D8               	btfsc	status,2,c
 10430  014844  D7E1               	goto	l2002
 10431  014846  0A01               	xorlw	1	; case 5
 10432  014848  B4D8               	btfsc	status,2,c
 10433  01484A  D7E0               	goto	l2003
 10434  01484C  D7E1               	goto	l2004
 10435  01484E                     __end_of__get_fat:
 10436                           	opt stack 0
 10437                           tblptru	equ	0xFF8
 10438                           tblptrh	equ	0xFF7
 10439                           tblptrl	equ	0xFF6
 10440                           tablat	equ	0xFF5
 10441                           prodh	equ	0xFF4
 10442                           prodl	equ	0xFF3
 10443                           postinc0	equ	0xFEE
 10444                           wreg	equ	0xFE8
 10445                           postdec1	equ	0xFE5
 10446                           fsr1h	equ	0xFE2
 10447                           fsr1l	equ	0xFE1
 10448                           indf2	equ	0xFDF
 10449                           postinc2	equ	0xFDE
 10450                           fsr2h	equ	0xFDA
 10451                           fsr2l	equ	0xFD9
 10452                           status	equ	0xFD8
 10453                           
 10454 ;; *************** function __get_data *****************
 10455 ;; Defined at:
 10456 ;;		line 1283 in file "fat16.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;  idx             2    0[BANK0 ] unsigned int 
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      unsigned char 
 10463 ;; Registers used:
 10464 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10470 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10473 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10474 ;;Total ram usage:        2 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; Hardware stack levels required when called:   10
 10477 ;; This function calls:
 10478 ;;		Nothing
 10479 ;; This function is called by:
 10480 ;;		_fat_format
 10481 ;; This function uses a non-reentrant model
 10482 ;;
 10483                           
 10484                           	psect	text22
 10485  0155E8                     __ptext22:
 10486                           	opt stack 0
 10487  0155E8                     __get_data:
 10488                           	opt stack 17
 10489                           
 10490                           ;fat16.c: 1285: if(idx < 12)
 10491                           
 10492                           ;incstack = 0
 10493  0155E8  0100               	movlb	0	; () banked
 10494  0155EA  5161               	movf	(__get_data@idx+1)& (0+255),w,b
 10495  0155EC  E110               	bnz	l15009
 10496  0155EE  0E0C               	movlw	12
 10497  0155F0  5D60               	subwf	__get_data@idx& (0+255),w,b
 10498  0155F2  B0D8               	btfsc	status,0,c
 10499  0155F4  D00C               	goto	l2040
 10500                           
 10501                           ; BSR set to: 0
 10502                           ;fat16.c: 1286: {;fat16.c: 1287: return "hello world!"[idx];
 10503  0155F6  0EE9               	movlw	low STR_18
 10504  0155F8  2560               	addwf	__get_data@idx& (0+255),w,b
 10505  0155FA  6EF6               	movwf	tblptrl,c
 10506  0155FC  0EA2               	movlw	high STR_18
 10507  0155FE  2161               	addwfc	(__get_data@idx+1)& (0+255),w,b
 10508  015600  6EF7               	movwf	tblptrh,c
 10509  015602                     	if	1	;There are 3 active tblptr bytes
 10510  015602  6AF8               	clrf	tblptru,c
 10511  015604  0E00               	movlw	low (__mediumconst shr (0+16))
 10512  015606  22F8               	addwfc	tblptru,f,c
 10513  015608                     	endif
 10514  015608  0008               	tblrd		*
 10515  01560A  50F5               	movf	tablat,w,c
 10516                           
 10517                           ; BSR set to: 0
 10518  01560C  0012               	return	
 10519  01560E                     l2040:
 10520  01560E                     l15009:
 10521                           
 10522                           ; BSR set to: 0
 10523                           ;fat16.c: 1288: };fat16.c: 1289: return 0X00;
 10524  01560E  0E00               	movlw	0
 10525  015610  0012               	return	
 10526  015612                     __end_of__get_data:
 10527                           	opt stack 0
 10528                           tblptru	equ	0xFF8
 10529                           tblptrh	equ	0xFF7
 10530                           tblptrl	equ	0xFF6
 10531                           tablat	equ	0xFF5
 10532                           prodh	equ	0xFF4
 10533                           prodl	equ	0xFF3
 10534                           postinc0	equ	0xFEE
 10535                           wreg	equ	0xFE8
 10536                           postdec1	equ	0xFE5
 10537                           fsr1h	equ	0xFE2
 10538                           fsr1l	equ	0xFE1
 10539                           indf2	equ	0xFDF
 10540                           postinc2	equ	0xFDE
 10541                           fsr2h	equ	0xFDA
 10542                           fsr2l	equ	0xFD9
 10543                           status	equ	0xFD8
 10544                           
 10545 ;; *************** function _encoder_init *****************
 10546 ;; Defined at:
 10547 ;;		line 92 in file "encoder.c"
 10548 ;; Parameters:    Size  Location     Type
 10549 ;;		None
 10550 ;; Auto vars:     Size  Location     Type
 10551 ;;		None
 10552 ;; Return value:  Size  Location     Type
 10553 ;;                  1    wreg      void 
 10554 ;; Registers used:
 10555 ;;		wreg, status,2, status,0
 10556 ;; Tracked objects:
 10557 ;;		On entry : 0/0
 10558 ;;		On exit  : 0/0
 10559 ;;		Unchanged: 0/0
 10560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10565 ;;Total ram usage:        0 bytes
 10566 ;; Hardware stack levels used:    1
 10567 ;; Hardware stack levels required when called:   10
 10568 ;; This function calls:
 10569 ;;		Nothing
 10570 ;; This function is called by:
 10571 ;;		_system_init
 10572 ;; This function uses a non-reentrant model
 10573 ;;
 10574                           
 10575                           	psect	text23
 10576  01577C                     __ptext23:
 10577                           	opt stack 0
 10578  01577C                     _encoder_init:
 10579                           	opt stack 19
 10580                           
 10581                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
 10582                           
 10583                           ; BSR set to: 0
 10584                           ;incstack = 0
 10585  01577C  5084               	movf	3972,w,c	;volatile
 10586  01577E  0B07               	andlw	7
 10587  015780  0101               	movlb	1	; () banked
 10588  015782  6F54               	movwf	_enc1& (0+255),b
 10589                           
 10590                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
 10591  015784  5080               	movf	3968,w,c	;volatile
 10592  015786  0B07               	andlw	7
 10593  015788  6F53               	movwf	_enc2& (0+255),b
 10594                           
 10595                           ; BSR set to: 1
 10596                           ;encoder.c: 96: os.encoder1Count = 0;
 10597  01578A  0E00               	movlw	0
 10598  01578C  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 10599                           
 10600                           ; BSR set to: 1
 10601                           ;encoder.c: 97: os.encoder2Count = 0;
 10602  01578E  0E00               	movlw	0
 10603  015790  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 10604                           
 10605                           ; BSR set to: 1
 10606                           ;encoder.c: 98: os.button1 = 0;
 10607  015792  0E00               	movlw	0
 10608  015794  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 10609                           
 10610                           ; BSR set to: 1
 10611                           ;encoder.c: 99: os.button2 = 0;
 10612  015796  0E00               	movlw	0
 10613  015798  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 10614                           
 10615                           ; BSR set to: 1
 10616                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 10617  01579A  0E01               	movlw	1
 10618  01579C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 10619                           
 10620                           ; BSR set to: 1
 10621  01579E  0012               	return		;funcret
 10622  0157A0                     __end_of_encoder_init:
 10623                           	opt stack 0
 10624                           tblptru	equ	0xFF8
 10625                           tblptrh	equ	0xFF7
 10626                           tblptrl	equ	0xFF6
 10627                           tablat	equ	0xFF5
 10628                           prodh	equ	0xFF4
 10629                           prodl	equ	0xFF3
 10630                           postinc0	equ	0xFEE
 10631                           wreg	equ	0xFE8
 10632                           postdec1	equ	0xFE5
 10633                           fsr1h	equ	0xFE2
 10634                           fsr1l	equ	0xFE1
 10635                           indf2	equ	0xFDF
 10636                           postinc2	equ	0xFDE
 10637                           fsr2h	equ	0xFDA
 10638                           fsr2l	equ	0xFD9
 10639                           status	equ	0xFD8
 10640                           
 10641 ;; *************** function _display_update *****************
 10642 ;; Defined at:
 10643 ;;		line 618 in file "display.c"
 10644 ;; Parameters:    Size  Location     Type
 10645 ;;		None
 10646 ;; Auto vars:     Size  Location     Type
 10647 ;;  line            1   16[BANK0 ] unsigned char 
 10648 ;; Return value:  Size  Location     Type
 10649 ;;                  1    wreg      void 
 10650 ;; Registers used:
 10651 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10652 ;; Tracked objects:
 10653 ;;		On entry : 0/0
 10654 ;;		On exit  : 0/0
 10655 ;;		Unchanged: 0/0
 10656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10657 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10658 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10660 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10661 ;;Total ram usage:        1 bytes
 10662 ;; Hardware stack levels used:    1
 10663 ;; Hardware stack levels required when called:   14
 10664 ;; This function calls:
 10665 ;;		_i2c_display_cursor
 10666 ;;		_i2c_display_write_fixed
 10667 ;; This function is called by:
 10668 ;;		_main
 10669 ;;		_system_init
 10670 ;; This function uses a non-reentrant model
 10671 ;;
 10672                           
 10673                           	psect	text24
 10674  0152A0                     __ptext24:
 10675                           	opt stack 0
 10676  0152A0                     _display_update:
 10677                           	opt stack 15
 10678                           
 10679                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
 10680                           
 10681                           ; BSR set to: 1
 10682                           ;incstack = 0
 10683  0152A0  0E00               	movlw	0
 10684  0152A2  0100               	movlb	0	; () banked
 10685  0152A4  6F70               	movwf	display_update@line& (0+255),b
 10686  0152A6                     l16795:
 10687                           
 10688                           ; BSR set to: 0
 10689  0152A6  0E03               	movlw	3
 10690  0152A8  6570               	cpfsgt	display_update@line& (0+255),b
 10691  0152AA  D001               	goto	l1485
 10692  0152AC  0012               	return	
 10693  0152AE                     l1485:
 10694                           
 10695                           ; BSR set to: 0
 10696                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
 10697                           
 10698                           ; BSR set to: 0
 10699  0152AE  0E00               	movlw	0
 10700  0152B0  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
 10701  0152B2  5170               	movf	display_update@line& (0+255),w,b
 10702  0152B4  ECF4  F0AB         	call	_i2c_display_cursor
 10703                           
 10704                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
 10705  0152B8  0100               	movlb	0	; () banked
 10706  0152BA  5170               	movf	display_update@line& (0+255),w,b
 10707  0152BC  0D14               	mullw	20
 10708  0152BE  0E34               	movlw	low _display_content
 10709  0152C0  24F3               	addwf	prodl,w,c
 10710  0152C2  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10711  0152C4  0E02               	movlw	high _display_content
 10712  0152C6  20F4               	addwfc	prodh,w,c
 10713  0152C8  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10714  0152CA  0E14               	movlw	20
 10715  0152CC  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10716  0152CE  EC59  F0A5         	call	_i2c_display_write_fixed	;wreg free
 10717  0152D2  0100               	movlb	0	; () banked
 10718  0152D4  2B70               	incf	display_update@line& (0+255),f,b
 10719  0152D6  D7E7               	goto	l16795
 10720  0152D8                     __end_of_display_update:
 10721                           	opt stack 0
 10722                           tblptru	equ	0xFF8
 10723                           tblptrh	equ	0xFF7
 10724                           tblptrl	equ	0xFF6
 10725                           tablat	equ	0xFF5
 10726                           prodh	equ	0xFF4
 10727                           prodl	equ	0xFF3
 10728                           postinc0	equ	0xFEE
 10729                           wreg	equ	0xFE8
 10730                           postdec1	equ	0xFE5
 10731                           fsr1h	equ	0xFE2
 10732                           fsr1l	equ	0xFE1
 10733                           indf2	equ	0xFDF
 10734                           postinc2	equ	0xFDE
 10735                           fsr2h	equ	0xFDA
 10736                           fsr2l	equ	0xFD9
 10737                           status	equ	0xFD8
 10738                           
 10739 ;; *************** function _i2c_display_write_fixed *****************
 10740 ;; Defined at:
 10741 ;;		line 419 in file "i2c.c"
 10742 ;; Parameters:    Size  Location     Type
 10743 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10744 ;;		 -> display_content(80), 
 10745 ;;  length          1    7[BANK0 ] unsigned char 
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;  pos             1    8[BANK0 ] unsigned char 
 10748 ;; Return value:  Size  Location     Type
 10749 ;;                  1    wreg      void 
 10750 ;; Registers used:
 10751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10752 ;; Tracked objects:
 10753 ;;		On entry : 0/0
 10754 ;;		On exit  : 0/0
 10755 ;;		Unchanged: 0/0
 10756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10757 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10758 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10760 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10761 ;;Total ram usage:        4 bytes
 10762 ;; Hardware stack levels used:    1
 10763 ;; Hardware stack levels required when called:   11
 10764 ;; This function calls:
 10765 ;;		__i2c_send
 10766 ;;		__i2c_start
 10767 ;;		__i2c_stop
 10768 ;;		__i2c_wait_idle
 10769 ;; This function is called by:
 10770 ;;		_display_update
 10771 ;; This function uses a non-reentrant model
 10772 ;;
 10773                           
 10774                           	psect	text25
 10775  014AB2                     __ptext25:
 10776                           	opt stack 0
 10777  014AB2                     _i2c_display_write_fixed:
 10778                           	opt stack 17
 10779                           
 10780                           ;i2c.c: 421: uint8_t pos;;i2c.c: 426: _i2c_wait_idle();
 10781                           
 10782                           ; BSR set to: 0
 10783                           ;incstack = 0
 10784  014AB2  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 10785                           
 10786                           ;i2c.c: 427: _i2c_start();
 10787  014AB6  EC29  F0AD         	call	__i2c_start	;wreg free
 10788                           
 10789                           ;i2c.c: 428: _i2c_wait_idle();
 10790  014ABA  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 10791                           
 10792                           ;i2c.c: 429: _i2c_send(0b01111000);
 10793  014ABE  0E78               	movlw	120
 10794  014AC0  EC16  F0AD         	call	__i2c_send
 10795                           
 10796                           ;i2c.c: 430: _i2c_wait_idle();
 10797  014AC4  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 10798                           
 10799                           ;i2c.c: 431: _i2c_send(0b01000000);
 10800  014AC8  0E40               	movlw	64
 10801  014ACA  EC16  F0AD         	call	__i2c_send
 10802                           
 10803                           ;i2c.c: 432: _i2c_wait_idle();
 10804  014ACE  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 10805                           
 10806                           ;i2c.c: 435: for(pos=0; pos<length; ++pos)
 10807  014AD2  0E00               	movlw	0
 10808  014AD4  0100               	movlb	0	; () banked
 10809  014AD6  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10810  014AD8  D00F               	goto	l1243
 10811  014ADA                     
 10812                           ; BSR set to: 0
 10813                           ;i2c.c: 436: {;i2c.c: 437: _i2c_send(data[pos]);
 10814                           
 10815                           ; BSR set to: 0
 10816  014ADA  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10817  014ADC  0D01               	mullw	1
 10818  014ADE  50F3               	movf	prodl,w,c
 10819  014AE0  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10820  014AE2  6ED9               	movwf	fsr2l,c
 10821  014AE4  50F4               	movf	prodh,w,c
 10822  014AE6  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10823  014AE8  6EDA               	movwf	fsr2h,c
 10824  014AEA  50DF               	movf	indf2,w,c
 10825  014AEC  EC16  F0AD         	call	__i2c_send
 10826                           
 10827                           ;i2c.c: 438: _i2c_wait_idle();
 10828  014AF0  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 10829  014AF4  0100               	movlb	0	; () banked
 10830  014AF6  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10831  014AF8                     l1243:
 10832                           
 10833                           ; BSR set to: 0
 10834                           
 10835                           ; BSR set to: 0
 10836  014AF8  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10837  014AFA  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10838  014AFC  A0D8               	btfss	status,0,c
 10839  014AFE  D7ED               	goto	l1244
 10840                           
 10841                           ; BSR set to: 0
 10842                           ;i2c.c: 439: };i2c.c: 441: _i2c_stop();
 10843                           
 10844                           ; BSR set to: 0
 10845  014B00  EC25  F0AD         	call	__i2c_stop	;wreg free
 10846  014B04  0012               	return		;funcret
 10847  014B06                     __end_of_i2c_display_write_fixed:
 10848                           	opt stack 0
 10849                           tblptru	equ	0xFF8
 10850                           tblptrh	equ	0xFF7
 10851                           tblptrl	equ	0xFF6
 10852                           tablat	equ	0xFF5
 10853                           prodh	equ	0xFF4
 10854                           prodl	equ	0xFF3
 10855                           postinc0	equ	0xFEE
 10856                           wreg	equ	0xFE8
 10857                           postdec1	equ	0xFE5
 10858                           fsr1h	equ	0xFE2
 10859                           fsr1l	equ	0xFE1
 10860                           indf2	equ	0xFDF
 10861                           postinc2	equ	0xFDE
 10862                           fsr2h	equ	0xFDA
 10863                           fsr2l	equ	0xFD9
 10864                           status	equ	0xFD8
 10865                           
 10866 ;; *************** function _i2c_display_cursor *****************
 10867 ;; Defined at:
 10868 ;;		line 379 in file "i2c.c"
 10869 ;; Parameters:    Size  Location     Type
 10870 ;;  line            1    wreg     unsigned char 
 10871 ;;  position        1   13[BANK0 ] unsigned char 
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;  line            1   14[BANK0 ] unsigned char 
 10874 ;;  address         1   15[BANK0 ] unsigned char 
 10875 ;; Return value:  Size  Location     Type
 10876 ;;                  1    wreg      void 
 10877 ;; Registers used:
 10878 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10879 ;; Tracked objects:
 10880 ;;		On entry : 0/0
 10881 ;;		On exit  : 0/0
 10882 ;;		Unchanged: 0/0
 10883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10884 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10885 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10887 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10888 ;;Total ram usage:        3 bytes
 10889 ;; Hardware stack levels used:    1
 10890 ;; Hardware stack levels required when called:   13
 10891 ;; This function calls:
 10892 ;;		__ic2_display_set_ddram_address
 10893 ;; This function is called by:
 10894 ;;		_display_update
 10895 ;; This function uses a non-reentrant model
 10896 ;;
 10897                           
 10898                           	psect	text26
 10899  0157E8                     __ptext26:
 10900                           	opt stack 0
 10901  0157E8                     _i2c_display_cursor:
 10902                           	opt stack 15
 10903                           
 10904                           ;incstack = 0
 10905                           ;i2c_display_cursor@line stored from wreg
 10906  0157E8  0100               	movlb	0	; () banked
 10907  0157EA  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10908                           
 10909                           ;i2c.c: 381: uint8_t address;;i2c.c: 384: line &= 0b11;
 10910  0157EC  0E03               	movlw	3
 10911  0157EE  0100               	movlb	0	; () banked
 10912  0157F0  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10913                           
 10914                           ;i2c.c: 385: address = line<<5;
 10915  0157F2  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10916  0157F4  46E8               	rlncf	wreg,f,c
 10917  0157F6  0BE0               	andlw	224
 10918  0157F8  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10919                           
 10920                           ;i2c.c: 386: position &= 0b11111;
 10921  0157FA  0E1F               	movlw	31
 10922  0157FC  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10923                           
 10924                           ;i2c.c: 387: address |= position;
 10925  0157FE  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10926  015800  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10927                           
 10928                           ; BSR set to: 0
 10929                           ;i2c.c: 393: _ic2_display_set_ddram_address(address);
 10930  015802  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10931  015804  ECD0  F0AB         	call	__ic2_display_set_ddram_address
 10932  015808  0012               	return		;funcret
 10933  01580A                     __end_of_i2c_display_cursor:
 10934                           	opt stack 0
 10935                           tblptru	equ	0xFF8
 10936                           tblptrh	equ	0xFF7
 10937                           tblptrl	equ	0xFF6
 10938                           tablat	equ	0xFF5
 10939                           prodh	equ	0xFF4
 10940                           prodl	equ	0xFF3
 10941                           postinc0	equ	0xFEE
 10942                           wreg	equ	0xFE8
 10943                           postdec1	equ	0xFE5
 10944                           fsr1h	equ	0xFE2
 10945                           fsr1l	equ	0xFE1
 10946                           indf2	equ	0xFDF
 10947                           postinc2	equ	0xFDE
 10948                           fsr2h	equ	0xFDA
 10949                           fsr2l	equ	0xFD9
 10950                           status	equ	0xFD8
 10951                           
 10952 ;; *************** function __ic2_display_set_ddram_address *****************
 10953 ;; Defined at:
 10954 ;;		line 350 in file "i2c.c"
 10955 ;; Parameters:    Size  Location     Type
 10956 ;;  address         1    wreg     unsigned char 
 10957 ;; Auto vars:     Size  Location     Type
 10958 ;;  address         1   10[BANK0 ] unsigned char 
 10959 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10960 ;; Return value:  Size  Location     Type
 10961 ;;                  1    wreg      void 
 10962 ;; Registers used:
 10963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10964 ;; Tracked objects:
 10965 ;;		On entry : 0/0
 10966 ;;		On exit  : 0/0
 10967 ;;		Unchanged: 0/0
 10968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10970 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10972 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10973 ;;Total ram usage:        3 bytes
 10974 ;; Hardware stack levels used:    1
 10975 ;; Hardware stack levels required when called:   12
 10976 ;; This function calls:
 10977 ;;		__i2c_write
 10978 ;; This function is called by:
 10979 ;;		_i2c_display_cursor
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           	psect	text27
 10984  0157A0                     __ptext27:
 10985                           	opt stack 0
 10986  0157A0                     __ic2_display_set_ddram_address:
 10987                           	opt stack 15
 10988                           
 10989                           ;incstack = 0
 10990                           ;__ic2_display_set_ddram_address@address stored from wreg
 10991  0157A0  0100               	movlb	0	; () banked
 10992  0157A2  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10993                           
 10994                           ;i2c.c: 352: uint8_t data_array[2];;i2c.c: 353: data_array[0] = 0b00000000;
 10995  0157A4  0E00               	movlw	0
 10996  0157A6  0100               	movlb	0	; () banked
 10997  0157A8  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10998                           
 10999                           ; BSR set to: 0
 11000                           ;i2c.c: 354: data_array[1] = 0b10000000 | address;
 11001  0157AA  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 11002  0157AC  0980               	iorlw	128
 11003  0157AE  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 11004                           
 11005                           ; BSR set to: 0
 11006                           ;i2c.c: 360: _i2c_write(0b01111000, &data_array[0], 2);
 11007  0157B0  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 11008  0157B2  6F65               	movwf	__i2c_write@data& (0+255),b
 11009  0157B4  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 11010  0157B6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11011  0157B8  0E02               	movlw	2
 11012  0157BA  6F67               	movwf	__i2c_write@length& (0+255),b
 11013  0157BC  0E78               	movlw	120
 11014  0157BE  EC7A  F0A6         	call	__i2c_write
 11015  0157C2  0012               	return		;funcret
 11016  0157C4                     __end_of__ic2_display_set_ddram_address:
 11017                           	opt stack 0
 11018                           tblptru	equ	0xFF8
 11019                           tblptrh	equ	0xFF7
 11020                           tblptrl	equ	0xFF6
 11021                           tablat	equ	0xFF5
 11022                           prodh	equ	0xFF4
 11023                           prodl	equ	0xFF3
 11024                           postinc0	equ	0xFEE
 11025                           wreg	equ	0xFE8
 11026                           postdec1	equ	0xFE5
 11027                           fsr1h	equ	0xFE2
 11028                           fsr1l	equ	0xFE1
 11029                           indf2	equ	0xFDF
 11030                           postinc2	equ	0xFDE
 11031                           fsr2h	equ	0xFDA
 11032                           fsr2l	equ	0xFD9
 11033                           status	equ	0xFD8
 11034                           
 11035 ;; *************** function _display_init *****************
 11036 ;; Defined at:
 11037 ;;		line 256 in file "display.c"
 11038 ;; Parameters:    Size  Location     Type
 11039 ;;		None
 11040 ;; Auto vars:     Size  Location     Type
 11041 ;;		None
 11042 ;; Return value:  Size  Location     Type
 11043 ;;                  1    wreg      void 
 11044 ;; Registers used:
 11045 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11046 ;; Tracked objects:
 11047 ;;		On entry : 0/0
 11048 ;;		On exit  : 0/0
 11049 ;;		Unchanged: 0/0
 11050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11051 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11052 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11054 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11055 ;;Total ram usage:        0 bytes
 11056 ;; Hardware stack levels used:    1
 11057 ;; Hardware stack levels required when called:   15
 11058 ;; This function calls:
 11059 ;;		__display_start
 11060 ;;		_i2c_display_init
 11061 ;;		_i2c_display_program_custom_character
 11062 ;; This function is called by:
 11063 ;;		_system_init
 11064 ;; This function uses a non-reentrant model
 11065 ;;
 11066                           
 11067                           	psect	text28
 11068  0151F4                     __ptext28:
 11069                           	opt stack 0
 11070  0151F4                     _display_init:
 11071                           	opt stack 14
 11072                           
 11073                           ;display.c: 258: i2c_display_init();
 11074                           
 11075                           ;incstack = 0
 11076  0151F4  EC52  F0A6         	call	_i2c_display_init	;wreg free
 11077                           
 11078                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 11079  0151F8  0ED5               	movlw	low _bit_pattern_verticalbar
 11080  0151FA  0100               	movlb	0	; () banked
 11081  0151FC  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11082  0151FE  0EA2               	movlw	high _bit_pattern_verticalbar
 11083  015200  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11084  015202  0E00               	movlw	0
 11085  015204  EC4F  F09E         	call	_i2c_display_program_custom_character
 11086                           
 11087                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 11088  015208  0ECD               	movlw	low _bit_pattern_degree
 11089  01520A  0100               	movlb	0	; () banked
 11090  01520C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11091  01520E  0EA2               	movlw	high _bit_pattern_degree
 11092  015210  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11093  015212  0E01               	movlw	1
 11094  015214  EC4F  F09E         	call	_i2c_display_program_custom_character
 11095                           
 11096                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 11097  015218  0EC5               	movlw	low _bit_pattern_ae
 11098  01521A  0100               	movlb	0	; () banked
 11099  01521C  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 11100  01521E  0EA2               	movlw	high _bit_pattern_ae
 11101  015220  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 11102  015222  0E02               	movlw	2
 11103  015224  EC4F  F09E         	call	_i2c_display_program_custom_character
 11104                           
 11105                           ;display.c: 263: _display_start();
 11106  015228  EC75  F097         	call	__display_start	;wreg free
 11107  01522C  0012               	return		;funcret
 11108  01522E                     __end_of_display_init:
 11109                           	opt stack 0
 11110                           tblptru	equ	0xFF8
 11111                           tblptrh	equ	0xFF7
 11112                           tblptrl	equ	0xFF6
 11113                           tablat	equ	0xFF5
 11114                           prodh	equ	0xFF4
 11115                           prodl	equ	0xFF3
 11116                           postinc0	equ	0xFEE
 11117                           wreg	equ	0xFE8
 11118                           postdec1	equ	0xFE5
 11119                           fsr1h	equ	0xFE2
 11120                           fsr1l	equ	0xFE1
 11121                           indf2	equ	0xFDF
 11122                           postinc2	equ	0xFDE
 11123                           fsr2h	equ	0xFDA
 11124                           fsr2l	equ	0xFD9
 11125                           status	equ	0xFD8
 11126                           
 11127 ;; *************** function _i2c_display_program_custom_character *****************
 11128 ;; Defined at:
 11129 ;;		line 444 in file "i2c.c"
 11130 ;; Parameters:    Size  Location     Type
 11131 ;;  address         1    wreg     unsigned char 
 11132 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 11133 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 11134 ;; Auto vars:     Size  Location     Type
 11135 ;;  address         1   31[BANK0 ] unsigned char 
 11136 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 11137 ;;  cntr            1   32[BANK0 ] unsigned char 
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      void 
 11140 ;; Registers used:
 11141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11147 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11148 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11149 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11150 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11151 ;;Total ram usage:       19 bytes
 11152 ;; Hardware stack levels used:    1
 11153 ;; Hardware stack levels required when called:   13
 11154 ;; This function calls:
 11155 ;;		__i2c_write
 11156 ;;		__ic2_display_set_cgram_address
 11157 ;; This function is called by:
 11158 ;;		_display_init
 11159 ;; This function uses a non-reentrant model
 11160 ;;
 11161                           
 11162                           	psect	text29
 11163  013C9E                     __ptext29:
 11164                           	opt stack 0
 11165  013C9E                     _i2c_display_program_custom_character:
 11166                           	opt stack 15
 11167                           
 11168                           ;incstack = 0
 11169                           ;i2c_display_program_custom_character@address stored from wreg
 11170  013C9E  0100               	movlb	0	; () banked
 11171  013CA0  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 11172                           
 11173                           ;i2c.c: 446: uint8_t cntr;;i2c.c: 447: uint8_t data_array[11];;i2c.c: 450: _ic2_display_
      +                          set_cgram_address(address<<3);
 11174  013CA2  0100               	movlb	0	; () banked
 11175  013CA4  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 11176  013CA6  42E8               	rrncf	wreg,f,c
 11177  013CA8  0BF8               	andlw	248
 11178  013CAA  EC09  F0AB         	call	__ic2_display_set_cgram_address
 11179                           
 11180                           ;i2c.c: 453: data_array[0] = 0b01000000;
 11181  013CAE  0E40               	movlw	64
 11182  013CB0  0100               	movlb	0	; () banked
 11183  013CB2  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 11184                           
 11185                           ; BSR set to: 0
 11186                           ;i2c.c: 454: for(cntr=0; cntr<8; ++cntr)
 11187  013CB4  0E00               	movlw	0
 11188  013CB6  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 11189  013CB8                     l15459:
 11190                           
 11191                           ; BSR set to: 0
 11192  013CB8  0E07               	movlw	7
 11193  013CBA  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 11194  013CBC  D001               	goto	l1249
 11195  013CBE  D023               	goto	u14220
 11196  013CC0                     l1249:
 11197                           
 11198                           ; BSR set to: 0
 11199                           ;i2c.c: 455: {;i2c.c: 456: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 11200                           
 11201                           ; BSR set to: 0
 11202  013CC0  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11203  013CC2  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 11204  013CC4  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 11205  013CC6  0E01               	movlw	1
 11206  013CC8  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 11207  013CCA  0E00               	movlw	0
 11208  013CCC  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 11209  013CCE  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11210  013CD0  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 11211  013CD2  6ED9               	movwf	fsr2l,c
 11212  013CD4  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11213  013CD6  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 11214  013CD8  6EDA               	movwf	fsr2h,c
 11215  013CDA  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 11216  013CDC  0D01               	mullw	1
 11217  013CDE  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 11218  013CE2  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 11219  013CE6  50F3               	movf	prodl,w,c
 11220  013CE8  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 11221  013CEA  50F4               	movf	prodh,w,c
 11222  013CEC  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 11223  013CEE  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 11224  013CF2  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 11225  013CF6                     	if	0	;tblptru may be non-zero
 11226  013CF6                     	endif
 11227  013CF6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 11228  013CF6  0E00               	movlw	low (__mediumconst shr (0+16))
 11229  013CF8  6EF8               	movwf	tblptru,c
 11230  013CFA                     	endif
 11231  013CFA  0008               	tblrd		*
 11232  013CFC  50F5               	movf	tablat,w,c
 11233  013CFE  0B1F               	andlw	31
 11234  013D00  6EDF               	movwf	indf2,c
 11235                           
 11236                           ; BSR set to: 0
 11237  013D02  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 11238  013D04  D7D9               	goto	l15459
 11239  013D06                     u14220:
 11240                           
 11241                           ; BSR set to: 0
 11242                           ;i2c.c: 457: };i2c.c: 458: _i2c_write(0b01111000, data_array, 9);
 11243                           
 11244                           ; BSR set to: 0
 11245  013D06  0E74               	movlw	low i2c_display_program_custom_character@data_array
 11246  013D08  6F65               	movwf	__i2c_write@data& (0+255),b
 11247  013D0A  0E00               	movlw	high i2c_display_program_custom_character@data_array
 11248  013D0C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11249  013D0E  0E09               	movlw	9
 11250  013D10  6F67               	movwf	__i2c_write@length& (0+255),b
 11251  013D12  0E78               	movlw	120
 11252  013D14  EC7A  F0A6         	call	__i2c_write
 11253  013D18  0012               	return		;funcret
 11254  013D1A                     __end_of_i2c_display_program_custom_character:
 11255                           	opt stack 0
 11256                           tblptru	equ	0xFF8
 11257                           tblptrh	equ	0xFF7
 11258                           tblptrl	equ	0xFF6
 11259                           tablat	equ	0xFF5
 11260                           prodh	equ	0xFF4
 11261                           prodl	equ	0xFF3
 11262                           postinc0	equ	0xFEE
 11263                           wreg	equ	0xFE8
 11264                           postdec1	equ	0xFE5
 11265                           fsr1h	equ	0xFE2
 11266                           fsr1l	equ	0xFE1
 11267                           indf2	equ	0xFDF
 11268                           postinc2	equ	0xFDE
 11269                           fsr2h	equ	0xFDA
 11270                           fsr2l	equ	0xFD9
 11271                           status	equ	0xFD8
 11272                           
 11273 ;; *************** function __ic2_display_set_cgram_address *****************
 11274 ;; Defined at:
 11275 ;;		line 363 in file "i2c.c"
 11276 ;; Parameters:    Size  Location     Type
 11277 ;;  address         1    wreg     unsigned char 
 11278 ;; Auto vars:     Size  Location     Type
 11279 ;;  address         1   13[BANK0 ] unsigned char 
 11280 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 11281 ;; Return value:  Size  Location     Type
 11282 ;;                  1    wreg      void 
 11283 ;; Registers used:
 11284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11285 ;; Tracked objects:
 11286 ;;		On entry : 0/0
 11287 ;;		On exit  : 0/0
 11288 ;;		Unchanged: 0/0
 11289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11291 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11293 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11294 ;;Total ram usage:        4 bytes
 11295 ;; Hardware stack levels used:    1
 11296 ;; Hardware stack levels required when called:   12
 11297 ;; This function calls:
 11298 ;;		__i2c_write
 11299 ;; This function is called by:
 11300 ;;		_i2c_display_program_custom_character
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text30
 11305  015612                     __ptext30:
 11306                           	opt stack 0
 11307  015612                     __ic2_display_set_cgram_address:
 11308                           	opt stack 15
 11309                           
 11310                           ;incstack = 0
 11311                           ;__ic2_display_set_cgram_address@address stored from wreg
 11312  015612  0100               	movlb	0	; () banked
 11313  015614  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 11314                           
 11315                           ;i2c.c: 365: uint8_t data_array[3];;i2c.c: 370: address &= 0b001111111;
 11316  015616  0100               	movlb	0	; () banked
 11317  015618  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 11318                           
 11319                           ; BSR set to: 0
 11320                           ;i2c.c: 371: data_array[0] = 0b00000000;
 11321  01561A  0E00               	movlw	0
 11322  01561C  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 11323                           
 11324                           ; BSR set to: 0
 11325                           ;i2c.c: 372: data_array[1] = 0b00111000;
 11326  01561E  0E38               	movlw	56
 11327  015620  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 11328                           
 11329                           ;i2c.c: 373: data_array[2] = 0b01000000 | address;
 11330  015622  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 11331  015624  0940               	iorlw	64
 11332  015626  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 11333                           
 11334                           ; BSR set to: 0
 11335                           ;i2c.c: 376: _i2c_write(0b01111000, data_array, 3);
 11336  015628  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 11337  01562A  6F65               	movwf	__i2c_write@data& (0+255),b
 11338  01562C  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 11339  01562E  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11340  015630  0E03               	movlw	3
 11341  015632  6F67               	movwf	__i2c_write@length& (0+255),b
 11342  015634  0E78               	movlw	120
 11343  015636  EC7A  F0A6         	call	__i2c_write
 11344  01563A  0012               	return		;funcret
 11345  01563C                     __end_of__ic2_display_set_cgram_address:
 11346                           	opt stack 0
 11347                           tblptru	equ	0xFF8
 11348                           tblptrh	equ	0xFF7
 11349                           tblptrl	equ	0xFF6
 11350                           tablat	equ	0xFF5
 11351                           prodh	equ	0xFF4
 11352                           prodl	equ	0xFF3
 11353                           postinc0	equ	0xFEE
 11354                           wreg	equ	0xFE8
 11355                           postdec1	equ	0xFE5
 11356                           fsr1h	equ	0xFE2
 11357                           fsr1l	equ	0xFE1
 11358                           indf2	equ	0xFDF
 11359                           postinc2	equ	0xFDE
 11360                           fsr2h	equ	0xFDA
 11361                           fsr2l	equ	0xFD9
 11362                           status	equ	0xFD8
 11363                           
 11364 ;; *************** function _i2c_display_init *****************
 11365 ;; Defined at:
 11366 ;;		line 321 in file "i2c.c"
 11367 ;; Parameters:    Size  Location     Type
 11368 ;;		None
 11369 ;; Auto vars:     Size  Location     Type
 11370 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 11371 ;; Return value:  Size  Location     Type
 11372 ;;                  1    wreg      void 
 11373 ;; Registers used:
 11374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11375 ;; Tracked objects:
 11376 ;;		On entry : 0/0
 11377 ;;		On exit  : 0/0
 11378 ;;		Unchanged: 0/0
 11379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11381 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11382 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11383 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11384 ;;Total ram usage:       10 bytes
 11385 ;; Hardware stack levels used:    1
 11386 ;; Hardware stack levels required when called:   12
 11387 ;; This function calls:
 11388 ;;		__i2c_write
 11389 ;; This function is called by:
 11390 ;;		_display_init
 11391 ;; This function uses a non-reentrant model
 11392 ;;
 11393                           
 11394                           	psect	text31
 11395  014CA4                     __ptext31:
 11396                           	opt stack 0
 11397  014CA4                     _i2c_display_init:
 11398                           	opt stack 16
 11399                           
 11400                           ;i2c.c: 323: uint8_t init_sequence[9] = {;i2c.c: 324: 0x3A,;i2c.c: 326: 0b00011110,;i2c.
      +                          c: 327: 0x39,;i2c.c: 329: 0b00001100,;i2c.c: 330: 0x74,;i2c.c: 331: 0b1011100,;i2c.c: 33
      +                          2: 0x6d,;i2c.c: 333: 0x0c,;i2c.c: 334: 0x01;i2c.c: 335: };
 11401                           
 11402                           ;incstack = 0
 11403  014CA4  EE22  F0A6         	lfsr	2,i2c_display_init@F6951
 11404  014CA8  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 11405  014CAC  0E08               	movlw	8
 11406  014CAE                     u14191:
 11407  014CAE  CFDB FFE3          	movff	plusw2,plusw1
 11408  014CB2  06E8               	decf	wreg,f,c
 11409  014CB4  E2FC               	bc	u14191
 11410                           
 11411                           ;i2c.c: 338: LATAbits.LA3 = 0;
 11412  014CB6  9689               	bcf	3977,3,c	;volatile
 11413                           
 11414                           ;i2c.c: 339: _delay((unsigned long)((10)*(8000000/4000.0)));
 11415  014CB8  0E1A               	movlw	26
 11416  014CBA  0100               	movlb	0	; () banked
 11417  014CBC  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11418  014CBE  0EF8               	movlw	248
 11419  014CC0                     u19197:
 11420  014CC0  2EE8               	decfsz	wreg,f,c
 11421  014CC2  D7FE               	bra	u19197
 11422  014CC4  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11423  014CC6  D7FC               	bra	u19197
 11424  014CC8  F000               	nop	
 11425                           
 11426                           ;i2c.c: 340: LATAbits.LA3 = 1;
 11427  014CCA  8689               	bsf	3977,3,c	;volatile
 11428                           
 11429                           ;i2c.c: 341: _delay((unsigned long)((50)*(8000000/4000.0)));
 11430  014CCC  0E82               	movlw	130
 11431  014CCE  0100               	movlb	0	; () banked
 11432  014CD0  6F6A               	movwf	??_i2c_display_init& (0+255),b
 11433  014CD2  0EDD               	movlw	221
 11434  014CD4                     u19207:
 11435  014CD4  2EE8               	decfsz	wreg,f,c
 11436  014CD6  D7FE               	bra	u19207
 11437  014CD8  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 11438  014CDA  D7FC               	bra	u19207
 11439  014CDC  D000               	nop2	
 11440                           
 11441                           ;i2c.c: 347: _i2c_write(0b01111000, &init_sequence[0], 9);
 11442  014CDE  0E6B               	movlw	low i2c_display_init@init_sequence
 11443  014CE0  0100               	movlb	0	; () banked
 11444  014CE2  6F65               	movwf	__i2c_write@data& (0+255),b
 11445  014CE4  0E00               	movlw	high i2c_display_init@init_sequence
 11446  014CE6  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 11447  014CE8  0E09               	movlw	9
 11448  014CEA  6F67               	movwf	__i2c_write@length& (0+255),b
 11449  014CEC  0E78               	movlw	120
 11450  014CEE  EC7A  F0A6         	call	__i2c_write
 11451  014CF2  0012               	return		;funcret
 11452  014CF4                     __end_of_i2c_display_init:
 11453                           	opt stack 0
 11454                           tblptru	equ	0xFF8
 11455                           tblptrh	equ	0xFF7
 11456                           tblptrl	equ	0xFF6
 11457                           tablat	equ	0xFF5
 11458                           prodh	equ	0xFF4
 11459                           prodl	equ	0xFF3
 11460                           postinc0	equ	0xFEE
 11461                           wreg	equ	0xFE8
 11462                           postdec1	equ	0xFE5
 11463                           plusw1	equ	0xFE3
 11464                           fsr1h	equ	0xFE2
 11465                           fsr1l	equ	0xFE1
 11466                           indf2	equ	0xFDF
 11467                           postinc2	equ	0xFDE
 11468                           plusw2	equ	0xFDB
 11469                           fsr2h	equ	0xFDA
 11470                           fsr2l	equ	0xFD9
 11471                           status	equ	0xFD8
 11472                           
 11473 ;; *************** function __i2c_write *****************
 11474 ;; Defined at:
 11475 ;;		line 84 in file "i2c.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  slave_addres    1    wreg     unsigned char 
 11478 ;;  data            2    5[BANK0 ] PTR unsigned char 
 11479 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 11480 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 11481 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 11482 ;;  length          1    7[BANK0 ] unsigned char 
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 11485 ;;  cntr            1    9[BANK0 ] unsigned char 
 11486 ;; Return value:  Size  Location     Type
 11487 ;;                  1    wreg      void 
 11488 ;; Registers used:
 11489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11490 ;; Tracked objects:
 11491 ;;		On entry : 0/0
 11492 ;;		On exit  : 0/0
 11493 ;;		Unchanged: 0/0
 11494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11495 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11499 ;;Total ram usage:        5 bytes
 11500 ;; Hardware stack levels used:    1
 11501 ;; Hardware stack levels required when called:   11
 11502 ;; This function calls:
 11503 ;;		__i2c_send
 11504 ;;		__i2c_start
 11505 ;;		__i2c_stop
 11506 ;;		__i2c_wait_idle
 11507 ;; This function is called by:
 11508 ;;		_i2c_eeprom_read
 11509 ;;		_i2c_display_init
 11510 ;;		__ic2_display_set_ddram_address
 11511 ;;		__ic2_display_set_cgram_address
 11512 ;;		_i2c_display_program_custom_character
 11513 ;;		_i2c_adc_start
 11514 ;;		_i2c_eeprom_writeByte
 11515 ;;		_i2c_eeprom_readByte
 11516 ;;		__i2c_display_send_init_sequence
 11517 ;; This function uses a non-reentrant model
 11518 ;;
 11519                           
 11520                           	psect	text32
 11521  014CF4                     __ptext32:
 11522                           	opt stack 0
 11523  014CF4                     __i2c_write:
 11524                           	opt stack 16
 11525                           
 11526                           ;incstack = 0
 11527                           ;__i2c_write@slave_address stored from wreg
 11528  014CF4  0100               	movlb	0	; () banked
 11529  014CF6  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 11530                           
 11531                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 11532  014CF8  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 11533                           
 11534                           ;i2c.c: 89: _i2c_start();
 11535  014CFC  EC29  F0AD         	call	__i2c_start	;wreg free
 11536                           
 11537                           ;i2c.c: 90: _i2c_wait_idle();
 11538  014D00  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 11539                           
 11540                           ;i2c.c: 91: _i2c_send(slave_address);
 11541  014D04  0100               	movlb	0	; () banked
 11542  014D06  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 11543  014D08  EC16  F0AD         	call	__i2c_send
 11544                           
 11545                           ;i2c.c: 92: _i2c_wait_idle();
 11546  014D0C  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 11547                           
 11548                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 11549  014D10  0E00               	movlw	0
 11550  014D12  0100               	movlb	0	; () banked
 11551  014D14  6F69               	movwf	__i2c_write@cntr& (0+255),b
 11552  014D16  D00F               	goto	l1158
 11553  014D18                     
 11554                           ; BSR set to: 0
 11555                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 11556                           
 11557                           ; BSR set to: 0
 11558  014D18  5169               	movf	__i2c_write@cntr& (0+255),w,b
 11559  014D1A  0D01               	mullw	1
 11560  014D1C  50F3               	movf	prodl,w,c
 11561  014D1E  2565               	addwf	__i2c_write@data& (0+255),w,b
 11562  014D20  6ED9               	movwf	fsr2l,c
 11563  014D22  50F4               	movf	prodh,w,c
 11564  014D24  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 11565  014D26  6EDA               	movwf	fsr2h,c
 11566  014D28  50DF               	movf	indf2,w,c
 11567  014D2A  EC16  F0AD         	call	__i2c_send
 11568                           
 11569                           ;i2c.c: 97: _i2c_wait_idle();
 11570  014D2E  EC35  F0A1         	call	__i2c_wait_idle	;wreg free
 11571  014D32  0100               	movlb	0	; () banked
 11572  014D34  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 11573  014D36                     l1158:
 11574                           
 11575                           ; BSR set to: 0
 11576                           
 11577                           ; BSR set to: 0
 11578  014D36  5167               	movf	__i2c_write@length& (0+255),w,b
 11579  014D38  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 11580  014D3A  A0D8               	btfss	status,0,c
 11581  014D3C  D7ED               	goto	l1159
 11582                           
 11583                           ; BSR set to: 0
 11584                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 11585                           
 11586                           ; BSR set to: 0
 11587  014D3E  EC25  F0AD         	call	__i2c_stop	;wreg free
 11588  014D42  0012               	return		;funcret
 11589  014D44                     __end_of__i2c_write:
 11590                           	opt stack 0
 11591                           tblptru	equ	0xFF8
 11592                           tblptrh	equ	0xFF7
 11593                           tblptrl	equ	0xFF6
 11594                           tablat	equ	0xFF5
 11595                           prodh	equ	0xFF4
 11596                           prodl	equ	0xFF3
 11597                           postinc0	equ	0xFEE
 11598                           wreg	equ	0xFE8
 11599                           postdec1	equ	0xFE5
 11600                           plusw1	equ	0xFE3
 11601                           fsr1h	equ	0xFE2
 11602                           fsr1l	equ	0xFE1
 11603                           indf2	equ	0xFDF
 11604                           postinc2	equ	0xFDE
 11605                           plusw2	equ	0xFDB
 11606                           fsr2h	equ	0xFDA
 11607                           fsr2l	equ	0xFD9
 11608                           status	equ	0xFD8
 11609                           
 11610 ;; *************** function __i2c_wait_idle *****************
 11611 ;; Defined at:
 11612 ;;		line 40 in file "i2c.c"
 11613 ;; Parameters:    Size  Location     Type
 11614 ;;		None
 11615 ;; Auto vars:     Size  Location     Type
 11616 ;;		None
 11617 ;; Return value:  Size  Location     Type
 11618 ;;                  1    wreg      void 
 11619 ;; Registers used:
 11620 ;;		wreg, status,2, status,0
 11621 ;; Tracked objects:
 11622 ;;		On entry : 0/0
 11623 ;;		On exit  : 0/0
 11624 ;;		Unchanged: 0/0
 11625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11628 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11629 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11630 ;;Total ram usage:        5 bytes
 11631 ;; Hardware stack levels used:    1
 11632 ;; Hardware stack levels required when called:   10
 11633 ;; This function calls:
 11634 ;;		Nothing
 11635 ;; This function is called by:
 11636 ;;		__i2c_write
 11637 ;;		__i2c_read
 11638 ;;		__i2c_eeprom_busy
 11639 ;;		_i2c_display_write_fixed
 11640 ;;		_i2c_adc_read
 11641 ;;		_i2c_display_write
 11642 ;; This function uses a non-reentrant model
 11643 ;;
 11644                           
 11645                           	psect	text33
 11646  01426A                     __ptext33:
 11647                           	opt stack 0
 11648  01426A                     __i2c_wait_idle:
 11649                           	opt stack 16
 11650                           
 11651                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 11652                           
 11653                           ;incstack = 0
 11654  01426A  A4C7               	btfss	4039,2,c	;volatile
 11655  01426C  D004               	goto	u11510
 11656  01426E  0100               	movlb	0	; () banked
 11657  014270  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11658  014272  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 11659  014274  D002               	goto	u11518
 11660  014276                     u11510:
 11661  014276  0100               	movlb	0	; () banked
 11662  014278  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 11663  01427A                     u11518:
 11664  01427A  A0C5               	btfss	4037,0,c	;volatile
 11665  01427C  D003               	goto	u11520
 11666  01427E  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11667  014280  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 11668  014282  D002               	goto	u11528
 11669  014284                     u11520:
 11670  014284  0100               	movlb	0	; () banked
 11671  014286  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 11672  014288                     u11528:
 11673  014288  A2C5               	btfss	4037,1,c	;volatile
 11674  01428A  D003               	goto	u11530
 11675  01428C  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11676  01428E  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 11677  014290  D002               	goto	u11538
 11678  014292                     u11530:
 11679  014292  0100               	movlb	0	; () banked
 11680  014294  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 11681  014296                     u11538:
 11682  014296  A4C5               	btfss	4037,2,c	;volatile
 11683  014298  D003               	goto	u11540
 11684  01429A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11685  01429C  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 11686  01429E  D002               	goto	u11548
 11687  0142A0                     u11540:
 11688  0142A0  0100               	movlb	0	; () banked
 11689  0142A2  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 11690  0142A4                     u11548:
 11691  0142A4  A6C5               	btfss	4037,3,c	;volatile
 11692  0142A6  D003               	goto	u11550
 11693  0142A8  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11694  0142AA  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 11695  0142AC  D002               	goto	u11558
 11696  0142AE                     u11550:
 11697  0142AE  0100               	movlb	0	; () banked
 11698  0142B0  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 11699  0142B2                     u11558:
 11700  0142B2  A8C5               	btfss	4037,4,c	;volatile
 11701  0142B4  D002               	goto	u11560
 11702  0142B6  0E01               	movlw	1
 11703  0142B8  D001               	goto	u11566
 11704  0142BA                     u11560:
 11705  0142BA  0E00               	movlw	0
 11706  0142BC                     u11566:
 11707  0142BC  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 11708  0142BE  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11709  0142C0  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11710  0142C2  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11711  0142C4  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11712  0142C6  0900               	iorlw	0
 11713  0142C8  B4D8               	btfsc	status,2,c
 11714  0142CA  0012               	return	
 11715  0142CC  D7CE               	goto	__i2c_wait_idle
 11716  0142CE                     __end_of__i2c_wait_idle:
 11717                           	opt stack 0
 11718                           tblptru	equ	0xFF8
 11719                           tblptrh	equ	0xFF7
 11720                           tblptrl	equ	0xFF6
 11721                           tablat	equ	0xFF5
 11722                           prodh	equ	0xFF4
 11723                           prodl	equ	0xFF3
 11724                           postinc0	equ	0xFEE
 11725                           wreg	equ	0xFE8
 11726                           postdec1	equ	0xFE5
 11727                           plusw1	equ	0xFE3
 11728                           fsr1h	equ	0xFE2
 11729                           fsr1l	equ	0xFE1
 11730                           indf2	equ	0xFDF
 11731                           postinc2	equ	0xFDE
 11732                           plusw2	equ	0xFDB
 11733                           fsr2h	equ	0xFDA
 11734                           fsr2l	equ	0xFD9
 11735                           status	equ	0xFD8
 11736                           
 11737 ;; *************** function __i2c_stop *****************
 11738 ;; Defined at:
 11739 ;;		line 63 in file "i2c.c"
 11740 ;; Parameters:    Size  Location     Type
 11741 ;;		None
 11742 ;; Auto vars:     Size  Location     Type
 11743 ;;		None
 11744 ;; Return value:  Size  Location     Type
 11745 ;;                  1    wreg      void 
 11746 ;; Registers used:
 11747 ;;		None
 11748 ;; Tracked objects:
 11749 ;;		On entry : 0/0
 11750 ;;		On exit  : 0/0
 11751 ;;		Unchanged: 0/0
 11752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11754 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11756 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11757 ;;Total ram usage:        0 bytes
 11758 ;; Hardware stack levels used:    1
 11759 ;; Hardware stack levels required when called:   10
 11760 ;; This function calls:
 11761 ;;		Nothing
 11762 ;; This function is called by:
 11763 ;;		__i2c_write
 11764 ;;		__i2c_read
 11765 ;;		__i2c_eeprom_busy
 11766 ;;		_i2c_display_write_fixed
 11767 ;;		_i2c_adc_read
 11768 ;;		_i2c_display_write
 11769 ;; This function uses a non-reentrant model
 11770 ;;
 11771                           
 11772                           	psect	text34
 11773  015A4A                     __ptext34:
 11774                           	opt stack 0
 11775  015A4A                     __i2c_stop:
 11776                           	opt stack 16
 11777                           
 11778                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 11779                           
 11780                           ; BSR set to: 0
 11781                           ;incstack = 0
 11782  015A4A  84C5               	bsf	4037,2,c	;volatile
 11783  015A4C  A4C5               	btfss	4037,2,c	;volatile
 11784  015A4E  0012               	return	
 11785  015A50  D7FD               	goto	l1141
 11786  015A52                     __end_of__i2c_stop:
 11787                           	opt stack 0
 11788                           tblptru	equ	0xFF8
 11789                           tblptrh	equ	0xFF7
 11790                           tblptrl	equ	0xFF6
 11791                           tablat	equ	0xFF5
 11792                           prodh	equ	0xFF4
 11793                           prodl	equ	0xFF3
 11794                           postinc0	equ	0xFEE
 11795                           wreg	equ	0xFE8
 11796                           postdec1	equ	0xFE5
 11797                           plusw1	equ	0xFE3
 11798                           fsr1h	equ	0xFE2
 11799                           fsr1l	equ	0xFE1
 11800                           indf2	equ	0xFDF
 11801                           postinc2	equ	0xFDE
 11802                           plusw2	equ	0xFDB
 11803                           fsr2h	equ	0xFDA
 11804                           fsr2l	equ	0xFD9
 11805                           status	equ	0xFD8
 11806                           
 11807 ;; *************** function __i2c_start *****************
 11808 ;; Defined at:
 11809 ;;		line 45 in file "i2c.c"
 11810 ;; Parameters:    Size  Location     Type
 11811 ;;		None
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;		None
 11814 ;; Return value:  Size  Location     Type
 11815 ;;                  1    wreg      void 
 11816 ;; Registers used:
 11817 ;;		None
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11823 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11826 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11827 ;;Total ram usage:        0 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:   10
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		__i2c_write
 11834 ;;		__i2c_read
 11835 ;;		__i2c_eeprom_busy
 11836 ;;		_i2c_display_write_fixed
 11837 ;;		_i2c_adc_read
 11838 ;;		_i2c_display_write
 11839 ;; This function uses a non-reentrant model
 11840 ;;
 11841                           
 11842                           	psect	text35
 11843  015A52                     __ptext35:
 11844                           	opt stack 0
 11845  015A52                     __i2c_start:
 11846                           	opt stack 16
 11847                           
 11848                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 11849                           
 11850                           ;incstack = 0
 11851  015A52  80C5               	bsf	4037,0,c	;volatile
 11852  015A54  A0C5               	btfss	4037,0,c	;volatile
 11853  015A56  0012               	return	
 11854  015A58  D7FD               	goto	l1126
 11855  015A5A                     __end_of__i2c_start:
 11856                           	opt stack 0
 11857                           tblptru	equ	0xFF8
 11858                           tblptrh	equ	0xFF7
 11859                           tblptrl	equ	0xFF6
 11860                           tablat	equ	0xFF5
 11861                           prodh	equ	0xFF4
 11862                           prodl	equ	0xFF3
 11863                           postinc0	equ	0xFEE
 11864                           wreg	equ	0xFE8
 11865                           postdec1	equ	0xFE5
 11866                           plusw1	equ	0xFE3
 11867                           fsr1h	equ	0xFE2
 11868                           fsr1l	equ	0xFE1
 11869                           indf2	equ	0xFDF
 11870                           postinc2	equ	0xFDE
 11871                           plusw2	equ	0xFDB
 11872                           fsr2h	equ	0xFDA
 11873                           fsr2l	equ	0xFD9
 11874                           status	equ	0xFD8
 11875                           
 11876 ;; *************** function __i2c_send *****************
 11877 ;; Defined at:
 11878 ;;		line 51 in file "i2c.c"
 11879 ;; Parameters:    Size  Location     Type
 11880 ;;  dat             1    wreg     unsigned char 
 11881 ;; Auto vars:     Size  Location     Type
 11882 ;;  dat             1    0[BANK0 ] unsigned char 
 11883 ;; Return value:  Size  Location     Type
 11884 ;;                  1    wreg      void 
 11885 ;; Registers used:
 11886 ;;		wreg
 11887 ;; Tracked objects:
 11888 ;;		On entry : 0/0
 11889 ;;		On exit  : 0/0
 11890 ;;		Unchanged: 0/0
 11891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11892 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11893 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11894 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11895 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11896 ;;Total ram usage:        1 bytes
 11897 ;; Hardware stack levels used:    1
 11898 ;; Hardware stack levels required when called:   10
 11899 ;; This function calls:
 11900 ;;		Nothing
 11901 ;; This function is called by:
 11902 ;;		__i2c_write
 11903 ;;		__i2c_read
 11904 ;;		__i2c_eeprom_busy
 11905 ;;		_i2c_display_write_fixed
 11906 ;;		_i2c_adc_read
 11907 ;;		_i2c_display_write
 11908 ;; This function uses a non-reentrant model
 11909 ;;
 11910                           
 11911                           	psect	text36
 11912  015A2C                     __ptext36:
 11913                           	opt stack 0
 11914  015A2C                     __i2c_send:
 11915                           	opt stack 16
 11916                           
 11917                           ;incstack = 0
 11918                           ;__i2c_send@dat stored from wreg
 11919  015A2C  0100               	movlb	0	; () banked
 11920  015A2E  6F60               	movwf	__i2c_send@dat& (0+255),b
 11921                           
 11922                           ;i2c.c: 53: SSP1BUF = dat;
 11923  015A30  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11924  015A34  0012               	return		;funcret
 11925  015A36                     __end_of__i2c_send:
 11926                           	opt stack 0
 11927                           tblptru	equ	0xFF8
 11928                           tblptrh	equ	0xFF7
 11929                           tblptrl	equ	0xFF6
 11930                           tablat	equ	0xFF5
 11931                           prodh	equ	0xFF4
 11932                           prodl	equ	0xFF3
 11933                           postinc0	equ	0xFEE
 11934                           wreg	equ	0xFE8
 11935                           postdec1	equ	0xFE5
 11936                           plusw1	equ	0xFE3
 11937                           fsr1h	equ	0xFE2
 11938                           fsr1l	equ	0xFE1
 11939                           indf2	equ	0xFDF
 11940                           postinc2	equ	0xFDE
 11941                           plusw2	equ	0xFDB
 11942                           fsr2h	equ	0xFDA
 11943                           fsr2l	equ	0xFD9
 11944                           status	equ	0xFD8
 11945                           
 11946 ;; *************** function __display_start *****************
 11947 ;; Defined at:
 11948 ;;		line 266 in file "display.c"
 11949 ;; Parameters:    Size  Location     Type
 11950 ;;		None
 11951 ;; Auto vars:     Size  Location     Type
 11952 ;;  cntr            1   28[BANK0 ] unsigned char 
 11953 ;; Return value:  Size  Location     Type
 11954 ;;                  1    wreg      void 
 11955 ;; Registers used:
 11956 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11957 ;; Tracked objects:
 11958 ;;		On entry : 0/0
 11959 ;;		On exit  : 0/0
 11960 ;;		Unchanged: 0/0
 11961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11962 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11963 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11965 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11966 ;;Total ram usage:        1 bytes
 11967 ;; Hardware stack levels used:    1
 11968 ;; Hardware stack levels required when called:   14
 11969 ;; This function calls:
 11970 ;;		__display_itoa_u16
 11971 ;;		_memcpy
 11972 ;; This function is called by:
 11973 ;;		_display_init
 11974 ;; This function uses a non-reentrant model
 11975 ;;
 11976                           
 11977                           	psect	text37
 11978  012EEA                     __ptext37:
 11979                           	opt stack 0
 11980  012EEA                     __display_start:
 11981                           	opt stack 14
 11982                           
 11983                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11984                           
 11985                           ;incstack = 0
 11986  012EEA  0E34               	movlw	low _display_content
 11987  012EEC  0100               	movlb	0	; () banked
 11988  012EEE  6F60               	movwf	memcpy@d1& (0+255),b
 11989  012EF0  0E02               	movlw	high _display_content
 11990  012EF2  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11991  012EF4  0E00               	movlw	low _dc_startup
 11992  012EF6  6F62               	movwf	memcpy@s1& (0+255),b
 11993  012EF8  0E04               	movlw	high _dc_startup
 11994  012EFA  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11995  012EFC  0E00               	movlw	0
 11996  012EFE  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11997  012F00  0E50               	movlw	80
 11998  012F02  6F64               	movwf	memcpy@n& (0+255),b
 11999  012F04  EC5D  F0A2         	call	_memcpy	;wreg free
 12000                           
 12001                           ;display.c: 270: cntr = 6;
 12002  012F08  0E06               	movlw	6
 12003  012F0A  0100               	movlb	0	; () banked
 12004  012F0C  6F7C               	movwf	__display_start@cntr& (0+255),b
 12005                           
 12006                           ; BSR set to: 0
 12007                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 12008  012F0E  0E00               	movlw	0
 12009  012F10  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12010  012F12  0E00               	movlw	0
 12011  012F14  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12012  012F16  517C               	movf	__display_start@cntr& (0+255),w,b
 12013  012F18  0D01               	mullw	1
 12014  012F1A  0E5C               	movlw	low (_display_content+40)
 12015  012F1C  24F3               	addwf	prodl,w,c
 12016  012F1E  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12017  012F20  0E02               	movlw	high (_display_content+40)
 12018  012F22  20F4               	addwfc	prodh,w,c
 12019  012F24  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12020  012F26  EC1B  F097         	call	__display_itoa_u16	;wreg free
 12021  012F2A  0100               	movlb	0	; () banked
 12022  012F2C  277C               	addwf	__display_start@cntr& (0+255),f,b
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;display.c: 272: display_content[2][cntr++] = '.';
 12026  012F2E  517C               	movf	__display_start@cntr& (0+255),w,b
 12027  012F30  0D01               	mullw	1
 12028  012F32  0E5C               	movlw	low (_display_content+40)
 12029  012F34  24F3               	addwf	prodl,w,c
 12030  012F36  6ED9               	movwf	fsr2l,c
 12031  012F38  0E02               	movlw	high (_display_content+40)
 12032  012F3A  20F4               	addwfc	prodh,w,c
 12033  012F3C  6EDA               	movwf	fsr2h,c
 12034  012F3E  0E2E               	movlw	46
 12035  012F40  6EDF               	movwf	indf2,c
 12036                           
 12037                           ; BSR set to: 0
 12038  012F42  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12039                           
 12040                           ; BSR set to: 0
 12041                           ;display.c: 273: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 12042  012F44  0E00               	movlw	0
 12043  012F46  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12044  012F48  0E05               	movlw	5
 12045  012F4A  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12046  012F4C  517C               	movf	__display_start@cntr& (0+255),w,b
 12047  012F4E  0D01               	mullw	1
 12048  012F50  0E5C               	movlw	low (_display_content+40)
 12049  012F52  24F3               	addwf	prodl,w,c
 12050  012F54  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12051  012F56  0E02               	movlw	high (_display_content+40)
 12052  012F58  20F4               	addwfc	prodh,w,c
 12053  012F5A  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12054  012F5C  EC1B  F097         	call	__display_itoa_u16	;wreg free
 12055  012F60  0100               	movlb	0	; () banked
 12056  012F62  277C               	addwf	__display_start@cntr& (0+255),f,b
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;display.c: 274: display_content[2][cntr++] = '.';
 12060  012F64  517C               	movf	__display_start@cntr& (0+255),w,b
 12061  012F66  0D01               	mullw	1
 12062  012F68  0E5C               	movlw	low (_display_content+40)
 12063  012F6A  24F3               	addwf	prodl,w,c
 12064  012F6C  6ED9               	movwf	fsr2l,c
 12065  012F6E  0E02               	movlw	high (_display_content+40)
 12066  012F70  20F4               	addwfc	prodh,w,c
 12067  012F72  6EDA               	movwf	fsr2h,c
 12068  012F74  0E2E               	movlw	46
 12069  012F76  6EDF               	movwf	indf2,c
 12070                           
 12071                           ; BSR set to: 0
 12072  012F78  2B7C               	incf	__display_start@cntr& (0+255),f,b
 12073                           
 12074                           ; BSR set to: 0
 12075                           ;display.c: 275: cntr += _display_itoa_u16(0x05, &display_content[2][cntr]);
 12076  012F7A  0E00               	movlw	0
 12077  012F7C  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 12078  012F7E  0E05               	movlw	5
 12079  012F80  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 12080  012F82  517C               	movf	__display_start@cntr& (0+255),w,b
 12081  012F84  0D01               	mullw	1
 12082  012F86  0E5C               	movlw	low (_display_content+40)
 12083  012F88  24F3               	addwf	prodl,w,c
 12084  012F8A  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 12085  012F8C  0E02               	movlw	high (_display_content+40)
 12086  012F8E  20F4               	addwfc	prodh,w,c
 12087  012F90  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 12088  012F92  EC1B  F097         	call	__display_itoa_u16	;wreg free
 12089  012F96  0100               	movlb	0	; () banked
 12090  012F98  277C               	addwf	__display_start@cntr& (0+255),f,b
 12091                           
 12092                           ; BSR set to: 0
 12093  012F9A  0012               	return		;funcret
 12094  012F9C                     __end_of__display_start:
 12095                           	opt stack 0
 12096                           tblptru	equ	0xFF8
 12097                           tblptrh	equ	0xFF7
 12098                           tblptrl	equ	0xFF6
 12099                           tablat	equ	0xFF5
 12100                           prodh	equ	0xFF4
 12101                           prodl	equ	0xFF3
 12102                           postinc0	equ	0xFEE
 12103                           wreg	equ	0xFE8
 12104                           postdec1	equ	0xFE5
 12105                           plusw1	equ	0xFE3
 12106                           fsr1h	equ	0xFE2
 12107                           fsr1l	equ	0xFE1
 12108                           indf2	equ	0xFDF
 12109                           postinc2	equ	0xFDE
 12110                           plusw2	equ	0xFDB
 12111                           fsr2h	equ	0xFDA
 12112                           fsr2l	equ	0xFD9
 12113                           status	equ	0xFD8
 12114                           
 12115 ;; *************** function __display_itoa_u16 *****************
 12116 ;; Defined at:
 12117 ;;		line 226 in file "display.c"
 12118 ;; Parameters:    Size  Location     Type
 12119 ;;  value           2   24[BANK0 ] unsigned int 
 12120 ;;  text            2   26[BANK0 ] PTR unsigned char 
 12121 ;;		 -> display_content(80), 
 12122 ;; Auto vars:     Size  Location     Type
 12123 ;;		None
 12124 ;; Return value:  Size  Location     Type
 12125 ;;                  1    wreg      unsigned char 
 12126 ;; Registers used:
 12127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12128 ;; Tracked objects:
 12129 ;;		On entry : 0/0
 12130 ;;		On exit  : 0/0
 12131 ;;		Unchanged: 0/0
 12132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12133 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12136 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12137 ;;Total ram usage:        4 bytes
 12138 ;; Hardware stack levels used:    1
 12139 ;; Hardware stack levels required when called:   13
 12140 ;; This function calls:
 12141 ;;		_itoa
 12142 ;; This function is called by:
 12143 ;;		__display_start
 12144 ;; This function uses a non-reentrant model
 12145 ;;
 12146                           
 12147                           	psect	text38
 12148  012E36                     __ptext38:
 12149                           	opt stack 0
 12150  012E36                     __display_itoa_u16:
 12151                           	opt stack 14
 12152                           
 12153                           ;display.c: 228: itoa(text, value, 10);
 12154                           
 12155                           ; BSR set to: 0
 12156                           ;incstack = 0
 12157  012E36  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 12158  012E3A  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 12159  012E3E  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 12160  012E42  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 12161  012E46  0E00               	movlw	0
 12162  012E48  0100               	movlb	0	; () banked
 12163  012E4A  6F75               	movwf	(itoa@base+1)& (0+255),b
 12164  012E4C  0E0A               	movlw	10
 12165  012E4E  6F74               	movwf	itoa@base& (0+255),b
 12166  012E50  EC17  F0A8         	call	_itoa	;wreg free
 12167                           
 12168                           ;display.c: 229: if(value>9999)
 12169  012E54  0E10               	movlw	16
 12170  012E56  0100               	movlb	0	; () banked
 12171  012E58  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12172  012E5A  0E27               	movlw	39
 12173  012E5C  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12174  012E5E  A0D8               	btfss	status,0,c
 12175  012E60  D00A               	goto	l1359
 12176                           
 12177                           ; BSR set to: 0
 12178                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 12179  012E62  EE20 F005          	lfsr	2,5
 12180  012E66  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12181  012E68  26D9               	addwf	fsr2l,f,c
 12182  012E6A  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12183  012E6C  22DA               	addwfc	fsr2h,f,c
 12184  012E6E  0E20               	movlw	32
 12185  012E70  6EDF               	movwf	indf2,c
 12186                           
 12187                           ; BSR set to: 0
 12188                           ;display.c: 232: return 5;
 12189  012E72  0E05               	movlw	5
 12190                           
 12191                           ; BSR set to: 0
 12192                           ;display.c: 233: }
 12193                           
 12194                           ; BSR set to: 0
 12195  012E74  0012               	return	
 12196  012E76                     l1359:
 12197                           
 12198                           ; BSR set to: 0
 12199                           ;display.c: 234: else if (value>999)
 12200                           
 12201                           ; BSR set to: 0
 12202  012E76  0EE8               	movlw	232
 12203  012E78  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12204  012E7A  0E03               	movlw	3
 12205  012E7C  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 12206  012E7E  A0D8               	btfss	status,0,c
 12207  012E80  D00A               	goto	l1362
 12208                           
 12209                           ; BSR set to: 0
 12210                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 12211  012E82  EE20 F004          	lfsr	2,4
 12212  012E86  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12213  012E88  26D9               	addwf	fsr2l,f,c
 12214  012E8A  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12215  012E8C  22DA               	addwfc	fsr2h,f,c
 12216  012E8E  0E20               	movlw	32
 12217  012E90  6EDF               	movwf	indf2,c
 12218                           
 12219                           ; BSR set to: 0
 12220                           ;display.c: 237: return 4;
 12221  012E92  0E04               	movlw	4
 12222                           
 12223                           ; BSR set to: 0
 12224                           ;display.c: 238: }
 12225                           
 12226                           ; BSR set to: 0
 12227  012E94  0012               	return	
 12228  012E96                     l1362:
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;display.c: 239: else if (value>99)
 12232                           
 12233                           ; BSR set to: 0
 12234  012E96  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12235  012E98  E104               	bnz	u13170
 12236  012E9A  0E64               	movlw	100
 12237  012E9C  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12238  012E9E  A0D8               	btfss	status,0,c
 12239  012EA0  D00A               	goto	l1364
 12240  012EA2                     u13170:
 12241                           
 12242                           ; BSR set to: 0
 12243                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 12244  012EA2  EE20 F003          	lfsr	2,3
 12245  012EA6  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12246  012EA8  26D9               	addwf	fsr2l,f,c
 12247  012EAA  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12248  012EAC  22DA               	addwfc	fsr2h,f,c
 12249  012EAE  0E20               	movlw	32
 12250  012EB0  6EDF               	movwf	indf2,c
 12251                           
 12252                           ; BSR set to: 0
 12253                           ;display.c: 242: return 3;
 12254  012EB2  0E03               	movlw	3
 12255                           
 12256                           ; BSR set to: 0
 12257                           ;display.c: 243: }
 12258                           
 12259                           ; BSR set to: 0
 12260  012EB4  0012               	return	
 12261  012EB6                     l1364:
 12262                           
 12263                           ; BSR set to: 0
 12264                           ;display.c: 244: else if (value>9)
 12265                           
 12266                           ; BSR set to: 0
 12267  012EB6  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 12268  012EB8  E104               	bnz	u13180
 12269  012EBA  0E0A               	movlw	10
 12270  012EBC  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 12271  012EBE  A0D8               	btfss	status,0,c
 12272  012EC0  D00A               	goto	l1366
 12273  012EC2                     u13180:
 12274                           
 12275                           ; BSR set to: 0
 12276                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 12277  012EC2  EE20 F002          	lfsr	2,2
 12278  012EC6  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12279  012EC8  26D9               	addwf	fsr2l,f,c
 12280  012ECA  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12281  012ECC  22DA               	addwfc	fsr2h,f,c
 12282  012ECE  0E20               	movlw	32
 12283  012ED0  6EDF               	movwf	indf2,c
 12284                           
 12285                           ; BSR set to: 0
 12286                           ;display.c: 247: return 2;
 12287  012ED2  0E02               	movlw	2
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;display.c: 248: }
 12291                           
 12292                           ; BSR set to: 0
 12293  012ED4  0012               	return	
 12294  012ED6                     l1366:
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 12298                           
 12299                           ; BSR set to: 0
 12300  012ED6  EE20 F001          	lfsr	2,1
 12301  012EDA  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 12302  012EDC  26D9               	addwf	fsr2l,f,c
 12303  012EDE  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 12304  012EE0  22DA               	addwfc	fsr2h,f,c
 12305  012EE2  0E20               	movlw	32
 12306  012EE4  6EDF               	movwf	indf2,c
 12307                           
 12308                           ; BSR set to: 0
 12309                           ;display.c: 252: return 1;
 12310  012EE6  0E01               	movlw	1
 12311                           
 12312                           ; BSR set to: 0
 12313                           
 12314                           ; BSR set to: 0
 12315                           
 12316                           ; BSR set to: 0
 12317                           
 12318                           ; BSR set to: 0
 12319  012EE8  0012               	return	
 12320  012EEA                     __end_of__display_itoa_u16:
 12321                           	opt stack 0
 12322                           tblptru	equ	0xFF8
 12323                           tblptrh	equ	0xFF7
 12324                           tblptrl	equ	0xFF6
 12325                           tablat	equ	0xFF5
 12326                           prodh	equ	0xFF4
 12327                           prodl	equ	0xFF3
 12328                           postinc0	equ	0xFEE
 12329                           wreg	equ	0xFE8
 12330                           postdec1	equ	0xFE5
 12331                           plusw1	equ	0xFE3
 12332                           fsr1h	equ	0xFE2
 12333                           fsr1l	equ	0xFE1
 12334                           indf2	equ	0xFDF
 12335                           postinc2	equ	0xFDE
 12336                           plusw2	equ	0xFDB
 12337                           fsr2h	equ	0xFDA
 12338                           fsr2l	equ	0xFD9
 12339                           status	equ	0xFD8
 12340                           
 12341 ;; *************** function _configFile_write *****************
 12342 ;; Defined at:
 12343 ;;		line 270 in file "config_file.c"
 12344 ;; Parameters:    Size  Location     Type
 12345 ;;		None
 12346 ;; Auto vars:     Size  Location     Type
 12347 ;;  file_size       4  133[BANK0 ] unsigned long 
 12348 ;;  file_number     1  132[BANK0 ] unsigned char 
 12349 ;; Return value:  Size  Location     Type
 12350 ;;                  1    wreg      void 
 12351 ;; Registers used:
 12352 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12353 ;; Tracked objects:
 12354 ;;		On entry : 0/0
 12355 ;;		On exit  : 0/0
 12356 ;;		Unchanged: 0/0
 12357 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12358 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12359 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12360 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12361 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12362 ;;Total ram usage:        6 bytes
 12363 ;; Hardware stack levels used:    1
 12364 ;; Hardware stack levels required when called:   18
 12365 ;; This function calls:
 12366 ;;		__add_item
 12367 ;;		_fat_create_file
 12368 ;;		_fat_find_file
 12369 ;;		_fat_modify_file
 12370 ;;		_fat_resize_file
 12371 ;; This function is called by:
 12372 ;;		_system_init
 12373 ;; This function uses a non-reentrant model
 12374 ;;
 12375                           
 12376                           	psect	text39
 12377  00C1A8                     __ptext39:
 12378                           	opt stack 0
 12379  00C1A8                     _configFile_write:
 12380                           	opt stack 11
 12381                           
 12382                           ;config_file.c: 272: uint8_t file_number;;config_file.c: 273: uint32_t file_size;;config
      +                          _file.c: 275: file_size = 0;
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;incstack = 0
 12386  00C1A8  0E00               	movlw	0
 12387  00C1AA  0100               	movlb	0	; () banked
 12388  00C1AC  6FE5               	movwf	configFile_write@file_size& (0+255),b
 12389  00C1AE  0E00               	movlw	0
 12390  00C1B0  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 12391  00C1B2  0E00               	movlw	0
 12392  00C1B4  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 12393  00C1B6  0E00               	movlw	0
 12394  00C1B8  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;config_file.c: 276: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 12398  00C1BA  0EFD               	movlw	low _full_circle_in_steps_string
 12399  00C1BC  6F84               	movwf	__add_item@item_string& (0+255),b
 12400  00C1BE  0EA1               	movlw	high _full_circle_in_steps_string
 12401  00C1C0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12402  00C1C2  C1A1  F086         	movff	_config,__add_item@value
 12403  00C1C6  C1A2  F087         	movff	_config+1,__add_item@value+1
 12404  00C1CA  C1A3  F088         	movff	_config+2,__add_item@value+2
 12405  00C1CE  C1A4  F089         	movff	_config+3,__add_item@value+3
 12406  00C1D2  0E00               	movlw	low _ConfigFile_buffer
 12407  00C1D4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12408  00C1D6  6F8A               	movwf	__add_item@buffer& (0+255),b
 12409  00C1D8  0E08               	movlw	high _ConfigFile_buffer
 12410  00C1DA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12411  00C1DC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12412  00C1DE  EC38  F08B         	call	__add_item	;wreg free
 12413  00C1E2  0100               	movlb	0	; () banked
 12414  00C1E4  6FE3               	movwf	??_configFile_write& (0+255),b
 12415  00C1E6  51E3               	movf	??_configFile_write& (0+255),w,b
 12416  00C1E8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12417  00C1EA  0E00               	movlw	0
 12418  00C1EC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12419  00C1EE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12420  00C1F0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12421                           
 12422                           ; BSR set to: 0
 12423                           ;config_file.c: 277: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 12424  00C1F2  0E49               	movlw	low _inverse_direction_string
 12425  00C1F4  6F84               	movwf	__add_item@item_string& (0+255),b
 12426  00C1F6  0EA2               	movlw	high _inverse_direction_string
 12427  00C1F8  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12428  00C1FA  0101               	movlb	1	; () banked
 12429  00C1FC  51A5               	movf	(_config+4)& (0+255),w,b
 12430  00C1FE  0100               	movlb	0	; () banked
 12431  00C200  6F86               	movwf	__add_item@value& (0+255),b
 12432  00C202  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12433  00C204  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12434  00C206  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12435  00C208  0E00               	movlw	low _ConfigFile_buffer
 12436  00C20A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12437  00C20C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12438  00C20E  0E08               	movlw	high _ConfigFile_buffer
 12439  00C210  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12440  00C212  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12441  00C214  EC38  F08B         	call	__add_item	;wreg free
 12442  00C218  0100               	movlb	0	; () banked
 12443  00C21A  6FE3               	movwf	??_configFile_write& (0+255),b
 12444  00C21C  51E3               	movf	??_configFile_write& (0+255),w,b
 12445  00C21E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12446  00C220  0E00               	movlw	0
 12447  00C222  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12448  00C224  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12449  00C226  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12450                           
 12451                           ; BSR set to: 0
 12452                           ;config_file.c: 278: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 12453  00C228  0E12               	movlw	low _overshoot_in_steps_string
 12454  00C22A  6F84               	movwf	__add_item@item_string& (0+255),b
 12455  00C22C  0EA2               	movlw	high _overshoot_in_steps_string
 12456  00C22E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12457  00C230  C1A6  F086         	movff	_config+5,__add_item@value
 12458  00C234  C1A7  F087         	movff	_config+6,__add_item@value+1
 12459  00C238  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12460  00C23A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12461  00C23C  0E00               	movlw	low _ConfigFile_buffer
 12462  00C23E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12463  00C240  6F8A               	movwf	__add_item@buffer& (0+255),b
 12464  00C242  0E08               	movlw	high _ConfigFile_buffer
 12465  00C244  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12466  00C246  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12467  00C248  EC38  F08B         	call	__add_item	;wreg free
 12468  00C24C  0100               	movlb	0	; () banked
 12469  00C24E  6FE3               	movwf	??_configFile_write& (0+255),b
 12470  00C250  51E3               	movf	??_configFile_write& (0+255),w,b
 12471  00C252  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12472  00C254  0E00               	movlw	0
 12473  00C256  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12474  00C258  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12475  00C25A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12476                           
 12477                           ; BSR set to: 0
 12478                           ;config_file.c: 279: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 12479  00C25C  0EBB               	movlw	low _overshoot_cost_in_steps_string
 12480  00C25E  6F84               	movwf	__add_item@item_string& (0+255),b
 12481  00C260  0EA1               	movlw	high _overshoot_cost_in_steps_string
 12482  00C262  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12483  00C264  C1A8  F086         	movff	_config+7,__add_item@value
 12484  00C268  C1A9  F087         	movff	_config+8,__add_item@value+1
 12485  00C26C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12486  00C26E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12487  00C270  0E00               	movlw	low _ConfigFile_buffer
 12488  00C272  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12489  00C274  6F8A               	movwf	__add_item@buffer& (0+255),b
 12490  00C276  0E08               	movlw	high _ConfigFile_buffer
 12491  00C278  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12492  00C27A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12493  00C27C  EC38  F08B         	call	__add_item	;wreg free
 12494  00C280  0100               	movlb	0	; () banked
 12495  00C282  6FE3               	movwf	??_configFile_write& (0+255),b
 12496  00C284  51E3               	movf	??_configFile_write& (0+255),w,b
 12497  00C286  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12498  00C288  0E00               	movlw	0
 12499  00C28A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12500  00C28C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12501  00C28E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;config_file.c: 280: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12505  00C290  0E97               	movlw	low _minimum_speed_string
 12506  00C292  6F84               	movwf	__add_item@item_string& (0+255),b
 12507  00C294  0EA2               	movlw	high _minimum_speed_string
 12508  00C296  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12509  00C298  C1AA  F086         	movff	_config+9,__add_item@value
 12510  00C29C  C1AB  F087         	movff	_config+10,__add_item@value+1
 12511  00C2A0  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12512  00C2A2  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12513  00C2A4  0E00               	movlw	low _ConfigFile_buffer
 12514  00C2A6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12515  00C2A8  6F8A               	movwf	__add_item@buffer& (0+255),b
 12516  00C2AA  0E08               	movlw	high _ConfigFile_buffer
 12517  00C2AC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12518  00C2AE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12519  00C2B0  EC38  F08B         	call	__add_item	;wreg free
 12520  00C2B4  0100               	movlb	0	; () banked
 12521  00C2B6  6FE3               	movwf	??_configFile_write& (0+255),b
 12522  00C2B8  51E3               	movf	??_configFile_write& (0+255),w,b
 12523  00C2BA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12524  00C2BC  0E00               	movlw	0
 12525  00C2BE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12526  00C2C0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12527  00C2C2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12528                           
 12529                           ; BSR set to: 0
 12530                           ;config_file.c: 281: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 12531  00C2C4  0E89               	movlw	low _maximum_speed_string
 12532  00C2C6  6F84               	movwf	__add_item@item_string& (0+255),b
 12533  00C2C8  0EA2               	movlw	high _maximum_speed_string
 12534  00C2CA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12535  00C2CC  C1AC  F086         	movff	_config+11,__add_item@value
 12536  00C2D0  C1AD  F087         	movff	_config+12,__add_item@value+1
 12537  00C2D4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12538  00C2D6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12539  00C2D8  0E00               	movlw	low _ConfigFile_buffer
 12540  00C2DA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12541  00C2DC  6F8A               	movwf	__add_item@buffer& (0+255),b
 12542  00C2DE  0E08               	movlw	high _ConfigFile_buffer
 12543  00C2E0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12544  00C2E2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12545  00C2E4  EC38  F08B         	call	__add_item	;wreg free
 12546  00C2E8  0100               	movlb	0	; () banked
 12547  00C2EA  6FE3               	movwf	??_configFile_write& (0+255),b
 12548  00C2EC  51E3               	movf	??_configFile_write& (0+255),w,b
 12549  00C2EE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12550  00C2F0  0E00               	movlw	0
 12551  00C2F2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12552  00C2F4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12553  00C2F6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12554                           
 12555                           ; BSR set to: 0
 12556                           ;config_file.c: 282: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 12557  00C2F8  0E37               	movlw	low _initial_speed_arc_string
 12558  00C2FA  6F84               	movwf	__add_item@item_string& (0+255),b
 12559  00C2FC  0EA2               	movlw	high _initial_speed_arc_string
 12560  00C2FE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12561  00C300  C1AE  F086         	movff	_config+13,__add_item@value
 12562  00C304  C1AF  F087         	movff	_config+14,__add_item@value+1
 12563  00C308  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12564  00C30A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12565  00C30C  0E00               	movlw	low _ConfigFile_buffer
 12566  00C30E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12567  00C310  6F8A               	movwf	__add_item@buffer& (0+255),b
 12568  00C312  0E08               	movlw	high _ConfigFile_buffer
 12569  00C314  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12570  00C316  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12571  00C318  EC38  F08B         	call	__add_item	;wreg free
 12572  00C31C  0100               	movlb	0	; () banked
 12573  00C31E  6FE3               	movwf	??_configFile_write& (0+255),b
 12574  00C320  51E3               	movf	??_configFile_write& (0+255),w,b
 12575  00C322  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12576  00C324  0E00               	movlw	0
 12577  00C326  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12578  00C328  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12579  00C32A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12580                           
 12581                           ; BSR set to: 0
 12582                           ;config_file.c: 283: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 12583  00C32C  0E25               	movlw	low _maximum_speed_arc_string
 12584  00C32E  6F84               	movwf	__add_item@item_string& (0+255),b
 12585  00C330  0EA2               	movlw	high _maximum_speed_arc_string
 12586  00C332  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12587  00C334  C1B0  F086         	movff	_config+15,__add_item@value
 12588  00C338  C1B1  F087         	movff	_config+16,__add_item@value+1
 12589  00C33C  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12590  00C33E  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12591  00C340  0E00               	movlw	low _ConfigFile_buffer
 12592  00C342  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12593  00C344  6F8A               	movwf	__add_item@buffer& (0+255),b
 12594  00C346  0E08               	movlw	high _ConfigFile_buffer
 12595  00C348  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12596  00C34A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12597  00C34C  EC38  F08B         	call	__add_item	;wreg free
 12598  00C350  0100               	movlb	0	; () banked
 12599  00C352  6FE3               	movwf	??_configFile_write& (0+255),b
 12600  00C354  51E3               	movf	??_configFile_write& (0+255),w,b
 12601  00C356  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12602  00C358  0E00               	movlw	0
 12603  00C35A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12604  00C35C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12605  00C35E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12606                           
 12607                           ; BSR set to: 0
 12608                           ;config_file.c: 284: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 12609  00C360  0EE8               	movlw	low _initial_speed_manual_string
 12610  00C362  6F84               	movwf	__add_item@item_string& (0+255),b
 12611  00C364  0EA1               	movlw	high _initial_speed_manual_string
 12612  00C366  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12613  00C368  C1B2  F086         	movff	_config+17,__add_item@value
 12614  00C36C  C1B3  F087         	movff	_config+18,__add_item@value+1
 12615  00C370  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12616  00C372  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12617  00C374  0E00               	movlw	low _ConfigFile_buffer
 12618  00C376  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12619  00C378  6F8A               	movwf	__add_item@buffer& (0+255),b
 12620  00C37A  0E08               	movlw	high _ConfigFile_buffer
 12621  00C37C  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12622  00C37E  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12623  00C380  EC38  F08B         	call	__add_item	;wreg free
 12624  00C384  0100               	movlb	0	; () banked
 12625  00C386  6FE3               	movwf	??_configFile_write& (0+255),b
 12626  00C388  51E3               	movf	??_configFile_write& (0+255),w,b
 12627  00C38A  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12628  00C38C  0E00               	movlw	0
 12629  00C38E  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12630  00C390  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12631  00C392  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12632                           
 12633                           ; BSR set to: 0
 12634                           ;config_file.c: 285: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 12635  00C394  0ED3               	movlw	low _maximum_speed_manual_string
 12636  00C396  6F84               	movwf	__add_item@item_string& (0+255),b
 12637  00C398  0EA1               	movlw	high _maximum_speed_manual_string
 12638  00C39A  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12639  00C39C  C1B4  F086         	movff	_config+19,__add_item@value
 12640  00C3A0  C1B5  F087         	movff	_config+20,__add_item@value+1
 12641  00C3A4  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12642  00C3A6  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12643  00C3A8  0E00               	movlw	low _ConfigFile_buffer
 12644  00C3AA  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12645  00C3AC  6F8A               	movwf	__add_item@buffer& (0+255),b
 12646  00C3AE  0E08               	movlw	high _ConfigFile_buffer
 12647  00C3B0  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12648  00C3B2  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12649  00C3B4  EC38  F08B         	call	__add_item	;wreg free
 12650  00C3B8  0100               	movlb	0	; () banked
 12651  00C3BA  6FE3               	movwf	??_configFile_write& (0+255),b
 12652  00C3BC  51E3               	movf	??_configFile_write& (0+255),w,b
 12653  00C3BE  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12654  00C3C0  0E00               	movlw	0
 12655  00C3C2  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12656  00C3C4  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12657  00C3C6  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;config_file.c: 286: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 12661  00C3C8  0E6D               	movlw	low _use_ccw_limit_string
 12662  00C3CA  6F84               	movwf	__add_item@item_string& (0+255),b
 12663  00C3CC  0EA2               	movlw	high _use_ccw_limit_string
 12664  00C3CE  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12665  00C3D0  0101               	movlb	1	; () banked
 12666  00C3D2  51BA               	movf	(_config+25)& (0+255),w,b
 12667  00C3D4  0100               	movlb	0	; () banked
 12668  00C3D6  6F86               	movwf	__add_item@value& (0+255),b
 12669  00C3D8  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12670  00C3DA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12671  00C3DC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12672  00C3DE  0E00               	movlw	low _ConfigFile_buffer
 12673  00C3E0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12674  00C3E2  6F8A               	movwf	__add_item@buffer& (0+255),b
 12675  00C3E4  0E08               	movlw	high _ConfigFile_buffer
 12676  00C3E6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12677  00C3E8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12678  00C3EA  EC38  F08B         	call	__add_item	;wreg free
 12679  00C3EE  0100               	movlb	0	; () banked
 12680  00C3F0  6FE3               	movwf	??_configFile_write& (0+255),b
 12681  00C3F2  51E3               	movf	??_configFile_write& (0+255),w,b
 12682  00C3F4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12683  00C3F6  0E00               	movlw	0
 12684  00C3F8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12685  00C3FA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12686  00C3FC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;config_file.c: 287: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 12690  00C3FE  0EB2               	movlw	low _ccw_limit_string
 12691  00C400  6F84               	movwf	__add_item@item_string& (0+255),b
 12692  00C402  0EA2               	movlw	high _ccw_limit_string
 12693  00C404  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12694  00C406  C1BB  F086         	movff	_config+26,__add_item@value
 12695  00C40A  C1BC  F087         	movff	_config+27,__add_item@value+1
 12696  00C40E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12697  00C410  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12698  00C412  0E00               	movlw	low _ConfigFile_buffer
 12699  00C414  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12700  00C416  6F8A               	movwf	__add_item@buffer& (0+255),b
 12701  00C418  0E08               	movlw	high _ConfigFile_buffer
 12702  00C41A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12703  00C41C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12704  00C41E  EC38  F08B         	call	__add_item	;wreg free
 12705  00C422  0100               	movlb	0	; () banked
 12706  00C424  6FE3               	movwf	??_configFile_write& (0+255),b
 12707  00C426  51E3               	movf	??_configFile_write& (0+255),w,b
 12708  00C428  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12709  00C42A  0E00               	movlw	0
 12710  00C42C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12711  00C42E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12712  00C430  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12713                           
 12714                           ; BSR set to: 0
 12715                           ;config_file.c: 288: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12716  00C432  0EA5               	movlw	low _use_cw_limit_string
 12717  00C434  6F84               	movwf	__add_item@item_string& (0+255),b
 12718  00C436  0EA2               	movlw	high _use_cw_limit_string
 12719  00C438  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12720  00C43A  0101               	movlb	1	; () banked
 12721  00C43C  51B7               	movf	(_config+22)& (0+255),w,b
 12722  00C43E  0100               	movlb	0	; () banked
 12723  00C440  6F86               	movwf	__add_item@value& (0+255),b
 12724  00C442  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12725  00C444  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12726  00C446  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12727  00C448  0E00               	movlw	low _ConfigFile_buffer
 12728  00C44A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12729  00C44C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12730  00C44E  0E08               	movlw	high _ConfigFile_buffer
 12731  00C450  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12732  00C452  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12733  00C454  EC38  F08B         	call	__add_item	;wreg free
 12734  00C458  0100               	movlb	0	; () banked
 12735  00C45A  6FE3               	movwf	??_configFile_write& (0+255),b
 12736  00C45C  51E3               	movf	??_configFile_write& (0+255),w,b
 12737  00C45E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12738  00C460  0E00               	movlw	0
 12739  00C462  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12740  00C464  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12741  00C466  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12742                           
 12743                           ; BSR set to: 0
 12744                           ;config_file.c: 289: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12745  00C468  0EBC               	movlw	low _cw_limit_string
 12746  00C46A  6F84               	movwf	__add_item@item_string& (0+255),b
 12747  00C46C  0EA2               	movlw	high _cw_limit_string
 12748  00C46E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12749  00C470  C1B8  F086         	movff	_config+23,__add_item@value
 12750  00C474  C1B9  F087         	movff	_config+24,__add_item@value+1
 12751  00C478  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12752  00C47A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12753  00C47C  0E00               	movlw	low _ConfigFile_buffer
 12754  00C47E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12755  00C480  6F8A               	movwf	__add_item@buffer& (0+255),b
 12756  00C482  0E08               	movlw	high _ConfigFile_buffer
 12757  00C484  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12758  00C486  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12759  00C488  EC38  F08B         	call	__add_item	;wreg free
 12760  00C48C  0100               	movlb	0	; () banked
 12761  00C48E  6FE3               	movwf	??_configFile_write& (0+255),b
 12762  00C490  51E3               	movf	??_configFile_write& (0+255),w,b
 12763  00C492  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12764  00C494  0E00               	movlw	0
 12765  00C496  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12766  00C498  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12767  00C49A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12768                           
 12769                           ; BSR set to: 0
 12770                           ;config_file.c: 290: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12771  00C49C  0E7B               	movlw	low _beep_duration_string
 12772  00C49E  6F84               	movwf	__add_item@item_string& (0+255),b
 12773  00C4A0  0EA2               	movlw	high _beep_duration_string
 12774  00C4A2  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12775  00C4A4  0101               	movlb	1	; () banked
 12776  00C4A6  51B6               	movf	(_config+21)& (0+255),w,b
 12777  00C4A8  0100               	movlb	0	; () banked
 12778  00C4AA  6F86               	movwf	__add_item@value& (0+255),b
 12779  00C4AC  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12780  00C4AE  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12781  00C4B0  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12782  00C4B2  0E00               	movlw	low _ConfigFile_buffer
 12783  00C4B4  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12784  00C4B6  6F8A               	movwf	__add_item@buffer& (0+255),b
 12785  00C4B8  0E08               	movlw	high _ConfigFile_buffer
 12786  00C4BA  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12787  00C4BC  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12788  00C4BE  EC38  F08B         	call	__add_item	;wreg free
 12789  00C4C2  0100               	movlb	0	; () banked
 12790  00C4C4  6FE3               	movwf	??_configFile_write& (0+255),b
 12791  00C4C6  51E3               	movf	??_configFile_write& (0+255),w,b
 12792  00C4C8  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12793  00C4CA  0E00               	movlw	0
 12794  00C4CC  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12795  00C4CE  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12796  00C4D0  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12797                           
 12798                           ; BSR set to: 0
 12799                           ;config_file.c: 293: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12800  00C4D2  0EC0               	movlw	low _configFile_used_name
 12801  00C4D4  6F8B               	movwf	fat_find_file@name& (0+255),b
 12802  00C4D6  0E02               	movlw	high _configFile_used_name
 12803  00C4D8  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12804  00C4DA  0ED0               	movlw	low _configFile_used_extention
 12805  00C4DC  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12806  00C4DE  0E02               	movlw	high _configFile_used_extention
 12807  00C4E0  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12808  00C4E2  EC12  F08E         	call	_fat_find_file	;wreg free
 12809  00C4E6  0100               	movlb	0	; () banked
 12810  00C4E8  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;config_file.c: 294: if(file_number==0xFF)
 12814  00C4EA  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12815  00C4EC  A4D8               	btfss	status,2,c
 12816  00C4EE  D015               	goto	l2980
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;config_file.c: 295: {;config_file.c: 296: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12820  00C4F0  0EC0               	movlw	low _configFile_used_name
 12821  00C4F2  6FAC               	movwf	fat_create_file@name& (0+255),b
 12822  00C4F4  0E02               	movlw	high _configFile_used_name
 12823  00C4F6  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12824  00C4F8  0ED0               	movlw	low _configFile_used_extention
 12825  00C4FA  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12826  00C4FC  0E02               	movlw	high _configFile_used_extention
 12827  00C4FE  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12828  00C500  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12829  00C504  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12830  00C508  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12831  00C50C  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12832  00C510  EC04  F082         	call	_fat_create_file	;wreg free
 12833  00C514  0100               	movlb	0	; () banked
 12834  00C516  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12835                           
 12836                           ;config_file.c: 297: }
 12837  00C518  D00B               	goto	l2981
 12838  00C51A                     l2980:
 12839                           
 12840                           ; BSR set to: 0
 12841                           ;config_file.c: 298: else;config_file.c: 299: {;config_file.c: 300: fat_resize_file(file
      +                          _number, file_size);
 12842                           
 12843                           ; BSR set to: 0
 12844  00C51A  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12845  00C51E  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12846  00C522  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12847  00C526  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12848  00C52A  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12849  00C52C  ECBC  F089         	call	_fat_resize_file
 12850  00C530                     l2981:
 12851                           
 12852                           ;config_file.c: 301: };config_file.c: 304: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12853  00C530  0E00               	movlw	0
 12854  00C532  0100               	movlb	0	; () banked
 12855  00C534  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12856  00C536  0E00               	movlw	0
 12857  00C538  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12858  00C53A  0E00               	movlw	0
 12859  00C53C  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12860  00C53E  0E00               	movlw	0
 12861  00C540  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12862  00C542  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12863  00C546  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12864  00C54A  0E00               	movlw	low _ConfigFile_buffer
 12865  00C54C  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12866  00C54E  0E08               	movlw	high _ConfigFile_buffer
 12867  00C550  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12868  00C552  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12869  00C554  EC06  F073         	call	_fat_modify_file
 12870  00C558  0012               	return		;funcret
 12871  00C55A                     __end_of_configFile_write:
 12872                           	opt stack 0
 12873                           tblptru	equ	0xFF8
 12874                           tblptrh	equ	0xFF7
 12875                           tblptrl	equ	0xFF6
 12876                           tablat	equ	0xFF5
 12877                           prodh	equ	0xFF4
 12878                           prodl	equ	0xFF3
 12879                           postinc0	equ	0xFEE
 12880                           wreg	equ	0xFE8
 12881                           postdec1	equ	0xFE5
 12882                           plusw1	equ	0xFE3
 12883                           fsr1h	equ	0xFE2
 12884                           fsr1l	equ	0xFE1
 12885                           indf2	equ	0xFDF
 12886                           postinc2	equ	0xFDE
 12887                           plusw2	equ	0xFDB
 12888                           fsr2h	equ	0xFDA
 12889                           fsr2l	equ	0xFD9
 12890                           status	equ	0xFD8
 12891                           
 12892 ;; *************** function _fat_resize_file *****************
 12893 ;; Defined at:
 12894 ;;		line 910 in file "fat16.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;  file_number     1    wreg     unsigned char 
 12897 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;  file_number     1   90[BANK0 ] unsigned char 
 12900 ;;  root           32   91[BANK0 ] struct .
 12901 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12902 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12903 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12904 ;; Return value:  Size  Location     Type
 12905 ;;                  1    wreg      unsigned char 
 12906 ;; Registers used:
 12907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12908 ;; Tracked objects:
 12909 ;;		On entry : 0/0
 12910 ;;		On exit  : 0/0
 12911 ;;		Unchanged: 0/0
 12912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12913 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12914 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12915 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12916 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12917 ;;Total ram usage:       47 bytes
 12918 ;; Hardware stack levels used:    1
 12919 ;; Hardware stack levels required when called:   17
 12920 ;; This function calls:
 12921 ;;		__make_cluster_chain
 12922 ;;		__root_is_available
 12923 ;;		__write_root
 12924 ;;		_fat_get_file_information
 12925 ;; This function is called by:
 12926 ;;		_configFile_write
 12927 ;;		_fat_append_to_file
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           
 12931                           	psect	text40
 12932  011378                     __ptext40:
 12933                           	opt stack 0
 12934  011378                     _fat_resize_file:
 12935                           	opt stack 11
 12936                           
 12937                           ;incstack = 0
 12938                           ;fat_resize_file@file_number stored from wreg
 12939  011378  0100               	movlb	0	; () banked
 12940  01137A  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12941                           
 12942                           ;fat16.c: 912: rootEntry_t root;;fat16.c: 913: uint16_t old_number_of_clusters;;fat16.c:
      +                           914: uint16_t new_number_of_clusters;;fat16.c: 915: uint16_t first_cluster;;fat16.c: 91
      +                          8: if(file_number>=64)
 12943  01137C  0E3F               	movlw	63
 12944  01137E  0100               	movlb	0	; () banked
 12945  011380  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12946  011382  D002               	goto	l1900
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;fat16.c: 919: {;fat16.c: 921: return 0xFF;
 12950  011384  0EFF               	movlw	255
 12951                           
 12952                           ; BSR set to: 0
 12953  011386  0012               	return	
 12954  011388                     l1900:
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;fat16.c: 922: };fat16.c: 925: if(_root_is_available(file_number))
 12958                           
 12959                           ; BSR set to: 0
 12960  011388  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12961  01138A  EC96  F0A0         	call	__root_is_available
 12962  01138E  0900               	iorlw	0
 12963  011390  B4D8               	btfsc	status,2,c
 12964  011392  D002               	goto	l1902
 12965                           
 12966                           ;fat16.c: 926: {;fat16.c: 928: return 0xFE;
 12967  011394  0EFE               	movlw	254
 12968  011396  0012               	return	
 12969  011398                     l1902:
 12970                           
 12971                           ;fat16.c: 929: };fat16.c: 932: fat_get_file_information(file_number, &root);
 12972  011398  0EBB               	movlw	low fat_resize_file@root
 12973  01139A  0100               	movlb	0	; () banked
 12974  01139C  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12975  01139E  0E00               	movlw	high fat_resize_file@root
 12976  0113A0  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12977  0113A2  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12978  0113A4  ECCB  F09E         	call	_fat_get_file_information
 12979                           
 12980                           ;fat16.c: 935: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12981  0113A8  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12982  0113AC  0EFF               	movlw	255
 12983  0113AE  24DE               	addwf	postinc2,w,c
 12984  0113B0  0100               	movlb	0	; () banked
 12985  0113B2  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12986  0113B4  0E01               	movlw	1
 12987  0113B6  20DE               	addwfc	postinc2,w,c
 12988  0113B8  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12989  0113BA  0E00               	movlw	0
 12990  0113BC  20DE               	addwfc	postinc2,w,c
 12991  0113BE  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12992  0113C0  0E00               	movlw	0
 12993  0113C2  20DE               	addwfc	postinc2,w,c
 12994  0113C4  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12995  0113C6  0E0A               	movlw	10
 12996  0113C8  D005               	goto	u14470
 12997  0113CA                     u14475:
 12998  0113CA  90D8               	bcf	status,0,c
 12999  0113CC  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 13000  0113CE  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13001  0113D0  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13002  0113D2  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13003  0113D4                     u14470:
 13004  0113D4  2EE8               	decfsz	wreg,f,c
 13005  0113D6  D7F9               	goto	u14475
 13006  0113D8  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 13007  0113DC  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 13008                           
 13009                           ; BSR set to: 0
 13010                           ;fat16.c: 936: new_number_of_clusters = (new_file_size+512-1)>>9;
 13011  0113E0  0EFF               	movlw	255
 13012  0113E2  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 13013  0113E4  6FB0               	movwf	??_fat_resize_file& (0+255),b
 13014  0113E6  0E01               	movlw	1
 13015  0113E8  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 13016  0113EA  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 13017  0113EC  0E00               	movlw	0
 13018  0113EE  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 13019  0113F0  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 13020  0113F2  0E00               	movlw	0
 13021  0113F4  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 13022  0113F6  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 13023  0113F8  0E0A               	movlw	10
 13024  0113FA  D005               	goto	u14480
 13025  0113FC                     u14485:
 13026  0113FC  90D8               	bcf	status,0,c
 13027  0113FE  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 13028  011400  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 13029  011402  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 13030  011404  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 13031  011406                     u14480:
 13032  011406  2EE8               	decfsz	wreg,f,c
 13033  011408  D7F9               	goto	u14485
 13034  01140A  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 13035  01140E  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;fat16.c: 939: if(old_number_of_clusters!=new_number_of_clusters)
 13039  011412  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 13040  011414  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 13041  011416  E104               	bnz	u14490
 13042  011418  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 13043  01141A  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 13044  01141C  B4D8               	btfsc	status,2,c
 13045  01141E  D01A               	goto	l1903
 13046  011420                     u14490:
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;fat16.c: 940: {;fat16.c: 941: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 13050  011420  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 13051  011424  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 13052  011428  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 13053  01142C  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 13054  011430  EC91  F06C         	call	__make_cluster_chain	;wreg free
 13055  011434  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 13056  011438  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 13057                           
 13058                           ;fat16.c: 942: if(first_cluster==0xFFFF)
 13059  01143C  0100               	movlb	0	; () banked
 13060  01143E  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 13061  011440  E105               	bnz	l1904
 13062  011442  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 13063  011444  A4D8               	btfss	status,2,c
 13064  011446  D002               	goto	l1904
 13065                           
 13066                           ; BSR set to: 0
 13067                           ;fat16.c: 943: {;fat16.c: 945: return 0xFD;
 13068  011448  0EFD               	movlw	253
 13069                           
 13070                           ; BSR set to: 0
 13071  01144A  0012               	return	
 13072  01144C                     l1904:
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;fat16.c: 946: };fat16.c: 949: root.firstCluster = first_cluster;
 13076  01144C  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 13077  011450  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 13078  011454                     l1903:
 13079                           
 13080                           ; BSR set to: 0
 13081                           ;fat16.c: 950: };fat16.c: 953: root.fileSize = new_file_size;
 13082  011454  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 13083  011458  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 13084  01145C  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 13085  011460  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 13086                           
 13087                           ; BSR set to: 0
 13088                           ;fat16.c: 956: _write_root(file_number, &root);
 13089  011464  0EBB               	movlw	low fat_resize_file@root
 13090  011466  6F88               	movwf	__write_root@data& (0+255),b
 13091  011468  0E00               	movlw	high fat_resize_file@root
 13092  01146A  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13093  01146C  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 13094  01146E  EC19  F0A7         	call	__write_root
 13095                           
 13096                           ;fat16.c: 959: return 0x00;
 13097  011472  0E00               	movlw	0
 13098  011474  0012               	return	
 13099  011476                     __end_of_fat_resize_file:
 13100                           	opt stack 0
 13101                           tblptru	equ	0xFF8
 13102                           tblptrh	equ	0xFF7
 13103                           tblptrl	equ	0xFF6
 13104                           tablat	equ	0xFF5
 13105                           prodh	equ	0xFF4
 13106                           prodl	equ	0xFF3
 13107                           postinc0	equ	0xFEE
 13108                           wreg	equ	0xFE8
 13109                           postdec1	equ	0xFE5
 13110                           plusw1	equ	0xFE3
 13111                           fsr1h	equ	0xFE2
 13112                           fsr1l	equ	0xFE1
 13113                           indf2	equ	0xFDF
 13114                           postinc2	equ	0xFDE
 13115                           plusw2	equ	0xFDB
 13116                           fsr2h	equ	0xFDA
 13117                           fsr2l	equ	0xFD9
 13118                           status	equ	0xFD8
 13119                           
 13120 ;; *************** function _fat_modify_file *****************
 13121 ;; Defined at:
 13122 ;;		line 962 in file "fat16.c"
 13123 ;; Parameters:    Size  Location     Type
 13124 ;;  file_number     1    wreg     unsigned char 
 13125 ;;  start_byte      4   65[BANK0 ] unsigned long 
 13126 ;;  length          2   69[BANK0 ] unsigned int 
 13127 ;;  data            2   71[BANK0 ] PTR unsigned char 
 13128 ;;		 -> ConfigFile_buffer(512), 
 13129 ;; Auto vars:     Size  Location     Type
 13130 ;;  file_number     1   87[BANK0 ] unsigned char 
 13131 ;;  root           32   99[BANK0 ] struct .
 13132 ;;  position        4   95[BANK0 ] unsigned long 
 13133 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 13134 ;;  offset          2   91[BANK0 ] unsigned int 
 13135 ;;  cluster         2   89[BANK0 ] unsigned int 
 13136 ;;  sector          2   85[BANK0 ] unsigned int 
 13137 ;;  return_code     1   88[BANK0 ] unsigned char 
 13138 ;; Return value:  Size  Location     Type
 13139 ;;                  1    wreg      unsigned char 
 13140 ;; Registers used:
 13141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13142 ;; Tracked objects:
 13143 ;;		On entry : 0/0
 13144 ;;		On exit  : 0/0
 13145 ;;		Unchanged: 0/0
 13146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13147 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13148 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13149 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13150 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13151 ;;Total ram usage:       66 bytes
 13152 ;; Hardware stack levels used:    1
 13153 ;; Hardware stack levels required when called:   17
 13154 ;; This function calls:
 13155 ;;		__data_sector_from_cluster
 13156 ;;		__find_nth_cluster
 13157 ;;		__read_fat
 13158 ;;		_fat_get_file_information
 13159 ;;		_flash_partial_write
 13160 ;; This function is called by:
 13161 ;;		_configFile_write
 13162 ;;		_fat_append_to_file
 13163 ;; This function uses a non-reentrant model
 13164 ;;
 13165                           
 13166                           	psect	text41
 13167  00E60C                     __ptext41:
 13168                           	opt stack 0
 13169  00E60C                     _fat_modify_file:
 13170                           	opt stack 11
 13171                           
 13172                           ;incstack = 0
 13173                           ;fat_modify_file@file_number stored from wreg
 13174  00E60C  0100               	movlb	0	; () banked
 13175  00E60E  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 13176                           
 13177                           ;fat16.c: 964: rootEntry_t root;;fat16.c: 965: uint16_t cluster;;fat16.c: 966: uint32_t 
      +                          position;;fat16.c: 967: uint16_t offset;;fat16.c: 968: uint16_t sector;;fat16.c: 969: ui
      +                          nt16_t number_of_bytes;;fat16.c: 970: uint8_t return_code;;fat16.c: 973: return_code = f
      +                          at_get_file_information(file_number, &root);
 13178  00E610  0EC3               	movlw	low fat_modify_file@root
 13179  00E612  0100               	movlb	0	; () banked
 13180  00E614  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 13181  00E616  0E00               	movlw	high fat_modify_file@root
 13182  00E618  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 13183  00E61A  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 13184  00E61C  ECCB  F09E         	call	_fat_get_file_information
 13185  00E620  0100               	movlb	0	; () banked
 13186  00E622  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 13187                           
 13188                           ; BSR set to: 0
 13189                           ;fat16.c: 974: if(return_code!=0x00)
 13190  00E624  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 13191  00E626  A4D8               	btfss	status,2,c
 13192  00E628  0012               	return	
 13193                           
 13194                           ; BSR set to: 0
 13195                           ;fat16.c: 978: };fat16.c: 981: if(start_byte>root.fileSize)
 13196                           
 13197                           ; BSR set to: 0
 13198                           
 13199                           ; BSR set to: 0
 13200                           ;fat16.c: 975: {;fat16.c: 977: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 13201  00E62A  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13202  00E62C  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13203  00E62E  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13204  00E630  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13205  00E632  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13206  00E634  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13207  00E636  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13208  00E638  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13209  00E63A  A0D8               	btfss	status,0,c
 13210  00E63C  0012               	return	
 13211                           
 13212                           ; BSR set to: 0
 13213                           ;fat16.c: 985: };fat16.c: 987: if((start_byte+length) > root.fileSize)
 13214                           
 13215                           ; BSR set to: 0
 13216                           
 13217                           ; BSR set to: 0
 13218                           ;fat16.c: 982: {;fat16.c: 984: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 13219  00E63E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13220  00E640  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 13221  00E642  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13222  00E644  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13223  00E646  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 13224  00E648  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13225  00E64A  0E00               	movlw	0
 13226  00E64C  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 13227  00E64E  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 13228  00E650  0E00               	movlw	0
 13229  00E652  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 13230  00E654  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 13231  00E656  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13232  00E658  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 13233  00E65A  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13234  00E65C  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 13235  00E65E  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13236  00E660  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 13237  00E662  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13238  00E664  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 13239  00E666  B0D8               	btfsc	status,0,c
 13240  00E668  D00E               	goto	l1910
 13241                           
 13242                           ; BSR set to: 0
 13243                           ;fat16.c: 988: {;fat16.c: 990: length = root.fileSize - start_byte;
 13244  00E66A  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13245  00E66E  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13246  00E672  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13247  00E674  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13248  00E676  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13249  00E678  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13250  00E67A  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 13251  00E67C  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13252  00E67E  6FA5               	movwf	fat_modify_file@length& (0+255),b
 13253  00E680  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 13254  00E682  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13255  00E684  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 13256  00E686                     l1910:
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;fat16.c: 991: };fat16.c: 994: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 13260                           
 13261                           ; BSR set to: 0
 13262  00E686  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 13263  00E68A  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 13264  00E68E  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 13265  00E692  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 13266  00E696  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 13267  00E69A  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 13268  00E69E  0E0A               	movlw	10
 13269  00E6A0  D005               	goto	u14540
 13270  00E6A2                     u14545:
 13271  00E6A2  90D8               	bcf	status,0,c
 13272  00E6A4  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 13273  00E6A6  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 13274  00E6A8  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 13275  00E6AA  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 13276  00E6AC                     u14540:
 13277  00E6AC  2EE8               	decfsz	wreg,f,c
 13278  00E6AE  D7F9               	goto	u14545
 13279  00E6B0  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 13280  00E6B4  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 13281  00E6B8  EC7A  F099         	call	__find_nth_cluster	;wreg free
 13282  00E6BC  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 13283  00E6C0  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 13284                           
 13285                           ;fat16.c: 997: position = start_byte & 0xFFFFFE00;
 13286  00E6C4  0E00               	movlw	0
 13287  00E6C6  0100               	movlb	0	; () banked
 13288  00E6C8  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 13289  00E6CA  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13290  00E6CC  0EFE               	movlw	254
 13291  00E6CE  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13292  00E6D0  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13293  00E6D2  0EFF               	movlw	255
 13294  00E6D4  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 13295  00E6D6  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13296  00E6D8  0EFF               	movlw	255
 13297  00E6DA  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 13298  00E6DC  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13299                           
 13300                           ; BSR set to: 0
 13301                           ;fat16.c: 1000: offset = (uint16_t) (start_byte-position);
 13302  00E6DE  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13303  00E6E2  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13304  00E6E6  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13305  00E6E8  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13306  00E6EA  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13307  00E6EC  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13308  00E6EE  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 13309  00E6F0  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13310  00E6F2  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13311  00E6F4  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 13312  00E6F6  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13313  00E6F8  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13314                           
 13315                           ; BSR set to: 0
 13316                           ;fat16.c: 1003: position = 0;
 13317  00E6FA  0E00               	movlw	0
 13318  00E6FC  6FBF               	movwf	fat_modify_file@position& (0+255),b
 13319  00E6FE  0E00               	movlw	0
 13320  00E700  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 13321  00E702  0E00               	movlw	0
 13322  00E704  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 13323  00E706  0E00               	movlw	0
 13324  00E708  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 13325                           
 13326                           ;fat16.c: 1004: while(position < length)
 13327  00E70A  D089               	goto	l1911
 13328  00E70C                     
 13329                           ; BSR set to: 0
 13330                           ;fat16.c: 1005: {;fat16.c: 1007: if(offset==512)
 13331                           
 13332                           ; BSR set to: 0
 13333  00E70C  0E02               	movlw	2
 13334  00E70E  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 13335  00E710  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 13336  00E712  A4D8               	btfss	status,2,c
 13337  00E714  D00F               	goto	l1913
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;fat16.c: 1008: {;fat16.c: 1010: cluster = _read_fat(cluster);
 13341  00E716  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 13342  00E71A  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 13343  00E71E  EC27  F0A4         	call	__read_fat	;wreg free
 13344  00E722  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 13345  00E726  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 13346                           
 13347                           ;fat16.c: 1012: offset = 0;
 13348  00E72A  0E00               	movlw	0
 13349  00E72C  0100               	movlb	0	; () banked
 13350  00E72E  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 13351  00E730  0E00               	movlw	0
 13352  00E732  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 13353  00E734                     l1913:
 13354                           
 13355                           ; BSR set to: 0
 13356                           ;fat16.c: 1013: };fat16.c: 1016: sector = _data_sector_from_cluster(cluster);
 13357                           
 13358                           ; BSR set to: 0
 13359  00E734  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 13360  00E738  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 13361  00E73C  ECD8  F0AC         	call	__data_sector_from_cluster	;wreg free
 13362  00E740  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 13363  00E744  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 13364                           
 13365                           ;fat16.c: 1019: number_of_bytes = 512 - offset;
 13366  00E748  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 13367  00E74C  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 13368  00E750  0100               	movlb	0	; () banked
 13369  00E752  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13370  00E754  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13371  00E756  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13372  00E758  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13373  00E75A  0E00               	movlw	0
 13374  00E75C  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13375  00E75E  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13376  00E760  0E02               	movlw	2
 13377  00E762  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13378  00E764  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13379                           
 13380                           ; BSR set to: 0
 13381                           ;fat16.c: 1020: if(number_of_bytes > (length-position))
 13382  00E766  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13383  00E768  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13384  00E76A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13385  00E76C  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13386  00E76E  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13387  00E770  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13388  00E772  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 13389  00E776  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 13390  00E77A  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 13391  00E77E  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 13392  00E782  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 13393  00E784  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 13394  00E786  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 13395  00E788  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 13396  00E78A  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 13397  00E78C  0E00               	movlw	0
 13398  00E78E  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 13399  00E790  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 13400  00E792  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 13401  00E794  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13402  00E796  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 13403  00E798  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 13404  00E79A  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13405  00E79C  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 13406  00E79E  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 13407  00E7A0  0E00               	movlw	0
 13408  00E7A2  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 13409  00E7A4  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 13410  00E7A6  0E00               	movlw	0
 13411  00E7A8  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 13412  00E7AA  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 13413  00E7AC  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13414  00E7AE  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 13415  00E7B0  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13416  00E7B2  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 13417  00E7B4  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13418  00E7B6  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 13419  00E7B8  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13420  00E7BA  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 13421  00E7BC  B0D8               	btfsc	status,0,c
 13422  00E7BE  D00E               	goto	l1914
 13423                           
 13424                           ; BSR set to: 0
 13425                           ;fat16.c: 1021: {;fat16.c: 1022: number_of_bytes = length - position;
 13426  00E7C0  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 13427  00E7C4  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 13428  00E7C8  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 13429  00E7CA  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 13430  00E7CC  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 13431  00E7CE  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 13432  00E7D0  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13433  00E7D2  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 13434  00E7D4  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 13435  00E7D6  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13436  00E7D8  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 13437  00E7DA  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 13438  00E7DC                     l1914:
 13439                           
 13440                           ; BSR set to: 0
 13441                           ;fat16.c: 1023: };fat16.c: 1026: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 13442                           
 13443                           ; BSR set to: 0
 13444  00E7DC  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 13445  00E7E0  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 13446  00E7E4  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 13447  00E7E8  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 13448  00E7EC  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 13449  00E7F0  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 13450  00E7F4  51BF               	movf	fat_modify_file@position& (0+255),w,b
 13451  00E7F6  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 13452  00E7F8  6F85               	movwf	flash_partial_write@data& (0+255),b
 13453  00E7FA  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 13454  00E7FC  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 13455  00E7FE  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 13456  00E800  EC60  F0A0         	call	_flash_partial_write	;wreg free
 13457                           
 13458                           ;fat16.c: 1029: position += number_of_bytes;
 13459  00E804  0100               	movlb	0	; () banked
 13460  00E806  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13461  00E808  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 13462  00E80A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13463  00E80C  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 13464  00E80E  0E00               	movlw	0
 13465  00E810  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 13466  00E812  0E00               	movlw	0
 13467  00E814  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;fat16.c: 1030: offset += number_of_bytes;
 13471  00E816  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 13472  00E818  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 13473  00E81A  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 13474  00E81C  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 13475  00E81E                     l1911:
 13476                           
 13477                           ; BSR set to: 0
 13478                           
 13479                           ; BSR set to: 0
 13480  00E81E  51A5               	movf	fat_modify_file@length& (0+255),w,b
 13481  00E820  6FA9               	movwf	??_fat_modify_file& (0+255),b
 13482  00E822  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 13483  00E824  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 13484  00E826  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 13485  00E828  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 13486  00E82A  51A9               	movf	??_fat_modify_file& (0+255),w,b
 13487  00E82C  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 13488  00E82E  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 13489  00E830  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 13490  00E832  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 13491  00E834  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 13492  00E836  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 13493  00E838  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 13494  00E83A  B0D8               	btfsc	status,0,c
 13495  00E83C  0012               	return	
 13496  00E83E  D766               	goto	l1912
 13497  00E840                     __end_of_fat_modify_file:
 13498                           	opt stack 0
 13499                           tblptru	equ	0xFF8
 13500                           tblptrh	equ	0xFF7
 13501                           tblptrl	equ	0xFF6
 13502                           tablat	equ	0xFF5
 13503                           prodh	equ	0xFF4
 13504                           prodl	equ	0xFF3
 13505                           postinc0	equ	0xFEE
 13506                           wreg	equ	0xFE8
 13507                           postdec1	equ	0xFE5
 13508                           plusw1	equ	0xFE3
 13509                           fsr1h	equ	0xFE2
 13510                           fsr1l	equ	0xFE1
 13511                           indf2	equ	0xFDF
 13512                           postinc2	equ	0xFDE
 13513                           plusw2	equ	0xFDB
 13514                           fsr2h	equ	0xFDA
 13515                           fsr2l	equ	0xFD9
 13516                           status	equ	0xFD8
 13517                           
 13518 ;; *************** function _fat_create_file *****************
 13519 ;; Defined at:
 13520 ;;		line 586 in file "fat16.c"
 13521 ;; Parameters:    Size  Location     Type
 13522 ;;  name            2   76[BANK0 ] PTR unsigned char 
 13523 ;;		 -> configFile_used_name(8), 
 13524 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 13525 ;;		 -> configFile_used_extention(3), 
 13526 ;;  size            4   80[BANK0 ] unsigned long 
 13527 ;; Auto vars:     Size  Location     Type
 13528 ;;  root_entry     32   93[BANK0 ] struct .
 13529 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 13530 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 13531 ;;  file_number     1   92[BANK0 ] unsigned char 
 13532 ;; Return value:  Size  Location     Type
 13533 ;;                  1    wreg      unsigned char 
 13534 ;; Registers used:
 13535 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13536 ;; Tracked objects:
 13537 ;;		On entry : 0/0
 13538 ;;		On exit  : 0/0
 13539 ;;		Unchanged: 0/0
 13540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13541 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13542 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13543 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13544 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13545 ;;Total ram usage:       49 bytes
 13546 ;; Hardware stack levels used:    1
 13547 ;; Hardware stack levels required when called:   17
 13548 ;; This function calls:
 13549 ;;		__get_available_root_entry
 13550 ;;		__get_date
 13551 ;;		__get_time
 13552 ;;		__make_cluster_chain
 13553 ;;		__write_root
 13554 ;;		_fat_find_file
 13555 ;;		_memcpy
 13556 ;; This function is called by:
 13557 ;;		_configFile_write
 13558 ;;		_fat_copy_file
 13559 ;; This function uses a non-reentrant model
 13560 ;;
 13561                           
 13562                           	psect	text42
 13563  010408                     __ptext42:
 13564                           	opt stack 0
 13565  010408                     _fat_create_file:
 13566                           	opt stack 11
 13567                           
 13568                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 13569                           
 13570                           ; BSR set to: 0
 13571                           ;incstack = 0
 13572  010408  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 13573  01040C  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 13574  010410  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 13575  010414  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 13576  010418  EC12  F08E         	call	_fat_find_file	;wreg free
 13577  01041C  0AFF               	xorlw	255
 13578  01041E  B4D8               	btfsc	status,2,c
 13579  010420  D002               	goto	l1849
 13580                           
 13581                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;
 13582  010422  0EFF               	movlw	255
 13583  010424  0012               	return	
 13584  010426                     l1849:
 13585                           
 13586                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 13587  010426  EC1E  F0AB         	call	__get_available_root_entry	;wreg free
 13588  01042A  0100               	movlb	0	; () banked
 13589  01042C  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 13590                           
 13591                           ; BSR set to: 0
 13592                           ;fat16.c: 605: if(file_number == 0xFF)
 13593  01042E  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 13594  010430  A4D8               	btfss	status,2,c
 13595  010432  D002               	goto	l1851
 13596                           
 13597                           ; BSR set to: 0
 13598                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;
 13599  010434  0EFE               	movlw	254
 13600                           
 13601                           ; BSR set to: 0
 13602  010436  0012               	return	
 13603  010438                     l1851:
 13604                           
 13605                           ; BSR set to: 0
 13606                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 13607                           
 13608                           ; BSR set to: 0
 13609  010438  0EFF               	movlw	255
 13610  01043A  25B0               	addwf	fat_create_file@size& (0+255),w,b
 13611  01043C  6FB4               	movwf	??_fat_create_file& (0+255),b
 13612  01043E  0E01               	movlw	1
 13613  010440  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 13614  010442  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 13615  010444  0E00               	movlw	0
 13616  010446  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 13617  010448  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 13618  01044A  0E00               	movlw	0
 13619  01044C  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 13620  01044E  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 13621  010450  0E0A               	movlw	10
 13622  010452  D005               	goto	u14430
 13623  010454                     u14435:
 13624  010454  90D8               	bcf	status,0,c
 13625  010456  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 13626  010458  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 13627  01045A  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 13628  01045C  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 13629  01045E                     u14430:
 13630  01045E  2EE8               	decfsz	wreg,f,c
 13631  010460  D7F9               	goto	u14435
 13632  010462  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 13633  010466  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 13634                           
 13635                           ; BSR set to: 0
 13636                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 13637  01046A  0E00               	movlw	0
 13638  01046C  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 13639  01046E  0E00               	movlw	0
 13640  010470  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 13641  010472  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 13642  010476  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 13643  01047A  EC91  F06C         	call	__make_cluster_chain	;wreg free
 13644  01047E  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 13645  010482  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 13646                           
 13647                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 13648  010486  0100               	movlb	0	; () banked
 13649  010488  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 13650  01048A  E105               	bnz	l15633
 13651  01048C  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 13652  01048E  A4D8               	btfss	status,2,c
 13653  010490  D002               	goto	l1852
 13654                           
 13655                           ; BSR set to: 0
 13656                           ;fat16.c: 620: {;fat16.c: 623: return 0xFD;
 13657  010492  0EFD               	movlw	253
 13658                           
 13659                           ; BSR set to: 0
 13660  010494  0012               	return	
 13661  010496                     l1852:
 13662  010496                     l15633:
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 13666  010496  0EBD               	movlw	low fat_create_file@root_entry
 13667  010498  6F60               	movwf	memcpy@d1& (0+255),b
 13668  01049A  0E00               	movlw	high fat_create_file@root_entry
 13669  01049C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13670  01049E  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 13671  0104A2  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 13672  0104A6  0E00               	movlw	0
 13673  0104A8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13674  0104AA  0E08               	movlw	8
 13675  0104AC  6F64               	movwf	memcpy@n& (0+255),b
 13676  0104AE  EC5D  F0A2         	call	_memcpy	;wreg free
 13677                           
 13678                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 13679  0104B2  0EC5               	movlw	low (fat_create_file@root_entry+8)
 13680  0104B4  0100               	movlb	0	; () banked
 13681  0104B6  6F60               	movwf	memcpy@d1& (0+255),b
 13682  0104B8  0E00               	movlw	high (fat_create_file@root_entry+8)
 13683  0104BA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 13684  0104BC  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 13685  0104C0  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 13686  0104C4  0E00               	movlw	0
 13687  0104C6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 13688  0104C8  0E03               	movlw	3
 13689  0104CA  6F64               	movwf	memcpy@n& (0+255),b
 13690  0104CC  EC5D  F0A2         	call	_memcpy	;wreg free
 13691                           
 13692                           ;fat16.c: 629: root_entry.attributes = 0x00;
 13693  0104D0  0E00               	movlw	0
 13694  0104D2  0100               	movlb	0	; () banked
 13695  0104D4  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 13699  0104D6  0E00               	movlw	0
 13700  0104D8  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 13701                           
 13702                           ; BSR set to: 0
 13703                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 13704  0104DA  0E00               	movlw	0
 13705  0104DC  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 13706                           
 13707                           ; BSR set to: 0
 13708                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 13709  0104DE  ECEF  F0AC         	call	__get_time	;wreg free
 13710  0104E2  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13711  0104E6  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13712                           
 13713                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 13714  0104EA  ECF5  F0AC         	call	__get_date	;wreg free
 13715  0104EE  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13716  0104F2  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13717                           
 13718                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 13719  0104F6  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13720  0104FA  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13721                           
 13722                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 13723  0104FE  0E00               	movlw	0
 13724  010500  0100               	movlb	0	; () banked
 13725  010502  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13726  010504  0E00               	movlw	0
 13727  010506  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13728                           
 13729                           ; BSR set to: 0
 13730                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 13731  010508  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13732  01050C  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 13736  010510  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13737  010514  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13738                           
 13739                           ; BSR set to: 0
 13740                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 13741  010518  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13742  01051C  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;fat16.c: 639: root_entry.fileSize = size;
 13746  010520  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13747  010524  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13748  010528  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13749  01052C  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13750                           
 13751                           ; BSR set to: 0
 13752                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 13753  010530  0EBD               	movlw	low fat_create_file@root_entry
 13754  010532  6F88               	movwf	__write_root@data& (0+255),b
 13755  010534  0E00               	movlw	high fat_create_file@root_entry
 13756  010536  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13757  010538  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13758  01053A  EC19  F0A7         	call	__write_root
 13759                           
 13760                           ;fat16.c: 644: return file_number;
 13761  01053E  0100               	movlb	0	; () banked
 13762  010540  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13763  010542  0012               	return	
 13764  010544                     __end_of_fat_create_file:
 13765                           	opt stack 0
 13766                           tblptru	equ	0xFF8
 13767                           tblptrh	equ	0xFF7
 13768                           tblptrl	equ	0xFF6
 13769                           tablat	equ	0xFF5
 13770                           prodh	equ	0xFF4
 13771                           prodl	equ	0xFF3
 13772                           postinc0	equ	0xFEE
 13773                           wreg	equ	0xFE8
 13774                           postdec1	equ	0xFE5
 13775                           plusw1	equ	0xFE3
 13776                           fsr1h	equ	0xFE2
 13777                           fsr1l	equ	0xFE1
 13778                           indf2	equ	0xFDF
 13779                           postinc2	equ	0xFDE
 13780                           plusw2	equ	0xFDB
 13781                           fsr2h	equ	0xFDA
 13782                           fsr2l	equ	0xFD9
 13783                           status	equ	0xFD8
 13784                           
 13785 ;; *************** function __write_root *****************
 13786 ;; Defined at:
 13787 ;;		line 473 in file "fat16.c"
 13788 ;; Parameters:    Size  Location     Type
 13789 ;;  file_number     1    wreg     unsigned char 
 13790 ;;  data            2   40[BANK0 ] PTR struct .
 13791 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13792 ;; Auto vars:     Size  Location     Type
 13793 ;;  file_number     1   46[BANK0 ] unsigned char 
 13794 ;;  offset          2   44[BANK0 ] unsigned int 
 13795 ;;  sector          2   42[BANK0 ] unsigned int 
 13796 ;; Return value:  Size  Location     Type
 13797 ;;                  1    wreg      void 
 13798 ;; Registers used:
 13799 ;;		wreg, status,2, status,0, cstack
 13800 ;; Tracked objects:
 13801 ;;		On entry : 0/0
 13802 ;;		On exit  : 0/0
 13803 ;;		Unchanged: 0/0
 13804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13805 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13806 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13808 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13809 ;;Total ram usage:        7 bytes
 13810 ;; Hardware stack levels used:    1
 13811 ;; Hardware stack levels required when called:   15
 13812 ;; This function calls:
 13813 ;;		__offset_from_file_number
 13814 ;;		__sector_from_file_number
 13815 ;;		_flash_partial_write
 13816 ;; This function is called by:
 13817 ;;		_fat_create_file
 13818 ;;		_fat_resize_file
 13819 ;;		_fat_rename_file
 13820 ;; This function uses a non-reentrant model
 13821 ;;
 13822                           
 13823                           	psect	text43
 13824  014E32                     __ptext43:
 13825                           	opt stack 0
 13826  014E32                     __write_root:
 13827                           	opt stack 12
 13828                           
 13829                           ;incstack = 0
 13830                           ;__write_root@file_number stored from wreg
 13831  014E32  0100               	movlb	0	; () banked
 13832  014E34  6F8E               	movwf	__write_root@file_number& (0+255),b
 13833                           
 13834                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 13835  014E36  0100               	movlb	0	; () banked
 13836  014E38  518E               	movf	__write_root@file_number& (0+255),w,b
 13837  014E3A  EC24  F0AA         	call	__sector_from_file_number
 13838  014E3E  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13839  014E42  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13840                           
 13841                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 13842  014E46  0100               	movlb	0	; () banked
 13843  014E48  518E               	movf	__write_root@file_number& (0+255),w,b
 13844  014E4A  EC33  F0AB         	call	__offset_from_file_number
 13845  014E4E  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13846  014E52  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13847                           
 13848                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 13849  014E56  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13850  014E5A  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13851  014E5E  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13852  014E62  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13853  014E66  0E00               	movlw	0
 13854  014E68  0100               	movlb	0	; () banked
 13855  014E6A  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13856  014E6C  0E20               	movlw	32
 13857  014E6E  6F83               	movwf	flash_partial_write@length& (0+255),b
 13858  014E70  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13859  014E74  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13860  014E78  EC60  F0A0         	call	_flash_partial_write	;wreg free
 13861  014E7C  0012               	return		;funcret
 13862  014E7E                     __end_of__write_root:
 13863                           	opt stack 0
 13864                           tblptru	equ	0xFF8
 13865                           tblptrh	equ	0xFF7
 13866                           tblptrl	equ	0xFF6
 13867                           tablat	equ	0xFF5
 13868                           prodh	equ	0xFF4
 13869                           prodl	equ	0xFF3
 13870                           postinc0	equ	0xFEE
 13871                           wreg	equ	0xFE8
 13872                           postdec1	equ	0xFE5
 13873                           plusw1	equ	0xFE3
 13874                           fsr1h	equ	0xFE2
 13875                           fsr1l	equ	0xFE1
 13876                           indf2	equ	0xFDF
 13877                           postinc2	equ	0xFDE
 13878                           plusw2	equ	0xFDB
 13879                           fsr2h	equ	0xFDA
 13880                           fsr2l	equ	0xFD9
 13881                           status	equ	0xFD8
 13882                           
 13883 ;; *************** function _flash_partial_write *****************
 13884 ;; Defined at:
 13885 ;;		line 460 in file "flash.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;  page            2   31[BANK0 ] unsigned int 
 13888 ;;  start           2   33[BANK0 ] unsigned int 
 13889 ;;  length          2   35[BANK0 ] unsigned int 
 13890 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13891 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13892 ;;		 -> _delete_root@deleted_value(1), 
 13893 ;; Auto vars:     Size  Location     Type
 13894 ;;  match           1   39[BANK0 ] enum E7013
 13895 ;; Return value:  Size  Location     Type
 13896 ;;                  1    wreg      void 
 13897 ;; Registers used:
 13898 ;;		wreg, status,2, status,0, cstack
 13899 ;; Tracked objects:
 13900 ;;		On entry : 0/0
 13901 ;;		On exit  : 0/0
 13902 ;;		Unchanged: 0/0
 13903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13904 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13905 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13906 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13907 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13908 ;;Total ram usage:        9 bytes
 13909 ;; Hardware stack levels used:    1
 13910 ;; Hardware stack levels required when called:   14
 13911 ;; This function calls:
 13912 ;;		__flash_compare_page_to_buffer
 13913 ;;		__flash_copy_page_to_buffer
 13914 ;;		__flash_is_busy
 13915 ;;		__flash_write_page_from_buffer
 13916 ;;		__flash_write_to_buffer
 13917 ;; This function is called by:
 13918 ;;		__write_root
 13919 ;;		_fat_modify_file
 13920 ;;		__delete_root
 13921 ;; This function uses a non-reentrant model
 13922 ;;
 13923                           
 13924                           	psect	text44
 13925  0140C0                     __ptext44:
 13926                           	opt stack 0
 13927  0140C0                     _flash_partial_write:
 13928                           	opt stack 12
 13929                           
 13930                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13931                           
 13932                           ;incstack = 0
 13933  0140C0  ECE2  F0AB         	call	__flash_is_busy	;wreg free
 13934  0140C4  0900               	iorlw	0
 13935  0140C6  A4D8               	btfss	status,2,c
 13936  0140C8  D7FB               	goto	_flash_partial_write
 13937                           
 13938                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13939  0140CA  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13940  0140CE  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13941  0140D2  0E00               	movlw	0
 13942  0140D4  0100               	movlb	0	; () banked
 13943  0140D6  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13944  0140D8  EC1A  F0A3         	call	__flash_copy_page_to_buffer	;wreg free
 13945                           
 13946                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13947  0140DC  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13948  0140E0  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13949  0140E4  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13950  0140E8  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13951  0140EC  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13952  0140F0  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13953  0140F4  0E00               	movlw	0
 13954  0140F6  0100               	movlb	0	; () banked
 13955  0140F8  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13956  0140FA  EC01  F0A6         	call	__flash_write_to_buffer	;wreg free
 13957                           
 13958                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13959  0140FE  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13960  014102  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13961  014106  0E00               	movlw	0
 13962  014108  0100               	movlb	0	; () banked
 13963  01410A  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13964  01410C  EC8D  F09E         	call	__flash_compare_page_to_buffer	;wreg free
 13965  014110  0100               	movlb	0	; () banked
 13966  014112  6F87               	movwf	flash_partial_write@match& (0+255),b
 13967                           
 13968                           ; BSR set to: 0
 13969                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13970  014114  0587               	decf	flash_partial_write@match& (0+255),w,b
 13971  014116  A4D8               	btfss	status,2,c
 13972  014118  0012               	return	
 13973                           
 13974                           ; BSR set to: 0
 13975                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13976  01411A  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13977  01411E  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13978  014122  0E00               	movlw	0
 13979  014124  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13980  014126  ECA1  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 13981  01412A  0012               	return	
 13982  01412C                     __end_of_flash_partial_write:
 13983                           	opt stack 0
 13984                           tblptru	equ	0xFF8
 13985                           tblptrh	equ	0xFF7
 13986                           tblptrl	equ	0xFF6
 13987                           tablat	equ	0xFF5
 13988                           prodh	equ	0xFF4
 13989                           prodl	equ	0xFF3
 13990                           postinc0	equ	0xFEE
 13991                           wreg	equ	0xFE8
 13992                           postdec1	equ	0xFE5
 13993                           plusw1	equ	0xFE3
 13994                           fsr1h	equ	0xFE2
 13995                           fsr1l	equ	0xFE1
 13996                           indf2	equ	0xFDF
 13997                           postinc2	equ	0xFDE
 13998                           plusw2	equ	0xFDB
 13999                           fsr2h	equ	0xFDA
 14000                           fsr2l	equ	0xFD9
 14001                           status	equ	0xFD8
 14002                           
 14003 ;; *************** function __flash_copy_page_to_buffer *****************
 14004 ;; Defined at:
 14005 ;;		line 154 in file "flash.c"
 14006 ;; Parameters:    Size  Location     Type
 14007 ;;  page            2   19[BANK0 ] unsigned int 
 14008 ;;  buffer          1   21[BANK0 ] enum E7009
 14009 ;; Auto vars:     Size  Location     Type
 14010 ;;  command         4   25[BANK0 ] unsigned char [4]
 14011 ;; Return value:  Size  Location     Type
 14012 ;;                  1    wreg      void 
 14013 ;; Registers used:
 14014 ;;		wreg, status,2, status,0, cstack
 14015 ;; Tracked objects:
 14016 ;;		On entry : 0/0
 14017 ;;		On exit  : 0/0
 14018 ;;		Unchanged: 0/0
 14019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14020 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14021 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14022 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14023 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14024 ;;Total ram usage:       10 bytes
 14025 ;; Hardware stack levels used:    1
 14026 ;; Hardware stack levels required when called:   13
 14027 ;; This function calls:
 14028 ;;		__flash_is_busy
 14029 ;;		_spi_tx
 14030 ;; This function is called by:
 14031 ;;		_flash_partial_write
 14032 ;;		_flash_copy_page_to_buffer
 14033 ;; This function uses a non-reentrant model
 14034 ;;
 14035                           
 14036                           	psect	text45
 14037  014634                     __ptext45:
 14038                           	opt stack 0
 14039  014634                     __flash_copy_page_to_buffer:
 14040                           	opt stack 12
 14041                           
 14042                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 14043                           
 14044                           ;incstack = 0
 14045  014634  ECE2  F0AB         	call	__flash_is_busy	;wreg free
 14046  014638  0900               	iorlw	0
 14047  01463A  A4D8               	btfss	status,2,c
 14048  01463C  D7FB               	goto	__flash_copy_page_to_buffer
 14049                           
 14050                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 14051  01463E  0100               	movlb	0	; () banked
 14052  014640  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14053  014642  A4D8               	btfss	status,2,c
 14054  014644  D002               	goto	l1540
 14055                           
 14056                           ; BSR set to: 0
 14057                           ;flash.c: 163: command[0] = 0x53;
 14058  014646  0E53               	movlw	83
 14059  014648  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14060  01464A                     l1540:
 14061                           
 14062                           ; BSR set to: 0
 14063                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 14064                           
 14065                           ; BSR set to: 0
 14066  01464A  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 14067  01464C  A4D8               	btfss	status,2,c
 14068  01464E  D002               	goto	l1541
 14069                           
 14070                           ; BSR set to: 0
 14071                           ;flash.c: 165: command[0] = 0x55;
 14072  014650  0E55               	movlw	85
 14073  014652  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 14074  014654                     l1541:
 14075                           
 14076                           ; BSR set to: 0
 14077                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 14078                           
 14079                           ; BSR set to: 0
 14080  014654  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 14081  014658  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 14082  01465C  0E07               	movlw	7
 14083  01465E  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 14084  014660                     u11635:
 14085  014660  90D8               	bcf	status,0,c
 14086  014662  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 14087  014664  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 14088  014666  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 14089  014668  D7FB               	goto	u11635
 14090  01466A  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 14091  01466C  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 14092                           
 14093                           ; BSR set to: 0
 14094                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 14095  01466E  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14096  014670  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 14097  014672  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 14098                           
 14099                           ;flash.c: 169: command[3] = 0x00;
 14100  014674  0E00               	movlw	0
 14101  014676  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 14102                           
 14103                           ; BSR set to: 0
 14104                           ;flash.c: 172: spi_tx(command, 4);
 14105  014678  0E79               	movlw	low __flash_copy_page_to_buffer@command
 14106  01467A  6F60               	movwf	spi_tx@data& (0+255),b
 14107  01467C  0E00               	movlw	high __flash_copy_page_to_buffer@command
 14108  01467E  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 14109  014680  0E00               	movlw	0
 14110  014682  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 14111  014684  0E04               	movlw	4
 14112  014686  6F62               	movwf	spi_tx@length& (0+255),b
 14113  014688  ECCE  F0A3         	call	_spi_tx	;wreg free
 14114  01468C  0012               	return		;funcret
 14115  01468E                     __end_of__flash_copy_page_to_buffer:
 14116                           	opt stack 0
 14117                           tblptru	equ	0xFF8
 14118                           tblptrh	equ	0xFF7
 14119                           tblptrl	equ	0xFF6
 14120                           tablat	equ	0xFF5
 14121                           prodh	equ	0xFF4
 14122                           prodl	equ	0xFF3
 14123                           postinc0	equ	0xFEE
 14124                           wreg	equ	0xFE8
 14125                           postdec1	equ	0xFE5
 14126                           plusw1	equ	0xFE3
 14127                           fsr1h	equ	0xFE2
 14128                           fsr1l	equ	0xFE1
 14129                           indf2	equ	0xFDF
 14130                           postinc2	equ	0xFDE
 14131                           plusw2	equ	0xFDB
 14132                           fsr2h	equ	0xFDA
 14133                           fsr2l	equ	0xFD9
 14134                           status	equ	0xFD8
 14135                           
 14136 ;; *************** function __make_cluster_chain *****************
 14137 ;; Defined at:
 14138 ;;		line 213 in file "fat16.c"
 14139 ;; Parameters:    Size  Location     Type
 14140 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 14141 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 14142 ;; Auto vars:     Size  Location     Type
 14143 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 14144 ;;  offset          2   72[BANK0 ] unsigned int 
 14145 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 14146 ;;  sector          2   68[BANK0 ] unsigned int 
 14147 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 14148 ;;  different_se    2   63[BANK0 ] unsigned int 
 14149 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 14150 ;;  next_offset     2   59[BANK0 ] unsigned int 
 14151 ;;  data_changed    1   65[BANK0 ] unsigned char 
 14152 ;; Return value:  Size  Location     Type
 14153 ;;                  2   53[BANK0 ] unsigned int 
 14154 ;; Registers used:
 14155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14156 ;; Tracked objects:
 14157 ;;		On entry : 0/0
 14158 ;;		On exit  : 0/0
 14159 ;;		Unchanged: 0/0
 14160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14161 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14162 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14163 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14164 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14165 ;;Total ram usage:       23 bytes
 14166 ;; Hardware stack levels used:    1
 14167 ;; Hardware stack levels required when called:   16
 14168 ;; This function calls:
 14169 ;;		__fat_offset_from_cluster
 14170 ;;		__fat_sector_from_cluster
 14171 ;;		__get_available_cluster
 14172 ;;		__get_available_offset_from_buffer
 14173 ;;		__read_value_from_offset
 14174 ;;		__write_value_to_offset
 14175 ;;		_flash_sector_read
 14176 ;;		_flash_sector_write
 14177 ;; This function is called by:
 14178 ;;		_fat_create_file
 14179 ;;		_fat_resize_file
 14180 ;;		_fat_delete_file
 14181 ;; This function uses a non-reentrant model
 14182 ;;
 14183                           
 14184                           	psect	text46
 14185  00D922                     __ptext46:
 14186                           	opt stack 0
 14187  00D922                     __make_cluster_chain:
 14188                           	opt stack 11
 14189                           
 14190                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 14191                           
 14192                           ;incstack = 0
 14193  00D922  0E00               	movlw	0
 14194  00D924  0100               	movlb	0	; () banked
 14195  00D926  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 14196  00D928  0E00               	movlw	0
 14197  00D92A  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 14198                           
 14199                           ; BSR set to: 0
 14200                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 14201  00D92C  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 14202  00D930  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 14203                           
 14204                           ;fat16.c: 228: minimum_sector = 2;
 14205  00D934  0E00               	movlw	0
 14206  00D936  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 14207  00D938  0E02               	movlw	2
 14208  00D93A  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 14209                           
 14210                           ;fat16.c: 229: data_changed = 0;
 14211  00D93C  0E00               	movlw	0
 14212  00D93E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14213                           
 14214                           ; BSR set to: 0
 14215                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 14216  00D940  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14217  00D942  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14218  00D944  A4D8               	btfss	status,2,c
 14219  00D946  D024               	goto	l1774
 14220                           
 14221                           ; BSR set to: 0
 14222  00D948  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14223  00D94A  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14224  00D94C  B4D8               	btfsc	status,2,c
 14225  00D94E  D020               	goto	l1774
 14226                           
 14227                           ; BSR set to: 0
 14228                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 14229  00D950  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14230  00D954  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14231  00D958  0E00               	movlw	0
 14232  00D95A  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 14233  00D95C  0E00               	movlw	0
 14234  00D95E  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 14235  00D960  ECAC  F093         	call	__get_available_cluster	;wreg free
 14236  00D964  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 14237  00D968  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 14238                           
 14239                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 14240  00D96C  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 14241  00D970  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 14242  00D974  EC65  F0AC         	call	__fat_sector_from_cluster	;wreg free
 14243  00D978  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14244  00D97C  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14245                           
 14246                           ;fat16.c: 237: if(first_cluster == 0)
 14247  00D980  0100               	movlb	0	; () banked
 14248  00D982  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 14249  00D984  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 14250  00D986  A4D8               	btfss	status,2,c
 14251  00D988  D003               	goto	l1774
 14252                           
 14253                           ; BSR set to: 0
 14254                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 14255  00D98A  6995               	setf	?__make_cluster_chain& (0+255),b
 14256  00D98C  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14257  00D98E  0012               	return	
 14258  00D990                     l1774:
 14259                           
 14260                           ; BSR set to: 0
 14261                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 14262                           
 14263                           ; BSR set to: 0
 14264  00D990  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 14265  00D994  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 14266                           
 14267                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 14268  00D998  D103               	goto	l1791
 14269  00D99A                     
 14270                           ; BSR set to: 0
 14271                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 14272                           
 14273                           ; BSR set to: 0
 14274  00D99A  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 14275  00D99E  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 14276  00D9A2  EC65  F0AC         	call	__fat_sector_from_cluster	;wreg free
 14277  00D9A6  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 14278  00D9AA  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 14279                           
 14280                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 14281  00D9AE  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 14282  00D9B2  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 14283  00D9B6  EC72  F0AC         	call	__fat_offset_from_cluster	;wreg free
 14284  00D9BA  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 14285  00D9BE  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 14286                           
 14287                           ;fat16.c: 263: if(sector != sector_in_buffer)
 14288  00D9C2  0100               	movlb	0	; () banked
 14289  00D9C4  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14290  00D9C6  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 14291  00D9C8  E104               	bnz	u13220
 14292  00D9CA  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14293  00D9CC  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 14294  00D9CE  B4D8               	btfsc	status,2,c
 14295  00D9D0  D037               	goto	l1778
 14296  00D9D2                     u13220:
 14297                           
 14298                           ; BSR set to: 0
 14299                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 14300  00D9D2  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14301  00D9D4  B4D8               	btfsc	status,2,c
 14302  00D9D6  D00A               	goto	l1779
 14303                           
 14304                           ; BSR set to: 0
 14305                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 14306  00D9D8  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14307  00D9DC  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14308  00D9E0  0E00               	movlw	low _buffer
 14309  00D9E2  6F81               	movwf	flash_sector_write@data& (0+255),b
 14310  00D9E4  0E0A               	movlw	high _buffer
 14311  00D9E6  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14312  00D9E8  ECA2  F0A6         	call	_flash_sector_write	;wreg free
 14313  00D9EC                     l1779:
 14314                           
 14315                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 14316  00D9EC  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 14317  00D9F0  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 14318  00D9F4  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 14319  00D9F8  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 14320  00D9FC  ECAC  F093         	call	__get_available_cluster	;wreg free
 14321  00DA00  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 14322  00DA04  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 14323                           
 14324                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 14325  00DA08  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 14326  00DA0C  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 14327  00DA10  EC65  F0AC         	call	__fat_sector_from_cluster	;wreg free
 14328  00DA14  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 14329  00DA18  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 14330                           
 14331                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 14332  00DA1C  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 14333  00DA20  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 14334  00DA24  0E00               	movlw	low _buffer
 14335  00DA26  0100               	movlb	0	; () banked
 14336  00DA28  6F89               	movwf	flash_sector_read@data& (0+255),b
 14337  00DA2A  0E0A               	movlw	high _buffer
 14338  00DA2C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14339  00DA2E  EC84  F0AB         	call	_flash_sector_read	;wreg free
 14340                           
 14341                           ;fat16.c: 279: sector_in_buffer = sector;
 14342  00DA32  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 14343  00DA36  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 14344                           
 14345                           ;fat16.c: 280: data_changed = 0;
 14346  00DA3A  0E00               	movlw	0
 14347  00DA3C  0100               	movlb	0	; () banked
 14348  00DA3E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14349  00DA40                     l1778:
 14350                           
 14351                           ; BSR set to: 0
 14352                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 14353                           
 14354                           ; BSR set to: 0
 14355  00DA40  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14356  00DA42  E104               	bnz	u13240
 14357  00DA44  0E02               	movlw	2
 14358  00DA46  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14359  00DA48  A0D8               	btfss	status,0,c
 14360  00DA4A  D05E               	goto	l1780
 14361  00DA4C                     u13240:
 14362                           
 14363                           ; BSR set to: 0
 14364                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 14365  00DA4C  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14366  00DA50  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14367  00DA54  0E00               	movlw	low _buffer
 14368  00DA56  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14369  00DA58  0E0A               	movlw	high _buffer
 14370  00DA5A  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14371  00DA5C  EC8A  F0A7         	call	__read_value_from_offset	;wreg free
 14372  00DA60  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14373  00DA64  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14374                           
 14375                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 14376  00DA68  0100               	movlb	0	; () banked
 14377  00DA6A  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14378  00DA6C  E104               	bnz	u13250
 14379  00DA6E  0E02               	movlw	2
 14380  00DA70  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14381  00DA72  A0D8               	btfss	status,0,c
 14382  00DA74  D006               	goto	u13260
 14383  00DA76                     u13250:
 14384                           
 14385                           ; BSR set to: 0
 14386  00DA76  0EDA               	movlw	218
 14387  00DA78  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14388  00DA7A  0E1F               	movlw	31
 14389  00DA7C  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14390  00DA7E  A0D8               	btfss	status,0,c
 14391  00DA80  D06B               	goto	l1790
 14392  00DA82                     u13260:
 14393                           
 14394                           ; BSR set to: 0
 14395                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 14396                           
 14397                           ; BSR set to: 0
 14398  00DA82  0E02               	movlw	2
 14399  00DA84  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 14400  00DA86  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14401  00DA88  0E00               	movlw	0
 14402  00DA8A  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 14403  00DA8C  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14404  00DA8E  0E00               	movlw	low _buffer
 14405  00DA90  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14406  00DA92  0E0A               	movlw	high _buffer
 14407  00DA94  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14408  00DA96  ECBD  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14409  00DA9A  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 14410  00DA9E  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 14411                           
 14412                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 14413  00DAA2  0100               	movlb	0	; () banked
 14414  00DAA4  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 14415  00DAA6  E103               	bnz	u13270
 14416  00DAA8  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14417  00DAAA  B4D8               	btfsc	status,2,c
 14418  00DAAC  D013               	goto	l1784
 14419  00DAAE                     u13270:
 14420                           
 14421                           ; BSR set to: 0
 14422                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 14423  00DAAE  0EFE               	movlw	254
 14424  00DAB0  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 14425  00DAB2  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 14426  00DAB4  0EFF               	movlw	255
 14427  00DAB6  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 14428  00DAB8  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14429                           
 14430                           ; BSR set to: 0
 14431                           ;fat16.c: 299: next_cluster <<= 8;
 14432  00DABA  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 14433  00DABC  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 14434  00DABE  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 14435                           
 14436                           ; BSR set to: 0
 14437                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 14438  00DAC0  90D8               	bcf	status,0,c
 14439  00DAC2  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 14440  00DAC4  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 14441  00DAC6  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 14442  00DAC8  6F99               	movwf	??__make_cluster_chain& (0+255),b
 14443  00DACA  5199               	movf	??__make_cluster_chain& (0+255),w,b
 14444  00DACC  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 14445  00DACE  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 14446  00DAD0  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 14447                           
 14448                           ;fat16.c: 301: }
 14449  00DAD2  D00B               	goto	l1787
 14450  00DAD4                     l1784:
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 14454                           
 14455                           ; BSR set to: 0
 14456  00DAD4  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 14457  00DAD6  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 14458  00DAD8  A4D8               	btfss	status,2,c
 14459  00DADA  D003               	goto	l1786
 14460                           
 14461                           ; BSR set to: 0
 14462                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 14463  00DADC  6995               	setf	?__make_cluster_chain& (0+255),b
 14464  00DADE  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 14465  00DAE0  0012               	return	
 14466  00DAE2                     l1786:
 14467                           
 14468                           ; BSR set to: 0
 14469                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 14470  00DAE2  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 14471  00DAE6  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 14472  00DAEA                     l1787:
 14473                           
 14474                           ; BSR set to: 0
 14475                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 14476                           
 14477                           ; BSR set to: 0
 14478                           
 14479                           ; BSR set to: 0
 14480  00DAEA  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14481  00DAEE  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14482  00DAF2  0E00               	movlw	low _buffer
 14483  00DAF4  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14484  00DAF6  0E0A               	movlw	high _buffer
 14485  00DAF8  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14486  00DAFA  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 14487  00DAFE  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 14488  00DB02  EC88  F0A9         	call	__write_value_to_offset	;wreg free
 14489  00DB06  D025               	goto	L90
 14490  00DB08                     l1780:
 14491                           
 14492                           ; BSR set to: 0
 14493                           ;fat16.c: 326: else if(remaining_clusters == 1)
 14494                           
 14495                           ; BSR set to: 0
 14496  00DB08  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14497  00DB0A  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14498  00DB0C  A4D8               	btfss	status,2,c
 14499  00DB0E  D028               	goto	l1789
 14500                           
 14501                           ; BSR set to: 0
 14502                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 14503  00DB10  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14504  00DB14  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14505  00DB18  0E00               	movlw	low _buffer
 14506  00DB1A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14507  00DB1C  0E0A               	movlw	high _buffer
 14508  00DB1E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14509  00DB20  EC8A  F0A7         	call	__read_value_from_offset	;wreg free
 14510  00DB24  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14511  00DB28  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14512                           
 14513                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 14514  00DB2C  0100               	movlb	0	; () banked
 14515  00DB2E  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 14516  00DB30  E103               	bnz	u13300
 14517  00DB32  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14518  00DB34  B4D8               	btfsc	status,2,c
 14519  00DB36  D010               	goto	l1790
 14520  00DB38                     u13300:
 14521                           
 14522                           ; BSR set to: 0
 14523                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 14524  00DB38  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14525  00DB3C  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14526  00DB40  0E00               	movlw	low _buffer
 14527  00DB42  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14528  00DB44  0E0A               	movlw	high _buffer
 14529  00DB46  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14530  00DB48  0EFF               	movlw	255
 14531  00DB4A  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14532  00DB4C  6964               	setf	__write_value_to_offset@value& (0+255),b
 14533  00DB4E  EC88  F0A9         	call	__write_value_to_offset	;wreg free
 14534  00DB52                     L90:
 14535                           
 14536                           ;fat16.c: 336: data_changed = 1;
 14537  00DB52  0E01               	movlw	1
 14538  00DB54  0100               	movlb	0	; () banked
 14539  00DB56  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14540  00DB58                     l1790:
 14541                           
 14542                           ; BSR set to: 0
 14543                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 14544                           
 14545                           ; BSR set to: 0
 14546  00DB58  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 14547  00DB5A  A0D8               	btfss	status,0,c
 14548  00DB5C  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 14549                           
 14550                           ;fat16.c: 341: }
 14551  00DB5E  D020               	goto	l1791
 14552  00DB60                     l1789:
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 14556                           
 14557                           ; BSR set to: 0
 14558  00DB60  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 14559  00DB64  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 14560  00DB68  0E00               	movlw	low _buffer
 14561  00DB6A  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 14562  00DB6C  0E0A               	movlw	high _buffer
 14563  00DB6E  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 14564  00DB70  EC8A  F0A7         	call	__read_value_from_offset	;wreg free
 14565  00DB74  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 14566  00DB78  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 14567                           
 14568                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 14569  00DB7C  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 14570  00DB80  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 14571  00DB84  0E00               	movlw	low _buffer
 14572  00DB86  0100               	movlb	0	; () banked
 14573  00DB88  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 14574  00DB8A  0E0A               	movlw	high _buffer
 14575  00DB8C  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 14576  00DB8E  0E00               	movlw	0
 14577  00DB90  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 14578  00DB92  0E00               	movlw	0
 14579  00DB94  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14580  00DB96  EC88  F0A9         	call	__write_value_to_offset	;wreg free
 14581                           
 14582                           ;fat16.c: 352: data_changed = 1;
 14583  00DB9A  0E01               	movlw	1
 14584  00DB9C  0100               	movlb	0	; () banked
 14585  00DB9E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 14586  00DBA0                     l1791:
 14587                           
 14588                           ; BSR set to: 0
 14589                           
 14590                           ; BSR set to: 0
 14591                           
 14592                           ; BSR set to: 0
 14593                           
 14594                           ; BSR set to: 0
 14595  00DBA0  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 14596  00DBA2  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 14597  00DBA4  A4D8               	btfss	status,2,c
 14598  00DBA6  D6F9               	goto	l1777
 14599                           
 14600                           ; BSR set to: 0
 14601  00DBA8  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14602  00DBAA  E104               	bnz	u13320
 14603  00DBAC  0E02               	movlw	2
 14604  00DBAE  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14605  00DBB0  A0D8               	btfss	status,0,c
 14606  00DBB2  D006               	goto	u13330
 14607  00DBB4                     u13320:
 14608                           
 14609                           ; BSR set to: 0
 14610  00DBB4  0EDA               	movlw	218
 14611  00DBB6  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 14612  00DBB8  0E1F               	movlw	31
 14613  00DBBA  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 14614  00DBBC  A0D8               	btfss	status,0,c
 14615  00DBBE  D6ED               	goto	l1777
 14616  00DBC0                     u13330:
 14617                           
 14618                           ; BSR set to: 0
 14619                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 14620                           
 14621                           ; BSR set to: 0
 14622                           
 14623                           ; BSR set to: 0
 14624  00DBC0  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 14625  00DBC2  B4D8               	btfsc	status,2,c
 14626  00DBC4  D00A               	goto	l1795
 14627                           
 14628                           ; BSR set to: 0
 14629                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 14630  00DBC6  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 14631  00DBCA  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 14632  00DBCE  0E00               	movlw	low _buffer
 14633  00DBD0  6F81               	movwf	flash_sector_write@data& (0+255),b
 14634  00DBD2  0E0A               	movlw	high _buffer
 14635  00DBD4  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 14636  00DBD6  ECA2  F0A6         	call	_flash_sector_write	;wreg free
 14637  00DBDA                     l1795:
 14638                           
 14639                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 14640  00DBDA  0100               	movlb	0	; () banked
 14641  00DBDC  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 14642  00DBDE  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 14643  00DBE0  B4D8               	btfsc	status,2,c
 14644  00DBE2  D005               	goto	l1796
 14645                           
 14646                           ; BSR set to: 0
 14647                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 14648  00DBE4  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 14649  00DBE8  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 14650                           
 14651                           ; BSR set to: 0
 14652                           ;fat16.c: 367: }
 14653  00DBEC  0012               	return	
 14654  00DBEE                     l1796:
 14655                           
 14656                           ; BSR set to: 0
 14657                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 14658                           
 14659                           ; BSR set to: 0
 14660  00DBEE  0E00               	movlw	0
 14661  00DBF0  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 14662  00DBF2  0E00               	movlw	0
 14663  00DBF4  6F95               	movwf	?__make_cluster_chain& (0+255),b
 14664                           
 14665                           ; BSR set to: 0
 14666  00DBF6  0012               	return	
 14667  00DBF8                     __end_of__make_cluster_chain:
 14668                           	opt stack 0
 14669                           tblptru	equ	0xFF8
 14670                           tblptrh	equ	0xFF7
 14671                           tblptrl	equ	0xFF6
 14672                           tablat	equ	0xFF5
 14673                           prodh	equ	0xFF4
 14674                           prodl	equ	0xFF3
 14675                           postinc0	equ	0xFEE
 14676                           wreg	equ	0xFE8
 14677                           postdec1	equ	0xFE5
 14678                           plusw1	equ	0xFE3
 14679                           fsr1h	equ	0xFE2
 14680                           fsr1l	equ	0xFE1
 14681                           indf2	equ	0xFDF
 14682                           postinc2	equ	0xFDE
 14683                           plusw2	equ	0xFDB
 14684                           fsr2h	equ	0xFDA
 14685                           fsr2l	equ	0xFD9
 14686                           status	equ	0xFD8
 14687                           
 14688 ;; *************** function __write_value_to_offset *****************
 14689 ;; Defined at:
 14690 ;;		line 123 in file "fat16.c"
 14691 ;; Parameters:    Size  Location     Type
 14692 ;;  offset          2    0[BANK0 ] unsigned int 
 14693 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14694 ;;		 -> buffer(512), 
 14695 ;;  value           2    4[BANK0 ] unsigned int 
 14696 ;; Auto vars:     Size  Location     Type
 14697 ;;		None
 14698 ;; Return value:  Size  Location     Type
 14699 ;;                  1    wreg      void 
 14700 ;; Registers used:
 14701 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14702 ;; Tracked objects:
 14703 ;;		On entry : 0/0
 14704 ;;		On exit  : 0/0
 14705 ;;		Unchanged: 0/0
 14706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14707 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14709 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14710 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14711 ;;Total ram usage:        8 bytes
 14712 ;; Hardware stack levels used:    1
 14713 ;; Hardware stack levels required when called:   10
 14714 ;; This function calls:
 14715 ;;		Nothing
 14716 ;; This function is called by:
 14717 ;;		__make_cluster_chain
 14718 ;; This function uses a non-reentrant model
 14719 ;;
 14720                           
 14721                           	psect	text47
 14722  015310                     __ptext47:
 14723                           	opt stack 0
 14724  015310                     __write_value_to_offset:
 14725                           	opt stack 16
 14726                           
 14727                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 14728                           
 14729                           ; BSR set to: 0
 14730                           ;incstack = 0
 14731  015310  0100               	movlb	0	; () banked
 14732  015312  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14733  015314  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14734  015316  6ED9               	movwf	fsr2l,c
 14735  015318  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14736  01531A  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14737  01531C  6EDA               	movwf	fsr2h,c
 14738  01531E  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14739                           
 14740                           ; BSR set to: 0
 14741                           ;fat16.c: 126: value >>= 8;
 14742  015322  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14743  015324  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14744  015326  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14745                           
 14746                           ; BSR set to: 0
 14747                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14748  015328  0E01               	movlw	1
 14749  01532A  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14750  01532C  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14751  01532E  0E00               	movlw	0
 14752  015330  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14753  015332  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14754  015334  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14755  015336  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14756  015338  6ED9               	movwf	fsr2l,c
 14757  01533A  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14758  01533C  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14759  01533E  6EDA               	movwf	fsr2h,c
 14760  015340  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14761                           
 14762                           ; BSR set to: 0
 14763  015344  0012               	return		;funcret
 14764  015346                     __end_of__write_value_to_offset:
 14765                           	opt stack 0
 14766                           tblptru	equ	0xFF8
 14767                           tblptrh	equ	0xFF7
 14768                           tblptrl	equ	0xFF6
 14769                           tablat	equ	0xFF5
 14770                           prodh	equ	0xFF4
 14771                           prodl	equ	0xFF3
 14772                           postinc0	equ	0xFEE
 14773                           wreg	equ	0xFE8
 14774                           postdec1	equ	0xFE5
 14775                           plusw1	equ	0xFE3
 14776                           fsr1h	equ	0xFE2
 14777                           fsr1l	equ	0xFE1
 14778                           indf2	equ	0xFDF
 14779                           postinc2	equ	0xFDE
 14780                           plusw2	equ	0xFDB
 14781                           fsr2h	equ	0xFDA
 14782                           fsr2l	equ	0xFD9
 14783                           status	equ	0xFD8
 14784                           
 14785 ;; *************** function __get_available_cluster *****************
 14786 ;; Defined at:
 14787 ;;		line 130 in file "fat16.c"
 14788 ;; Parameters:    Size  Location     Type
 14789 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14790 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14791 ;; Auto vars:     Size  Location     Type
 14792 ;;  sector          2   51[BANK0 ] unsigned int 
 14793 ;;  offset          2   49[BANK0 ] unsigned int 
 14794 ;;  cluster         2   47[BANK0 ] unsigned int 
 14795 ;; Return value:  Size  Location     Type
 14796 ;;                  2   43[BANK0 ] unsigned int 
 14797 ;; Registers used:
 14798 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14799 ;; Tracked objects:
 14800 ;;		On entry : 0/0
 14801 ;;		On exit  : 0/0
 14802 ;;		Unchanged: 0/0
 14803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14804 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14805 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14807 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14808 ;;Total ram usage:       10 bytes
 14809 ;; Hardware stack levels used:    1
 14810 ;; Hardware stack levels required when called:   15
 14811 ;; This function calls:
 14812 ;;		__cluster_from_sector_and_offset
 14813 ;;		__get_available_offset_from_buffer
 14814 ;;		_flash_sector_read
 14815 ;; This function is called by:
 14816 ;;		__make_cluster_chain
 14817 ;; This function uses a non-reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text48
 14821  012758                     __ptext48:
 14822                           	opt stack 0
 14823  012758                     __get_available_cluster:
 14824                           	opt stack 11
 14825                           
 14826                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 14827                           
 14828                           ; BSR set to: 0
 14829                           ;incstack = 0
 14830  012758  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14831  01275C  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14832  012760  0100               	movlb	0	; () banked
 14833  012762  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14834  012764  E15B               	bnz	l13841
 14835  012766  0E22               	movlw	34
 14836  012768  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14837  01276A  B0D8               	btfsc	status,0,c
 14838  01276C  D057               	goto	u12670
 14839                           
 14840                           ; BSR set to: 0
 14841                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 14842                           
 14843                           ; BSR set to: 0
 14844                           
 14845                           ; BSR set to: 0
 14846  01276E  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14847  012770  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14848  012772  E104               	bnz	l13817
 14849  012774  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14850  012776  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14851  012778  B4D8               	btfsc	status,2,c
 14852  01277A  D04D               	goto	l1762
 14853  01277C                     l13817:
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 14857  01277C  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14858  012780  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14859  012784  0E00               	movlw	low _buffer
 14860  012786  6F89               	movwf	flash_sector_read@data& (0+255),b
 14861  012788  0E0A               	movlw	high _buffer
 14862  01278A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14863  01278C  EC84  F0AB         	call	_flash_sector_read	;wreg free
 14864                           
 14865                           ;fat16.c: 149: if(sector == 2)
 14866  012790  0E02               	movlw	2
 14867  012792  0100               	movlb	0	; () banked
 14868  012794  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14869  012796  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14870  012798  A4D8               	btfss	status,2,c
 14871  01279A  D00B               	goto	l1757
 14872                           
 14873                           ; BSR set to: 0
 14874                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 14875  01279C  0E00               	movlw	0
 14876  01279E  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14877  0127A0  0E04               	movlw	4
 14878  0127A2  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14879  0127A4  0E00               	movlw	low _buffer
 14880  0127A6  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14881  0127A8  0E0A               	movlw	high _buffer
 14882  0127AA  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14883  0127AC  ECBD  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14884  0127B0  D00B               	goto	L1
 14885  0127B2                     l1757:
 14886                           
 14887                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14888  0127B2  0E00               	movlw	0
 14889  0127B4  0100               	movlb	0	; () banked
 14890  0127B6  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14891  0127B8  0E00               	movlw	0
 14892  0127BA  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14893  0127BC  0E00               	movlw	low _buffer
 14894  0127BE  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14895  0127C0  0E0A               	movlw	high _buffer
 14896  0127C2  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14897  0127C4  ECBD  F0A2         	call	__get_available_offset_from_buffer	;wreg free
 14898  0127C8                     L1:
 14899  0127C8  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14900  0127CC  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14901                           
 14902                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 14903  0127D0  0100               	movlb	0	; () banked
 14904  0127D2  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14905  0127D4  E103               	bnz	u12650
 14906  0127D6  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14907  0127D8  B4D8               	btfsc	status,2,c
 14908  0127DA  D01D               	goto	l1762
 14909  0127DC                     u12650:
 14910                           
 14911                           ; BSR set to: 0
 14912                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14913  0127DC  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14914  0127E0  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14915  0127E4  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14916  0127E8  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14917  0127EC  EC5C  F0AB         	call	__cluster_from_sector_and_offset	;wreg free
 14918  0127F0  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14919  0127F4  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14920                           
 14921                           ;fat16.c: 165: if(cluster > 8191)
 14922  0127F8  0E20               	movlw	32
 14923  0127FA  0100               	movlb	0	; () banked
 14924  0127FC  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14925  0127FE  A0D8               	btfss	status,0,c
 14926  012800  D005               	goto	l1760
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 14930  012802  0E00               	movlw	0
 14931  012804  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14932  012806  0E00               	movlw	0
 14933  012808  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14934                           
 14935                           ; BSR set to: 0
 14936  01280A  0012               	return	
 14937  01280C                     l1760:
 14938                           
 14939                           ; BSR set to: 0
 14940                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 14941  01280C  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14942  012810  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14943  012814  0012               	return	
 14944  012816                     l1762:
 14945                           
 14946                           ; BSR set to: 0
 14947                           
 14948                           ; BSR set to: 0
 14949                           
 14950                           ; BSR set to: 0
 14951                           
 14952                           ; BSR set to: 0
 14953  012816  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14954  012818  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14955  01281A  D7A3               	goto	L2
 14956  01281C                     u12670:
 14957  01281C                     l13841:
 14958                           
 14959                           ; BSR set to: 0
 14960                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 14961  01281C  0E00               	movlw	0
 14962  01281E  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14963  012820  0E00               	movlw	0
 14964  012822  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14965  012824  0012               	return	
 14966  012826                     __end_of__get_available_cluster:
 14967                           	opt stack 0
 14968                           tblptru	equ	0xFF8
 14969                           tblptrh	equ	0xFF7
 14970                           tblptrl	equ	0xFF6
 14971                           tablat	equ	0xFF5
 14972                           prodh	equ	0xFF4
 14973                           prodl	equ	0xFF3
 14974                           postinc0	equ	0xFEE
 14975                           wreg	equ	0xFE8
 14976                           postdec1	equ	0xFE5
 14977                           plusw1	equ	0xFE3
 14978                           fsr1h	equ	0xFE2
 14979                           fsr1l	equ	0xFE1
 14980                           indf2	equ	0xFDF
 14981                           postinc2	equ	0xFDE
 14982                           plusw2	equ	0xFDB
 14983                           fsr2h	equ	0xFDA
 14984                           fsr2l	equ	0xFD9
 14985                           status	equ	0xFD8
 14986                           
 14987 ;; *************** function __get_available_offset_from_buffer *****************
 14988 ;; Defined at:
 14989 ;;		line 98 in file "fat16.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14992 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14993 ;;		 -> buffer(512), 
 14994 ;; Auto vars:     Size  Location     Type
 14995 ;;  offset          2    6[BANK0 ] unsigned int 
 14996 ;; Return value:  Size  Location     Type
 14997 ;;                  2    0[BANK0 ] unsigned int 
 14998 ;; Registers used:
 14999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15000 ;; Tracked objects:
 15001 ;;		On entry : 0/0
 15002 ;;		On exit  : 0/0
 15003 ;;		Unchanged: 0/0
 15004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15005 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15006 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15007 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15008 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15009 ;;Total ram usage:        8 bytes
 15010 ;; Hardware stack levels used:    1
 15011 ;; Hardware stack levels required when called:   10
 15012 ;; This function calls:
 15013 ;;		Nothing
 15014 ;; This function is called by:
 15015 ;;		__get_available_cluster
 15016 ;;		__make_cluster_chain
 15017 ;; This function uses a non-reentrant model
 15018 ;;
 15019                           
 15020                           	psect	text49
 15021  01457A                     __ptext49:
 15022                           	opt stack 0
 15023  01457A                     __get_available_offset_from_buffer:
 15024                           	opt stack 16
 15025                           
 15026                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 15027                           
 15028                           ; BSR set to: 0
 15029                           ;incstack = 0
 15030  01457A  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 15031  01457E  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 15032  014582  0E02               	movlw	2
 15033  014584  0100               	movlb	0	; () banked
 15034  014586  D022               	goto	L3
 15035  014588                     
 15036                           ; BSR set to: 0
 15037                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 15038                           
 15039                           ; BSR set to: 0
 15040  014588  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15041  01458A  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15042  01458C  6ED9               	movwf	fsr2l,c
 15043  01458E  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15044  014590  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15045  014592  6EDA               	movwf	fsr2h,c
 15046  014594  50DF               	movf	indf2,w,c
 15047  014596  A4D8               	btfss	status,2,c
 15048  014598  D014               	goto	l1743
 15049                           
 15050                           ; BSR set to: 0
 15051  01459A  0E01               	movlw	1
 15052  01459C  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 15053  01459E  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 15054  0145A0  0E00               	movlw	0
 15055  0145A2  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15056  0145A4  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 15057  0145A6  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 15058  0145A8  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 15059  0145AA  6ED9               	movwf	fsr2l,c
 15060  0145AC  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 15061  0145AE  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 15062  0145B0  6EDA               	movwf	fsr2h,c
 15063  0145B2  50DF               	movf	indf2,w,c
 15064  0145B4  A4D8               	btfss	status,2,c
 15065  0145B6  D005               	goto	l1743
 15066                           
 15067                           ; BSR set to: 0
 15068                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 15069  0145B8  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 15070  0145BC  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 15071  0145C0  0012               	return	
 15072  0145C2                     l1743:
 15073                           
 15074                           ; BSR set to: 0
 15075                           
 15076                           ; BSR set to: 0
 15077  0145C2  0E02               	movlw	2
 15078  0145C4  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 15079  0145C6  0E00               	movlw	0
 15080  0145C8  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 15081  0145CA  0E02               	movlw	2
 15082  0145CC                     L3:
 15083  0145CC  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 15084  0145CE  A0D8               	btfss	status,0,c
 15085  0145D0  D7DB               	goto	l1741
 15086                           
 15087                           ; BSR set to: 0
 15088                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 15089  0145D2  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 15090  0145D4  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 15091                           
 15092                           ; BSR set to: 0
 15093  0145D6  0012               	return		;funcret
 15094  0145D8                     __end_of__get_available_offset_from_buffer:
 15095                           	opt stack 0
 15096                           tblptru	equ	0xFF8
 15097                           tblptrh	equ	0xFF7
 15098                           tblptrl	equ	0xFF6
 15099                           tablat	equ	0xFF5
 15100                           prodh	equ	0xFF4
 15101                           prodl	equ	0xFF3
 15102                           postinc0	equ	0xFEE
 15103                           wreg	equ	0xFE8
 15104                           postdec1	equ	0xFE5
 15105                           plusw1	equ	0xFE3
 15106                           fsr1h	equ	0xFE2
 15107                           fsr1l	equ	0xFE1
 15108                           indf2	equ	0xFDF
 15109                           postinc2	equ	0xFDE
 15110                           plusw2	equ	0xFDB
 15111                           fsr2h	equ	0xFDA
 15112                           fsr2l	equ	0xFD9
 15113                           status	equ	0xFD8
 15114                           
 15115 ;; *************** function __cluster_from_sector_and_offset *****************
 15116 ;; Defined at:
 15117 ;;		line 89 in file "fat16.c"
 15118 ;; Parameters:    Size  Location     Type
 15119 ;;  sector          2    0[BANK0 ] unsigned int 
 15120 ;;  offset          2    2[BANK0 ] unsigned int 
 15121 ;; Auto vars:     Size  Location     Type
 15122 ;;		None
 15123 ;; Return value:  Size  Location     Type
 15124 ;;                  2    0[BANK0 ] unsigned int 
 15125 ;; Registers used:
 15126 ;;		wreg, status,2, status,0
 15127 ;; Tracked objects:
 15128 ;;		On entry : 0/0
 15129 ;;		On exit  : 0/0
 15130 ;;		Unchanged: 0/0
 15131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15132 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15135 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15136 ;;Total ram usage:        4 bytes
 15137 ;; Hardware stack levels used:    1
 15138 ;; Hardware stack levels required when called:   10
 15139 ;; This function calls:
 15140 ;;		Nothing
 15141 ;; This function is called by:
 15142 ;;		__get_available_cluster
 15143 ;; This function uses a non-reentrant model
 15144 ;;
 15145                           
 15146                           	psect	text50
 15147  0156B8                     __ptext50:
 15148                           	opt stack 0
 15149  0156B8                     __cluster_from_sector_and_offset:
 15150                           	opt stack 15
 15151                           
 15152                           ;fat16.c: 91: offset >>= 1;
 15153                           
 15154                           ; BSR set to: 0
 15155                           ;incstack = 0
 15156  0156B8  0100               	movlb	0	; () banked
 15157  0156BA  90D8               	bcf	status,0,c
 15158  0156BC  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 15159  0156BE  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 15160                           
 15161                           ; BSR set to: 0
 15162                           ;fat16.c: 92: sector -= 2;
 15163  0156C0  0E02               	movlw	2
 15164  0156C2  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15165  0156C4  0E00               	movlw	0
 15166  0156C6  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15167                           
 15168                           ; BSR set to: 0
 15169                           ;fat16.c: 93: sector <<= 8;
 15170  0156C8  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 15171  0156CA  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 15172  0156CC  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;fat16.c: 94: sector |= offset;
 15176  0156CE  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 15177  0156D0  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 15178  0156D2  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 15179  0156D4  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 15180                           
 15181                           ; BSR set to: 0
 15182                           ;fat16.c: 95: return sector;
 15183  0156D6  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 15184  0156DA  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 15185  0156DE  0012               	return	
 15186  0156E0                     __end_of__cluster_from_sector_and_offset:
 15187                           	opt stack 0
 15188                           tblptru	equ	0xFF8
 15189                           tblptrh	equ	0xFF7
 15190                           tblptrl	equ	0xFF6
 15191                           tablat	equ	0xFF5
 15192                           prodh	equ	0xFF4
 15193                           prodl	equ	0xFF3
 15194                           postinc0	equ	0xFEE
 15195                           wreg	equ	0xFE8
 15196                           postdec1	equ	0xFE5
 15197                           plusw1	equ	0xFE3
 15198                           fsr1h	equ	0xFE2
 15199                           fsr1l	equ	0xFE1
 15200                           indf2	equ	0xFDF
 15201                           postinc2	equ	0xFDE
 15202                           plusw2	equ	0xFDB
 15203                           fsr2h	equ	0xFDA
 15204                           fsr2l	equ	0xFD9
 15205                           status	equ	0xFD8
 15206                           
 15207 ;; *************** function __get_time *****************
 15208 ;; Defined at:
 15209 ;;		line 376 in file "fat16.c"
 15210 ;; Parameters:    Size  Location     Type
 15211 ;;		None
 15212 ;; Auto vars:     Size  Location     Type
 15213 ;;		None
 15214 ;; Return value:  Size  Location     Type
 15215 ;;                  2    0[BANK0 ] unsigned int 
 15216 ;; Registers used:
 15217 ;;		wreg, status,2
 15218 ;; Tracked objects:
 15219 ;;		On entry : 0/0
 15220 ;;		On exit  : 0/0
 15221 ;;		Unchanged: 0/0
 15222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15223 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15224 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15225 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15226 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15227 ;;Total ram usage:        2 bytes
 15228 ;; Hardware stack levels used:    1
 15229 ;; Hardware stack levels required when called:   10
 15230 ;; This function calls:
 15231 ;;		Nothing
 15232 ;; This function is called by:
 15233 ;;		_fat_create_file
 15234 ;; This function uses a non-reentrant model
 15235 ;;
 15236                           
 15237                           	psect	text51
 15238  0159DE                     __ptext51:
 15239                           	opt stack 0
 15240  0159DE                     __get_time:
 15241                           	opt stack 17
 15242                           
 15243                           ;fat16.c: 388: return 0x0000;
 15244                           
 15245                           ; BSR set to: 0
 15246                           ;incstack = 0
 15247  0159DE  0E00               	movlw	0
 15248  0159E0  0100               	movlb	0	; () banked
 15249  0159E2  6F61               	movwf	(?__get_time+1)& (0+255),b
 15250  0159E4  0E00               	movlw	0
 15251  0159E6  6F60               	movwf	?__get_time& (0+255),b
 15252  0159E8  0012               	return	
 15253  0159EA                     __end_of__get_time:
 15254                           	opt stack 0
 15255                           tblptru	equ	0xFF8
 15256                           tblptrh	equ	0xFF7
 15257                           tblptrl	equ	0xFF6
 15258                           tablat	equ	0xFF5
 15259                           prodh	equ	0xFF4
 15260                           prodl	equ	0xFF3
 15261                           postinc0	equ	0xFEE
 15262                           wreg	equ	0xFE8
 15263                           postdec1	equ	0xFE5
 15264                           plusw1	equ	0xFE3
 15265                           fsr1h	equ	0xFE2
 15266                           fsr1l	equ	0xFE1
 15267                           indf2	equ	0xFDF
 15268                           postinc2	equ	0xFDE
 15269                           plusw2	equ	0xFDB
 15270                           fsr2h	equ	0xFDA
 15271                           fsr2l	equ	0xFD9
 15272                           status	equ	0xFD8
 15273                           
 15274 ;; *************** function __get_date *****************
 15275 ;; Defined at:
 15276 ;;		line 392 in file "fat16.c"
 15277 ;; Parameters:    Size  Location     Type
 15278 ;;		None
 15279 ;; Auto vars:     Size  Location     Type
 15280 ;;		None
 15281 ;; Return value:  Size  Location     Type
 15282 ;;                  2    0[BANK0 ] unsigned int 
 15283 ;; Registers used:
 15284 ;;		wreg, status,2
 15285 ;; Tracked objects:
 15286 ;;		On entry : 0/0
 15287 ;;		On exit  : 0/0
 15288 ;;		Unchanged: 0/0
 15289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15290 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15293 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15294 ;;Total ram usage:        2 bytes
 15295 ;; Hardware stack levels used:    1
 15296 ;; Hardware stack levels required when called:   10
 15297 ;; This function calls:
 15298 ;;		Nothing
 15299 ;; This function is called by:
 15300 ;;		_fat_create_file
 15301 ;; This function uses a non-reentrant model
 15302 ;;
 15303                           
 15304                           	psect	text52
 15305  0159EA                     __ptext52:
 15306                           	opt stack 0
 15307  0159EA                     __get_date:
 15308                           	opt stack 17
 15309                           
 15310                           ;fat16.c: 404: return 0x0000;
 15311                           
 15312                           ; BSR set to: 0
 15313                           ;incstack = 0
 15314  0159EA  0E00               	movlw	0
 15315  0159EC  0100               	movlb	0	; () banked
 15316  0159EE  6F61               	movwf	(?__get_date+1)& (0+255),b
 15317  0159F0  0E00               	movlw	0
 15318  0159F2  6F60               	movwf	?__get_date& (0+255),b
 15319  0159F4  0012               	return	
 15320  0159F6                     __end_of__get_date:
 15321                           	opt stack 0
 15322                           tblptru	equ	0xFF8
 15323                           tblptrh	equ	0xFF7
 15324                           tblptrl	equ	0xFF6
 15325                           tablat	equ	0xFF5
 15326                           prodh	equ	0xFF4
 15327                           prodl	equ	0xFF3
 15328                           postinc0	equ	0xFEE
 15329                           wreg	equ	0xFE8
 15330                           postdec1	equ	0xFE5
 15331                           plusw1	equ	0xFE3
 15332                           fsr1h	equ	0xFE2
 15333                           fsr1l	equ	0xFE1
 15334                           indf2	equ	0xFDF
 15335                           postinc2	equ	0xFDE
 15336                           plusw2	equ	0xFDB
 15337                           fsr2h	equ	0xFDA
 15338                           fsr2l	equ	0xFD9
 15339                           status	equ	0xFD8
 15340                           
 15341 ;; *************** function __get_available_root_entry *****************
 15342 ;; Defined at:
 15343 ;;		line 442 in file "fat16.c"
 15344 ;; Parameters:    Size  Location     Type
 15345 ;;		None
 15346 ;; Auto vars:     Size  Location     Type
 15347 ;;  file_number     1   53[BANK0 ] unsigned char 
 15348 ;; Return value:  Size  Location     Type
 15349 ;;                  1    wreg      unsigned char 
 15350 ;; Registers used:
 15351 ;;		wreg, status,2, status,0, cstack
 15352 ;; Tracked objects:
 15353 ;;		On entry : 0/0
 15354 ;;		On exit  : 0/0
 15355 ;;		Unchanged: 0/0
 15356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15357 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15358 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15360 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15361 ;;Total ram usage:        1 bytes
 15362 ;; Hardware stack levels used:    1
 15363 ;; Hardware stack levels required when called:   16
 15364 ;; This function calls:
 15365 ;;		__root_is_available
 15366 ;; This function is called by:
 15367 ;;		_fat_create_file
 15368 ;; This function uses a non-reentrant model
 15369 ;;
 15370                           
 15371                           	psect	text53
 15372  01563C                     __ptext53:
 15373                           	opt stack 0
 15374  01563C                     __get_available_root_entry:
 15375                           	opt stack 11
 15376                           
 15377                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 15378                           
 15379                           ; BSR set to: 0
 15380                           ;incstack = 0
 15381  01563C  0E00               	movlw	0
 15382  01563E  0100               	movlb	0	; () banked
 15383  015640  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 15384  015642                     l14413:
 15385                           
 15386                           ; BSR set to: 0
 15387  015642  0E3F               	movlw	63
 15388  015644  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 15389  015646  D001               	goto	l1814
 15390  015648  D00C               	goto	u13380
 15391  01564A                     l1814:
 15392                           
 15393                           ; BSR set to: 0
 15394                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 15395                           
 15396                           ; BSR set to: 0
 15397  01564A  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15398  01564C  EC96  F0A0         	call	__root_is_available
 15399  015650  0900               	iorlw	0
 15400  015652  B4D8               	btfsc	status,2,c
 15401  015654  D003               	goto	l1816
 15402                           
 15403                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 15404  015656  0100               	movlb	0	; () banked
 15405  015658  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 15406                           
 15407                           ; BSR set to: 0
 15408  01565A  0012               	return	
 15409  01565C                     l1816:
 15410                           
 15411                           ; BSR set to: 0
 15412  01565C  0100               	movlb	0	; () banked
 15413  01565E  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 15414  015660  D7F0               	goto	l14413
 15415  015662                     u13380:
 15416                           
 15417                           ; BSR set to: 0
 15418                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 15419                           
 15420                           ; BSR set to: 0
 15421  015662  0EFF               	movlw	255
 15422  015664  0012               	return	
 15423  015666                     __end_of__get_available_root_entry:
 15424                           	opt stack 0
 15425                           tblptru	equ	0xFF8
 15426                           tblptrh	equ	0xFF7
 15427                           tblptrl	equ	0xFF6
 15428                           tablat	equ	0xFF5
 15429                           prodh	equ	0xFF4
 15430                           prodl	equ	0xFF3
 15431                           postinc0	equ	0xFEE
 15432                           wreg	equ	0xFE8
 15433                           postdec1	equ	0xFE5
 15434                           plusw1	equ	0xFE3
 15435                           fsr1h	equ	0xFE2
 15436                           fsr1l	equ	0xFE1
 15437                           indf2	equ	0xFDF
 15438                           postinc2	equ	0xFDE
 15439                           plusw2	equ	0xFDB
 15440                           fsr2h	equ	0xFDA
 15441                           fsr2l	equ	0xFD9
 15442                           status	equ	0xFD8
 15443                           
 15444 ;; *************** function __add_item *****************
 15445 ;; Defined at:
 15446 ;;		line 39 in file "config_file.c"
 15447 ;; Parameters:    Size  Location     Type
 15448 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 15449 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 15450 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 15451 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 15452 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 15453 ;;  value           4   38[BANK0 ] long 
 15454 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 15455 ;;		 -> ConfigFile_buffer(512), 
 15456 ;; Auto vars:     Size  Location     Type
 15457 ;;  length          1   46[BANK0 ] unsigned char 
 15458 ;; Return value:  Size  Location     Type
 15459 ;;                  1    wreg      unsigned char 
 15460 ;; Registers used:
 15461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15462 ;; Tracked objects:
 15463 ;;		On entry : 0/0
 15464 ;;		On exit  : 0/0
 15465 ;;		Unchanged: 0/0
 15466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15467 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15468 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15469 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15470 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15471 ;;Total ram usage:       11 bytes
 15472 ;; Hardware stack levels used:    1
 15473 ;; Hardware stack levels required when called:   13
 15474 ;; This function calls:
 15475 ;;		_ltoa
 15476 ;; This function is called by:
 15477 ;;		_configFile_write
 15478 ;; This function uses a non-reentrant model
 15479 ;;
 15480                           
 15481                           	psect	text54
 15482  011670                     __ptext54:
 15483                           	opt stack 0
 15484  011670                     __add_item:
 15485                           	opt stack 15
 15486                           
 15487                           ;config_file.c: 41: uint8_t length = 0;
 15488                           
 15489                           ; BSR set to: 0
 15490                           ;incstack = 0
 15491  011670  0E00               	movlw	0
 15492  011672  0100               	movlb	0	; () banked
 15493  011674  6F8E               	movwf	__add_item@length& (0+255),b
 15494                           
 15495                           ;config_file.c: 44: while(item_string[length])
 15496  011676  D01C               	goto	l2926
 15497  011678                     
 15498                           ; BSR set to: 0
 15499                           ;config_file.c: 45: {;config_file.c: 46: buffer[length] = item_string[length];
 15500                           
 15501                           ; BSR set to: 0
 15502  011678  518E               	movf	__add_item@length& (0+255),w,b
 15503  01167A  0D01               	mullw	1
 15504  01167C  C084  F08C         	movff	__add_item@item_string,??__add_item
 15505  011680  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15506  011684  50F3               	movf	prodl,w,c
 15507  011686  278C               	addwf	??__add_item& (0+255),f,b
 15508  011688  50F4               	movf	prodh,w,c
 15509  01168A  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15510  01168C  C08C  FFF6         	movff	??__add_item,tblptrl
 15511  011690  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15512  011694                     	if	0	;tblptru may be non-zero
 15513  011694                     	endif
 15514  011694                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15515  011694  0E00               	movlw	low (__mediumconst shr (0+16))
 15516  011696  6EF8               	movwf	tblptru,c
 15517  011698                     	endif
 15518  011698  518E               	movf	__add_item@length& (0+255),w,b
 15519  01169A  0D01               	mullw	1
 15520  01169C  50F3               	movf	prodl,w,c
 15521  01169E  258A               	addwf	__add_item@buffer& (0+255),w,b
 15522  0116A0  6ED9               	movwf	fsr2l,c
 15523  0116A2  50F4               	movf	prodh,w,c
 15524  0116A4  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15525  0116A6  6EDA               	movwf	fsr2h,c
 15526  0116A8  0008               	tblrd		*
 15527  0116AA  CFF5 FFDF          	movff	tablat,indf2
 15528                           
 15529                           ; BSR set to: 0
 15530                           ;config_file.c: 47: ++length;
 15531  0116AE  2B8E               	incf	__add_item@length& (0+255),f,b
 15532  0116B0                     l2926:
 15533                           
 15534                           ; BSR set to: 0
 15535                           
 15536                           ; BSR set to: 0
 15537  0116B0  518E               	movf	__add_item@length& (0+255),w,b
 15538  0116B2  0D01               	mullw	1
 15539  0116B4  C084  F08C         	movff	__add_item@item_string,??__add_item
 15540  0116B8  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 15541  0116BC  50F3               	movf	prodl,w,c
 15542  0116BE  278C               	addwf	??__add_item& (0+255),f,b
 15543  0116C0  50F4               	movf	prodh,w,c
 15544  0116C2  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 15545  0116C4  C08C  FFF6         	movff	??__add_item,tblptrl
 15546  0116C8  C08D  FFF7         	movff	??__add_item+1,tblptrh
 15547  0116CC                     	if	0	;tblptru may be non-zero
 15548  0116CC                     	endif
 15549  0116CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 15550  0116CC  0E00               	movlw	low (__mediumconst shr (0+16))
 15551  0116CE  6EF8               	movwf	tblptru,c
 15552  0116D0                     	endif
 15553  0116D0  0008               	tblrd		*
 15554  0116D2  50F5               	movf	tablat,w,c
 15555  0116D4  0900               	iorlw	0
 15556  0116D6  A4D8               	btfss	status,2,c
 15557  0116D8  D7CF               	goto	l2927
 15558                           
 15559                           ; BSR set to: 0
 15560                           ;config_file.c: 48: };config_file.c: 51: buffer[length++] = '=';
 15561                           
 15562                           ; BSR set to: 0
 15563  0116DA  518E               	movf	__add_item@length& (0+255),w,b
 15564  0116DC  0D01               	mullw	1
 15565  0116DE  50F3               	movf	prodl,w,c
 15566  0116E0  258A               	addwf	__add_item@buffer& (0+255),w,b
 15567  0116E2  6ED9               	movwf	fsr2l,c
 15568  0116E4  50F4               	movf	prodh,w,c
 15569  0116E6  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15570  0116E8  6EDA               	movwf	fsr2h,c
 15571  0116EA  0E3D               	movlw	61
 15572  0116EC  6EDF               	movwf	indf2,c
 15573                           
 15574                           ; BSR set to: 0
 15575  0116EE  2B8E               	incf	__add_item@length& (0+255),f,b
 15576                           
 15577                           ; BSR set to: 0
 15578                           ;config_file.c: 54: ltoa(&buffer[length], value, 10);
 15579  0116F0  518E               	movf	__add_item@length& (0+255),w,b
 15580  0116F2  0D01               	mullw	1
 15581  0116F4  50F3               	movf	prodl,w,c
 15582  0116F6  258A               	addwf	__add_item@buffer& (0+255),w,b
 15583  0116F8  6F7A               	movwf	ltoa@buf& (0+255),b
 15584  0116FA  50F4               	movf	prodh,w,c
 15585  0116FC  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15586  0116FE  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 15587  011700  C086  F07C         	movff	__add_item@value,ltoa@val
 15588  011704  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 15589  011708  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 15590  01170C  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 15591  011710  0E00               	movlw	0
 15592  011712  6F81               	movwf	(ltoa@base+1)& (0+255),b
 15593  011714  0E0A               	movlw	10
 15594  011716  6F80               	movwf	ltoa@base& (0+255),b
 15595  011718  EC83  F0A5         	call	_ltoa	;wreg free
 15596                           
 15597                           ;config_file.c: 55: while(buffer[length])
 15598  01171C  D002               	goto	l2929
 15599  01171E                     
 15600                           ;config_file.c: 56: {;config_file.c: 57: ++length;
 15601  01171E  0100               	movlb	0	; () banked
 15602  011720  2B8E               	incf	__add_item@length& (0+255),f,b
 15603  011722                     l2929:
 15604                           
 15605                           ; BSR set to: 0
 15606  011722  0100               	movlb	0	; () banked
 15607  011724  518E               	movf	__add_item@length& (0+255),w,b
 15608  011726  0D01               	mullw	1
 15609  011728  50F3               	movf	prodl,w,c
 15610  01172A  258A               	addwf	__add_item@buffer& (0+255),w,b
 15611  01172C  6ED9               	movwf	fsr2l,c
 15612  01172E  50F4               	movf	prodh,w,c
 15613  011730  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15614  011732  6EDA               	movwf	fsr2h,c
 15615  011734  50DF               	movf	indf2,w,c
 15616  011736  A4D8               	btfss	status,2,c
 15617  011738  D7F2               	goto	l2930
 15618                           
 15619                           ; BSR set to: 0
 15620                           ;config_file.c: 58: };config_file.c: 61: buffer[length++] = '\r';
 15621                           
 15622                           ; BSR set to: 0
 15623  01173A  518E               	movf	__add_item@length& (0+255),w,b
 15624  01173C  0D01               	mullw	1
 15625  01173E  50F3               	movf	prodl,w,c
 15626  011740  258A               	addwf	__add_item@buffer& (0+255),w,b
 15627  011742  6ED9               	movwf	fsr2l,c
 15628  011744  50F4               	movf	prodh,w,c
 15629  011746  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15630  011748  6EDA               	movwf	fsr2h,c
 15631  01174A  0E0D               	movlw	13
 15632  01174C  6EDF               	movwf	indf2,c
 15633                           
 15634                           ; BSR set to: 0
 15635  01174E  2B8E               	incf	__add_item@length& (0+255),f,b
 15636                           
 15637                           ; BSR set to: 0
 15638                           ;config_file.c: 62: buffer[length++] = '\n';
 15639  011750  518E               	movf	__add_item@length& (0+255),w,b
 15640  011752  0D01               	mullw	1
 15641  011754  50F3               	movf	prodl,w,c
 15642  011756  258A               	addwf	__add_item@buffer& (0+255),w,b
 15643  011758  6ED9               	movwf	fsr2l,c
 15644  01175A  50F4               	movf	prodh,w,c
 15645  01175C  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 15646  01175E  6EDA               	movwf	fsr2h,c
 15647  011760  0E0A               	movlw	10
 15648  011762  6EDF               	movwf	indf2,c
 15649  011764  2B8E               	incf	__add_item@length& (0+255),f,b
 15650                           
 15651                           ; BSR set to: 0
 15652                           ;config_file.c: 65: return length;
 15653  011766  518E               	movf	__add_item@length& (0+255),w,b
 15654  011768  0012               	return	
 15655  01176A                     __end_of__add_item:
 15656                           	opt stack 0
 15657                           tblptru	equ	0xFF8
 15658                           tblptrh	equ	0xFF7
 15659                           tblptrl	equ	0xFF6
 15660                           tablat	equ	0xFF5
 15661                           prodh	equ	0xFF4
 15662                           prodl	equ	0xFF3
 15663                           postinc0	equ	0xFEE
 15664                           wreg	equ	0xFE8
 15665                           postdec1	equ	0xFE5
 15666                           plusw1	equ	0xFE3
 15667                           fsr1h	equ	0xFE2
 15668                           fsr1l	equ	0xFE1
 15669                           indf2	equ	0xFDF
 15670                           postinc2	equ	0xFDE
 15671                           plusw2	equ	0xFDB
 15672                           fsr2h	equ	0xFDA
 15673                           fsr2l	equ	0xFD9
 15674                           status	equ	0xFD8
 15675                           
 15676 ;; *************** function _ltoa *****************
 15677 ;; Defined at:
 15678 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 15681 ;;		 -> ConfigFile_buffer(512), 
 15682 ;;  val             4   28[BANK0 ] long 
 15683 ;;  base            2   32[BANK0 ] int 
 15684 ;; Auto vars:     Size  Location     Type
 15685 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 15686 ;;		 -> ConfigFile_buffer(512), 
 15687 ;; Return value:  Size  Location     Type
 15688 ;;                  2   26[BANK0 ] PTR unsigned char 
 15689 ;; Registers used:
 15690 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15691 ;; Tracked objects:
 15692 ;;		On entry : 0/0
 15693 ;;		On exit  : 0/0
 15694 ;;		Unchanged: 0/0
 15695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15696 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15697 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15699 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15700 ;;Total ram usage:       10 bytes
 15701 ;; Hardware stack levels used:    1
 15702 ;; Hardware stack levels required when called:   12
 15703 ;; This function calls:
 15704 ;;		_ultoa
 15705 ;; This function is called by:
 15706 ;;		__add_item
 15707 ;; This function uses a non-reentrant model
 15708 ;;
 15709                           
 15710                           	psect	text55
 15711  014B06                     __ptext55:
 15712                           	opt stack 0
 15713  014B06                     _ltoa:
 15714                           	opt stack 15
 15715                           
 15716                           ; BSR set to: 0
 15717                           ;incstack = 0
 15718  014B06  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15719  014B0A  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15720  014B0E  0100               	movlb	0	; () banked
 15721  014B10  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15722  014B12  D010               	goto	l3697
 15723                           
 15724                           ; BSR set to: 0
 15725  014B14  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15726  014B18  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15727  014B1C  0E2D               	movlw	45
 15728  014B1E  6EDF               	movwf	indf2,c
 15729                           
 15730                           ; BSR set to: 0
 15731  014B20  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15732  014B22  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15733                           
 15734                           ; BSR set to: 0
 15735  014B24  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15736  014B26  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15737  014B28  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15738  014B2A  6D7C               	negf	ltoa@val& (0+255),b
 15739  014B2C  0E00               	movlw	0
 15740  014B2E  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15741  014B30  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15742  014B32  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15743  014B34                     l3697:
 15744                           
 15745                           ; BSR set to: 0
 15746                           
 15747                           ; BSR set to: 0
 15748  014B34  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15749  014B38  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15750  014B3C  C07C  F06F         	movff	ltoa@val,ultoa@val
 15751  014B40  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15752  014B44  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15753  014B48  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15754  014B4C  C080  F073         	movff	ltoa@base,ultoa@base
 15755  014B50  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15756  014B54  EC3B  F08A         	call	_ultoa	;wreg free
 15757  014B58  0012               	return	
 15758  014B5A                     __end_of_ltoa:
 15759                           	opt stack 0
 15760                           tblptru	equ	0xFF8
 15761                           tblptrh	equ	0xFF7
 15762                           tblptrl	equ	0xFF6
 15763                           tablat	equ	0xFF5
 15764                           prodh	equ	0xFF4
 15765                           prodl	equ	0xFF3
 15766                           postinc0	equ	0xFEE
 15767                           wreg	equ	0xFE8
 15768                           postdec1	equ	0xFE5
 15769                           plusw1	equ	0xFE3
 15770                           fsr1h	equ	0xFE2
 15771                           fsr1l	equ	0xFE1
 15772                           indf2	equ	0xFDF
 15773                           postinc2	equ	0xFDE
 15774                           plusw2	equ	0xFDB
 15775                           fsr2h	equ	0xFDA
 15776                           fsr2l	equ	0xFD9
 15777                           status	equ	0xFD8
 15778                           
 15779 ;; *************** function _ultoa *****************
 15780 ;; Defined at:
 15781 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15782 ;; Parameters:    Size  Location     Type
 15783 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15784 ;;		 -> ConfigFile_buffer(512), 
 15785 ;;  val             4   15[BANK0 ] unsigned long 
 15786 ;;  base            2   19[BANK0 ] int 
 15787 ;; Auto vars:     Size  Location     Type
 15788 ;;  v               4   21[BANK0 ] unsigned long 
 15789 ;;  c               1   25[BANK0 ] unsigned char 
 15790 ;; Return value:  Size  Location     Type
 15791 ;;                  2   13[BANK0 ] PTR unsigned char 
 15792 ;; Registers used:
 15793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15794 ;; Tracked objects:
 15795 ;;		On entry : 0/0
 15796 ;;		On exit  : 0/0
 15797 ;;		Unchanged: 0/0
 15798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15799 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15800 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15802 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15803 ;;Total ram usage:       13 bytes
 15804 ;; Hardware stack levels used:    1
 15805 ;; Hardware stack levels required when called:   11
 15806 ;; This function calls:
 15807 ;;		___lldiv
 15808 ;;		___llmod
 15809 ;; This function is called by:
 15810 ;;		_ltoa
 15811 ;; This function uses a non-reentrant model
 15812 ;;
 15813                           
 15814                           	psect	text56
 15815  011476                     __ptext56:
 15816                           	opt stack 0
 15817  011476                     _ultoa:
 15818                           	opt stack 15
 15819                           
 15820                           ;incstack = 0
 15821  011476  C06F  F075         	movff	ultoa@val,ultoa@v
 15822  01147A  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15823  01147E  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15824  011482  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15825  011486  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15826  01148A  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15827  01148E  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15828  011492  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15829  011496  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15830  01149A  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15831  01149E  0100               	movlb	0	; () banked
 15832  0114A0  0E00               	movlw	0
 15833  0114A2  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15834  0114A4  0EFF               	movlw	-1
 15835  0114A6  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15836  0114A8  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15837  0114AA  EC4A  F09D         	call	___lldiv	;wreg free
 15838  0114AE  C060  F075         	movff	?___lldiv,ultoa@v
 15839  0114B2  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15840  0114B6  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15841  0114BA  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15842  0114BE  0100               	movlb	0	; () banked
 15843  0114C0  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15844  0114C2  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15845                           
 15846                           ; BSR set to: 0
 15847  0114C4  5175               	movf	ultoa@v& (0+255),w,b
 15848  0114C6  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15849  0114C8  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15850  0114CA  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15851  0114CC  A4D8               	btfss	status,2,c
 15852  0114CE  D7DB               	goto	l3701
 15853                           
 15854                           ; BSR set to: 0
 15855                           
 15856                           ; BSR set to: 0
 15857  0114D0  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15858  0114D4  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15859  0114D8  0E00               	movlw	0
 15860  0114DA  6EDF               	movwf	indf2,c
 15861                           
 15862                           ; BSR set to: 0
 15863  0114DC  076D               	decf	ultoa@buf& (0+255),f,b
 15864  0114DE  A0D8               	btfss	status,0,c
 15865  0114E0  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15866  0114E2                     
 15867                           ; BSR set to: 0
 15868                           
 15869                           ; BSR set to: 0
 15870  0114E2  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15871  0114E6  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15872  0114EA  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15873  0114EE  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15874  0114F2  C073  F064         	movff	ultoa@base,___llmod@divisor
 15875  0114F6  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15876  0114FA  0E00               	movlw	0
 15877  0114FC  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15878  0114FE  0EFF               	movlw	-1
 15879  011500  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15880  011502  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15881  011504  EC01  F0A1         	call	___llmod	;wreg free
 15882  011508  0100               	movlb	0	; () banked
 15883  01150A  5160               	movf	?___llmod& (0+255),w,b
 15884  01150C  6F79               	movwf	ultoa@c& (0+255),b
 15885                           
 15886                           ; BSR set to: 0
 15887  01150E  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15888  011512  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15889  011516  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15890  01151A  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15891  01151E  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15892  011522  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15893  011526  0E00               	movlw	0
 15894  011528  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15895  01152A  0EFF               	movlw	-1
 15896  01152C  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15897  01152E  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15898  011530  EC4A  F09D         	call	___lldiv	;wreg free
 15899  011534  C060  F06F         	movff	?___lldiv,ultoa@val
 15900  011538  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15901  01153C  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15902  011540  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15903  011544  0E09               	movlw	9
 15904  011546  0100               	movlb	0	; () banked
 15905  011548  6579               	cpfsgt	ultoa@c& (0+255),b
 15906  01154A  D002               	goto	l3704
 15907                           
 15908                           ; BSR set to: 0
 15909  01154C  0E07               	movlw	7
 15910  01154E  2779               	addwf	ultoa@c& (0+255),f,b
 15911  011550                     l3704:
 15912                           
 15913                           ; BSR set to: 0
 15914  011550  0E30               	movlw	48
 15915  011552  2779               	addwf	ultoa@c& (0+255),f,b
 15916                           
 15917                           ; BSR set to: 0
 15918  011554  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15919  011558  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15920  01155C  C079  FFDF         	movff	ultoa@c,indf2
 15921                           
 15922                           ; BSR set to: 0
 15923  011560  076D               	decf	ultoa@buf& (0+255),f,b
 15924  011562  A0D8               	btfss	status,0,c
 15925  011564  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15926                           
 15927                           ; BSR set to: 0
 15928  011566  516F               	movf	ultoa@val& (0+255),w,b
 15929  011568  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15930  01156A  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15931  01156C  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15932  01156E  B4D8               	btfsc	status,2,c
 15933  011570  0012               	return	
 15934  011572  D7B7               	goto	l3703
 15935  011574                     __end_of_ultoa:
 15936                           	opt stack 0
 15937                           tblptru	equ	0xFF8
 15938                           tblptrh	equ	0xFF7
 15939                           tblptrl	equ	0xFF6
 15940                           tablat	equ	0xFF5
 15941                           prodh	equ	0xFF4
 15942                           prodl	equ	0xFF3
 15943                           postinc0	equ	0xFEE
 15944                           wreg	equ	0xFE8
 15945                           postdec1	equ	0xFE5
 15946                           plusw1	equ	0xFE3
 15947                           fsr1h	equ	0xFE2
 15948                           fsr1l	equ	0xFE1
 15949                           indf2	equ	0xFDF
 15950                           postinc2	equ	0xFDE
 15951                           plusw2	equ	0xFDB
 15952                           fsr2h	equ	0xFDA
 15953                           fsr2l	equ	0xFD9
 15954                           status	equ	0xFD8
 15955                           
 15956 ;; *************** function ___llmod *****************
 15957 ;; Defined at:
 15958 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15959 ;; Parameters:    Size  Location     Type
 15960 ;;  dividend        4    0[BANK0 ] unsigned long 
 15961 ;;  divisor         4    4[BANK0 ] unsigned long 
 15962 ;; Auto vars:     Size  Location     Type
 15963 ;;  counter         1    8[BANK0 ] unsigned char 
 15964 ;; Return value:  Size  Location     Type
 15965 ;;                  4    0[BANK0 ] unsigned long 
 15966 ;; Registers used:
 15967 ;;		wreg, status,2, status,0
 15968 ;; Tracked objects:
 15969 ;;		On entry : 0/0
 15970 ;;		On exit  : 0/0
 15971 ;;		Unchanged: 0/0
 15972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15973 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15974 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15976 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15977 ;;Total ram usage:        9 bytes
 15978 ;; Hardware stack levels used:    1
 15979 ;; Hardware stack levels required when called:   10
 15980 ;; This function calls:
 15981 ;;		Nothing
 15982 ;; This function is called by:
 15983 ;;		_ultoa
 15984 ;; This function uses a non-reentrant model
 15985 ;;
 15986                           
 15987                           	psect	text57
 15988  014202                     __ptext57:
 15989                           	opt stack 0
 15990  014202                     ___llmod:
 15991                           	opt stack 15
 15992                           
 15993                           ; BSR set to: 0
 15994                           ;incstack = 0
 15995  014202  0100               	movlb	0	; () banked
 15996  014204  5164               	movf	___llmod@divisor& (0+255),w,b
 15997  014206  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15998  014208  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15999  01420A  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 16000  01420C  B4D8               	btfsc	status,2,c
 16001  01420E  D024               	goto	l3399
 16002                           
 16003                           ; BSR set to: 0
 16004  014210  0E01               	movlw	1
 16005  014212  6F68               	movwf	___llmod@counter& (0+255),b
 16006  014214  D006               	goto	l3394
 16007  014216                     
 16008                           ; BSR set to: 0
 16009                           
 16010                           ; BSR set to: 0
 16011  014216  90D8               	bcf	status,0,c
 16012  014218  3764               	rlcf	___llmod@divisor& (0+255),f,b
 16013  01421A  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 16014  01421C  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 16015  01421E  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 16016  014220  2B68               	incf	___llmod@counter& (0+255),f,b
 16017  014222                     l3394:
 16018                           
 16019                           ; BSR set to: 0
 16020                           
 16021                           ; BSR set to: 0
 16022  014222  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 16023  014224  D7F8               	goto	l3395
 16024  014226                     u11900:
 16025                           
 16026                           ; BSR set to: 0
 16027                           
 16028                           ; BSR set to: 0
 16029                           
 16030                           ; BSR set to: 0
 16031  014226  5164               	movf	___llmod@divisor& (0+255),w,b
 16032  014228  5D60               	subwf	___llmod@dividend& (0+255),w,b
 16033  01422A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16034  01422C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 16035  01422E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16036  014230  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 16037  014232  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16038  014234  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 16039  014236  A0D8               	btfss	status,0,c
 16040  014238  D008               	goto	l3398
 16041                           
 16042                           ; BSR set to: 0
 16043  01423A  5164               	movf	___llmod@divisor& (0+255),w,b
 16044  01423C  5F60               	subwf	___llmod@dividend& (0+255),f,b
 16045  01423E  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 16046  014240  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 16047  014242  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 16048  014244  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 16049  014246  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 16050  014248  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 16051  01424A                     l3398:
 16052                           
 16053                           ; BSR set to: 0
 16054                           
 16055                           ; BSR set to: 0
 16056  01424A  90D8               	bcf	status,0,c
 16057  01424C  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 16058  01424E  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 16059  014250  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 16060  014252  3364               	rrcf	___llmod@divisor& (0+255),f,b
 16061                           
 16062                           ; BSR set to: 0
 16063  014254  2F68               	decfsz	___llmod@counter& (0+255),f,b
 16064  014256  D7E7               	goto	u11900
 16065  014258                     l3399:
 16066                           
 16067                           ; BSR set to: 0
 16068                           
 16069                           ; BSR set to: 0
 16070  014258  C060  F060         	movff	___llmod@dividend,?___llmod
 16071  01425C  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 16072  014260  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 16073  014264  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 16074                           
 16075                           ; BSR set to: 0
 16076  014268  0012               	return		;funcret
 16077  01426A                     __end_of___llmod:
 16078                           	opt stack 0
 16079                           tblptru	equ	0xFF8
 16080                           tblptrh	equ	0xFF7
 16081                           tblptrl	equ	0xFF6
 16082                           tablat	equ	0xFF5
 16083                           prodh	equ	0xFF4
 16084                           prodl	equ	0xFF3
 16085                           postinc0	equ	0xFEE
 16086                           wreg	equ	0xFE8
 16087                           postdec1	equ	0xFE5
 16088                           plusw1	equ	0xFE3
 16089                           fsr1h	equ	0xFE2
 16090                           fsr1l	equ	0xFE1
 16091                           indf2	equ	0xFDF
 16092                           postinc2	equ	0xFDE
 16093                           plusw2	equ	0xFDB
 16094                           fsr2h	equ	0xFDA
 16095                           fsr2l	equ	0xFD9
 16096                           status	equ	0xFD8
 16097                           
 16098 ;; *************** function ___lldiv *****************
 16099 ;; Defined at:
 16100 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 16101 ;; Parameters:    Size  Location     Type
 16102 ;;  dividend        4    0[BANK0 ] unsigned long 
 16103 ;;  divisor         4    4[BANK0 ] unsigned long 
 16104 ;; Auto vars:     Size  Location     Type
 16105 ;;  quotient        4    8[BANK0 ] unsigned long 
 16106 ;;  counter         1   12[BANK0 ] unsigned char 
 16107 ;; Return value:  Size  Location     Type
 16108 ;;                  4    0[BANK0 ] unsigned long 
 16109 ;; Registers used:
 16110 ;;		wreg, status,2, status,0
 16111 ;; Tracked objects:
 16112 ;;		On entry : 0/0
 16113 ;;		On exit  : 0/0
 16114 ;;		Unchanged: 0/0
 16115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16116 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16117 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16119 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16120 ;;Total ram usage:       13 bytes
 16121 ;; Hardware stack levels used:    1
 16122 ;; Hardware stack levels required when called:   10
 16123 ;; This function calls:
 16124 ;;		Nothing
 16125 ;; This function is called by:
 16126 ;;		_ultoa
 16127 ;; This function uses a non-reentrant model
 16128 ;;
 16129                           
 16130                           	psect	text58
 16131  013A94                     __ptext58:
 16132                           	opt stack 0
 16133  013A94                     ___lldiv:
 16134                           	opt stack 15
 16135                           
 16136                           ; BSR set to: 0
 16137                           ;incstack = 0
 16138  013A94  0E00               	movlw	0
 16139  013A96  0100               	movlb	0	; () banked
 16140  013A98  6F68               	movwf	___lldiv@quotient& (0+255),b
 16141  013A9A  0E00               	movlw	0
 16142  013A9C  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 16143  013A9E  0E00               	movlw	0
 16144  013AA0  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 16145  013AA2  0E00               	movlw	0
 16146  013AA4  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 16147                           
 16148                           ; BSR set to: 0
 16149  013AA6  5164               	movf	___lldiv@divisor& (0+255),w,b
 16150  013AA8  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 16151  013AAA  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 16152  013AAC  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 16153  013AAE  B4D8               	btfsc	status,2,c
 16154  013AB0  D02A               	goto	l3018
 16155                           
 16156                           ; BSR set to: 0
 16157  013AB2  0E01               	movlw	1
 16158  013AB4  6F6C               	movwf	___lldiv@counter& (0+255),b
 16159  013AB6  D006               	goto	l3013
 16160  013AB8                     
 16161                           ; BSR set to: 0
 16162                           
 16163                           ; BSR set to: 0
 16164  013AB8  90D8               	bcf	status,0,c
 16165  013ABA  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 16166  013ABC  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 16167  013ABE  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 16168  013AC0  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 16169  013AC2  2B6C               	incf	___lldiv@counter& (0+255),f,b
 16170  013AC4                     l3013:
 16171                           
 16172                           ; BSR set to: 0
 16173                           
 16174                           ; BSR set to: 0
 16175  013AC4  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 16176  013AC6  D7F8               	goto	l3014
 16177  013AC8                     u11870:
 16178                           
 16179                           ; BSR set to: 0
 16180                           
 16181                           ; BSR set to: 0
 16182                           
 16183                           ; BSR set to: 0
 16184  013AC8  90D8               	bcf	status,0,c
 16185  013ACA  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 16186  013ACC  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 16187  013ACE  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 16188  013AD0  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 16189                           
 16190                           ; BSR set to: 0
 16191  013AD2  5164               	movf	___lldiv@divisor& (0+255),w,b
 16192  013AD4  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 16193  013AD6  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16194  013AD8  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 16195  013ADA  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16196  013ADC  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 16197  013ADE  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16198  013AE0  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 16199  013AE2  A0D8               	btfss	status,0,c
 16200  013AE4  D009               	goto	l3017
 16201                           
 16202                           ; BSR set to: 0
 16203  013AE6  5164               	movf	___lldiv@divisor& (0+255),w,b
 16204  013AE8  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 16205  013AEA  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 16206  013AEC  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 16207  013AEE  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 16208  013AF0  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 16209  013AF2  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 16210  013AF4  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 16211                           
 16212                           ; BSR set to: 0
 16213  013AF6  8168               	bsf	___lldiv@quotient& (0+255),0,b
 16214  013AF8                     l3017:
 16215                           
 16216                           ; BSR set to: 0
 16217                           
 16218                           ; BSR set to: 0
 16219  013AF8  90D8               	bcf	status,0,c
 16220  013AFA  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 16221  013AFC  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 16222  013AFE  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 16223  013B00  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 16224                           
 16225                           ; BSR set to: 0
 16226  013B02  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 16227  013B04  D7E1               	goto	u11870
 16228  013B06                     l3018:
 16229                           
 16230                           ; BSR set to: 0
 16231                           
 16232                           ; BSR set to: 0
 16233  013B06  C068  F060         	movff	___lldiv@quotient,?___lldiv
 16234  013B0A  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 16235  013B0E  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 16236  013B12  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 16237                           
 16238                           ; BSR set to: 0
 16239  013B16  0012               	return		;funcret
 16240  013B18                     __end_of___lldiv:
 16241                           	opt stack 0
 16242                           tblptru	equ	0xFF8
 16243                           tblptrh	equ	0xFF7
 16244                           tblptrl	equ	0xFF6
 16245                           tablat	equ	0xFF5
 16246                           prodh	equ	0xFF4
 16247                           prodl	equ	0xFF3
 16248                           postinc0	equ	0xFEE
 16249                           wreg	equ	0xFE8
 16250                           postdec1	equ	0xFE5
 16251                           plusw1	equ	0xFE3
 16252                           fsr1h	equ	0xFE2
 16253                           fsr1l	equ	0xFE1
 16254                           indf2	equ	0xFDF
 16255                           postinc2	equ	0xFDE
 16256                           plusw2	equ	0xFDB
 16257                           fsr2h	equ	0xFDA
 16258                           fsr2l	equ	0xFD9
 16259                           status	equ	0xFD8
 16260                           
 16261 ;; *************** function _configFile_readDefault *****************
 16262 ;; Defined at:
 16263 ;;		line 209 in file "config_file.c"
 16264 ;; Parameters:    Size  Location     Type
 16265 ;;		None
 16266 ;; Auto vars:     Size  Location     Type
 16267 ;;		None
 16268 ;; Return value:  Size  Location     Type
 16269 ;;                  1    wreg      void 
 16270 ;; Registers used:
 16271 ;;		wreg, status,2
 16272 ;; Tracked objects:
 16273 ;;		On entry : 0/0
 16274 ;;		On exit  : 0/0
 16275 ;;		Unchanged: 0/0
 16276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16281 ;;Total ram usage:        0 bytes
 16282 ;; Hardware stack levels used:    1
 16283 ;; Hardware stack levels required when called:   10
 16284 ;; This function calls:
 16285 ;;		Nothing
 16286 ;; This function is called by:
 16287 ;;		_system_init
 16288 ;; This function uses a non-reentrant model
 16289 ;;
 16290                           
 16291                           	psect	text59
 16292  0142CE                     __ptext59:
 16293                           	opt stack 0
 16294  0142CE                     _configFile_readDefault:
 16295                           	opt stack 19
 16296                           
 16297                           ;config_file.c: 211: config.full_circle_in_steps = 576000;
 16298                           
 16299                           ; BSR set to: 0
 16300                           ;incstack = 0
 16301  0142CE  0E00               	movlw	0
 16302  0142D0  0101               	movlb	1	; () banked
 16303  0142D2  6FA1               	movwf	_config& (0+255),b
 16304  0142D4  0ECA               	movlw	202
 16305  0142D6  6FA2               	movwf	(_config+1)& (0+255),b
 16306  0142D8  0E08               	movlw	8
 16307  0142DA  6FA3               	movwf	(_config+2)& (0+255),b
 16308  0142DC  0E00               	movlw	0
 16309  0142DE  6FA4               	movwf	(_config+3)& (0+255),b
 16310                           
 16311                           ;config_file.c: 212: config.inverse_direction = 1;
 16312  0142E0  0E01               	movlw	1
 16313  0142E2  6FA5               	movwf	(_config+4)& (0+255),b
 16314                           
 16315                           ;config_file.c: 213: config.overshoot_in_steps = 6400;
 16316  0142E4  0E19               	movlw	25
 16317  0142E6  6FA7               	movwf	(_config+6)& (0+255),b
 16318  0142E8  0E00               	movlw	0
 16319  0142EA  6FA6               	movwf	(_config+5)& (0+255),b
 16320                           
 16321                           ;config_file.c: 214: config.overshoot_cost_in_steps = 3000;
 16322  0142EC  0E0B               	movlw	11
 16323  0142EE  6FA9               	movwf	(_config+8)& (0+255),b
 16324  0142F0  0EB8               	movlw	184
 16325  0142F2  6FA8               	movwf	(_config+7)& (0+255),b
 16326                           
 16327                           ;config_file.c: 215: config.minimum_speed = 1;
 16328  0142F4  0E00               	movlw	0
 16329  0142F6  6FAB               	movwf	(_config+10)& (0+255),b
 16330  0142F8  0E01               	movlw	1
 16331  0142FA  6FAA               	movwf	(_config+9)& (0+255),b
 16332                           
 16333                           ;config_file.c: 216: config.maximum_speed = 380;
 16334  0142FC  0E01               	movlw	1
 16335  0142FE  6FAD               	movwf	(_config+12)& (0+255),b
 16336  014300  0E7C               	movlw	124
 16337  014302  6FAC               	movwf	(_config+11)& (0+255),b
 16338                           
 16339                           ;config_file.c: 217: config.maximum_speed_arc = 305;
 16340  014304  0E01               	movlw	1
 16341  014306  6FB1               	movwf	(_config+16)& (0+255),b
 16342  014308  0E31               	movlw	49
 16343  01430A  6FB0               	movwf	(_config+15)& (0+255),b
 16344                           
 16345                           ;config_file.c: 218: config.maximum_speed_manual = 305;
 16346  01430C  0E01               	movlw	1
 16347  01430E  6FB5               	movwf	(_config+20)& (0+255),b
 16348  014310  0E31               	movlw	49
 16349  014312  6FB4               	movwf	(_config+19)& (0+255),b
 16350                           
 16351                           ;config_file.c: 219: config.use_ccw_limit = 0;
 16352  014314  0E00               	movlw	0
 16353  014316  6FBA               	movwf	(_config+25)& (0+255),b
 16354                           
 16355                           ;config_file.c: 220: config.ccw_limit = 35500;
 16356  014318  0E8A               	movlw	138
 16357  01431A  6FBC               	movwf	(_config+27)& (0+255),b
 16358  01431C  0EAC               	movlw	172
 16359  01431E  6FBB               	movwf	(_config+26)& (0+255),b
 16360                           
 16361                           ;config_file.c: 221: config.use_cw_limit = 0;
 16362  014320  0E00               	movlw	0
 16363  014322  6FB7               	movwf	(_config+22)& (0+255),b
 16364                           
 16365                           ;config_file.c: 222: config.cw_limit = 500;
 16366  014324  0E01               	movlw	1
 16367  014326  6FB9               	movwf	(_config+24)& (0+255),b
 16368  014328  0EF4               	movlw	244
 16369  01432A  6FB8               	movwf	(_config+23)& (0+255),b
 16370                           
 16371                           ;config_file.c: 223: config.beep_duration = 10;
 16372  01432C  0E0A               	movlw	10
 16373  01432E  6FB6               	movwf	(_config+21)& (0+255),b
 16374                           
 16375                           ; BSR set to: 1
 16376  014330  0012               	return		;funcret
 16377  014332                     __end_of_configFile_readDefault:
 16378                           	opt stack 0
 16379                           tblptru	equ	0xFF8
 16380                           tblptrh	equ	0xFF7
 16381                           tblptrl	equ	0xFF6
 16382                           tablat	equ	0xFF5
 16383                           prodh	equ	0xFF4
 16384                           prodl	equ	0xFF3
 16385                           postinc0	equ	0xFEE
 16386                           wreg	equ	0xFE8
 16387                           postdec1	equ	0xFE5
 16388                           plusw1	equ	0xFE3
 16389                           fsr1h	equ	0xFE2
 16390                           fsr1l	equ	0xFE1
 16391                           indf2	equ	0xFDF
 16392                           postinc2	equ	0xFDE
 16393                           plusw2	equ	0xFDB
 16394                           fsr2h	equ	0xFDA
 16395                           fsr2l	equ	0xFD9
 16396                           status	equ	0xFD8
 16397                           
 16398 ;; *************** function _configFile_read *****************
 16399 ;; Defined at:
 16400 ;;		line 227 in file "config_file.c"
 16401 ;; Parameters:    Size  Location     Type
 16402 ;;		None
 16403 ;; Auto vars:     Size  Location     Type
 16404 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 16405 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 16406 ;;  position        4   56[BANK1 ] unsigned long 
 16407 ;;  file_size       4   51[BANK1 ] unsigned long 
 16408 ;;  file_number     1   55[BANK1 ] unsigned char 
 16409 ;; Return value:  Size  Location     Type
 16410 ;;                  1    wreg      void 
 16411 ;; Registers used:
 16412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16413 ;; Tracked objects:
 16414 ;;		On entry : 0/0
 16415 ;;		On exit  : 0/0
 16416 ;;		Unchanged: 0/0
 16417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16418 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16419 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16420 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16421 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16422 ;;Total ram usage:       60 bytes
 16423 ;; Hardware stack levels used:    1
 16424 ;; Hardware stack levels required when called:   19
 16425 ;; This function calls:
 16426 ;;		__get_item
 16427 ;;		__parse_item
 16428 ;;		_fat_find_file
 16429 ;;		_fat_get_file_size
 16430 ;;		_fat_read_from_file
 16431 ;; This function is called by:
 16432 ;;		_system_init
 16433 ;; This function uses a non-reentrant model
 16434 ;;
 16435                           
 16436                           	psect	text60
 16437  00F606                     __ptext60:
 16438                           	opt stack 0
 16439  00F606                     _configFile_read:
 16440                           	opt stack 10
 16441                           
 16442                           ;config_file.c: 229: uint8_t file_number;;config_file.c: 230: uint32_t file_size;;config
      +                          _file.c: 231: uint32_t position;;config_file.c: 232: char item_string[31];;config_file.c
      +                          : 233: char value_string[12];;config_file.c: 236: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 16443                           
 16444                           ; BSR set to: 1
 16445                           ;incstack = 0
 16446  00F606  0EC8               	movlw	low _configFile_name
 16447  00F608  0100               	movlb	0	; () banked
 16448  00F60A  6F8B               	movwf	fat_find_file@name& (0+255),b
 16449  00F60C  0E02               	movlw	high _configFile_name
 16450  00F60E  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 16451  00F610  0ED3               	movlw	low _configFile_extention
 16452  00F612  6F8D               	movwf	fat_find_file@extension& (0+255),b
 16453  00F614  0E02               	movlw	high _configFile_extention
 16454  00F616  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 16455  00F618  EC12  F08E         	call	_fat_find_file	;wreg free
 16456  00F61C  0101               	movlb	1	; () banked
 16457  00F61E  6FFA               	movwf	configFile_read@file_number& (0+255),b
 16458                           
 16459                           ; BSR set to: 1
 16460                           ;config_file.c: 237: if(file_number==0xFF)
 16461  00F620  29FA               	incf	configFile_read@file_number& (0+255),w,b
 16462  00F622  B4D8               	btfsc	status,2,c
 16463  00F624  0012               	return	
 16464                           
 16465                           ; BSR set to: 1
 16466                           ;config_file.c: 241: };config_file.c: 244: file_size = fat_get_file_size(file_number);
 16467                           
 16468                           ; BSR set to: 1
 16469                           
 16470                           ; BSR set to: 1
 16471                           ;config_file.c: 238: {;config_file.c: 240: return;
 16472  00F626  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16473  00F628  EC08  F09F         	call	_fat_get_file_size
 16474  00F62C  C095  F1F6         	movff	?_fat_get_file_size,configFile_read@file_size
 16475  00F630  C096  F1F7         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 16476  00F634  C097  F1F8         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 16477  00F638  C098  F1F9         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 16478                           
 16479                           ;config_file.c: 247: position = 0;
 16480  00F63C  0E00               	movlw	0
 16481  00F63E  0101               	movlb	1	; () banked
 16482  00F640  6FFB               	movwf	configFile_read@position& (0+255),b
 16483  00F642  0E00               	movlw	0
 16484  00F644  6FFC               	movwf	(configFile_read@position+1)& (0+255),b
 16485  00F646  0E00               	movlw	0
 16486  00F648  6FFD               	movwf	(configFile_read@position+2)& (0+255),b
 16487  00F64A  0E00               	movlw	0
 16488  00F64C  6FFE               	movwf	(configFile_read@position+3)& (0+255),b
 16489                           
 16490                           ;config_file.c: 248: while((file_size-position)>3)
 16491  00F64E  D086               	goto	l2973
 16492  00F650                     
 16493                           ; BSR set to: 1
 16494                           ;config_file.c: 249: {;config_file.c: 250: if((position+45) > file_size)
 16495                           
 16496                           ; BSR set to: 1
 16497  00F650  0E2D               	movlw	45
 16498  00F652  25FB               	addwf	configFile_read@position& (0+255),w,b
 16499  00F654  6FC3               	movwf	??_configFile_read& (0+255),b
 16500  00F656  0E00               	movlw	0
 16501  00F658  21FC               	addwfc	(configFile_read@position+1)& (0+255),w,b
 16502  00F65A  6FC4               	movwf	(??_configFile_read+1)& (0+255),b
 16503  00F65C  0E00               	movlw	0
 16504  00F65E  21FD               	addwfc	(configFile_read@position+2)& (0+255),w,b
 16505  00F660  6FC5               	movwf	(??_configFile_read+2)& (0+255),b
 16506  00F662  0E00               	movlw	0
 16507  00F664  21FE               	addwfc	(configFile_read@position+3)& (0+255),w,b
 16508  00F666  6FC6               	movwf	(??_configFile_read+3)& (0+255),b
 16509  00F668  51C3               	movf	??_configFile_read& (0+255),w,b
 16510  00F66A  5DF6               	subwf	configFile_read@file_size& (0+255),w,b
 16511  00F66C  51C4               	movf	(??_configFile_read+1)& (0+255),w,b
 16512  00F66E  59F7               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 16513  00F670  51C5               	movf	(??_configFile_read+2)& (0+255),w,b
 16514  00F672  59F8               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 16515  00F674  51C6               	movf	(??_configFile_read+3)& (0+255),w,b
 16516  00F676  59F9               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 16517  00F678  B0D8               	btfsc	status,0,c
 16518  00F67A  D035               	goto	l2975
 16519                           
 16520                           ; BSR set to: 1
 16521                           ;config_file.c: 251: {;config_file.c: 253: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 16522  00F67C  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16523  00F680  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16524  00F684  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16525  00F688  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16526  00F68C  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16527  00F690  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16528  00F694  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16529  00F698  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16530  00F69C  1FC3               	comf	??_configFile_read& (0+255),f,b
 16531  00F69E  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16532  00F6A0  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16533  00F6A2  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16534  00F6A4  2BC3               	incf	??_configFile_read& (0+255),f,b
 16535  00F6A6  0E00               	movlw	0
 16536  00F6A8  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16537  00F6AA  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16538  00F6AC  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16539  00F6AE  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16540  00F6B0  25C3               	addwf	??_configFile_read& (0+255),w,b
 16541  00F6B2  0100               	movlb	0	; () banked
 16542  00F6B4  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16543  00F6B6  0101               	movlb	1	; () banked
 16544  00F6B8  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16545  00F6BA  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16546  00F6BC  0100               	movlb	0	; () banked
 16547  00F6BE  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16548  00F6C0  0101               	movlb	1	; () banked
 16549  00F6C2  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16550  00F6C4  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16551  00F6C6  0100               	movlb	0	; () banked
 16552  00F6C8  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16553  00F6CA  0101               	movlb	1	; () banked
 16554  00F6CC  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16555  00F6CE  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16556  00F6D0  0100               	movlb	0	; () banked
 16557  00F6D2  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16558  00F6D4  0E00               	movlw	low _ConfigFile_buffer
 16559  00F6D6  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16560  00F6D8  0E08               	movlw	high _ConfigFile_buffer
 16561  00F6DA  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16562  00F6DC  0101               	movlb	1	; () banked
 16563  00F6DE  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16564  00F6E0  EC86  F08E         	call	_fat_read_from_file
 16565                           
 16566                           ;config_file.c: 254: }
 16567  00F6E4  D019               	goto	l2976
 16568  00F6E6                     l2975:
 16569                           
 16570                           ;config_file.c: 255: else;config_file.c: 256: {;config_file.c: 258: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 16571  00F6E6  C1FB  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 16572  00F6EA  C1FC  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 16573  00F6EE  C1FD  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 16574  00F6F2  C1FE  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 16575  00F6F6  0E2D               	movlw	45
 16576  00F6F8  0100               	movlb	0	; () banked
 16577  00F6FA  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16578  00F6FC  0E00               	movlw	0
 16579  00F6FE  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16580  00F700  0E00               	movlw	0
 16581  00F702  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16582  00F704  0E00               	movlw	0
 16583  00F706  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16584  00F708  0E00               	movlw	low _ConfigFile_buffer
 16585  00F70A  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 16586  00F70C  0E08               	movlw	high _ConfigFile_buffer
 16587  00F70E  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 16588  00F710  0101               	movlb	1	; () banked
 16589  00F712  51FA               	movf	configFile_read@file_number& (0+255),w,b
 16590  00F714  EC86  F08E         	call	_fat_read_from_file
 16591  00F718                     l2976:
 16592                           
 16593                           ;config_file.c: 259: };config_file.c: 262: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 16594  00F718  0ECB               	movlw	low configFile_read@item_string
 16595  00F71A  0100               	movlb	0	; () banked
 16596  00F71C  6F60               	movwf	__get_item@item_string& (0+255),b
 16597  00F71E  0E01               	movlw	high configFile_read@item_string
 16598  00F720  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 16599  00F722  0EEA               	movlw	low configFile_read@value_string
 16600  00F724  6F62               	movwf	__get_item@value_string& (0+255),b
 16601  00F726  0E01               	movlw	high configFile_read@value_string
 16602  00F728  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 16603  00F72A  0E00               	movlw	low _ConfigFile_buffer
 16604  00F72C  6F64               	movwf	__get_item@buffer& (0+255),b
 16605  00F72E  0E08               	movlw	high _ConfigFile_buffer
 16606  00F730  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 16607  00F732  ECA1  F07C         	call	__get_item	;wreg free
 16608  00F736  0101               	movlb	1	; () banked
 16609  00F738  6FC3               	movwf	??_configFile_read& (0+255),b
 16610  00F73A  51C3               	movf	??_configFile_read& (0+255),w,b
 16611  00F73C  27FB               	addwf	configFile_read@position& (0+255),f,b
 16612  00F73E  0E00               	movlw	0
 16613  00F740  23FC               	addwfc	(configFile_read@position+1)& (0+255),f,b
 16614  00F742  23FD               	addwfc	(configFile_read@position+2)& (0+255),f,b
 16615  00F744  23FE               	addwfc	(configFile_read@position+3)& (0+255),f,b
 16616                           
 16617                           ; BSR set to: 1
 16618                           ;config_file.c: 265: _parse_item(&item_string[0], &value_string[0]);
 16619  00F746  0ECB               	movlw	low configFile_read@item_string
 16620  00F748  0100               	movlb	0	; () banked
 16621  00F74A  6F7A               	movwf	__parse_item@item_string& (0+255),b
 16622  00F74C  0E01               	movlw	high configFile_read@item_string
 16623  00F74E  6F7B               	movwf	(__parse_item@item_string+1)& (0+255),b
 16624  00F750  0EEA               	movlw	low configFile_read@value_string
 16625  00F752  6F7C               	movwf	__parse_item@value_string& (0+255),b
 16626  00F754  0E01               	movlw	high configFile_read@value_string
 16627  00F756  6F7D               	movwf	(__parse_item@value_string+1)& (0+255),b
 16628  00F758  EC84  F064         	call	__parse_item	;wreg free
 16629  00F75C                     l2973:
 16630  00F75C  C1FB  F1C3         	movff	configFile_read@position,??_configFile_read
 16631  00F760  C1FC  F1C4         	movff	configFile_read@position+1,??_configFile_read+1
 16632  00F764  C1FD  F1C5         	movff	configFile_read@position+2,??_configFile_read+2
 16633  00F768  C1FE  F1C6         	movff	configFile_read@position+3,??_configFile_read+3
 16634  00F76C  0101               	movlb	1	; () banked
 16635  00F76E  1FC3               	comf	??_configFile_read& (0+255),f,b
 16636  00F770  1FC4               	comf	(??_configFile_read+1)& (0+255),f,b
 16637  00F772  1FC5               	comf	(??_configFile_read+2)& (0+255),f,b
 16638  00F774  1FC6               	comf	(??_configFile_read+3)& (0+255),f,b
 16639  00F776  2BC3               	incf	??_configFile_read& (0+255),f,b
 16640  00F778  0E00               	movlw	0
 16641  00F77A  23C4               	addwfc	(??_configFile_read+1)& (0+255),f,b
 16642  00F77C  23C5               	addwfc	(??_configFile_read+2)& (0+255),f,b
 16643  00F77E  23C6               	addwfc	(??_configFile_read+3)& (0+255),f,b
 16644  00F780  51F6               	movf	configFile_read@file_size& (0+255),w,b
 16645  00F782  25C3               	addwf	??_configFile_read& (0+255),w,b
 16646  00F784  6FC7               	movwf	(??_configFile_read+4)& (0+255),b
 16647  00F786  51F7               	movf	(configFile_read@file_size+1)& (0+255),w,b
 16648  00F788  21C4               	addwfc	(??_configFile_read+1)& (0+255),w,b
 16649  00F78A  6FC8               	movwf	(??_configFile_read+5)& (0+255),b
 16650  00F78C  51F8               	movf	(configFile_read@file_size+2)& (0+255),w,b
 16651  00F78E  21C5               	addwfc	(??_configFile_read+2)& (0+255),w,b
 16652  00F790  6FC9               	movwf	(??_configFile_read+6)& (0+255),b
 16653  00F792  51F9               	movf	(configFile_read@file_size+3)& (0+255),w,b
 16654  00F794  21C6               	addwfc	(??_configFile_read+3)& (0+255),w,b
 16655  00F796  6FCA               	movwf	(??_configFile_read+7)& (0+255),b
 16656  00F798  51CA               	movf	(??_configFile_read+7)& (0+255),w,b
 16657  00F79A  11C9               	iorwf	(??_configFile_read+6)& (0+255),w,b
 16658  00F79C  11C8               	iorwf	(??_configFile_read+5)& (0+255),w,b
 16659  00F79E  E104               	bnz	u16531
 16660  00F7A0  0E04               	movlw	4
 16661  00F7A2  5DC7               	subwf	(??_configFile_read+4)& (0+255),w,b
 16662  00F7A4  A0D8               	btfss	status,0,c
 16663  00F7A6  0012               	return	
 16664  00F7A8                     u16531:
 16665  00F7A8  D753               	goto	l2974
 16666  00F7AA                     __end_of_configFile_read:
 16667                           	opt stack 0
 16668                           tblptru	equ	0xFF8
 16669                           tblptrh	equ	0xFF7
 16670                           tblptrl	equ	0xFF6
 16671                           tablat	equ	0xFF5
 16672                           prodh	equ	0xFF4
 16673                           prodl	equ	0xFF3
 16674                           postinc0	equ	0xFEE
 16675                           wreg	equ	0xFE8
 16676                           postdec1	equ	0xFE5
 16677                           plusw1	equ	0xFE3
 16678                           fsr1h	equ	0xFE2
 16679                           fsr1l	equ	0xFE1
 16680                           indf2	equ	0xFDF
 16681                           postinc2	equ	0xFDE
 16682                           plusw2	equ	0xFDB
 16683                           fsr2h	equ	0xFDA
 16684                           fsr2l	equ	0xFD9
 16685                           status	equ	0xFD8
 16686                           
 16687 ;; *************** function _fat_read_from_file *****************
 16688 ;; Defined at:
 16689 ;;		line 751 in file "fat16.c"
 16690 ;; Parameters:    Size  Location     Type
 16691 ;;  file_number     1    wreg     unsigned char 
 16692 ;;  start_byte      4  105[BANK0 ] unsigned long 
 16693 ;;  length          4  109[BANK0 ] unsigned long 
 16694 ;;  data            2  113[BANK0 ] PTR unsigned char 
 16695 ;;		 -> ConfigFile_buffer(512), 
 16696 ;; Auto vars:     Size  Location     Type
 16697 ;;  file_number     1  119[BANK0 ] unsigned char 
 16698 ;;  root           32  125[BANK0 ] struct .
 16699 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 16700 ;;  cluster         2  121[BANK0 ] unsigned int 
 16701 ;;  return_code     1  120[BANK0 ] unsigned char 
 16702 ;; Return value:  Size  Location     Type
 16703 ;;                  1    wreg      unsigned char 
 16704 ;; Registers used:
 16705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16706 ;; Tracked objects:
 16707 ;;		On entry : 0/0
 16708 ;;		On exit  : 0/0
 16709 ;;		Unchanged: 0/0
 16710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16711 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16712 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16713 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16714 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16715 ;;Total ram usage:       52 bytes
 16716 ;; Hardware stack levels used:    1
 16717 ;; Hardware stack levels required when called:   18
 16718 ;; This function calls:
 16719 ;;		_fat_get_file_information
 16720 ;;		_fat_read_from_file_fast
 16721 ;; This function is called by:
 16722 ;;		_configFile_read
 16723 ;; This function uses a non-reentrant model
 16724 ;;
 16725                           
 16726                           	psect	text61
 16727  011D0C                     __ptext61:
 16728                           	opt stack 0
 16729  011D0C                     _fat_read_from_file:
 16730                           	opt stack 10
 16731                           
 16732                           ; BSR set to: 1
 16733                           ;incstack = 0
 16734                           ;fat_read_from_file@file_number stored from wreg
 16735  011D0C  0100               	movlb	0	; () banked
 16736  011D0E  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16737                           
 16738                           ;fat16.c: 753: rootEntry_t root;;fat16.c: 754: uint16_t cluster;;fat16.c: 755: uint16_t 
      +                          cluster_number;;fat16.c: 756: uint8_t return_code;;fat16.c: 759: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16739  011D10  0EDD               	movlw	low fat_read_from_file@root
 16740  011D12  0100               	movlb	0	; () banked
 16741  011D14  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16742  011D16  0E00               	movlw	high fat_read_from_file@root
 16743  011D18  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16744  011D1A  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16745  011D1C  ECCB  F09E         	call	_fat_get_file_information
 16746  011D20  0100               	movlb	0	; () banked
 16747  011D22  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16748                           
 16749                           ; BSR set to: 0
 16750                           ;fat16.c: 760: if(return_code!=0x00)
 16751  011D24  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16752  011D26  A4D8               	btfss	status,2,c
 16753  011D28  0012               	return	
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;fat16.c: 764: };fat16.c: 767: if(start_byte > root.fileSize)
 16757                           
 16758                           ; BSR set to: 0
 16759                           
 16760                           ; BSR set to: 0
 16761                           ;fat16.c: 761: {;fat16.c: 763: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16762  011D2A  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16763  011D2C  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16764  011D2E  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16765  011D30  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16766  011D32  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16767  011D34  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16768  011D36  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16769  011D38  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16770  011D3A  A0D8               	btfss	status,0,c
 16771  011D3C  0012               	return	
 16772                           
 16773                           ; BSR set to: 0
 16774                           ;fat16.c: 771: };fat16.c: 773: if(start_byte+length > root.fileSize)
 16775                           
 16776                           ; BSR set to: 0
 16777                           
 16778                           ; BSR set to: 0
 16779                           ;fat16.c: 768: {;fat16.c: 770: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16780  011D3E  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16781  011D40  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16782  011D42  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16783  011D44  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16784  011D46  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16785  011D48  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16786  011D4A  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16787  011D4C  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16788  011D4E  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16789  011D50  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16790  011D52  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16791  011D54  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16792  011D56  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16793  011D58  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16794  011D5A  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16795  011D5C  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16796  011D5E  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16797  011D60  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16798  011D62  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16799  011D64  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16800  011D66  B0D8               	btfsc	status,0,c
 16801  011D68  D01D               	goto	l1877
 16802                           
 16803                           ; BSR set to: 0
 16804                           ;fat16.c: 774: {;fat16.c: 776: length = root.fileSize - start_byte;
 16805  011D6A  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16806  011D6E  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16807  011D72  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16808  011D76  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16809  011D7A  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16810  011D7C  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16811  011D7E  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16812  011D80  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16813  011D82  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16814  011D84  0E00               	movlw	0
 16815  011D86  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16816  011D88  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16817  011D8A  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16818  011D8C  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16819  011D8E  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16820  011D90  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16821  011D92  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16822  011D94  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16823  011D96  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16824  011D98  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16825  011D9A  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16826  011D9C  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16827  011D9E  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16828  011DA0  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16829  011DA2  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16830  011DA4                     l1877:
 16831                           
 16832                           ; BSR set to: 0
 16833                           ;fat16.c: 777: };fat16.c: 780: cluster = root.firstCluster;
 16834                           
 16835                           ; BSR set to: 0
 16836  011DA4  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16837  011DA8  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16838                           
 16839                           ; BSR set to: 0
 16840                           ;fat16.c: 781: cluster_number = 0;
 16841  011DAC  0E00               	movlw	0
 16842  011DAE  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16843  011DB0  0E00               	movlw	0
 16844  011DB2  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16845                           
 16846                           ; BSR set to: 0
 16847                           ;fat16.c: 784: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16848  011DB4  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16849  011DB8  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16850  011DBC  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16851  011DC0  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16852  011DC4  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16853  011DC8  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16854  011DCC  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16855  011DD0  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16856  011DD4  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16857  011DD8  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16858  011DDC  0ED9               	movlw	low fat_read_from_file@cluster
 16859  011DDE  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16860  011DE0  0E00               	movlw	high fat_read_from_file@cluster
 16861  011DE2  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16862  011DE4  0EDB               	movlw	low fat_read_from_file@cluster_number
 16863  011DE6  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16864  011DE8  0E00               	movlw	high fat_read_from_file@cluster_number
 16865  011DEA  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16866  011DEC  EC20  F074         	call	_fat_read_from_file_fast	;wreg free
 16867  011DF0  0012               	return	
 16868  011DF2                     __end_of_fat_read_from_file:
 16869                           	opt stack 0
 16870                           tblptru	equ	0xFF8
 16871                           tblptrh	equ	0xFF7
 16872                           tblptrl	equ	0xFF6
 16873                           tablat	equ	0xFF5
 16874                           prodh	equ	0xFF4
 16875                           prodl	equ	0xFF3
 16876                           postinc0	equ	0xFEE
 16877                           wreg	equ	0xFE8
 16878                           postdec1	equ	0xFE5
 16879                           plusw1	equ	0xFE3
 16880                           fsr1h	equ	0xFE2
 16881                           fsr1l	equ	0xFE1
 16882                           indf2	equ	0xFDF
 16883                           postinc2	equ	0xFDE
 16884                           plusw2	equ	0xFDB
 16885                           fsr2h	equ	0xFDA
 16886                           fsr2l	equ	0xFD9
 16887                           status	equ	0xFD8
 16888                           
 16889 ;; *************** function _fat_read_from_file_fast *****************
 16890 ;; Defined at:
 16891 ;;		line 787 in file "fat16.c"
 16892 ;; Parameters:    Size  Location     Type
 16893 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16894 ;;  length          4   69[BANK0 ] unsigned long 
 16895 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16896 ;;		 -> ConfigFile_buffer(512), 
 16897 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16898 ;;		 -> fat_read_from_file@cluster(2), 
 16899 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16900 ;;		 -> fat_read_from_file@cluster_number(2), 
 16901 ;; Auto vars:     Size  Location     Type
 16902 ;;  position        4  101[BANK0 ] unsigned long 
 16903 ;;  read_length     2   99[BANK0 ] unsigned int 
 16904 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16905 ;;  offset          2   95[BANK0 ] unsigned int 
 16906 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16907 ;;  sector          2   91[BANK0 ] unsigned int 
 16908 ;; Return value:  Size  Location     Type
 16909 ;;                  1    wreg      unsigned char 
 16910 ;; Registers used:
 16911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16912 ;; Tracked objects:
 16913 ;;		On entry : 0/0
 16914 ;;		On exit  : 0/0
 16915 ;;		Unchanged: 0/0
 16916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16917 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16918 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16919 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16920 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16921 ;;Total ram usage:       40 bytes
 16922 ;; Hardware stack levels used:    1
 16923 ;; Hardware stack levels required when called:   17
 16924 ;; This function calls:
 16925 ;;		__data_sector_from_cluster
 16926 ;;		__find_nth_cluster
 16927 ;;		__read_fat
 16928 ;;		_flash_partial_read
 16929 ;; This function is called by:
 16930 ;;		_fat_read_from_file
 16931 ;; This function uses a non-reentrant model
 16932 ;;
 16933                           
 16934                           	psect	text62
 16935  00E840                     __ptext62:
 16936                           	opt stack 0
 16937  00E840                     _fat_read_from_file_fast:
 16938                           	opt stack 10
 16939                           
 16940                           ;fat16.c: 789: uint32_t position;;fat16.c: 790: uint16_t offset;;fat16.c: 791: uint16_t 
      +                          sector;;fat16.c: 792: uint16_t read_length;;fat16.c: 793: uint16_t working_cluster;;fat1
      +                          6.c: 794: uint16_t needed_cluster;;fat16.c: 797: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16941                           
 16942                           ;incstack = 0
 16943  00E840  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16944  00E844  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16945  00E848  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16946  00E84C  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16947  00E850  0E0A               	movlw	10
 16948  00E852  D006               	goto	u13500
 16949  00E854                     u13505:
 16950  00E854  0100               	movlb	0	; () banked
 16951  00E856  90D8               	bcf	status,0,c
 16952  00E858  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16953  00E85A  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16954  00E85C  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16955  00E85E  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16956  00E860                     u13500:
 16957  00E860  2EE8               	decfsz	wreg,f,c
 16958  00E862  D7F8               	goto	u13505
 16959  00E864  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16960  00E868  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16961                           
 16962                           ; BSR set to: 0
 16963                           ;fat16.c: 800: if((*cluster_number) > needed_cluster)
 16964  00E86C  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16965  00E870  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16966  00E874  50DE               	movf	postinc2,w,c
 16967  00E876  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16968  00E878  50DE               	movf	postinc2,w,c
 16969  00E87A  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16970  00E87C  B0D8               	btfsc	status,0,c
 16971  00E87E  D002               	goto	l1880
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;fat16.c: 801: {;fat16.c: 802: return 0xFF;
 16975  00E880  0EFF               	movlw	255
 16976                           
 16977                           ; BSR set to: 0
 16978  00E882  0012               	return	
 16979  00E884                     l1880:
 16980                           
 16981                           ; BSR set to: 0
 16982                           ;fat16.c: 803: };fat16.c: 806: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16983                           
 16984                           ; BSR set to: 0
 16985  00E884  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16986  00E888  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16987  00E88C  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16988  00E890  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16989  00E894  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16990  00E898  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16991  00E89C  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16992  00E8A0  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16993  00E8A4  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16994  00E8A6  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16995  00E8A8  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16996  00E8AA  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16997  00E8AC  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16998  00E8AE  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16999  00E8B0  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 17000  00E8B2  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 17001  00E8B4  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17002  00E8B6  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 17003  00E8B8  EC7A  F099         	call	__find_nth_cluster	;wreg free
 17004  00E8BC  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 17005  00E8C0  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 17006  00E8C4  0100               	movlb	0	; () banked
 17007  00E8C6  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 17008  00E8CA  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 17009                           
 17010                           ; BSR set to: 0
 17011                           ;fat16.c: 809: (*cluster_number) = needed_cluster;
 17012  00E8CE  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 17013  00E8D2  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 17014  00E8D6  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 17015  00E8DA  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 17016                           
 17017                           ; BSR set to: 0
 17018                           ;fat16.c: 813: working_cluster = (*cluster);
 17019  00E8DE  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 17020  00E8E2  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 17021  00E8E6  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 17022  00E8EA  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 17023                           
 17024                           ; BSR set to: 0
 17025                           ;fat16.c: 816: position = (needed_cluster << 9);
 17026  00E8EE  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 17027  00E8F2  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 17028  00E8F6  0E09               	movlw	9
 17029  00E8F8                     u13525:
 17030  00E8F8  90D8               	bcf	status,0,c
 17031  00E8FA  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 17032  00E8FC  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17033  00E8FE  2EE8               	decfsz	wreg,f,c
 17034  00E900  D7FB               	goto	u13525
 17035  00E902  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 17036  00E906  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 17037  00E90A  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 17038  00E90C  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 17039                           
 17040                           ; BSR set to: 0
 17041                           ;fat16.c: 817: offset = start_byte - position;
 17042  00E90E  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17043  00E912  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17044  00E916  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17045  00E918  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17046  00E91A  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17047  00E91C  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17048  00E91E  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 17049  00E920  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17050  00E922  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17051  00E924  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 17052  00E926  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17053  00E928  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;fat16.c: 820: position = 0;
 17057  00E92A  0E00               	movlw	0
 17058  00E92C  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 17059  00E92E  0E00               	movlw	0
 17060  00E930  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 17061  00E932  0E00               	movlw	0
 17062  00E934  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 17063  00E936  0E00               	movlw	0
 17064  00E938  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 17065                           
 17066                           ;fat16.c: 821: while(position < length)
 17067  00E93A  D089               	goto	l1882
 17068  00E93C                     
 17069                           ; BSR set to: 0
 17070                           ;fat16.c: 822: {;fat16.c: 824: if(offset==512)
 17071                           
 17072                           ; BSR set to: 0
 17073  00E93C  0E02               	movlw	2
 17074  00E93E  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 17075  00E940  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 17076  00E942  A4D8               	btfss	status,2,c
 17077  00E944  D00F               	goto	l1884
 17078                           
 17079                           ; BSR set to: 0
 17080                           ;fat16.c: 825: {;fat16.c: 827: working_cluster = _read_fat(working_cluster);
 17081  00E946  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 17082  00E94A  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 17083  00E94E  EC27  F0A4         	call	__read_fat	;wreg free
 17084  00E952  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 17085  00E956  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 17086                           
 17087                           ;fat16.c: 828: offset = 0;
 17088  00E95A  0E00               	movlw	0
 17089  00E95C  0100               	movlb	0	; () banked
 17090  00E95E  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 17091  00E960  0E00               	movlw	0
 17092  00E962  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 17093  00E964                     l1884:
 17094                           
 17095                           ; BSR set to: 0
 17096                           ;fat16.c: 829: };fat16.c: 832: sector = _data_sector_from_cluster(working_cluster);
 17097                           
 17098                           ; BSR set to: 0
 17099  00E964  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 17100  00E968  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 17101  00E96C  ECD8  F0AC         	call	__data_sector_from_cluster	;wreg free
 17102  00E970  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 17103  00E974  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 17104                           
 17105                           ;fat16.c: 835: read_length = 512 - offset;
 17106  00E978  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 17107  00E97C  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 17108  00E980  0100               	movlb	0	; () banked
 17109  00E982  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17110  00E984  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17111  00E986  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17112  00E988  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17113  00E98A  0E00               	movlw	0
 17114  00E98C  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17115  00E98E  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17116  00E990  0E02               	movlw	2
 17117  00E992  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17118  00E994  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17119                           
 17120                           ; BSR set to: 0
 17121                           ;fat16.c: 836: if(read_length > (length-position))
 17122  00E996  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17123  00E998  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 17124  00E99A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17125  00E99C  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 17126  00E99E  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 17127  00E9A0  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 17128  00E9A2  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 17129  00E9A6  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 17130  00E9AA  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 17131  00E9AE  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 17132  00E9B2  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17133  00E9B4  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17134  00E9B6  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17135  00E9B8  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17136  00E9BA  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 17137  00E9BC  0E00               	movlw	0
 17138  00E9BE  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 17139  00E9C0  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 17140  00E9C2  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 17141  00E9C4  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17142  00E9C6  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 17143  00E9C8  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 17144  00E9CA  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17145  00E9CC  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 17146  00E9CE  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 17147  00E9D0  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17148  00E9D2  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 17149  00E9D4  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 17150  00E9D6  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17151  00E9D8  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 17152  00E9DA  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 17153  00E9DC  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 17154  00E9DE  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 17155  00E9E0  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17156  00E9E2  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 17157  00E9E4  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 17158  00E9E6  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 17159  00E9E8  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 17160  00E9EA  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 17161  00E9EC  B0D8               	btfsc	status,0,c
 17162  00E9EE  D00E               	goto	l1885
 17163                           
 17164                           ; BSR set to: 0
 17165                           ;fat16.c: 837: {;fat16.c: 839: read_length = length - position;
 17166  00E9F0  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 17167  00E9F4  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 17168  00E9F8  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 17169  00E9FA  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17170  00E9FC  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 17171  00E9FE  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 17172  00EA00  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17173  00EA02  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 17174  00EA04  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 17175  00EA06  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17176  00EA08  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 17177  00EA0A  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 17178  00EA0C                     l1885:
 17179                           
 17180                           ; BSR set to: 0
 17181                           ;fat16.c: 840: };fat16.c: 843: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 17182                           
 17183                           ; BSR set to: 0
 17184  00EA0C  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 17185  00EA10  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 17186  00EA14  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 17187  00EA18  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 17188  00EA1C  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 17189  00EA20  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 17190  00EA24  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 17191  00EA26  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 17192  00EA28  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17193  00EA2A  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17194  00EA2C  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 17195  00EA2E  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17196  00EA30  EC98  F0AB         	call	_flash_partial_read	;wreg free
 17197                           
 17198                           ;fat16.c: 846: position += read_length;
 17199  00EA34  0100               	movlb	0	; () banked
 17200  00EA36  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17201  00EA38  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 17202  00EA3A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17203  00EA3C  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 17204  00EA3E  0E00               	movlw	0
 17205  00EA40  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 17206  00EA42  0E00               	movlw	0
 17207  00EA44  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 17208                           
 17209                           ; BSR set to: 0
 17210                           ;fat16.c: 847: offset += read_length;
 17211  00EA46  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 17212  00EA48  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 17213  00EA4A  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 17214  00EA4C  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 17215  00EA4E                     l1882:
 17216                           
 17217                           ; BSR set to: 0
 17218                           
 17219                           ; BSR set to: 0
 17220  00EA4E  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 17221  00EA50  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 17222  00EA52  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 17223  00EA54  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 17224  00EA56  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 17225  00EA58  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 17226  00EA5A  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 17227  00EA5C  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 17228  00EA5E  A0D8               	btfss	status,0,c
 17229  00EA60  D76D               	goto	l1883
 17230                           
 17231                           ; BSR set to: 0
 17232                           ;fat16.c: 848: };fat16.c: 851: return 0x00;
 17233                           
 17234                           ; BSR set to: 0
 17235  00EA62  0E00               	movlw	0
 17236  00EA64  0012               	return	
 17237  00EA66                     __end_of_fat_read_from_file_fast:
 17238                           	opt stack 0
 17239                           tblptru	equ	0xFF8
 17240                           tblptrh	equ	0xFF7
 17241                           tblptrl	equ	0xFF6
 17242                           tablat	equ	0xFF5
 17243                           prodh	equ	0xFF4
 17244                           prodl	equ	0xFF3
 17245                           postinc0	equ	0xFEE
 17246                           wreg	equ	0xFE8
 17247                           postdec1	equ	0xFE5
 17248                           plusw1	equ	0xFE3
 17249                           fsr1h	equ	0xFE2
 17250                           fsr1l	equ	0xFE1
 17251                           indf2	equ	0xFDF
 17252                           postinc2	equ	0xFDE
 17253                           postdec2	equ	0xFDD
 17254                           plusw2	equ	0xFDB
 17255                           fsr2h	equ	0xFDA
 17256                           fsr2l	equ	0xFD9
 17257                           status	equ	0xFD8
 17258                           
 17259 ;; *************** function __find_nth_cluster *****************
 17260 ;; Defined at:
 17261 ;;		line 182 in file "fat16.c"
 17262 ;; Parameters:    Size  Location     Type
 17263 ;;  cluster         2   55[BANK0 ] unsigned int 
 17264 ;;  n               2   57[BANK0 ] unsigned int 
 17265 ;; Auto vars:     Size  Location     Type
 17266 ;;  sector          2   63[BANK0 ] unsigned int 
 17267 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 17268 ;;  offset          2   59[BANK0 ] unsigned int 
 17269 ;; Return value:  Size  Location     Type
 17270 ;;                  2   55[BANK0 ] unsigned int 
 17271 ;; Registers used:
 17272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17273 ;; Tracked objects:
 17274 ;;		On entry : 0/0
 17275 ;;		On exit  : 0/0
 17276 ;;		Unchanged: 0/0
 17277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17278 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17279 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17280 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17281 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17282 ;;Total ram usage:       10 bytes
 17283 ;; Hardware stack levels used:    1
 17284 ;; Hardware stack levels required when called:   16
 17285 ;; This function calls:
 17286 ;;		__fat_offset_from_cluster
 17287 ;;		__fat_sector_from_cluster
 17288 ;;		__read_fat
 17289 ;;		__read_value_from_offset
 17290 ;;		_flash_sector_read
 17291 ;; This function is called by:
 17292 ;;		_fat_read_from_file_fast
 17293 ;;		_fat_modify_file
 17294 ;;		_fat_copy_sector_to_buffer
 17295 ;; This function uses a non-reentrant model
 17296 ;;
 17297                           
 17298                           	psect	text63
 17299  0132F4                     __ptext63:
 17300                           	opt stack 0
 17301  0132F4                     __find_nth_cluster:
 17302                           	opt stack 11
 17303                           
 17304                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 17305                           
 17306                           ; BSR set to: 0
 17307                           ;incstack = 0
 17308  0132F4  0E00               	movlw	0
 17309  0132F6  0100               	movlb	0	; () banked
 17310  0132F8  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 17311  0132FA  0E00               	movlw	0
 17312  0132FC  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 17313                           
 17314                           ; BSR set to: 0
 17315                           ;fat16.c: 189: if(n==1)
 17316  0132FE  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 17317  013300  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17318  013302  A4D8               	btfss	status,2,c
 17319  013304  D040               	goto	l1767
 17320                           
 17321                           ; BSR set to: 0
 17322                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 17323  013306  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 17324  01330A  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 17325  01330E  EC27  F0A4         	call	__read_fat	;wreg free
 17326  013312  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 17327  013316  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 17328  01331A  0012               	return	
 17329  01331C                     
 17330                           ;fat16.c: 195: {;fat16.c: 197: sector = _fat_sector_from_cluster(cluster);
 17331  01331C  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 17332  013320  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 17333  013324  EC65  F0AC         	call	__fat_sector_from_cluster	;wreg free
 17334  013328  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 17335  01332C  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 17336                           
 17337                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 17338  013330  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 17339  013334  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 17340  013338  EC72  F0AC         	call	__fat_offset_from_cluster	;wreg free
 17341  01333C  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 17342  013340  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 17343                           
 17344                           ;fat16.c: 201: if(sector != sector_in_buffer)
 17345  013344  0100               	movlb	0	; () banked
 17346  013346  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 17347  013348  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 17348  01334A  E104               	bnz	u12690
 17349  01334C  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 17350  01334E  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 17351  013350  B4D8               	btfsc	status,2,c
 17352  013352  D00A               	goto	l1769
 17353  013354                     u12690:
 17354                           
 17355                           ; BSR set to: 0
 17356                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 17357  013354  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 17358  013358  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 17359  01335C  0E00               	movlw	low _buffer
 17360  01335E  6F89               	movwf	flash_sector_read@data& (0+255),b
 17361  013360  0E0A               	movlw	high _buffer
 17362  013362  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17363  013364  EC84  F0AB         	call	_flash_sector_read	;wreg free
 17364  013368                     l1769:
 17365                           
 17366                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 17367  013368  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 17368  01336C  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 17369  013370  0E00               	movlw	low _buffer
 17370  013372  0100               	movlb	0	; () banked
 17371  013374  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 17372  013376  0E0A               	movlw	high _buffer
 17373  013378  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 17374  01337A  EC8A  F0A7         	call	__read_value_from_offset	;wreg free
 17375  01337E  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 17376  013382  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 17377  013386                     l1767:
 17378  013386  0100               	movlb	0	; () banked
 17379  013388  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 17380  01338A  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 17381  01338C  A4D8               	btfss	status,2,c
 17382  01338E  D7C6               	goto	l1768
 17383                           
 17384                           ; BSR set to: 0
 17385                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 17386  013390  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 17387  013394  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 17388  013398  0012               	return		;funcret
 17389  01339A                     __end_of__find_nth_cluster:
 17390                           	opt stack 0
 17391                           tblptru	equ	0xFF8
 17392                           tblptrh	equ	0xFF7
 17393                           tblptrl	equ	0xFF6
 17394                           tablat	equ	0xFF5
 17395                           prodh	equ	0xFF4
 17396                           prodl	equ	0xFF3
 17397                           postinc0	equ	0xFEE
 17398                           wreg	equ	0xFE8
 17399                           postdec1	equ	0xFE5
 17400                           plusw1	equ	0xFE3
 17401                           fsr1h	equ	0xFE2
 17402                           fsr1l	equ	0xFE1
 17403                           indf2	equ	0xFDF
 17404                           postinc2	equ	0xFDE
 17405                           postdec2	equ	0xFDD
 17406                           plusw2	equ	0xFDB
 17407                           fsr2h	equ	0xFDA
 17408                           fsr2l	equ	0xFD9
 17409                           status	equ	0xFD8
 17410                           
 17411 ;; *************** function __read_value_from_offset *****************
 17412 ;; Defined at:
 17413 ;;		line 114 in file "fat16.c"
 17414 ;; Parameters:    Size  Location     Type
 17415 ;;  offset          2    0[BANK0 ] unsigned int 
 17416 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 17417 ;;		 -> buffer(512), 
 17418 ;; Auto vars:     Size  Location     Type
 17419 ;;  value           2    7[BANK0 ] unsigned int 
 17420 ;; Return value:  Size  Location     Type
 17421 ;;                  2    0[BANK0 ] unsigned int 
 17422 ;; Registers used:
 17423 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17424 ;; Tracked objects:
 17425 ;;		On entry : 0/0
 17426 ;;		On exit  : 0/0
 17427 ;;		Unchanged: 0/0
 17428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17430 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17431 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17432 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17433 ;;Total ram usage:        9 bytes
 17434 ;; Hardware stack levels used:    1
 17435 ;; Hardware stack levels required when called:   10
 17436 ;; This function calls:
 17437 ;;		Nothing
 17438 ;; This function is called by:
 17439 ;;		__find_nth_cluster
 17440 ;;		__make_cluster_chain
 17441 ;; This function uses a non-reentrant model
 17442 ;;
 17443                           
 17444                           	psect	text64
 17445  014F14                     __ptext64:
 17446                           	opt stack 0
 17447  014F14                     __read_value_from_offset:
 17448                           	opt stack 16
 17449                           
 17450                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 17451                           
 17452                           ;incstack = 0
 17453  014F14  0E01               	movlw	1
 17454  014F16  0100               	movlb	0	; () banked
 17455  014F18  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 17456  014F1A  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17457  014F1C  0E00               	movlw	0
 17458  014F1E  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 17459  014F20  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 17460  014F22  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17461  014F24  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17462  014F26  6ED9               	movwf	fsr2l,c
 17463  014F28  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 17464  014F2A  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17465  014F2C  6EDA               	movwf	fsr2h,c
 17466  014F2E  50DF               	movf	indf2,w,c
 17467  014F30  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 17468  014F32  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 17469  014F34  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 17470  014F36  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 17471                           
 17472                           ; BSR set to: 0
 17473                           ;fat16.c: 118: value <<= 8;
 17474  014F38  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 17475  014F3A  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 17476  014F3C  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 17477                           
 17478                           ; BSR set to: 0
 17479                           ;fat16.c: 119: value |= buffer[offset];
 17480  014F3E  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 17481  014F40  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 17482  014F42  6ED9               	movwf	fsr2l,c
 17483  014F44  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 17484  014F46  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 17485  014F48  6EDA               	movwf	fsr2h,c
 17486  014F4A  50DF               	movf	indf2,w,c
 17487  014F4C  6F64               	movwf	??__read_value_from_offset& (0+255),b
 17488  014F4E  5164               	movf	??__read_value_from_offset& (0+255),w,b
 17489  014F50  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 17490                           
 17491                           ; BSR set to: 0
 17492                           ;fat16.c: 120: return value;
 17493  014F52  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 17494  014F56  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 17495  014F5A  0012               	return	
 17496  014F5C                     __end_of__read_value_from_offset:
 17497                           	opt stack 0
 17498                           tblptru	equ	0xFF8
 17499                           tblptrh	equ	0xFF7
 17500                           tblptrl	equ	0xFF6
 17501                           tablat	equ	0xFF5
 17502                           prodh	equ	0xFF4
 17503                           prodl	equ	0xFF3
 17504                           postinc0	equ	0xFEE
 17505                           wreg	equ	0xFE8
 17506                           postdec1	equ	0xFE5
 17507                           plusw1	equ	0xFE3
 17508                           fsr1h	equ	0xFE2
 17509                           fsr1l	equ	0xFE1
 17510                           indf2	equ	0xFDF
 17511                           postinc2	equ	0xFDE
 17512                           postdec2	equ	0xFDD
 17513                           plusw2	equ	0xFDB
 17514                           fsr2h	equ	0xFDA
 17515                           fsr2l	equ	0xFD9
 17516                           status	equ	0xFD8
 17517                           
 17518 ;; *************** function __read_fat *****************
 17519 ;; Defined at:
 17520 ;;		line 456 in file "fat16.c"
 17521 ;; Parameters:    Size  Location     Type
 17522 ;;  cluster         2   47[BANK0 ] unsigned int 
 17523 ;; Auto vars:     Size  Location     Type
 17524 ;;  value           2   53[BANK0 ] unsigned int 
 17525 ;;  offset          2   51[BANK0 ] unsigned int 
 17526 ;;  sector          2   49[BANK0 ] unsigned int 
 17527 ;; Return value:  Size  Location     Type
 17528 ;;                  2   47[BANK0 ] unsigned int 
 17529 ;; Registers used:
 17530 ;;		wreg, status,2, status,0, cstack
 17531 ;; Tracked objects:
 17532 ;;		On entry : 0/0
 17533 ;;		On exit  : 0/0
 17534 ;;		Unchanged: 0/0
 17535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17536 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17537 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17539 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17540 ;;Total ram usage:        8 bytes
 17541 ;; Hardware stack levels used:    1
 17542 ;; Hardware stack levels required when called:   15
 17543 ;; This function calls:
 17544 ;;		__fat_offset_from_cluster
 17545 ;;		__fat_sector_from_cluster
 17546 ;;		_flash_partial_read
 17547 ;; This function is called by:
 17548 ;;		__find_nth_cluster
 17549 ;;		_fat_read_from_file_fast
 17550 ;;		_fat_modify_file
 17551 ;; This function uses a non-reentrant model
 17552 ;;
 17553                           
 17554                           	psect	text65
 17555  01484E                     __ptext65:
 17556                           	opt stack 0
 17557  01484E                     __read_fat:
 17558                           	opt stack 12
 17559                           
 17560                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 17561                           
 17562                           ; BSR set to: 0
 17563                           ;incstack = 0
 17564  01484E  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 17565  014852  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 17566  014856  EC65  F0AC         	call	__fat_sector_from_cluster	;wreg free
 17567  01485A  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 17568  01485E  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 17569                           
 17570                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 17571  014862  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 17572  014866  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 17573  01486A  EC72  F0AC         	call	__fat_offset_from_cluster	;wreg free
 17574  01486E  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 17575  014872  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 17576                           
 17577                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 17578  014876  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 17579  01487A  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 17580  01487E  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 17581  014882  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 17582  014886  0E00               	movlw	0
 17583  014888  0100               	movlb	0	; () banked
 17584  01488A  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17585  01488C  0E02               	movlw	2
 17586  01488E  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17587  014890  0E95               	movlw	low __read_fat@value
 17588  014892  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17589  014894  0E00               	movlw	high __read_fat@value
 17590  014896  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17591  014898  EC98  F0AB         	call	_flash_partial_read	;wreg free
 17592                           
 17593                           ;fat16.c: 470: return value;
 17594  01489C  C095  F08F         	movff	__read_fat@value,?__read_fat
 17595  0148A0  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 17596  0148A4  0012               	return	
 17597  0148A6                     __end_of__read_fat:
 17598                           	opt stack 0
 17599                           tblptru	equ	0xFF8
 17600                           tblptrh	equ	0xFF7
 17601                           tblptrl	equ	0xFF6
 17602                           tablat	equ	0xFF5
 17603                           prodh	equ	0xFF4
 17604                           prodl	equ	0xFF3
 17605                           postinc0	equ	0xFEE
 17606                           wreg	equ	0xFE8
 17607                           postdec1	equ	0xFE5
 17608                           plusw1	equ	0xFE3
 17609                           fsr1h	equ	0xFE2
 17610                           fsr1l	equ	0xFE1
 17611                           indf2	equ	0xFDF
 17612                           postinc2	equ	0xFDE
 17613                           postdec2	equ	0xFDD
 17614                           plusw2	equ	0xFDB
 17615                           fsr2h	equ	0xFDA
 17616                           fsr2l	equ	0xFD9
 17617                           status	equ	0xFD8
 17618                           
 17619 ;; *************** function __fat_sector_from_cluster *****************
 17620 ;; Defined at:
 17621 ;;		line 75 in file "fat16.c"
 17622 ;; Parameters:    Size  Location     Type
 17623 ;;  cluster         2    0[BANK0 ] unsigned int 
 17624 ;; Auto vars:     Size  Location     Type
 17625 ;;		None
 17626 ;; Return value:  Size  Location     Type
 17627 ;;                  2    0[BANK0 ] unsigned int 
 17628 ;; Registers used:
 17629 ;;		wreg, status,2, status,0
 17630 ;; Tracked objects:
 17631 ;;		On entry : 0/0
 17632 ;;		On exit  : 0/0
 17633 ;;		Unchanged: 0/0
 17634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17635 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17638 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17639 ;;Total ram usage:        2 bytes
 17640 ;; Hardware stack levels used:    1
 17641 ;; Hardware stack levels required when called:   10
 17642 ;; This function calls:
 17643 ;;		Nothing
 17644 ;; This function is called by:
 17645 ;;		__find_nth_cluster
 17646 ;;		__make_cluster_chain
 17647 ;;		__read_fat
 17648 ;; This function uses a non-reentrant model
 17649 ;;
 17650                           
 17651                           	psect	text66
 17652  0158CA                     __ptext66:
 17653                           	opt stack 0
 17654  0158CA                     __fat_sector_from_cluster:
 17655                           	opt stack 16
 17656                           
 17657                           ;fat16.c: 77: cluster >>= 8;
 17658                           
 17659                           ;incstack = 0
 17660  0158CA  0100               	movlb	0	; () banked
 17661  0158CC  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 17662  0158CE  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 17663  0158D0  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 17664                           
 17665                           ; BSR set to: 0
 17666                           ;fat16.c: 78: cluster += 2;
 17667  0158D2  0E02               	movlw	2
 17668  0158D4  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 17669  0158D6  0E00               	movlw	0
 17670  0158D8  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 17671                           
 17672                           ; BSR set to: 0
 17673                           ;fat16.c: 79: return cluster;
 17674  0158DA  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 17675  0158DE  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 17676  0158E2  0012               	return	
 17677  0158E4                     __end_of__fat_sector_from_cluster:
 17678                           	opt stack 0
 17679                           tblptru	equ	0xFF8
 17680                           tblptrh	equ	0xFF7
 17681                           tblptrl	equ	0xFF6
 17682                           tablat	equ	0xFF5
 17683                           prodh	equ	0xFF4
 17684                           prodl	equ	0xFF3
 17685                           postinc0	equ	0xFEE
 17686                           wreg	equ	0xFE8
 17687                           postdec1	equ	0xFE5
 17688                           plusw1	equ	0xFE3
 17689                           fsr1h	equ	0xFE2
 17690                           fsr1l	equ	0xFE1
 17691                           indf2	equ	0xFDF
 17692                           postinc2	equ	0xFDE
 17693                           postdec2	equ	0xFDD
 17694                           plusw2	equ	0xFDB
 17695                           fsr2h	equ	0xFDA
 17696                           fsr2l	equ	0xFD9
 17697                           status	equ	0xFD8
 17698                           
 17699 ;; *************** function __fat_offset_from_cluster *****************
 17700 ;; Defined at:
 17701 ;;		line 82 in file "fat16.c"
 17702 ;; Parameters:    Size  Location     Type
 17703 ;;  cluster         2    0[BANK0 ] unsigned int 
 17704 ;; Auto vars:     Size  Location     Type
 17705 ;;		None
 17706 ;; Return value:  Size  Location     Type
 17707 ;;                  2    0[BANK0 ] unsigned int 
 17708 ;; Registers used:
 17709 ;;		wreg, status,2, status,0
 17710 ;; Tracked objects:
 17711 ;;		On entry : 0/0
 17712 ;;		On exit  : 0/0
 17713 ;;		Unchanged: 0/0
 17714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17715 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17716 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17717 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17718 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17719 ;;Total ram usage:        2 bytes
 17720 ;; Hardware stack levels used:    1
 17721 ;; Hardware stack levels required when called:   10
 17722 ;; This function calls:
 17723 ;;		Nothing
 17724 ;; This function is called by:
 17725 ;;		__find_nth_cluster
 17726 ;;		__make_cluster_chain
 17727 ;;		__read_fat
 17728 ;; This function uses a non-reentrant model
 17729 ;;
 17730                           
 17731                           	psect	text67
 17732  0158E4                     __ptext67:
 17733                           	opt stack 0
 17734  0158E4                     __fat_offset_from_cluster:
 17735                           	opt stack 16
 17736                           
 17737                           ;fat16.c: 84: cluster &= 0xFF;
 17738                           
 17739                           ; BSR set to: 0
 17740                           ;incstack = 0
 17741  0158E4  0EFF               	movlw	255
 17742  0158E6  0100               	movlb	0	; () banked
 17743  0158E8  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17744  0158EA  0E00               	movlw	0
 17745  0158EC  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17746                           
 17747                           ; BSR set to: 0
 17748                           ;fat16.c: 85: cluster <<= 1;
 17749  0158EE  90D8               	bcf	status,0,c
 17750  0158F0  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17751  0158F2  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17752                           
 17753                           ; BSR set to: 0
 17754                           ;fat16.c: 86: return cluster;
 17755  0158F4  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17756  0158F8  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17757  0158FC  0012               	return	
 17758  0158FE                     __end_of__fat_offset_from_cluster:
 17759                           	opt stack 0
 17760                           tblptru	equ	0xFF8
 17761                           tblptrh	equ	0xFF7
 17762                           tblptrl	equ	0xFF6
 17763                           tablat	equ	0xFF5
 17764                           prodh	equ	0xFF4
 17765                           prodl	equ	0xFF3
 17766                           postinc0	equ	0xFEE
 17767                           wreg	equ	0xFE8
 17768                           postdec1	equ	0xFE5
 17769                           plusw1	equ	0xFE3
 17770                           fsr1h	equ	0xFE2
 17771                           fsr1l	equ	0xFE1
 17772                           indf2	equ	0xFDF
 17773                           postinc2	equ	0xFDE
 17774                           postdec2	equ	0xFDD
 17775                           plusw2	equ	0xFDB
 17776                           fsr2h	equ	0xFDA
 17777                           fsr2l	equ	0xFD9
 17778                           status	equ	0xFD8
 17779                           
 17780 ;; *************** function __data_sector_from_cluster *****************
 17781 ;; Defined at:
 17782 ;;		line 70 in file "fat16.c"
 17783 ;; Parameters:    Size  Location     Type
 17784 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17785 ;; Auto vars:     Size  Location     Type
 17786 ;;		None
 17787 ;; Return value:  Size  Location     Type
 17788 ;;                  2    0[BANK0 ] unsigned int 
 17789 ;; Registers used:
 17790 ;;		wreg, status,2, status,0
 17791 ;; Tracked objects:
 17792 ;;		On entry : 0/0
 17793 ;;		On exit  : 0/0
 17794 ;;		Unchanged: 0/0
 17795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17796 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17799 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17800 ;;Total ram usage:        2 bytes
 17801 ;; Hardware stack levels used:    1
 17802 ;; Hardware stack levels required when called:   10
 17803 ;; This function calls:
 17804 ;;		Nothing
 17805 ;; This function is called by:
 17806 ;;		_fat_read_from_file_fast
 17807 ;;		_fat_modify_file
 17808 ;;		_fat_copy_sector_to_buffer
 17809 ;; This function uses a non-reentrant model
 17810 ;;
 17811                           
 17812                           	psect	text68
 17813  0159B0                     __ptext68:
 17814                           	opt stack 0
 17815  0159B0                     __data_sector_from_cluster:
 17816                           	opt stack 17
 17817                           
 17818                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;incstack = 0
 17822  0159B0  0E24               	movlw	36
 17823  0159B2  0100               	movlb	0	; () banked
 17824  0159B4  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17825  0159B6  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17826  0159B8  0E00               	movlw	0
 17827  0159BA  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17828  0159BC  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17829  0159BE  0012               	return	
 17830  0159C0                     __end_of__data_sector_from_cluster:
 17831                           	opt stack 0
 17832                           tblptru	equ	0xFF8
 17833                           tblptrh	equ	0xFF7
 17834                           tblptrl	equ	0xFF6
 17835                           tablat	equ	0xFF5
 17836                           prodh	equ	0xFF4
 17837                           prodl	equ	0xFF3
 17838                           postinc0	equ	0xFEE
 17839                           wreg	equ	0xFE8
 17840                           postdec1	equ	0xFE5
 17841                           plusw1	equ	0xFE3
 17842                           fsr1h	equ	0xFE2
 17843                           fsr1l	equ	0xFE1
 17844                           indf2	equ	0xFDF
 17845                           postinc2	equ	0xFDE
 17846                           postdec2	equ	0xFDD
 17847                           plusw2	equ	0xFDB
 17848                           fsr2h	equ	0xFDA
 17849                           fsr2l	equ	0xFD9
 17850                           status	equ	0xFD8
 17851                           
 17852 ;; *************** function _fat_get_file_information *****************
 17853 ;; Defined at:
 17854 ;;		line 1391 in file "fat16.c"
 17855 ;; Parameters:    Size  Location     Type
 17856 ;;  file_number     1    wreg     unsigned char 
 17857 ;;  data            2   47[BANK0 ] PTR struct .
 17858 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17859 ;; Auto vars:     Size  Location     Type
 17860 ;;  file_number     1   54[BANK0 ] unsigned char 
 17861 ;;  offset          2   52[BANK0 ] unsigned int 
 17862 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17863 ;; Return value:  Size  Location     Type
 17864 ;;                  1    wreg      unsigned char 
 17865 ;; Registers used:
 17866 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17867 ;; Tracked objects:
 17868 ;;		On entry : 0/0
 17869 ;;		On exit  : 0/0
 17870 ;;		Unchanged: 0/0
 17871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17872 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17873 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17874 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17875 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17876 ;;Total ram usage:        8 bytes
 17877 ;; Hardware stack levels used:    1
 17878 ;; Hardware stack levels required when called:   15
 17879 ;; This function calls:
 17880 ;;		__offset_from_file_number
 17881 ;;		__sector_from_file_number
 17882 ;;		_flash_partial_read
 17883 ;; This function is called by:
 17884 ;;		_fat_read_from_file
 17885 ;;		_fat_resize_file
 17886 ;;		_fat_modify_file
 17887 ;;		_fat_rename_file
 17888 ;; This function uses a non-reentrant model
 17889 ;;
 17890                           
 17891                           	psect	text69
 17892  013D96                     __ptext69:
 17893                           	opt stack 0
 17894  013D96                     _fat_get_file_information:
 17895                           	opt stack 12
 17896                           
 17897                           ; BSR set to: 0
 17898                           ;incstack = 0
 17899                           ;fat_get_file_information@file_number stored from wreg
 17900  013D96  0100               	movlb	0	; () banked
 17901  013D98  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17902                           
 17903                           ;fat16.c: 1393: uint16_t root_sector;;fat16.c: 1394: uint16_t offset;;fat16.c: 1396: if(
      +                          file_number>=64)
 17904  013D9A  0E3F               	movlw	63
 17905  013D9C  0100               	movlb	0	; () banked
 17906  013D9E  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17907  013DA0  D002               	goto	l2078
 17908                           
 17909                           ; BSR set to: 0
 17910                           ;fat16.c: 1397: {;fat16.c: 1399: return 0x01;
 17911  013DA2  0E01               	movlw	1
 17912                           
 17913                           ; BSR set to: 0
 17914  013DA4  0012               	return	
 17915  013DA6                     l2078:
 17916                           
 17917                           ; BSR set to: 0
 17918                           ;fat16.c: 1400: };fat16.c: 1403: root_sector = _sector_from_file_number(file_number);
 17919                           
 17920                           ; BSR set to: 0
 17921  013DA6  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17922  013DA8  EC24  F0AA         	call	__sector_from_file_number
 17923  013DAC  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17924  013DB0  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17925                           
 17926                           ;fat16.c: 1404: offset = _offset_from_file_number(file_number);
 17927  013DB4  0100               	movlb	0	; () banked
 17928  013DB6  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17929  013DB8  EC33  F0AB         	call	__offset_from_file_number
 17930  013DBC  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17931  013DC0  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17932                           
 17933                           ;fat16.c: 1407: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17934  013DC4  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17935  013DC8  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17936  013DCC  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17937  013DD0  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17938  013DD4  0E00               	movlw	0
 17939  013DD6  0100               	movlb	0	; () banked
 17940  013DD8  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17941  013DDA  0E20               	movlw	32
 17942  013DDC  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17943  013DDE  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17944  013DE2  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17945  013DE6  EC98  F0AB         	call	_flash_partial_read	;wreg free
 17946                           
 17947                           ;fat16.c: 1410: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17948  013DEA  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17949  013DEE  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17950  013DF2  50DF               	movf	indf2,w,c
 17951  013DF4  B4D8               	btfsc	status,2,c
 17952  013DF6  D008               	goto	u13490
 17953  013DF8  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17954  013DFC  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17955  013E00  0EE5               	movlw	229
 17956  013E02  18DE               	xorwf	postinc2,w,c
 17957  013E04  A4D8               	btfss	status,2,c
 17958  013E06  D002               	goto	l2080
 17959  013E08                     u13490:
 17960                           
 17961                           ;fat16.c: 1411: {;fat16.c: 1413: return 0x02;
 17962  013E08  0E02               	movlw	2
 17963  013E0A  0012               	return	
 17964  013E0C                     l2080:
 17965                           
 17966                           ;fat16.c: 1414: };fat16.c: 1417: return 0x00;
 17967  013E0C  0E00               	movlw	0
 17968  013E0E  0012               	return	
 17969  013E10                     __end_of_fat_get_file_information:
 17970                           	opt stack 0
 17971                           tblptru	equ	0xFF8
 17972                           tblptrh	equ	0xFF7
 17973                           tblptrl	equ	0xFF6
 17974                           tablat	equ	0xFF5
 17975                           prodh	equ	0xFF4
 17976                           prodl	equ	0xFF3
 17977                           postinc0	equ	0xFEE
 17978                           wreg	equ	0xFE8
 17979                           postdec1	equ	0xFE5
 17980                           plusw1	equ	0xFE3
 17981                           fsr1h	equ	0xFE2
 17982                           fsr1l	equ	0xFE1
 17983                           indf2	equ	0xFDF
 17984                           postinc2	equ	0xFDE
 17985                           postdec2	equ	0xFDD
 17986                           plusw2	equ	0xFDB
 17987                           fsr2h	equ	0xFDA
 17988                           fsr2l	equ	0xFD9
 17989                           status	equ	0xFD8
 17990                           
 17991 ;; *************** function _fat_get_file_size *****************
 17992 ;; Defined at:
 17993 ;;		line 562 in file "fat16.c"
 17994 ;; Parameters:    Size  Location     Type
 17995 ;;  file_number     1    wreg     unsigned char 
 17996 ;; Auto vars:     Size  Location     Type
 17997 ;;  file_number     1   65[BANK0 ] unsigned char 
 17998 ;;  file_size       4   61[BANK0 ] unsigned long 
 17999 ;;  offset          2   59[BANK0 ] unsigned int 
 18000 ;;  sector          2   57[BANK0 ] unsigned int 
 18001 ;; Return value:  Size  Location     Type
 18002 ;;                  4   53[BANK0 ] unsigned long 
 18003 ;; Registers used:
 18004 ;;		wreg, status,2, status,0, cstack
 18005 ;; Tracked objects:
 18006 ;;		On entry : 0/0
 18007 ;;		On exit  : 0/0
 18008 ;;		Unchanged: 0/0
 18009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18010 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18011 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18013 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18014 ;;Total ram usage:       13 bytes
 18015 ;; Hardware stack levels used:    1
 18016 ;; Hardware stack levels required when called:   16
 18017 ;; This function calls:
 18018 ;;		__offset_from_file_number
 18019 ;;		__root_is_available
 18020 ;;		__sector_from_file_number
 18021 ;;		_flash_partial_read
 18022 ;; This function is called by:
 18023 ;;		_configFile_read
 18024 ;;		_fat_append_to_file
 18025 ;;		_fat_copy_file
 18026 ;;		_fat_copy_sector_to_buffer
 18027 ;;		_fat_write_sector_from_buffer
 18028 ;; This function uses a non-reentrant model
 18029 ;;
 18030                           
 18031                           	psect	text70
 18032  013E10                     __ptext70:
 18033                           	opt stack 0
 18034  013E10                     _fat_get_file_size:
 18035                           	opt stack 12
 18036                           
 18037                           ;incstack = 0
 18038                           ;fat_get_file_size@file_number stored from wreg
 18039  013E10  0100               	movlb	0	; () banked
 18040  013E12  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 18041                           
 18042                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 18043  013E14  0100               	movlb	0	; () banked
 18044  013E16  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18045  013E18  EC96  F0A0         	call	__root_is_available
 18046  013E1C  0900               	iorlw	0
 18047  013E1E  B4D8               	btfsc	status,2,c
 18048  013E20  D006               	goto	l1845
 18049                           
 18050                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 18051  013E22  0100               	movlb	0	; () banked
 18052  013E24  6995               	setf	?_fat_get_file_size& (0+255),b
 18053  013E26  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 18054  013E28  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 18055  013E2A  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 18056  013E2C  0012               	return	
 18057  013E2E                     l1845:
 18058                           
 18059                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 18060                           
 18061                           ; BSR set to: 0
 18062  013E2E  0100               	movlb	0	; () banked
 18063  013E30  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18064  013E32  EC24  F0AA         	call	__sector_from_file_number
 18065  013E36  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 18066  013E3A  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 18067                           
 18068                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 18069  013E3E  0100               	movlb	0	; () banked
 18070  013E40  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 18071  013E42  EC33  F0AB         	call	__offset_from_file_number
 18072  013E46  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 18073  013E4A  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 18074                           
 18075                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 18076  013E4E  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 18077  013E52  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 18078  013E56  0E1C               	movlw	28
 18079  013E58  0100               	movlb	0	; () banked
 18080  013E5A  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 18081  013E5C  6F89               	movwf	flash_partial_read@start& (0+255),b
 18082  013E5E  0E00               	movlw	0
 18083  013E60  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 18084  013E62  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 18085  013E64  0E00               	movlw	0
 18086  013E66  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18087  013E68  0E04               	movlw	4
 18088  013E6A  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18089  013E6C  0E9D               	movlw	low fat_get_file_size@file_size
 18090  013E6E  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18091  013E70  0E00               	movlw	high fat_get_file_size@file_size
 18092  013E72  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18093  013E74  EC98  F0AB         	call	_flash_partial_read	;wreg free
 18094                           
 18095                           ;fat16.c: 583: return file_size;
 18096  013E78  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 18097  013E7C  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 18098  013E80  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 18099  013E84  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 18100  013E88  0012               	return	
 18101  013E8A                     __end_of_fat_get_file_size:
 18102                           	opt stack 0
 18103                           tblptru	equ	0xFF8
 18104                           tblptrh	equ	0xFF7
 18105                           tblptrl	equ	0xFF6
 18106                           tablat	equ	0xFF5
 18107                           prodh	equ	0xFF4
 18108                           prodl	equ	0xFF3
 18109                           postinc0	equ	0xFEE
 18110                           wreg	equ	0xFE8
 18111                           postdec1	equ	0xFE5
 18112                           plusw1	equ	0xFE3
 18113                           fsr1h	equ	0xFE2
 18114                           fsr1l	equ	0xFE1
 18115                           indf2	equ	0xFDF
 18116                           postinc2	equ	0xFDE
 18117                           postdec2	equ	0xFDD
 18118                           plusw2	equ	0xFDB
 18119                           fsr2h	equ	0xFDA
 18120                           fsr2l	equ	0xFD9
 18121                           status	equ	0xFD8
 18122                           
 18123 ;; *************** function __root_is_available *****************
 18124 ;; Defined at:
 18125 ;;		line 408 in file "fat16.c"
 18126 ;; Parameters:    Size  Location     Type
 18127 ;;  file_number     1    wreg     unsigned char 
 18128 ;; Auto vars:     Size  Location     Type
 18129 ;;  file_number     1   51[BANK0 ] unsigned char 
 18130 ;;  offset          2   49[BANK0 ] unsigned int 
 18131 ;;  root_sector     2   47[BANK0 ] unsigned int 
 18132 ;;  first_byte      1   52[BANK0 ] unsigned char 
 18133 ;; Return value:  Size  Location     Type
 18134 ;;                  1    wreg      unsigned char 
 18135 ;; Registers used:
 18136 ;;		wreg, status,2, status,0, cstack
 18137 ;; Tracked objects:
 18138 ;;		On entry : 0/0
 18139 ;;		On exit  : 0/0
 18140 ;;		Unchanged: 0/0
 18141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18143 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18144 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18145 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18146 ;;Total ram usage:        6 bytes
 18147 ;; Hardware stack levels used:    1
 18148 ;; Hardware stack levels required when called:   15
 18149 ;; This function calls:
 18150 ;;		__offset_from_file_number
 18151 ;;		__sector_from_file_number
 18152 ;;		_flash_partial_read
 18153 ;; This function is called by:
 18154 ;;		__get_available_root_entry
 18155 ;;		_fat_get_file_size
 18156 ;;		_fat_resize_file
 18157 ;;		_fat_delete_file
 18158 ;;		_fat_append_to_file
 18159 ;;		_fat_copy_file
 18160 ;;		_fat_copy_sector_to_buffer
 18161 ;;		_fat_write_sector_from_buffer
 18162 ;; This function uses a non-reentrant model
 18163 ;;
 18164                           
 18165                           	psect	text71
 18166  01412C                     __ptext71:
 18167                           	opt stack 0
 18168  01412C                     __root_is_available:
 18169                           	opt stack 12
 18170                           
 18171                           ;incstack = 0
 18172                           ;__root_is_available@file_number stored from wreg
 18173  01412C  0100               	movlb	0	; () banked
 18174  01412E  6F93               	movwf	__root_is_available@file_number& (0+255),b
 18175                           
 18176                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 18177  014130  0E3F               	movlw	63
 18178  014132  0100               	movlb	0	; () banked
 18179  014134  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 18180  014136  D002               	goto	l1806
 18181                           
 18182                           ; BSR set to: 0
 18183                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 18184  014138  0E00               	movlw	0
 18185                           
 18186                           ; BSR set to: 0
 18187  01413A  0012               	return	
 18188  01413C                     l1806:
 18189                           
 18190                           ; BSR set to: 0
 18191                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 18192                           
 18193                           ; BSR set to: 0
 18194  01413C  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18195  01413E  EC24  F0AA         	call	__sector_from_file_number
 18196  014142  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 18197  014146  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 18198                           
 18199                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 18200  01414A  0100               	movlb	0	; () banked
 18201  01414C  5193               	movf	__root_is_available@file_number& (0+255),w,b
 18202  01414E  EC33  F0AB         	call	__offset_from_file_number
 18203  014152  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 18204  014156  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 18205                           
 18206                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 18207  01415A  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 18208  01415E  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 18209  014162  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 18210  014166  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 18211  01416A  0E00               	movlw	0
 18212  01416C  0100               	movlb	0	; () banked
 18213  01416E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 18214  014170  0E01               	movlw	1
 18215  014172  6F8B               	movwf	flash_partial_read@length& (0+255),b
 18216  014174  0E94               	movlw	low __root_is_available@first_byte
 18217  014176  6F8D               	movwf	flash_partial_read@data& (0+255),b
 18218  014178  0E00               	movlw	high __root_is_available@first_byte
 18219  01417A  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 18220  01417C  EC98  F0AB         	call	_flash_partial_read	;wreg free
 18221                           
 18222                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 18223  014180  0100               	movlb	0	; () banked
 18224  014182  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 18225  014184  B4D8               	btfsc	status,2,c
 18226  014186  D004               	goto	u12730
 18227                           
 18228                           ; BSR set to: 0
 18229  014188  0EE5               	movlw	229
 18230  01418A  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 18231  01418C  A4D8               	btfss	status,2,c
 18232  01418E  D002               	goto	l1808
 18233  014190                     u12730:
 18234                           
 18235                           ; BSR set to: 0
 18236                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 18237                           
 18238                           ; BSR set to: 0
 18239  014190  0E01               	movlw	1
 18240                           
 18241                           ; BSR set to: 0
 18242                           ;fat16.c: 434: }
 18243                           
 18244                           ; BSR set to: 0
 18245  014192  0012               	return	
 18246  014194                     l1808:
 18247                           
 18248                           ; BSR set to: 0
 18249                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 18250                           
 18251                           ; BSR set to: 0
 18252  014194  0E00               	movlw	0
 18253                           
 18254                           ; BSR set to: 0
 18255  014196  0012               	return	
 18256  014198                     __end_of__root_is_available:
 18257                           	opt stack 0
 18258                           tblptru	equ	0xFF8
 18259                           tblptrh	equ	0xFF7
 18260                           tblptrl	equ	0xFF6
 18261                           tablat	equ	0xFF5
 18262                           prodh	equ	0xFF4
 18263                           prodl	equ	0xFF3
 18264                           postinc0	equ	0xFEE
 18265                           wreg	equ	0xFE8
 18266                           postdec1	equ	0xFE5
 18267                           plusw1	equ	0xFE3
 18268                           fsr1h	equ	0xFE2
 18269                           fsr1l	equ	0xFE1
 18270                           indf2	equ	0xFDF
 18271                           postinc2	equ	0xFDE
 18272                           postdec2	equ	0xFDD
 18273                           plusw2	equ	0xFDB
 18274                           fsr2h	equ	0xFDA
 18275                           fsr2l	equ	0xFD9
 18276                           status	equ	0xFD8
 18277                           
 18278 ;; *************** function _flash_partial_read *****************
 18279 ;; Defined at:
 18280 ;;		line 452 in file "flash.c"
 18281 ;; Parameters:    Size  Location     Type
 18282 ;;  page            2   39[BANK0 ] unsigned int 
 18283 ;;  start           2   41[BANK0 ] unsigned int 
 18284 ;;  length          2   43[BANK0 ] unsigned int 
 18285 ;;  data            2   45[BANK0 ] PTR unsigned char 
 18286 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 18287 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 18288 ;;		 -> _root_is_available@first_byte(1), 
 18289 ;; Auto vars:     Size  Location     Type
 18290 ;;		None
 18291 ;; Return value:  Size  Location     Type
 18292 ;;                  1    wreg      void 
 18293 ;; Registers used:
 18294 ;;		wreg, status,2, status,0, cstack
 18295 ;; Tracked objects:
 18296 ;;		On entry : 0/0
 18297 ;;		On exit  : 0/0
 18298 ;;		Unchanged: 0/0
 18299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18300 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18303 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18304 ;;Total ram usage:        8 bytes
 18305 ;; Hardware stack levels used:    1
 18306 ;; Hardware stack levels required when called:   14
 18307 ;; This function calls:
 18308 ;;		__flash_partial_read
 18309 ;; This function is called by:
 18310 ;;		__root_is_available
 18311 ;;		__read_fat
 18312 ;;		_fat_get_file_size
 18313 ;;		_fat_read_from_file_fast
 18314 ;;		_fat_get_file_information
 18315 ;;		__get_first_cluster
 18316 ;; This function uses a non-reentrant model
 18317 ;;
 18318                           
 18319                           	psect	text72
 18320  015730                     __ptext72:
 18321                           	opt stack 0
 18322  015730                     _flash_partial_read:
 18323                           	opt stack 12
 18324                           
 18325                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 18326                           
 18327                           ; BSR set to: 0
 18328                           ;incstack = 0
 18329  015730  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 18330  015734  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 18331  015738  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 18332  01573C  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 18333  015740  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 18334  015744  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 18335  015748  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 18336  01574C  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 18337  015750  EC45  F09F         	call	__flash_partial_read	;wreg free
 18338  015754  0012               	return		;funcret
 18339  015756                     __end_of_flash_partial_read:
 18340                           	opt stack 0
 18341                           tblptru	equ	0xFF8
 18342                           tblptrh	equ	0xFF7
 18343                           tblptrl	equ	0xFF6
 18344                           tablat	equ	0xFF5
 18345                           prodh	equ	0xFF4
 18346                           prodl	equ	0xFF3
 18347                           postinc0	equ	0xFEE
 18348                           wreg	equ	0xFE8
 18349                           postdec1	equ	0xFE5
 18350                           plusw1	equ	0xFE3
 18351                           fsr1h	equ	0xFE2
 18352                           fsr1l	equ	0xFE1
 18353                           indf2	equ	0xFDF
 18354                           postinc2	equ	0xFDE
 18355                           postdec2	equ	0xFDD
 18356                           plusw2	equ	0xFDB
 18357                           fsr2h	equ	0xFDA
 18358                           fsr2l	equ	0xFD9
 18359                           status	equ	0xFD8
 18360                           
 18361 ;; *************** function __sector_from_file_number *****************
 18362 ;; Defined at:
 18363 ;;		line 52 in file "fat16.c"
 18364 ;; Parameters:    Size  Location     Type
 18365 ;;  file_number     1    wreg     unsigned char 
 18366 ;; Auto vars:     Size  Location     Type
 18367 ;;  file_number     1    2[BANK0 ] unsigned char 
 18368 ;;  sector          2    3[BANK0 ] unsigned int 
 18369 ;; Return value:  Size  Location     Type
 18370 ;;                  2    0[BANK0 ] unsigned int 
 18371 ;; Registers used:
 18372 ;;		wreg, status,2, status,0
 18373 ;; Tracked objects:
 18374 ;;		On entry : 0/0
 18375 ;;		On exit  : 0/0
 18376 ;;		Unchanged: 0/0
 18377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18378 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18379 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18380 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18381 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18382 ;;Total ram usage:        5 bytes
 18383 ;; Hardware stack levels used:    1
 18384 ;; Hardware stack levels required when called:   10
 18385 ;; This function calls:
 18386 ;;		Nothing
 18387 ;; This function is called by:
 18388 ;;		__root_is_available
 18389 ;;		__write_root
 18390 ;;		_fat_get_file_size
 18391 ;;		_fat_get_file_information
 18392 ;;		__delete_root
 18393 ;;		__get_first_cluster
 18394 ;; This function uses a non-reentrant model
 18395 ;;
 18396                           
 18397                           	psect	text73
 18398  015448                     __ptext73:
 18399                           	opt stack 0
 18400  015448                     __sector_from_file_number:
 18401                           	opt stack 16
 18402                           
 18403                           ;incstack = 0
 18404                           ;__sector_from_file_number@file_number stored from wreg
 18405  015448  0100               	movlb	0	; () banked
 18406  01544A  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 18407                           
 18408                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 18409  01544C  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 18410  015450  0100               	movlb	0	; () banked
 18411  015452  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 18412                           
 18413                           ; BSR set to: 0
 18414                           ;fat16.c: 56: sector >>= 4;
 18415  015454  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 18416  015456  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18417  015458  0E0F               	movlw	15
 18418  01545A  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 18419  01545C  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 18420  01545E  0BF0               	andlw	240
 18421  015460  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 18422  015462  0E0F               	movlw	15
 18423  015464  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 18424                           
 18425                           ; BSR set to: 0
 18426                           ;fat16.c: 57: sector += 34;
 18427  015466  0E22               	movlw	34
 18428  015468  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 18429  01546A  0E00               	movlw	0
 18430  01546C  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 18431                           
 18432                           ; BSR set to: 0
 18433                           ;fat16.c: 58: return sector;
 18434  01546E  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 18435  015472  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 18436  015476  0012               	return	
 18437  015478                     __end_of__sector_from_file_number:
 18438                           	opt stack 0
 18439                           tblptru	equ	0xFF8
 18440                           tblptrh	equ	0xFF7
 18441                           tblptrl	equ	0xFF6
 18442                           tablat	equ	0xFF5
 18443                           prodh	equ	0xFF4
 18444                           prodl	equ	0xFF3
 18445                           postinc0	equ	0xFEE
 18446                           wreg	equ	0xFE8
 18447                           postdec1	equ	0xFE5
 18448                           plusw1	equ	0xFE3
 18449                           fsr1h	equ	0xFE2
 18450                           fsr1l	equ	0xFE1
 18451                           indf2	equ	0xFDF
 18452                           postinc2	equ	0xFDE
 18453                           postdec2	equ	0xFDD
 18454                           plusw2	equ	0xFDB
 18455                           fsr2h	equ	0xFDA
 18456                           fsr2l	equ	0xFD9
 18457                           status	equ	0xFD8
 18458                           
 18459 ;; *************** function __offset_from_file_number *****************
 18460 ;; Defined at:
 18461 ;;		line 61 in file "fat16.c"
 18462 ;; Parameters:    Size  Location     Type
 18463 ;;  file_number     1    wreg     unsigned char 
 18464 ;; Auto vars:     Size  Location     Type
 18465 ;;  file_number     1    2[BANK0 ] unsigned char 
 18466 ;;  offset          2    3[BANK0 ] unsigned int 
 18467 ;; Return value:  Size  Location     Type
 18468 ;;                  2    0[BANK0 ] unsigned int 
 18469 ;; Registers used:
 18470 ;;		wreg, status,2, status,0
 18471 ;; Tracked objects:
 18472 ;;		On entry : 0/0
 18473 ;;		On exit  : 0/0
 18474 ;;		Unchanged: 0/0
 18475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18476 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18477 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18479 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18480 ;;Total ram usage:        5 bytes
 18481 ;; Hardware stack levels used:    1
 18482 ;; Hardware stack levels required when called:   10
 18483 ;; This function calls:
 18484 ;;		Nothing
 18485 ;; This function is called by:
 18486 ;;		__root_is_available
 18487 ;;		__write_root
 18488 ;;		_fat_get_file_size
 18489 ;;		_fat_get_file_information
 18490 ;;		__delete_root
 18491 ;;		__get_first_cluster
 18492 ;; This function uses a non-reentrant model
 18493 ;;
 18494                           
 18495                           	psect	text74
 18496  015666                     __ptext74:
 18497                           	opt stack 0
 18498  015666                     __offset_from_file_number:
 18499                           	opt stack 16
 18500                           
 18501                           ; BSR set to: 0
 18502                           ;incstack = 0
 18503                           ;__offset_from_file_number@file_number stored from wreg
 18504  015666  0100               	movlb	0	; () banked
 18505  015668  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 18506                           
 18507                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 18508  01566A  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 18509  01566E  0100               	movlb	0	; () banked
 18510  015670  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;fat16.c: 65: offset &= 0b1111;
 18514  015672  0E0F               	movlw	15
 18515  015674  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 18516  015676  0E00               	movlw	0
 18517  015678  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18518                           
 18519                           ; BSR set to: 0
 18520                           ;fat16.c: 66: offset <<= 5;
 18521  01567A  0E05               	movlw	5
 18522  01567C                     u11645:
 18523  01567C  90D8               	bcf	status,0,c
 18524  01567E  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 18525  015680  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 18526  015682  2EE8               	decfsz	wreg,f,c
 18527  015684  D7FB               	goto	u11645
 18528                           
 18529                           ; BSR set to: 0
 18530                           ;fat16.c: 67: return offset;
 18531  015686  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 18532  01568A  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 18533  01568E  0012               	return	
 18534  015690                     __end_of__offset_from_file_number:
 18535                           	opt stack 0
 18536                           tblptru	equ	0xFF8
 18537                           tblptrh	equ	0xFF7
 18538                           tblptrl	equ	0xFF6
 18539                           tablat	equ	0xFF5
 18540                           prodh	equ	0xFF4
 18541                           prodl	equ	0xFF3
 18542                           postinc0	equ	0xFEE
 18543                           wreg	equ	0xFE8
 18544                           postdec1	equ	0xFE5
 18545                           plusw1	equ	0xFE3
 18546                           fsr1h	equ	0xFE2
 18547                           fsr1l	equ	0xFE1
 18548                           indf2	equ	0xFDF
 18549                           postinc2	equ	0xFDE
 18550                           postdec2	equ	0xFDD
 18551                           plusw2	equ	0xFDB
 18552                           fsr2h	equ	0xFDA
 18553                           fsr2l	equ	0xFD9
 18554                           status	equ	0xFD8
 18555                           
 18556 ;; *************** function _fat_find_file *****************
 18557 ;; Defined at:
 18558 ;;		line 517 in file "fat16.c"
 18559 ;; Parameters:    Size  Location     Type
 18560 ;;  name            2   43[BANK0 ] PTR unsigned char 
 18561 ;;		 -> configFile_used_name(8), configFile_name(8), 
 18562 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 18563 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 18564 ;; Auto vars:     Size  Location     Type
 18565 ;;  offset          2   52[BANK0 ] unsigned int 
 18566 ;;  sector          2   50[BANK0 ] unsigned int 
 18567 ;;  file_number     1   49[BANK0 ] unsigned char 
 18568 ;; Return value:  Size  Location     Type
 18569 ;;                  1    wreg      unsigned char 
 18570 ;; Registers used:
 18571 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 18572 ;; Tracked objects:
 18573 ;;		On entry : 0/0
 18574 ;;		On exit  : 0/0
 18575 ;;		Unchanged: 0/0
 18576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18577 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18578 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18579 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18580 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18581 ;;Total ram usage:       11 bytes
 18582 ;; Hardware stack levels used:    1
 18583 ;; Hardware stack levels required when called:   15
 18584 ;; This function calls:
 18585 ;;		_flash_sector_read
 18586 ;;		_strncmp
 18587 ;; This function is called by:
 18588 ;;		_fat_create_file
 18589 ;;		_configFile_read
 18590 ;;		_configFile_write
 18591 ;; This function uses a non-reentrant model
 18592 ;;
 18593                           
 18594                           	psect	text75
 18595  011C24                     __ptext75:
 18596                           	opt stack 0
 18597  011C24                     _fat_find_file:
 18598                           	opt stack 13
 18599                           
 18600                           ;fat16.c: 519: uint8_t file_number = 0;
 18601                           
 18602                           ; BSR set to: 0
 18603                           ;incstack = 0
 18604  011C24  0E00               	movlw	0
 18605  011C26  0100               	movlb	0	; () banked
 18606  011C28  6F91               	movwf	fat_find_file@file_number& (0+255),b
 18607                           
 18608                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 18609  011C2A  0E00               	movlw	0
 18610  011C2C  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 18611  011C2E  0E22               	movlw	34
 18612  011C30  6F92               	movwf	fat_find_file@sector& (0+255),b
 18613                           
 18614                           ; BSR set to: 0
 18615  011C32  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18616  011C34  E169               	bnz	l1833
 18617  011C36  0E26               	movlw	38
 18618  011C38  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 18619  011C3A  B0D8               	btfsc	status,0,c
 18620  011C3C  D065               	goto	u13460
 18621                           
 18622                           ; BSR set to: 0
 18623                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 18624                           
 18625                           ; BSR set to: 0
 18626                           
 18627                           ; BSR set to: 0
 18628  011C3E  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 18629  011C42  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 18630  011C46  0E00               	movlw	low _buffer
 18631  011C48  6F89               	movwf	flash_sector_read@data& (0+255),b
 18632  011C4A  0E0A               	movlw	high _buffer
 18633  011C4C  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 18634  011C4E  EC84  F0AB         	call	_flash_sector_read	;wreg free
 18635                           
 18636                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 18637  011C52  0E00               	movlw	0
 18638  011C54  0100               	movlb	0	; () banked
 18639  011C56  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 18640  011C58  0E00               	movlw	0
 18641  011C5A  6F94               	movwf	fat_find_file@offset& (0+255),b
 18642  011C5C                     l14443:
 18643                           
 18644                           ; BSR set to: 0
 18645  011C5C  0E02               	movlw	2
 18646  011C5E  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 18647  011C60  B0D8               	btfsc	status,0,c
 18648  011C62  D04D               	goto	u13450
 18649                           
 18650                           ; BSR set to: 0
 18651                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 18652                           
 18653                           ; BSR set to: 0
 18654                           
 18655                           ; BSR set to: 0
 18656  011C64  0E00               	movlw	low _buffer
 18657  011C66  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18658  011C68  6ED9               	movwf	fsr2l,c
 18659  011C6A  0E0A               	movlw	high _buffer
 18660  011C6C  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18661  011C6E  6EDA               	movwf	fsr2h,c
 18662  011C70  50DF               	movf	indf2,w,c
 18663  011C72  A4D8               	btfss	status,2,c
 18664  011C74  D002               	goto	l1836
 18665                           
 18666                           ; BSR set to: 0
 18667                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 18668  011C76  0EFF               	movlw	255
 18669                           
 18670                           ; BSR set to: 0
 18671  011C78  0012               	return	
 18672  011C7A                     l1836:
 18673                           
 18674                           ; BSR set to: 0
 18675                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 18676                           
 18677                           ; BSR set to: 0
 18678  011C7A  0E00               	movlw	low _buffer
 18679  011C7C  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18680  011C7E  6ED9               	movwf	fsr2l,c
 18681  011C80  0E0A               	movlw	high _buffer
 18682  011C82  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18683  011C84  6EDA               	movwf	fsr2h,c
 18684  011C86  0EE5               	movlw	229
 18685  011C88  18DE               	xorwf	postinc2,w,c
 18686  011C8A  B4D8               	btfsc	status,2,c
 18687  011C8C  D032               	goto	l1842
 18688                           
 18689                           ; BSR set to: 0
 18690                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 18691                           
 18692                           ; BSR set to: 0
 18693                           
 18694                           ; BSR set to: 0
 18695                           ;fat16.c: 537: {;fat16.c: 541: }
 18696  011C8E  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 18697  011C92  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 18698  011C96  0E00               	movlw	low _buffer
 18699  011C98  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18700  011C9A  6F62               	movwf	strncmp@s2& (0+255),b
 18701  011C9C  0E0A               	movlw	high _buffer
 18702  011C9E  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18703  011CA0  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18704  011CA2  0E00               	movlw	0
 18705  011CA4  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18706  011CA6  0E08               	movlw	8
 18707  011CA8  6F64               	movwf	strncmp@len& (0+255),b
 18708  011CAA  EC0F  F09E         	call	_strncmp	;wreg free
 18709  011CAE  0100               	movlb	0	; () banked
 18710  011CB0  5160               	movf	?_strncmp& (0+255),w,b
 18711  011CB2  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18712  011CB4  A4D8               	btfss	status,2,c
 18713  011CB6  D01D               	goto	l1842
 18714                           
 18715                           ; BSR set to: 0
 18716                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18717  011CB8  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18718  011CBC  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18719  011CC0  0E08               	movlw	8
 18720  011CC2  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18721  011CC4  6F8F               	movwf	??_fat_find_file& (0+255),b
 18722  011CC6  0E00               	movlw	0
 18723  011CC8  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18724  011CCA  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18725  011CCC  0E00               	movlw	low _buffer
 18726  011CCE  258F               	addwf	??_fat_find_file& (0+255),w,b
 18727  011CD0  6F62               	movwf	strncmp@s2& (0+255),b
 18728  011CD2  0E0A               	movlw	high _buffer
 18729  011CD4  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18730  011CD6  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18731  011CD8  0E00               	movlw	0
 18732  011CDA  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18733  011CDC  0E03               	movlw	3
 18734  011CDE  6F64               	movwf	strncmp@len& (0+255),b
 18735  011CE0  EC0F  F09E         	call	_strncmp	;wreg free
 18736  011CE4  0100               	movlb	0	; () banked
 18737  011CE6  5160               	movf	?_strncmp& (0+255),w,b
 18738  011CE8  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18739  011CEA  A4D8               	btfss	status,2,c
 18740  011CEC  D002               	goto	l1842
 18741                           
 18742                           ; BSR set to: 0
 18743                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 18744  011CEE  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18745                           
 18746                           ; BSR set to: 0
 18747  011CF0  0012               	return	
 18748  011CF2                     l1842:
 18749                           
 18750                           ; BSR set to: 0
 18751                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 18752                           
 18753                           ; BSR set to: 0
 18754                           
 18755                           ; BSR set to: 0
 18756                           
 18757                           ; BSR set to: 0
 18758                           
 18759                           ; BSR set to: 0
 18760  011CF2  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18761                           
 18762                           ; BSR set to: 0
 18763  011CF4  0E20               	movlw	32
 18764  011CF6  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18765  011CF8  0E00               	movlw	0
 18766  011CFA  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18767  011CFC  D7AF               	goto	l14443
 18768  011CFE                     u13450:
 18769                           
 18770                           ; BSR set to: 0
 18771                           
 18772                           ; BSR set to: 0
 18773  011CFE  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18774  011D00  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18775                           
 18776                           ; BSR set to: 0
 18777  011D02  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18778  011D04  E101               	bnz	l14477
 18779  011D06  D797               	goto	L4
 18780  011D08                     u13460:
 18781  011D08                     l1833:
 18782  011D08                     l14477:
 18783                           
 18784                           ; BSR set to: 0
 18785                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 18786  011D08  0EFF               	movlw	255
 18787  011D0A  0012               	return	
 18788  011D0C                     __end_of_fat_find_file:
 18789                           	opt stack 0
 18790                           tblptru	equ	0xFF8
 18791                           tblptrh	equ	0xFF7
 18792                           tblptrl	equ	0xFF6
 18793                           tablat	equ	0xFF5
 18794                           prodh	equ	0xFF4
 18795                           prodl	equ	0xFF3
 18796                           postinc0	equ	0xFEE
 18797                           wreg	equ	0xFE8
 18798                           postdec1	equ	0xFE5
 18799                           plusw1	equ	0xFE3
 18800                           fsr1h	equ	0xFE2
 18801                           fsr1l	equ	0xFE1
 18802                           indf2	equ	0xFDF
 18803                           postinc2	equ	0xFDE
 18804                           postdec2	equ	0xFDD
 18805                           plusw2	equ	0xFDB
 18806                           fsr2h	equ	0xFDA
 18807                           fsr2l	equ	0xFD9
 18808                           status	equ	0xFD8
 18809                           
 18810 ;; *************** function _strncmp *****************
 18811 ;; Defined at:
 18812 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18813 ;; Parameters:    Size  Location     Type
 18814 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18815 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18816 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18817 ;;		 -> buffer(512), 
 18818 ;;  len             2    4[BANK0 ] unsigned int 
 18819 ;; Auto vars:     Size  Location     Type
 18820 ;;		None
 18821 ;; Return value:  Size  Location     Type
 18822 ;;                  2    0[BANK0 ] int 
 18823 ;; Registers used:
 18824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18825 ;; Tracked objects:
 18826 ;;		On entry : 0/0
 18827 ;;		On exit  : 0/0
 18828 ;;		Unchanged: 0/0
 18829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18830 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18832 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18833 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18834 ;;Total ram usage:        9 bytes
 18835 ;; Hardware stack levels used:    1
 18836 ;; Hardware stack levels required when called:   10
 18837 ;; This function calls:
 18838 ;;		Nothing
 18839 ;; This function is called by:
 18840 ;;		_fat_find_file
 18841 ;; This function uses a non-reentrant model
 18842 ;;
 18843                           
 18844                           	psect	text76
 18845  013C1E                     __ptext76:
 18846                           	opt stack 0
 18847  013C1E                     _strncmp:
 18848                           	opt stack 17
 18849                           
 18850                           ; BSR set to: 0
 18851                           ;incstack = 0
 18852  013C1E  D031               	goto	l3737
 18853  013C20                     l13887:
 18854  013C20  C060  FFD9         	movff	strncmp@s1,fsr2l
 18855  013C24  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18856  013C28  50DF               	movf	indf2,w,c
 18857  013C2A  B4D8               	btfsc	status,2,c
 18858  013C2C  D00C               	goto	u12750
 18859  013C2E  C062  FFD9         	movff	strncmp@s2,fsr2l
 18860  013C32  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18861  013C36  C060  FFE1         	movff	strncmp@s1,fsr1l
 18862  013C3A  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18863  013C3E  50DE               	movf	postinc2,w,c
 18864  013C40  18E6               	xorwf	postinc1,w,c
 18865  013C42  B4D8               	btfsc	status,2,c
 18866  013C44  D019               	goto	l3739
 18867  013C46                     u12750:
 18868  013C46  C062  FFD9         	movff	strncmp@s2,fsr2l
 18869  013C4A  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18870  013C4E  50DF               	movf	indf2,w,c
 18871  013C50  0100               	movlb	0	; () banked
 18872  013C52  6F66               	movwf	??_strncmp& (0+255),b
 18873  013C54  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18874  013C56  1F66               	comf	??_strncmp& (0+255),f,b
 18875  013C58  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18876  013C5A  4B66               	infsnz	??_strncmp& (0+255),f,b
 18877  013C5C  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18878  013C5E  C060  FFD9         	movff	strncmp@s1,fsr2l
 18879  013C62  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18880  013C66  50DF               	movf	indf2,w,c
 18881  013C68  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18882  013C6A  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18883  013C6C  2566               	addwf	??_strncmp& (0+255),w,b
 18884  013C6E  6F60               	movwf	?_strncmp& (0+255),b
 18885  013C70  0E00               	movlw	0
 18886  013C72  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18887  013C74  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18888                           
 18889                           ; BSR set to: 0
 18890  013C76  0012               	return	
 18891  013C78                     l3739:
 18892                           
 18893                           ; BSR set to: 0
 18894  013C78  0100               	movlb	0	; () banked
 18895  013C7A  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18896  013C7C  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18897  013C7E  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18898  013C80  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18899  013C82                     l3737:
 18900                           
 18901                           ; BSR set to: 0
 18902  013C82  0100               	movlb	0	; () banked
 18903  013C84  0764               	decf	strncmp@len& (0+255),f,b
 18904  013C86  A0D8               	btfss	status,0,c
 18905  013C88  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18906  013C8A  2964               	incf	strncmp@len& (0+255),w,b
 18907  013C8C  E1C9               	bnz	l13887
 18908  013C8E  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18909  013C90  A4D8               	btfss	status,2,c
 18910  013C92  D7C6               	goto	l3738
 18911                           
 18912                           ; BSR set to: 0
 18913                           
 18914                           ; BSR set to: 0
 18915  013C94  0E00               	movlw	0
 18916  013C96  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18917  013C98  0E00               	movlw	0
 18918  013C9A  6F60               	movwf	?_strncmp& (0+255),b
 18919  013C9C  0012               	return	
 18920  013C9E                     __end_of_strncmp:
 18921                           	opt stack 0
 18922                           tblptru	equ	0xFF8
 18923                           tblptrh	equ	0xFF7
 18924                           tblptrl	equ	0xFF6
 18925                           tablat	equ	0xFF5
 18926                           prodh	equ	0xFF4
 18927                           prodl	equ	0xFF3
 18928                           postinc0	equ	0xFEE
 18929                           wreg	equ	0xFE8
 18930                           postinc1	equ	0xFE6
 18931                           postdec1	equ	0xFE5
 18932                           plusw1	equ	0xFE3
 18933                           fsr1h	equ	0xFE2
 18934                           fsr1l	equ	0xFE1
 18935                           indf2	equ	0xFDF
 18936                           postinc2	equ	0xFDE
 18937                           postdec2	equ	0xFDD
 18938                           plusw2	equ	0xFDB
 18939                           fsr2h	equ	0xFDA
 18940                           fsr2l	equ	0xFD9
 18941                           status	equ	0xFD8
 18942                           
 18943 ;; *************** function __parse_item *****************
 18944 ;; Defined at:
 18945 ;;		line 108 in file "config_file.c"
 18946 ;; Parameters:    Size  Location     Type
 18947 ;;  item_string     2   26[BANK0 ] PTR unsigned char 
 18948 ;;		 -> configFile_read@item_string(31), 
 18949 ;;  value_string    2   28[BANK0 ] PTR unsigned char 
 18950 ;;		 -> configFile_read@value_string(12), 
 18951 ;; Auto vars:     Size  Location     Type
 18952 ;;		None
 18953 ;; Return value:  Size  Location     Type
 18954 ;;                  1    wreg      unsigned char 
 18955 ;; Registers used:
 18956 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18957 ;; Tracked objects:
 18958 ;;		On entry : 0/0
 18959 ;;		On exit  : 0/0
 18960 ;;		Unchanged: 0/0
 18961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18962 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18963 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18964 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18965 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18966 ;;Total ram usage:        4 bytes
 18967 ;; Hardware stack levels used:    1
 18968 ;; Hardware stack levels required when called:   12
 18969 ;; This function calls:
 18970 ;;		_atoi
 18971 ;;		_atol
 18972 ;;		_stricmp
 18973 ;; This function is called by:
 18974 ;;		_configFile_read
 18975 ;; This function uses a non-reentrant model
 18976 ;;
 18977                           
 18978                           	psect	text77
 18979  00C908                     __ptext77:
 18980                           	opt stack 0
 18981  00C908                     __parse_item:
 18982                           	opt stack 16
 18983                           
 18984                           ;config_file.c: 110: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18985                           
 18986                           ; BSR set to: 0
 18987                           ;incstack = 0
 18988  00C908  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 18989  00C90C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18990  00C910  0EFD               	movlw	low _full_circle_in_steps_string
 18991  00C912  0100               	movlb	0	; () banked
 18992  00C914  6F63               	movwf	stricmp@s2& (0+255),b
 18993  00C916  0EA1               	movlw	high _full_circle_in_steps_string
 18994  00C918  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18995  00C91A  EC47  F0A3         	call	_stricmp	;wreg free
 18996  00C91E  0100               	movlb	0	; () banked
 18997  00C920  5161               	movf	?_stricmp& (0+255),w,b
 18998  00C922  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18999  00C924  A4D8               	btfss	status,2,c
 19000  00C926  D00F               	goto	l2949
 19001                           
 19002                           ; BSR set to: 0
 19003                           ;config_file.c: 111: {;config_file.c: 112: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 19004  00C928  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19005  00C92C  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19006  00C930  ECBA  F08A         	call	_atol	;wreg free
 19007  00C934  C06C  F1A1         	movff	?_atol,_config
 19008  00C938  C06D  F1A2         	movff	?_atol+1,_config+1
 19009  00C93C  C06E  F1A3         	movff	?_atol+2,_config+2
 19010  00C940  C06F  F1A4         	movff	?_atol+3,_config+3
 19011                           
 19012                           ;config_file.c: 113: return 1;;	Return value of __parse_item is never used
 19013  00C944  0012               	return	
 19014  00C946                     l2949:
 19015                           
 19016                           ;config_file.c: 114: };config_file.c: 116: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19017  00C946  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19018  00C94A  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19019  00C94E  0E12               	movlw	low _overshoot_in_steps_string
 19020  00C950  0100               	movlb	0	; () banked
 19021  00C952  6F63               	movwf	stricmp@s2& (0+255),b
 19022  00C954  0EA2               	movlw	high _overshoot_in_steps_string
 19023  00C956  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19024  00C958  EC47  F0A3         	call	_stricmp	;wreg free
 19025  00C95C  0100               	movlb	0	; () banked
 19026  00C95E  5161               	movf	?_stricmp& (0+255),w,b
 19027  00C960  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19028  00C962  A4D8               	btfss	status,2,c
 19029  00C964  D00B               	goto	l2951
 19030                           
 19031                           ; BSR set to: 0
 19032                           ;config_file.c: 117: {;config_file.c: 118: config.overshoot_in_steps = atoi(value_string
      +                          );
 19033  00C966  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19034  00C96A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19035  00C96E  EC98  F091         	call	_atoi	;wreg free
 19036  00C972  C066  F1A6         	movff	?_atoi,_config+5
 19037  00C976  C067  F1A7         	movff	?_atoi+1,_config+6
 19038                           
 19039                           ;config_file.c: 119: return 2;;	Return value of __parse_item is never used
 19040  00C97A  0012               	return	
 19041  00C97C                     l2951:
 19042                           
 19043                           ;config_file.c: 120: };config_file.c: 122: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 19044  00C97C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19045  00C980  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19046  00C984  0E49               	movlw	low _inverse_direction_string
 19047  00C986  0100               	movlb	0	; () banked
 19048  00C988  6F63               	movwf	stricmp@s2& (0+255),b
 19049  00C98A  0EA2               	movlw	high _inverse_direction_string
 19050  00C98C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19051  00C98E  EC47  F0A3         	call	_stricmp	;wreg free
 19052  00C992  0100               	movlb	0	; () banked
 19053  00C994  5161               	movf	?_stricmp& (0+255),w,b
 19054  00C996  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19055  00C998  A4D8               	btfss	status,2,c
 19056  00C99A  D00B               	goto	l2952
 19057                           
 19058                           ; BSR set to: 0
 19059                           ;config_file.c: 123: {;config_file.c: 124: config.inverse_direction = atol(value_string)
      +                          ;
 19060  00C99C  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19061  00C9A0  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19062  00C9A4  ECBA  F08A         	call	_atol	;wreg free
 19063  00C9A8  0100               	movlb	0	; () banked
 19064  00C9AA  516C               	movf	?_atol& (0+255),w,b
 19065  00C9AC  0101               	movlb	1	; () banked
 19066  00C9AE  6FA5               	movwf	(_config+4)& (0+255),b
 19067                           
 19068                           ; BSR set to: 1
 19069                           ;config_file.c: 125: return 3;;	Return value of __parse_item is never used
 19070  00C9B0  0012               	return	
 19071  00C9B2                     l2952:
 19072                           
 19073                           ;config_file.c: 126: };config_file.c: 128: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 19074                           
 19075                           ; BSR set to: 1
 19076  00C9B2  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19077  00C9B6  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19078  00C9BA  0E12               	movlw	low _overshoot_in_steps_string
 19079  00C9BC  0100               	movlb	0	; () banked
 19080  00C9BE  6F63               	movwf	stricmp@s2& (0+255),b
 19081  00C9C0  0EA2               	movlw	high _overshoot_in_steps_string
 19082  00C9C2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19083  00C9C4  EC47  F0A3         	call	_stricmp	;wreg free
 19084  00C9C8  0100               	movlb	0	; () banked
 19085  00C9CA  5161               	movf	?_stricmp& (0+255),w,b
 19086  00C9CC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19087  00C9CE  A4D8               	btfss	status,2,c
 19088  00C9D0  D00B               	goto	l2953
 19089                           
 19090                           ; BSR set to: 0
 19091                           ;config_file.c: 129: {;config_file.c: 130: config.overshoot_in_steps = atoi(value_string
      +                          );
 19092  00C9D2  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19093  00C9D6  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19094  00C9DA  EC98  F091         	call	_atoi	;wreg free
 19095  00C9DE  C066  F1A6         	movff	?_atoi,_config+5
 19096  00C9E2  C067  F1A7         	movff	?_atoi+1,_config+6
 19097                           
 19098                           ;config_file.c: 131: return 4;;	Return value of __parse_item is never used
 19099  00C9E6  0012               	return	
 19100  00C9E8                     l2953:
 19101                           
 19102                           ;config_file.c: 132: };config_file.c: 134: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 19103  00C9E8  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19104  00C9EC  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19105  00C9F0  0EBB               	movlw	low _overshoot_cost_in_steps_string
 19106  00C9F2  0100               	movlb	0	; () banked
 19107  00C9F4  6F63               	movwf	stricmp@s2& (0+255),b
 19108  00C9F6  0EA1               	movlw	high _overshoot_cost_in_steps_string
 19109  00C9F8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19110  00C9FA  EC47  F0A3         	call	_stricmp	;wreg free
 19111  00C9FE  0100               	movlb	0	; () banked
 19112  00CA00  5161               	movf	?_stricmp& (0+255),w,b
 19113  00CA02  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19114  00CA04  A4D8               	btfss	status,2,c
 19115  00CA06  D00B               	goto	l2954
 19116                           
 19117                           ; BSR set to: 0
 19118                           ;config_file.c: 135: {;config_file.c: 136: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 19119  00CA08  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19120  00CA0C  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19121  00CA10  EC98  F091         	call	_atoi	;wreg free
 19122  00CA14  C066  F1A8         	movff	?_atoi,_config+7
 19123  00CA18  C067  F1A9         	movff	?_atoi+1,_config+8
 19124                           
 19125                           ;config_file.c: 137: return 5;;	Return value of __parse_item is never used
 19126  00CA1C  0012               	return	
 19127  00CA1E                     l2954:
 19128                           
 19129                           ;config_file.c: 138: };config_file.c: 140: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 19130  00CA1E  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19131  00CA22  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19132  00CA26  0E97               	movlw	low _minimum_speed_string
 19133  00CA28  0100               	movlb	0	; () banked
 19134  00CA2A  6F63               	movwf	stricmp@s2& (0+255),b
 19135  00CA2C  0EA2               	movlw	high _minimum_speed_string
 19136  00CA2E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19137  00CA30  EC47  F0A3         	call	_stricmp	;wreg free
 19138  00CA34  0100               	movlb	0	; () banked
 19139  00CA36  5161               	movf	?_stricmp& (0+255),w,b
 19140  00CA38  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19141  00CA3A  A4D8               	btfss	status,2,c
 19142  00CA3C  D00B               	goto	l2955
 19143                           
 19144                           ; BSR set to: 0
 19145                           ;config_file.c: 141: {;config_file.c: 142: config.minimum_speed = atoi(value_string);
 19146  00CA3E  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19147  00CA42  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19148  00CA46  EC98  F091         	call	_atoi	;wreg free
 19149  00CA4A  C066  F1AA         	movff	?_atoi,_config+9
 19150  00CA4E  C067  F1AB         	movff	?_atoi+1,_config+10
 19151                           
 19152                           ;config_file.c: 143: return 6;;	Return value of __parse_item is never used
 19153  00CA52  0012               	return	
 19154  00CA54                     l2955:
 19155                           
 19156                           ;config_file.c: 144: };config_file.c: 146: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 19157  00CA54  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19158  00CA58  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19159  00CA5C  0E89               	movlw	low _maximum_speed_string
 19160  00CA5E  0100               	movlb	0	; () banked
 19161  00CA60  6F63               	movwf	stricmp@s2& (0+255),b
 19162  00CA62  0EA2               	movlw	high _maximum_speed_string
 19163  00CA64  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19164  00CA66  EC47  F0A3         	call	_stricmp	;wreg free
 19165  00CA6A  0100               	movlb	0	; () banked
 19166  00CA6C  5161               	movf	?_stricmp& (0+255),w,b
 19167  00CA6E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19168  00CA70  A4D8               	btfss	status,2,c
 19169  00CA72  D00B               	goto	l2956
 19170                           
 19171                           ; BSR set to: 0
 19172                           ;config_file.c: 147: {;config_file.c: 148: config.maximum_speed = atoi(value_string);
 19173  00CA74  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19174  00CA78  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19175  00CA7C  EC98  F091         	call	_atoi	;wreg free
 19176  00CA80  C066  F1AC         	movff	?_atoi,_config+11
 19177  00CA84  C067  F1AD         	movff	?_atoi+1,_config+12
 19178                           
 19179                           ;config_file.c: 149: return 7;;	Return value of __parse_item is never used
 19180  00CA88  0012               	return	
 19181  00CA8A                     l2956:
 19182                           
 19183                           ;config_file.c: 150: };config_file.c: 152: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 19184  00CA8A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19185  00CA8E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19186  00CA92  0E37               	movlw	low _initial_speed_arc_string
 19187  00CA94  0100               	movlb	0	; () banked
 19188  00CA96  6F63               	movwf	stricmp@s2& (0+255),b
 19189  00CA98  0EA2               	movlw	high _initial_speed_arc_string
 19190  00CA9A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19191  00CA9C  EC47  F0A3         	call	_stricmp	;wreg free
 19192  00CAA0  0100               	movlb	0	; () banked
 19193  00CAA2  5161               	movf	?_stricmp& (0+255),w,b
 19194  00CAA4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19195  00CAA6  A4D8               	btfss	status,2,c
 19196  00CAA8  D00B               	goto	l2957
 19197                           
 19198                           ; BSR set to: 0
 19199                           ;config_file.c: 153: {;config_file.c: 154: config.initial_speed_arc = atoi(value_string)
      +                          ;
 19200  00CAAA  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19201  00CAAE  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19202  00CAB2  EC98  F091         	call	_atoi	;wreg free
 19203  00CAB6  C066  F1AE         	movff	?_atoi,_config+13
 19204  00CABA  C067  F1AF         	movff	?_atoi+1,_config+14
 19205                           
 19206                           ;config_file.c: 155: return 8;;	Return value of __parse_item is never used
 19207  00CABE  0012               	return	
 19208  00CAC0                     l2957:
 19209                           
 19210                           ;config_file.c: 156: };config_file.c: 158: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 19211  00CAC0  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19212  00CAC4  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19213  00CAC8  0E25               	movlw	low _maximum_speed_arc_string
 19214  00CACA  0100               	movlb	0	; () banked
 19215  00CACC  6F63               	movwf	stricmp@s2& (0+255),b
 19216  00CACE  0EA2               	movlw	high _maximum_speed_arc_string
 19217  00CAD0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19218  00CAD2  EC47  F0A3         	call	_stricmp	;wreg free
 19219  00CAD6  0100               	movlb	0	; () banked
 19220  00CAD8  5161               	movf	?_stricmp& (0+255),w,b
 19221  00CADA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19222  00CADC  A4D8               	btfss	status,2,c
 19223  00CADE  D00B               	goto	l2958
 19224                           
 19225                           ; BSR set to: 0
 19226                           ;config_file.c: 159: {;config_file.c: 160: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 19227  00CAE0  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19228  00CAE4  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19229  00CAE8  EC98  F091         	call	_atoi	;wreg free
 19230  00CAEC  C066  F1B0         	movff	?_atoi,_config+15
 19231  00CAF0  C067  F1B1         	movff	?_atoi+1,_config+16
 19232                           
 19233                           ;config_file.c: 161: return 9;;	Return value of __parse_item is never used
 19234  00CAF4  0012               	return	
 19235  00CAF6                     l2958:
 19236                           
 19237                           ;config_file.c: 162: };config_file.c: 164: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 19238  00CAF6  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19239  00CAFA  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19240  00CAFE  0EE8               	movlw	low _initial_speed_manual_string
 19241  00CB00  0100               	movlb	0	; () banked
 19242  00CB02  6F63               	movwf	stricmp@s2& (0+255),b
 19243  00CB04  0EA1               	movlw	high _initial_speed_manual_string
 19244  00CB06  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19245  00CB08  EC47  F0A3         	call	_stricmp	;wreg free
 19246  00CB0C  0100               	movlb	0	; () banked
 19247  00CB0E  5161               	movf	?_stricmp& (0+255),w,b
 19248  00CB10  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19249  00CB12  A4D8               	btfss	status,2,c
 19250  00CB14  D00B               	goto	l2959
 19251                           
 19252                           ; BSR set to: 0
 19253                           ;config_file.c: 165: {;config_file.c: 166: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 19254  00CB16  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19255  00CB1A  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19256  00CB1E  EC98  F091         	call	_atoi	;wreg free
 19257  00CB22  C066  F1B2         	movff	?_atoi,_config+17
 19258  00CB26  C067  F1B3         	movff	?_atoi+1,_config+18
 19259                           
 19260                           ;config_file.c: 167: return 10;;	Return value of __parse_item is never used
 19261  00CB2A  0012               	return	
 19262  00CB2C                     l2959:
 19263                           
 19264                           ;config_file.c: 168: };config_file.c: 170: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 19265  00CB2C  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19266  00CB30  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19267  00CB34  0ED3               	movlw	low _maximum_speed_manual_string
 19268  00CB36  0100               	movlb	0	; () banked
 19269  00CB38  6F63               	movwf	stricmp@s2& (0+255),b
 19270  00CB3A  0EA1               	movlw	high _maximum_speed_manual_string
 19271  00CB3C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19272  00CB3E  EC47  F0A3         	call	_stricmp	;wreg free
 19273  00CB42  0100               	movlb	0	; () banked
 19274  00CB44  5161               	movf	?_stricmp& (0+255),w,b
 19275  00CB46  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19276  00CB48  A4D8               	btfss	status,2,c
 19277  00CB4A  D00B               	goto	l2960
 19278                           
 19279                           ; BSR set to: 0
 19280                           ;config_file.c: 171: {;config_file.c: 172: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 19281  00CB4C  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19282  00CB50  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19283  00CB54  EC98  F091         	call	_atoi	;wreg free
 19284  00CB58  C066  F1B4         	movff	?_atoi,_config+19
 19285  00CB5C  C067  F1B5         	movff	?_atoi+1,_config+20
 19286                           
 19287                           ;config_file.c: 173: return 11;;	Return value of __parse_item is never used
 19288  00CB60  0012               	return	
 19289  00CB62                     l2960:
 19290                           
 19291                           ;config_file.c: 174: };config_file.c: 176: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 19292  00CB62  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19293  00CB66  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19294  00CB6A  0E7B               	movlw	low _beep_duration_string
 19295  00CB6C  0100               	movlb	0	; () banked
 19296  00CB6E  6F63               	movwf	stricmp@s2& (0+255),b
 19297  00CB70  0EA2               	movlw	high _beep_duration_string
 19298  00CB72  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19299  00CB74  EC47  F0A3         	call	_stricmp	;wreg free
 19300  00CB78  0100               	movlb	0	; () banked
 19301  00CB7A  5161               	movf	?_stricmp& (0+255),w,b
 19302  00CB7C  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19303  00CB7E  A4D8               	btfss	status,2,c
 19304  00CB80  D00B               	goto	l2961
 19305                           
 19306                           ; BSR set to: 0
 19307                           ;config_file.c: 177: {;config_file.c: 178: config.beep_duration = atoi(value_string);
 19308  00CB82  C07C  F066         	movff	__parse_item@value_string,atoi@s
 19309  00CB86  C07D  F067         	movff	__parse_item@value_string+1,atoi@s+1
 19310  00CB8A  EC98  F091         	call	_atoi	;wreg free
 19311  00CB8E  0100               	movlb	0	; () banked
 19312  00CB90  5166               	movf	?_atoi& (0+255),w,b
 19313  00CB92  0101               	movlb	1	; () banked
 19314  00CB94  6FB6               	movwf	(_config+21)& (0+255),b
 19315                           
 19316                           ; BSR set to: 1
 19317                           ;config_file.c: 179: return 12;;	Return value of __parse_item is never used
 19318  00CB96  0012               	return	
 19319  00CB98                     l2961:
 19320                           
 19321                           ;config_file.c: 180: };config_file.c: 182: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 19322                           
 19323                           ; BSR set to: 1
 19324  00CB98  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19325  00CB9C  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19326  00CBA0  0EA5               	movlw	low _use_cw_limit_string
 19327  00CBA2  0100               	movlb	0	; () banked
 19328  00CBA4  6F63               	movwf	stricmp@s2& (0+255),b
 19329  00CBA6  0EA2               	movlw	high _use_cw_limit_string
 19330  00CBA8  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19331  00CBAA  EC47  F0A3         	call	_stricmp	;wreg free
 19332  00CBAE  0100               	movlb	0	; () banked
 19333  00CBB0  5161               	movf	?_stricmp& (0+255),w,b
 19334  00CBB2  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19335  00CBB4  A4D8               	btfss	status,2,c
 19336  00CBB6  D00B               	goto	l2962
 19337                           
 19338                           ; BSR set to: 0
 19339                           ;config_file.c: 183: {;config_file.c: 184: config.use_cw_limit = atol(value_string);
 19340  00CBB8  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19341  00CBBC  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19342  00CBC0  ECBA  F08A         	call	_atol	;wreg free
 19343  00CBC4  0100               	movlb	0	; () banked
 19344  00CBC6  516C               	movf	?_atol& (0+255),w,b
 19345  00CBC8  0101               	movlb	1	; () banked
 19346  00CBCA  6FB7               	movwf	(_config+22)& (0+255),b
 19347                           
 19348                           ; BSR set to: 1
 19349                           ;config_file.c: 185: return 13;;	Return value of __parse_item is never used
 19350  00CBCC  0012               	return	
 19351  00CBCE                     l2962:
 19352                           
 19353                           ;config_file.c: 186: };config_file.c: 188: if(stricmp(item_string, cw_limit_string)==0)
 19354                           
 19355                           ; BSR set to: 1
 19356  00CBCE  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19357  00CBD2  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19358  00CBD6  0EBC               	movlw	low _cw_limit_string
 19359  00CBD8  0100               	movlb	0	; () banked
 19360  00CBDA  6F63               	movwf	stricmp@s2& (0+255),b
 19361  00CBDC  0EA2               	movlw	high _cw_limit_string
 19362  00CBDE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19363  00CBE0  EC47  F0A3         	call	_stricmp	;wreg free
 19364  00CBE4  0100               	movlb	0	; () banked
 19365  00CBE6  5161               	movf	?_stricmp& (0+255),w,b
 19366  00CBE8  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19367  00CBEA  A4D8               	btfss	status,2,c
 19368  00CBEC  D00B               	goto	l2963
 19369                           
 19370                           ; BSR set to: 0
 19371                           ;config_file.c: 189: {;config_file.c: 190: config.cw_limit = atol(value_string);
 19372  00CBEE  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19373  00CBF2  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19374  00CBF6  ECBA  F08A         	call	_atol	;wreg free
 19375  00CBFA  C06C  F1B8         	movff	?_atol,_config+23
 19376  00CBFE  C06D  F1B9         	movff	?_atol+1,_config+24
 19377                           
 19378                           ;config_file.c: 191: return 14;;	Return value of __parse_item is never used
 19379  00CC02  0012               	return	
 19380  00CC04                     l2963:
 19381                           
 19382                           ;config_file.c: 192: };config_file.c: 194: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 19383  00CC04  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19384  00CC08  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19385  00CC0C  0E6D               	movlw	low _use_ccw_limit_string
 19386  00CC0E  0100               	movlb	0	; () banked
 19387  00CC10  6F63               	movwf	stricmp@s2& (0+255),b
 19388  00CC12  0EA2               	movlw	high _use_ccw_limit_string
 19389  00CC14  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19390  00CC16  EC47  F0A3         	call	_stricmp	;wreg free
 19391  00CC1A  0100               	movlb	0	; () banked
 19392  00CC1C  5161               	movf	?_stricmp& (0+255),w,b
 19393  00CC1E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19394  00CC20  A4D8               	btfss	status,2,c
 19395  00CC22  D00B               	goto	l2964
 19396                           
 19397                           ; BSR set to: 0
 19398                           ;config_file.c: 195: {;config_file.c: 196: config.use_ccw_limit = atol(value_string);
 19399  00CC24  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19400  00CC28  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19401  00CC2C  ECBA  F08A         	call	_atol	;wreg free
 19402  00CC30  0100               	movlb	0	; () banked
 19403  00CC32  516C               	movf	?_atol& (0+255),w,b
 19404  00CC34  0101               	movlb	1	; () banked
 19405  00CC36  6FBA               	movwf	(_config+25)& (0+255),b
 19406                           
 19407                           ; BSR set to: 1
 19408                           ;config_file.c: 197: return 15;;	Return value of __parse_item is never used
 19409  00CC38  0012               	return	
 19410  00CC3A                     l2964:
 19411                           
 19412                           ;config_file.c: 198: };config_file.c: 200: if(stricmp(item_string, ccw_limit_string)==0)
 19413                           
 19414                           ; BSR set to: 1
 19415  00CC3A  C07A  F061         	movff	__parse_item@item_string,stricmp@s1
 19416  00CC3E  C07B  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 19417  00CC42  0EB2               	movlw	low _ccw_limit_string
 19418  00CC44  0100               	movlb	0	; () banked
 19419  00CC46  6F63               	movwf	stricmp@s2& (0+255),b
 19420  00CC48  0EA2               	movlw	high _ccw_limit_string
 19421  00CC4A  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 19422  00CC4C  EC47  F0A3         	call	_stricmp	;wreg free
 19423  00CC50  0100               	movlb	0	; () banked
 19424  00CC52  5161               	movf	?_stricmp& (0+255),w,b
 19425  00CC54  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 19426  00CC56  A4D8               	btfss	status,2,c
 19427  00CC58  0012               	return	
 19428                           
 19429                           ; BSR set to: 0
 19430                           ;config_file.c: 201: {;config_file.c: 202: config.ccw_limit = atol(value_string);
 19431  00CC5A  C07C  F06C         	movff	__parse_item@value_string,atol@s
 19432  00CC5E  C07D  F06D         	movff	__parse_item@value_string+1,atol@s+1
 19433  00CC62  ECBA  F08A         	call	_atol	;wreg free
 19434  00CC66  C06C  F1BB         	movff	?_atol,_config+26
 19435  00CC6A  C06D  F1BC         	movff	?_atol+1,_config+27
 19436                           
 19437                           ;config_file.c: 203: return 16;;	Return value of __parse_item is never used
 19438  00CC6E  0012               	return	
 19439  00CC70                     __end_of__parse_item:
 19440                           	opt stack 0
 19441                           tblptru	equ	0xFF8
 19442                           tblptrh	equ	0xFF7
 19443                           tblptrl	equ	0xFF6
 19444                           tablat	equ	0xFF5
 19445                           prodh	equ	0xFF4
 19446                           prodl	equ	0xFF3
 19447                           postinc0	equ	0xFEE
 19448                           wreg	equ	0xFE8
 19449                           postinc1	equ	0xFE6
 19450                           postdec1	equ	0xFE5
 19451                           plusw1	equ	0xFE3
 19452                           fsr1h	equ	0xFE2
 19453                           fsr1l	equ	0xFE1
 19454                           indf2	equ	0xFDF
 19455                           postinc2	equ	0xFDE
 19456                           postdec2	equ	0xFDD
 19457                           plusw2	equ	0xFDB
 19458                           fsr2h	equ	0xFDA
 19459                           fsr2l	equ	0xFD9
 19460                           status	equ	0xFD8
 19461                           
 19462 ;; *************** function _stricmp *****************
 19463 ;; Defined at:
 19464 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 19465 ;; Parameters:    Size  Location     Type
 19466 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 19467 ;;		 -> configFile_read@item_string(31), 
 19468 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 19469 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 19470 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 19471 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 19472 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 19473 ;; Auto vars:     Size  Location     Type
 19474 ;;  r               1    6[BANK0 ] char 
 19475 ;; Return value:  Size  Location     Type
 19476 ;;                  2    1[BANK0 ] int 
 19477 ;; Registers used:
 19478 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 19479 ;; Tracked objects:
 19480 ;;		On entry : 0/0
 19481 ;;		On exit  : 0/0
 19482 ;;		Unchanged: 0/0
 19483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19484 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19485 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19486 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19487 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19488 ;;Total ram usage:        6 bytes
 19489 ;; Hardware stack levels used:    1
 19490 ;; Hardware stack levels required when called:   11
 19491 ;; This function calls:
 19492 ;;		_toupper
 19493 ;; This function is called by:
 19494 ;;		__parse_item
 19495 ;; This function uses a non-reentrant model
 19496 ;;
 19497                           
 19498                           	psect	text78
 19499  01468E                     __ptext78:
 19500                           	opt stack 0
 19501  01468E                     _stricmp:
 19502                           	opt stack 16
 19503                           
 19504                           ;incstack = 0
 19505  01468E  D005               	goto	l3723
 19506  014690  0100               	movlb	0	; () banked
 19507  014692  4B61               	infsnz	stricmp@s1& (0+255),f,b
 19508  014694  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 19509  014696  4B63               	infsnz	stricmp@s2& (0+255),f,b
 19510  014698  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 19511  01469A                     l3723:
 19512                           
 19513                           ; BSR set to: 0
 19514  01469A  C063  FFF6         	movff	stricmp@s2,tblptrl
 19515  01469E  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 19516  0146A2                     	if	0	;tblptru may be non-zero
 19517  0146A2                     	endif
 19518  0146A2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 19519  0146A2  0E00               	movlw	low (__mediumconst shr (0+16))
 19520  0146A4  6EF8               	movwf	tblptru,c
 19521  0146A6                     	endif
 19522  0146A6  0008               	tblrd		*
 19523  0146A8  50F5               	movf	tablat,w,c
 19524  0146AA  ECA6  F0AC         	call	_toupper
 19525  0146AE  0800               	sublw	0
 19526  0146B0  0100               	movlb	0	; () banked
 19527  0146B2  6F65               	movwf	??_stricmp& (0+255),b
 19528  0146B4  C061  FFD9         	movff	stricmp@s1,fsr2l
 19529  0146B8  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19530  0146BC  50DF               	movf	indf2,w,c
 19531  0146BE  ECA6  F0AC         	call	_toupper
 19532  0146C2  0100               	movlb	0	; () banked
 19533  0146C4  2565               	addwf	??_stricmp& (0+255),w,b
 19534  0146C6  6F66               	movwf	stricmp@r& (0+255),b
 19535  0146C8  5166               	movf	stricmp@r& (0+255),w,b
 19536  0146CA  A4D8               	btfss	status,2,c
 19537  0146CC  D007               	goto	u13830
 19538                           
 19539                           ; BSR set to: 0
 19540  0146CE  C061  FFD9         	movff	stricmp@s1,fsr2l
 19541  0146D2  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 19542  0146D6  50DF               	movf	indf2,w,c
 19543  0146D8  A4D8               	btfss	status,2,c
 19544  0146DA  D7DA               	goto	l3724
 19545  0146DC                     u13830:
 19546                           
 19547                           ; BSR set to: 0
 19548                           
 19549                           ; BSR set to: 0
 19550                           
 19551                           ; BSR set to: 0
 19552  0146DC  5166               	movf	stricmp@r& (0+255),w,b
 19553  0146DE  6F61               	movwf	?_stricmp& (0+255),b
 19554  0146E0  6B62               	clrf	(?_stricmp+1)& (0+255),b
 19555  0146E2  BF61               	btfsc	?_stricmp& (0+255),7,b
 19556  0146E4  0762               	decf	(?_stricmp+1)& (0+255),f,b
 19557  0146E6  0012               	return	
 19558  0146E8                     __end_of_stricmp:
 19559                           	opt stack 0
 19560                           tblptru	equ	0xFF8
 19561                           tblptrh	equ	0xFF7
 19562                           tblptrl	equ	0xFF6
 19563                           tablat	equ	0xFF5
 19564                           prodh	equ	0xFF4
 19565                           prodl	equ	0xFF3
 19566                           postinc0	equ	0xFEE
 19567                           wreg	equ	0xFE8
 19568                           postinc1	equ	0xFE6
 19569                           postdec1	equ	0xFE5
 19570                           plusw1	equ	0xFE3
 19571                           fsr1h	equ	0xFE2
 19572                           fsr1l	equ	0xFE1
 19573                           indf2	equ	0xFDF
 19574                           postinc2	equ	0xFDE
 19575                           postdec2	equ	0xFDD
 19576                           plusw2	equ	0xFDB
 19577                           fsr2h	equ	0xFDA
 19578                           fsr2l	equ	0xFD9
 19579                           status	equ	0xFD8
 19580                           
 19581 ;; *************** function _toupper *****************
 19582 ;; Defined at:
 19583 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 19584 ;; Parameters:    Size  Location     Type
 19585 ;;  c               1    wreg     unsigned char 
 19586 ;; Auto vars:     Size  Location     Type
 19587 ;;  c               1    0[BANK0 ] unsigned char 
 19588 ;; Return value:  Size  Location     Type
 19589 ;;                  1    wreg      unsigned char 
 19590 ;; Registers used:
 19591 ;;		wreg, status,2, status,0
 19592 ;; Tracked objects:
 19593 ;;		On entry : 0/0
 19594 ;;		On exit  : 0/0
 19595 ;;		Unchanged: 0/0
 19596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19597 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19598 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19599 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19600 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19601 ;;Total ram usage:        1 bytes
 19602 ;; Hardware stack levels used:    1
 19603 ;; Hardware stack levels required when called:   10
 19604 ;; This function calls:
 19605 ;;		Nothing
 19606 ;; This function is called by:
 19607 ;;		_stricmp
 19608 ;; This function uses a non-reentrant model
 19609 ;;
 19610                           
 19611                           	psect	text79
 19612  01594C                     __ptext79:
 19613                           	opt stack 0
 19614  01594C                     _toupper:
 19615                           	opt stack 16
 19616                           
 19617                           ; BSR set to: 0
 19618                           ;incstack = 0
 19619                           ;toupper@c stored from wreg
 19620  01594C  0100               	movlb	0	; () banked
 19621  01594E  6F60               	movwf	toupper@c& (0+255),b
 19622  015950  0E7B               	movlw	123
 19623  015952  0100               	movlb	0	; () banked
 19624  015954  6160               	cpfslt	toupper@c& (0+255),b
 19625  015956  D004               	goto	l3746
 19626                           
 19627                           ; BSR set to: 0
 19628  015958  0E60               	movlw	96
 19629  01595A  6560               	cpfsgt	toupper@c& (0+255),b
 19630  01595C  D001               	goto	l3746
 19631                           
 19632                           ; BSR set to: 0
 19633  01595E  9B60               	bcf	toupper@c& (0+255),5,b
 19634  015960                     l3746:
 19635                           
 19636                           ; BSR set to: 0
 19637                           
 19638                           ; BSR set to: 0
 19639  015960  5160               	movf	toupper@c& (0+255),w,b
 19640  015962  0012               	return	
 19641  015964                     __end_of_toupper:
 19642                           	opt stack 0
 19643                           tblptru	equ	0xFF8
 19644                           tblptrh	equ	0xFF7
 19645                           tblptrl	equ	0xFF6
 19646                           tablat	equ	0xFF5
 19647                           prodh	equ	0xFF4
 19648                           prodl	equ	0xFF3
 19649                           postinc0	equ	0xFEE
 19650                           wreg	equ	0xFE8
 19651                           postinc1	equ	0xFE6
 19652                           postdec1	equ	0xFE5
 19653                           plusw1	equ	0xFE3
 19654                           fsr1h	equ	0xFE2
 19655                           fsr1l	equ	0xFE1
 19656                           indf2	equ	0xFDF
 19657                           postinc2	equ	0xFDE
 19658                           postdec2	equ	0xFDD
 19659                           plusw2	equ	0xFDB
 19660                           fsr2h	equ	0xFDA
 19661                           fsr2l	equ	0xFD9
 19662                           status	equ	0xFD8
 19663                           
 19664 ;; *************** function _atol *****************
 19665 ;; Defined at:
 19666 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 19667 ;; Parameters:    Size  Location     Type
 19668 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 19669 ;;		 -> configFile_read@value_string(12), 
 19670 ;; Auto vars:     Size  Location     Type
 19671 ;;  a               4   21[BANK0 ] long 
 19672 ;;  c               1   25[BANK0 ] unsigned char 
 19673 ;;  sign            1   20[BANK0 ] unsigned char 
 19674 ;; Return value:  Size  Location     Type
 19675 ;;                  4   12[BANK0 ] long 
 19676 ;; Registers used:
 19677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19678 ;; Tracked objects:
 19679 ;;		On entry : 0/0
 19680 ;;		On exit  : 0/0
 19681 ;;		Unchanged: 0/0
 19682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19683 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19684 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19685 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19686 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19687 ;;Total ram usage:       14 bytes
 19688 ;; Hardware stack levels used:    1
 19689 ;; Hardware stack levels required when called:   11
 19690 ;; This function calls:
 19691 ;;		___lmul
 19692 ;;		_isdigit
 19693 ;; This function is called by:
 19694 ;;		__parse_item
 19695 ;; This function uses a non-reentrant model
 19696 ;;
 19697                           
 19698                           	psect	text80
 19699  011574                     __ptext80:
 19700                           	opt stack 0
 19701  011574                     _atol:
 19702                           	opt stack 16
 19703                           
 19704                           ; BSR set to: 0
 19705                           ;incstack = 0
 19706  011574  C06C  FFD9         	movff	atol@s,fsr2l
 19707  011578  C06D  FFDA         	movff	atol@s+1,fsr2h
 19708  01157C  50DF               	movf	indf2,w,c
 19709  01157E  0100               	movlb	0	; () banked
 19710  011580  6F79               	movwf	atol@c& (0+255),b
 19711                           
 19712                           ; BSR set to: 0
 19713  011582  4B6C               	infsnz	atol@s& (0+255),f,b
 19714  011584  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19715                           
 19716                           ; BSR set to: 0
 19717  011586  0E20               	movlw	32
 19718  011588  1979               	xorwf	atol@c& (0+255),w,b
 19719  01158A  B4D8               	btfsc	status,2,c
 19720  01158C  D7F3               	goto	_atol
 19721                           
 19722                           ; BSR set to: 0
 19723  01158E  0E09               	movlw	9
 19724  011590  1979               	xorwf	atol@c& (0+255),w,b
 19725  011592  B4D8               	btfsc	status,2,c
 19726  011594  D7EF               	goto	_atol
 19727                           
 19728                           ; BSR set to: 0
 19729                           
 19730                           ; BSR set to: 0
 19731  011596  0E00               	movlw	0
 19732  011598  6F75               	movwf	atol@a& (0+255),b
 19733  01159A  0E00               	movlw	0
 19734  01159C  6F76               	movwf	(atol@a+1)& (0+255),b
 19735  01159E  0E00               	movlw	0
 19736  0115A0  6F77               	movwf	(atol@a+2)& (0+255),b
 19737  0115A2  0E00               	movlw	0
 19738  0115A4  6F78               	movwf	(atol@a+3)& (0+255),b
 19739  0115A6  0E00               	movlw	0
 19740  0115A8  6F74               	movwf	atol@sign& (0+255),b
 19741                           
 19742                           ; BSR set to: 0
 19743  0115AA  0E2D               	movlw	45
 19744  0115AC  1979               	xorwf	atol@c& (0+255),w,b
 19745  0115AE  A4D8               	btfss	status,2,c
 19746  0115B0  D002               	goto	l3666
 19747                           
 19748                           ; BSR set to: 0
 19749  0115B2  2B74               	incf	atol@sign& (0+255),f,b
 19750  0115B4  D029               	goto	L91
 19751  0115B6                     l3666:
 19752                           
 19753                           ; BSR set to: 0
 19754                           
 19755                           ; BSR set to: 0
 19756  0115B6  0E2B               	movlw	43
 19757  0115B8  1979               	xorwf	atol@c& (0+255),w,b
 19758  0115BA  A4D8               	btfss	status,2,c
 19759  0115BC  D02D               	goto	l3669
 19760  0115BE  D024               	goto	L91
 19761  0115C0                     
 19762                           ; BSR set to: 0
 19763  0115C0  C075  F060         	movff	atol@a,___lmul@multiplier
 19764  0115C4  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19765  0115C8  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19766  0115CC  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19767  0115D0  0E0A               	movlw	10
 19768  0115D2  0100               	movlb	0	; () banked
 19769  0115D4  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19770  0115D6  0E00               	movlw	0
 19771  0115D8  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19772  0115DA  0E00               	movlw	0
 19773  0115DC  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19774  0115DE  0E00               	movlw	0
 19775  0115E0  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19776  0115E2  EC7F  F0A4         	call	___lmul	;wreg free
 19777  0115E6  C079  F070         	movff	atol@c,??_atol
 19778  0115EA  0ED0               	movlw	208
 19779  0115EC  0100               	movlb	0	; () banked
 19780  0115EE  2770               	addwf	??_atol& (0+255),f,b
 19781  0115F0  5170               	movf	??_atol& (0+255),w,b
 19782  0115F2  2560               	addwf	?___lmul& (0+255),w,b
 19783  0115F4  6F75               	movwf	atol@a& (0+255),b
 19784  0115F6  0E00               	movlw	0
 19785  0115F8  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19786  0115FA  6F76               	movwf	(atol@a+1)& (0+255),b
 19787  0115FC  0E00               	movlw	0
 19788  0115FE  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19789  011600  6F77               	movwf	(atol@a+2)& (0+255),b
 19790  011602  0E00               	movlw	0
 19791  011604  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19792  011606  6F78               	movwf	(atol@a+3)& (0+255),b
 19793  011608                     L91:
 19794                           
 19795                           ; BSR set to: 0
 19796  011608  C06C  FFD9         	movff	atol@s,fsr2l
 19797  01160C  C06D  FFDA         	movff	atol@s+1,fsr2h
 19798  011610  50DF               	movf	indf2,w,c
 19799  011612  6F79               	movwf	atol@c& (0+255),b
 19800                           
 19801                           ; BSR set to: 0
 19802  011614  4B6C               	infsnz	atol@s& (0+255),f,b
 19803  011616  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19804  011618                     l3669:
 19805                           
 19806                           ; BSR set to: 0
 19807                           
 19808                           ; BSR set to: 0
 19809  011618  5179               	movf	atol@c& (0+255),w,b
 19810  01161A  EC05  F0AC         	call	_isdigit
 19811  01161E  B0D8               	btfsc	status,0,c
 19812  011620  D7CF               	goto	l3670
 19813  011622  0100               	movlb	0	; () banked
 19814  011624  5174               	movf	atol@sign& (0+255),w,b
 19815  011626  B4D8               	btfsc	status,2,c
 19816  011628  D01A               	goto	l3672
 19817                           
 19818                           ; BSR set to: 0
 19819  01162A  C075  F070         	movff	atol@a,??_atol
 19820  01162E  C076  F071         	movff	atol@a+1,??_atol+1
 19821  011632  C077  F072         	movff	atol@a+2,??_atol+2
 19822  011636  C078  F073         	movff	atol@a+3,??_atol+3
 19823  01163A  1F70               	comf	??_atol& (0+255),f,b
 19824  01163C  1F71               	comf	(??_atol+1)& (0+255),f,b
 19825  01163E  1F72               	comf	(??_atol+2)& (0+255),f,b
 19826  011640  1F73               	comf	(??_atol+3)& (0+255),f,b
 19827  011642  2B70               	incf	??_atol& (0+255),f,b
 19828  011644  0E00               	movlw	0
 19829  011646  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19830  011648  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19831  01164A  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19832  01164C  C070  F06C         	movff	??_atol,?_atol
 19833  011650  C071  F06D         	movff	??_atol+1,?_atol+1
 19834  011654  C072  F06E         	movff	??_atol+2,?_atol+2
 19835  011658  C073  F06F         	movff	??_atol+3,?_atol+3
 19836                           
 19837                           ; BSR set to: 0
 19838  01165C  0012               	return	
 19839  01165E                     l3672:
 19840                           
 19841                           ; BSR set to: 0
 19842  01165E  C075  F06C         	movff	atol@a,?_atol
 19843  011662  C076  F06D         	movff	atol@a+1,?_atol+1
 19844  011666  C077  F06E         	movff	atol@a+2,?_atol+2
 19845  01166A  C078  F06F         	movff	atol@a+3,?_atol+3
 19846                           
 19847                           ; BSR set to: 0
 19848  01166E  0012               	return		;funcret
 19849  011670                     __end_of_atol:
 19850                           	opt stack 0
 19851                           tblptru	equ	0xFF8
 19852                           tblptrh	equ	0xFF7
 19853                           tblptrl	equ	0xFF6
 19854                           tablat	equ	0xFF5
 19855                           prodh	equ	0xFF4
 19856                           prodl	equ	0xFF3
 19857                           postinc0	equ	0xFEE
 19858                           wreg	equ	0xFE8
 19859                           postinc1	equ	0xFE6
 19860                           postdec1	equ	0xFE5
 19861                           plusw1	equ	0xFE3
 19862                           fsr1h	equ	0xFE2
 19863                           fsr1l	equ	0xFE1
 19864                           indf2	equ	0xFDF
 19865                           postinc2	equ	0xFDE
 19866                           postdec2	equ	0xFDD
 19867                           plusw2	equ	0xFDB
 19868                           fsr2h	equ	0xFDA
 19869                           fsr2l	equ	0xFD9
 19870                           status	equ	0xFD8
 19871                           
 19872 ;; *************** function _atoi *****************
 19873 ;; Defined at:
 19874 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19875 ;; Parameters:    Size  Location     Type
 19876 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19877 ;;		 -> configFile_read@value_string(12), 
 19878 ;; Auto vars:     Size  Location     Type
 19879 ;;  a               2   11[BANK0 ] int 
 19880 ;;  sign            1   10[BANK0 ] unsigned char 
 19881 ;; Return value:  Size  Location     Type
 19882 ;;                  2    6[BANK0 ] int 
 19883 ;; Registers used:
 19884 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19885 ;; Tracked objects:
 19886 ;;		On entry : 0/0
 19887 ;;		On exit  : 0/0
 19888 ;;		Unchanged: 0/0
 19889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19890 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19891 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19892 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19893 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19894 ;;Total ram usage:        7 bytes
 19895 ;; Hardware stack levels used:    1
 19896 ;; Hardware stack levels required when called:   11
 19897 ;; This function calls:
 19898 ;;		___wmul
 19899 ;;		_isdigit
 19900 ;; This function is called by:
 19901 ;;		__parse_item
 19902 ;; This function uses a non-reentrant model
 19903 ;;
 19904                           
 19905                           	psect	text81
 19906  012330                     __ptext81:
 19907                           	opt stack 0
 19908  012330                     _atoi:
 19909                           	opt stack 16
 19910                           
 19911                           ; BSR set to: 0
 19912                           ;incstack = 0
 19913  012330  D003               	goto	l3649
 19914  012332  0100               	movlb	0	; () banked
 19915  012334  4B66               	infsnz	atoi@s& (0+255),f,b
 19916  012336  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19917  012338                     l3649:
 19918                           
 19919                           ; BSR set to: 0
 19920  012338  C066  FFD9         	movff	atoi@s,fsr2l
 19921  01233C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19922  012340  0E20               	movlw	32
 19923  012342  18DE               	xorwf	postinc2,w,c
 19924  012344  B4D8               	btfsc	status,2,c
 19925  012346  D7F5               	goto	l3650
 19926  012348  C066  FFD9         	movff	atoi@s,fsr2l
 19927  01234C  C067  FFDA         	movff	atoi@s+1,fsr2h
 19928  012350  0E09               	movlw	9
 19929  012352  18DE               	xorwf	postinc2,w,c
 19930  012354  B4D8               	btfsc	status,2,c
 19931  012356  D7ED               	goto	l3650
 19932  012358  0E00               	movlw	0
 19933  01235A  0100               	movlb	0	; () banked
 19934  01235C  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19935  01235E  0E00               	movlw	0
 19936  012360  6F6B               	movwf	atoi@a& (0+255),b
 19937  012362  0E00               	movlw	0
 19938  012364  6F6A               	movwf	atoi@sign& (0+255),b
 19939                           
 19940                           ; BSR set to: 0
 19941  012366  C066  FFD9         	movff	atoi@s,fsr2l
 19942  01236A  C067  FFDA         	movff	atoi@s+1,fsr2h
 19943  01236E  0E2D               	movlw	45
 19944  012370  18DE               	xorwf	postinc2,w,c
 19945  012372  A4D8               	btfss	status,2,c
 19946  012374  D002               	goto	l3652
 19947                           
 19948                           ; BSR set to: 0
 19949  012376  2B6A               	incf	atoi@sign& (0+255),f,b
 19950  012378  D026               	goto	l15227
 19951  01237A                     l3652:
 19952                           
 19953                           ; BSR set to: 0
 19954                           
 19955                           ; BSR set to: 0
 19956  01237A  C066  FFD9         	movff	atoi@s,fsr2l
 19957  01237E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19958  012382  0E2B               	movlw	43
 19959  012384  18DE               	xorwf	postinc2,w,c
 19960  012386  A4D8               	btfss	status,2,c
 19961  012388  D020               	goto	l3655
 19962  01238A  D01D               	goto	l15227
 19963  01238C                     
 19964                           ; BSR set to: 0
 19965  01238C  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19966  012390  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19967  012394  0E00               	movlw	0
 19968  012396  0100               	movlb	0	; () banked
 19969  012398  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19970  01239A  0E0A               	movlw	10
 19971  01239C  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19972  01239E  EC70  F0AB         	call	___wmul	;wreg free
 19973  0123A2  C066  FFD9         	movff	atoi@s,fsr2l
 19974  0123A6  C067  FFDA         	movff	atoi@s+1,fsr2h
 19975  0123AA  50DF               	movf	indf2,w,c
 19976  0123AC  0100               	movlb	0	; () banked
 19977  0123AE  6F68               	movwf	??_atoi& (0+255),b
 19978  0123B0  6B69               	clrf	(??_atoi+1)& (0+255),b
 19979  0123B2  5160               	movf	?___wmul& (0+255),w,b
 19980  0123B4  2768               	addwf	??_atoi& (0+255),f,b
 19981  0123B6  5161               	movf	(?___wmul+1)& (0+255),w,b
 19982  0123B8  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19983  0123BA  0ED0               	movlw	208
 19984  0123BC  2568               	addwf	??_atoi& (0+255),w,b
 19985  0123BE  6F6B               	movwf	atoi@a& (0+255),b
 19986  0123C0  0EFF               	movlw	255
 19987  0123C2  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19988  0123C4  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19989  0123C6                     l15227:
 19990                           
 19991                           ; BSR set to: 0
 19992  0123C6  4B66               	infsnz	atoi@s& (0+255),f,b
 19993  0123C8  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19994  0123CA                     l3655:
 19995                           
 19996                           ; BSR set to: 0
 19997                           
 19998                           ; BSR set to: 0
 19999  0123CA  C066  FFD9         	movff	atoi@s,fsr2l
 20000  0123CE  C067  FFDA         	movff	atoi@s+1,fsr2h
 20001  0123D2  50DF               	movf	indf2,w,c
 20002  0123D4  EC05  F0AC         	call	_isdigit
 20003  0123D8  B0D8               	btfsc	status,0,c
 20004  0123DA  D7D8               	goto	l3656
 20005  0123DC  0100               	movlb	0	; () banked
 20006  0123DE  516A               	movf	atoi@sign& (0+255),w,b
 20007  0123E0  B4D8               	btfsc	status,2,c
 20008  0123E2  D00D               	goto	l3658
 20009                           
 20010                           ; BSR set to: 0
 20011  0123E4  C06B  F068         	movff	atoi@a,??_atoi
 20012  0123E8  C06C  F069         	movff	atoi@a+1,??_atoi+1
 20013  0123EC  1F68               	comf	??_atoi& (0+255),f,b
 20014  0123EE  1F69               	comf	(??_atoi+1)& (0+255),f,b
 20015  0123F0  4B68               	infsnz	??_atoi& (0+255),f,b
 20016  0123F2  2B69               	incf	(??_atoi+1)& (0+255),f,b
 20017  0123F4  C068  F066         	movff	??_atoi,?_atoi
 20018  0123F8  C069  F067         	movff	??_atoi+1,?_atoi+1
 20019  0123FC  0012               	return	
 20020  0123FE                     l3658:
 20021                           
 20022                           ; BSR set to: 0
 20023  0123FE  C06B  F066         	movff	atoi@a,?_atoi
 20024  012402  C06C  F067         	movff	atoi@a+1,?_atoi+1
 20025                           
 20026                           ; BSR set to: 0
 20027  012406  0012               	return		;funcret
 20028  012408                     __end_of_atoi:
 20029                           	opt stack 0
 20030                           tblptru	equ	0xFF8
 20031                           tblptrh	equ	0xFF7
 20032                           tblptrl	equ	0xFF6
 20033                           tablat	equ	0xFF5
 20034                           prodh	equ	0xFF4
 20035                           prodl	equ	0xFF3
 20036                           postinc0	equ	0xFEE
 20037                           wreg	equ	0xFE8
 20038                           postinc1	equ	0xFE6
 20039                           postdec1	equ	0xFE5
 20040                           plusw1	equ	0xFE3
 20041                           fsr1h	equ	0xFE2
 20042                           fsr1l	equ	0xFE1
 20043                           indf2	equ	0xFDF
 20044                           postinc2	equ	0xFDE
 20045                           postdec2	equ	0xFDD
 20046                           plusw2	equ	0xFDB
 20047                           fsr2h	equ	0xFDA
 20048                           fsr2l	equ	0xFD9
 20049                           status	equ	0xFD8
 20050                           
 20051 ;; *************** function _isdigit *****************
 20052 ;; Defined at:
 20053 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 20054 ;; Parameters:    Size  Location     Type
 20055 ;;  c               1    wreg     unsigned char 
 20056 ;; Auto vars:     Size  Location     Type
 20057 ;;  c               1    2[BANK0 ] unsigned char 
 20058 ;; Return value:  Size  Location     Type
 20059 ;;		None               void
 20060 ;; Registers used:
 20061 ;;		wreg, status,2, status,0
 20062 ;; Tracked objects:
 20063 ;;		On entry : 0/0
 20064 ;;		On exit  : 0/0
 20065 ;;		Unchanged: 0/0
 20066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20068 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20069 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20070 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20071 ;;Total ram usage:        3 bytes
 20072 ;; Hardware stack levels used:    1
 20073 ;; Hardware stack levels required when called:   10
 20074 ;; This function calls:
 20075 ;;		Nothing
 20076 ;; This function is called by:
 20077 ;;		_atoi
 20078 ;;		_atol
 20079 ;; This function uses a non-reentrant model
 20080 ;;
 20081                           
 20082                           	psect	text82
 20083  01580A                     __ptext82:
 20084                           	opt stack 0
 20085  01580A                     _isdigit:
 20086                           	opt stack 16
 20087                           
 20088                           ; BSR set to: 0
 20089                           ;incstack = 0
 20090                           ;isdigit@c stored from wreg
 20091  01580A  0100               	movlb	0	; () banked
 20092  01580C  6F62               	movwf	isdigit@c& (0+255),b
 20093  01580E  0E00               	movlw	0
 20094  015810  0100               	movlb	0	; () banked
 20095  015812  6F61               	movwf	_isdigit$8210& (0+255),b
 20096                           
 20097                           ; BSR set to: 0
 20098  015814  0E3A               	movlw	58
 20099  015816  6162               	cpfslt	isdigit@c& (0+255),b
 20100  015818  D005               	goto	l3677
 20101                           
 20102                           ; BSR set to: 0
 20103  01581A  0E2F               	movlw	47
 20104  01581C  6562               	cpfsgt	isdigit@c& (0+255),b
 20105  01581E  D002               	goto	l3677
 20106                           
 20107                           ; BSR set to: 0
 20108  015820  0E01               	movlw	1
 20109  015822  6F61               	movwf	_isdigit$8210& (0+255),b
 20110  015824                     l3677:
 20111                           
 20112                           ; BSR set to: 0
 20113                           
 20114                           ; BSR set to: 0
 20115  015824  C061  F060         	movff	_isdigit$8210,??_isdigit
 20116  015828  3160               	rrcf	??_isdigit& (0+255),w,b
 20117  01582A  0012               	return	
 20118  01582C                     __end_of_isdigit:
 20119                           	opt stack 0
 20120                           tblptru	equ	0xFF8
 20121                           tblptrh	equ	0xFF7
 20122                           tblptrl	equ	0xFF6
 20123                           tablat	equ	0xFF5
 20124                           prodh	equ	0xFF4
 20125                           prodl	equ	0xFF3
 20126                           postinc0	equ	0xFEE
 20127                           wreg	equ	0xFE8
 20128                           postinc1	equ	0xFE6
 20129                           postdec1	equ	0xFE5
 20130                           plusw1	equ	0xFE3
 20131                           fsr1h	equ	0xFE2
 20132                           fsr1l	equ	0xFE1
 20133                           indf2	equ	0xFDF
 20134                           postinc2	equ	0xFDE
 20135                           postdec2	equ	0xFDD
 20136                           plusw2	equ	0xFDB
 20137                           fsr2h	equ	0xFDA
 20138                           fsr2l	equ	0xFD9
 20139                           status	equ	0xFD8
 20140                           
 20141 ;; *************** function ___wmul *****************
 20142 ;; Defined at:
 20143 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 20144 ;; Parameters:    Size  Location     Type
 20145 ;;  multiplier      2    0[BANK0 ] unsigned int 
 20146 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 20147 ;; Auto vars:     Size  Location     Type
 20148 ;;  product         2    4[BANK0 ] unsigned int 
 20149 ;; Return value:  Size  Location     Type
 20150 ;;                  2    0[BANK0 ] unsigned int 
 20151 ;; Registers used:
 20152 ;;		wreg, status,2, status,0, prodl, prodh
 20153 ;; Tracked objects:
 20154 ;;		On entry : 0/0
 20155 ;;		On exit  : 0/0
 20156 ;;		Unchanged: 0/0
 20157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20158 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20159 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20161 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20162 ;;Total ram usage:        6 bytes
 20163 ;; Hardware stack levels used:    1
 20164 ;; Hardware stack levels required when called:   10
 20165 ;; This function calls:
 20166 ;;		Nothing
 20167 ;; This function is called by:
 20168 ;;		_atoi
 20169 ;; This function uses a non-reentrant model
 20170 ;;
 20171                           
 20172                           	psect	text83
 20173  0156E0                     __ptext83:
 20174                           	opt stack 0
 20175  0156E0                     ___wmul:
 20176                           	opt stack 16
 20177                           
 20178                           ; BSR set to: 0
 20179                           ;incstack = 0
 20180  0156E0  0100               	movlb	0	; () banked
 20181  0156E2  5160               	movf	___wmul@multiplier& (0+255),w,b
 20182  0156E4  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20183  0156E6  CFF3 F064          	movff	prodl,___wmul@product
 20184  0156EA  CFF4 F065          	movff	prodh,___wmul@product+1
 20185  0156EE  5160               	movf	___wmul@multiplier& (0+255),w,b
 20186  0156F0  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 20187  0156F2  50F3               	movf	prodl,w,c
 20188  0156F4  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20189  0156F6  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 20190  0156F8  0362               	mulwf	___wmul@multiplicand& (0+255),b
 20191  0156FA  50F3               	movf	prodl,w,c
 20192  0156FC  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 20193                           
 20194                           ; BSR set to: 0
 20195  0156FE  C064  F060         	movff	___wmul@product,?___wmul
 20196  015702  C065  F061         	movff	___wmul@product+1,?___wmul+1
 20197  015706  0012               	return	
 20198  015708                     __end_of___wmul:
 20199                           	opt stack 0
 20200                           tblptru	equ	0xFF8
 20201                           tblptrh	equ	0xFF7
 20202                           tblptrl	equ	0xFF6
 20203                           tablat	equ	0xFF5
 20204                           prodh	equ	0xFF4
 20205                           prodl	equ	0xFF3
 20206                           postinc0	equ	0xFEE
 20207                           wreg	equ	0xFE8
 20208                           postinc1	equ	0xFE6
 20209                           postdec1	equ	0xFE5
 20210                           plusw1	equ	0xFE3
 20211                           fsr1h	equ	0xFE2
 20212                           fsr1l	equ	0xFE1
 20213                           indf2	equ	0xFDF
 20214                           postinc2	equ	0xFDE
 20215                           postdec2	equ	0xFDD
 20216                           plusw2	equ	0xFDB
 20217                           fsr2h	equ	0xFDA
 20218                           fsr2l	equ	0xFD9
 20219                           status	equ	0xFD8
 20220                           
 20221 ;; *************** function __get_item *****************
 20222 ;; Defined at:
 20223 ;;		line 68 in file "config_file.c"
 20224 ;; Parameters:    Size  Location     Type
 20225 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20226 ;;		 -> configFile_read@item_string(31), 
 20227 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20228 ;;		 -> configFile_read@value_string(12), 
 20229 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20230 ;;		 -> ConfigFile_buffer(512), 
 20231 ;; Auto vars:     Size  Location     Type
 20232 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20233 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20234 ;; Return value:  Size  Location     Type
 20235 ;;                  1    wreg      unsigned char 
 20236 ;; Registers used:
 20237 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20238 ;; Tracked objects:
 20239 ;;		On entry : 0/0
 20240 ;;		On exit  : 0/0
 20241 ;;		Unchanged: 0/0
 20242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20243 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20244 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20245 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20246 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20247 ;;Total ram usage:       11 bytes
 20248 ;; Hardware stack levels used:    1
 20249 ;; Hardware stack levels required when called:   10
 20250 ;; This function calls:
 20251 ;;		Nothing
 20252 ;; This function is called by:
 20253 ;;		_configFile_read
 20254 ;; This function uses a non-reentrant model
 20255 ;;
 20256                           
 20257                           	psect	text84
 20258  00F942                     __ptext84:
 20259                           	opt stack 0
 20260  00F942                     __get_item:
 20261                           	opt stack 18
 20262                           
 20263                           ;config_file.c: 70: uint8_t item_ctr;;config_file.c: 71: uint8_t value_ctr;;config_file.
      +                          c: 74: for(item_ctr=0;item_ctr<30;++item_ctr)
 20264                           
 20265                           ; BSR set to: 0
 20266                           ;incstack = 0
 20267  00F942  0E00               	movlw	0
 20268  00F944  0100               	movlb	0	; () banked
 20269  00F946  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20270  00F948                     l16169:
 20271                           
 20272                           ; BSR set to: 0
 20273  00F948  0E1D               	movlw	29
 20274  00F94A  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20275  00F94C  D001               	goto	l2935
 20276  00F94E  D020               	goto	u14980
 20277  00F950                     l2935:
 20278                           
 20279                           ; BSR set to: 0
 20280                           ;config_file.c: 75: {;config_file.c: 77: if(buffer[item_ctr] == '=')
 20281                           
 20282                           ; BSR set to: 0
 20283  00F950  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20284  00F952  0D01               	mullw	1
 20285  00F954  50F3               	movf	prodl,w,c
 20286  00F956  2564               	addwf	__get_item@buffer& (0+255),w,b
 20287  00F958  6ED9               	movwf	fsr2l,c
 20288  00F95A  50F4               	movf	prodh,w,c
 20289  00F95C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20290  00F95E  6EDA               	movwf	fsr2h,c
 20291  00F960  0E3D               	movlw	61
 20292  00F962  18DE               	xorwf	postinc2,w,c
 20293  00F964  B4D8               	btfsc	status,2,c
 20294  00F966  D014               	goto	u14980
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;config_file.c: 80: };config_file.c: 81: item_string[item_ctr] = buffer[item_ctr];
 20298                           
 20299                           ; BSR set to: 0
 20300                           
 20301                           ; BSR set to: 0
 20302                           ;config_file.c: 78: {;config_file.c: 79: break;
 20303  00F968  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20304  00F96A  0D01               	mullw	1
 20305  00F96C  50F3               	movf	prodl,w,c
 20306  00F96E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20307  00F970  6ED9               	movwf	fsr2l,c
 20308  00F972  50F4               	movf	prodh,w,c
 20309  00F974  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20310  00F976  6EDA               	movwf	fsr2h,c
 20311  00F978  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20312  00F97A  0D01               	mullw	1
 20313  00F97C  50F3               	movf	prodl,w,c
 20314  00F97E  2560               	addwf	__get_item@item_string& (0+255),w,b
 20315  00F980  6EE1               	movwf	fsr1l,c
 20316  00F982  50F4               	movf	prodh,w,c
 20317  00F984  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20318  00F986  6EE2               	movwf	fsr1h,c
 20319  00F988  CFDF FFE7          	movff	indf2,indf1
 20320                           
 20321                           ; BSR set to: 0
 20322  00F98C  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20323  00F98E  D7DC               	goto	l16169
 20324  00F990                     u14980:
 20325                           
 20326                           ; BSR set to: 0
 20327                           ;config_file.c: 82: };config_file.c: 83: item_string[item_ctr++] = 0;
 20328                           
 20329                           ; BSR set to: 0
 20330  00F990  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20331  00F992  0D01               	mullw	1
 20332  00F994  50F3               	movf	prodl,w,c
 20333  00F996  2560               	addwf	__get_item@item_string& (0+255),w,b
 20334  00F998  6ED9               	movwf	fsr2l,c
 20335  00F99A  50F4               	movf	prodh,w,c
 20336  00F99C  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20337  00F99E  6EDA               	movwf	fsr2h,c
 20338  00F9A0  0E00               	movlw	0
 20339  00F9A2  6EDF               	movwf	indf2,c
 20340                           
 20341                           ; BSR set to: 0
 20342  00F9A4  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20343                           
 20344                           ; BSR set to: 0
 20345                           ;config_file.c: 86: for(value_ctr=0;value_ctr<11;++value_ctr)
 20346  00F9A6  0E00               	movlw	0
 20347  00F9A8  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20348  00F9AA                     l16189:
 20349                           
 20350                           ; BSR set to: 0
 20351  00F9AA  0E0A               	movlw	10
 20352  00F9AC  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20353  00F9AE  D001               	goto	l2938
 20354  00F9B0  D03B               	goto	u15020
 20355  00F9B2                     l2938:
 20356                           
 20357                           ; BSR set to: 0
 20358                           ;config_file.c: 87: {;config_file.c: 89: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20359                           
 20360                           ; BSR set to: 0
 20361  00F9B2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20362  00F9B4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20363  00F9B8  6B67               	clrf	(??__get_item+1)& (0+255),b
 20364  00F9BA  2766               	addwf	??__get_item& (0+255),f,b
 20365  00F9BC  0E00               	movlw	0
 20366  00F9BE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20367  00F9C0  5166               	movf	??__get_item& (0+255),w,b
 20368  00F9C2  2564               	addwf	__get_item@buffer& (0+255),w,b
 20369  00F9C4  6ED9               	movwf	fsr2l,c
 20370  00F9C6  5167               	movf	(??__get_item+1)& (0+255),w,b
 20371  00F9C8  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20372  00F9CA  6EDA               	movwf	fsr2h,c
 20373  00F9CC  0E0D               	movlw	13
 20374  00F9CE  18DE               	xorwf	postinc2,w,c
 20375  00F9D0  B4D8               	btfsc	status,2,c
 20376  00F9D2  D02A               	goto	u15020
 20377                           
 20378                           ; BSR set to: 0
 20379  00F9D4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20380  00F9D6  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20381  00F9DA  6B67               	clrf	(??__get_item+1)& (0+255),b
 20382  00F9DC  2766               	addwf	??__get_item& (0+255),f,b
 20383  00F9DE  0E00               	movlw	0
 20384  00F9E0  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20385  00F9E2  5166               	movf	??__get_item& (0+255),w,b
 20386  00F9E4  2564               	addwf	__get_item@buffer& (0+255),w,b
 20387  00F9E6  6ED9               	movwf	fsr2l,c
 20388  00F9E8  5167               	movf	(??__get_item+1)& (0+255),w,b
 20389  00F9EA  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20390  00F9EC  6EDA               	movwf	fsr2h,c
 20391  00F9EE  0E0A               	movlw	10
 20392  00F9F0  18DE               	xorwf	postinc2,w,c
 20393  00F9F2  B4D8               	btfsc	status,2,c
 20394  00F9F4  D019               	goto	u15020
 20395                           
 20396                           ; BSR set to: 0
 20397                           ;config_file.c: 92: };config_file.c: 93: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20398                           
 20399                           ; BSR set to: 0
 20400                           
 20401                           ; BSR set to: 0
 20402                           ;config_file.c: 90: {;config_file.c: 91: break;
 20403  00F9F6  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20404  00F9F8  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20405  00F9FC  6B67               	clrf	(??__get_item+1)& (0+255),b
 20406  00F9FE  2766               	addwf	??__get_item& (0+255),f,b
 20407  00FA00  0E00               	movlw	0
 20408  00FA02  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20409  00FA04  5166               	movf	??__get_item& (0+255),w,b
 20410  00FA06  2564               	addwf	__get_item@buffer& (0+255),w,b
 20411  00FA08  6ED9               	movwf	fsr2l,c
 20412  00FA0A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20413  00FA0C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20414  00FA0E  6EDA               	movwf	fsr2h,c
 20415  00FA10  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20416  00FA12  0D01               	mullw	1
 20417  00FA14  50F3               	movf	prodl,w,c
 20418  00FA16  2562               	addwf	__get_item@value_string& (0+255),w,b
 20419  00FA18  6EE1               	movwf	fsr1l,c
 20420  00FA1A  50F4               	movf	prodh,w,c
 20421  00FA1C  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20422  00FA1E  6EE2               	movwf	fsr1h,c
 20423  00FA20  CFDF FFE7          	movff	indf2,indf1
 20424                           
 20425                           ; BSR set to: 0
 20426  00FA24  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20427  00FA26  D7C1               	goto	l16189
 20428  00FA28                     u15020:
 20429                           
 20430                           ; BSR set to: 0
 20431                           ;config_file.c: 94: };config_file.c: 95: value_string[value_ctr++] = 0;
 20432                           
 20433                           ; BSR set to: 0
 20434  00FA28  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20435  00FA2A  0D01               	mullw	1
 20436  00FA2C  50F3               	movf	prodl,w,c
 20437  00FA2E  2562               	addwf	__get_item@value_string& (0+255),w,b
 20438  00FA30  6ED9               	movwf	fsr2l,c
 20439  00FA32  50F4               	movf	prodh,w,c
 20440  00FA34  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20441  00FA36  6EDA               	movwf	fsr2h,c
 20442  00FA38  0E00               	movlw	0
 20443  00FA3A  6EDF               	movwf	indf2,c
 20444  00FA3C                     
 20445                           ; BSR set to: 0
 20446                           ;config_file.c: 99: {;config_file.c: 100: ++value_ctr;
 20447                           
 20448                           ; BSR set to: 0
 20449                           
 20450                           ;config_file.c: 98: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_c
      +                          tr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20451                           
 20452                           ; BSR set to: 0
 20453  00FA3C  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20454                           
 20455                           ; BSR set to: 0
 20456                           
 20457                           ; BSR set to: 0
 20458  00FA3E  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20459  00FA40  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20460  00FA44  6B67               	clrf	(??__get_item+1)& (0+255),b
 20461  00FA46  2766               	addwf	??__get_item& (0+255),f,b
 20462  00FA48  0E00               	movlw	0
 20463  00FA4A  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20464  00FA4C  5166               	movf	??__get_item& (0+255),w,b
 20465  00FA4E  2564               	addwf	__get_item@buffer& (0+255),w,b
 20466  00FA50  6ED9               	movwf	fsr2l,c
 20467  00FA52  5167               	movf	(??__get_item+1)& (0+255),w,b
 20468  00FA54  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20469  00FA56  6EDA               	movwf	fsr2h,c
 20470  00FA58  0E0D               	movlw	13
 20471  00FA5A  18DE               	xorwf	postinc2,w,c
 20472  00FA5C  B4D8               	btfsc	status,2,c
 20473  00FA5E  D7EE               	goto	l16205
 20474                           
 20475                           ; BSR set to: 0
 20476  00FA60  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20477  00FA62  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20478  00FA66  6B67               	clrf	(??__get_item+1)& (0+255),b
 20479  00FA68  2766               	addwf	??__get_item& (0+255),f,b
 20480  00FA6A  0E00               	movlw	0
 20481  00FA6C  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20482  00FA6E  5166               	movf	??__get_item& (0+255),w,b
 20483  00FA70  2564               	addwf	__get_item@buffer& (0+255),w,b
 20484  00FA72  6ED9               	movwf	fsr2l,c
 20485  00FA74  5167               	movf	(??__get_item+1)& (0+255),w,b
 20486  00FA76  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20487  00FA78  6EDA               	movwf	fsr2h,c
 20488  00FA7A  0E0A               	movlw	10
 20489  00FA7C  18DE               	xorwf	postinc2,w,c
 20490  00FA7E  B4D8               	btfsc	status,2,c
 20491  00FA80  D7DD               	goto	l16205
 20492                           
 20493                           ; BSR set to: 0
 20494  00FA82  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20495  00FA84  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20496  00FA88  6B67               	clrf	(??__get_item+1)& (0+255),b
 20497  00FA8A  2766               	addwf	??__get_item& (0+255),f,b
 20498  00FA8C  0E00               	movlw	0
 20499  00FA8E  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20500  00FA90  5166               	movf	??__get_item& (0+255),w,b
 20501  00FA92  2564               	addwf	__get_item@buffer& (0+255),w,b
 20502  00FA94  6ED9               	movwf	fsr2l,c
 20503  00FA96  5167               	movf	(??__get_item+1)& (0+255),w,b
 20504  00FA98  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20505  00FA9A  6EDA               	movwf	fsr2h,c
 20506  00FA9C  0E09               	movlw	9
 20507  00FA9E  18DE               	xorwf	postinc2,w,c
 20508  00FAA0  B4D8               	btfsc	status,2,c
 20509  00FAA2  D7CC               	goto	l16205
 20510                           
 20511                           ; BSR set to: 0
 20512  00FAA4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20513  00FAA6  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20514  00FAAA  6B67               	clrf	(??__get_item+1)& (0+255),b
 20515  00FAAC  2766               	addwf	??__get_item& (0+255),f,b
 20516  00FAAE  0E00               	movlw	0
 20517  00FAB0  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20518  00FAB2  5166               	movf	??__get_item& (0+255),w,b
 20519  00FAB4  2564               	addwf	__get_item@buffer& (0+255),w,b
 20520  00FAB6  6ED9               	movwf	fsr2l,c
 20521  00FAB8  5167               	movf	(??__get_item+1)& (0+255),w,b
 20522  00FABA  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20523  00FABC  6EDA               	movwf	fsr2h,c
 20524  00FABE  0E20               	movlw	32
 20525  00FAC0  18DE               	xorwf	postinc2,w,c
 20526  00FAC2  B4D8               	btfsc	status,2,c
 20527  00FAC4  D7BB               	goto	l16205
 20528                           
 20529                           ; BSR set to: 0
 20530                           ;config_file.c: 101: };config_file.c: 104: return (item_ctr+value_ctr);
 20531                           
 20532                           ; BSR set to: 0
 20533  00FAC6  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20534  00FAC8  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20535  00FACA  0012               	return	
 20536  00FACC                     __end_of__get_item:
 20537                           	opt stack 0
 20538                           tblptru	equ	0xFF8
 20539                           tblptrh	equ	0xFF7
 20540                           tblptrl	equ	0xFF6
 20541                           tablat	equ	0xFF5
 20542                           prodh	equ	0xFF4
 20543                           prodl	equ	0xFF3
 20544                           postinc0	equ	0xFEE
 20545                           wreg	equ	0xFE8
 20546                           indf1	equ	0xFE7
 20547                           postinc1	equ	0xFE6
 20548                           postdec1	equ	0xFE5
 20549                           plusw1	equ	0xFE3
 20550                           fsr1h	equ	0xFE2
 20551                           fsr1l	equ	0xFE1
 20552                           indf2	equ	0xFDF
 20553                           postinc2	equ	0xFDE
 20554                           postdec2	equ	0xFDD
 20555                           plusw2	equ	0xFDB
 20556                           fsr2h	equ	0xFDA
 20557                           fsr2l	equ	0xFD9
 20558                           status	equ	0xFD8
 20559                           
 20560 ;; *************** function _adc_init *****************
 20561 ;; Defined at:
 20562 ;;		line 19 in file "adc.c"
 20563 ;; Parameters:    Size  Location     Type
 20564 ;;		None
 20565 ;; Auto vars:     Size  Location     Type
 20566 ;;		None
 20567 ;; Return value:  Size  Location     Type
 20568 ;;                  1    wreg      void 
 20569 ;; Registers used:
 20570 ;;		wreg, status,2
 20571 ;; Tracked objects:
 20572 ;;		On entry : 0/0
 20573 ;;		On exit  : 0/0
 20574 ;;		Unchanged: 0/0
 20575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20576 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20577 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20578 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20579 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20580 ;;Total ram usage:        0 bytes
 20581 ;; Hardware stack levels used:    1
 20582 ;; Hardware stack levels required when called:   10
 20583 ;; This function calls:
 20584 ;;		Nothing
 20585 ;; This function is called by:
 20586 ;;		_system_init
 20587 ;; This function uses a non-reentrant model
 20588 ;;
 20589                           
 20590                           	psect	text85
 20591  0148A6                     __ptext85:
 20592                           	opt stack 0
 20593  0148A6                     _adc_init:
 20594                           	opt stack 19
 20595                           
 20596                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20597                           
 20598                           ; BSR set to: 0
 20599                           ;incstack = 0
 20600  0148A6  0E00               	movlw	0
 20601  0148A8  0101               	movlb	1	; () banked
 20602  0148AA  6F99               	movwf	(_os+40)& (0+255),b	;volatile
 20603  0148AC  0E00               	movlw	0
 20604  0148AE  6F98               	movwf	(_os+39)& (0+255),b	;volatile
 20605                           
 20606                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20607  0148B0  0E00               	movlw	0
 20608  0148B2  6F9B               	movwf	(_os+42)& (0+255),b	;volatile
 20609  0148B4  0E00               	movlw	0
 20610  0148B6  6F9A               	movwf	(_os+41)& (0+255),b	;volatile
 20611                           
 20612                           ;adc.c: 24: os.fan_on = 0;
 20613  0148B8  0E00               	movlw	0
 20614  0148BA  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 20615                           
 20616                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20617  0148BC  0E00               	movlw	0
 20618  0148BE  0102               	movlb	2	; () banked
 20619  0148C0  6F1F               	movwf	_params& (0+255),b
 20620                           
 20621                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20622  0148C2  0E00               	movlw	0
 20623  0148C4  6F21               	movwf	(_params+2)& (0+255),b
 20624  0148C6  0E00               	movlw	0
 20625  0148C8  6F20               	movwf	(_params+1)& (0+255),b
 20626                           
 20627                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20628  0148CA  0E00               	movlw	0
 20629  0148CC  6F24               	movwf	(_params+5)& (0+255),b
 20630                           
 20631                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20632  0148CE  0E00               	movlw	0
 20633  0148D0  6F23               	movwf	(_params+4)& (0+255),b
 20634  0148D2  0E00               	movlw	0
 20635  0148D4  6F22               	movwf	(_params+3)& (0+255),b
 20636                           
 20637                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20638  0148D6  0E00               	movlw	0
 20639  0148D8  6F25               	movwf	(_params+6)& (0+255),b
 20640                           
 20641                           ; BSR set to: 2
 20642                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20643  0148DA  9EC2               	bcf	4034,7,c	;volatile
 20644                           
 20645                           ; BSR set to: 2
 20646                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20647  0148DC  9CC2               	bcf	4034,6,c	;volatile
 20648                           
 20649                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20650  0148DE  50C2               	movf	4034,w,c	;volatile
 20651  0148E0  0BC3               	andlw	-61
 20652  0148E2  0924               	iorlw	36
 20653  0148E4  6EC2               	movwf	4034,c	;volatile
 20654                           
 20655                           ; BSR set to: 2
 20656                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20657  0148E6  8EC1               	bsf	4033,7,c	;volatile
 20658                           
 20659                           ; BSR set to: 2
 20660                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20661  0148E8  9CC1               	bcf	4033,6,c	;volatile
 20662                           
 20663                           ; BSR set to: 2
 20664                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20665  0148EA  86C1               	bsf	4033,3,c	;volatile
 20666  0148EC  88C1               	bsf	4033,4,c	;volatile
 20667  0148EE  8AC1               	bsf	4033,5,c	;volatile
 20668                           
 20669                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20670  0148F0  50C1               	movf	4033,w,c	;volatile
 20671  0148F2  0BF8               	andlw	-8
 20672  0148F4  0906               	iorlw	6
 20673  0148F6  6EC1               	movwf	4033,c	;volatile
 20674                           
 20675                           ; BSR set to: 2
 20676                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20677  0148F8  80C2               	bsf	4034,0,c	;volatile
 20678                           
 20679                           ; BSR set to: 2
 20680                           ;adc.c: 41: ADCON0bits.GO = 1;
 20681  0148FA  82C2               	bsf	4034,1,c	;volatile
 20682                           
 20683                           ; BSR set to: 2
 20684  0148FC  0012               	return		;funcret
 20685  0148FE                     __end_of_adc_init:
 20686                           	opt stack 0
 20687                           tblptru	equ	0xFF8
 20688                           tblptrh	equ	0xFF7
 20689                           tblptrl	equ	0xFF6
 20690                           tablat	equ	0xFF5
 20691                           prodh	equ	0xFF4
 20692                           prodl	equ	0xFF3
 20693                           postinc0	equ	0xFEE
 20694                           wreg	equ	0xFE8
 20695                           indf1	equ	0xFE7
 20696                           postinc1	equ	0xFE6
 20697                           postdec1	equ	0xFE5
 20698                           plusw1	equ	0xFE3
 20699                           fsr1h	equ	0xFE2
 20700                           fsr1l	equ	0xFE1
 20701                           indf2	equ	0xFDF
 20702                           postinc2	equ	0xFDE
 20703                           postdec2	equ	0xFDD
 20704                           plusw2	equ	0xFDB
 20705                           fsr2h	equ	0xFDA
 20706                           fsr2l	equ	0xFD9
 20707                           status	equ	0xFD8
 20708                           
 20709 ;; *************** function __system_timer0_init *****************
 20710 ;; Defined at:
 20711 ;;		line 125 in file "os.c"
 20712 ;; Parameters:    Size  Location     Type
 20713 ;;		None
 20714 ;; Auto vars:     Size  Location     Type
 20715 ;;		None
 20716 ;; Return value:  Size  Location     Type
 20717 ;;                  1    wreg      void 
 20718 ;; Registers used:
 20719 ;;		wreg, status,2
 20720 ;; Tracked objects:
 20721 ;;		On entry : 0/0
 20722 ;;		On exit  : 0/0
 20723 ;;		Unchanged: 0/0
 20724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20729 ;;Total ram usage:        0 bytes
 20730 ;; Hardware stack levels used:    1
 20731 ;; Hardware stack levels required when called:   10
 20732 ;; This function calls:
 20733 ;;		Nothing
 20734 ;; This function is called by:
 20735 ;;		_system_init
 20736 ;; This function uses a non-reentrant model
 20737 ;;
 20738                           
 20739                           	psect	text86
 20740  015590                     __ptext86:
 20741                           	opt stack 0
 20742  015590                     __system_timer0_init:
 20743                           	opt stack 19
 20744                           
 20745                           ;os.c: 130: T0CONbits.T0CS = 0;
 20746                           
 20747                           ; BSR set to: 2
 20748                           ;incstack = 0
 20749  015590  9AD5               	bcf	4053,5,c	;volatile
 20750                           
 20751                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20752  015592  9CD5               	bcf	4053,6,c	;volatile
 20753                           
 20754                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20755  015594  94D5               	bcf	4053,2,c	;volatile
 20756                           
 20757                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20758  015596  82D5               	bsf	4053,1,c	;volatile
 20759                           
 20760                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20761  015598  90D5               	bcf	4053,0,c	;volatile
 20762                           
 20763                           ;os.c: 138: T0CONbits.PSA = 0;
 20764  01559A  96D5               	bcf	4053,3,c	;volatile
 20765                           
 20766                           ;os.c: 140: TMR0H = 0xFA;
 20767  01559C  0EFA               	movlw	250
 20768  01559E  6ED7               	movwf	4055,c	;volatile
 20769                           
 20770                           ;os.c: 141: TMR0L = 0x24;
 20771  0155A0  0E24               	movlw	36
 20772  0155A2  6ED6               	movwf	4054,c	;volatile
 20773                           
 20774                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20775  0155A4  8ED5               	bsf	4053,7,c	;volatile
 20776                           
 20777                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20778  0155A6  94F2               	bcf	intcon,2,c	;volatile
 20779                           
 20780                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20781  0155A8  8AF2               	bsf	intcon,5,c	;volatile
 20782                           
 20783                           ;os.c: 148: INTCONbits.GIE = 1;
 20784  0155AA  8EF2               	bsf	intcon,7,c	;volatile
 20785                           
 20786                           ;os.c: 151: os.subTimeSlot = 0;
 20787  0155AC  0E00               	movlw	0
 20788  0155AE  0101               	movlb	1	; () banked
 20789  0155B0  6F71               	movwf	_os& (0+255),b	;volatile
 20790                           
 20791                           ;os.c: 152: os.timeSlot = 0;
 20792  0155B2  0E00               	movlw	0
 20793  0155B4  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 20794                           
 20795                           ;os.c: 153: os.done = 0;
 20796  0155B6  0E00               	movlw	0
 20797  0155B8  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 20798                           
 20799                           ; BSR set to: 1
 20800  0155BA  0012               	return		;funcret
 20801  0155BC                     __end_of__system_timer0_init:
 20802                           	opt stack 0
 20803                           tblptru	equ	0xFF8
 20804                           tblptrh	equ	0xFF7
 20805                           tblptrl	equ	0xFF6
 20806                           tablat	equ	0xFF5
 20807                           prodh	equ	0xFF4
 20808                           prodl	equ	0xFF3
 20809                           intcon	equ	0xFF2
 20810                           postinc0	equ	0xFEE
 20811                           wreg	equ	0xFE8
 20812                           indf1	equ	0xFE7
 20813                           postinc1	equ	0xFE6
 20814                           postdec1	equ	0xFE5
 20815                           plusw1	equ	0xFE3
 20816                           fsr1h	equ	0xFE2
 20817                           fsr1l	equ	0xFE1
 20818                           indf2	equ	0xFDF
 20819                           postinc2	equ	0xFDE
 20820                           postdec2	equ	0xFDD
 20821                           plusw2	equ	0xFDB
 20822                           fsr2h	equ	0xFDA
 20823                           fsr2l	equ	0xFD9
 20824                           status	equ	0xFD8
 20825                           
 20826 ;; *************** function __system_pin_setup *****************
 20827 ;; Defined at:
 20828 ;;		line 59 in file "os.c"
 20829 ;; Parameters:    Size  Location     Type
 20830 ;;		None
 20831 ;; Auto vars:     Size  Location     Type
 20832 ;;		None
 20833 ;; Return value:  Size  Location     Type
 20834 ;;                  1    wreg      void 
 20835 ;; Registers used:
 20836 ;;		wreg, status,2
 20837 ;; Tracked objects:
 20838 ;;		On entry : 0/0
 20839 ;;		On exit  : 0/0
 20840 ;;		Unchanged: 0/0
 20841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20846 ;;Total ram usage:        0 bytes
 20847 ;; Hardware stack levels used:    1
 20848 ;; Hardware stack levels required when called:   10
 20849 ;; This function calls:
 20850 ;;		Nothing
 20851 ;; This function is called by:
 20852 ;;		_system_init
 20853 ;; This function uses a non-reentrant model
 20854 ;;
 20855                           
 20856                           	psect	text87
 20857  014198                     __ptext87:
 20858                           	opt stack 0
 20859  014198                     __system_pin_setup:
 20860                           	opt stack 19
 20861                           
 20862                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20863                           
 20864                           ; BSR set to: 1
 20865                           ;incstack = 0
 20866  014198  8A95               	bsf	3989,5,c	;volatile
 20867                           
 20868                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20869  01419A  9895               	bcf	3989,4,c	;volatile
 20870                           
 20871                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20872  01419C  9C95               	bcf	3989,6,c	;volatile
 20873                           
 20874                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20875  01419E  9E95               	bcf	3989,7,c	;volatile
 20876                           
 20877                           ;os.c: 66: LATDbits.LD7 = 1;
 20878  0141A0  8E8C               	bsf	3980,7,c	;volatile
 20879                           
 20880                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20881  0141A2  8693               	bsf	3987,3,c	;volatile
 20882                           
 20883                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20884  0141A4  010F               	movlb	15	; () banked
 20885  0141A6  9349               	bcf	73,1,b	;volatile
 20886                           
 20887                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20888  0141A8  9E94               	bcf	3988,7,c	;volatile
 20889                           
 20890                           ;os.c: 72: LATCbits.LC7 = 0;
 20891  0141AA  9E8B               	bcf	3979,7,c	;volatile
 20892                           
 20893                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20894  0141AC  9C94               	bcf	3988,6,c	;volatile
 20895                           
 20896                           ;os.c: 75: LATCbits.LC6 = 0;
 20897  0141AE  9C8B               	bcf	3979,6,c	;volatile
 20898                           
 20899                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20900  0141B0  9692               	bcf	3986,3,c	;volatile
 20901                           
 20902                           ;os.c: 78: LATAbits.LA3 = 0;
 20903  0141B2  9689               	bcf	3977,3,c	;volatile
 20904                           
 20905                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20906  0141B4  9294               	bcf	3988,1,c	;volatile
 20907                           
 20908                           ;os.c: 81: LATCbits.LC1 = 0;
 20909  0141B6  928B               	bcf	3979,1,c	;volatile
 20910                           
 20911                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20912  0141B8  8A93               	bsf	3987,5,c	;volatile
 20913                           
 20914                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20915  0141BA  8893               	bsf	3987,4,c	;volatile
 20916                           
 20917                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20918  0141BC  9093               	bcf	3987,0,c	;volatile
 20919                           
 20920                           ;os.c: 90: LATBbits.LB0 = 1;
 20921  0141BE  808A               	bsf	3978,0,c	;volatile
 20922                           
 20923                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20924  0141C0  9493               	bcf	3987,2,c	;volatile
 20925                           
 20926                           ;os.c: 93: LATBbits.LB2 = 0;
 20927  0141C2  948A               	bcf	3978,2,c	;volatile
 20928                           
 20929                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20930  0141C4  9293               	bcf	3987,1,c	;volatile
 20931                           
 20932                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20933  0141C6  8549               	bsf	73,2,b	;volatile
 20934                           
 20935                           ;os.c: 97: LATBbits.LB1 = 0;
 20936  0141C8  928A               	bcf	3978,1,c	;volatile
 20937                           
 20938                           ; BSR set to: 15
 20939                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20940  0141CA  0E55               	movlw	85
 20941  0141CC  6EA7               	movwf	4007,c	;volsfr
 20942  0141CE  0EAA               	movlw	170
 20943  0141D0  6EA7               	movwf	4007,c	;volsfr
 20944                           
 20945                           ; BSR set to: 15
 20946  0141D2  010E               	movlb	14	; () banked
 20947  0141D4  91BF               	bcf	191,0,b	;volatile
 20948                           
 20949                           ;os.c: 99: RPOR4 = 14;
 20950  0141D6  0E0E               	movlw	14
 20951  0141D8  6FC4               	movwf	196,b	;volatile
 20952                           
 20953                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20954  0141DA  0E55               	movlw	85
 20955  0141DC  6EA7               	movwf	4007,c	;volsfr
 20956  0141DE  0EAA               	movlw	170
 20957  0141E0  6EA7               	movwf	4007,c	;volsfr
 20958                           
 20959                           ; BSR set to: 14
 20960  0141E2  81BF               	bsf	191,0,b	;volatile
 20961                           
 20962                           ; BSR set to: 14
 20963                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20964  0141E4  8495               	bsf	3989,2,c	;volatile
 20965                           
 20966                           ; BSR set to: 14
 20967                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20968  0141E6  8496               	bsf	3990,2,c	;volatile
 20969                           
 20970                           ; BSR set to: 14
 20971                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20972  0141E8  010F               	movlb	15	; () banked
 20973  0141EA  8F48               	bsf	72,7,b	;volatile
 20974                           
 20975                           ; BSR set to: 15
 20976                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20977  0141EC  8096               	bsf	3990,0,c	;volatile
 20978                           
 20979                           ; BSR set to: 15
 20980                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20981  0141EE  8B48               	bsf	72,5,b	;volatile
 20982                           
 20983                           ; BSR set to: 15
 20984                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20985  0141F0  8296               	bsf	3990,1,c	;volatile
 20986                           
 20987                           ; BSR set to: 15
 20988                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20989  0141F2  8D48               	bsf	72,6,b	;volatile
 20990                           
 20991                           ; BSR set to: 15
 20992                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20993  0141F4  8092               	bsf	3986,0,c	;volatile
 20994                           
 20995                           ; BSR set to: 15
 20996                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20997  0141F6  8148               	bsf	72,0,b	;volatile
 20998                           
 20999                           ; BSR set to: 15
 21000                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 21001  0141F8  8492               	bsf	3986,2,c	;volatile
 21002                           
 21003                           ; BSR set to: 15
 21004                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 21005  0141FA  8548               	bsf	72,2,b	;volatile
 21006                           
 21007                           ; BSR set to: 15
 21008                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 21009  0141FC  8292               	bsf	3986,1,c	;volatile
 21010                           
 21011                           ; BSR set to: 15
 21012                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 21013  0141FE  8348               	bsf	72,1,b	;volatile
 21014                           
 21015                           ; BSR set to: 15
 21016  014200  0012               	return		;funcret
 21017  014202                     __end_of__system_pin_setup:
 21018                           	opt stack 0
 21019                           tblptru	equ	0xFF8
 21020                           tblptrh	equ	0xFF7
 21021                           tblptrl	equ	0xFF6
 21022                           tablat	equ	0xFF5
 21023                           prodh	equ	0xFF4
 21024                           prodl	equ	0xFF3
 21025                           intcon	equ	0xFF2
 21026                           postinc0	equ	0xFEE
 21027                           wreg	equ	0xFE8
 21028                           indf1	equ	0xFE7
 21029                           postinc1	equ	0xFE6
 21030                           postdec1	equ	0xFE5
 21031                           plusw1	equ	0xFE3
 21032                           fsr1h	equ	0xFE2
 21033                           fsr1l	equ	0xFE1
 21034                           indf2	equ	0xFDF
 21035                           postinc2	equ	0xFDE
 21036                           postdec2	equ	0xFDD
 21037                           plusw2	equ	0xFDB
 21038                           fsr2h	equ	0xFDA
 21039                           fsr2l	equ	0xFD9
 21040                           status	equ	0xFD8
 21041                           
 21042 ;; *************** function __backlight_init *****************
 21043 ;; Defined at:
 21044 ;;		line 158 in file "os.c"
 21045 ;; Parameters:    Size  Location     Type
 21046 ;;		None
 21047 ;; Auto vars:     Size  Location     Type
 21048 ;;		None
 21049 ;; Return value:  Size  Location     Type
 21050 ;;                  1    wreg      void 
 21051 ;; Registers used:
 21052 ;;		None
 21053 ;; Tracked objects:
 21054 ;;		On entry : 0/0
 21055 ;;		On exit  : 0/0
 21056 ;;		Unchanged: 0/0
 21057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21062 ;;Total ram usage:        0 bytes
 21063 ;; Hardware stack levels used:    1
 21064 ;; Hardware stack levels required when called:   10
 21065 ;; This function calls:
 21066 ;;		Nothing
 21067 ;; This function is called by:
 21068 ;;		_system_init
 21069 ;; This function uses a non-reentrant model
 21070 ;;
 21071                           
 21072                           	psect	text88
 21073  015A78                     __ptext88:
 21074                           	opt stack 0
 21075  015A78                     __backlight_init:
 21076                           	opt stack 19
 21077                           
 21078                           ;os.c: 160: LATCbits.LC1 = 1;
 21079                           
 21080                           ; BSR set to: 15
 21081                           ;incstack = 0
 21082  015A78  828B               	bsf	3979,1,c	;volatile
 21083  015A7A  0012               	return		;funcret
 21084  015A7C                     __end_of__backlight_init:
 21085                           	opt stack 0
 21086                           tblptru	equ	0xFF8
 21087                           tblptrh	equ	0xFF7
 21088                           tblptrl	equ	0xFF6
 21089                           tablat	equ	0xFF5
 21090                           prodh	equ	0xFF4
 21091                           prodl	equ	0xFF3
 21092                           intcon	equ	0xFF2
 21093                           postinc0	equ	0xFEE
 21094                           wreg	equ	0xFE8
 21095                           indf1	equ	0xFE7
 21096                           postinc1	equ	0xFE6
 21097                           postdec1	equ	0xFE5
 21098                           plusw1	equ	0xFE3
 21099                           fsr1h	equ	0xFE2
 21100                           fsr1l	equ	0xFE1
 21101                           indf2	equ	0xFDF
 21102                           postinc2	equ	0xFDE
 21103                           postdec2	equ	0xFDD
 21104                           plusw2	equ	0xFDB
 21105                           fsr2h	equ	0xFDA
 21106                           fsr2l	equ	0xFD9
 21107                           status	equ	0xFD8
 21108                           
 21109 ;; *************** function _motor_process_cue *****************
 21110 ;; Defined at:
 21111 ;;		line 160 in file "motor.c"
 21112 ;; Parameters:    Size  Location     Type
 21113 ;;		None
 21114 ;; Auto vars:     Size  Location     Type
 21115 ;;		None
 21116 ;; Return value:  Size  Location     Type
 21117 ;;                  1    wreg      void 
 21118 ;; Registers used:
 21119 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21120 ;; Tracked objects:
 21121 ;;		On entry : 0/0
 21122 ;;		On exit  : 0/0
 21123 ;;		Unchanged: 0/0
 21124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21125 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21126 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21127 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21128 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21129 ;;Total ram usage:        0 bytes
 21130 ;; Hardware stack levels used:    1
 21131 ;; Hardware stack levels required when called:   13
 21132 ;; This function calls:
 21133 ;;		__motor_run
 21134 ;;		_motor_items_in_cue
 21135 ;; This function is called by:
 21136 ;;		_main
 21137 ;; This function uses a non-reentrant model
 21138 ;;
 21139                           
 21140                           	psect	text89
 21141  01369C                     __ptext89:
 21142                           	opt stack 0
 21143  01369C                     _motor_process_cue:
 21144                           	opt stack 17
 21145                           
 21146                           ;motor.c: 162: if(motor_items_in_cue()==0)
 21147                           
 21148                           ;incstack = 0
 21149  01369C  EC01  F0AD         	call	_motor_items_in_cue	;wreg free
 21150  0136A0  0900               	iorlw	0
 21151  0136A2  B4D8               	btfsc	status,2,c
 21152  0136A4  0012               	return	
 21153                           
 21154                           ;motor.c: 167: else if(os.busy)
 21155                           
 21156                           ;motor.c: 166: }
 21157                           
 21158                           ;motor.c: 163: {;motor.c: 165: return;
 21159  0136A6  0101               	movlb	1	; () banked
 21160  0136A8  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21161  0136AA  A4D8               	btfss	status,2,c
 21162  0136AC  0012               	return	
 21163                           
 21164                           ; BSR set to: 1
 21165                           ;motor.c: 172: else;motor.c: 173: {;motor.c: 175: _motor_run(;motor.c: 176: motor_comman
      +                          d_cue[motor_cue_read_index].direction,;motor.c: 177: motor_command_cue[motor_cue_read_in
      +                          dex].distance,;motor.c: 178: motor_command_cue[motor_cue_read_index].speed,;motor.c: 179
      +                          : motor_command_cue[motor_cue_read_index].type;motor.c: 180: );
 21166                           
 21167                           ; BSR set to: 1
 21168                           
 21169                           ; BSR set to: 1
 21170                           ;motor.c: 171: }
 21171                           
 21172                           ; BSR set to: 1
 21173                           ;motor.c: 168: {;motor.c: 170: return;
 21174  0136AE  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21175  0136B0  0D08               	mullw	8
 21176  0136B2  0E01               	movlw	1
 21177  0136B4  26F3               	addwf	prodl,f,c
 21178  0136B6  0E00               	movlw	0
 21179  0136B8  22F4               	addwfc	prodh,f,c
 21180  0136BA  0E00               	movlw	low _motor_command_cue
 21181  0136BC  24F3               	addwf	prodl,w,c
 21182  0136BE  6ED9               	movwf	fsr2l,c
 21183  0136C0  0E03               	movlw	high _motor_command_cue
 21184  0136C2  20F4               	addwfc	prodh,w,c
 21185  0136C4  6EDA               	movwf	fsr2h,c
 21186  0136C6  CFDE F08F          	movff	postinc2,__motor_run@distance_in_steps
 21187  0136CA  CFDE F090          	movff	postinc2,__motor_run@distance_in_steps+1
 21188  0136CE  CFDE F091          	movff	postinc2,__motor_run@distance_in_steps+2
 21189  0136D2  CFDE F092          	movff	postinc2,__motor_run@distance_in_steps+3
 21190  0136D6  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21191  0136D8  0D08               	mullw	8
 21192  0136DA  0E05               	movlw	5
 21193  0136DC  26F3               	addwf	prodl,f,c
 21194  0136DE  0E00               	movlw	0
 21195  0136E0  22F4               	addwfc	prodh,f,c
 21196  0136E2  0E00               	movlw	low _motor_command_cue
 21197  0136E4  24F3               	addwf	prodl,w,c
 21198  0136E6  6ED9               	movwf	fsr2l,c
 21199  0136E8  0E03               	movlw	high _motor_command_cue
 21200  0136EA  20F4               	addwfc	prodh,w,c
 21201  0136EC  6EDA               	movwf	fsr2h,c
 21202  0136EE  CFDE F093          	movff	postinc2,__motor_run@speed
 21203  0136F2  CFDD F094          	movff	postdec2,__motor_run@speed+1
 21204  0136F6  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21205  0136F8  0D08               	mullw	8
 21206  0136FA  0E07               	movlw	7
 21207  0136FC  26F3               	addwf	prodl,f,c
 21208  0136FE  0E00               	movlw	0
 21209  013700  22F4               	addwfc	prodh,f,c
 21210  013702  0E00               	movlw	low _motor_command_cue
 21211  013704  24F3               	addwf	prodl,w,c
 21212  013706  6ED9               	movwf	fsr2l,c
 21213  013708  0E03               	movlw	high _motor_command_cue
 21214  01370A  20F4               	addwfc	prodh,w,c
 21215  01370C  6EDA               	movwf	fsr2h,c
 21216  01370E  50DF               	movf	indf2,w,c
 21217  013710  0100               	movlb	0	; () banked
 21218  013712  6F95               	movwf	__motor_run@type& (0+255),b
 21219  013714  0101               	movlb	1	; () banked
 21220  013716  5158               	movf	_motor_cue_read_index& (0+255),w,b
 21221  013718  0D08               	mullw	8
 21222  01371A  0E00               	movlw	low _motor_command_cue
 21223  01371C  24F3               	addwf	prodl,w,c
 21224  01371E  6ED9               	movwf	fsr2l,c
 21225  013720  0E03               	movlw	high _motor_command_cue
 21226  013722  20F4               	addwfc	prodh,w,c
 21227  013724  6EDA               	movwf	fsr2h,c
 21228  013726  50DF               	movf	indf2,w,c
 21229  013728  ECAD  F062         	call	__motor_run
 21230                           
 21231                           ;motor.c: 182: ++motor_cue_read_index;
 21232  01372C  0101               	movlb	1	; () banked
 21233  01372E  2B58               	incf	_motor_cue_read_index& (0+255),f,b
 21234                           
 21235                           ; BSR set to: 1
 21236  013730  0012               	return	
 21237  013732                     __end_of_motor_process_cue:
 21238                           	opt stack 0
 21239                           tblptru	equ	0xFF8
 21240                           tblptrh	equ	0xFF7
 21241                           tblptrl	equ	0xFF6
 21242                           tablat	equ	0xFF5
 21243                           prodh	equ	0xFF4
 21244                           prodl	equ	0xFF3
 21245                           intcon	equ	0xFF2
 21246                           postinc0	equ	0xFEE
 21247                           wreg	equ	0xFE8
 21248                           indf1	equ	0xFE7
 21249                           postinc1	equ	0xFE6
 21250                           postdec1	equ	0xFE5
 21251                           plusw1	equ	0xFE3
 21252                           fsr1h	equ	0xFE2
 21253                           fsr1l	equ	0xFE1
 21254                           indf2	equ	0xFDF
 21255                           postinc2	equ	0xFDE
 21256                           postdec2	equ	0xFDD
 21257                           plusw2	equ	0xFDB
 21258                           fsr2h	equ	0xFDA
 21259                           fsr2l	equ	0xFD9
 21260                           status	equ	0xFD8
 21261                           
 21262 ;; *************** function _encoder_statemachine *****************
 21263 ;; Defined at:
 21264 ;;		line 210 in file "encoder.c"
 21265 ;; Parameters:    Size  Location     Type
 21266 ;;		None
 21267 ;; Auto vars:     Size  Location     Type
 21268 ;;		None
 21269 ;; Return value:  Size  Location     Type
 21270 ;;                  1    wreg      void 
 21271 ;; Registers used:
 21272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21273 ;; Tracked objects:
 21274 ;;		On entry : 0/0
 21275 ;;		On exit  : 0/0
 21276 ;;		Unchanged: 0/0
 21277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21278 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21279 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21280 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21281 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21282 ;;Total ram usage:        4 bytes
 21283 ;; Hardware stack levels used:    1
 21284 ;; Hardware stack levels required when called:   16
 21285 ;; This function calls:
 21286 ;;		__divide_jump_size_decrement
 21287 ;;		__divide_jump_size_increment
 21288 ;;		__encoder_next_arc_step_size
 21289 ;;		__encoder_next_divide_step_size
 21290 ;;		__encoder_next_setup_stepsize
 21291 ;;		_motor_arc_move
 21292 ;;		_motor_change_speed
 21293 ;;		_motor_decrease_manual_speed
 21294 ;;		_motor_divide_jump
 21295 ;;		_motor_divide_jump_to_nearest
 21296 ;;		_motor_go_to_steps_position
 21297 ;;		_motor_increase_manual_speed
 21298 ;;		_motor_nonzero_steps_from_degrees
 21299 ;;		_motor_schedule_command
 21300 ;;		_motor_set_zero
 21301 ;;		_motor_stop
 21302 ;; This function is called by:
 21303 ;;		_main
 21304 ;; This function uses a non-reentrant model
 21305 ;;
 21306                           
 21307                           	psect	text90
 21308  00AF94                     __ptext90:
 21309                           	opt stack 0
 21310  00AF94                     _encoder_statemachine:
 21311                           	opt stack 14
 21312                           
 21313                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21314                           
 21315                           ;incstack = 0
 21316  00AF94  0101               	movlb	1	; () banked
 21317  00AF96  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21318  00AF98  A4D8               	btfss	status,2,c
 21319  00AF9A  EFD9  F05B         	goto	l2685
 21320                           
 21321                           ; BSR set to: 1
 21322  00AF9E  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21323  00AFA0  A4D8               	btfss	status,2,c
 21324  00AFA2  EFD9  F05B         	goto	l2685
 21325                           
 21326                           ; BSR set to: 1
 21327  00AFA6  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 21328  00AFA8  A4D8               	btfss	status,2,c
 21329  00AFAA  EFD9  F05B         	goto	l2685
 21330                           
 21331                           ; BSR set to: 1
 21332  00AFAE  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 21333  00AFB0  B4D8               	btfsc	status,2,c
 21334  00AFB2  0012               	return	
 21335  00AFB4  D3FE               	goto	l2685
 21336  00AFB6                     
 21337                           ; BSR set to: 1
 21338                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21339                           
 21340                           ; BSR set to: 1
 21341  00AFB6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21342  00AFB8  B4D8               	btfsc	status,2,c
 21343  00AFBA  D003               	goto	u17270
 21344                           
 21345                           ; BSR set to: 1
 21346  00AFBC  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21347  00AFBE  A4D8               	btfss	status,2,c
 21348  00AFC0  D002               	goto	l2689
 21349  00AFC2                     u17270:
 21350                           
 21351                           ; BSR set to: 1
 21352                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21353                           
 21354                           ; BSR set to: 1
 21355  00AFC2  0E11               	movlw	17
 21356  00AFC4  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21357  00AFC6                     l2689:
 21358                           
 21359                           ; BSR set to: 1
 21360                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21361                           
 21362                           ; BSR set to: 1
 21363  00AFC6  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21364  00AFCA  0100               	movlb	0	; () banked
 21365  00AFCC  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21366  00AFCE  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21367  00AFD0  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21368  00AFD2  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21369  00AFD6  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21370  00AFD8  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21371  00AFDA  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21372  00AFDC  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21373  00AFDE  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21374  00AFE0  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21375  00AFE2  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21376  00AFE4  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21377  00AFE6  D008               	goto	l2692
 21378  00AFE8  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21379  00AFEA  E103               	bnz	u17280
 21380  00AFEC  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21381  00AFEE  A0D8               	btfss	status,0,c
 21382  00AFF0  D003               	goto	l2692
 21383  00AFF2                     u17280:
 21384                           
 21385                           ; BSR set to: 0
 21386                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21387  00AFF2  0E02               	movlw	2
 21388  00AFF4  0101               	movlb	1	; () banked
 21389  00AFF6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21390  00AFF8                     l2692:
 21391                           
 21392                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21393                           
 21394                           ; BSR set to: 1
 21395  00AFF8  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21396  00AFFC  0100               	movlb	0	; () banked
 21397  00AFFE  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21398  00B000  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21399  00B002  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21400  00B004  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21401  00B008  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21402  00B00A  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21403  00B00C  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21404  00B00E  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21405  00B010  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21406  00B012  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21407  00B014  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21408  00B016  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21409  00B018  D3F1               	goto	l2720
 21410                           
 21411                           ; BSR set to: 0
 21412                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21413  00B01A  0E05               	movlw	5
 21414  00B01C  D3B8               	goto	L22
 21415  00B01E                     
 21416                           ; BSR set to: 1
 21417                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21418                           
 21419                           ; BSR set to: 1
 21420  00B01E  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21421  00B020  B4D8               	btfsc	status,2,c
 21422  00B022  D003               	goto	u17310
 21423                           
 21424                           ; BSR set to: 1
 21425  00B024  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21426  00B026  A4D8               	btfss	status,2,c
 21427  00B028  D002               	goto	l2696
 21428  00B02A                     u17310:
 21429                           
 21430                           ; BSR set to: 1
 21431                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21432                           
 21433                           ; BSR set to: 1
 21434  00B02A  0E31               	movlw	49
 21435  00B02C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21436  00B02E                     l2696:
 21437                           
 21438                           ; BSR set to: 1
 21439                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21440                           
 21441                           ; BSR set to: 1
 21442  00B02E  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21443  00B032  0100               	movlb	0	; () banked
 21444  00B034  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21445  00B036  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21446  00B038  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21447  00B03A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21448  00B03E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21449  00B040  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21450  00B042  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21451  00B044  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21452  00B046  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21453  00B048  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21454  00B04A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21455  00B04C  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21456  00B04E  D008               	goto	l2699
 21457  00B050  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21458  00B052  E103               	bnz	u17320
 21459  00B054  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21460  00B056  A0D8               	btfss	status,0,c
 21461  00B058  D003               	goto	l2699
 21462  00B05A                     u17320:
 21463                           
 21464                           ; BSR set to: 0
 21465                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21466  00B05A  0E03               	movlw	3
 21467  00B05C  0101               	movlb	1	; () banked
 21468  00B05E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21469  00B060                     l2699:
 21470                           
 21471                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21472                           
 21473                           ; BSR set to: 1
 21474  00B060  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21475  00B064  0100               	movlb	0	; () banked
 21476  00B066  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21477  00B068  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21478  00B06A  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21479  00B06C  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21480  00B070  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21481  00B072  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21482  00B074  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21483  00B076  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21484  00B078  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21485  00B07A  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21486  00B07C  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21487  00B07E  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21488  00B080  D3BD               	goto	l2720
 21489                           
 21490                           ; BSR set to: 0
 21491                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21492  00B082  0E01               	movlw	1
 21493  00B084  D384               	goto	L22
 21494  00B086                     
 21495                           ; BSR set to: 1
 21496                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21497                           
 21498                           ; BSR set to: 1
 21499  00B086  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21500  00B088  B4D8               	btfsc	status,2,c
 21501  00B08A  D003               	goto	u17350
 21502                           
 21503                           ; BSR set to: 1
 21504  00B08C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21505  00B08E  A4D8               	btfss	status,2,c
 21506  00B090  D002               	goto	l2702
 21507  00B092                     u17350:
 21508                           
 21509                           ; BSR set to: 1
 21510                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21511                           
 21512                           ; BSR set to: 1
 21513  00B092  0E51               	movlw	81
 21514  00B094  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21515  00B096                     l2702:
 21516                           
 21517                           ; BSR set to: 1
 21518                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21519                           
 21520                           ; BSR set to: 1
 21521  00B096  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21522  00B09A  0100               	movlb	0	; () banked
 21523  00B09C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21524  00B09E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21525  00B0A0  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21526  00B0A2  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21527  00B0A6  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21528  00B0A8  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21529  00B0AA  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21530  00B0AC  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21531  00B0AE  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21532  00B0B0  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21533  00B0B2  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21534  00B0B4  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21535  00B0B6  D008               	goto	l2705
 21536  00B0B8  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21537  00B0BA  E103               	bnz	u17360
 21538  00B0BC  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21539  00B0BE  A0D8               	btfss	status,0,c
 21540  00B0C0  D003               	goto	l2705
 21541  00B0C2                     u17360:
 21542                           
 21543                           ; BSR set to: 0
 21544                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21545  00B0C2  0E04               	movlw	4
 21546  00B0C4  0101               	movlb	1	; () banked
 21547  00B0C6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21548  00B0C8                     l2705:
 21549                           
 21550                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21551                           
 21552                           ; BSR set to: 1
 21553  00B0C8  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21554  00B0CC  0100               	movlb	0	; () banked
 21555  00B0CE  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21556  00B0D0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21557  00B0D2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21558  00B0D4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21559  00B0D8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21560  00B0DA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21561  00B0DC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21562  00B0DE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21563  00B0E0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21564  00B0E2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21565  00B0E4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21566  00B0E6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21567  00B0E8  D389               	goto	l2720
 21568                           
 21569                           ; BSR set to: 0
 21570                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21571  00B0EA  0E02               	movlw	2
 21572  00B0EC  D350               	goto	L22
 21573  00B0EE                     
 21574                           ; BSR set to: 1
 21575                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21576                           
 21577                           ; BSR set to: 1
 21578  00B0EE  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21579  00B0F0  B4D8               	btfsc	status,2,c
 21580  00B0F2  D003               	goto	u17390
 21581                           
 21582                           ; BSR set to: 1
 21583  00B0F4  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21584  00B0F6  A4D8               	btfss	status,2,c
 21585  00B0F8  D002               	goto	l2708
 21586  00B0FA                     u17390:
 21587                           
 21588                           ; BSR set to: 1
 21589                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21590                           
 21591                           ; BSR set to: 1
 21592  00B0FA  0E82               	movlw	130
 21593  00B0FC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21594  00B0FE                     l2708:
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21598                           
 21599                           ; BSR set to: 1
 21600  00B0FE  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21601  00B102  0100               	movlb	0	; () banked
 21602  00B104  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21603  00B106  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21604  00B108  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21605  00B10A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21606  00B10E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21607  00B110  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21608  00B112  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21609  00B114  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21610  00B116  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21611  00B118  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21612  00B11A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21613  00B11C  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21614  00B11E  D008               	goto	l2711
 21615  00B120  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21616  00B122  E103               	bnz	u17400
 21617  00B124  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21618  00B126  A0D8               	btfss	status,0,c
 21619  00B128  D003               	goto	l2711
 21620  00B12A                     u17400:
 21621                           
 21622                           ; BSR set to: 0
 21623                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21624  00B12A  0E05               	movlw	5
 21625  00B12C  0101               	movlb	1	; () banked
 21626  00B12E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21627  00B130                     l2711:
 21628                           
 21629                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21630                           
 21631                           ; BSR set to: 1
 21632  00B130  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21633  00B134  0100               	movlb	0	; () banked
 21634  00B136  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21635  00B138  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21636  00B13A  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21637  00B13C  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21638  00B140  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21639  00B142  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21640  00B144  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21641  00B146  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21642  00B148  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21643  00B14A  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21644  00B14C  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21645  00B14E  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21646  00B150  D355               	goto	l2720
 21647                           
 21648                           ; BSR set to: 0
 21649                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21650  00B152  0E03               	movlw	3
 21651  00B154  D31C               	goto	L22
 21652  00B156                     
 21653                           ; BSR set to: 1
 21654                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 21655                           
 21656                           ; BSR set to: 1
 21657  00B156  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21658  00B158  B4D8               	btfsc	status,2,c
 21659  00B15A  D003               	goto	u17430
 21660                           
 21661                           ; BSR set to: 1
 21662  00B15C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21663  00B15E  A4D8               	btfss	status,2,c
 21664  00B160  D002               	goto	l2714
 21665  00B162                     u17430:
 21666                           
 21667                           ; BSR set to: 1
 21668                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 21669                           
 21670                           ; BSR set to: 1
 21671  00B162  0E71               	movlw	113
 21672  00B164  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21673  00B166                     l2714:
 21674                           
 21675                           ; BSR set to: 1
 21676                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 21677                           
 21678                           ; BSR set to: 1
 21679  00B166  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21680  00B16A  0100               	movlb	0	; () banked
 21681  00B16C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21682  00B16E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21683  00B170  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21684  00B172  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21685  00B176  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21686  00B178  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21687  00B17A  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21688  00B17C  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21689  00B17E  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21690  00B180  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21691  00B182  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21692  00B184  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21693  00B186  D008               	goto	l2717
 21694  00B188  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21695  00B18A  E103               	bnz	u17440
 21696  00B18C  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21697  00B18E  A0D8               	btfss	status,0,c
 21698  00B190  D003               	goto	l2717
 21699  00B192                     u17440:
 21700                           
 21701                           ; BSR set to: 0
 21702                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21703  00B192  0E01               	movlw	1
 21704  00B194  0101               	movlb	1	; () banked
 21705  00B196  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21706  00B198                     l2717:
 21707                           
 21708                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 21709                           
 21710                           ; BSR set to: 1
 21711  00B198  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21712  00B19C  0100               	movlb	0	; () banked
 21713  00B19E  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21714  00B1A0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21715  00B1A2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21716  00B1A4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21717  00B1A8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21718  00B1AA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21719  00B1AC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21720  00B1AE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 21721  00B1B0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21722  00B1B2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21723  00B1B4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21724  00B1B6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21725  00B1B8  D321               	goto	l2720
 21726                           
 21727                           ; BSR set to: 0
 21728                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21729  00B1BA  0E04               	movlw	4
 21730  00B1BC  D2E8               	goto	L22
 21731  00B1BE                     
 21732                           ; BSR set to: 1
 21733  00B1BE  0101               	movlb	1	; () banked
 21734  00B1C0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21735                           
 21736                           ; Switch size 1, requested type "space"
 21737                           ; Number of cases is 6, Range of values is 1 to 240
 21738                           ; switch strategies available:
 21739                           ; Name         Instructions Cycles
 21740                           ; simple_byte           19    10 (average)
 21741                           ;	Chosen strategy is simple_byte
 21742  00B1C2  0A01               	xorlw	1	; case 1
 21743  00B1C4  B4D8               	btfsc	status,2,c
 21744  00B1C6  D6F7               	goto	l2688
 21745  00B1C8  0A03               	xorlw	3	; case 2
 21746  00B1CA  B4D8               	btfsc	status,2,c
 21747  00B1CC  D728               	goto	l2695
 21748  00B1CE  0A01               	xorlw	1	; case 3
 21749  00B1D0  B4D8               	btfsc	status,2,c
 21750  00B1D2  D759               	goto	l2701
 21751  00B1D4  0A07               	xorlw	7	; case 4
 21752  00B1D6  B4D8               	btfsc	status,2,c
 21753  00B1D8  D78A               	goto	l2707
 21754  00B1DA  0A01               	xorlw	1	; case 5
 21755  00B1DC  B4D8               	btfsc	status,2,c
 21756  00B1DE  D7BB               	goto	l2713
 21757  00B1E0  0AF5               	xorlw	245	; case 240
 21758                           
 21759                           ; BSR set to: 1
 21760                           ;encoder.c: 268: break;
 21761  00B1E2  D30C               	goto	l2720
 21762  00B1E4                     
 21763                           ; BSR set to: 1
 21764                           ;encoder.c: 274: if(os.button1==1)
 21765                           
 21766                           ; BSR set to: 1
 21767  00B1E4  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21768  00B1E6  A4D8               	btfss	status,2,c
 21769  00B1E8  D00E               	goto	l2724
 21770                           
 21771                           ; BSR set to: 1
 21772                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 21773  00B1EA  0E00               	movlw	0
 21774  00B1EC  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 21775  00B1EE  0E00               	movlw	0
 21776  00B1F0  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 21777  00B1F2  0E00               	movlw	0
 21778  00B1F4  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 21779  00B1F6  0E00               	movlw	0
 21780  00B1F8  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 21781                           
 21782                           ;encoder.c: 277: os.divide_position = 0;
 21783  00B1FA  0E00               	movlw	0
 21784  00B1FC  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 21785  00B1FE  0E00               	movlw	0
 21786  00B200  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 21787                           
 21788                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 21789  00B202  0E21               	movlw	33
 21790  00B204  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21791  00B206                     l2724:
 21792                           
 21793                           ; BSR set to: 1
 21794                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 21795                           
 21796                           ; BSR set to: 1
 21797  00B206  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21798  00B208  0A80               	xorlw	128
 21799  00B20A  0F7F               	addlw	-129
 21800  00B20C  A0D8               	btfss	status,0,c
 21801  00B20E  D002               	goto	l2725
 21802                           
 21803                           ; BSR set to: 1
 21804                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21805  00B210  0E12               	movlw	18
 21806  00B212  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21807  00B214                     l2725:
 21808                           
 21809                           ; BSR set to: 1
 21810                           ;encoder.c: 282: if(os.encoder1Count<0)
 21811                           
 21812                           ; BSR set to: 1
 21813  00B214  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21814  00B216  D01B               	goto	l2727
 21815                           
 21816                           ; BSR set to: 1
 21817                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 21818  00B218  0E12               	movlw	18
 21819  00B21A  D00F               	goto	L10
 21820  00B21C                     
 21821                           ; BSR set to: 1
 21822                           ;encoder.c: 286: if(os.button1==1)
 21823                           
 21824                           ; BSR set to: 1
 21825  00B21C  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21826  00B21E  A4D8               	btfss	status,2,c
 21827  00B220  D002               	goto	l2729
 21828                           
 21829                           ; BSR set to: 1
 21830                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21831  00B222  0E01               	movlw	1
 21832  00B224  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21833  00B226                     l2729:
 21834                           
 21835                           ; BSR set to: 1
 21836                           ;encoder.c: 288: if(os.encoder1Count>0)
 21837                           
 21838                           ; BSR set to: 1
 21839  00B226  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 21840  00B228  0A80               	xorlw	128
 21841  00B22A  0F7F               	addlw	-129
 21842  00B22C  A0D8               	btfss	status,0,c
 21843  00B22E  D002               	goto	l2730
 21844                           
 21845                           ; BSR set to: 1
 21846                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21847  00B230  0E11               	movlw	17
 21848  00B232  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21849  00B234                     l2730:
 21850                           
 21851                           ; BSR set to: 1
 21852                           ;encoder.c: 290: if(os.encoder1Count<0)
 21853                           
 21854                           ; BSR set to: 1
 21855  00B234  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 21856  00B236  D00B               	goto	l2727
 21857                           
 21858                           ; BSR set to: 1
 21859                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21860  00B238  0E11               	movlw	17
 21861  00B23A                     L10:
 21862  00B23A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 21863                           
 21864                           ; BSR set to: 1
 21865                           ;encoder.c: 293: }
 21866                           
 21867                           ; BSR set to: 1
 21868                           ;encoder.c: 292: break;
 21869  00B23C  D008               	goto	l2727
 21870  00B23E                     
 21871                           ; BSR set to: 1
 21872  00B23E  0101               	movlb	1	; () banked
 21873  00B240  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 21874                           
 21875                           ; Switch size 1, requested type "space"
 21876                           ; Number of cases is 2, Range of values is 17 to 18
 21877                           ; switch strategies available:
 21878                           ; Name         Instructions Cycles
 21879                           ; simple_byte            7     4 (average)
 21880                           ;	Chosen strategy is simple_byte
 21881  00B242  0A11               	xorlw	17	; case 17
 21882  00B244  B4D8               	btfsc	status,2,c
 21883  00B246  D7CE               	goto	l2723
 21884  00B248  0A03               	xorlw	3	; case 18
 21885  00B24A  B4D8               	btfsc	status,2,c
 21886  00B24C  D7E7               	goto	l2728
 21887  00B24E                     l2727:
 21888                           
 21889                           ; BSR set to: 1
 21890                           ;encoder.c: 294: if(os.button2==1)
 21891                           
 21892                           ; BSR set to: 1
 21893  00B24E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21894  00B250  A4D8               	btfss	status,2,c
 21895  00B252  D00A               	goto	l2732
 21896                           
 21897                           ; BSR set to: 1
 21898                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 21899  00B254  C181  F060         	movff	_os+16,__encoder_next_setup_stepsize@old_stepsize	;volatile
 21900  00B258  C182  F061         	movff	_os+17,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 21901  00B25C  EC82  F09F         	call	__encoder_next_setup_stepsize	;wreg free
 21902  00B260  C060  F181         	movff	?__encoder_next_setup_stepsize,_os+16	;volatile
 21903  00B264  C061  F182         	movff	?__encoder_next_setup_stepsize+1,_os+17	;volatile
 21904  00B268                     l2732:
 21905                           
 21906                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 21907  00B268  0101               	movlb	1	; () banked
 21908  00B26A  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 21909  00B26C  0A80               	xorlw	128
 21910  00B26E  0F7F               	addlw	-129
 21911  00B270  A0D8               	btfss	status,0,c
 21912  00B272  D01B               	goto	l2734
 21913                           
 21914                           ; BSR set to: 1
 21915                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 21916  00B274  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21917  00B276  A4D8               	btfss	status,2,c
 21918  00B278  D018               	goto	l2734
 21919                           
 21920                           ; BSR set to: 1
 21921                           ;encoder.c: 302: motor_schedule_command(MOTOR_DIRECTION_CW, motor_nonzero_steps_from_deg
      +                          rees(os.setup_step_size), 0, MOTOR_MOVE_TYPE_NORMAL);
 21922  00B27A  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21923  00B27E  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21924  00B282  EC3F  F0A7         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21925  00B286  C08F  F0A1         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21926  00B28A  C090  F0A2         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21927  00B28E  C091  F0A3         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21928  00B292  C092  F0A4         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21929  00B296  0E00               	movlw	0
 21930  00B298  0100               	movlb	0	; () banked
 21931  00B29A  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21932  00B29C  0E00               	movlw	0
 21933  00B29E  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 21934  00B2A0  0E00               	movlw	0
 21935  00B2A2  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 21936  00B2A4  0E01               	movlw	1
 21937  00B2A6  EC7A  F094         	call	_motor_schedule_command
 21938  00B2AA                     l2734:
 21939                           
 21940                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 21941  00B2AA  0101               	movlb	1	; () banked
 21942  00B2AC  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 21943  00B2AE  D2A6               	goto	l2720
 21944                           
 21945                           ; BSR set to: 1
 21946                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 21947  00B2B0  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 21948  00B2B2  A4D8               	btfss	status,2,c
 21949  00B2B4  D2A3               	goto	l2720
 21950                           
 21951                           ; BSR set to: 1
 21952                           ;encoder.c: 308: motor_schedule_command(MOTOR_DIRECTION_CCW, motor_nonzero_steps_from_de
      +                          grees(os.setup_step_size), 0, MOTOR_MOVE_TYPE_NORMAL);
 21953  00B2B6  C181  F08F         	movff	_os+16,motor_nonzero_steps_from_degrees@degrees	;volatile
 21954  00B2BA  C182  F090         	movff	_os+17,motor_nonzero_steps_from_degrees@degrees+1	;volatile
 21955  00B2BE  EC3F  F0A7         	call	_motor_nonzero_steps_from_degrees	;wreg free
 21956  00B2C2  C08F  F0A1         	movff	?_motor_nonzero_steps_from_degrees,motor_schedule_command@distance_in_steps
 21957  00B2C6  C090  F0A2         	movff	?_motor_nonzero_steps_from_degrees+1,motor_schedule_command@distance_in_steps+1
 21958  00B2CA  C091  F0A3         	movff	?_motor_nonzero_steps_from_degrees+2,motor_schedule_command@distance_in_steps+2
 21959  00B2CE  C092  F0A4         	movff	?_motor_nonzero_steps_from_degrees+3,motor_schedule_command@distance_in_steps+3
 21960  00B2D2  0E00               	movlw	0
 21961  00B2D4  0100               	movlb	0	; () banked
 21962  00B2D6  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 21963  00B2D8  0E00               	movlw	0
 21964  00B2DA  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 21965  00B2DC  0E00               	movlw	0
 21966  00B2DE  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 21967  00B2E0  0EFF               	movlw	255
 21968  00B2E2  EC7A  F094         	call	_motor_schedule_command
 21969                           
 21970                           ;encoder.c: 309: };encoder.c: 310: break;
 21971  00B2E6  D28A               	goto	l2720
 21972  00B2E8                     
 21973                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 21974  00B2E8  0101               	movlb	1	; () banked
 21975  00B2EA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 21976  00B2EC  B4D8               	btfsc	status,2,c
 21977  00B2EE  D003               	goto	u17580
 21978                           
 21979                           ; BSR set to: 1
 21980  00B2F0  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 21981  00B2F2  A4D8               	btfss	status,2,c
 21982  00B2F4  D003               	goto	l2740
 21983  00B2F6                     u17580:
 21984                           
 21985                           ; BSR set to: 1
 21986                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 21987                           
 21988                           ; BSR set to: 1
 21989  00B2F6  0EFF               	movlw	255
 21990  00B2F8  EC62  F096         	call	_motor_set_zero
 21991  00B2FC                     l2740:
 21992                           
 21993                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 21994  00B2FC  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 21995  00B300  0100               	movlb	0	; () banked
 21996  00B302  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21997  00B304  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 21998  00B306  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21999  00B308  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22000  00B30C  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22001  00B30E  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22002  00B310  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22003  00B312  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 22004  00B314  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22005  00B316  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22006  00B318  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22007  00B31A  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22008  00B31C  D008               	goto	l2743
 22009  00B31E  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22010  00B320  E103               	bnz	u17590
 22011  00B322  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22012  00B324  A0D8               	btfss	status,0,c
 22013  00B326  D003               	goto	l2743
 22014  00B328                     u17590:
 22015                           
 22016                           ; BSR set to: 0
 22017                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22018  00B328  0E22               	movlw	34
 22019  00B32A  0101               	movlb	1	; () banked
 22020  00B32C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22021  00B32E                     l2743:
 22022                           
 22023                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 22024                           
 22025                           ; BSR set to: 1
 22026  00B32E  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 22027  00B332  0100               	movlb	0	; () banked
 22028  00B334  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22029  00B336  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 22030  00B338  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22031  00B33A  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22032  00B33E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22033  00B340  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22034  00B342  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22035  00B344  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 22036  00B346  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22037  00B348  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22038  00B34A  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22039  00B34C  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22040  00B34E  D256               	goto	l2720
 22041                           
 22042                           ; BSR set to: 0
 22043                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22044  00B350  0E22               	movlw	34
 22045  00B352  D21D               	goto	L22
 22046  00B354                     
 22047                           ; BSR set to: 1
 22048                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 22049                           
 22050                           ; BSR set to: 1
 22051  00B354  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22052  00B356  B4D8               	btfsc	status,2,c
 22053  00B358  D003               	goto	u17620
 22054                           
 22055                           ; BSR set to: 1
 22056  00B35A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22057  00B35C  A4D8               	btfss	status,2,c
 22058  00B35E  D003               	goto	l2747
 22059  00B360                     u17620:
 22060                           
 22061                           ; BSR set to: 1
 22062                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22063                           
 22064                           ; BSR set to: 1
 22065  00B360  0E01               	movlw	1
 22066  00B362  EC62  F096         	call	_motor_set_zero
 22067  00B366                     l2747:
 22068                           
 22069                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22070  00B366  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 22071  00B36A  0100               	movlb	0	; () banked
 22072  00B36C  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22073  00B36E  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 22074  00B370  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22075  00B372  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22076  00B376  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22077  00B378  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22078  00B37A  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22079  00B37C  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 22080  00B37E  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22081  00B380  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22082  00B382  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22083  00B384  BFD2               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22084  00B386  D008               	goto	l2750
 22085  00B388  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22086  00B38A  E103               	bnz	u17630
 22087  00B38C  05D1               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22088  00B38E  A0D8               	btfss	status,0,c
 22089  00B390  D003               	goto	l2750
 22090  00B392                     u17630:
 22091                           
 22092                           ; BSR set to: 0
 22093                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22094  00B392  0E21               	movlw	33
 22095  00B394  0101               	movlb	1	; () banked
 22096  00B396  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22097  00B398                     l2750:
 22098                           
 22099                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22100                           
 22101                           ; BSR set to: 1
 22102  00B398  C176  F0CF         	movff	_os+5,??_encoder_statemachine	;volatile
 22103  00B39C  0100               	movlb	0	; () banked
 22104  00B39E  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22105  00B3A0  BFCF               	btfsc	??_encoder_statemachine& (0+255),7,b
 22106  00B3A2  07D0               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22107  00B3A4  C174  F0D1         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22108  00B3A8  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22109  00B3AA  BFD1               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22110  00B3AC  07D2               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22111  00B3AE  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 22112  00B3B0  27D1               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22113  00B3B2  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22114  00B3B4  23D2               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22115  00B3B6  AFD2               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22116  00B3B8  D221               	goto	l2720
 22117                           
 22118                           ; BSR set to: 0
 22119                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22120  00B3BA  0E21               	movlw	33
 22121  00B3BC  D1E8               	goto	L22
 22122  00B3BE                     
 22123                           ; BSR set to: 1
 22124  00B3BE  0101               	movlb	1	; () banked
 22125  00B3C0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22126                           
 22127                           ; Switch size 1, requested type "space"
 22128                           ; Number of cases is 2, Range of values is 33 to 34
 22129                           ; switch strategies available:
 22130                           ; Name         Instructions Cycles
 22131                           ; simple_byte            7     4 (average)
 22132                           ;	Chosen strategy is simple_byte
 22133  00B3C2  0A21               	xorlw	33	; case 33
 22134  00B3C4  B4D8               	btfsc	status,2,c
 22135  00B3C6  D790               	goto	l2739
 22136  00B3C8  0A03               	xorlw	3	; case 34
 22137  00B3CA  B4D8               	btfsc	status,2,c
 22138  00B3CC  D7C3               	goto	l2746
 22139                           
 22140                           ; BSR set to: 1
 22141                           ;encoder.c: 336: break;
 22142  00B3CE  D216               	goto	l2720
 22143  00B3D0                     
 22144                           ; BSR set to: 1
 22145                           ;encoder.c: 342: if(os.button1==1)
 22146                           
 22147                           ; BSR set to: 1
 22148  00B3D0  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22149  00B3D2  A4D8               	btfss	status,2,c
 22150  00B3D4  D005               	goto	l2755
 22151                           
 22152                           ; BSR set to: 1
 22153                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22154  00B3D6  ECCF  F07E         	call	_motor_divide_jump_to_nearest	;wreg free
 22155                           
 22156                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22157  00B3DA  0E41               	movlw	65
 22158  00B3DC  0101               	movlb	1	; () banked
 22159  00B3DE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22160  00B3E0                     l2755:
 22161                           
 22162                           ; BSR set to: 1
 22163                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22164                           
 22165                           ; BSR set to: 1
 22166  00B3E0  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22167  00B3E2  0A80               	xorlw	128
 22168  00B3E4  0F7F               	addlw	-129
 22169  00B3E6  A0D8               	btfss	status,0,c
 22170  00B3E8  D002               	goto	l2756
 22171                           
 22172                           ; BSR set to: 1
 22173                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22174  00B3EA  0E32               	movlw	50
 22175  00B3EC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22176  00B3EE                     l2756:
 22177                           
 22178                           ; BSR set to: 1
 22179                           ;encoder.c: 350: if(os.encoder1Count<0)
 22180                           
 22181                           ; BSR set to: 1
 22182  00B3EE  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22183  00B3F0  D01B               	goto	l2758
 22184                           
 22185                           ; BSR set to: 1
 22186                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22187  00B3F2  0E32               	movlw	50
 22188  00B3F4  D00F               	goto	L13
 22189  00B3F6                     
 22190                           ; BSR set to: 1
 22191                           ;encoder.c: 354: if(os.button1==1)
 22192                           
 22193                           ; BSR set to: 1
 22194  00B3F6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22195  00B3F8  A4D8               	btfss	status,2,c
 22196  00B3FA  D002               	goto	l2760
 22197                           
 22198                           ; BSR set to: 1
 22199                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22200  00B3FC  0E02               	movlw	2
 22201  00B3FE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22202  00B400                     l2760:
 22203                           
 22204                           ; BSR set to: 1
 22205                           ;encoder.c: 356: if(os.encoder1Count>0)
 22206                           
 22207                           ; BSR set to: 1
 22208  00B400  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22209  00B402  0A80               	xorlw	128
 22210  00B404  0F7F               	addlw	-129
 22211  00B406  A0D8               	btfss	status,0,c
 22212  00B408  D002               	goto	l2761
 22213                           
 22214                           ; BSR set to: 1
 22215                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22216  00B40A  0E31               	movlw	49
 22217  00B40C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22218  00B40E                     l2761:
 22219                           
 22220                           ; BSR set to: 1
 22221                           ;encoder.c: 358: if(os.encoder1Count<0)
 22222                           
 22223                           ; BSR set to: 1
 22224  00B40E  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22225  00B410  D00B               	goto	l2758
 22226                           
 22227                           ; BSR set to: 1
 22228                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22229  00B412  0E31               	movlw	49
 22230  00B414                     L13:
 22231  00B414  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22232                           
 22233                           ; BSR set to: 1
 22234                           ;encoder.c: 361: }
 22235                           
 22236                           ; BSR set to: 1
 22237                           ;encoder.c: 360: break;
 22238  00B416  D008               	goto	l2758
 22239  00B418                     
 22240                           ; BSR set to: 1
 22241  00B418  0101               	movlb	1	; () banked
 22242  00B41A  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22243                           
 22244                           ; Switch size 1, requested type "space"
 22245                           ; Number of cases is 2, Range of values is 49 to 50
 22246                           ; switch strategies available:
 22247                           ; Name         Instructions Cycles
 22248                           ; simple_byte            7     4 (average)
 22249                           ;	Chosen strategy is simple_byte
 22250  00B41C  0A31               	xorlw	49	; case 49
 22251  00B41E  B4D8               	btfsc	status,2,c
 22252  00B420  D7D7               	goto	l2754
 22253  00B422  0A03               	xorlw	3	; case 50
 22254  00B424  B4D8               	btfsc	status,2,c
 22255  00B426  D7E7               	goto	l2759
 22256  00B428                     l2758:
 22257                           
 22258                           ; BSR set to: 1
 22259                           ;encoder.c: 362: if(os.button2==1)
 22260                           
 22261                           ; BSR set to: 1
 22262  00B428  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22263  00B42A  A4D8               	btfss	status,2,c
 22264  00B42C  D005               	goto	l2763
 22265                           
 22266                           ; BSR set to: 1
 22267                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22268  00B42E  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22269  00B430  EC84  F0AA         	call	__encoder_next_divide_step_size
 22270  00B434  0101               	movlb	1	; () banked
 22271  00B436  6F86               	movwf	(_os+21)& (0+255),b	;volatile
 22272  00B438                     l2763:
 22273                           
 22274                           ; BSR set to: 1
 22275                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22276                           
 22277                           ; BSR set to: 1
 22278  00B438  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22279  00B43A  0A80               	xorlw	128
 22280  00B43C  0F7F               	addlw	-129
 22281  00B43E  A0D8               	btfss	status,0,c
 22282  00B440  D004               	goto	l2764
 22283                           
 22284                           ; BSR set to: 1
 22285                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22286  00B442  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22287  00B444  2784               	addwf	(_os+19)& (0+255),f,b	;volatile
 22288  00B446  0E00               	movlw	0
 22289  00B448  2385               	addwfc	(_os+20)& (0+255),f,b	;volatile
 22290  00B44A                     l2764:
 22291                           
 22292                           ; BSR set to: 1
 22293                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22294  00B44A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22295  00B44C  D1D7               	goto	l2720
 22296                           
 22297                           ; BSR set to: 1
 22298                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22299  00B44E  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22300  00B450  0100               	movlb	0	; () banked
 22301  00B452  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 22302  00B454  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22303  00B456  0101               	movlb	1	; () banked
 22304  00B458  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 22305  00B45A  0100               	movlb	0	; () banked
 22306  00B45C  5DCF               	subwf	??_encoder_statemachine& (0+255),w,b
 22307  00B45E  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22308  00B460  0A80               	xorlw	128
 22309  00B462  6FD1               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22310  00B464  0101               	movlb	1	; () banked
 22311  00B466  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 22312  00B468  0A80               	xorlw	128
 22313  00B46A  0100               	movlb	0	; () banked
 22314  00B46C  59D1               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22315  00B46E  B0D8               	btfsc	status,0,c
 22316  00B470  D006               	goto	l2766
 22317                           
 22318                           ; BSR set to: 0
 22319                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22320  00B472  0101               	movlb	1	; () banked
 22321  00B474  5186               	movf	(_os+21)& (0+255),w,b	;volatile
 22322  00B476  5F84               	subwf	(_os+19)& (0+255),f,b	;volatile
 22323  00B478  0E00               	movlw	0
 22324  00B47A  5B85               	subwfb	(_os+20)& (0+255),f,b	;volatile
 22325                           
 22326                           ;encoder.c: 375: }
 22327  00B47C  D1BF               	goto	l2720
 22328  00B47E                     l2766:
 22329                           
 22330                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22331                           
 22332                           ; BSR set to: 1
 22333  00B47E  0E00               	movlw	0
 22334  00B480  0101               	movlb	1	; () banked
 22335  00B482  6F85               	movwf	(_os+20)& (0+255),b	;volatile
 22336  00B484  0E01               	movlw	1
 22337  00B486  6F84               	movwf	(_os+19)& (0+255),b	;volatile
 22338                           
 22339                           ; BSR set to: 1
 22340                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22341                           
 22342                           ; BSR set to: 1
 22343  00B488  D1B9               	goto	l2720
 22344  00B48A                     
 22345                           ;encoder.c: 384: if(os.button1==1)
 22346                           
 22347                           ; BSR set to: 1
 22348  00B48A  0101               	movlb	1	; () banked
 22349  00B48C  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22350  00B48E  A4D8               	btfss	status,2,c
 22351  00B490  D002               	goto	l2769
 22352                           
 22353                           ; BSR set to: 1
 22354                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22355  00B492  0E02               	movlw	2
 22356  00B494  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22357  00B496                     l2769:
 22358                           
 22359                           ; BSR set to: 1
 22360                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22361                           
 22362                           ; BSR set to: 1
 22363  00B496  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22364  00B498  B4D8               	btfsc	status,2,c
 22365                           
 22366                           ; BSR set to: 1
 22367                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22368  00B49A  EC7C  F098         	call	_motor_divide_jump	;wreg free
 22369                           
 22370                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22371  00B49E  0101               	movlb	1	; () banked
 22372  00B4A0  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22373  00B4A2  0A80               	xorlw	128
 22374  00B4A4  0F7F               	addlw	-129
 22375  00B4A6  B0D8               	btfsc	status,0,c
 22376                           
 22377                           ; BSR set to: 1
 22378                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22379  00B4A8  EC9D  F0A8         	call	__divide_jump_size_increment	;wreg free
 22380                           
 22381                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22382  00B4AC  0101               	movlb	1	; () banked
 22383  00B4AE  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22384  00B4B0  D1A5               	goto	l2720
 22385                           
 22386                           ; BSR set to: 1
 22387                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22388  00B4B2  EC29  F0A0         	call	__divide_jump_size_decrement	;wreg free
 22389                           
 22390                           ;encoder.c: 399: };encoder.c: 400: break;
 22391  00B4B6  D1A2               	goto	l2720
 22392  00B4B8                     
 22393                           ;encoder.c: 406: if(os.button1==1)
 22394  00B4B8  0101               	movlb	1	; () banked
 22395  00B4BA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22396  00B4BC  A4D8               	btfss	status,2,c
 22397  00B4BE  D002               	goto	l2776
 22398                           
 22399                           ; BSR set to: 1
 22400                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22401  00B4C0  0E62               	movlw	98
 22402  00B4C2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22403  00B4C4                     l2776:
 22404                           
 22405                           ; BSR set to: 1
 22406                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22407                           
 22408                           ; BSR set to: 1
 22409  00B4C4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22410  00B4C6  0A80               	xorlw	128
 22411  00B4C8  0F7F               	addlw	-129
 22412  00B4CA  A0D8               	btfss	status,0,c
 22413  00B4CC  D002               	goto	l2777
 22414                           
 22415                           ; BSR set to: 1
 22416                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22417  00B4CE  0E52               	movlw	82
 22418  00B4D0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22419  00B4D2                     l2777:
 22420                           
 22421                           ; BSR set to: 1
 22422                           ;encoder.c: 412: if(os.encoder1Count<0)
 22423                           
 22424                           ; BSR set to: 1
 22425  00B4D2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22426  00B4D4  D01B               	goto	l2779
 22427                           
 22428                           ; BSR set to: 1
 22429                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22430  00B4D6  0E52               	movlw	82
 22431  00B4D8  D00F               	goto	L14
 22432  00B4DA                     
 22433                           ; BSR set to: 1
 22434                           ;encoder.c: 416: if(os.button1==1)
 22435                           
 22436                           ; BSR set to: 1
 22437  00B4DA  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22438  00B4DC  A4D8               	btfss	status,2,c
 22439  00B4DE  D002               	goto	l2781
 22440                           
 22441                           ; BSR set to: 1
 22442                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22443  00B4E0  0E03               	movlw	3
 22444  00B4E2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22445  00B4E4                     l2781:
 22446                           
 22447                           ; BSR set to: 1
 22448                           ;encoder.c: 418: if(os.encoder1Count>0)
 22449                           
 22450                           ; BSR set to: 1
 22451  00B4E4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22452  00B4E6  0A80               	xorlw	128
 22453  00B4E8  0F7F               	addlw	-129
 22454  00B4EA  A0D8               	btfss	status,0,c
 22455  00B4EC  D002               	goto	l2782
 22456                           
 22457                           ; BSR set to: 1
 22458                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22459  00B4EE  0E51               	movlw	81
 22460  00B4F0  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22461  00B4F2                     l2782:
 22462                           
 22463                           ; BSR set to: 1
 22464                           ;encoder.c: 420: if(os.encoder1Count<0)
 22465                           
 22466                           ; BSR set to: 1
 22467  00B4F2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22468  00B4F4  D00B               	goto	l2779
 22469                           
 22470                           ; BSR set to: 1
 22471                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22472  00B4F6  0E51               	movlw	81
 22473  00B4F8                     L14:
 22474  00B4F8  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22475                           
 22476                           ; BSR set to: 1
 22477                           ;encoder.c: 423: }
 22478                           
 22479                           ; BSR set to: 1
 22480                           ;encoder.c: 422: break;
 22481  00B4FA  D008               	goto	l2779
 22482  00B4FC                     
 22483                           ; BSR set to: 1
 22484  00B4FC  0101               	movlb	1	; () banked
 22485  00B4FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22486                           
 22487                           ; Switch size 1, requested type "space"
 22488                           ; Number of cases is 2, Range of values is 81 to 82
 22489                           ; switch strategies available:
 22490                           ; Name         Instructions Cycles
 22491                           ; simple_byte            7     4 (average)
 22492                           ;	Chosen strategy is simple_byte
 22493  00B500  0A51               	xorlw	81	; case 81
 22494  00B502  B4D8               	btfsc	status,2,c
 22495  00B504  D7D9               	goto	l2775
 22496  00B506  0A03               	xorlw	3	; case 82
 22497  00B508  B4D8               	btfsc	status,2,c
 22498  00B50A  D7E7               	goto	l2780
 22499  00B50C                     l2779:
 22500                           
 22501                           ; BSR set to: 1
 22502                           ;encoder.c: 424: if(os.button2==1)
 22503                           
 22504                           ; BSR set to: 1
 22505  00B50C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22506  00B50E  A4D8               	btfss	status,2,c
 22507  00B510  D00A               	goto	l2784
 22508                           
 22509                           ; BSR set to: 1
 22510                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22511  00B512  C18B  F060         	movff	_os+26,__encoder_next_arc_step_size@old_stepsize	;volatile
 22512  00B516  C18C  F061         	movff	_os+27,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22513  00B51A  ECBA  F09F         	call	__encoder_next_arc_step_size	;wreg free
 22514  00B51E  C060  F18B         	movff	?__encoder_next_arc_step_size,_os+26	;volatile
 22515  00B522  C061  F18C         	movff	?__encoder_next_arc_step_size+1,_os+27	;volatile
 22516  00B526                     l2784:
 22517                           
 22518                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22519  00B526  0101               	movlb	1	; () banked
 22520  00B528  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22521  00B52A  0A80               	xorlw	128
 22522  00B52C  0F7F               	addlw	-129
 22523  00B52E  A0D8               	btfss	status,0,c
 22524  00B530  D01C               	goto	l2786
 22525                           
 22526                           ; BSR set to: 1
 22527                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22528  00B532  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22529  00B534  278D               	addwf	(_os+28)& (0+255),f,b	;volatile
 22530  00B536  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22531  00B538  238E               	addwfc	(_os+29)& (0+255),f,b	;volatile
 22532  00B53A  0E00               	movlw	0
 22533  00B53C  238F               	addwfc	(_os+30)& (0+255),f,b	;volatile
 22534  00B53E  0E00               	movlw	0
 22535  00B540  2390               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22536                           
 22537                           ; BSR set to: 1
 22538                           ;encoder.c: 431: if(os.arc_size>100000)
 22539  00B542  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22540  00B544  D012               	goto	l2786
 22541  00B546  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22542  00B548  E108               	bnz	u17870
 22543  00B54A  0EA1               	movlw	161
 22544  00B54C  5D8D               	subwf	(_os+28)& (0+255),w,b	;volatile
 22545  00B54E  0E86               	movlw	134
 22546  00B550  598E               	subwfb	(_os+29)& (0+255),w,b	;volatile
 22547  00B552  0E01               	movlw	1
 22548  00B554  598F               	subwfb	(_os+30)& (0+255),w,b	;volatile
 22549  00B556  A0D8               	btfss	status,0,c
 22550  00B558  D008               	goto	l2786
 22551  00B55A                     u17870:
 22552                           
 22553                           ; BSR set to: 1
 22554                           ;encoder.c: 432: os.arc_size = 100000;
 22555  00B55A  0EA0               	movlw	160
 22556  00B55C  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22557  00B55E  0E86               	movlw	134
 22558  00B560  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22559  00B562  0E01               	movlw	1
 22560  00B564  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22561  00B566  0E00               	movlw	0
 22562  00B568  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22563  00B56A                     l2786:
 22564                           
 22565                           ; BSR set to: 1
 22566                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22567                           
 22568                           ; BSR set to: 1
 22569                           
 22570                           ; BSR set to: 1
 22571  00B56A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22572  00B56C  D147               	goto	l2720
 22573                           
 22574                           ; BSR set to: 1
 22575                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22576  00B56E  518B               	movf	(_os+26)& (0+255),w,b	;volatile
 22577  00B570  0100               	movlb	0	; () banked
 22578  00B572  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 22579  00B574  0101               	movlb	1	; () banked
 22580  00B576  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 22581  00B578  0100               	movlb	0	; () banked
 22582  00B57A  6FD0               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22583  00B57C  6BD1               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22584  00B57E  6BD2               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22585  00B580  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 22586  00B582  0101               	movlb	1	; () banked
 22587  00B584  5F8D               	subwf	(_os+28)& (0+255),f,b	;volatile
 22588  00B586  0100               	movlb	0	; () banked
 22589  00B588  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22590  00B58A  0101               	movlb	1	; () banked
 22591  00B58C  5B8E               	subwfb	(_os+29)& (0+255),f,b	;volatile
 22592  00B58E  0100               	movlb	0	; () banked
 22593  00B590  51D1               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22594  00B592  0101               	movlb	1	; () banked
 22595  00B594  5B8F               	subwfb	(_os+30)& (0+255),f,b	;volatile
 22596  00B596  0100               	movlb	0	; () banked
 22597  00B598  51D2               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22598  00B59A  0101               	movlb	1	; () banked
 22599  00B59C  5B90               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22600                           
 22601                           ;encoder.c: 437: if(os.arc_size<1)
 22602  00B59E  BF90               	btfsc	(_os+31)& (0+255),7,b	;volatile
 22603  00B5A0  D007               	goto	u17890
 22604  00B5A2  5190               	movf	(_os+31)& (0+255),w,b	;volatile
 22605  00B5A4  118F               	iorwf	(_os+30)& (0+255),w,b	;volatile
 22606  00B5A6  118E               	iorwf	(_os+29)& (0+255),w,b	;volatile
 22607  00B5A8  E102               	bnz	u17891
 22608  00B5AA  058D               	decf	(_os+28)& (0+255),w,b	;volatile
 22609  00B5AC  B0D8               	btfsc	status,0,c
 22610  00B5AE                     u17891:
 22611  00B5AE  D126               	goto	l2720
 22612  00B5B0                     u17890:
 22613                           
 22614                           ; BSR set to: 1
 22615                           ;encoder.c: 438: os.arc_size = 1;
 22616  00B5B0  0E01               	movlw	1
 22617  00B5B2  6F8D               	movwf	(_os+28)& (0+255),b	;volatile
 22618  00B5B4  0E00               	movlw	0
 22619  00B5B6  6F8E               	movwf	(_os+29)& (0+255),b	;volatile
 22620  00B5B8  0E00               	movlw	0
 22621  00B5BA  6F8F               	movwf	(_os+30)& (0+255),b	;volatile
 22622  00B5BC  0E00               	movlw	0
 22623  00B5BE  6F90               	movwf	(_os+31)& (0+255),b	;volatile
 22624                           
 22625                           ; BSR set to: 1
 22626                           ;encoder.c: 439: };encoder.c: 440: break;
 22627                           
 22628                           ; BSR set to: 1
 22629  00B5C0  D11D               	goto	l2720
 22630  00B5C2                     
 22631                           ;encoder.c: 443: if(os.encoder1Count>0)
 22632                           
 22633                           ; BSR set to: 1
 22634  00B5C2  0101               	movlb	1	; () banked
 22635  00B5C4  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22636  00B5C6  0A80               	xorlw	128
 22637  00B5C8  0F7F               	addlw	-129
 22638  00B5CA  A0D8               	btfss	status,0,c
 22639  00B5CC  D011               	goto	l2792
 22640                           
 22641                           ; BSR set to: 1
 22642                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22643  00B5CE  51B0               	movf	(_config+15)& (0+255),w,b
 22644  00B5D0  5D91               	subwf	(_os+32)& (0+255),w,b	;volatile
 22645  00B5D2  51B1               	movf	(_config+16)& (0+255),w,b
 22646  00B5D4  5992               	subwfb	(_os+33)& (0+255),w,b	;volatile
 22647  00B5D6  B0D8               	btfsc	status,0,c
 22648  00B5D8  D002               	goto	l2791
 22649                           
 22650                           ; BSR set to: 1
 22651                           ;encoder.c: 446: ++os.arc_speed;
 22652  00B5DA  4B91               	infsnz	(_os+32)& (0+255),f,b	;volatile
 22653  00B5DC  2B92               	incf	(_os+33)& (0+255),f,b	;volatile
 22654  00B5DE                     l2791:
 22655                           
 22656                           ; BSR set to: 1
 22657                           ;encoder.c: 447: if(os.busy)
 22658                           
 22659                           ; BSR set to: 1
 22660  00B5DE  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22661  00B5E0  B4D8               	btfsc	status,2,c
 22662  00B5E2  D006               	goto	l2792
 22663                           
 22664                           ; BSR set to: 1
 22665                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 22666  00B5E4  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22667  00B5E8  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22668  00B5EC  EC20  F0AD         	call	_motor_change_speed	;wreg free
 22669  00B5F0                     l2792:
 22670                           
 22671                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 22672  00B5F0  0101               	movlb	1	; () banked
 22673  00B5F2  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22674  00B5F4  D046               	goto	l2796
 22675                           
 22676                           ; BSR set to: 1
 22677                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 22678  00B5F6  5191               	movf	(_os+32)& (0+255),w,b	;volatile
 22679  00B5F8  5DAA               	subwf	(_config+9)& (0+255),w,b
 22680  00B5FA  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 22681  00B5FC  59AB               	subwfb	(_config+10)& (0+255),w,b
 22682  00B5FE  B0D8               	btfsc	status,0,c
 22683  00B600  D003               	goto	l2794
 22684                           
 22685                           ; BSR set to: 1
 22686                           ;encoder.c: 453: --os.arc_speed;
 22687  00B602  0791               	decf	(_os+32)& (0+255),f,b	;volatile
 22688  00B604  A0D8               	btfss	status,0,c
 22689  00B606  0792               	decf	(_os+33)& (0+255),f,b	;volatile
 22690  00B608                     l2794:
 22691                           
 22692                           ; BSR set to: 1
 22693                           ;encoder.c: 454: if(os.busy)
 22694                           
 22695                           ; BSR set to: 1
 22696  00B608  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22697  00B60A  B4D8               	btfsc	status,2,c
 22698  00B60C  D03A               	goto	l2796
 22699                           
 22700                           ; BSR set to: 1
 22701                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 22702  00B60E  C191  F060         	movff	_os+32,motor_change_speed@new_speed	;volatile
 22703  00B612  C192  F061         	movff	_os+33,motor_change_speed@new_speed+1	;volatile
 22704  00B616  EC20  F0AD         	call	_motor_change_speed	;wreg free
 22705                           
 22706                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 22707  00B61A  D033               	goto	l2796
 22708  00B61C                     
 22709                           ;encoder.c: 460: if(os.button2==1)
 22710  00B61C  0101               	movlb	1	; () banked
 22711  00B61E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22712  00B620  A4D8               	btfss	status,2,c
 22713  00B622  D006               	goto	l2798
 22714                           
 22715                           ; BSR set to: 1
 22716                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 22717  00B624  0EFF               	movlw	255
 22718  00B626  EC32  F08C         	call	_motor_arc_move
 22719                           
 22720                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22721  00B62A  0E62               	movlw	98
 22722  00B62C  0101               	movlb	1	; () banked
 22723  00B62E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22724  00B630                     l2798:
 22725                           
 22726                           ; BSR set to: 1
 22727                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 22728                           
 22729                           ; BSR set to: 1
 22730  00B630  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22731  00B632  0A80               	xorlw	128
 22732  00B634  0F7F               	addlw	-129
 22733  00B636  A0D8               	btfss	status,0,c
 22734  00B638  D0E1               	goto	l2720
 22735                           
 22736                           ; BSR set to: 1
 22737                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22738  00B63A  0E62               	movlw	98
 22739  00B63C  D0A9               	goto	L21
 22740  00B63E                     
 22741                           ; BSR set to: 1
 22742                           ;encoder.c: 469: if(os.button2==1)
 22743                           
 22744                           ; BSR set to: 1
 22745  00B63E  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22746  00B640  A4D8               	btfss	status,2,c
 22747  00B642  D007               	goto	l2802
 22748                           
 22749                           ; BSR set to: 1
 22750                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 22751  00B644  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 22752  00B646  A4D8               	btfss	status,2,c
 22753                           
 22754                           ; BSR set to: 1
 22755                           ;encoder.c: 472: motor_stop();
 22756  00B648  ECD2  F0A7         	call	_motor_stop	;wreg free
 22757                           
 22758                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22759  00B64C  0E03               	movlw	3
 22760  00B64E  0101               	movlb	1	; () banked
 22761  00B650  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22762  00B652                     l2802:
 22763                           
 22764                           ; BSR set to: 1
 22765                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 22766                           
 22767                           ; BSR set to: 1
 22768  00B652  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22769  00B654  0A80               	xorlw	128
 22770  00B656  0F7F               	addlw	-129
 22771  00B658  A0D8               	btfss	status,0,c
 22772  00B65A  D002               	goto	l2804
 22773                           
 22774                           ; BSR set to: 1
 22775                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 22776  00B65C  0E63               	movlw	99
 22777  00B65E  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22778  00B660                     l2804:
 22779                           
 22780                           ; BSR set to: 1
 22781                           ;encoder.c: 477: if(os.encoder2Count<0)
 22782                           
 22783                           ; BSR set to: 1
 22784  00B660  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22785  00B662  D0CC               	goto	l2720
 22786                           
 22787                           ; BSR set to: 1
 22788                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 22789  00B664  0E61               	movlw	97
 22790  00B666  D094               	goto	L21
 22791  00B668                     
 22792                           ; BSR set to: 1
 22793                           ;encoder.c: 481: if(os.button2==1)
 22794                           
 22795                           ; BSR set to: 1
 22796  00B668  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22797  00B66A  A4D8               	btfss	status,2,c
 22798  00B66C  D006               	goto	l2807
 22799                           
 22800                           ; BSR set to: 1
 22801                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 22802  00B66E  0E01               	movlw	1
 22803  00B670  EC32  F08C         	call	_motor_arc_move
 22804                           
 22805                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22806  00B674  0E62               	movlw	98
 22807  00B676  0101               	movlb	1	; () banked
 22808  00B678  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22809  00B67A                     l2807:
 22810                           
 22811                           ; BSR set to: 1
 22812                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 22813                           
 22814                           ; BSR set to: 1
 22815  00B67A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 22816  00B67C  D0BF               	goto	l2720
 22817                           
 22818                           ; BSR set to: 1
 22819                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22820  00B67E  0E62               	movlw	98
 22821  00B680  D087               	goto	L21
 22822  00B682                     l2796:
 22823                           
 22824                           ; BSR set to: 1
 22825  00B682  0101               	movlb	1	; () banked
 22826  00B684  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 22827                           
 22828                           ; Switch size 1, requested type "space"
 22829                           ; Number of cases is 3, Range of values is 97 to 99
 22830                           ; switch strategies available:
 22831                           ; Name         Instructions Cycles
 22832                           ; simple_byte           10     6 (average)
 22833                           ;	Chosen strategy is simple_byte
 22834  00B686  0A61               	xorlw	97	; case 97
 22835  00B688  B4D8               	btfsc	status,2,c
 22836  00B68A  D7C8               	goto	l2797
 22837  00B68C  0A03               	xorlw	3	; case 98
 22838  00B68E  B4D8               	btfsc	status,2,c
 22839  00B690  D7D6               	goto	l2801
 22840  00B692  0A01               	xorlw	1	; case 99
 22841  00B694  B4D8               	btfsc	status,2,c
 22842  00B696  D7E8               	goto	l2806
 22843                           
 22844                           ; BSR set to: 1
 22845                           ;encoder.c: 490: break;
 22846  00B698  D0B1               	goto	l2720
 22847  00B69A                     
 22848                           ;encoder.c: 493: if(os.button2==1)
 22849                           
 22850                           ; BSR set to: 1
 22851  00B69A  0101               	movlb	1	; () banked
 22852  00B69C  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22853  00B69E  A4D8               	btfss	status,2,c
 22854  00B6A0  D012               	goto	l2810
 22855                           
 22856                           ; BSR set to: 1
 22857                           ;encoder.c: 494: {;encoder.c: 496: motor_go_to_steps_position(0);
 22858  00B6A2  0E00               	movlw	0
 22859  00B6A4  0100               	movlb	0	; () banked
 22860  00B6A6  6FA9               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 22861  00B6A8  0E00               	movlw	0
 22862  00B6AA  6FAA               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 22863  00B6AC  0E00               	movlw	0
 22864  00B6AE  6FAB               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 22865  00B6B0  0E00               	movlw	0
 22866  00B6B2  6FAC               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 22867  00B6B4  EC7F  F069         	call	_motor_go_to_steps_position	;wreg free
 22868                           
 22869                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22870  00B6B8  0E05               	movlw	5
 22871  00B6BA  0101               	movlb	1	; () banked
 22872  00B6BC  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22873                           
 22874                           ; BSR set to: 1
 22875                           ;encoder.c: 499: os.divide_position = 0;
 22876  00B6BE  0E00               	movlw	0
 22877  00B6C0  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 22878  00B6C2  0E00               	movlw	0
 22879  00B6C4  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 22880  00B6C6                     l2810:
 22881                           
 22882                           ; BSR set to: 1
 22883                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 22884                           
 22885                           ; BSR set to: 1
 22886  00B6C6  0575               	decf	(_os+4)& (0+255),w,b	;volatile
 22887  00B6C8  A4D8               	btfss	status,2,c
 22888  00B6CA  D098               	goto	l2720
 22889                           
 22890                           ; BSR set to: 1
 22891                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 22892  00B6CC  0E05               	movlw	5
 22893  00B6CE  D060               	goto	L21
 22894  00B6D0                     
 22895                           ;encoder.c: 508: if(os.encoder1Count>0)
 22896                           
 22897                           ; BSR set to: 1
 22898  00B6D0  0101               	movlb	1	; () banked
 22899  00B6D2  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 22900  00B6D4  0A80               	xorlw	128
 22901  00B6D6  0F7F               	addlw	-129
 22902  00B6D8  B0D8               	btfsc	status,0,c
 22903                           
 22904                           ; BSR set to: 1
 22905                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 22906  00B6DA  EC7F  F0AC         	call	_motor_increase_manual_speed	;wreg free
 22907                           
 22908                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 22909  00B6DE  0101               	movlb	1	; () banked
 22910  00B6E0  AF74               	btfss	(_os+3)& (0+255),7,b	;volatile
 22911  00B6E2  D058               	goto	l2815
 22912                           
 22913                           ; BSR set to: 1
 22914                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 22915  00B6E4  EC16  F0AC         	call	_motor_decrease_manual_speed	;wreg free
 22916                           
 22917                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 22918  00B6E8  D055               	goto	l2815
 22919  00B6EA                     
 22920                           ;encoder.c: 519: if(os.button2==1)
 22921  00B6EA  0101               	movlb	1	; () banked
 22922  00B6EC  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22923  00B6EE  A4D8               	btfss	status,2,c
 22924  00B6F0  D015               	goto	l2817
 22925                           
 22926                           ; BSR set to: 1
 22927                           ;encoder.c: 520: {;encoder.c: 521: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.man
      +                          ual_speed, MOTOR_MOVE_TYPE_NORMAL);
 22928  00B6F2  0E00               	movlw	0
 22929  00B6F4  0100               	movlb	0	; () banked
 22930  00B6F6  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 22931  00B6F8  0E00               	movlw	0
 22932  00B6FA  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 22933  00B6FC  0E00               	movlw	0
 22934  00B6FE  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 22935  00B700  0E00               	movlw	0
 22936  00B702  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 22937  00B704  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 22938  00B708  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 22939  00B70C  0E00               	movlw	0
 22940  00B70E  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 22941  00B710  0EFF               	movlw	255
 22942  00B712  EC7A  F094         	call	_motor_schedule_command
 22943                           
 22944                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 22945  00B716  0E84               	movlw	132
 22946  00B718  0101               	movlb	1	; () banked
 22947  00B71A  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22948  00B71C                     l2817:
 22949                           
 22950                           ; BSR set to: 1
 22951                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 22952                           
 22953                           ; BSR set to: 1
 22954  00B71C  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22955  00B71E  0A80               	xorlw	128
 22956  00B720  0F7F               	addlw	-129
 22957  00B722  A0D8               	btfss	status,0,c
 22958  00B724  D06B               	goto	l2720
 22959                           
 22960                           ; BSR set to: 1
 22961                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 22962  00B726  0E82               	movlw	130
 22963  00B728  D033               	goto	L21
 22964  00B72A                     
 22965                           ; BSR set to: 1
 22966                           ;encoder.c: 528: if(os.button2==1)
 22967                           
 22968                           ; BSR set to: 1
 22969  00B72A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 22970  00B72C  A4D8               	btfss	status,2,c
 22971  00B72E  D002               	goto	l2821
 22972                           
 22973                           ; BSR set to: 1
 22974                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 22975  00B730  0E04               	movlw	4
 22976  00B732  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22977  00B734                     l2821:
 22978                           
 22979                           ; BSR set to: 1
 22980                           ;encoder.c: 530: if(os.encoder2Count>0)
 22981                           
 22982                           ; BSR set to: 1
 22983  00B734  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 22984  00B736  0A80               	xorlw	128
 22985  00B738  0F7F               	addlw	-129
 22986  00B73A  A0D8               	btfss	status,0,c
 22987  00B73C  D002               	goto	l2822
 22988                           
 22989                           ; BSR set to: 1
 22990                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 22991  00B73E  0E83               	movlw	131
 22992  00B740  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 22993  00B742                     l2822:
 22994                           
 22995                           ; BSR set to: 1
 22996                           ;encoder.c: 532: if(os.encoder2Count<0)
 22997                           
 22998                           ; BSR set to: 1
 22999  00B742  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 23000  00B744  D05B               	goto	l2720
 23001                           
 23002                           ; BSR set to: 1
 23003                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 23004  00B746  0E81               	movlw	129
 23005  00B748  D023               	goto	L21
 23006  00B74A                     
 23007                           ; BSR set to: 1
 23008                           ;encoder.c: 536: if(os.button2==1)
 23009                           
 23010                           ; BSR set to: 1
 23011  00B74A  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 23012  00B74C  A4D8               	btfss	status,2,c
 23013  00B74E  D014               	goto	l2825
 23014                           
 23015                           ; BSR set to: 1
 23016                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23017  00B750  0E84               	movlw	132
 23018  00B752  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23019                           
 23020                           ; BSR set to: 1
 23021                           ;encoder.c: 539: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed, MOTOR_MO
      +                          VE_TYPE_NORMAL);
 23022  00B754  0E00               	movlw	0
 23023  00B756  0100               	movlb	0	; () banked
 23024  00B758  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 23025  00B75A  0E00               	movlw	0
 23026  00B75C  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 23027  00B75E  0E00               	movlw	0
 23028  00B760  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 23029  00B762  0E00               	movlw	0
 23030  00B764  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 23031  00B766  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 23032  00B76A  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 23033  00B76E  0E00               	movlw	0
 23034  00B770  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 23035  00B772  0E01               	movlw	1
 23036  00B774  EC7A  F094         	call	_motor_schedule_command
 23037  00B778                     l2825:
 23038                           
 23039                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 23040  00B778  0101               	movlb	1	; () banked
 23041  00B77A  AF76               	btfss	(_os+5)& (0+255),7,b	;volatile
 23042  00B77C  D03F               	goto	l2720
 23043                           
 23044                           ; BSR set to: 1
 23045                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23046  00B77E  0E82               	movlw	130
 23047  00B780  D007               	goto	L21
 23048  00B782                     
 23049                           ; BSR set to: 1
 23050                           ;encoder.c: 545: if(os.button2==1)
 23051                           
 23052                           ; BSR set to: 1
 23053  00B782  0577               	decf	(_os+6)& (0+255),w,b	;volatile
 23054  00B784  A4D8               	btfss	status,2,c
 23055  00B786  D03A               	goto	l2720
 23056                           
 23057                           ; BSR set to: 1
 23058                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 23059  00B788  ECD2  F0A7         	call	_motor_stop	;wreg free
 23060                           
 23061                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23062  00B78C  0E82               	movlw	130
 23063  00B78E                     L22:
 23064  00B78E  0101               	movlb	1	; () banked
 23065  00B790                     L21:
 23066  00B790  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 23067                           
 23068                           ; BSR set to: 1
 23069                           ;encoder.c: 551: }
 23070                           
 23071                           ; BSR set to: 1
 23072                           ;encoder.c: 549: };encoder.c: 550: break;
 23073  00B792  D034               	goto	l2720
 23074  00B794                     l2815:
 23075                           
 23076                           ; BSR set to: 1
 23077  00B794  0101               	movlb	1	; () banked
 23078  00B796  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23079                           
 23080                           ; Switch size 1, requested type "space"
 23081                           ; Number of cases is 4, Range of values is 129 to 132
 23082                           ; switch strategies available:
 23083                           ; Name         Instructions Cycles
 23084                           ; simple_byte           13     7 (average)
 23085                           ;	Chosen strategy is simple_byte
 23086  00B798  0A81               	xorlw	129	; case 129
 23087  00B79A  B4D8               	btfsc	status,2,c
 23088  00B79C  D7A6               	goto	l2816
 23089  00B79E  0A03               	xorlw	3	; case 130
 23090  00B7A0  B4D8               	btfsc	status,2,c
 23091  00B7A2  D7C3               	goto	l2820
 23092  00B7A4  0A01               	xorlw	1	; case 131
 23093  00B7A6  B4D8               	btfsc	status,2,c
 23094  00B7A8  D7D0               	goto	l2824
 23095  00B7AA  0A07               	xorlw	7	; case 132
 23096  00B7AC  B4D8               	btfsc	status,2,c
 23097  00B7AE  D7E9               	goto	l2827
 23098                           
 23099                           ; BSR set to: 1
 23100                           ;encoder.c: 553: }
 23101                           
 23102                           ; BSR set to: 1
 23103                           ;encoder.c: 552: break;
 23104  00B7B0  D025               	goto	l2720
 23105  00B7B2                     l2685:
 23106                           
 23107                           ; BSR set to: 1
 23108                           
 23109                           ; BSR set to: 1
 23110  00B7B2  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 23111  00B7B4  0BF0               	andlw	240
 23112  00B7B6  0100               	movlb	0	; () banked
 23113  00B7B8  6FCF               	movwf	??_encoder_statemachine& (0+255),b
 23114  00B7BA  6BD0               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23115                           
 23116                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23117                           ; Switch size 1, requested type "space"
 23118                           ; Number of cases is 1, Range of values is 0 to 0
 23119                           ; switch strategies available:
 23120                           ; Name         Instructions Cycles
 23121                           ; simple_byte            4     3 (average)
 23122                           ;	Chosen strategy is simple_byte
 23123  00B7BC  51D0               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23124  00B7BE  0A00               	xorlw	0	; case 0
 23125  00B7C0  A4D8               	btfss	status,2,c
 23126  00B7C2  D01C               	goto	l2720
 23127                           
 23128                           ; BSR set to: 0
 23129                           ; Switch size 1, requested type "space"
 23130                           ; Number of cases is 9, Range of values is 0 to 128
 23131                           ; switch strategies available:
 23132                           ; Name         Instructions Cycles
 23133                           ; simple_byte           28    15 (average)
 23134                           ;	Chosen strategy is simple_byte
 23135  00B7C4  51CF               	movf	??_encoder_statemachine& (0+255),w,b
 23136  00B7C6  0A00               	xorlw	0	; case 0
 23137  00B7C8  B4D8               	btfsc	status,2,c
 23138  00B7CA  D4F9               	goto	l2687
 23139  00B7CC  0A10               	xorlw	16	; case 16
 23140  00B7CE  B4D8               	btfsc	status,2,c
 23141  00B7D0  D536               	goto	l2722
 23142  00B7D2  0A30               	xorlw	48	; case 32
 23143  00B7D4  B4D8               	btfsc	status,2,c
 23144  00B7D6  D5F3               	goto	l2738
 23145  00B7D8  0A10               	xorlw	16	; case 48
 23146  00B7DA  B4D8               	btfsc	status,2,c
 23147  00B7DC  D61D               	goto	l2753
 23148  00B7DE  0A70               	xorlw	112	; case 64
 23149  00B7E0  B4D8               	btfsc	status,2,c
 23150  00B7E2  D653               	goto	l2768
 23151  00B7E4  0A10               	xorlw	16	; case 80
 23152  00B7E6  B4D8               	btfsc	status,2,c
 23153  00B7E8  D689               	goto	l2774
 23154  00B7EA  0A30               	xorlw	48	; case 96
 23155  00B7EC  B4D8               	btfsc	status,2,c
 23156  00B7EE  D6E9               	goto	l2789
 23157  00B7F0  0A10               	xorlw	16	; case 112
 23158  00B7F2  B4D8               	btfsc	status,2,c
 23159  00B7F4  D752               	goto	l2809
 23160  00B7F6  0AF0               	xorlw	240	; case 128
 23161  00B7F8  B4D8               	btfsc	status,2,c
 23162  00B7FA  D76A               	goto	l2812
 23163  00B7FC                     l2720:
 23164                           
 23165                           ;encoder.c: 556: os.encoder1Count = 0;
 23166                           
 23167                           ; BSR set to: 0
 23168  00B7FC  0E00               	movlw	0
 23169  00B7FE  0101               	movlb	1	; () banked
 23170  00B800  6F74               	movwf	(_os+3)& (0+255),b	;volatile
 23171                           
 23172                           ;encoder.c: 557: os.encoder2Count = 0;
 23173  00B802  0E00               	movlw	0
 23174  00B804  6F76               	movwf	(_os+5)& (0+255),b	;volatile
 23175                           
 23176                           ;encoder.c: 558: os.button1 = 0;
 23177  00B806  0E00               	movlw	0
 23178  00B808  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 23179                           
 23180                           ;encoder.c: 559: os.button2 = 0;
 23181  00B80A  0E00               	movlw	0
 23182  00B80C  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 23183                           
 23184                           ; BSR set to: 1
 23185  00B80E  0012               	return		;funcret
 23186  00B810                     __end_of_encoder_statemachine:
 23187                           	opt stack 0
 23188                           tblptru	equ	0xFF8
 23189                           tblptrh	equ	0xFF7
 23190                           tblptrl	equ	0xFF6
 23191                           tablat	equ	0xFF5
 23192                           prodh	equ	0xFF4
 23193                           prodl	equ	0xFF3
 23194                           intcon	equ	0xFF2
 23195                           postinc0	equ	0xFEE
 23196                           wreg	equ	0xFE8
 23197                           indf1	equ	0xFE7
 23198                           postinc1	equ	0xFE6
 23199                           postdec1	equ	0xFE5
 23200                           plusw1	equ	0xFE3
 23201                           fsr1h	equ	0xFE2
 23202                           fsr1l	equ	0xFE1
 23203                           indf2	equ	0xFDF
 23204                           postinc2	equ	0xFDE
 23205                           postdec2	equ	0xFDD
 23206                           plusw2	equ	0xFDB
 23207                           fsr2h	equ	0xFDA
 23208                           fsr2l	equ	0xFD9
 23209                           status	equ	0xFD8
 23210                           
 23211 ;; *************** function _motor_nonzero_steps_from_degrees *****************
 23212 ;; Defined at:
 23213 ;;		line 50 in file "motor.c"
 23214 ;; Parameters:    Size  Location     Type
 23215 ;;  degrees         2   47[BANK0 ] unsigned int 
 23216 ;; Auto vars:     Size  Location     Type
 23217 ;;  steps           4   51[BANK0 ] unsigned long 
 23218 ;; Return value:  Size  Location     Type
 23219 ;;                  4   47[BANK0 ] unsigned long 
 23220 ;; Registers used:
 23221 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23222 ;; Tracked objects:
 23223 ;;		On entry : 0/0
 23224 ;;		On exit  : 0/0
 23225 ;;		Unchanged: 0/0
 23226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23227 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23228 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23230 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23231 ;;Total ram usage:        8 bytes
 23232 ;; Hardware stack levels used:    1
 23233 ;; Hardware stack levels required when called:   12
 23234 ;; This function calls:
 23235 ;;		_motor_steps_from_degrees
 23236 ;; This function is called by:
 23237 ;;		_encoder_statemachine
 23238 ;; This function uses a non-reentrant model
 23239 ;;
 23240                           
 23241                           	psect	text91
 23242  014E7E                     __ptext91:
 23243                           	opt stack 0
 23244  014E7E                     _motor_nonzero_steps_from_degrees:
 23245                           	opt stack 17
 23246                           
 23247                           ;motor.c: 52: uint32_t steps;;motor.c: 53: steps = motor_steps_from_degrees(degrees);
 23248                           
 23249                           ; BSR set to: 1
 23250                           ;incstack = 0
 23251  014E7E  C08F  F087         	movff	motor_nonzero_steps_from_degrees@degrees,motor_steps_from_degrees@degrees
 23252  014E82  C090  F088         	movff	motor_nonzero_steps_from_degrees@degrees+1,motor_steps_from_degrees@degrees+1
 23253  014E86  ECF9  F08E         	call	_motor_steps_from_degrees	;wreg free
 23254  014E8A  C087  F093         	movff	?_motor_steps_from_degrees,motor_nonzero_steps_from_degrees@steps
 23255  014E8E  C088  F094         	movff	?_motor_steps_from_degrees+1,motor_nonzero_steps_from_degrees@steps+1
 23256  014E92  C089  F095         	movff	?_motor_steps_from_degrees+2,motor_nonzero_steps_from_degrees@steps+2
 23257  014E96  C08A  F096         	movff	?_motor_steps_from_degrees+3,motor_nonzero_steps_from_degrees@steps+3
 23258                           
 23259                           ;motor.c: 54: if(steps==0)
 23260  014E9A  0100               	movlb	0	; () banked
 23261  014E9C  5193               	movf	motor_nonzero_steps_from_degrees@steps& (0+255),w,b
 23262  014E9E  1194               	iorwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),w,b
 23263  014EA0  1195               	iorwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),w,b
 23264  014EA2  1196               	iorwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),w,b
 23265  014EA4  A4D8               	btfss	status,2,c
 23266  014EA6  D008               	goto	l2415
 23267                           
 23268                           ; BSR set to: 0
 23269                           ;motor.c: 55: steps = 1;
 23270  014EA8  0E01               	movlw	1
 23271  014EAA  6F93               	movwf	motor_nonzero_steps_from_degrees@steps& (0+255),b
 23272  014EAC  0E00               	movlw	0
 23273  014EAE  6F94               	movwf	(motor_nonzero_steps_from_degrees@steps+1)& (0+255),b
 23274  014EB0  0E00               	movlw	0
 23275  014EB2  6F95               	movwf	(motor_nonzero_steps_from_degrees@steps+2)& (0+255),b
 23276  014EB4  0E00               	movlw	0
 23277  014EB6  6F96               	movwf	(motor_nonzero_steps_from_degrees@steps+3)& (0+255),b
 23278  014EB8                     l2415:
 23279                           
 23280                           ; BSR set to: 0
 23281                           ;motor.c: 56: return steps;
 23282                           
 23283                           ; BSR set to: 0
 23284  014EB8  C093  F08F         	movff	motor_nonzero_steps_from_degrees@steps,?_motor_nonzero_steps_from_degrees
 23285  014EBC  C094  F090         	movff	motor_nonzero_steps_from_degrees@steps+1,?_motor_nonzero_steps_from_degrees+1
 23286  014EC0  C095  F091         	movff	motor_nonzero_steps_from_degrees@steps+2,?_motor_nonzero_steps_from_degrees+2
 23287  014EC4  C096  F092         	movff	motor_nonzero_steps_from_degrees@steps+3,?_motor_nonzero_steps_from_degrees+3
 23288  014EC8  0012               	return	
 23289  014ECA                     __end_of_motor_nonzero_steps_from_degrees:
 23290                           	opt stack 0
 23291                           tblptru	equ	0xFF8
 23292                           tblptrh	equ	0xFF7
 23293                           tblptrl	equ	0xFF6
 23294                           tablat	equ	0xFF5
 23295                           prodh	equ	0xFF4
 23296                           prodl	equ	0xFF3
 23297                           intcon	equ	0xFF2
 23298                           postinc0	equ	0xFEE
 23299                           wreg	equ	0xFE8
 23300                           indf1	equ	0xFE7
 23301                           postinc1	equ	0xFE6
 23302                           postdec1	equ	0xFE5
 23303                           plusw1	equ	0xFE3
 23304                           fsr1h	equ	0xFE2
 23305                           fsr1l	equ	0xFE1
 23306                           indf2	equ	0xFDF
 23307                           postinc2	equ	0xFDE
 23308                           postdec2	equ	0xFDD
 23309                           plusw2	equ	0xFDB
 23310                           fsr2h	equ	0xFDA
 23311                           fsr2l	equ	0xFD9
 23312                           status	equ	0xFD8
 23313                           
 23314 ;; *************** function _motor_increase_manual_speed *****************
 23315 ;; Defined at:
 23316 ;;		line 539 in file "motor.c"
 23317 ;; Parameters:    Size  Location     Type
 23318 ;;		None
 23319 ;; Auto vars:     Size  Location     Type
 23320 ;;		None
 23321 ;; Return value:  Size  Location     Type
 23322 ;;                  1    wreg      void 
 23323 ;; Registers used:
 23324 ;;		wreg, status,2, status,0, cstack
 23325 ;; Tracked objects:
 23326 ;;		On entry : 0/0
 23327 ;;		On exit  : 0/0
 23328 ;;		Unchanged: 0/0
 23329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23333 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23334 ;;Total ram usage:        0 bytes
 23335 ;; Hardware stack levels used:    1
 23336 ;; Hardware stack levels required when called:   12
 23337 ;; This function calls:
 23338 ;;		_motor_set_manual_speed
 23339 ;; This function is called by:
 23340 ;;		_encoder_statemachine
 23341 ;; This function uses a non-reentrant model
 23342 ;;
 23343                           
 23344                           	psect	text92
 23345  0158FE                     __ptext92:
 23346                           	opt stack 0
 23347  0158FE                     _motor_increase_manual_speed:
 23348                           	opt stack 17
 23349                           
 23350                           ;motor.c: 542: {;motor.c: 543: motor_set_manual_speed(os.manual_speed+1);
 23351                           
 23352                           ; BSR set to: 0
 23353                           ;incstack = 0
 23354  0158FE  0E01               	movlw	1
 23355  015900  0101               	movlb	1	; () banked
 23356  015902  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 23357  015904  0100               	movlb	0	; () banked
 23358  015906  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23359  015908  0E00               	movlw	0
 23360  01590A  0101               	movlb	1	; () banked
 23361  01590C  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 23362  01590E  0100               	movlb	0	; () banked
 23363  015910  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23364  015912  ECCA  F0A6         	call	_motor_set_manual_speed	;wreg free
 23365  015916  0012               	return	
 23366  015918                     __end_of_motor_increase_manual_speed:
 23367                           	opt stack 0
 23368                           tblptru	equ	0xFF8
 23369                           tblptrh	equ	0xFF7
 23370                           tblptrl	equ	0xFF6
 23371                           tablat	equ	0xFF5
 23372                           prodh	equ	0xFF4
 23373                           prodl	equ	0xFF3
 23374                           intcon	equ	0xFF2
 23375                           postinc0	equ	0xFEE
 23376                           wreg	equ	0xFE8
 23377                           indf1	equ	0xFE7
 23378                           postinc1	equ	0xFE6
 23379                           postdec1	equ	0xFE5
 23380                           plusw1	equ	0xFE3
 23381                           fsr1h	equ	0xFE2
 23382                           fsr1l	equ	0xFE1
 23383                           indf2	equ	0xFDF
 23384                           postinc2	equ	0xFDE
 23385                           postdec2	equ	0xFDD
 23386                           plusw2	equ	0xFDB
 23387                           fsr2h	equ	0xFDA
 23388                           fsr2l	equ	0xFD9
 23389                           status	equ	0xFD8
 23390                           
 23391 ;; *************** function _motor_divide_jump_to_nearest *****************
 23392 ;; Defined at:
 23393 ;;		line 699 in file "motor.c"
 23394 ;; Parameters:    Size  Location     Type
 23395 ;;		None
 23396 ;; Auto vars:     Size  Location     Type
 23397 ;;  divide_posit    4  107[BANK0 ] float 
 23398 ;;  nearest_posi    4  101[BANK0 ] unsigned long 
 23399 ;;  nearest_divi    2  105[BANK0 ] int 
 23400 ;; Return value:  Size  Location     Type
 23401 ;;                  1    wreg      void 
 23402 ;; Registers used:
 23403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23404 ;; Tracked objects:
 23405 ;;		On entry : 0/0
 23406 ;;		On exit  : 0/0
 23407 ;;		Unchanged: 0/0
 23408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23410 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23412 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23413 ;;Total ram usage:       10 bytes
 23414 ;; Hardware stack levels used:    1
 23415 ;; Hardware stack levels required when called:   15
 23416 ;; This function calls:
 23417 ;;		___fladd
 23418 ;;		___fldiv
 23419 ;;		___flmul
 23420 ;;		___fltol
 23421 ;;		___xxtofl
 23422 ;;		__step_position_from_divide_position
 23423 ;;		_motor_go_to_steps_position
 23424 ;; This function is called by:
 23425 ;;		_encoder_statemachine
 23426 ;; This function uses a non-reentrant model
 23427 ;;
 23428                           
 23429                           	psect	text93
 23430  00FD9E                     __ptext93:
 23431                           	opt stack 0
 23432  00FD9E                     _motor_divide_jump_to_nearest:
 23433                           	opt stack 14
 23434                           
 23435                           ;motor.c: 701: float divide_position_float;;motor.c: 702: int16_t nearest_divide_positio
      +                          n;;motor.c: 703: uint32_t nearest_position_in_steps;;motor.c: 705: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23436                           
 23437                           ;incstack = 0
 23438  00FD9E  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 23439  00FDA2  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 23440  00FDA6  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 23441  00FDAA  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 23442  00FDAE  0E00               	movlw	0
 23443  00FDB0  EC62  F081         	call	___xxtofl
 23444  00FDB4  C060  F0CB         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23445  00FDB8  C061  F0CC         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23446  00FDBC  C062  F0CD         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23447  00FDC0  C063  F0CE         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23448                           
 23449                           ;motor.c: 706: divide_position_float *= (float) os.division;
 23450  00FDC4  C0CB  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23451  00FDC8  C0CC  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23452  00FDCC  C0CD  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23453  00FDD0  C0CE  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23454  00FDD4  EE21  F084         	lfsr	2,_os+19	;volatile
 23455  00FDD8  CFDE F060          	movff	postinc2,___xxtofl@val
 23456  00FDDC  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23457  00FDE0  0100               	movlb	0	; () banked
 23458  00FDE2  0E00               	movlw	0
 23459  00FDE4  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23460  00FDE6  0EFF               	movlw	-1
 23461  00FDE8  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23462  00FDEA  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23463  00FDEC  0E01               	movlw	1
 23464  00FDEE  EC62  F081         	call	___xxtofl
 23465  00FDF2  C060  F072         	movff	?___xxtofl,___flmul@a
 23466  00FDF6  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23467  00FDFA  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23468  00FDFE  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23469  00FE02  EC38  F066         	call	___flmul	;wreg free
 23470  00FE06  C06E  F0CB         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23471  00FE0A  C06F  F0CC         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23472  00FE0E  C070  F0CD         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23473  00FE12  C071  F0CE         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23474                           
 23475                           ;motor.c: 707: divide_position_float /= (float) config.full_circle_in_steps;
 23476  00FE16  C0CB  F06E         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23477  00FE1A  C0CC  F06F         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23478  00FE1E  C0CD  F070         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23479  00FE22  C0CE  F071         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23480  00FE26  C1A1  F060         	movff	_config,___xxtofl@val
 23481  00FE2A  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23482  00FE2E  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23483  00FE32  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23484  00FE36  0E00               	movlw	0
 23485  00FE38  EC62  F081         	call	___xxtofl
 23486  00FE3C  C060  F072         	movff	?___xxtofl,___fldiv@a
 23487  00FE40  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23488  00FE44  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23489  00FE48  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23490  00FE4C  ECFC  F06D         	call	___fldiv	;wreg free
 23491  00FE50  C06E  F0CB         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23492  00FE54  C06F  F0CC         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23493  00FE58  C070  F0CD         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23494  00FE5C  C071  F0CE         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 23495                           
 23496                           ;motor.c: 708: divide_position_float += 0.5;
 23497  00FE60  C0CB  F072         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 23498  00FE64  C0CC  F073         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 23499  00FE68  C0CD  F074         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 23500  00FE6C  C0CE  F075         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 23501  00FE70  0E00               	movlw	0
 23502  00FE72  0100               	movlb	0	; () banked
 23503  00FE74  6F76               	movwf	___fladd@a& (0+255),b
 23504  00FE76  0E00               	movlw	0
 23505  00FE78  6F77               	movwf	(___fladd@a+1)& (0+255),b
 23506  00FE7A  0E00               	movlw	0
 23507  00FE7C  6F78               	movwf	(___fladd@a+2)& (0+255),b
 23508  00FE7E  0E3F               	movlw	63
 23509  00FE80  6F79               	movwf	(___fladd@a+3)& (0+255),b
 23510  00FE82  ECE1  F067         	call	___fladd	;wreg free
 23511  00FE86  C072  F0CB         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 23512  00FE8A  C073  F0CC         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 23513  00FE8E  C074  F0CD         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 23514  00FE92  C075  F0CE         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 23515                           
 23516                           ;motor.c: 709: nearest_divide_position = (int16_t) divide_position_float;
 23517  00FE96  C0CB  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 23518  00FE9A  C0CC  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 23519  00FE9E  C0CD  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 23520  00FEA2  C0CE  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 23521  00FEA6  ECBA  F090         	call	___fltol	;wreg free
 23522  00FEAA  C060  F0C9         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 23523  00FEAE  C061  F0CA         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 23524                           
 23525                           ;motor.c: 712: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 23526  00FEB2  C0C9  F087         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 23527  00FEB6  C0CA  F088         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 23528  00FEBA  EC9C  F08D         	call	__step_position_from_divide_position	;wreg free
 23529  00FEBE  C087  F0C5         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 23530  00FEC2  C088  F0C6         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 23531  00FEC6  C089  F0C7         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 23532  00FECA  C08A  F0C8         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 23533                           
 23534                           ;motor.c: 715: os.divide_position = nearest_divide_position;
 23535  00FECE  C0C9  F187         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+22	;volatile
 23536  00FED2  C0CA  F188         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+23	;volatile
 23537                           
 23538                           ;motor.c: 716: motor_go_to_steps_position(nearest_position_in_steps);
 23539  00FED6  C0C5  F0A9         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_go_to_steps_position
      +                          @target_position
 23540  00FEDA  C0C6  F0AA         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_go_to_steps_positi
      +                          on@target_position+1
 23541  00FEDE  C0C7  F0AB         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_go_to_steps_positi
      +                          on@target_position+2
 23542  00FEE2  C0C8  F0AC         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_go_to_steps_positi
      +                          on@target_position+3
 23543  00FEE6  EC7F  F069         	call	_motor_go_to_steps_position	;wreg free
 23544  00FEEA  0012               	return		;funcret
 23545  00FEEC                     __end_of_motor_divide_jump_to_nearest:
 23546                           	opt stack 0
 23547                           tblptru	equ	0xFF8
 23548                           tblptrh	equ	0xFF7
 23549                           tblptrl	equ	0xFF6
 23550                           tablat	equ	0xFF5
 23551                           prodh	equ	0xFF4
 23552                           prodl	equ	0xFF3
 23553                           intcon	equ	0xFF2
 23554                           postinc0	equ	0xFEE
 23555                           wreg	equ	0xFE8
 23556                           indf1	equ	0xFE7
 23557                           postinc1	equ	0xFE6
 23558                           postdec1	equ	0xFE5
 23559                           plusw1	equ	0xFE3
 23560                           fsr1h	equ	0xFE2
 23561                           fsr1l	equ	0xFE1
 23562                           indf2	equ	0xFDF
 23563                           postinc2	equ	0xFDE
 23564                           postdec2	equ	0xFDD
 23565                           plusw2	equ	0xFDB
 23566                           fsr2h	equ	0xFDA
 23567                           fsr2l	equ	0xFD9
 23568                           status	equ	0xFD8
 23569                           
 23570 ;; *************** function _motor_divide_jump *****************
 23571 ;; Defined at:
 23572 ;;		line 668 in file "motor.c"
 23573 ;; Parameters:    Size  Location     Type
 23574 ;;		None
 23575 ;; Auto vars:     Size  Location     Type
 23576 ;;  target_posit    4  102[BANK0 ] unsigned long 
 23577 ;;  target_divid    2  106[BANK0 ] int 
 23578 ;; Return value:  Size  Location     Type
 23579 ;;                  1    wreg      void 
 23580 ;; Registers used:
 23581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23582 ;; Tracked objects:
 23583 ;;		On entry : 0/0
 23584 ;;		On exit  : 0/0
 23585 ;;		Unchanged: 0/0
 23586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23587 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23588 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23589 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23590 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23591 ;;Total ram usage:        7 bytes
 23592 ;; Hardware stack levels used:    1
 23593 ;; Hardware stack levels required when called:   15
 23594 ;; This function calls:
 23595 ;;		__step_position_from_divide_position
 23596 ;;		_motor_go_to_steps_position
 23597 ;; This function is called by:
 23598 ;;		_encoder_statemachine
 23599 ;; This function uses a non-reentrant model
 23600 ;;
 23601                           
 23602                           	psect	text94
 23603  0130F8                     __ptext94:
 23604                           	opt stack 0
 23605  0130F8                     _motor_divide_jump:
 23606                           	opt stack 14
 23607                           
 23608                           ;motor.c: 670: int16_t target_divide_position;;motor.c: 671: uint32_t target_position_in
      +                          _steps;;motor.c: 674: if(os.divide_jump_size>0)
 23609                           
 23610                           ;incstack = 0
 23611  0130F8  0101               	movlb	1	; () banked
 23612  0130FA  BF8A               	btfsc	(_os+25)& (0+255),7,b	;volatile
 23613  0130FC  D023               	goto	l2552
 23614  0130FE  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23615  013100  E103               	bnz	u16670
 23616  013102  0589               	decf	(_os+24)& (0+255),w,b	;volatile
 23617  013104  A0D8               	btfss	status,0,c
 23618  013106  D01E               	goto	l2552
 23619  013108                     u16670:
 23620                           
 23621                           ; BSR set to: 1
 23622                           ;motor.c: 675: {;motor.c: 676: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 23623  013108  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23624  01310A  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23625  01310C  0100               	movlb	0	; () banked
 23626  01310E  6FCA               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23627  013110  0101               	movlb	1	; () banked
 23628  013112  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23629  013114  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23630  013116  0100               	movlb	0	; () banked
 23631  013118  6FCB               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23632                           
 23633                           ;motor.c: 677: if(target_divide_position>=os.division)
 23634  01311A  0101               	movlb	1	; () banked
 23635  01311C  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 23636  01311E  0100               	movlb	0	; () banked
 23637  013120  5DCA               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 23638  013122  51CB               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 23639  013124  0A80               	xorlw	128
 23640  013126  6FC5               	movwf	??_motor_divide_jump& (0+255),b
 23641  013128  0101               	movlb	1	; () banked
 23642  01312A  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 23643  01312C  0A80               	xorlw	128
 23644  01312E  0100               	movlb	0	; () banked
 23645  013130  59C5               	subwfb	??_motor_divide_jump& (0+255),w,b
 23646  013132  A0D8               	btfss	status,0,c
 23647  013134  D019               	goto	l2555
 23648                           
 23649                           ; BSR set to: 0
 23650                           ;motor.c: 678: {;motor.c: 679: target_divide_position -= os.division;
 23651  013136  EE21  F084         	lfsr	2,_os+19	;volatile
 23652  01313A  50DE               	movf	postinc2,w,c
 23653  01313C  5FCA               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23654  01313E  50DD               	movf	postdec2,w,c
 23655  013140  5BCB               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23656                           
 23657                           ; BSR set to: 0
 23658                           ;motor.c: 680: };motor.c: 681: }
 23659  013142  D012               	goto	l2555
 23660  013144                     l2552:
 23661                           
 23662                           ;motor.c: 682: else;motor.c: 683: {;motor.c: 684: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 23663                           
 23664                           ; BSR set to: 0
 23665  013144  0101               	movlb	1	; () banked
 23666  013146  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 23667  013148  2587               	addwf	(_os+22)& (0+255),w,b	;volatile
 23668  01314A  0100               	movlb	0	; () banked
 23669  01314C  6FCA               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 23670  01314E  0101               	movlb	1	; () banked
 23671  013150  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 23672  013152  2188               	addwfc	(_os+23)& (0+255),w,b	;volatile
 23673  013154  0100               	movlb	0	; () banked
 23674  013156  6FCB               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 23675                           
 23676                           ;motor.c: 685: if(target_divide_position<0)
 23677  013158  AFCB               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 23678  01315A  D006               	goto	l2555
 23679                           
 23680                           ; BSR set to: 0
 23681                           ;motor.c: 686: {;motor.c: 687: target_divide_position += os.division;
 23682  01315C  EE21  F084         	lfsr	2,_os+19	;volatile
 23683  013160  50DE               	movf	postinc2,w,c
 23684  013162  27CA               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 23685  013164  50DD               	movf	postdec2,w,c
 23686  013166  23CB               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 23687  013168                     l2555:
 23688                           
 23689                           ; BSR set to: 0
 23690                           ;motor.c: 688: };motor.c: 689: };motor.c: 692: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 23691                           
 23692                           ; BSR set to: 0
 23693                           
 23694                           ; BSR set to: 0
 23695  013168  C0CA  F087         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 23696  01316C  C0CB  F088         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 23697  013170  EC9C  F08D         	call	__step_position_from_divide_position	;wreg free
 23698  013174  C087  F0C6         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 23699  013178  C088  F0C7         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 23700  01317C  C089  F0C8         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 23701  013180  C08A  F0C9         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 23702                           
 23703                           ;motor.c: 695: os.divide_position = target_divide_position;
 23704  013184  C0CA  F187         	movff	motor_divide_jump@target_divide_position,_os+22	;volatile
 23705  013188  C0CB  F188         	movff	motor_divide_jump@target_divide_position+1,_os+23	;volatile
 23706                           
 23707                           ;motor.c: 696: motor_go_to_steps_position(target_position_in_steps);
 23708  01318C  C0C6  F0A9         	movff	motor_divide_jump@target_position_in_steps,motor_go_to_steps_position@target_posi
      +                          tion
 23709  013190  C0C7  F0AA         	movff	motor_divide_jump@target_position_in_steps+1,motor_go_to_steps_position@target_po
      +                          sition+1
 23710  013194  C0C8  F0AB         	movff	motor_divide_jump@target_position_in_steps+2,motor_go_to_steps_position@target_po
      +                          sition+2
 23711  013198  C0C9  F0AC         	movff	motor_divide_jump@target_position_in_steps+3,motor_go_to_steps_position@target_po
      +                          sition+3
 23712  01319C  EC7F  F069         	call	_motor_go_to_steps_position	;wreg free
 23713  0131A0  0012               	return		;funcret
 23714  0131A2                     __end_of_motor_divide_jump:
 23715                           	opt stack 0
 23716                           tblptru	equ	0xFF8
 23717                           tblptrh	equ	0xFF7
 23718                           tblptrl	equ	0xFF6
 23719                           tablat	equ	0xFF5
 23720                           prodh	equ	0xFF4
 23721                           prodl	equ	0xFF3
 23722                           intcon	equ	0xFF2
 23723                           postinc0	equ	0xFEE
 23724                           wreg	equ	0xFE8
 23725                           indf1	equ	0xFE7
 23726                           postinc1	equ	0xFE6
 23727                           postdec1	equ	0xFE5
 23728                           plusw1	equ	0xFE3
 23729                           fsr1h	equ	0xFE2
 23730                           fsr1l	equ	0xFE1
 23731                           indf2	equ	0xFDF
 23732                           postinc2	equ	0xFDE
 23733                           postdec2	equ	0xFDD
 23734                           plusw2	equ	0xFDB
 23735                           fsr2h	equ	0xFDA
 23736                           fsr2l	equ	0xFD9
 23737                           status	equ	0xFD8
 23738                           
 23739 ;; *************** function __step_position_from_divide_position *****************
 23740 ;; Defined at:
 23741 ;;		line 92 in file "motor.c"
 23742 ;; Parameters:    Size  Location     Type
 23743 ;;  divide_posit    2   39[BANK0 ] int 
 23744 ;; Auto vars:     Size  Location     Type
 23745 ;;  target_posit    4   43[BANK0 ] float 
 23746 ;; Return value:  Size  Location     Type
 23747 ;;                  4   39[BANK0 ] unsigned long 
 23748 ;; Registers used:
 23749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23750 ;; Tracked objects:
 23751 ;;		On entry : 0/0
 23752 ;;		On exit  : 0/0
 23753 ;;		Unchanged: 0/0
 23754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23755 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23756 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23758 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23759 ;;Total ram usage:        8 bytes
 23760 ;; Hardware stack levels used:    1
 23761 ;; Hardware stack levels required when called:   11
 23762 ;; This function calls:
 23763 ;;		___fldiv
 23764 ;;		___flmul
 23765 ;;		___fltol
 23766 ;;		___xxtofl
 23767 ;; This function is called by:
 23768 ;;		_motor_divide_jump
 23769 ;;		_motor_divide_jump_to_nearest
 23770 ;; This function uses a non-reentrant model
 23771 ;;
 23772                           
 23773                           	psect	text95
 23774  011B38                     __ptext95:
 23775                           	opt stack 0
 23776  011B38                     __step_position_from_divide_position:
 23777                           	opt stack 17
 23778                           
 23779                           ;motor.c: 94: float target_position;;motor.c: 97: target_position = (float) config.full_
      +                          circle_in_steps;
 23780                           
 23781                           ;incstack = 0
 23782  011B38  C1A1  F060         	movff	_config,___xxtofl@val
 23783  011B3C  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 23784  011B40  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 23785  011B44  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 23786  011B48  0E00               	movlw	0
 23787  011B4A  EC62  F081         	call	___xxtofl
 23788  011B4E  C060  F08B         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 23789  011B52  C061  F08C         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 23790  011B56  C062  F08D         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 23791  011B5A  C063  F08E         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 23792                           
 23793                           ;motor.c: 98: target_position *= (float) divide_position;
 23794  011B5E  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___flmul@b
 23795  011B62  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 23796  011B66  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 23797  011B6A  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 23798  011B6E  C087  F060         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 23799  011B72  C088  F061         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 23800  011B76  0100               	movlb	0	; () banked
 23801  011B78  0E00               	movlw	0
 23802  011B7A  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23803  011B7C  0EFF               	movlw	-1
 23804  011B7E  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23805  011B80  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23806  011B82  0E01               	movlw	1
 23807  011B84  EC62  F081         	call	___xxtofl
 23808  011B88  C060  F072         	movff	?___xxtofl,___flmul@a
 23809  011B8C  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 23810  011B90  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 23811  011B94  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 23812  011B98  EC38  F066         	call	___flmul	;wreg free
 23813  011B9C  C06E  F08B         	movff	?___flmul,__step_position_from_divide_position@target_position
 23814  011BA0  C06F  F08C         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 23815  011BA4  C070  F08D         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 23816  011BA8  C071  F08E         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 23817                           
 23818                           ;motor.c: 99: target_position /= (float) os.division;
 23819  011BAC  C08B  F06E         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 23820  011BB0  C08C  F06F         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 23821  011BB4  C08D  F070         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 23822  011BB8  C08E  F071         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 23823  011BBC  EE21  F084         	lfsr	2,_os+19	;volatile
 23824  011BC0  CFDE F060          	movff	postinc2,___xxtofl@val
 23825  011BC4  CFDD F061          	movff	postdec2,___xxtofl@val+1
 23826  011BC8  0100               	movlb	0	; () banked
 23827  011BCA  0E00               	movlw	0
 23828  011BCC  BF61               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23829  011BCE  0EFF               	movlw	-1
 23830  011BD0  6F62               	movwf	(___xxtofl@val+2)& (0+255),b
 23831  011BD2  6F63               	movwf	(___xxtofl@val+3)& (0+255),b
 23832  011BD4  0E01               	movlw	1
 23833  011BD6  EC62  F081         	call	___xxtofl
 23834  011BDA  C060  F072         	movff	?___xxtofl,___fldiv@a
 23835  011BDE  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 23836  011BE2  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 23837  011BE6  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 23838  011BEA  ECFC  F06D         	call	___fldiv	;wreg free
 23839  011BEE  C06E  F08B         	movff	?___fldiv,__step_position_from_divide_position@target_position
 23840  011BF2  C06F  F08C         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 23841  011BF6  C070  F08D         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 23842  011BFA  C071  F08E         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 23843                           
 23844                           ;motor.c: 101: return (uint32_t) target_position;
 23845  011BFE  C08B  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 23846  011C02  C08C  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 23847  011C06  C08D  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 23848  011C0A  C08E  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 23849  011C0E  ECBA  F090         	call	___fltol	;wreg free
 23850  011C12  C060  F087         	movff	?___fltol,?__step_position_from_divide_position
 23851  011C16  C061  F088         	movff	?___fltol+1,?__step_position_from_divide_position+1
 23852  011C1A  C062  F089         	movff	?___fltol+2,?__step_position_from_divide_position+2
 23853  011C1E  C063  F08A         	movff	?___fltol+3,?__step_position_from_divide_position+3
 23854  011C22  0012               	return	
 23855  011C24                     __end_of__step_position_from_divide_position:
 23856                           	opt stack 0
 23857                           tblptru	equ	0xFF8
 23858                           tblptrh	equ	0xFF7
 23859                           tblptrl	equ	0xFF6
 23860                           tablat	equ	0xFF5
 23861                           prodh	equ	0xFF4
 23862                           prodl	equ	0xFF3
 23863                           intcon	equ	0xFF2
 23864                           postinc0	equ	0xFEE
 23865                           wreg	equ	0xFE8
 23866                           indf1	equ	0xFE7
 23867                           postinc1	equ	0xFE6
 23868                           postdec1	equ	0xFE5
 23869                           plusw1	equ	0xFE3
 23870                           fsr1h	equ	0xFE2
 23871                           fsr1l	equ	0xFE1
 23872                           indf2	equ	0xFDF
 23873                           postinc2	equ	0xFDE
 23874                           postdec2	equ	0xFDD
 23875                           plusw2	equ	0xFDB
 23876                           fsr2h	equ	0xFDA
 23877                           fsr2l	equ	0xFD9
 23878                           status	equ	0xFD8
 23879                           
 23880 ;; *************** function _motor_decrease_manual_speed *****************
 23881 ;; Defined at:
 23882 ;;		line 547 in file "motor.c"
 23883 ;; Parameters:    Size  Location     Type
 23884 ;;		None
 23885 ;; Auto vars:     Size  Location     Type
 23886 ;;		None
 23887 ;; Return value:  Size  Location     Type
 23888 ;;                  1    wreg      void 
 23889 ;; Registers used:
 23890 ;;		wreg, status,2, status,0, cstack
 23891 ;; Tracked objects:
 23892 ;;		On entry : 0/0
 23893 ;;		On exit  : 0/0
 23894 ;;		Unchanged: 0/0
 23895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23896 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23899 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23900 ;;Total ram usage:        0 bytes
 23901 ;; Hardware stack levels used:    1
 23902 ;; Hardware stack levels required when called:   12
 23903 ;; This function calls:
 23904 ;;		_motor_set_manual_speed
 23905 ;; This function is called by:
 23906 ;;		_encoder_statemachine
 23907 ;; This function uses a non-reentrant model
 23908 ;;
 23909                           
 23910                           	psect	text96
 23911  01582C                     __ptext96:
 23912                           	opt stack 0
 23913  01582C                     _motor_decrease_manual_speed:
 23914                           	opt stack 17
 23915                           
 23916                           ;motor.c: 549: if(os.manual_speed>0)
 23917                           
 23918                           ;incstack = 0
 23919  01582C  0101               	movlb	1	; () banked
 23920  01582E  5194               	movf	(_os+35)& (0+255),w,b	;volatile
 23921  015830  1195               	iorwf	(_os+36)& (0+255),w,b	;volatile
 23922  015832  B4D8               	btfsc	status,2,c
 23923  015834  0012               	return	
 23924                           
 23925                           ; BSR set to: 1
 23926                           ;motor.c: 550: {;motor.c: 551: motor_set_manual_speed(os.manual_speed-1);
 23927  015836  0EFF               	movlw	255
 23928  015838  2594               	addwf	(_os+35)& (0+255),w,b	;volatile
 23929  01583A  0100               	movlb	0	; () banked
 23930  01583C  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23931  01583E  0EFF               	movlw	255
 23932  015840  0101               	movlb	1	; () banked
 23933  015842  2195               	addwfc	(_os+36)& (0+255),w,b	;volatile
 23934  015844  0100               	movlb	0	; () banked
 23935  015846  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23936  015848  ECCA  F0A6         	call	_motor_set_manual_speed	;wreg free
 23937  01584C  0012               	return	
 23938  01584E                     __end_of_motor_decrease_manual_speed:
 23939                           	opt stack 0
 23940                           tblptru	equ	0xFF8
 23941                           tblptrh	equ	0xFF7
 23942                           tblptrl	equ	0xFF6
 23943                           tablat	equ	0xFF5
 23944                           prodh	equ	0xFF4
 23945                           prodl	equ	0xFF3
 23946                           intcon	equ	0xFF2
 23947                           postinc0	equ	0xFEE
 23948                           wreg	equ	0xFE8
 23949                           indf1	equ	0xFE7
 23950                           postinc1	equ	0xFE6
 23951                           postdec1	equ	0xFE5
 23952                           plusw1	equ	0xFE3
 23953                           fsr1h	equ	0xFE2
 23954                           fsr1l	equ	0xFE1
 23955                           indf2	equ	0xFDF
 23956                           postinc2	equ	0xFDE
 23957                           postdec2	equ	0xFDD
 23958                           plusw2	equ	0xFDB
 23959                           fsr2h	equ	0xFDA
 23960                           fsr2l	equ	0xFD9
 23961                           status	equ	0xFD8
 23962                           
 23963 ;; *************** function _motor_arc_move *****************
 23964 ;; Defined at:
 23965 ;;		line 719 in file "motor.c"
 23966 ;; Parameters:    Size  Location     Type
 23967 ;;  direction       1    wreg     enum E6622
 23968 ;; Auto vars:     Size  Location     Type
 23969 ;;  direction       1   77[BANK0 ] enum E6622
 23970 ;;  arc_in_steps    4   78[BANK0 ] float 
 23971 ;; Return value:  Size  Location     Type
 23972 ;;                  1    wreg      void 
 23973 ;; Registers used:
 23974 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 23975 ;; Tracked objects:
 23976 ;;		On entry : 0/0
 23977 ;;		On exit  : 0/0
 23978 ;;		Unchanged: 0/0
 23979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23981 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23982 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23983 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23984 ;;Total ram usage:        9 bytes
 23985 ;; Hardware stack levels used:    1
 23986 ;; Hardware stack levels required when called:   14
 23987 ;; This function calls:
 23988 ;;		___fldiv
 23989 ;;		___flmul
 23990 ;;		___fltol
 23991 ;;		___xxtofl
 23992 ;;		_motor_schedule_command
 23993 ;; This function is called by:
 23994 ;;		_encoder_statemachine
 23995 ;; This function uses a non-reentrant model
 23996 ;;
 23997                           
 23998                           	psect	text97
 23999  011864                     __ptext97:
 24000                           	opt stack 0
 24001  011864                     _motor_arc_move:
 24002                           	opt stack 15
 24003                           
 24004                           ;incstack = 0
 24005                           ;motor_arc_move@direction stored from wreg
 24006  011864  0100               	movlb	0	; () banked
 24007  011866  6FAD               	movwf	motor_arc_move@direction& (0+255),b
 24008                           
 24009                           ;motor.c: 721: float arc_in_steps;;motor.c: 723: arc_in_steps = (float) os.arc_size;
 24010  011868  C18D  F060         	movff	_os+28,___xxtofl@val	;volatile
 24011  01186C  C18E  F061         	movff	_os+29,___xxtofl@val+1	;volatile
 24012  011870  C18F  F062         	movff	_os+30,___xxtofl@val+2	;volatile
 24013  011874  C190  F063         	movff	_os+31,___xxtofl@val+3	;volatile
 24014  011878  0E01               	movlw	1
 24015  01187A  EC62  F081         	call	___xxtofl
 24016  01187E  C060  F0AE         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 24017  011882  C061  F0AF         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 24018  011886  C062  F0B0         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24019  01188A  C063  F0B1         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24020                           
 24021                           ;motor.c: 724: arc_in_steps *= (float) config.full_circle_in_steps;
 24022  01188E  C0AE  F06E         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24023  011892  C0AF  F06F         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24024  011896  C0B0  F070         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24025  01189A  C0B1  F071         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24026  01189E  C1A1  F060         	movff	_config,___xxtofl@val
 24027  0118A2  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 24028  0118A6  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 24029  0118AA  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 24030  0118AE  0E00               	movlw	0
 24031  0118B0  EC62  F081         	call	___xxtofl
 24032  0118B4  C060  F072         	movff	?___xxtofl,___flmul@a
 24033  0118B8  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 24034  0118BC  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 24035  0118C0  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 24036  0118C4  EC38  F066         	call	___flmul	;wreg free
 24037  0118C8  C06E  F0AE         	movff	?___flmul,motor_arc_move@arc_in_steps
 24038  0118CC  C06F  F0AF         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24039  0118D0  C070  F0B0         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24040  0118D4  C071  F0B1         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24041                           
 24042                           ;motor.c: 725: arc_in_steps /= (float) 36000;
 24043  0118D8  C0AE  F06E         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24044  0118DC  C0AF  F06F         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24045  0118E0  C0B0  F070         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24046  0118E4  C0B1  F071         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24047  0118E8  0E00               	movlw	0
 24048  0118EA  0100               	movlb	0	; () banked
 24049  0118EC  6F72               	movwf	___fldiv@a& (0+255),b
 24050  0118EE  0EA0               	movlw	160
 24051  0118F0  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 24052  0118F2  0E0C               	movlw	12
 24053  0118F4  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 24054  0118F6  0E47               	movlw	71
 24055  0118F8  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 24056  0118FA  ECFC  F06D         	call	___fldiv	;wreg free
 24057  0118FE  C06E  F0AE         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24058  011902  C06F  F0AF         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24059  011906  C070  F0B0         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24060  01190A  C071  F0B1         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24061                           
 24062                           ;motor.c: 726: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 24063  01190E  C0AE  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24064  011912  C0AF  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24065  011916  C0B0  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24066  01191A  C0B1  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24067  01191E  ECBA  F090         	call	___fltol	;wreg free
 24068  011922  C060  F0A9         	movff	?___fltol,_motor_arc_move$8817
 24069  011926  C061  F0AA         	movff	?___fltol+1,_motor_arc_move$8817+1
 24070  01192A  C062  F0AB         	movff	?___fltol+2,_motor_arc_move$8817+2
 24071  01192E  C063  F0AC         	movff	?___fltol+3,_motor_arc_move$8817+3
 24072                           
 24073                           ;motor.c: 726: motor_schedule_command(direction, (uint32_t ) arc_in_steps, os.arc_speed,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 24074  011932  C0A9  F0A1         	movff	_motor_arc_move$8817,motor_schedule_command@distance_in_steps
 24075  011936  C0AA  F0A2         	movff	_motor_arc_move$8817+1,motor_schedule_command@distance_in_steps+1
 24076  01193A  C0AB  F0A3         	movff	_motor_arc_move$8817+2,motor_schedule_command@distance_in_steps+2
 24077  01193E  C0AC  F0A4         	movff	_motor_arc_move$8817+3,motor_schedule_command@distance_in_steps+3
 24078  011942  C191  F0A5         	movff	_os+32,motor_schedule_command@speed	;volatile
 24079  011946  C192  F0A6         	movff	_os+33,motor_schedule_command@speed+1	;volatile
 24080  01194A  0E00               	movlw	0
 24081  01194C  0100               	movlb	0	; () banked
 24082  01194E  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 24083  011950  51AD               	movf	motor_arc_move@direction& (0+255),w,b
 24084  011952  EC7A  F094         	call	_motor_schedule_command
 24085  011956  0012               	return		;funcret
 24086  011958                     __end_of_motor_arc_move:
 24087                           	opt stack 0
 24088                           tblptru	equ	0xFF8
 24089                           tblptrh	equ	0xFF7
 24090                           tblptrl	equ	0xFF6
 24091                           tablat	equ	0xFF5
 24092                           prodh	equ	0xFF4
 24093                           prodl	equ	0xFF3
 24094                           intcon	equ	0xFF2
 24095                           postinc0	equ	0xFEE
 24096                           wreg	equ	0xFE8
 24097                           indf1	equ	0xFE7
 24098                           postinc1	equ	0xFE6
 24099                           postdec1	equ	0xFE5
 24100                           plusw1	equ	0xFE3
 24101                           fsr1h	equ	0xFE2
 24102                           fsr1l	equ	0xFE1
 24103                           indf2	equ	0xFDF
 24104                           postinc2	equ	0xFDE
 24105                           postdec2	equ	0xFDD
 24106                           plusw2	equ	0xFDB
 24107                           fsr2h	equ	0xFDA
 24108                           fsr2l	equ	0xFD9
 24109                           status	equ	0xFD8
 24110                           
 24111 ;; *************** function __encoder_next_setup_stepsize *****************
 24112 ;; Defined at:
 24113 ;;		line 24 in file "encoder.c"
 24114 ;; Parameters:    Size  Location     Type
 24115 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24116 ;; Auto vars:     Size  Location     Type
 24117 ;;		None
 24118 ;; Return value:  Size  Location     Type
 24119 ;;                  2    0[BANK0 ] unsigned int 
 24120 ;; Registers used:
 24121 ;;		wreg, status,2, status,0
 24122 ;; Tracked objects:
 24123 ;;		On entry : 0/0
 24124 ;;		On exit  : 0/0
 24125 ;;		Unchanged: 0/0
 24126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24127 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24129 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24130 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24131 ;;Total ram usage:        4 bytes
 24132 ;; Hardware stack levels used:    1
 24133 ;; Hardware stack levels required when called:   10
 24134 ;; This function calls:
 24135 ;;		Nothing
 24136 ;; This function is called by:
 24137 ;;		_encoder_statemachine
 24138 ;; This function uses a non-reentrant model
 24139 ;;
 24140                           
 24141                           	psect	text98
 24142  013F04                     __ptext98:
 24143                           	opt stack 0
 24144  013F04                     __encoder_next_setup_stepsize:
 24145                           	opt stack 19
 24146                           
 24147                           ;encoder.c: 26: switch(old_stepsize)
 24148                           
 24149                           ;incstack = 0
 24150  013F04  D01A               	goto	l2616
 24151  013F06                     
 24152                           ;encoder.c: 29: return 100;
 24153  013F06  0E00               	movlw	0
 24154  013F08  0100               	movlb	0	; () banked
 24155  013F0A  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24156  013F0C  0E64               	movlw	100
 24157  013F0E  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24158                           
 24159                           ; BSR set to: 0
 24160  013F10  0012               	return	
 24161  013F12                     
 24162                           ; BSR set to: 0
 24163                           ;encoder.c: 31: return 10;
 24164                           
 24165                           ; BSR set to: 0
 24166  013F12  0E00               	movlw	0
 24167  013F14  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24168  013F16  0E0A               	movlw	10
 24169  013F18  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24170                           
 24171                           ; BSR set to: 0
 24172  013F1A  0012               	return	
 24173  013F1C                     
 24174                           ; BSR set to: 0
 24175                           ;encoder.c: 33: return 1;
 24176                           
 24177                           ; BSR set to: 0
 24178  013F1C  0E00               	movlw	0
 24179  013F1E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24180  013F20  0E01               	movlw	1
 24181  013F22  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24182                           
 24183                           ; BSR set to: 0
 24184  013F24  0012               	return	
 24185  013F26                     
 24186                           ; BSR set to: 0
 24187                           ;encoder.c: 35: return 1000;
 24188                           
 24189                           ; BSR set to: 0
 24190  013F26  0E03               	movlw	3
 24191  013F28  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24192  013F2A  0EE8               	movlw	232
 24193  013F2C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24194                           
 24195                           ; BSR set to: 0
 24196  013F2E  0012               	return	
 24197  013F30                     
 24198                           ; BSR set to: 0
 24199                           ;encoder.c: 37: return 100;
 24200                           
 24201                           ; BSR set to: 0
 24202  013F30  0E00               	movlw	0
 24203  013F32  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24204  013F34  0E64               	movlw	100
 24205  013F36  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24206                           
 24207                           ; BSR set to: 0
 24208                           ;encoder.c: 38: }
 24209                           
 24210                           ; BSR set to: 0
 24211  013F38  0012               	return	
 24212  013F3A                     l2616:
 24213                           
 24214                           ; BSR set to: 0
 24215  013F3A  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24216  013F3E  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24217                           
 24218                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24219                           ; Switch size 1, requested type "space"
 24220                           ; Number of cases is 2, Range of values is 0 to 3
 24221                           ; switch strategies available:
 24222                           ; Name         Instructions Cycles
 24223                           ; simple_byte            7     4 (average)
 24224                           ;	Chosen strategy is simple_byte
 24225  013F42  0100               	movlb	0	; () banked
 24226  013F44  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24227  013F46  0A00               	xorlw	0	; case 0
 24228  013F48  B4D8               	btfsc	status,2,c
 24229  013F4A  D004               	goto	l19449
 24230  013F4C  0A03               	xorlw	3	; case 3
 24231  013F4E  B4D8               	btfsc	status,2,c
 24232  013F50  D00C               	goto	l19451
 24233  013F52  D7EE               	goto	l2622
 24234  013F54                     l19449:
 24235                           
 24236                           ; BSR set to: 0
 24237                           ; Switch size 1, requested type "space"
 24238                           ; Number of cases is 3, Range of values is 1 to 100
 24239                           ; switch strategies available:
 24240                           ; Name         Instructions Cycles
 24241                           ; simple_byte           10     6 (average)
 24242                           ;	Chosen strategy is simple_byte
 24243  013F54  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24244  013F56  0A01               	xorlw	1	; case 1
 24245  013F58  B4D8               	btfsc	status,2,c
 24246  013F5A  D7E5               	goto	l2621
 24247  013F5C  0A0B               	xorlw	11	; case 10
 24248  013F5E  B4D8               	btfsc	status,2,c
 24249  013F60  D7DD               	goto	l2620
 24250  013F62  0A6E               	xorlw	110	; case 100
 24251  013F64  B4D8               	btfsc	status,2,c
 24252  013F66  D7D5               	goto	l2619
 24253  013F68  D7E3               	goto	l2622
 24254  013F6A                     l19451:
 24255                           
 24256                           ; BSR set to: 0
 24257                           ; Switch size 1, requested type "space"
 24258                           ; Number of cases is 1, Range of values is 232 to 232
 24259                           ; switch strategies available:
 24260                           ; Name         Instructions Cycles
 24261                           ; simple_byte            4     3 (average)
 24262                           ;	Chosen strategy is simple_byte
 24263  013F6A  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24264  013F6C  0AE8               	xorlw	232	; case 232
 24265  013F6E  B4D8               	btfsc	status,2,c
 24266  013F70  D7CA               	goto	l2617
 24267  013F72  D7DE               	goto	l2622
 24268  013F74                     __end_of__encoder_next_setup_stepsize:
 24269                           	opt stack 0
 24270                           tblptru	equ	0xFF8
 24271                           tblptrh	equ	0xFF7
 24272                           tblptrl	equ	0xFF6
 24273                           tablat	equ	0xFF5
 24274                           prodh	equ	0xFF4
 24275                           prodl	equ	0xFF3
 24276                           intcon	equ	0xFF2
 24277                           postinc0	equ	0xFEE
 24278                           wreg	equ	0xFE8
 24279                           indf1	equ	0xFE7
 24280                           postinc1	equ	0xFE6
 24281                           postdec1	equ	0xFE5
 24282                           plusw1	equ	0xFE3
 24283                           fsr1h	equ	0xFE2
 24284                           fsr1l	equ	0xFE1
 24285                           indf2	equ	0xFDF
 24286                           postinc2	equ	0xFDE
 24287                           postdec2	equ	0xFDD
 24288                           plusw2	equ	0xFDB
 24289                           fsr2h	equ	0xFDA
 24290                           fsr2l	equ	0xFD9
 24291                           status	equ	0xFD8
 24292                           
 24293 ;; *************** function __encoder_next_divide_step_size *****************
 24294 ;; Defined at:
 24295 ;;		line 41 in file "encoder.c"
 24296 ;; Parameters:    Size  Location     Type
 24297 ;;  old_stepsize    1    wreg     unsigned char 
 24298 ;; Auto vars:     Size  Location     Type
 24299 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24300 ;; Return value:  Size  Location     Type
 24301 ;;                  1    wreg      unsigned char 
 24302 ;; Registers used:
 24303 ;;		wreg, status,2, status,0
 24304 ;; Tracked objects:
 24305 ;;		On entry : 0/0
 24306 ;;		On exit  : 0/0
 24307 ;;		Unchanged: 0/0
 24308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24310 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24312 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24313 ;;Total ram usage:        1 bytes
 24314 ;; Hardware stack levels used:    1
 24315 ;; Hardware stack levels required when called:   10
 24316 ;; This function calls:
 24317 ;;		Nothing
 24318 ;; This function is called by:
 24319 ;;		_encoder_statemachine
 24320 ;; This function uses a non-reentrant model
 24321 ;;
 24322                           
 24323                           	psect	text99
 24324  015508                     __ptext99:
 24325                           	opt stack 0
 24326  015508                     __encoder_next_divide_step_size:
 24327                           	opt stack 19
 24328                           
 24329                           ; BSR set to: 0
 24330                           ;incstack = 0
 24331                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24332  015508  0100               	movlb	0	; () banked
 24333  01550A  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24334                           
 24335                           ;encoder.c: 43: switch(old_stepsize)
 24336  01550C  D008               	goto	l2626
 24337  01550E                     
 24338                           ;encoder.c: 46: return 10;
 24339  01550E  0E0A               	movlw	10
 24340  015510  0012               	return	
 24341  015512                     
 24342                           ;encoder.c: 48: return 1;
 24343  015512  0E01               	movlw	1
 24344  015514  0012               	return	
 24345  015516                     
 24346                           ;encoder.c: 50: return 100;
 24347  015516  0E64               	movlw	100
 24348  015518  0012               	return	
 24349  01551A                     
 24350                           ;encoder.c: 52: return 1;
 24351  01551A  0E01               	movlw	1
 24352                           
 24353                           ;encoder.c: 53: }
 24354  01551C  0012               	return	
 24355  01551E                     l2626:
 24356  01551E  0100               	movlb	0	; () banked
 24357  015520  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24358                           
 24359                           ; Switch size 1, requested type "space"
 24360                           ; Number of cases is 3, Range of values is 1 to 100
 24361                           ; switch strategies available:
 24362                           ; Name         Instructions Cycles
 24363                           ; simple_byte           10     6 (average)
 24364                           ;	Chosen strategy is simple_byte
 24365  015522  0A01               	xorlw	1	; case 1
 24366  015524  B4D8               	btfsc	status,2,c
 24367  015526  D7F7               	goto	l2630
 24368  015528  0A0B               	xorlw	11	; case 10
 24369  01552A  B4D8               	btfsc	status,2,c
 24370  01552C  D7F2               	goto	l2629
 24371  01552E  0A6E               	xorlw	110	; case 100
 24372  015530  B4D8               	btfsc	status,2,c
 24373  015532  D7ED               	goto	l2627
 24374  015534  D7F2               	goto	l2631
 24375  015536                     __end_of__encoder_next_divide_step_size:
 24376                           	opt stack 0
 24377                           tblptru	equ	0xFF8
 24378                           tblptrh	equ	0xFF7
 24379                           tblptrl	equ	0xFF6
 24380                           tablat	equ	0xFF5
 24381                           prodh	equ	0xFF4
 24382                           prodl	equ	0xFF3
 24383                           intcon	equ	0xFF2
 24384                           postinc0	equ	0xFEE
 24385                           wreg	equ	0xFE8
 24386                           indf1	equ	0xFE7
 24387                           postinc1	equ	0xFE6
 24388                           postdec1	equ	0xFE5
 24389                           plusw1	equ	0xFE3
 24390                           fsr1h	equ	0xFE2
 24391                           fsr1l	equ	0xFE1
 24392                           indf2	equ	0xFDF
 24393                           postinc2	equ	0xFDE
 24394                           postdec2	equ	0xFDD
 24395                           plusw2	equ	0xFDB
 24396                           fsr2h	equ	0xFDA
 24397                           fsr2l	equ	0xFD9
 24398                           status	equ	0xFD8
 24399                           
 24400 ;; *************** function __encoder_next_arc_step_size *****************
 24401 ;; Defined at:
 24402 ;;		line 56 in file "encoder.c"
 24403 ;; Parameters:    Size  Location     Type
 24404 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24405 ;; Auto vars:     Size  Location     Type
 24406 ;;		None
 24407 ;; Return value:  Size  Location     Type
 24408 ;;                  2    0[BANK0 ] unsigned int 
 24409 ;; Registers used:
 24410 ;;		wreg, status,2, status,0
 24411 ;; Tracked objects:
 24412 ;;		On entry : 0/0
 24413 ;;		On exit  : 0/0
 24414 ;;		Unchanged: 0/0
 24415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24416 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24418 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24419 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24420 ;;Total ram usage:        4 bytes
 24421 ;; Hardware stack levels used:    1
 24422 ;; Hardware stack levels required when called:   10
 24423 ;; This function calls:
 24424 ;;		Nothing
 24425 ;; This function is called by:
 24426 ;;		_encoder_statemachine
 24427 ;; This function uses a non-reentrant model
 24428 ;;
 24429                           
 24430                           	psect	text100
 24431  013F74                     __ptext100:
 24432                           	opt stack 0
 24433  013F74                     __encoder_next_arc_step_size:
 24434                           	opt stack 19
 24435                           
 24436                           ;encoder.c: 58: switch(old_stepsize)
 24437                           
 24438                           ;incstack = 0
 24439  013F74  D01A               	goto	l2635
 24440  013F76                     
 24441                           ;encoder.c: 61: return 100;
 24442  013F76  0E00               	movlw	0
 24443  013F78  0100               	movlb	0	; () banked
 24444  013F7A  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24445  013F7C  0E64               	movlw	100
 24446  013F7E  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24447                           
 24448                           ; BSR set to: 0
 24449  013F80  0012               	return	
 24450  013F82                     
 24451                           ; BSR set to: 0
 24452                           ;encoder.c: 63: return 10;
 24453                           
 24454                           ; BSR set to: 0
 24455  013F82  0E00               	movlw	0
 24456  013F84  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24457  013F86  0E0A               	movlw	10
 24458  013F88  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24459                           
 24460                           ; BSR set to: 0
 24461  013F8A  0012               	return	
 24462  013F8C                     
 24463                           ; BSR set to: 0
 24464                           ;encoder.c: 65: return 1;
 24465                           
 24466                           ; BSR set to: 0
 24467  013F8C  0E00               	movlw	0
 24468  013F8E  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24469  013F90  0E01               	movlw	1
 24470  013F92  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24471                           
 24472                           ; BSR set to: 0
 24473  013F94  0012               	return	
 24474  013F96                     
 24475                           ; BSR set to: 0
 24476                           ;encoder.c: 67: return 1000;
 24477                           
 24478                           ; BSR set to: 0
 24479  013F96  0E03               	movlw	3
 24480  013F98  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24481  013F9A  0EE8               	movlw	232
 24482  013F9C  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24483                           
 24484                           ; BSR set to: 0
 24485  013F9E  0012               	return	
 24486  013FA0                     
 24487                           ; BSR set to: 0
 24488                           ;encoder.c: 69: return 100;
 24489                           
 24490                           ; BSR set to: 0
 24491  013FA0  0E00               	movlw	0
 24492  013FA2  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24493  013FA4  0E64               	movlw	100
 24494  013FA6  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24495                           
 24496                           ; BSR set to: 0
 24497                           ;encoder.c: 70: }
 24498                           
 24499                           ; BSR set to: 0
 24500  013FA8  0012               	return	
 24501  013FAA                     l2635:
 24502                           
 24503                           ; BSR set to: 0
 24504  013FAA  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 24505  013FAE  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 24506                           
 24507                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24508                           ; Switch size 1, requested type "space"
 24509                           ; Number of cases is 2, Range of values is 0 to 3
 24510                           ; switch strategies available:
 24511                           ; Name         Instructions Cycles
 24512                           ; simple_byte            7     4 (average)
 24513                           ;	Chosen strategy is simple_byte
 24514  013FB2  0100               	movlb	0	; () banked
 24515  013FB4  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 24516  013FB6  0A00               	xorlw	0	; case 0
 24517  013FB8  B4D8               	btfsc	status,2,c
 24518  013FBA  D004               	goto	l19453
 24519  013FBC  0A03               	xorlw	3	; case 3
 24520  013FBE  B4D8               	btfsc	status,2,c
 24521  013FC0  D00C               	goto	l19455
 24522  013FC2  D7EE               	goto	l2641
 24523  013FC4                     l19453:
 24524                           
 24525                           ; BSR set to: 0
 24526                           ; Switch size 1, requested type "space"
 24527                           ; Number of cases is 3, Range of values is 1 to 100
 24528                           ; switch strategies available:
 24529                           ; Name         Instructions Cycles
 24530                           ; simple_byte           10     6 (average)
 24531                           ;	Chosen strategy is simple_byte
 24532  013FC4  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24533  013FC6  0A01               	xorlw	1	; case 1
 24534  013FC8  B4D8               	btfsc	status,2,c
 24535  013FCA  D7E5               	goto	l2640
 24536  013FCC  0A0B               	xorlw	11	; case 10
 24537  013FCE  B4D8               	btfsc	status,2,c
 24538  013FD0  D7DD               	goto	l2639
 24539  013FD2  0A6E               	xorlw	110	; case 100
 24540  013FD4  B4D8               	btfsc	status,2,c
 24541  013FD6  D7D5               	goto	l2638
 24542  013FD8  D7E3               	goto	l2641
 24543  013FDA                     l19455:
 24544                           
 24545                           ; BSR set to: 0
 24546                           ; Switch size 1, requested type "space"
 24547                           ; Number of cases is 1, Range of values is 232 to 232
 24548                           ; switch strategies available:
 24549                           ; Name         Instructions Cycles
 24550                           ; simple_byte            4     3 (average)
 24551                           ;	Chosen strategy is simple_byte
 24552  013FDA  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24553  013FDC  0AE8               	xorlw	232	; case 232
 24554  013FDE  B4D8               	btfsc	status,2,c
 24555  013FE0  D7CA               	goto	l2636
 24556  013FE2  D7DE               	goto	l2641
 24557  013FE4                     __end_of__encoder_next_arc_step_size:
 24558                           	opt stack 0
 24559                           tblptru	equ	0xFF8
 24560                           tblptrh	equ	0xFF7
 24561                           tblptrl	equ	0xFF6
 24562                           tablat	equ	0xFF5
 24563                           prodh	equ	0xFF4
 24564                           prodl	equ	0xFF3
 24565                           intcon	equ	0xFF2
 24566                           postinc0	equ	0xFEE
 24567                           wreg	equ	0xFE8
 24568                           indf1	equ	0xFE7
 24569                           postinc1	equ	0xFE6
 24570                           postdec1	equ	0xFE5
 24571                           plusw1	equ	0xFE3
 24572                           fsr1h	equ	0xFE2
 24573                           fsr1l	equ	0xFE1
 24574                           indf2	equ	0xFDF
 24575                           postinc2	equ	0xFDE
 24576                           postdec2	equ	0xFDD
 24577                           plusw2	equ	0xFDB
 24578                           fsr2h	equ	0xFDA
 24579                           fsr2l	equ	0xFD9
 24580                           status	equ	0xFD8
 24581                           
 24582 ;; *************** function __divide_jump_size_increment *****************
 24583 ;; Defined at:
 24584 ;;		line 73 in file "encoder.c"
 24585 ;; Parameters:    Size  Location     Type
 24586 ;;		None
 24587 ;; Auto vars:     Size  Location     Type
 24588 ;;		None
 24589 ;; Return value:  Size  Location     Type
 24590 ;;                  1    wreg      void 
 24591 ;; Registers used:
 24592 ;;		wreg, status,2, status,0
 24593 ;; Tracked objects:
 24594 ;;		On entry : 0/0
 24595 ;;		On exit  : 0/0
 24596 ;;		Unchanged: 0/0
 24597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24600 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24601 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24602 ;;Total ram usage:        1 bytes
 24603 ;; Hardware stack levels used:    1
 24604 ;; Hardware stack levels required when called:   10
 24605 ;; This function calls:
 24606 ;;		Nothing
 24607 ;; This function is called by:
 24608 ;;		_encoder_statemachine
 24609 ;; This function uses a non-reentrant model
 24610 ;;
 24611                           
 24612                           	psect	text101
 24613  01513A                     __ptext101:
 24614                           	opt stack 0
 24615  01513A                     __divide_jump_size_increment:
 24616                           	opt stack 19
 24617                           
 24618                           ;encoder.c: 75: ++os.divide_jump_size;
 24619                           
 24620                           ; BSR set to: 0
 24621                           ;incstack = 0
 24622  01513A  0101               	movlb	1	; () banked
 24623  01513C  4B89               	infsnz	(_os+24)& (0+255),f,b	;volatile
 24624  01513E  2B8A               	incf	(_os+25)& (0+255),f,b	;volatile
 24625                           
 24626                           ; BSR set to: 1
 24627                           ;encoder.c: 76: if(os.divide_jump_size==0)
 24628  015140  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24629  015142  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24630  015144  A4D8               	btfss	status,2,c
 24631  015146  D004               	goto	l2645
 24632                           
 24633                           ; BSR set to: 1
 24634                           ;encoder.c: 77: os.divide_jump_size = 1;
 24635  015148  0E00               	movlw	0
 24636  01514A  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24637  01514C  0E01               	movlw	1
 24638  01514E  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24639  015150                     l2645:
 24640                           
 24641                           ; BSR set to: 1
 24642                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 24643                           
 24644                           ; BSR set to: 1
 24645  015150  5184               	movf	(_os+19)& (0+255),w,b	;volatile
 24646  015152  5D89               	subwf	(_os+24)& (0+255),w,b	;volatile
 24647  015154  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24648  015156  0A80               	xorlw	128
 24649  015158  0100               	movlb	0	; () banked
 24650  01515A  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 24651  01515C  0101               	movlb	1	; () banked
 24652  01515E  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 24653  015160  0A80               	xorlw	128
 24654  015162  0100               	movlb	0	; () banked
 24655  015164  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 24656  015166  A0D8               	btfss	status,0,c
 24657  015168  0012               	return	
 24658                           
 24659                           ; BSR set to: 0
 24660                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 24661  01516A  0EFF               	movlw	255
 24662  01516C  0101               	movlb	1	; () banked
 24663  01516E  2584               	addwf	(_os+19)& (0+255),w,b	;volatile
 24664  015170  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24665  015172  0EFF               	movlw	255
 24666  015174  2185               	addwfc	(_os+20)& (0+255),w,b	;volatile
 24667  015176  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24668  015178  0012               	return	
 24669  01517A                     __end_of__divide_jump_size_increment:
 24670                           	opt stack 0
 24671                           tblptru	equ	0xFF8
 24672                           tblptrh	equ	0xFF7
 24673                           tblptrl	equ	0xFF6
 24674                           tablat	equ	0xFF5
 24675                           prodh	equ	0xFF4
 24676                           prodl	equ	0xFF3
 24677                           intcon	equ	0xFF2
 24678                           postinc0	equ	0xFEE
 24679                           wreg	equ	0xFE8
 24680                           indf1	equ	0xFE7
 24681                           postinc1	equ	0xFE6
 24682                           postdec1	equ	0xFE5
 24683                           plusw1	equ	0xFE3
 24684                           fsr1h	equ	0xFE2
 24685                           fsr1l	equ	0xFE1
 24686                           indf2	equ	0xFDF
 24687                           postinc2	equ	0xFDE
 24688                           postdec2	equ	0xFDD
 24689                           plusw2	equ	0xFDB
 24690                           fsr2h	equ	0xFDA
 24691                           fsr2l	equ	0xFD9
 24692                           status	equ	0xFD8
 24693                           
 24694 ;; *************** function __divide_jump_size_decrement *****************
 24695 ;; Defined at:
 24696 ;;		line 82 in file "encoder.c"
 24697 ;; Parameters:    Size  Location     Type
 24698 ;;		None
 24699 ;; Auto vars:     Size  Location     Type
 24700 ;;		None
 24701 ;; Return value:  Size  Location     Type
 24702 ;;                  1    wreg      void 
 24703 ;; Registers used:
 24704 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24705 ;; Tracked objects:
 24706 ;;		On entry : 0/0
 24707 ;;		On exit  : 0/0
 24708 ;;		Unchanged: 0/0
 24709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24712 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24713 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24714 ;;Total ram usage:        3 bytes
 24715 ;; Hardware stack levels used:    1
 24716 ;; Hardware stack levels required when called:   10
 24717 ;; This function calls:
 24718 ;;		Nothing
 24719 ;; This function is called by:
 24720 ;;		_encoder_statemachine
 24721 ;; This function uses a non-reentrant model
 24722 ;;
 24723                           
 24724                           	psect	text102
 24725  014052                     __ptext102:
 24726                           	opt stack 0
 24727  014052                     __divide_jump_size_decrement:
 24728                           	opt stack 19
 24729                           
 24730                           ;encoder.c: 84: --os.divide_jump_size;
 24731                           
 24732                           ;incstack = 0
 24733  014052  0101               	movlb	1	; () banked
 24734  014054  0789               	decf	(_os+24)& (0+255),f,b	;volatile
 24735  014056  A0D8               	btfss	status,0,c
 24736  014058  078A               	decf	(_os+25)& (0+255),f,b	;volatile
 24737                           
 24738                           ; BSR set to: 1
 24739                           ;encoder.c: 85: if(os.divide_jump_size==0)
 24740  01405A  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24741  01405C  118A               	iorwf	(_os+25)& (0+255),w,b	;volatile
 24742  01405E  A4D8               	btfss	status,2,c
 24743  014060  D002               	goto	l2650
 24744                           
 24745                           ; BSR set to: 1
 24746                           ;encoder.c: 86: os.divide_jump_size = -1;
 24747  014062  6989               	setf	(_os+24)& (0+255),b	;volatile
 24748  014064  698A               	setf	(_os+25)& (0+255),b	;volatile
 24749  014066                     l2650:
 24750                           
 24751                           ; BSR set to: 1
 24752                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 24753                           
 24754                           ; BSR set to: 1
 24755  014066  EE21  F084         	lfsr	2,_os+19	;volatile
 24756  01406A  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24757  01406E  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24758  014072  0100               	movlb	0	; () banked
 24759  014074  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24760  014076  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24761  014078  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24762  01407A  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24763  01407C  0101               	movlb	1	; () banked
 24764  01407E  5189               	movf	(_os+24)& (0+255),w,b	;volatile
 24765  014080  0100               	movlb	0	; () banked
 24766  014082  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 24767  014084  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24768  014086  0A80               	xorlw	128
 24769  014088  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 24770  01408A  0101               	movlb	1	; () banked
 24771  01408C  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 24772  01408E  0A80               	xorlw	128
 24773  014090  0100               	movlb	0	; () banked
 24774  014092  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 24775  014094  A0D8               	btfss	status,0,c
 24776  014096  0012               	return	
 24777                           
 24778                           ; BSR set to: 0
 24779                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 24780  014098  EE21  F084         	lfsr	2,_os+19	;volatile
 24781  01409C  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 24782  0140A0  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 24783  0140A4  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 24784  0140A6  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24785  0140A8  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 24786  0140AA  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 24787  0140AC  0E01               	movlw	1
 24788  0140AE  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 24789  0140B0  0101               	movlb	1	; () banked
 24790  0140B2  6F89               	movwf	(_os+24)& (0+255),b	;volatile
 24791  0140B4  0E00               	movlw	0
 24792  0140B6  0100               	movlb	0	; () banked
 24793  0140B8  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 24794  0140BA  0101               	movlb	1	; () banked
 24795  0140BC  6F8A               	movwf	(_os+25)& (0+255),b	;volatile
 24796  0140BE  0012               	return	
 24797  0140C0                     __end_of__divide_jump_size_decrement:
 24798                           	opt stack 0
 24799                           tblptru	equ	0xFF8
 24800                           tblptrh	equ	0xFF7
 24801                           tblptrl	equ	0xFF6
 24802                           tablat	equ	0xFF5
 24803                           prodh	equ	0xFF4
 24804                           prodl	equ	0xFF3
 24805                           intcon	equ	0xFF2
 24806                           postinc0	equ	0xFEE
 24807                           wreg	equ	0xFE8
 24808                           indf1	equ	0xFE7
 24809                           postinc1	equ	0xFE6
 24810                           postdec1	equ	0xFE5
 24811                           plusw1	equ	0xFE3
 24812                           fsr1h	equ	0xFE2
 24813                           fsr1l	equ	0xFE1
 24814                           indf2	equ	0xFDF
 24815                           postinc2	equ	0xFDE
 24816                           postdec2	equ	0xFDD
 24817                           plusw2	equ	0xFDB
 24818                           fsr2h	equ	0xFDA
 24819                           fsr2l	equ	0xFD9
 24820                           status	equ	0xFD8
 24821                           
 24822 ;; *************** function _display_prepare *****************
 24823 ;; Defined at:
 24824 ;;		line 278 in file "display.c"
 24825 ;; Parameters:    Size  Location     Type
 24826 ;;		None
 24827 ;; Auto vars:     Size  Location     Type
 24828 ;;  temp           10   94[BANK0 ] unsigned char [10]
 24829 ;;  cntr            1  105[BANK0 ] unsigned char 
 24830 ;;  space           1  104[BANK0 ] unsigned char 
 24831 ;; Return value:  Size  Location     Type
 24832 ;;                  1    wreg      void 
 24833 ;; Registers used:
 24834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 24835 ;; Tracked objects:
 24836 ;;		On entry : 0/0
 24837 ;;		On exit  : 0/0
 24838 ;;		Unchanged: 0/0
 24839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24841 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24842 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24843 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24844 ;;Total ram usage:       14 bytes
 24845 ;; Hardware stack levels used:    1
 24846 ;; Hardware stack levels required when called:   15
 24847 ;; This function calls:
 24848 ;;		__display_clear
 24849 ;;		__display_itoa
 24850 ;;		__display_itoa_long
 24851 ;;		__display_padded_itoa
 24852 ;;		__display_signed_itoa
 24853 ;;		_memcpy
 24854 ;;		_motor_speed_from_index
 24855 ;;		_strlen
 24856 ;; This function is called by:
 24857 ;;		_main
 24858 ;; This function uses a non-reentrant model
 24859 ;;
 24860                           
 24861                           	psect	text103
 24862  00A330                     __ptext103:
 24863                           	opt stack 0
 24864  00A330                     _display_prepare:
 24865                           	opt stack 15
 24866                           
 24867                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 24868                           
 24869                           ;incstack = 0
 24870  00A330  EF8E  F057         	goto	l1376
 24871  00A334                     
 24872                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 24873  00A334  0E34               	movlw	low _display_content
 24874  00A336  0100               	movlb	0	; () banked
 24875  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 24876  00A33A  0E02               	movlw	high _display_content
 24877  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24878  00A33E  0E6E               	movlw	low _dc_main
 24879  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 24880  00A342  0EA0               	movlw	high _dc_main
 24881  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24882  00A346  0E00               	movlw	0
 24883  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24884  00A34A  0E50               	movlw	80
 24885  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 24886  00A34E  EC5D  F0A2         	call	_memcpy	;wreg free
 24887                           
 24888                           ;display.c: 289: switch(os.displayState)
 24889  00A352  D00F               	goto	l1378
 24890  00A354                     
 24891                           ;display.c: 292: display_content[1][0] = '>';
 24892  00A354  0E3E               	movlw	62
 24893  00A356  0102               	movlb	2	; () banked
 24894  00A358  6F48               	movwf	(_display_content+20)& (0+255),b
 24895                           
 24896                           ;display.c: 293: break;
 24897  00A35A  EFBC  F057         	goto	l1385
 24898  00A35E                     
 24899                           ;display.c: 295: display_content[1][9] = '>';
 24900                           
 24901                           ; BSR set to: 2
 24902  00A35E  0E3E               	movlw	62
 24903  00A360  0102               	movlb	2	; () banked
 24904  00A362  6F51               	movwf	(_display_content+29)& (0+255),b
 24905                           
 24906                           ;display.c: 296: break;
 24907  00A364  EFBC  F057         	goto	l1385
 24908  00A368                     
 24909                           ;display.c: 301: display_content[2][9] = '>';
 24910                           
 24911                           ; BSR set to: 2
 24912  00A368  0E3E               	movlw	62
 24913  00A36A  0102               	movlb	2	; () banked
 24914  00A36C  6F65               	movwf	(_display_content+49)& (0+255),b
 24915                           
 24916                           ;display.c: 302: break;
 24917  00A36E  EFBC  F057         	goto	l1385
 24918  00A372                     l1378:
 24919                           
 24920                           ; BSR set to: 2
 24921  00A372  0101               	movlb	1	; () banked
 24922  00A374  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 24923                           
 24924                           ; Switch size 1, requested type "space"
 24925                           ; Number of cases is 5, Range of values is 1 to 5
 24926                           ; switch strategies available:
 24927                           ; Name         Instructions Cycles
 24928                           ; simple_byte           16     9 (average)
 24929                           ;	Chosen strategy is simple_byte
 24930  00A376  0A01               	xorlw	1	; case 1
 24931  00A378  B4D8               	btfsc	status,2,c
 24932  00A37A  D7EC               	goto	l1379
 24933  00A37C  0A03               	xorlw	3	; case 2
 24934  00A37E  B4D8               	btfsc	status,2,c
 24935  00A380  D7EE               	goto	l1381
 24936  00A382  0A01               	xorlw	1	; case 3
 24937  00A384  B4D8               	btfsc	status,2,c
 24938  00A386  D067               	goto	l1398
 24939  00A388  0A07               	xorlw	7	; case 4
 24940  00A38A  B4D8               	btfsc	status,2,c
 24941  00A38C  D7ED               	goto	l1383
 24942  00A38E  0A01               	xorlw	1	; case 5
 24943  00A390  D072               	goto	L92
 24944  00A392                     
 24945                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 24946                           
 24947                           ; BSR set to: 1
 24948  00A392  0E34               	movlw	low _display_content
 24949  00A394  0100               	movlb	0	; () banked
 24950  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 24951  00A398  0E02               	movlw	high _display_content
 24952  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 24953  00A39C  0E1E               	movlw	low _dc_setup1
 24954  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 24955  00A3A0  0EA0               	movlw	high _dc_setup1
 24956  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 24957  00A3A4  0E00               	movlw	0
 24958  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 24959  00A3A8  0E50               	movlw	80
 24960  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 24961  00A3AC  EC5D  F0A2         	call	_memcpy	;wreg free
 24962                           
 24963                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 24964  00A3B0  C181  F095         	movff	_os+16,__display_itoa@value	;volatile
 24965  00A3B4  C182  F096         	movff	_os+17,__display_itoa@value+1	;volatile
 24966  00A3B8  0E02               	movlw	2
 24967  00A3BA  0100               	movlb	0	; () banked
 24968  00A3BC  6F97               	movwf	__display_itoa@decimals& (0+255),b
 24969  00A3BE  0EBE               	movlw	low display_prepare@temp
 24970  00A3C0  6F98               	movwf	__display_itoa@text& (0+255),b
 24971  00A3C2  0E00               	movlw	high display_prepare@temp
 24972  00A3C4  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 24973  00A3C6  EC33  F075         	call	__display_itoa	;wreg free
 24974                           
 24975                           ;display.c: 312: if(os.setup_step_size>999)
 24976  00A3CA  0EE8               	movlw	232
 24977  00A3CC  0101               	movlb	1	; () banked
 24978  00A3CE  5D81               	subwf	(_os+16)& (0+255),w,b	;volatile
 24979  00A3D0  0E03               	movlw	3
 24980  00A3D2  5982               	subwfb	(_os+17)& (0+255),w,b	;volatile
 24981  00A3D4  A0D8               	btfss	status,0,c
 24982  00A3D6  D002               	goto	l1387
 24983                           
 24984                           ; BSR set to: 1
 24985                           ;display.c: 313: space = 0;
 24986  00A3D8  0E00               	movlw	0
 24987  00A3DA  D001               	goto	L23
 24988  00A3DC                     l1387:
 24989                           
 24990                           ;display.c: 314: else;display.c: 315: space = 1;
 24991                           
 24992                           ; BSR set to: 0
 24993  00A3DC  0E01               	movlw	1
 24994  00A3DE                     L23:
 24995  00A3DE  0100               	movlb	0	; () banked
 24996  00A3E0  6FC8               	movwf	display_prepare@space& (0+255),b
 24997                           
 24998                           ; BSR set to: 0
 24999                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 25000  00A3E2  0E00               	movlw	0
 25001  00A3E4  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25002  00A3E6  D018               	goto	l1389
 25003  00A3E8                     
 25004                           ; BSR set to: 0
 25005                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 25006                           
 25007                           ; BSR set to: 0
 25008  00A3E8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25009  00A3EA  0D01               	mullw	1
 25010  00A3EC  0EBE               	movlw	low display_prepare@temp
 25011  00A3EE  24F3               	addwf	prodl,w,c
 25012  00A3F0  6ED9               	movwf	fsr2l,c
 25013  00A3F2  0E00               	movlw	high display_prepare@temp
 25014  00A3F4  20F4               	addwfc	prodh,w,c
 25015  00A3F6  6EDA               	movwf	fsr2h,c
 25016  00A3F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25017  00A3FA  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25018  00A3FE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25019  00A400  27BC               	addwf	??_display_prepare& (0+255),f,b
 25020  00A402  0E00               	movlw	0
 25021  00A404  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25022  00A406  0E70               	movlw	low (_display_content+60)
 25023  00A408  25BC               	addwf	??_display_prepare& (0+255),w,b
 25024  00A40A  6EE1               	movwf	fsr1l,c
 25025  00A40C  0E02               	movlw	high (_display_content+60)
 25026  00A40E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25027  00A410  6EE2               	movwf	fsr1h,c
 25028  00A412  CFDF FFE7          	movff	indf2,indf1
 25029                           
 25030                           ; BSR set to: 0
 25031  00A416  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25032  00A418                     l1389:
 25033                           
 25034                           ; BSR set to: 0
 25035                           
 25036                           ; BSR set to: 0
 25037  00A418  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25038  00A41A  0D01               	mullw	1
 25039  00A41C  0EBE               	movlw	low display_prepare@temp
 25040  00A41E  24F3               	addwf	prodl,w,c
 25041  00A420  6ED9               	movwf	fsr2l,c
 25042  00A422  0E00               	movlw	high display_prepare@temp
 25043  00A424  20F4               	addwfc	prodh,w,c
 25044  00A426  6EDA               	movwf	fsr2h,c
 25045  00A428  50DF               	movf	indf2,w,c
 25046  00A42A  A4D8               	btfss	status,2,c
 25047  00A42C  D7DD               	goto	l1390
 25048                           
 25049                           ; BSR set to: 2
 25050                           
 25051                           ; BSR set to: 2
 25052                           ;display.c: 328: }
 25053                           
 25054                           ;display.c: 327: break;
 25055                           
 25056                           ;display.c: 326: display_content[3][12] = '>';
 25057                           
 25058                           ; BSR set to: 2
 25059                           
 25060                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 25061                           
 25062                           ;display.c: 324: break;
 25063                           
 25064                           ;display.c: 323: display_content[2][12] = '>';
 25065                           
 25066                           ; BSR set to: 0
 25067                           
 25068                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 25069                           
 25070                           ; BSR set to: 0
 25071                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 25072  00A42E  0101               	movlb	1	; () banked
 25073  00A430  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25074                           
 25075                           ; Switch size 1, requested type "space"
 25076                           ; Number of cases is 2, Range of values is 17 to 18
 25077                           ; switch strategies available:
 25078                           ; Name         Instructions Cycles
 25079                           ; simple_byte            7     4 (average)
 25080                           ;	Chosen strategy is simple_byte
 25081  00A432  0A11               	xorlw	17	; case 17
 25082  00A434  D08E               	goto	L29
 25083  00A436                     
 25084                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 25085                           
 25086                           ; BSR set to: 1
 25087  00A436  0E34               	movlw	low _display_content
 25088  00A438  0100               	movlb	0	; () banked
 25089  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 25090  00A43C  0E02               	movlw	high _display_content
 25091  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25092  00A440  0ECE               	movlw	low _dc_setup2
 25093  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 25094  00A444  0E9F               	movlw	high _dc_setup2
 25095  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25096  00A448  0E00               	movlw	0
 25097  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25098  00A44C  0E50               	movlw	80
 25099  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 25100  00A450  EC5D  F0A2         	call	_memcpy	;wreg free
 25101                           
 25102                           ;display.c: 333: switch(os.displayState)
 25103  00A454  D00A               	goto	l1397
 25104  00A456                     l1398:
 25105                           
 25106                           ;display.c: 336: display_content[2][0] = '>';
 25107  00A456  0E3E               	movlw	62
 25108  00A458  0102               	movlb	2	; () banked
 25109  00A45A  6F5C               	movwf	(_display_content+40)& (0+255),b
 25110                           
 25111                           ;display.c: 337: break;
 25112  00A45C  EFBC  F057         	goto	l1385
 25113  00A460                     l1400:
 25114                           
 25115                           ;display.c: 339: display_content[3][0] = '>';
 25116                           
 25117                           ; BSR set to: 2
 25118  00A460  0E3E               	movlw	62
 25119  00A462  0102               	movlb	2	; () banked
 25120  00A464  6F70               	movwf	(_display_content+60)& (0+255),b
 25121                           
 25122                           ; BSR set to: 2
 25123                           ;display.c: 341: }
 25124                           
 25125                           ;display.c: 340: break;
 25126  00A466  EFBC  F057         	goto	l1385
 25127  00A46A                     l1397:
 25128                           
 25129                           ; BSR set to: 2
 25130  00A46A  0101               	movlb	1	; () banked
 25131  00A46C  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25132                           
 25133                           ; Switch size 1, requested type "space"
 25134                           ; Number of cases is 2, Range of values is 33 to 34
 25135                           ; switch strategies available:
 25136                           ; Name         Instructions Cycles
 25137                           ; simple_byte            7     4 (average)
 25138                           ;	Chosen strategy is simple_byte
 25139  00A46E  0A21               	xorlw	33	; case 33
 25140  00A470  B4D8               	btfsc	status,2,c
 25141  00A472  D7F1               	goto	l1398
 25142  00A474  0A03               	xorlw	3	; case 34
 25143  00A476                     L92:
 25144  00A476  B4D8               	btfsc	status,2,c
 25145  00A478  D7F3               	goto	l1400
 25146                           
 25147                           ; BSR set to: 1
 25148                           ;display.c: 342: break;
 25149  00A47A  EFBC  F057         	goto	l1385
 25150  00A47E                     
 25151                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 25152                           
 25153                           ; BSR set to: 1
 25154  00A47E  0E34               	movlw	low _display_content
 25155  00A480  0100               	movlb	0	; () banked
 25156  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 25157  00A484  0E02               	movlw	high _display_content
 25158  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25159  00A488  0E7E               	movlw	low _dc_divide1
 25160  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 25161  00A48C  0E9F               	movlw	high _dc_divide1
 25162  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25163  00A490  0E00               	movlw	0
 25164  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25165  00A494  0E50               	movlw	80
 25166  00A496  6F64               	movwf	memcpy@n& (0+255),b
 25167  00A498  EC5D  F0A2         	call	_memcpy	;wreg free
 25168                           
 25169                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 25170  00A49C  C186  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 25171  00A4A0  0100               	movlb	0	; () banked
 25172  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25173  00A4A4  0E03               	movlw	3
 25174  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25175  00A4A8  0EBE               	movlw	low display_prepare@temp
 25176  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25177  00A4AC  0E00               	movlw	high display_prepare@temp
 25178  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25179  00A4B0  EC6B  F08F         	call	__display_padded_itoa	;wreg free
 25180                           
 25181                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 25182  00A4B4  0E00               	movlw	0
 25183  00A4B6  0100               	movlb	0	; () banked
 25184  00A4B8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25185  00A4BA                     l18283:
 25186                           
 25187                           ; BSR set to: 0
 25188  00A4BA  0E02               	movlw	2
 25189  00A4BC  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25190  00A4BE  D001               	goto	l1402
 25191  00A4C0  D014               	goto	u18280
 25192  00A4C2                     l1402:
 25193                           
 25194                           ; BSR set to: 0
 25195                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 25196                           
 25197                           ; BSR set to: 0
 25198  00A4C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25199  00A4C4  0D01               	mullw	1
 25200  00A4C6  0EBE               	movlw	low display_prepare@temp
 25201  00A4C8  24F3               	addwf	prodl,w,c
 25202  00A4CA  6ED9               	movwf	fsr2l,c
 25203  00A4CC  0E00               	movlw	high display_prepare@temp
 25204  00A4CE  20F4               	addwfc	prodh,w,c
 25205  00A4D0  6EDA               	movwf	fsr2h,c
 25206  00A4D2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25207  00A4D4  0D01               	mullw	1
 25208  00A4D6  0E5C               	movlw	low (_display_content+40)
 25209  00A4D8  24F3               	addwf	prodl,w,c
 25210  00A4DA  6EE1               	movwf	fsr1l,c
 25211  00A4DC  0E02               	movlw	high (_display_content+40)
 25212  00A4DE  20F4               	addwfc	prodh,w,c
 25213  00A4E0  6EE2               	movwf	fsr1h,c
 25214  00A4E2  CFDF FFE7          	movff	indf2,indf1
 25215                           
 25216                           ; BSR set to: 0
 25217  00A4E6  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25218  00A4E8  D7E8               	goto	l18283
 25219  00A4EA                     u18280:
 25220                           
 25221                           ; BSR set to: 0
 25222                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 25223                           
 25224                           ; BSR set to: 0
 25225  00A4EA  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25226  00A4EE  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25227  00A4F2  0E04               	movlw	4
 25228  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25229  00A4F6  0EBE               	movlw	low display_prepare@temp
 25230  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25231  00A4FA  0E00               	movlw	high display_prepare@temp
 25232  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25233  00A4FE  EC6B  F08F         	call	__display_padded_itoa	;wreg free
 25234                           
 25235                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 25236  00A502  0E00               	movlw	0
 25237  00A504  0100               	movlb	0	; () banked
 25238  00A506  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25239  00A508                     l18297:
 25240                           
 25241                           ; BSR set to: 0
 25242  00A508  0E03               	movlw	3
 25243  00A50A  65C9               	cpfsgt	display_prepare@cntr& (0+255),b
 25244  00A50C  D001               	goto	l1404
 25245  00A50E  D01E               	goto	l1406
 25246  00A510                     l1404:
 25247                           
 25248                           ; BSR set to: 0
 25249                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 25250                           
 25251                           ; BSR set to: 0
 25252  00A510  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25253  00A512  0D01               	mullw	1
 25254  00A514  0EBE               	movlw	low display_prepare@temp
 25255  00A516  24F3               	addwf	prodl,w,c
 25256  00A518  6ED9               	movwf	fsr2l,c
 25257  00A51A  0E00               	movlw	high display_prepare@temp
 25258  00A51C  20F4               	addwfc	prodh,w,c
 25259  00A51E  6EDA               	movwf	fsr2h,c
 25260  00A520  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25261  00A522  0D01               	mullw	1
 25262  00A524  0E70               	movlw	low (_display_content+60)
 25263  00A526  24F3               	addwf	prodl,w,c
 25264  00A528  6EE1               	movwf	fsr1l,c
 25265  00A52A  0E02               	movlw	high (_display_content+60)
 25266  00A52C  20F4               	addwfc	prodh,w,c
 25267  00A52E  6EE2               	movwf	fsr1h,c
 25268  00A530  CFDF FFE7          	movff	indf2,indf1
 25269                           
 25270                           ; BSR set to: 0
 25271  00A534  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25272  00A536  D7E8               	goto	l18297
 25273  00A538                     
 25274                           ;display.c: 361: display_content[2][12] = '>';
 25275                           
 25276                           ; BSR set to: 0
 25277  00A538  0E3E               	movlw	62
 25278  00A53A  0102               	movlb	2	; () banked
 25279  00A53C  6F68               	movwf	(_display_content+52)& (0+255),b
 25280                           
 25281                           ;display.c: 362: break;
 25282  00A53E  EFBC  F057         	goto	l1385
 25283  00A542                     
 25284                           ;display.c: 364: display_content[3][12] = '>';
 25285                           
 25286                           ; BSR set to: 2
 25287  00A542  0E3E               	movlw	62
 25288  00A544  0102               	movlb	2	; () banked
 25289  00A546  6F7C               	movwf	(_display_content+72)& (0+255),b
 25290                           
 25291                           ; BSR set to: 2
 25292                           ;display.c: 366: }
 25293                           
 25294                           ;display.c: 365: break;
 25295  00A548  EFBC  F057         	goto	l1385
 25296  00A54C                     l1406:
 25297                           
 25298                           ; BSR set to: 2
 25299  00A54C  0101               	movlb	1	; () banked
 25300  00A54E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25301                           
 25302                           ; Switch size 1, requested type "space"
 25303                           ; Number of cases is 2, Range of values is 49 to 50
 25304                           ; switch strategies available:
 25305                           ; Name         Instructions Cycles
 25306                           ; simple_byte            7     4 (average)
 25307                           ;	Chosen strategy is simple_byte
 25308  00A550  0A31               	xorlw	49	; case 49
 25309  00A552                     L29:
 25310  00A552  B4D8               	btfsc	status,2,c
 25311  00A554  D7F1               	goto	l1407
 25312  00A556  0A03               	xorlw	3	; case 50
 25313  00A558  B4D8               	btfsc	status,2,c
 25314  00A55A  D7F3               	goto	l1409
 25315                           
 25316                           ; BSR set to: 1
 25317                           ;display.c: 367: break;
 25318  00A55C  EFBC  F057         	goto	l1385
 25319  00A560                     
 25320                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 25321                           
 25322                           ; BSR set to: 1
 25323  00A560  0E34               	movlw	low _display_content
 25324  00A562  0100               	movlb	0	; () banked
 25325  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 25326  00A566  0E02               	movlw	high _display_content
 25327  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25328  00A56A  0E2E               	movlw	low _dc_divide2
 25329  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 25330  00A56E  0E9F               	movlw	high _dc_divide2
 25331  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25332  00A572  0E00               	movlw	0
 25333  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25334  00A576  0E50               	movlw	80
 25335  00A578  6F64               	movwf	memcpy@n& (0+255),b
 25336  00A57A  EC5D  F0A2         	call	_memcpy	;wreg free
 25337                           
 25338                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 25339  00A57E  C184  F078         	movff	_os+19,__display_padded_itoa@value	;volatile
 25340  00A582  C185  F079         	movff	_os+20,__display_padded_itoa@value+1	;volatile
 25341  00A586  0E00               	movlw	0
 25342  00A588  0100               	movlb	0	; () banked
 25343  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25344  00A58C  0EBE               	movlw	low display_prepare@temp
 25345  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25346  00A590  0E00               	movlw	high display_prepare@temp
 25347  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25348  00A594  EC6B  F08F         	call	__display_padded_itoa	;wreg free
 25349                           
 25350                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 25351  00A598  0E00               	movlw	0
 25352  00A59A  0100               	movlb	0	; () banked
 25353  00A59C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25354  00A59E  D018               	goto	l1411
 25355  00A5A0                     
 25356                           ; BSR set to: 0
 25357                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 25358                           
 25359                           ; BSR set to: 0
 25360  00A5A0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25361  00A5A2  0D01               	mullw	1
 25362  00A5A4  0EBE               	movlw	low display_prepare@temp
 25363  00A5A6  24F3               	addwf	prodl,w,c
 25364  00A5A8  6ED9               	movwf	fsr2l,c
 25365  00A5AA  0E00               	movlw	high display_prepare@temp
 25366  00A5AC  20F4               	addwfc	prodh,w,c
 25367  00A5AE  6EDA               	movwf	fsr2h,c
 25368  00A5B0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25369  00A5B2  6FBC               	movwf	??_display_prepare& (0+255),b
 25370  00A5B4  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25371  00A5B6  0E08               	movlw	8
 25372  00A5B8  27BC               	addwf	??_display_prepare& (0+255),f,b
 25373  00A5BA  0E00               	movlw	0
 25374  00A5BC  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25375  00A5BE  0E34               	movlw	low _display_content
 25376  00A5C0  25BC               	addwf	??_display_prepare& (0+255),w,b
 25377  00A5C2  6EE1               	movwf	fsr1l,c
 25378  00A5C4  0E02               	movlw	high _display_content
 25379  00A5C6  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25380  00A5C8  6EE2               	movwf	fsr1h,c
 25381  00A5CA  CFDF FFE7          	movff	indf2,indf1
 25382                           
 25383                           ; BSR set to: 0
 25384  00A5CE  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25385  00A5D0                     l1411:
 25386                           
 25387                           ; BSR set to: 0
 25388                           
 25389                           ; BSR set to: 0
 25390  00A5D0  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25391  00A5D2  0D01               	mullw	1
 25392  00A5D4  0EBE               	movlw	low display_prepare@temp
 25393  00A5D6  24F3               	addwf	prodl,w,c
 25394  00A5D8  6ED9               	movwf	fsr2l,c
 25395  00A5DA  0E00               	movlw	high display_prepare@temp
 25396  00A5DC  20F4               	addwfc	prodh,w,c
 25397  00A5DE  6EDA               	movwf	fsr2h,c
 25398  00A5E0  50DF               	movf	indf2,w,c
 25399  00A5E2  A4D8               	btfss	status,2,c
 25400  00A5E4  D7DD               	goto	l1412
 25401                           
 25402                           ; BSR set to: 0
 25403                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 25404                           
 25405                           ; BSR set to: 0
 25406  00A5E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25407  00A5E8  6FBC               	movwf	??_display_prepare& (0+255),b
 25408  00A5EA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25409  00A5EC  0E08               	movlw	8
 25410  00A5EE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25411  00A5F0  0E00               	movlw	0
 25412  00A5F2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25413  00A5F4  0E34               	movlw	low _display_content
 25414  00A5F6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25415  00A5F8  6ED9               	movwf	fsr2l,c
 25416  00A5FA  0E02               	movlw	high _display_content
 25417  00A5FC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25418  00A5FE  6EDA               	movwf	fsr2h,c
 25419  00A600  0E2C               	movlw	44
 25420  00A602  6EDF               	movwf	indf2,c
 25421                           
 25422                           ; BSR set to: 0
 25423                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25424  00A604  0101               	movlb	1	; () banked
 25425  00A606  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 25426  00A608  A4D8               	btfss	status,2,c
 25427  00A60A  D024               	goto	l1414
 25428                           
 25429                           ; BSR set to: 1
 25430                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 25431  00A60C  0100               	movlb	0	; () banked
 25432  00A60E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25433  00A610  6FBC               	movwf	??_display_prepare& (0+255),b
 25434  00A612  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25435  00A614  0E0A               	movlw	10
 25436  00A616  27BC               	addwf	??_display_prepare& (0+255),f,b
 25437  00A618  0E00               	movlw	0
 25438  00A61A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25439  00A61C  0E34               	movlw	low _display_content
 25440  00A61E  25BC               	addwf	??_display_prepare& (0+255),w,b
 25441  00A620  6ED9               	movwf	fsr2l,c
 25442  00A622  0E02               	movlw	high _display_content
 25443  00A624  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25444  00A626  6EDA               	movwf	fsr2h,c
 25445  00A628  0E43               	movlw	67
 25446  00A62A  6EDF               	movwf	indf2,c
 25447                           
 25448                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 25449  00A62C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25450  00A62E  6FBC               	movwf	??_display_prepare& (0+255),b
 25451  00A630  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25452  00A632  0E0B               	movlw	11
 25453  00A634  27BC               	addwf	??_display_prepare& (0+255),f,b
 25454  00A636  0E00               	movlw	0
 25455  00A638  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25456  00A63A  0E34               	movlw	low _display_content
 25457  00A63C  25BC               	addwf	??_display_prepare& (0+255),w,b
 25458  00A63E  6ED9               	movwf	fsr2l,c
 25459  00A640  0E02               	movlw	high _display_content
 25460  00A642  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25461  00A644  6EDA               	movwf	fsr2h,c
 25462  00A646  0E43               	movlw	67
 25463  00A648  6EDF               	movwf	indf2,c
 25464                           
 25465                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 25466  00A64A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25467  00A64C  6FBC               	movwf	??_display_prepare& (0+255),b
 25468  00A64E  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25469  00A650  0E0C               	movlw	12
 25470  00A652  D014               	goto	L30
 25471  00A654                     l1414:
 25472                           
 25473                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 25474                           
 25475                           ; BSR set to: 0
 25476  00A654  0100               	movlb	0	; () banked
 25477  00A656  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25478  00A658  6FBC               	movwf	??_display_prepare& (0+255),b
 25479  00A65A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25480  00A65C  0E0A               	movlw	10
 25481  00A65E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25482  00A660  0E00               	movlw	0
 25483  00A662  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25484  00A664  0E34               	movlw	low _display_content
 25485  00A666  25BC               	addwf	??_display_prepare& (0+255),w,b
 25486  00A668  6ED9               	movwf	fsr2l,c
 25487  00A66A  0E02               	movlw	high _display_content
 25488  00A66C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25489  00A66E  6EDA               	movwf	fsr2h,c
 25490  00A670  0E43               	movlw	67
 25491  00A672  6EDF               	movwf	indf2,c
 25492                           
 25493                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 25494  00A674  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25495  00A676  6FBC               	movwf	??_display_prepare& (0+255),b
 25496  00A678  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25497  00A67A  0E0B               	movlw	11
 25498  00A67C                     L30:
 25499  00A67C  27BC               	addwf	??_display_prepare& (0+255),f,b
 25500  00A67E  0E00               	movlw	0
 25501  00A680  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25502  00A682  0E34               	movlw	low _display_content
 25503  00A684  25BC               	addwf	??_display_prepare& (0+255),w,b
 25504  00A686  6ED9               	movwf	fsr2l,c
 25505  00A688  0E02               	movlw	high _display_content
 25506  00A68A  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25507  00A68C  6EDA               	movwf	fsr2h,c
 25508  00A68E  0E57               	movlw	87
 25509  00A690  6EDF               	movwf	indf2,c
 25510                           
 25511                           ; BSR set to: 0
 25512                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 25513                           
 25514                           ; BSR set to: 0
 25515  00A692  C187  F078         	movff	_os+22,__display_padded_itoa@value	;volatile
 25516  00A696  C188  F079         	movff	_os+23,__display_padded_itoa@value+1	;volatile
 25517  00A69A  0E00               	movlw	0
 25518  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25519  00A69E  0EBE               	movlw	low display_prepare@temp
 25520  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25521  00A6A2  0E00               	movlw	high display_prepare@temp
 25522  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25523  00A6A6  EC6B  F08F         	call	__display_padded_itoa	;wreg free
 25524                           
 25525                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 25526  00A6AA  0E00               	movlw	0
 25527  00A6AC  0100               	movlb	0	; () banked
 25528  00A6AE  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25529  00A6B0  D018               	goto	l1416
 25530  00A6B2                     
 25531                           ; BSR set to: 0
 25532                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 25533                           
 25534                           ; BSR set to: 0
 25535  00A6B2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25536  00A6B4  0D01               	mullw	1
 25537  00A6B6  0EBE               	movlw	low display_prepare@temp
 25538  00A6B8  24F3               	addwf	prodl,w,c
 25539  00A6BA  6ED9               	movwf	fsr2l,c
 25540  00A6BC  0E00               	movlw	high display_prepare@temp
 25541  00A6BE  20F4               	addwfc	prodh,w,c
 25542  00A6C0  6EDA               	movwf	fsr2h,c
 25543  00A6C2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25544  00A6C4  6FBC               	movwf	??_display_prepare& (0+255),b
 25545  00A6C6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25546  00A6C8  0E05               	movlw	5
 25547  00A6CA  27BC               	addwf	??_display_prepare& (0+255),f,b
 25548  00A6CC  0E00               	movlw	0
 25549  00A6CE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25550  00A6D0  0E48               	movlw	low (_display_content+20)
 25551  00A6D2  25BC               	addwf	??_display_prepare& (0+255),w,b
 25552  00A6D4  6EE1               	movwf	fsr1l,c
 25553  00A6D6  0E02               	movlw	high (_display_content+20)
 25554  00A6D8  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25555  00A6DA  6EE2               	movwf	fsr1h,c
 25556  00A6DC  CFDF FFE7          	movff	indf2,indf1
 25557                           
 25558                           ; BSR set to: 0
 25559  00A6E0  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25560  00A6E2                     l1416:
 25561                           
 25562                           ; BSR set to: 0
 25563                           
 25564                           ; BSR set to: 0
 25565  00A6E2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25566  00A6E4  0D01               	mullw	1
 25567  00A6E6  0EBE               	movlw	low display_prepare@temp
 25568  00A6E8  24F3               	addwf	prodl,w,c
 25569  00A6EA  6ED9               	movwf	fsr2l,c
 25570  00A6EC  0E00               	movlw	high display_prepare@temp
 25571  00A6EE  20F4               	addwfc	prodh,w,c
 25572  00A6F0  6EDA               	movwf	fsr2h,c
 25573  00A6F2  50DF               	movf	indf2,w,c
 25574  00A6F4  A4D8               	btfss	status,2,c
 25575  00A6F6  D7DD               	goto	l1417
 25576                           
 25577                           ; BSR set to: 0
 25578                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 25579                           
 25580                           ; BSR set to: 0
 25581  00A6F8  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25582  00A6FA  6FBC               	movwf	??_display_prepare& (0+255),b
 25583  00A6FC  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25584  00A6FE  0E06               	movlw	6
 25585  00A700  27BC               	addwf	??_display_prepare& (0+255),f,b
 25586  00A702  0E00               	movlw	0
 25587  00A704  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25588  00A706  0E48               	movlw	low (_display_content+20)
 25589  00A708  25BC               	addwf	??_display_prepare& (0+255),w,b
 25590  00A70A  6ED9               	movwf	fsr2l,c
 25591  00A70C  0E02               	movlw	high (_display_content+20)
 25592  00A70E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25593  00A710  6EDA               	movwf	fsr2h,c
 25594  00A712  0E28               	movlw	40
 25595  00A714  6EDF               	movwf	indf2,c
 25596                           
 25597                           ; BSR set to: 0
 25598                           ;display.c: 398: space = cntr + 7;
 25599  00A716  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25600  00A718  0F07               	addlw	7
 25601  00A71A  6FC8               	movwf	display_prepare@space& (0+255),b
 25602                           
 25603                           ; BSR set to: 0
 25604                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25605  00A71C  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 25606  00A720  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 25607  00A724  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25608  00A726  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25609  00A728  0E02               	movlw	2
 25610  00A72A  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25611  00A72C  0EBE               	movlw	low display_prepare@temp
 25612  00A72E  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25613  00A730  0E00               	movlw	high display_prepare@temp
 25614  00A732  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25615  00A734  EC1B  F086         	call	__display_itoa_long	;wreg free
 25616                           
 25617                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 25618  00A738  0E00               	movlw	0
 25619  00A73A  0100               	movlb	0	; () banked
 25620  00A73C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25621  00A73E  D018               	goto	l1419
 25622  00A740                     
 25623                           ; BSR set to: 0
 25624                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 25625                           
 25626                           ; BSR set to: 0
 25627  00A740  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25628  00A742  0D01               	mullw	1
 25629  00A744  0EBE               	movlw	low display_prepare@temp
 25630  00A746  24F3               	addwf	prodl,w,c
 25631  00A748  6ED9               	movwf	fsr2l,c
 25632  00A74A  0E00               	movlw	high display_prepare@temp
 25633  00A74C  20F4               	addwfc	prodh,w,c
 25634  00A74E  6EDA               	movwf	fsr2h,c
 25635  00A750  51C8               	movf	display_prepare@space& (0+255),w,b
 25636  00A752  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25637  00A756  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25638  00A758  27BC               	addwf	??_display_prepare& (0+255),f,b
 25639  00A75A  0E00               	movlw	0
 25640  00A75C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25641  00A75E  0E48               	movlw	low (_display_content+20)
 25642  00A760  25BC               	addwf	??_display_prepare& (0+255),w,b
 25643  00A762  6EE1               	movwf	fsr1l,c
 25644  00A764  0E02               	movlw	high (_display_content+20)
 25645  00A766  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25646  00A768  6EE2               	movwf	fsr1h,c
 25647  00A76A  CFDF FFE7          	movff	indf2,indf1
 25648                           
 25649                           ; BSR set to: 0
 25650  00A76E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25651  00A770                     l1419:
 25652                           
 25653                           ; BSR set to: 0
 25654                           
 25655                           ; BSR set to: 0
 25656  00A770  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25657  00A772  0D01               	mullw	1
 25658  00A774  0EBE               	movlw	low display_prepare@temp
 25659  00A776  24F3               	addwf	prodl,w,c
 25660  00A778  6ED9               	movwf	fsr2l,c
 25661  00A77A  0E00               	movlw	high display_prepare@temp
 25662  00A77C  20F4               	addwfc	prodh,w,c
 25663  00A77E  6EDA               	movwf	fsr2h,c
 25664  00A780  50DF               	movf	indf2,w,c
 25665  00A782  A4D8               	btfss	status,2,c
 25666  00A784  D7DD               	goto	l1420
 25667                           
 25668                           ; BSR set to: 0
 25669                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 25670                           
 25671                           ; BSR set to: 0
 25672  00A786  51C8               	movf	display_prepare@space& (0+255),w,b
 25673  00A788  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25674  00A78C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25675  00A78E  27BC               	addwf	??_display_prepare& (0+255),f,b
 25676  00A790  0E00               	movlw	0
 25677  00A792  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25678  00A794  0E48               	movlw	low (_display_content+20)
 25679  00A796  25BC               	addwf	??_display_prepare& (0+255),w,b
 25680  00A798  6ED9               	movwf	fsr2l,c
 25681  00A79A  0E02               	movlw	high (_display_content+20)
 25682  00A79C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25683  00A79E  6EDA               	movwf	fsr2h,c
 25684  00A7A0  0E01               	movlw	1
 25685  00A7A2  6EDF               	movwf	indf2,c
 25686                           
 25687                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 25688  00A7A4  51C8               	movf	display_prepare@space& (0+255),w,b
 25689  00A7A6  C0C9  F0BC         	movff	display_prepare@cntr,??_display_prepare
 25690  00A7AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25691  00A7AC  27BC               	addwf	??_display_prepare& (0+255),f,b
 25692  00A7AE  0E00               	movlw	0
 25693  00A7B0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25694  00A7B2  0E01               	movlw	1
 25695  00A7B4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25696  00A7B6  0E00               	movlw	0
 25697  00A7B8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25698  00A7BA  0E48               	movlw	low (_display_content+20)
 25699  00A7BC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25700  00A7BE  6ED9               	movwf	fsr2l,c
 25701  00A7C0  0E02               	movlw	high (_display_content+20)
 25702  00A7C2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25703  00A7C4  6EDA               	movwf	fsr2h,c
 25704  00A7C6  0E29               	movlw	41
 25705  00A7C8  6EDF               	movwf	indf2,c
 25706                           
 25707                           ; BSR set to: 0
 25708                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 25709  00A7CA  C189  F08F         	movff	_os+24,__display_signed_itoa@value	;volatile
 25710  00A7CE  C18A  F090         	movff	_os+25,__display_signed_itoa@value+1	;volatile
 25711  00A7D2  0EBE               	movlw	low display_prepare@temp
 25712  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 25713  00A7D6  0E00               	movlw	high display_prepare@temp
 25714  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 25715  00A7DA  ECF5  F0A7         	call	__display_signed_itoa	;wreg free
 25716                           
 25717                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 25718  00A7DE  0E00               	movlw	0
 25719  00A7E0  0100               	movlb	0	; () banked
 25720  00A7E2  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25721  00A7E4  D018               	goto	l1422
 25722  00A7E6                     
 25723                           ; BSR set to: 0
 25724                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 25725                           
 25726                           ; BSR set to: 0
 25727  00A7E6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25728  00A7E8  0D01               	mullw	1
 25729  00A7EA  0EBE               	movlw	low display_prepare@temp
 25730  00A7EC  24F3               	addwf	prodl,w,c
 25731  00A7EE  6ED9               	movwf	fsr2l,c
 25732  00A7F0  0E00               	movlw	high display_prepare@temp
 25733  00A7F2  20F4               	addwfc	prodh,w,c
 25734  00A7F4  6EDA               	movwf	fsr2h,c
 25735  00A7F6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25736  00A7F8  6FBC               	movwf	??_display_prepare& (0+255),b
 25737  00A7FA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25738  00A7FC  0E0B               	movlw	11
 25739  00A7FE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25740  00A800  0E00               	movlw	0
 25741  00A802  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25742  00A804  0E5C               	movlw	low (_display_content+40)
 25743  00A806  25BC               	addwf	??_display_prepare& (0+255),w,b
 25744  00A808  6EE1               	movwf	fsr1l,c
 25745  00A80A  0E02               	movlw	high (_display_content+40)
 25746  00A80C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25747  00A80E  6EE2               	movwf	fsr1h,c
 25748  00A810  CFDF FFE7          	movff	indf2,indf1
 25749                           
 25750                           ; BSR set to: 0
 25751  00A814  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25752  00A816                     l1422:
 25753                           
 25754                           ; BSR set to: 0
 25755                           
 25756                           ; BSR set to: 0
 25757  00A816  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25758  00A818  0D01               	mullw	1
 25759  00A81A  0EBE               	movlw	low display_prepare@temp
 25760  00A81C  24F3               	addwf	prodl,w,c
 25761  00A81E  6ED9               	movwf	fsr2l,c
 25762  00A820  0E00               	movlw	high display_prepare@temp
 25763  00A822  20F4               	addwfc	prodh,w,c
 25764  00A824  6EDA               	movwf	fsr2h,c
 25765  00A826  50DF               	movf	indf2,w,c
 25766  00A828  B4D8               	btfsc	status,2,c
 25767  00A82A  D3A6               	goto	l1385
 25768  00A82C  D7DC               	goto	l1423
 25769  00A82E                     
 25770                           ; BSR set to: 0
 25771                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 25772                           
 25773                           ; BSR set to: 0
 25774  00A82E  0E34               	movlw	low _display_content
 25775  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 25776  00A832  0E02               	movlw	high _display_content
 25777  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25778  00A836  0EDE               	movlw	low _dc_arc1
 25779  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 25780  00A83A  0E9E               	movlw	high _dc_arc1
 25781  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25782  00A83E  0E00               	movlw	0
 25783  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25784  00A842  0E50               	movlw	80
 25785  00A844  6F64               	movwf	memcpy@n& (0+255),b
 25786  00A846  EC5D  F0A2         	call	_memcpy	;wreg free
 25787                           
 25788                           ;display.c: 416: switch(os.displayState)
 25789  00A84A  D008               	goto	l1426
 25790  00A84C                     
 25791                           ;display.c: 419: display_content[2][12] = '>';
 25792  00A84C  0E3E               	movlw	62
 25793  00A84E  0102               	movlb	2	; () banked
 25794  00A850  6F68               	movwf	(_display_content+52)& (0+255),b
 25795                           
 25796                           ;display.c: 420: break;
 25797  00A852  D00C               	goto	l1428
 25798  00A854                     
 25799                           ;display.c: 422: display_content[3][12] = '>';
 25800                           
 25801                           ; BSR set to: 2
 25802  00A854  0E3E               	movlw	62
 25803  00A856  0102               	movlb	2	; () banked
 25804  00A858  6F7C               	movwf	(_display_content+72)& (0+255),b
 25805                           
 25806                           ; BSR set to: 2
 25807                           ;display.c: 424: }
 25808                           
 25809                           ;display.c: 423: break;
 25810  00A85A  D008               	goto	l1428
 25811  00A85C                     l1426:
 25812                           
 25813                           ; BSR set to: 2
 25814  00A85C  0101               	movlb	1	; () banked
 25815  00A85E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 25816                           
 25817                           ; Switch size 1, requested type "space"
 25818                           ; Number of cases is 2, Range of values is 81 to 82
 25819                           ; switch strategies available:
 25820                           ; Name         Instructions Cycles
 25821                           ; simple_byte            7     4 (average)
 25822                           ;	Chosen strategy is simple_byte
 25823  00A860  0A51               	xorlw	81	; case 81
 25824  00A862  B4D8               	btfsc	status,2,c
 25825  00A864  D7F3               	goto	l1427
 25826  00A866  0A03               	xorlw	3	; case 82
 25827  00A868  B4D8               	btfsc	status,2,c
 25828  00A86A  D7F4               	goto	l1429
 25829  00A86C                     l1428:
 25830                           
 25831                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 25832                           
 25833                           ; BSR set to: 1
 25834  00A86C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 25835  00A870  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 25836  00A874  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 25837  00A878  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 25838  00A87C  0E02               	movlw	2
 25839  00A87E  0100               	movlb	0	; () banked
 25840  00A880  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 25841  00A882  0EBE               	movlw	low display_prepare@temp
 25842  00A884  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 25843  00A886  0E00               	movlw	high display_prepare@temp
 25844  00A888  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 25845  00A88A  EC1B  F086         	call	__display_itoa_long	;wreg free
 25846                           
 25847                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 25848  00A88E  0E00               	movlw	0
 25849  00A890  0100               	movlb	0	; () banked
 25850  00A892  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25851  00A894  D018               	goto	l1430
 25852  00A896                     
 25853                           ; BSR set to: 0
 25854                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 25855                           
 25856                           ; BSR set to: 0
 25857  00A896  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25858  00A898  0D01               	mullw	1
 25859  00A89A  0EBE               	movlw	low display_prepare@temp
 25860  00A89C  24F3               	addwf	prodl,w,c
 25861  00A89E  6ED9               	movwf	fsr2l,c
 25862  00A8A0  0E00               	movlw	high display_prepare@temp
 25863  00A8A2  20F4               	addwfc	prodh,w,c
 25864  00A8A4  6EDA               	movwf	fsr2h,c
 25865  00A8A6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25866  00A8A8  6FBC               	movwf	??_display_prepare& (0+255),b
 25867  00A8AA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25868  00A8AC  0E0A               	movlw	10
 25869  00A8AE  27BC               	addwf	??_display_prepare& (0+255),f,b
 25870  00A8B0  0E00               	movlw	0
 25871  00A8B2  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25872  00A8B4  0E48               	movlw	low (_display_content+20)
 25873  00A8B6  25BC               	addwf	??_display_prepare& (0+255),w,b
 25874  00A8B8  6EE1               	movwf	fsr1l,c
 25875  00A8BA  0E02               	movlw	high (_display_content+20)
 25876  00A8BC  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25877  00A8BE  6EE2               	movwf	fsr1h,c
 25878  00A8C0  CFDF FFE7          	movff	indf2,indf1
 25879                           
 25880                           ; BSR set to: 0
 25881  00A8C4  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25882  00A8C6                     l1430:
 25883                           
 25884                           ; BSR set to: 0
 25885                           
 25886                           ; BSR set to: 0
 25887  00A8C6  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25888  00A8C8  0D01               	mullw	1
 25889  00A8CA  0EBE               	movlw	low display_prepare@temp
 25890  00A8CC  24F3               	addwf	prodl,w,c
 25891  00A8CE  6ED9               	movwf	fsr2l,c
 25892  00A8D0  0E00               	movlw	high display_prepare@temp
 25893  00A8D2  20F4               	addwfc	prodh,w,c
 25894  00A8D4  6EDA               	movwf	fsr2h,c
 25895  00A8D6  50DF               	movf	indf2,w,c
 25896  00A8D8  A4D8               	btfss	status,2,c
 25897  00A8DA  D7DD               	goto	l1431
 25898                           
 25899                           ; BSR set to: 0
 25900                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 25901                           
 25902                           ; BSR set to: 0
 25903  00A8DC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25904  00A8DE  6FBC               	movwf	??_display_prepare& (0+255),b
 25905  00A8E0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25906  00A8E2  0E0A               	movlw	10
 25907  00A8E4  27BC               	addwf	??_display_prepare& (0+255),f,b
 25908  00A8E6  0E00               	movlw	0
 25909  00A8E8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25910  00A8EA  0E48               	movlw	low (_display_content+20)
 25911  00A8EC  25BC               	addwf	??_display_prepare& (0+255),w,b
 25912  00A8EE  6ED9               	movwf	fsr2l,c
 25913  00A8F0  0E02               	movlw	high (_display_content+20)
 25914  00A8F2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25915  00A8F4  6EDA               	movwf	fsr2h,c
 25916  00A8F6  0E01               	movlw	1
 25917  00A8F8  6EDF               	movwf	indf2,c
 25918                           
 25919                           ; BSR set to: 0
 25920                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 25921  00A8FA  C18B  F095         	movff	_os+26,__display_itoa@value	;volatile
 25922  00A8FE  C18C  F096         	movff	_os+27,__display_itoa@value+1	;volatile
 25923  00A902  0E02               	movlw	2
 25924  00A904  6F97               	movwf	__display_itoa@decimals& (0+255),b
 25925  00A906  0EBE               	movlw	low display_prepare@temp
 25926  00A908  6F98               	movwf	__display_itoa@text& (0+255),b
 25927  00A90A  0E00               	movlw	high display_prepare@temp
 25928  00A90C  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 25929  00A90E  EC33  F075         	call	__display_itoa	;wreg free
 25930                           
 25931                           ;display.c: 436: if(os.arc_step_size>999)
 25932  00A912  0EE8               	movlw	232
 25933  00A914  0101               	movlb	1	; () banked
 25934  00A916  5D8B               	subwf	(_os+26)& (0+255),w,b	;volatile
 25935  00A918  0E03               	movlw	3
 25936  00A91A  598C               	subwfb	(_os+27)& (0+255),w,b	;volatile
 25937  00A91C  A0D8               	btfss	status,0,c
 25938  00A91E  D002               	goto	l1433
 25939                           
 25940                           ; BSR set to: 1
 25941                           ;display.c: 437: space = 0;
 25942  00A920  0E00               	movlw	0
 25943  00A922  D001               	goto	L24
 25944  00A924                     l1433:
 25945                           
 25946                           ;display.c: 438: else;display.c: 439: space = 1;
 25947                           
 25948                           ; BSR set to: 0
 25949  00A924  0E01               	movlw	1
 25950  00A926                     L24:
 25951  00A926  0100               	movlb	0	; () banked
 25952  00A928  6FC8               	movwf	display_prepare@space& (0+255),b
 25953                           
 25954                           ; BSR set to: 0
 25955                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 25956  00A92A  0E00               	movlw	0
 25957  00A92C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 25958  00A92E  D018               	goto	l1435
 25959  00A930                     
 25960                           ; BSR set to: 0
 25961                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 25962                           
 25963                           ; BSR set to: 0
 25964  00A930  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25965  00A932  0D01               	mullw	1
 25966  00A934  0EBE               	movlw	low display_prepare@temp
 25967  00A936  24F3               	addwf	prodl,w,c
 25968  00A938  6ED9               	movwf	fsr2l,c
 25969  00A93A  0E00               	movlw	high display_prepare@temp
 25970  00A93C  20F4               	addwfc	prodh,w,c
 25971  00A93E  6EDA               	movwf	fsr2h,c
 25972  00A940  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25973  00A942  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 25974  00A946  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 25975  00A948  27BC               	addwf	??_display_prepare& (0+255),f,b
 25976  00A94A  0E00               	movlw	0
 25977  00A94C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25978  00A94E  0E70               	movlw	low (_display_content+60)
 25979  00A950  25BC               	addwf	??_display_prepare& (0+255),w,b
 25980  00A952  6EE1               	movwf	fsr1l,c
 25981  00A954  0E02               	movlw	high (_display_content+60)
 25982  00A956  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25983  00A958  6EE2               	movwf	fsr1h,c
 25984  00A95A  CFDF FFE7          	movff	indf2,indf1
 25985                           
 25986                           ; BSR set to: 0
 25987  00A95E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 25988  00A960                     l1435:
 25989                           
 25990                           ; BSR set to: 0
 25991                           
 25992                           ; BSR set to: 0
 25993  00A960  51C9               	movf	display_prepare@cntr& (0+255),w,b
 25994  00A962  0D01               	mullw	1
 25995  00A964  0EBE               	movlw	low display_prepare@temp
 25996  00A966  24F3               	addwf	prodl,w,c
 25997  00A968  6ED9               	movwf	fsr2l,c
 25998  00A96A  0E00               	movlw	high display_prepare@temp
 25999  00A96C  20F4               	addwfc	prodh,w,c
 26000  00A96E  6EDA               	movwf	fsr2h,c
 26001  00A970  50DF               	movf	indf2,w,c
 26002  00A972  A4D8               	btfss	status,2,c
 26003  00A974  D7DD               	goto	l1436
 26004                           
 26005                           ; BSR set to: 0
 26006                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 26007                           
 26008                           ; BSR set to: 0
 26009  00A976  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26010  00A978  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26011  00A97C  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26012  00A97E  27BC               	addwf	??_display_prepare& (0+255),f,b
 26013  00A980  0E00               	movlw	0
 26014  00A982  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26015  00A984  0E70               	movlw	low (_display_content+60)
 26016  00A986  25BC               	addwf	??_display_prepare& (0+255),w,b
 26017  00A988  6ED9               	movwf	fsr2l,c
 26018  00A98A  0E02               	movlw	high (_display_content+60)
 26019  00A98C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26020  00A98E  6EDA               	movwf	fsr2h,c
 26021  00A990  0E01               	movlw	1
 26022  00A992  D25B               	goto	L27
 26023  00A994                     
 26024                           ; BSR set to: 0
 26025                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 26026                           
 26027                           ; BSR set to: 0
 26028  00A994  0E34               	movlw	low _display_content
 26029  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 26030  00A998  0E02               	movlw	high _display_content
 26031  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26032  00A99C  0E8E               	movlw	low _dc_arc2
 26033  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 26034  00A9A0  0E9E               	movlw	high _dc_arc2
 26035  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26036  00A9A4  0E00               	movlw	0
 26037  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26038  00A9A8  0E50               	movlw	80
 26039  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 26040  00A9AC  EC5D  F0A2         	call	_memcpy	;wreg free
 26041                           
 26042                           ;display.c: 450: switch(os.displayState)
 26043  00A9B0  D025               	goto	l1439
 26044  00A9B2                     
 26045                           ;display.c: 453: display_content[2][6] = 'W';
 26046  00A9B2  0E57               	movlw	87
 26047  00A9B4  0102               	movlb	2	; () banked
 26048  00A9B6  6F62               	movwf	(_display_content+46)& (0+255),b
 26049                           
 26050                           ;display.c: 454: display_content[2][7] = ' ';
 26051  00A9B8  0E20               	movlw	32
 26052  00A9BA  6F63               	movwf	(_display_content+47)& (0+255),b
 26053                           
 26054                           ;display.c: 455: break;
 26055  00A9BC  D027               	goto	l1441
 26056  00A9BE                     
 26057                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 26058                           
 26059                           ; BSR set to: 2
 26060  00A9BE  0E5C               	movlw	low (_display_content+40)
 26061  00A9C0  0100               	movlb	0	; () banked
 26062  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 26063  00A9C4  0E02               	movlw	high (_display_content+40)
 26064  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26065  00A9C8  0E14               	movlw	low STR_1
 26066  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 26067  00A9CC  0EA3               	movlw	high STR_1
 26068  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26069  00A9D0  0E00               	movlw	0
 26070  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26071  00A9D4  0E08               	movlw	8
 26072  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 26073  00A9D8  EC5D  F0A2         	call	_memcpy	;wreg free
 26074                           
 26075                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 26076  00A9DC  0E70               	movlw	low (_display_content+60)
 26077  00A9DE  0100               	movlb	0	; () banked
 26078  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26079  00A9E2  0E02               	movlw	high (_display_content+60)
 26080  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26081  00A9E6  0E1D               	movlw	low STR_2
 26082  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26083  00A9EA  0EA3               	movlw	high STR_2
 26084  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26085  00A9EE  0E00               	movlw	0
 26086  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26087  00A9F2  0E06               	movlw	6
 26088  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26089  00A9F6  EC5D  F0A2         	call	_memcpy	;wreg free
 26090                           
 26091                           ;display.c: 460: }
 26092                           
 26093                           ;display.c: 459: break;
 26094  00A9FA  D008               	goto	l1441
 26095  00A9FC                     l1439:
 26096  00A9FC  0101               	movlb	1	; () banked
 26097  00A9FE  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26098                           
 26099                           ; Switch size 1, requested type "space"
 26100                           ; Number of cases is 2, Range of values is 98 to 99
 26101                           ; switch strategies available:
 26102                           ; Name         Instructions Cycles
 26103                           ; simple_byte            7     4 (average)
 26104                           ;	Chosen strategy is simple_byte
 26105  00AA00  0A62               	xorlw	98	; case 98
 26106  00AA02  B4D8               	btfsc	status,2,c
 26107  00AA04  D7DC               	goto	l1442
 26108  00AA06  0A01               	xorlw	1	; case 99
 26109  00AA08  B4D8               	btfsc	status,2,c
 26110  00AA0A  D7D3               	goto	l1440
 26111  00AA0C                     l1441:
 26112                           
 26113                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 26114                           
 26115                           ; BSR set to: 1
 26116  00AA0C  C18D  F0AD         	movff	_os+28,__display_itoa_long@value	;volatile
 26117  00AA10  C18E  F0AE         	movff	_os+29,__display_itoa_long@value+1	;volatile
 26118  00AA14  C18F  F0AF         	movff	_os+30,__display_itoa_long@value+2	;volatile
 26119  00AA18  C190  F0B0         	movff	_os+31,__display_itoa_long@value+3	;volatile
 26120  00AA1C  0E02               	movlw	2
 26121  00AA1E  0100               	movlb	0	; () banked
 26122  00AA20  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26123  00AA22  0EBE               	movlw	low display_prepare@temp
 26124  00AA24  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26125  00AA26  0E00               	movlw	high display_prepare@temp
 26126  00AA28  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26127  00AA2A  EC1B  F086         	call	__display_itoa_long	;wreg free
 26128                           
 26129                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 26130  00AA2E  0E00               	movlw	0
 26131  00AA30  0100               	movlb	0	; () banked
 26132  00AA32  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26133  00AA34  D018               	goto	l1443
 26134  00AA36                     
 26135                           ; BSR set to: 0
 26136                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 26137                           
 26138                           ; BSR set to: 0
 26139  00AA36  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26140  00AA38  0D01               	mullw	1
 26141  00AA3A  0EBE               	movlw	low display_prepare@temp
 26142  00AA3C  24F3               	addwf	prodl,w,c
 26143  00AA3E  6ED9               	movwf	fsr2l,c
 26144  00AA40  0E00               	movlw	high display_prepare@temp
 26145  00AA42  20F4               	addwfc	prodh,w,c
 26146  00AA44  6EDA               	movwf	fsr2h,c
 26147  00AA46  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26148  00AA48  6FBC               	movwf	??_display_prepare& (0+255),b
 26149  00AA4A  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26150  00AA4C  0E0A               	movlw	10
 26151  00AA4E  27BC               	addwf	??_display_prepare& (0+255),f,b
 26152  00AA50  0E00               	movlw	0
 26153  00AA52  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26154  00AA54  0E34               	movlw	low _display_content
 26155  00AA56  25BC               	addwf	??_display_prepare& (0+255),w,b
 26156  00AA58  6EE1               	movwf	fsr1l,c
 26157  00AA5A  0E02               	movlw	high _display_content
 26158  00AA5C  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26159  00AA5E  6EE2               	movwf	fsr1h,c
 26160  00AA60  CFDF FFE7          	movff	indf2,indf1
 26161                           
 26162                           ; BSR set to: 0
 26163  00AA64  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26164  00AA66                     l1443:
 26165                           
 26166                           ; BSR set to: 0
 26167                           
 26168                           ; BSR set to: 0
 26169  00AA66  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26170  00AA68  0D01               	mullw	1
 26171  00AA6A  0EBE               	movlw	low display_prepare@temp
 26172  00AA6C  24F3               	addwf	prodl,w,c
 26173  00AA6E  6ED9               	movwf	fsr2l,c
 26174  00AA70  0E00               	movlw	high display_prepare@temp
 26175  00AA72  20F4               	addwfc	prodh,w,c
 26176  00AA74  6EDA               	movwf	fsr2h,c
 26177  00AA76  50DF               	movf	indf2,w,c
 26178  00AA78  A4D8               	btfss	status,2,c
 26179  00AA7A  D7DD               	goto	l1444
 26180                           
 26181                           ; BSR set to: 0
 26182                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 26183                           
 26184                           ; BSR set to: 0
 26185  00AA7C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26186  00AA7E  6FBC               	movwf	??_display_prepare& (0+255),b
 26187  00AA80  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26188  00AA82  0E0A               	movlw	10
 26189  00AA84  27BC               	addwf	??_display_prepare& (0+255),f,b
 26190  00AA86  0E00               	movlw	0
 26191  00AA88  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26192  00AA8A  0E34               	movlw	low _display_content
 26193  00AA8C  25BC               	addwf	??_display_prepare& (0+255),w,b
 26194  00AA8E  6ED9               	movwf	fsr2l,c
 26195  00AA90  0E02               	movlw	high _display_content
 26196  00AA92  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26197  00AA94  6EDA               	movwf	fsr2h,c
 26198  00AA96  0E01               	movlw	1
 26199  00AA98  6EDF               	movwf	indf2,c
 26200                           
 26201                           ; BSR set to: 0
 26202                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26203  00AA9A  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26204  00AA9E  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26205  00AAA2  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26206  00AAA4  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26207  00AAA6  0E02               	movlw	2
 26208  00AAA8  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26209  00AAAA  0EBE               	movlw	low display_prepare@temp
 26210  00AAAC  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26211  00AAAE  0E00               	movlw	high display_prepare@temp
 26212  00AAB0  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26213  00AAB2  EC1B  F086         	call	__display_itoa_long	;wreg free
 26214                           
 26215                           ;display.c: 472: space = 6-strlen(temp);
 26216  00AAB6  0EBE               	movlw	low display_prepare@temp
 26217  00AAB8  0100               	movlb	0	; () banked
 26218  00AABA  6F60               	movwf	strlen@s& (0+255),b
 26219  00AABC  0E00               	movlw	high display_prepare@temp
 26220  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 26221  00AAC0  ECBD  F0A8         	call	_strlen	;wreg free
 26222  00AAC4  0100               	movlb	0	; () banked
 26223  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 26224  00AAC8  0800               	sublw	0
 26225  00AACA  0F06               	addlw	6
 26226  00AACC  6FC8               	movwf	display_prepare@space& (0+255),b
 26227                           
 26228                           ; BSR set to: 0
 26229                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 26230  00AACE  0E00               	movlw	0
 26231  00AAD0  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26232  00AAD2  D01C               	goto	l1446
 26233  00AAD4                     
 26234                           ; BSR set to: 0
 26235                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 26236                           
 26237                           ; BSR set to: 0
 26238  00AAD4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26239  00AAD6  0D01               	mullw	1
 26240  00AAD8  0EBE               	movlw	low display_prepare@temp
 26241  00AADA  24F3               	addwf	prodl,w,c
 26242  00AADC  6ED9               	movwf	fsr2l,c
 26243  00AADE  0E00               	movlw	high display_prepare@temp
 26244  00AAE0  20F4               	addwfc	prodh,w,c
 26245  00AAE2  6EDA               	movwf	fsr2h,c
 26246  00AAE4  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26247  00AAE6  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26248  00AAEA  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26249  00AAEC  27BC               	addwf	??_display_prepare& (0+255),f,b
 26250  00AAEE  0E00               	movlw	0
 26251  00AAF0  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26252  00AAF2  0E0D               	movlw	13
 26253  00AAF4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26254  00AAF6  0E00               	movlw	0
 26255  00AAF8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26256  00AAFA  0E48               	movlw	low (_display_content+20)
 26257  00AAFC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26258  00AAFE  6EE1               	movwf	fsr1l,c
 26259  00AB00  0E02               	movlw	high (_display_content+20)
 26260  00AB02  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26261  00AB04  6EE2               	movwf	fsr1h,c
 26262  00AB06  CFDF FFE7          	movff	indf2,indf1
 26263                           
 26264                           ; BSR set to: 0
 26265  00AB0A  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26266  00AB0C                     l1446:
 26267                           
 26268                           ; BSR set to: 0
 26269                           
 26270                           ; BSR set to: 0
 26271  00AB0C  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26272  00AB0E  0D01               	mullw	1
 26273  00AB10  0EBE               	movlw	low display_prepare@temp
 26274  00AB12  24F3               	addwf	prodl,w,c
 26275  00AB14  6ED9               	movwf	fsr2l,c
 26276  00AB16  0E00               	movlw	high display_prepare@temp
 26277  00AB18  20F4               	addwfc	prodh,w,c
 26278  00AB1A  6EDA               	movwf	fsr2h,c
 26279  00AB1C  50DF               	movf	indf2,w,c
 26280  00AB1E  A4D8               	btfss	status,2,c
 26281  00AB20  D7D9               	goto	l1447
 26282                           
 26283                           ; BSR set to: 0
 26284                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26285                           
 26286                           ; BSR set to: 0
 26287  00AB22  C191  F093         	movff	_os+32,motor_speed_from_index@speed_index	;volatile
 26288  00AB26  C192  F094         	movff	_os+33,motor_speed_from_index@speed_index+1	;volatile
 26289  00AB2A  ECB2  F0AC         	call	_motor_speed_from_index	;wreg free
 26290  00AB2E  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26291  00AB32  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26292  00AB36  0E02               	movlw	2
 26293  00AB38  0100               	movlb	0	; () banked
 26294  00AB3A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26295  00AB3C  0EBE               	movlw	low display_prepare@temp
 26296  00AB3E  6F98               	movwf	__display_itoa@text& (0+255),b
 26297  00AB40  0E00               	movlw	high display_prepare@temp
 26298  00AB42  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26299  00AB44  EC33  F075         	call	__display_itoa	;wreg free
 26300                           
 26301                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 26302  00AB48  0E00               	movlw	0
 26303  00AB4A  0100               	movlb	0	; () banked
 26304  00AB4C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26305  00AB4E  D018               	goto	l1449
 26306  00AB50                     
 26307                           ; BSR set to: 0
 26308                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 26309                           
 26310                           ; BSR set to: 0
 26311  00AB50  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26312  00AB52  0D01               	mullw	1
 26313  00AB54  0EBE               	movlw	low display_prepare@temp
 26314  00AB56  24F3               	addwf	prodl,w,c
 26315  00AB58  6ED9               	movwf	fsr2l,c
 26316  00AB5A  0E00               	movlw	high display_prepare@temp
 26317  00AB5C  20F4               	addwfc	prodh,w,c
 26318  00AB5E  6EDA               	movwf	fsr2h,c
 26319  00AB60  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26320  00AB62  6FBC               	movwf	??_display_prepare& (0+255),b
 26321  00AB64  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26322  00AB66  0E0B               	movlw	11
 26323  00AB68  27BC               	addwf	??_display_prepare& (0+255),f,b
 26324  00AB6A  0E00               	movlw	0
 26325  00AB6C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26326  00AB6E  0E70               	movlw	low (_display_content+60)
 26327  00AB70  25BC               	addwf	??_display_prepare& (0+255),w,b
 26328  00AB72  6EE1               	movwf	fsr1l,c
 26329  00AB74  0E02               	movlw	high (_display_content+60)
 26330  00AB76  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26331  00AB78  6EE2               	movwf	fsr1h,c
 26332  00AB7A  CFDF FFE7          	movff	indf2,indf1
 26333                           
 26334                           ; BSR set to: 0
 26335  00AB7E  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26336  00AB80                     l1449:
 26337                           
 26338                           ; BSR set to: 0
 26339                           
 26340                           ; BSR set to: 0
 26341  00AB80  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26342  00AB82  0D01               	mullw	1
 26343  00AB84  0EBE               	movlw	low display_prepare@temp
 26344  00AB86  24F3               	addwf	prodl,w,c
 26345  00AB88  6ED9               	movwf	fsr2l,c
 26346  00AB8A  0E00               	movlw	high display_prepare@temp
 26347  00AB8C  20F4               	addwfc	prodh,w,c
 26348  00AB8E  6EDA               	movwf	fsr2h,c
 26349  00AB90  50DF               	movf	indf2,w,c
 26350  00AB92  A4D8               	btfss	status,2,c
 26351  00AB94  D7DD               	goto	l1450
 26352  00AB96  D12D               	goto	L93
 26353  00AB98                     
 26354                           ; BSR set to: 0
 26355                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 26356                           
 26357                           ; BSR set to: 0
 26358  00AB98  0E34               	movlw	low _display_content
 26359  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 26360  00AB9C  0E02               	movlw	high _display_content
 26361  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26362  00ABA0  0E3E               	movlw	low _dc_zero
 26363  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 26364  00ABA4  0E9E               	movlw	high _dc_zero
 26365  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26366  00ABA8  0E00               	movlw	0
 26367  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26368  00ABAC  0E50               	movlw	80
 26369  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 26370  00ABB0  EC5D  F0A2         	call	_memcpy	;wreg free
 26371                           
 26372                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26373  00ABB4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26374  00ABB8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26375  00ABBC  0100               	movlb	0	; () banked
 26376  00ABBE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26377  00ABC0  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26378  00ABC2  0E02               	movlw	2
 26379  00ABC4  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26380  00ABC6  0EBE               	movlw	low display_prepare@temp
 26381  00ABC8  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26382  00ABCA  0E00               	movlw	high display_prepare@temp
 26383  00ABCC  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26384  00ABCE  EC1B  F086         	call	__display_itoa_long	;wreg free
 26385                           
 26386                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 26387  00ABD2  0E00               	movlw	0
 26388  00ABD4  0100               	movlb	0	; () banked
 26389  00ABD6  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26390  00ABD8  D018               	goto	l1453
 26391  00ABDA                     
 26392                           ; BSR set to: 0
 26393                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 26394                           
 26395                           ; BSR set to: 0
 26396  00ABDA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26397  00ABDC  0D01               	mullw	1
 26398  00ABDE  0EBE               	movlw	low display_prepare@temp
 26399  00ABE0  24F3               	addwf	prodl,w,c
 26400  00ABE2  6ED9               	movwf	fsr2l,c
 26401  00ABE4  0E00               	movlw	high display_prepare@temp
 26402  00ABE6  20F4               	addwfc	prodh,w,c
 26403  00ABE8  6EDA               	movwf	fsr2h,c
 26404  00ABEA  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26405  00ABEC  6FBC               	movwf	??_display_prepare& (0+255),b
 26406  00ABEE  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26407  00ABF0  0E0D               	movlw	13
 26408  00ABF2  27BC               	addwf	??_display_prepare& (0+255),f,b
 26409  00ABF4  0E00               	movlw	0
 26410  00ABF6  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26411  00ABF8  0E48               	movlw	low (_display_content+20)
 26412  00ABFA  25BC               	addwf	??_display_prepare& (0+255),w,b
 26413  00ABFC  6EE1               	movwf	fsr1l,c
 26414  00ABFE  0E02               	movlw	high (_display_content+20)
 26415  00AC00  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26416  00AC02  6EE2               	movwf	fsr1h,c
 26417  00AC04  CFDF FFE7          	movff	indf2,indf1
 26418                           
 26419                           ; BSR set to: 0
 26420  00AC08  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26421  00AC0A                     l1453:
 26422                           
 26423                           ; BSR set to: 0
 26424                           
 26425                           ; BSR set to: 0
 26426  00AC0A  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26427  00AC0C  0D01               	mullw	1
 26428  00AC0E  0EBE               	movlw	low display_prepare@temp
 26429  00AC10  24F3               	addwf	prodl,w,c
 26430  00AC12  6ED9               	movwf	fsr2l,c
 26431  00AC14  0E00               	movlw	high display_prepare@temp
 26432  00AC16  20F4               	addwfc	prodh,w,c
 26433  00AC18  6EDA               	movwf	fsr2h,c
 26434  00AC1A  50DF               	movf	indf2,w,c
 26435  00AC1C  A4D8               	btfss	status,2,c
 26436  00AC1E  D7DD               	goto	l1454
 26437                           
 26438                           ; BSR set to: 0
 26439                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 26440                           
 26441                           ; BSR set to: 0
 26442  00AC20  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26443  00AC22  6FBC               	movwf	??_display_prepare& (0+255),b
 26444  00AC24  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26445  00AC26  0E0D               	movlw	13
 26446  00AC28  27BC               	addwf	??_display_prepare& (0+255),f,b
 26447  00AC2A  0E00               	movlw	0
 26448  00AC2C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26449  00AC2E  0E48               	movlw	low (_display_content+20)
 26450  00AC30  25BC               	addwf	??_display_prepare& (0+255),w,b
 26451  00AC32  6ED9               	movwf	fsr2l,c
 26452  00AC34  0E02               	movlw	high (_display_content+20)
 26453  00AC36  D6AA               	goto	L36
 26454  00AC38                     
 26455                           ; BSR set to: 0
 26456                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 26457                           
 26458                           ; BSR set to: 0
 26459  00AC38  0E34               	movlw	low _display_content
 26460  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 26461  00AC3C  0E02               	movlw	high _display_content
 26462  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26463  00AC40  0EEE               	movlw	low _dc_manual
 26464  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 26465  00AC44  0E9D               	movlw	high _dc_manual
 26466  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26467  00AC48  0E00               	movlw	0
 26468  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26469  00AC4C  0E50               	movlw	80
 26470  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 26471  00AC50  EC5D  F0A2         	call	_memcpy	;wreg free
 26472                           
 26473                           ;display.c: 509: switch(os.displayState)
 26474  00AC54  D044               	goto	l1457
 26475  00AC56                     
 26476                           ;display.c: 512: display_content[2][6] = 'W';
 26477  00AC56  0E57               	movlw	87
 26478  00AC58  0102               	movlb	2	; () banked
 26479  00AC5A  6F62               	movwf	(_display_content+46)& (0+255),b
 26480                           
 26481                           ;display.c: 513: display_content[2][7] = ' ';
 26482  00AC5C  0E20               	movlw	32
 26483  00AC5E  6F63               	movwf	(_display_content+47)& (0+255),b
 26484                           
 26485                           ;display.c: 514: break;
 26486  00AC60  D049               	goto	l1459
 26487  00AC62                     
 26488                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 26489                           
 26490                           ; BSR set to: 2
 26491  00AC62  0E5C               	movlw	low (_display_content+40)
 26492  00AC64  0100               	movlb	0	; () banked
 26493  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 26494  00AC68  0E02               	movlw	high (_display_content+40)
 26495  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26496  00AC6C  0E14               	movlw	low STR_1
 26497  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 26498  00AC70  0EA3               	movlw	high STR_1
 26499  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26500  00AC74  0E00               	movlw	0
 26501  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26502  00AC78  0E08               	movlw	8
 26503  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 26504  00AC7C  EC5D  F0A2         	call	_memcpy	;wreg free
 26505                           
 26506                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 26507  00AC80  0E70               	movlw	low (_display_content+60)
 26508  00AC82  0100               	movlb	0	; () banked
 26509  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 26510  00AC86  0E02               	movlw	high (_display_content+60)
 26511  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26512  00AC8A  0E1D               	movlw	low STR_2
 26513  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 26514  00AC8E  0EA3               	movlw	high STR_2
 26515  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26516  00AC92  0E00               	movlw	0
 26517  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26518  00AC96  0E06               	movlw	6
 26519  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 26520  00AC9A  EC5D  F0A2         	call	_memcpy	;wreg free
 26521                           
 26522                           ;display.c: 518: break;
 26523  00AC9E  D02A               	goto	l1459
 26524  00ACA0                     
 26525                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 26526  00ACA0  0E5C               	movlw	low (_display_content+40)
 26527  00ACA2  0100               	movlb	0	; () banked
 26528  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 26529  00ACA6  0E02               	movlw	high (_display_content+40)
 26530  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26531  00ACAA  0E14               	movlw	low STR_1
 26532  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 26533  00ACAE  0EA3               	movlw	high STR_1
 26534  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26535  00ACB2  0E00               	movlw	0
 26536  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26537  00ACB6  0E08               	movlw	8
 26538  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 26539  00ACBA  EC5D  F0A2         	call	_memcpy	;wreg free
 26540                           
 26541                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 26542  00ACBE  0E70               	movlw	low (_display_content+60)
 26543  00ACC0  0100               	movlb	0	; () banked
 26544  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 26545  00ACC4  0E02               	movlw	high (_display_content+60)
 26546  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26547  00ACC8  0E24               	movlw	low STR_6
 26548  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 26549  00ACCC  0EA3               	movlw	high STR_6
 26550  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26551  00ACD0  0E00               	movlw	0
 26552  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26553  00ACD4  0E05               	movlw	5
 26554  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 26555  00ACD8  EC5D  F0A2         	call	_memcpy	;wreg free
 26556                           
 26557                           ;display.c: 523: }
 26558                           
 26559                           ;display.c: 522: break;
 26560  00ACDC  D00B               	goto	l1459
 26561  00ACDE                     l1457:
 26562  00ACDE  0101               	movlb	1	; () banked
 26563  00ACE0  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26564                           
 26565                           ; Switch size 1, requested type "space"
 26566                           ; Number of cases is 3, Range of values is 130 to 132
 26567                           ; switch strategies available:
 26568                           ; Name         Instructions Cycles
 26569                           ; simple_byte           10     6 (average)
 26570                           ;	Chosen strategy is simple_byte
 26571  00ACE2  0A82               	xorlw	130	; case 130
 26572  00ACE4  B4D8               	btfsc	status,2,c
 26573  00ACE6  D7BD               	goto	l1460
 26574  00ACE8  0A01               	xorlw	1	; case 131
 26575  00ACEA  B4D8               	btfsc	status,2,c
 26576  00ACEC  D7B4               	goto	l1458
 26577  00ACEE  0A07               	xorlw	7	; case 132
 26578  00ACF0  B4D8               	btfsc	status,2,c
 26579  00ACF2  D7D6               	goto	l1461
 26580  00ACF4                     l1459:
 26581                           
 26582                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26583                           
 26584                           ; BSR set to: 1
 26585  00ACF4  C17C  F0AD         	movff	_os+11,__display_itoa_long@value	;volatile
 26586  00ACF8  C17D  F0AE         	movff	_os+12,__display_itoa_long@value+1	;volatile
 26587  00ACFC  0100               	movlb	0	; () banked
 26588  00ACFE  6BAF               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26589  00AD00  6BB0               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26590  00AD02  0E02               	movlw	2
 26591  00AD04  6FB1               	movwf	__display_itoa_long@decimals& (0+255),b
 26592  00AD06  0EBE               	movlw	low display_prepare@temp
 26593  00AD08  6FB2               	movwf	__display_itoa_long@text& (0+255),b
 26594  00AD0A  0E00               	movlw	high display_prepare@temp
 26595  00AD0C  6FB3               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26596  00AD0E  EC1B  F086         	call	__display_itoa_long	;wreg free
 26597                           
 26598                           ;display.c: 527: space = 7-strlen(temp);
 26599  00AD12  0EBE               	movlw	low display_prepare@temp
 26600  00AD14  0100               	movlb	0	; () banked
 26601  00AD16  6F60               	movwf	strlen@s& (0+255),b
 26602  00AD18  0E00               	movlw	high display_prepare@temp
 26603  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 26604  00AD1C  ECBD  F0A8         	call	_strlen	;wreg free
 26605  00AD20  0100               	movlb	0	; () banked
 26606  00AD22  5160               	movf	?_strlen& (0+255),w,b
 26607  00AD24  0800               	sublw	0
 26608  00AD26  0F07               	addlw	7
 26609  00AD28  6FC8               	movwf	display_prepare@space& (0+255),b
 26610                           
 26611                           ; BSR set to: 0
 26612                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 26613  00AD2A  0E00               	movlw	0
 26614  00AD2C  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26615  00AD2E  D01C               	goto	l1462
 26616  00AD30                     
 26617                           ; BSR set to: 0
 26618                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 26619                           
 26620                           ; BSR set to: 0
 26621  00AD30  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26622  00AD32  0D01               	mullw	1
 26623  00AD34  0EBE               	movlw	low display_prepare@temp
 26624  00AD36  24F3               	addwf	prodl,w,c
 26625  00AD38  6ED9               	movwf	fsr2l,c
 26626  00AD3A  0E00               	movlw	high display_prepare@temp
 26627  00AD3C  20F4               	addwfc	prodh,w,c
 26628  00AD3E  6EDA               	movwf	fsr2h,c
 26629  00AD40  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26630  00AD42  C0C8  F0BC         	movff	display_prepare@space,??_display_prepare
 26631  00AD46  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26632  00AD48  27BC               	addwf	??_display_prepare& (0+255),f,b
 26633  00AD4A  0E00               	movlw	0
 26634  00AD4C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26635  00AD4E  0E0C               	movlw	12
 26636  00AD50  27BC               	addwf	??_display_prepare& (0+255),f,b
 26637  00AD52  0E00               	movlw	0
 26638  00AD54  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26639  00AD56  0E48               	movlw	low (_display_content+20)
 26640  00AD58  25BC               	addwf	??_display_prepare& (0+255),w,b
 26641  00AD5A  6EE1               	movwf	fsr1l,c
 26642  00AD5C  0E02               	movlw	high (_display_content+20)
 26643  00AD5E  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26644  00AD60  6EE2               	movwf	fsr1h,c
 26645  00AD62  CFDF FFE7          	movff	indf2,indf1
 26646                           
 26647                           ; BSR set to: 0
 26648  00AD66  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26649  00AD68                     l1462:
 26650                           
 26651                           ; BSR set to: 0
 26652                           
 26653                           ; BSR set to: 0
 26654  00AD68  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26655  00AD6A  0D01               	mullw	1
 26656  00AD6C  0EBE               	movlw	low display_prepare@temp
 26657  00AD6E  24F3               	addwf	prodl,w,c
 26658  00AD70  6ED9               	movwf	fsr2l,c
 26659  00AD72  0E00               	movlw	high display_prepare@temp
 26660  00AD74  20F4               	addwfc	prodh,w,c
 26661  00AD76  6EDA               	movwf	fsr2h,c
 26662  00AD78  50DF               	movf	indf2,w,c
 26663  00AD7A  A4D8               	btfss	status,2,c
 26664  00AD7C  D7D9               	goto	l1463
 26665                           
 26666                           ; BSR set to: 0
 26667                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 26668                           
 26669                           ; BSR set to: 0
 26670  00AD7E  C194  F093         	movff	_os+35,motor_speed_from_index@speed_index	;volatile
 26671  00AD82  C195  F094         	movff	_os+36,motor_speed_from_index@speed_index+1	;volatile
 26672  00AD86  ECB2  F0AC         	call	_motor_speed_from_index	;wreg free
 26673  00AD8A  C093  F095         	movff	?_motor_speed_from_index,__display_itoa@value
 26674  00AD8E  C094  F096         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26675  00AD92  0E02               	movlw	2
 26676  00AD94  0100               	movlb	0	; () banked
 26677  00AD96  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26678  00AD98  0EBE               	movlw	low display_prepare@temp
 26679  00AD9A  6F98               	movwf	__display_itoa@text& (0+255),b
 26680  00AD9C  0E00               	movlw	high display_prepare@temp
 26681  00AD9E  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26682  00ADA0  EC33  F075         	call	__display_itoa	;wreg free
 26683                           
 26684                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 26685  00ADA4  0E00               	movlw	0
 26686  00ADA6  0100               	movlb	0	; () banked
 26687  00ADA8  6FC9               	movwf	display_prepare@cntr& (0+255),b
 26688  00ADAA  D018               	goto	l1465
 26689  00ADAC                     
 26690                           ; BSR set to: 0
 26691                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 26692                           
 26693                           ; BSR set to: 0
 26694  00ADAC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26695  00ADAE  0D01               	mullw	1
 26696  00ADB0  0EBE               	movlw	low display_prepare@temp
 26697  00ADB2  24F3               	addwf	prodl,w,c
 26698  00ADB4  6ED9               	movwf	fsr2l,c
 26699  00ADB6  0E00               	movlw	high display_prepare@temp
 26700  00ADB8  20F4               	addwfc	prodh,w,c
 26701  00ADBA  6EDA               	movwf	fsr2h,c
 26702  00ADBC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26703  00ADBE  6FBC               	movwf	??_display_prepare& (0+255),b
 26704  00ADC0  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26705  00ADC2  0E0B               	movlw	11
 26706  00ADC4  27BC               	addwf	??_display_prepare& (0+255),f,b
 26707  00ADC6  0E00               	movlw	0
 26708  00ADC8  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26709  00ADCA  0E70               	movlw	low (_display_content+60)
 26710  00ADCC  25BC               	addwf	??_display_prepare& (0+255),w,b
 26711  00ADCE  6EE1               	movwf	fsr1l,c
 26712  00ADD0  0E02               	movlw	high (_display_content+60)
 26713  00ADD2  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26714  00ADD4  6EE2               	movwf	fsr1h,c
 26715  00ADD6  CFDF FFE7          	movff	indf2,indf1
 26716                           
 26717                           ; BSR set to: 0
 26718  00ADDA  2BC9               	incf	display_prepare@cntr& (0+255),f,b
 26719  00ADDC                     l1465:
 26720                           
 26721                           ; BSR set to: 0
 26722                           
 26723                           ; BSR set to: 0
 26724  00ADDC  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26725  00ADDE  0D01               	mullw	1
 26726  00ADE0  0EBE               	movlw	low display_prepare@temp
 26727  00ADE2  24F3               	addwf	prodl,w,c
 26728  00ADE4  6ED9               	movwf	fsr2l,c
 26729  00ADE6  0E00               	movlw	high display_prepare@temp
 26730  00ADE8  20F4               	addwfc	prodh,w,c
 26731  00ADEA  6EDA               	movwf	fsr2h,c
 26732  00ADEC  50DF               	movf	indf2,w,c
 26733  00ADEE  A4D8               	btfss	status,2,c
 26734  00ADF0  D7DD               	goto	l1466
 26735  00ADF2                     L93:
 26736                           
 26737                           ; BSR set to: 0
 26738                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 26739                           
 26740                           ; BSR set to: 0
 26741  00ADF2  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26742  00ADF4  6FBC               	movwf	??_display_prepare& (0+255),b
 26743  00ADF6  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26744  00ADF8  0E0B               	movlw	11
 26745  00ADFA  27BC               	addwf	??_display_prepare& (0+255),f,b
 26746  00ADFC  0E00               	movlw	0
 26747  00ADFE  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26748  00AE00  0E70               	movlw	low (_display_content+60)
 26749  00AE02  25BC               	addwf	??_display_prepare& (0+255),w,b
 26750  00AE04  6ED9               	movwf	fsr2l,c
 26751  00AE06  0E02               	movlw	high (_display_content+60)
 26752  00AE08  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26753  00AE0A  6EDA               	movwf	fsr2h,c
 26754  00AE0C  0E01               	movlw	1
 26755  00AE0E  6EDF               	movwf	indf2,c
 26756                           
 26757                           ;display.c: 540: display_content[3][12+cntr] = '/';
 26758  00AE10  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26759  00AE12  6FBC               	movwf	??_display_prepare& (0+255),b
 26760  00AE14  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26761  00AE16  0E0C               	movlw	12
 26762  00AE18  27BC               	addwf	??_display_prepare& (0+255),f,b
 26763  00AE1A  0E00               	movlw	0
 26764  00AE1C  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26765  00AE1E  0E70               	movlw	low (_display_content+60)
 26766  00AE20  25BC               	addwf	??_display_prepare& (0+255),w,b
 26767  00AE22  6ED9               	movwf	fsr2l,c
 26768  00AE24  0E02               	movlw	high (_display_content+60)
 26769  00AE26  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26770  00AE28  6EDA               	movwf	fsr2h,c
 26771  00AE2A  0E2F               	movlw	47
 26772  00AE2C  6EDF               	movwf	indf2,c
 26773                           
 26774                           ;display.c: 541: display_content[3][13+cntr] = 's';
 26775  00AE2E  51C9               	movf	display_prepare@cntr& (0+255),w,b
 26776  00AE30  6FBC               	movwf	??_display_prepare& (0+255),b
 26777  00AE32  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26778  00AE34  0E0D               	movlw	13
 26779  00AE36  27BC               	addwf	??_display_prepare& (0+255),f,b
 26780  00AE38  0E00               	movlw	0
 26781  00AE3A  23BD               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26782  00AE3C  0E70               	movlw	low (_display_content+60)
 26783  00AE3E  25BC               	addwf	??_display_prepare& (0+255),w,b
 26784  00AE40  6ED9               	movwf	fsr2l,c
 26785  00AE42  0E02               	movlw	high (_display_content+60)
 26786  00AE44  21BD               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26787  00AE46  6EDA               	movwf	fsr2h,c
 26788  00AE48  0E73               	movlw	115
 26789  00AE4A                     L27:
 26790  00AE4A  6EDF               	movwf	indf2,c
 26791                           
 26792                           ;display.c: 542: break;
 26793  00AE4C  D095               	goto	l1385
 26794  00AE4E                     
 26795                           ; BSR set to: 0
 26796                           ;display.c: 545: _display_clear();
 26797                           
 26798                           ; BSR set to: 0
 26799  00AE4E  EC65  F0A7         	call	__display_clear	;wreg free
 26800                           
 26801                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 26802  00AE52  0101               	movlb	1	; () banked
 26803  00AE54  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 26804  00AE56  0100               	movlb	0	; () banked
 26805  00AE58  6F95               	movwf	__display_itoa@value& (0+255),b
 26806  00AE5A  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26807  00AE5C  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26808  00AE5E  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26809  00AE60  0E00               	movlw	0
 26810  00AE62  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26811  00AE64  0E34               	movlw	low _display_content
 26812  00AE66  6F98               	movwf	__display_itoa@text& (0+255),b
 26813  00AE68  0E02               	movlw	high _display_content
 26814  00AE6A  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26815  00AE6C  EC33  F075         	call	__display_itoa	;wreg free
 26816                           
 26817                           ;display.c: 547: if(PORTEbits.RE2)
 26818  00AE70  A484               	btfss	3972,2,c	;volatile
 26819  00AE72  D002               	goto	l1469
 26820                           
 26821                           ;display.c: 548: display_content[0][8] = 'H';
 26822  00AE74  0E48               	movlw	72
 26823  00AE76  D001               	goto	L31
 26824  00AE78                     l1469:
 26825                           
 26826                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 26827                           
 26828                           ; BSR set to: 2
 26829  00AE78  0E4C               	movlw	76
 26830  00AE7A                     L31:
 26831  00AE7A  0102               	movlb	2	; () banked
 26832  00AE7C  6F3C               	movwf	(_display_content+8)& (0+255),b
 26833                           
 26834                           ; BSR set to: 2
 26835                           ;display.c: 551: if(PORTEbits.RE0)
 26836                           
 26837                           ; BSR set to: 2
 26838  00AE7E  A084               	btfss	3972,0,c	;volatile
 26839  00AE80  D002               	goto	l1471
 26840                           
 26841                           ; BSR set to: 2
 26842                           ;display.c: 552: display_content[0][9] = 'H';
 26843  00AE82  0E48               	movlw	72
 26844  00AE84  D001               	goto	L32
 26845  00AE86                     l1471:
 26846                           
 26847                           ; BSR set to: 2
 26848                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 26849                           
 26850                           ; BSR set to: 2
 26851  00AE86  0E4C               	movlw	76
 26852  00AE88                     L32:
 26853  00AE88  6F3D               	movwf	(_display_content+9)& (0+255),b
 26854                           
 26855                           ; BSR set to: 2
 26856                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 26857                           
 26858                           ; BSR set to: 2
 26859  00AE8A  0101               	movlb	1	; () banked
 26860  00AE8C  5175               	movf	(_os+4)& (0+255),w,b	;volatile
 26861  00AE8E  0100               	movlb	0	; () banked
 26862  00AE90  6F95               	movwf	__display_itoa@value& (0+255),b
 26863  00AE92  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26864  00AE94  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26865  00AE96  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26866  00AE98  0E00               	movlw	0
 26867  00AE9A  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26868  00AE9C  0E48               	movlw	low (_display_content+20)
 26869  00AE9E  6F98               	movwf	__display_itoa@text& (0+255),b
 26870  00AEA0  0E02               	movlw	high (_display_content+20)
 26871  00AEA2  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26872  00AEA4  EC33  F075         	call	__display_itoa	;wreg free
 26873                           
 26874                           ;display.c: 556: if(PORTEbits.RE1)
 26875  00AEA8  A284               	btfss	3972,1,c	;volatile
 26876  00AEAA  D002               	goto	l1473
 26877                           
 26878                           ;display.c: 557: display_content[1][8] = 'H';
 26879  00AEAC  0E48               	movlw	72
 26880  00AEAE  D001               	goto	L33
 26881  00AEB0                     l1473:
 26882                           
 26883                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 26884                           
 26885                           ; BSR set to: 2
 26886  00AEB0  0E4C               	movlw	76
 26887  00AEB2                     L33:
 26888  00AEB2  0102               	movlb	2	; () banked
 26889  00AEB4  6F50               	movwf	(_display_content+28)& (0+255),b
 26890                           
 26891                           ; BSR set to: 2
 26892                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 26893                           
 26894                           ; BSR set to: 2
 26895  00AEB6  0101               	movlb	1	; () banked
 26896  00AEB8  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 26897  00AEBA  0100               	movlb	0	; () banked
 26898  00AEBC  6F95               	movwf	__display_itoa@value& (0+255),b
 26899  00AEBE  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26900  00AEC0  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26901  00AEC2  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26902  00AEC4  0E00               	movlw	0
 26903  00AEC6  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26904  00AEC8  0E5C               	movlw	low (_display_content+40)
 26905  00AECA  6F98               	movwf	__display_itoa@text& (0+255),b
 26906  00AECC  0E02               	movlw	high (_display_content+40)
 26907  00AECE  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26908  00AED0  EC33  F075         	call	__display_itoa	;wreg free
 26909                           
 26910                           ;display.c: 561: if(PORTAbits.RA0)
 26911  00AED4  A080               	btfss	3968,0,c	;volatile
 26912  00AED6  D002               	goto	l1475
 26913                           
 26914                           ;display.c: 562: display_content[2][8] = 'H';
 26915  00AED8  0E48               	movlw	72
 26916  00AEDA  D001               	goto	L34
 26917  00AEDC                     l1475:
 26918                           
 26919                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 26920                           
 26921                           ; BSR set to: 2
 26922  00AEDC  0E4C               	movlw	76
 26923  00AEDE                     L34:
 26924  00AEDE  0102               	movlb	2	; () banked
 26925  00AEE0  6F64               	movwf	(_display_content+48)& (0+255),b
 26926                           
 26927                           ; BSR set to: 2
 26928                           ;display.c: 565: if(PORTAbits.RA2)
 26929                           
 26930                           ; BSR set to: 2
 26931  00AEE2  A480               	btfss	3968,2,c	;volatile
 26932  00AEE4  D002               	goto	l1477
 26933                           
 26934                           ; BSR set to: 2
 26935                           ;display.c: 566: display_content[2][9] = 'H';
 26936  00AEE6  0E48               	movlw	72
 26937  00AEE8  D001               	goto	L35
 26938  00AEEA                     l1477:
 26939                           
 26940                           ; BSR set to: 2
 26941                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 26942                           
 26943                           ; BSR set to: 2
 26944  00AEEA  0E4C               	movlw	76
 26945  00AEEC                     L35:
 26946  00AEEC  6F65               	movwf	(_display_content+49)& (0+255),b
 26947                           
 26948                           ; BSR set to: 2
 26949                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 26950                           
 26951                           ; BSR set to: 2
 26952  00AEEE  0101               	movlb	1	; () banked
 26953  00AEF0  5177               	movf	(_os+6)& (0+255),w,b	;volatile
 26954  00AEF2  0100               	movlb	0	; () banked
 26955  00AEF4  6F95               	movwf	__display_itoa@value& (0+255),b
 26956  00AEF6  6B96               	clrf	(__display_itoa@value+1)& (0+255),b
 26957  00AEF8  BF95               	btfsc	__display_itoa@value& (0+255),7,b
 26958  00AEFA  0796               	decf	(__display_itoa@value+1)& (0+255),f,b
 26959  00AEFC  0E00               	movlw	0
 26960  00AEFE  6F97               	movwf	__display_itoa@decimals& (0+255),b
 26961  00AF00  0E70               	movlw	low (_display_content+60)
 26962  00AF02  6F98               	movwf	__display_itoa@text& (0+255),b
 26963  00AF04  0E02               	movlw	high (_display_content+60)
 26964  00AF06  6F99               	movwf	(__display_itoa@text+1)& (0+255),b
 26965  00AF08  EC33  F075         	call	__display_itoa	;wreg free
 26966                           
 26967                           ;display.c: 570: if(PORTAbits.RA1)
 26968  00AF0C  A280               	btfss	3968,1,c	;volatile
 26969  00AF0E  D002               	goto	l1479
 26970                           
 26971                           ;display.c: 571: display_content[3][8] = 'H';
 26972  00AF10  0E48               	movlw	72
 26973  00AF12  D001               	goto	L28
 26974  00AF14                     l1479:
 26975                           
 26976                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 26977                           
 26978                           ; BSR set to: 2
 26979  00AF14  0E4C               	movlw	76
 26980  00AF16                     L28:
 26981  00AF16  0102               	movlb	2	; () banked
 26982  00AF18  6F78               	movwf	(_display_content+68)& (0+255),b
 26983                           
 26984                           ; BSR set to: 2
 26985                           ;display.c: 575: }
 26986                           
 26987                           ; BSR set to: 2
 26988                           ;display.c: 574: break;
 26989  00AF1A  D02E               	goto	l1385
 26990  00AF1C                     l1376:
 26991                           
 26992                           ; BSR set to: 2
 26993  00AF1C  0101               	movlb	1	; () banked
 26994  00AF1E  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 26995  00AF20  0BF0               	andlw	240
 26996  00AF22  0100               	movlb	0	; () banked
 26997  00AF24  6FBC               	movwf	??_display_prepare& (0+255),b
 26998  00AF26  6BBD               	clrf	(??_display_prepare+1)& (0+255),b
 26999                           
 27000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27001                           ; Switch size 1, requested type "space"
 27002                           ; Number of cases is 1, Range of values is 0 to 0
 27003                           ; switch strategies available:
 27004                           ; Name         Instructions Cycles
 27005                           ; simple_byte            4     3 (average)
 27006                           ;	Chosen strategy is simple_byte
 27007  00AF28  51BD               	movf	(??_display_prepare+1)& (0+255),w,b
 27008  00AF2A  0A00               	xorlw	0	; case 0
 27009  00AF2C  A4D8               	btfss	status,2,c
 27010  00AF2E  D024               	goto	l1385
 27011                           
 27012                           ; BSR set to: 0
 27013                           ; Switch size 1, requested type "space"
 27014                           ; Number of cases is 10, Range of values is 0 to 240
 27015                           ; switch strategies available:
 27016                           ; Name         Instructions Cycles
 27017                           ; simple_byte           31    16 (average)
 27018                           ;	Chosen strategy is simple_byte
 27019  00AF30  51BC               	movf	??_display_prepare& (0+255),w,b
 27020  00AF32  0A00               	xorlw	0	; case 0
 27021  00AF34  B4D8               	btfsc	status,2,c
 27022  00AF36  EF9A  F051         	goto	l1377
 27023  00AF3A  0A10               	xorlw	16	; case 16
 27024  00AF3C  B4D8               	btfsc	status,2,c
 27025  00AF3E  EFC9  F051         	goto	l1386
 27026  00AF42  0A30               	xorlw	48	; case 32
 27027  00AF44  B4D8               	btfsc	status,2,c
 27028  00AF46  EF1B  F052         	goto	l1396
 27029  00AF4A  0A10               	xorlw	16	; case 48
 27030  00AF4C  B4D8               	btfsc	status,2,c
 27031  00AF4E  EF3F  F052         	goto	l1401
 27032  00AF52  0A70               	xorlw	112	; case 64
 27033  00AF54  B4D8               	btfsc	status,2,c
 27034  00AF56  EFB0  F052         	goto	l1410
 27035  00AF5A  0A10               	xorlw	16	; case 80
 27036  00AF5C  B4D8               	btfsc	status,2,c
 27037  00AF5E  D467               	goto	l1425
 27038  00AF60  0A30               	xorlw	48	; case 96
 27039  00AF62  B4D8               	btfsc	status,2,c
 27040  00AF64  D517               	goto	l1438
 27041  00AF66  0A10               	xorlw	16	; case 112
 27042  00AF68  B4D8               	btfsc	status,2,c
 27043  00AF6A  D616               	goto	l1452
 27044  00AF6C  0AF0               	xorlw	240	; case 128
 27045  00AF6E  B4D8               	btfsc	status,2,c
 27046  00AF70  D663               	goto	l1456
 27047  00AF72  0A70               	xorlw	112	; case 240
 27048  00AF74  B4D8               	btfsc	status,2,c
 27049  00AF76  D76B               	goto	l1468
 27050  00AF78                     l1385:
 27051                           
 27052                           ;display.c: 577: if(!PORTDbits.RD2)
 27053  00AF78  B483               	btfsc	3971,2,c	;volatile
 27054  00AF7A  0012               	return	
 27055                           
 27056                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 27057  00AF7C  0E45               	movlw	69
 27058  00AF7E  0102               	movlb	2	; () banked
 27059  00AF80  6F34               	movwf	_display_content& (0+255),b
 27060                           
 27061                           ;display.c: 580: display_content[0][1] = 'R';
 27062  00AF82  0E52               	movlw	82
 27063  00AF84  6F35               	movwf	(_display_content+1)& (0+255),b
 27064                           
 27065                           ;display.c: 581: display_content[0][2] = 'R';
 27066  00AF86  0E52               	movlw	82
 27067  00AF88  6F36               	movwf	(_display_content+2)& (0+255),b
 27068                           
 27069                           ;display.c: 582: display_content[0][3] = 'O';
 27070  00AF8A  0E4F               	movlw	79
 27071  00AF8C  6F37               	movwf	(_display_content+3)& (0+255),b
 27072                           
 27073                           ;display.c: 583: display_content[0][4] = 'R';
 27074  00AF8E  0E52               	movlw	82
 27075  00AF90  6F38               	movwf	(_display_content+4)& (0+255),b
 27076  00AF92  0012               	return	
 27077  00AF94                     __end_of_display_prepare:
 27078                           	opt stack 0
 27079                           tblptru	equ	0xFF8
 27080                           tblptrh	equ	0xFF7
 27081                           tblptrl	equ	0xFF6
 27082                           tablat	equ	0xFF5
 27083                           prodh	equ	0xFF4
 27084                           prodl	equ	0xFF3
 27085                           intcon	equ	0xFF2
 27086                           postinc0	equ	0xFEE
 27087                           wreg	equ	0xFE8
 27088                           indf1	equ	0xFE7
 27089                           postinc1	equ	0xFE6
 27090                           postdec1	equ	0xFE5
 27091                           plusw1	equ	0xFE3
 27092                           fsr1h	equ	0xFE2
 27093                           fsr1l	equ	0xFE1
 27094                           indf2	equ	0xFDF
 27095                           postinc2	equ	0xFDE
 27096                           postdec2	equ	0xFDD
 27097                           plusw2	equ	0xFDB
 27098                           fsr2h	equ	0xFDA
 27099                           fsr2l	equ	0xFD9
 27100                           status	equ	0xFD8
 27101                           
 27102 ;; *************** function _motor_speed_from_index *****************
 27103 ;; Defined at:
 27104 ;;		line 114 in file "motor.c"
 27105 ;; Parameters:    Size  Location     Type
 27106 ;;  speed_index     2   51[BANK0 ] unsigned int 
 27107 ;; Auto vars:     Size  Location     Type
 27108 ;;		None
 27109 ;; Return value:  Size  Location     Type
 27110 ;;                  2   51[BANK0 ] unsigned int 
 27111 ;; Registers used:
 27112 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27113 ;; Tracked objects:
 27114 ;;		On entry : 0/0
 27115 ;;		On exit  : 0/0
 27116 ;;		Unchanged: 0/0
 27117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27118 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27121 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27122 ;;Total ram usage:        2 bytes
 27123 ;; Hardware stack levels used:    1
 27124 ;; Hardware stack levels required when called:   12
 27125 ;; This function calls:
 27126 ;;		__motor_get_speed_in_degrees
 27127 ;; This function is called by:
 27128 ;;		_display_prepare
 27129 ;; This function uses a non-reentrant model
 27130 ;;
 27131                           
 27132                           	psect	text104
 27133  015964                     __ptext104:
 27134                           	opt stack 0
 27135  015964                     _motor_speed_from_index:
 27136                           	opt stack 17
 27137                           
 27138                           ;motor.c: 116: return _motor_get_speed_in_degrees(speed_index);
 27139                           
 27140                           ;incstack = 0
 27141  015964  C093  F087         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27142  015968  C094  F088         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27143  01596C  ECA2  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27144  015970  C087  F093         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27145  015974  C088  F094         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27146  015978  0012               	return	
 27147  01597A                     __end_of_motor_speed_from_index:
 27148                           	opt stack 0
 27149                           tblptru	equ	0xFF8
 27150                           tblptrh	equ	0xFF7
 27151                           tblptrl	equ	0xFF6
 27152                           tablat	equ	0xFF5
 27153                           prodh	equ	0xFF4
 27154                           prodl	equ	0xFF3
 27155                           intcon	equ	0xFF2
 27156                           postinc0	equ	0xFEE
 27157                           wreg	equ	0xFE8
 27158                           indf1	equ	0xFE7
 27159                           postinc1	equ	0xFE6
 27160                           postdec1	equ	0xFE5
 27161                           plusw1	equ	0xFE3
 27162                           fsr1h	equ	0xFE2
 27163                           fsr1l	equ	0xFE1
 27164                           indf2	equ	0xFDF
 27165                           postinc2	equ	0xFDE
 27166                           postdec2	equ	0xFDD
 27167                           plusw2	equ	0xFDB
 27168                           fsr2h	equ	0xFDA
 27169                           fsr2l	equ	0xFD9
 27170                           status	equ	0xFD8
 27171                           
 27172 ;; *************** function __motor_get_speed_in_degrees *****************
 27173 ;; Defined at:
 27174 ;;		line 75 in file "motor.c"
 27175 ;; Parameters:    Size  Location     Type
 27176 ;;  speed_index     2   39[BANK0 ] unsigned int 
 27177 ;; Auto vars:     Size  Location     Type
 27178 ;;  lookup          4   47[BANK0 ] unsigned long 
 27179 ;;  speed           4   43[BANK0 ] float 
 27180 ;; Return value:  Size  Location     Type
 27181 ;;                  2   39[BANK0 ] unsigned int 
 27182 ;; Registers used:
 27183 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27184 ;; Tracked objects:
 27185 ;;		On entry : 0/0
 27186 ;;		On exit  : 0/0
 27187 ;;		Unchanged: 0/0
 27188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27189 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27190 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27191 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27192 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27193 ;;Total ram usage:       12 bytes
 27194 ;; Hardware stack levels used:    1
 27195 ;; Hardware stack levels required when called:   11
 27196 ;; This function calls:
 27197 ;;		___fldiv
 27198 ;;		___fltol
 27199 ;;		___lmul
 27200 ;;		___xxtofl
 27201 ;; This function is called by:
 27202 ;;		_motor_speed_from_index
 27203 ;;		_motor_get_maximum_speed
 27204 ;;		_motor_get_current_speed
 27205 ;; This function uses a non-reentrant model
 27206 ;;
 27207                           
 27208                           	psect	text105
 27209  010544                     __ptext105:
 27210                           	opt stack 0
 27211  010544                     __motor_get_speed_in_degrees:
 27212                           	opt stack 17
 27213                           
 27214                           ;motor.c: 77: uint32_t lookup;;motor.c: 78: float speed;;motor.c: 80: lookup = motor_spe
      +                          ed_lookup[speed_index];
 27215                           
 27216                           ;incstack = 0
 27217  010544  90D8               	bcf	status,0,c
 27218  010546  0100               	movlb	0	; () banked
 27219  010548  3587               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27220  01054A  6EF6               	movwf	tblptrl,c
 27221  01054C  3588               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27222  01054E  6EF7               	movwf	tblptrh,c
 27223  010550  0E93               	movlw	low _motor_speed_lookup
 27224  010552  26F6               	addwf	tblptrl,f,c
 27225  010554  0E90               	movlw	high _motor_speed_lookup
 27226  010556  22F7               	addwfc	tblptrh,f,c
 27227  010558                     	if	1	;There are 3 active tblptr bytes
 27228  010558  6AF8               	clrf	tblptru,c
 27229  01055A  0E00               	movlw	low (__mediumconst shr (0+16))
 27230  01055C  22F8               	addwfc	tblptru,f,c
 27231  01055E                     	endif
 27232  01055E  0009               	tblrd		*+
 27233  010560  CFF5 F089          	movff	tablat,??__motor_get_speed_in_degrees
 27234  010564  0009               	tblrd		*+
 27235  010566  CFF5 F08A          	movff	tablat,??__motor_get_speed_in_degrees+1
 27236  01056A  C089  F08F         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27237  01056E  C08A  F090         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27238  010572  6B91               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27239  010574  6B92               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27240                           
 27241                           ; BSR set to: 0
 27242                           ;motor.c: 81: lookup *= 16;
 27243  010576  0E04               	movlw	4
 27244  010578                     u14935:
 27245  010578  90D8               	bcf	status,0,c
 27246  01057A  378F               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27247  01057C  3790               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27248  01057E  3791               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27249  010580  3792               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27250  010582  2EE8               	decfsz	wreg,f,c
 27251  010584  D7F9               	goto	u14935
 27252                           
 27253                           ; BSR set to: 0
 27254                           ;motor.c: 82: lookup *= 360;
 27255  010586  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27256  01058A  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27257  01058E  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27258  010592  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27259  010596  0E68               	movlw	104
 27260  010598  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27261  01059A  0E01               	movlw	1
 27262  01059C  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27263  01059E  0E00               	movlw	0
 27264  0105A0  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27265  0105A2  0E00               	movlw	0
 27266  0105A4  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27267  0105A6  EC7F  F0A4         	call	___lmul	;wreg free
 27268  0105AA  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27269  0105AE  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27270  0105B2  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27271  0105B6  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27272                           
 27273                           ;motor.c: 83: lookup *= 100;
 27274  0105BA  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27275  0105BE  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27276  0105C2  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27277  0105C6  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27278  0105CA  0E64               	movlw	100
 27279  0105CC  0100               	movlb	0	; () banked
 27280  0105CE  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27281  0105D0  0E00               	movlw	0
 27282  0105D2  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27283  0105D4  0E00               	movlw	0
 27284  0105D6  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27285  0105D8  0E00               	movlw	0
 27286  0105DA  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27287  0105DC  EC7F  F0A4         	call	___lmul	;wreg free
 27288  0105E0  C060  F08F         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27289  0105E4  C061  F090         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27290  0105E8  C062  F091         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27291  0105EC  C063  F092         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27292                           
 27293                           ;motor.c: 85: speed = (float) lookup;
 27294  0105F0  C08F  F060         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27295  0105F4  C090  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27296  0105F8  C091  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27297  0105FC  C092  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27298  010600  0E00               	movlw	0
 27299  010602  EC62  F081         	call	___xxtofl
 27300  010606  C060  F08B         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27301  01060A  C061  F08C         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27302  01060E  C062  F08D         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27303  010612  C063  F08E         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27304                           
 27305                           ;motor.c: 86: speed /= config.full_circle_in_steps;
 27306  010616  C08B  F06E         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27307  01061A  C08C  F06F         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27308  01061E  C08D  F070         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27309  010622  C08E  F071         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27310  010626  C1A1  F060         	movff	_config,___xxtofl@val
 27311  01062A  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 27312  01062E  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 27313  010632  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 27314  010636  0E00               	movlw	0
 27315  010638  EC62  F081         	call	___xxtofl
 27316  01063C  C060  F072         	movff	?___xxtofl,___fldiv@a
 27317  010640  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 27318  010644  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 27319  010648  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 27320  01064C  ECFC  F06D         	call	___fldiv	;wreg free
 27321  010650  C06E  F08B         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27322  010654  C06F  F08C         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27323  010658  C070  F08D         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27324  01065C  C071  F08E         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27325                           
 27326                           ;motor.c: 89: return (uint16_t) speed;
 27327  010660  C08B  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27328  010664  C08C  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27329  010668  C08D  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27330  01066C  C08E  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27331  010670  ECBA  F090         	call	___fltol	;wreg free
 27332  010674  C060  F087         	movff	?___fltol,?__motor_get_speed_in_degrees
 27333  010678  C061  F088         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27334  01067C  0012               	return	
 27335  01067E                     __end_of__motor_get_speed_in_degrees:
 27336                           	opt stack 0
 27337                           tblptru	equ	0xFF8
 27338                           tblptrh	equ	0xFF7
 27339                           tblptrl	equ	0xFF6
 27340                           tablat	equ	0xFF5
 27341                           prodh	equ	0xFF4
 27342                           prodl	equ	0xFF3
 27343                           intcon	equ	0xFF2
 27344                           postinc0	equ	0xFEE
 27345                           wreg	equ	0xFE8
 27346                           indf1	equ	0xFE7
 27347                           postinc1	equ	0xFE6
 27348                           postdec1	equ	0xFE5
 27349                           plusw1	equ	0xFE3
 27350                           fsr1h	equ	0xFE2
 27351                           fsr1l	equ	0xFE1
 27352                           indf2	equ	0xFDF
 27353                           postinc2	equ	0xFDE
 27354                           postdec2	equ	0xFDD
 27355                           plusw2	equ	0xFDB
 27356                           fsr2h	equ	0xFDA
 27357                           fsr2l	equ	0xFD9
 27358                           status	equ	0xFD8
 27359                           
 27360 ;; *************** function ___lmul *****************
 27361 ;; Defined at:
 27362 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 27363 ;; Parameters:    Size  Location     Type
 27364 ;;  multiplier      4    0[BANK0 ] unsigned long 
 27365 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 27366 ;; Auto vars:     Size  Location     Type
 27367 ;;  product         4    8[BANK0 ] unsigned long 
 27368 ;; Return value:  Size  Location     Type
 27369 ;;                  4    0[BANK0 ] unsigned long 
 27370 ;; Registers used:
 27371 ;;		wreg, status,2, status,0
 27372 ;; Tracked objects:
 27373 ;;		On entry : 0/0
 27374 ;;		On exit  : 0/0
 27375 ;;		Unchanged: 0/0
 27376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27377 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27378 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27379 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27380 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27381 ;;Total ram usage:       12 bytes
 27382 ;; Hardware stack levels used:    1
 27383 ;; Hardware stack levels required when called:   10
 27384 ;; This function calls:
 27385 ;;		Nothing
 27386 ;; This function is called by:
 27387 ;;		__motor_get_speed_in_degrees
 27388 ;;		_atol
 27389 ;; This function uses a non-reentrant model
 27390 ;;
 27391                           
 27392                           	psect	text106
 27393  0148FE                     __ptext106:
 27394                           	opt stack 0
 27395  0148FE                     ___lmul:
 27396                           	opt stack 16
 27397                           
 27398                           ;incstack = 0
 27399  0148FE  0E00               	movlw	0
 27400  014900  0100               	movlb	0	; () banked
 27401  014902  6F68               	movwf	___lmul@product& (0+255),b
 27402  014904  0E00               	movlw	0
 27403  014906  6F69               	movwf	(___lmul@product+1)& (0+255),b
 27404  014908  0E00               	movlw	0
 27405  01490A  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 27406  01490C  0E00               	movlw	0
 27407  01490E  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 27408  014910                     
 27409                           ; BSR set to: 0
 27410                           
 27411                           ; BSR set to: 0
 27412  014910  A160               	btfss	___lmul@multiplier& (0+255),0,b
 27413  014912  D008               	goto	l2995
 27414                           
 27415                           ; BSR set to: 0
 27416  014914  5164               	movf	___lmul@multiplicand& (0+255),w,b
 27417  014916  2768               	addwf	___lmul@product& (0+255),f,b
 27418  014918  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 27419  01491A  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 27420  01491C  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 27421  01491E  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 27422  014920  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 27423  014922  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 27424  014924                     l2995:
 27425                           
 27426                           ; BSR set to: 0
 27427                           
 27428                           ; BSR set to: 0
 27429  014924  90D8               	bcf	status,0,c
 27430  014926  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 27431  014928  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 27432  01492A  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 27433  01492C  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 27434                           
 27435                           ; BSR set to: 0
 27436  01492E  90D8               	bcf	status,0,c
 27437  014930  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 27438  014932  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 27439  014934  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 27440  014936  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 27441  014938  5160               	movf	___lmul@multiplier& (0+255),w,b
 27442  01493A  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 27443  01493C  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 27444  01493E  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 27445  014940  A4D8               	btfss	status,2,c
 27446  014942  D7E6               	goto	l2994
 27447                           
 27448                           ; BSR set to: 0
 27449  014944  C068  F060         	movff	___lmul@product,?___lmul
 27450  014948  C069  F061         	movff	___lmul@product+1,?___lmul+1
 27451  01494C  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 27452  014950  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 27453                           
 27454                           ; BSR set to: 0
 27455  014954  0012               	return		;funcret
 27456  014956                     __end_of___lmul:
 27457                           	opt stack 0
 27458                           tblptru	equ	0xFF8
 27459                           tblptrh	equ	0xFF7
 27460                           tblptrl	equ	0xFF6
 27461                           tablat	equ	0xFF5
 27462                           prodh	equ	0xFF4
 27463                           prodl	equ	0xFF3
 27464                           intcon	equ	0xFF2
 27465                           postinc0	equ	0xFEE
 27466                           wreg	equ	0xFE8
 27467                           indf1	equ	0xFE7
 27468                           postinc1	equ	0xFE6
 27469                           postdec1	equ	0xFE5
 27470                           plusw1	equ	0xFE3
 27471                           fsr1h	equ	0xFE2
 27472                           fsr1l	equ	0xFE1
 27473                           indf2	equ	0xFDF
 27474                           postinc2	equ	0xFDE
 27475                           postdec2	equ	0xFDD
 27476                           plusw2	equ	0xFDB
 27477                           fsr2h	equ	0xFDA
 27478                           fsr2l	equ	0xFD9
 27479                           status	equ	0xFD8
 27480                           
 27481 ;; *************** function __display_signed_itoa *****************
 27482 ;; Defined at:
 27483 ;;		line 120 in file "display.c"
 27484 ;; Parameters:    Size  Location     Type
 27485 ;;  value           2   47[BANK0 ] int 
 27486 ;;  text            2   49[BANK0 ] PTR unsigned char 
 27487 ;;		 -> display_prepare@temp(10), 
 27488 ;; Auto vars:     Size  Location     Type
 27489 ;;		None
 27490 ;; Return value:  Size  Location     Type
 27491 ;;                  1    wreg      void 
 27492 ;; Registers used:
 27493 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27494 ;; Tracked objects:
 27495 ;;		On entry : 0/0
 27496 ;;		On exit  : 0/0
 27497 ;;		Unchanged: 0/0
 27498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27499 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27500 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27501 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27502 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27503 ;;Total ram usage:        4 bytes
 27504 ;; Hardware stack levels used:    1
 27505 ;; Hardware stack levels required when called:   14
 27506 ;; This function calls:
 27507 ;;		__display_padded_itoa
 27508 ;; This function is called by:
 27509 ;;		_display_prepare
 27510 ;; This function uses a non-reentrant model
 27511 ;;
 27512                           
 27513                           	psect	text107
 27514  014FEA                     __ptext107:
 27515                           	opt stack 0
 27516  014FEA                     __display_signed_itoa:
 27517                           	opt stack 15
 27518                           
 27519                           ;display.c: 122: if(value<0)
 27520                           
 27521                           ; BSR set to: 0
 27522                           ;incstack = 0
 27523  014FEA  0100               	movlb	0	; () banked
 27524  014FEC  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 27525  014FEE  D00A               	goto	l1326
 27526                           
 27527                           ; BSR set to: 0
 27528                           ;display.c: 123: {;display.c: 124: value = -value;
 27529  014FF0  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 27530  014FF2  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 27531  014FF4  B0D8               	btfsc	status,0,c
 27532  014FF6  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 27533                           
 27534                           ; BSR set to: 0
 27535                           ;display.c: 125: text[0] = '-';
 27536  014FF8  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27537  014FFC  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27538  015000  0E2D               	movlw	45
 27539  015002  D005               	goto	L37
 27540  015004                     l1326:
 27541                           
 27542                           ; BSR set to: 0
 27543                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 27544                           
 27545                           ; BSR set to: 0
 27546  015004  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 27547  015008  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 27548  01500C  0E2B               	movlw	43
 27549  01500E                     L37:
 27550  01500E  6EDF               	movwf	indf2,c
 27551                           
 27552                           ; BSR set to: 0
 27553                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 27554                           
 27555                           ; BSR set to: 0
 27556  015010  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 27557  015014  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 27558  015018  0E00               	movlw	0
 27559  01501A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 27560  01501C  0E01               	movlw	1
 27561  01501E  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 27562  015020  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 27563  015022  0E00               	movlw	0
 27564  015024  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 27565  015026  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 27566  015028  EC6B  F08F         	call	__display_padded_itoa	;wreg free
 27567  01502C  0012               	return		;funcret
 27568  01502E                     __end_of__display_signed_itoa:
 27569                           	opt stack 0
 27570                           tblptru	equ	0xFF8
 27571                           tblptrh	equ	0xFF7
 27572                           tblptrl	equ	0xFF6
 27573                           tablat	equ	0xFF5
 27574                           prodh	equ	0xFF4
 27575                           prodl	equ	0xFF3
 27576                           intcon	equ	0xFF2
 27577                           postinc0	equ	0xFEE
 27578                           wreg	equ	0xFE8
 27579                           indf1	equ	0xFE7
 27580                           postinc1	equ	0xFE6
 27581                           postdec1	equ	0xFE5
 27582                           plusw1	equ	0xFE3
 27583                           fsr1h	equ	0xFE2
 27584                           fsr1l	equ	0xFE1
 27585                           indf2	equ	0xFDF
 27586                           postinc2	equ	0xFDE
 27587                           postdec2	equ	0xFDD
 27588                           plusw2	equ	0xFDB
 27589                           fsr2h	equ	0xFDA
 27590                           fsr2l	equ	0xFD9
 27591                           status	equ	0xFD8
 27592                           
 27593 ;; *************** function __display_padded_itoa *****************
 27594 ;; Defined at:
 27595 ;;		line 98 in file "display.c"
 27596 ;; Parameters:    Size  Location     Type
 27597 ;;  value           2   24[BANK0 ] int 
 27598 ;;  length          1   26[BANK0 ] unsigned char 
 27599 ;;  text            2   27[BANK0 ] PTR unsigned char 
 27600 ;;		 -> display_prepare@temp(10), 
 27601 ;; Auto vars:     Size  Location     Type
 27602 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 27603 ;;  padding         1   46[BANK0 ] unsigned char 
 27604 ;;  pos             1   45[BANK0 ] unsigned char 
 27605 ;;  len             1   44[BANK0 ] unsigned char 
 27606 ;; Return value:  Size  Location     Type
 27607 ;;                  1    wreg      void 
 27608 ;; Registers used:
 27609 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27610 ;; Tracked objects:
 27611 ;;		On entry : 0/0
 27612 ;;		On exit  : 0/0
 27613 ;;		Unchanged: 0/0
 27614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27615 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27616 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27617 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27618 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27619 ;;Total ram usage:       23 bytes
 27620 ;; Hardware stack levels used:    1
 27621 ;; Hardware stack levels required when called:   13
 27622 ;; This function calls:
 27623 ;;		_itoa
 27624 ;;		_strlen
 27625 ;; This function is called by:
 27626 ;;		__display_signed_itoa
 27627 ;;		_display_prepare
 27628 ;; This function uses a non-reentrant model
 27629 ;;
 27630                           
 27631                           	psect	text108
 27632  011ED6                     __ptext108:
 27633                           	opt stack 0
 27634  011ED6                     __display_padded_itoa:
 27635                           	opt stack 15
 27636                           
 27637                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 27638                           
 27639                           ;incstack = 0
 27640  011ED6  0E82               	movlw	low __display_padded_itoa@tmp
 27641  011ED8  0100               	movlb	0	; () banked
 27642  011EDA  6F70               	movwf	itoa@buf& (0+255),b
 27643  011EDC  0E00               	movlw	high __display_padded_itoa@tmp
 27644  011EDE  6F71               	movwf	(itoa@buf+1)& (0+255),b
 27645  011EE0  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 27646  011EE4  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 27647  011EE8  0E00               	movlw	0
 27648  011EEA  6F75               	movwf	(itoa@base+1)& (0+255),b
 27649  011EEC  0E0A               	movlw	10
 27650  011EEE  6F74               	movwf	itoa@base& (0+255),b
 27651  011EF0  EC17  F0A8         	call	_itoa	;wreg free
 27652                           
 27653                           ;display.c: 106: len = strlen(tmp);
 27654  011EF4  0E82               	movlw	low __display_padded_itoa@tmp
 27655  011EF6  0100               	movlb	0	; () banked
 27656  011EF8  6F60               	movwf	strlen@s& (0+255),b
 27657  011EFA  0E00               	movlw	high __display_padded_itoa@tmp
 27658  011EFC  6F61               	movwf	(strlen@s+1)& (0+255),b
 27659  011EFE  ECBD  F0A8         	call	_strlen	;wreg free
 27660  011F02  0100               	movlb	0	; () banked
 27661  011F04  5160               	movf	?_strlen& (0+255),w,b
 27662  011F06  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 27663                           
 27664                           ; BSR set to: 0
 27665                           ;display.c: 107: padding = 0;
 27666  011F08  0E00               	movlw	0
 27667  011F0A  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 27668                           
 27669                           ;display.c: 108: while((padding+len)<length)
 27670  011F0C  D00B               	goto	l1317
 27671  011F0E                     
 27672                           ; BSR set to: 0
 27673                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 27674                           
 27675                           ; BSR set to: 0
 27676  011F0E  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27677  011F10  0D01               	mullw	1
 27678  011F12  50F3               	movf	prodl,w,c
 27679  011F14  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27680  011F16  6ED9               	movwf	fsr2l,c
 27681  011F18  50F4               	movf	prodh,w,c
 27682  011F1A  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27683  011F1C  6EDA               	movwf	fsr2h,c
 27684  011F1E  0E20               	movlw	32
 27685  011F20  6EDF               	movwf	indf2,c
 27686                           
 27687                           ; BSR set to: 0
 27688                           ;display.c: 111: ++padding;
 27689  011F22  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 27690  011F24                     l1317:
 27691                           
 27692                           ; BSR set to: 0
 27693                           
 27694                           ; BSR set to: 0
 27695  011F24  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 27696  011F26  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 27697  011F28  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27698  011F2A  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 27699  011F2C  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 27700  011F30  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 27701  011F32  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 27702  011F34  0E00               	movlw	0
 27703  011F36  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 27704  011F38  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27705  011F3A  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 27706  011F3C  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 27707  011F3E  0A80               	xorlw	128
 27708  011F40  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 27709  011F42  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27710  011F44  0A80               	xorlw	128
 27711  011F46  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 27712  011F48  A0D8               	btfss	status,0,c
 27713  011F4A  D7E1               	goto	l1318
 27714                           
 27715                           ; BSR set to: 0
 27716                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 27717                           
 27718                           ; BSR set to: 0
 27719  011F4C  0E00               	movlw	0
 27720  011F4E  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 27721  011F50  D018               	goto	l1320
 27722  011F52                     
 27723                           ; BSR set to: 0
 27724                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 27725                           
 27726                           ; BSR set to: 0
 27727  011F52  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27728  011F54  0D01               	mullw	1
 27729  011F56  0E82               	movlw	low __display_padded_itoa@tmp
 27730  011F58  24F3               	addwf	prodl,w,c
 27731  011F5A  6ED9               	movwf	fsr2l,c
 27732  011F5C  0E00               	movlw	high __display_padded_itoa@tmp
 27733  011F5E  20F4               	addwfc	prodh,w,c
 27734  011F60  6EDA               	movwf	fsr2h,c
 27735  011F62  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27736  011F64  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27737  011F68  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27738  011F6A  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27739  011F6C  0E00               	movlw	0
 27740  011F6E  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27741  011F70  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27742  011F72  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27743  011F74  6EE1               	movwf	fsr1l,c
 27744  011F76  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27745  011F78  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27746  011F7A  6EE2               	movwf	fsr1h,c
 27747  011F7C  CFDF FFE7          	movff	indf2,indf1
 27748                           
 27749                           ; BSR set to: 0
 27750  011F80  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 27751  011F82                     l1320:
 27752                           
 27753                           ; BSR set to: 0
 27754                           
 27755                           ; BSR set to: 0
 27756  011F82  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 27757  011F84  0D01               	mullw	1
 27758  011F86  0E82               	movlw	low __display_padded_itoa@tmp
 27759  011F88  24F3               	addwf	prodl,w,c
 27760  011F8A  6ED9               	movwf	fsr2l,c
 27761  011F8C  0E00               	movlw	high __display_padded_itoa@tmp
 27762  011F8E  20F4               	addwfc	prodh,w,c
 27763  011F90  6EDA               	movwf	fsr2h,c
 27764  011F92  50DF               	movf	indf2,w,c
 27765  011F94  A4D8               	btfss	status,2,c
 27766  011F96  D7DD               	goto	l1321
 27767                           
 27768                           ; BSR set to: 0
 27769                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 27770                           
 27771                           ; BSR set to: 0
 27772  011F98  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 27773  011F9A  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 27774  011F9E  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 27775  011FA0  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 27776  011FA2  0E00               	movlw	0
 27777  011FA4  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 27778  011FA6  517D               	movf	??__display_padded_itoa& (0+255),w,b
 27779  011FA8  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 27780  011FAA  6ED9               	movwf	fsr2l,c
 27781  011FAC  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 27782  011FAE  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 27783  011FB0  6EDA               	movwf	fsr2h,c
 27784  011FB2  0E00               	movlw	0
 27785  011FB4  6EDF               	movwf	indf2,c
 27786                           
 27787                           ; BSR set to: 0
 27788  011FB6  0012               	return		;funcret
 27789  011FB8                     __end_of__display_padded_itoa:
 27790                           	opt stack 0
 27791                           tblptru	equ	0xFF8
 27792                           tblptrh	equ	0xFF7
 27793                           tblptrl	equ	0xFF6
 27794                           tablat	equ	0xFF5
 27795                           prodh	equ	0xFF4
 27796                           prodl	equ	0xFF3
 27797                           intcon	equ	0xFF2
 27798                           postinc0	equ	0xFEE
 27799                           wreg	equ	0xFE8
 27800                           indf1	equ	0xFE7
 27801                           postinc1	equ	0xFE6
 27802                           postdec1	equ	0xFE5
 27803                           plusw1	equ	0xFE3
 27804                           fsr1h	equ	0xFE2
 27805                           fsr1l	equ	0xFE1
 27806                           indf2	equ	0xFDF
 27807                           postinc2	equ	0xFDE
 27808                           postdec2	equ	0xFDD
 27809                           plusw2	equ	0xFDB
 27810                           fsr2h	equ	0xFDA
 27811                           fsr2l	equ	0xFD9
 27812                           status	equ	0xFD8
 27813                           
 27814 ;; *************** function __display_itoa_long *****************
 27815 ;; Defined at:
 27816 ;;		line 202 in file "display.c"
 27817 ;; Parameters:    Size  Location     Type
 27818 ;;  value           4   77[BANK0 ] long 
 27819 ;;  decimals        1   81[BANK0 ] unsigned char 
 27820 ;;  text            2   82[BANK0 ] PTR unsigned char 
 27821 ;;		 -> display_prepare@temp(10), 
 27822 ;; Auto vars:     Size  Location     Type
 27823 ;;  short_value     2   89[BANK0 ] int 
 27824 ;;  last_digit      1   91[BANK0 ] char 
 27825 ;;  length          1   88[BANK0 ] unsigned char 
 27826 ;; Return value:  Size  Location     Type
 27827 ;;                  1    wreg      void 
 27828 ;; Registers used:
 27829 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 27830 ;; Tracked objects:
 27831 ;;		On entry : 0/0
 27832 ;;		On exit  : 0/0
 27833 ;;		Unchanged: 0/0
 27834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27835 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27836 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27837 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27838 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27839 ;;Total ram usage:       15 bytes
 27840 ;; Hardware stack levels used:    1
 27841 ;; Hardware stack levels required when called:   14
 27842 ;; This function calls:
 27843 ;;		___aldiv
 27844 ;;		___almod
 27845 ;;		__display_itoa
 27846 ;;		_strlen
 27847 ;; This function is called by:
 27848 ;;		_display_prepare
 27849 ;; This function uses a non-reentrant model
 27850 ;;
 27851                           
 27852                           	psect	text109
 27853  010C36                     __ptext109:
 27854                           	opt stack 0
 27855  010C36                     __display_itoa_long:
 27856                           	opt stack 15
 27857                           
 27858                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 27859                           
 27860                           ; BSR set to: 0
 27861                           ;incstack = 0
 27862  010C36  C0AD  F0B9         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 27863  010C3A  C0AE  F0BA         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 27864                           
 27865                           ;display.c: 209: if(short_value==value)
 27866  010C3E  C0B9  F0B4         	movff	__display_itoa_long@short_value,??__display_itoa_long
 27867  010C42  C0BA  F0B5         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 27868  010C46  0E00               	movlw	0
 27869  010C48  0100               	movlb	0	; () banked
 27870  010C4A  BFB5               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 27871  010C4C  0EFF               	movlw	255
 27872  010C4E  6FB6               	movwf	(??__display_itoa_long+2)& (0+255),b
 27873  010C50  6FB7               	movwf	(??__display_itoa_long+3)& (0+255),b
 27874  010C52  51AD               	movf	__display_itoa_long@value& (0+255),w,b
 27875  010C54  19B4               	xorwf	??__display_itoa_long& (0+255),w,b
 27876  010C56  E117               	bnz	l17185
 27877  010C58  51AE               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 27878  010C5A  19B5               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 27879  010C5C  E114               	bnz	l17185
 27880  010C5E  51AF               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 27881  010C60  19B6               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 27882  010C62  E111               	bnz	l17185
 27883  010C64  51B0               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 27884  010C66  19B7               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 27885  010C68  A4D8               	btfss	status,2,c
 27886  010C6A  D00D               	goto	l1353
 27887                           
 27888                           ; BSR set to: 0
 27889                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 27890  010C6C  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27891  010C70  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27892  010C74  C0B1  F097         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 27893  010C78  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27894  010C7C  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27895  010C80  EC33  F075         	call	__display_itoa	;wreg free
 27896                           
 27897                           ;display.c: 212: }
 27898  010C84  0012               	return	
 27899  010C86                     l1353:
 27900  010C86                     l17185:
 27901                           
 27902                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 27903  010C86  C0AD  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 27904  010C8A  C0AE  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 27905  010C8E  C0AF  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 27906  010C92  C0B0  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 27907  010C96  0E0A               	movlw	10
 27908  010C98  0100               	movlb	0	; () banked
 27909  010C9A  6F64               	movwf	___aldiv@divisor& (0+255),b
 27910  010C9C  0E00               	movlw	0
 27911  010C9E  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 27912  010CA0  0E00               	movlw	0
 27913  010CA2  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 27914  010CA4  0E00               	movlw	0
 27915  010CA6  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 27916  010CA8  EC13  F094         	call	___aldiv	;wreg free
 27917  010CAC  C060  F0B9         	movff	?___aldiv,__display_itoa_long@short_value
 27918  010CB0  C061  F0BA         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 27919                           
 27920                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 27921  010CB4  C0B9  F095         	movff	__display_itoa_long@short_value,__display_itoa@value
 27922  010CB8  C0BA  F096         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 27923  010CBC  0100               	movlb	0	; () banked
 27924  010CBE  05B1               	decf	__display_itoa_long@decimals& (0+255),w,b
 27925  010CC0  6F97               	movwf	__display_itoa@decimals& (0+255),b
 27926  010CC2  C0B2  F098         	movff	__display_itoa_long@text,__display_itoa@text
 27927  010CC6  C0B3  F099         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 27928  010CCA  EC33  F075         	call	__display_itoa	;wreg free
 27929                           
 27930                           ;display.c: 217: length = strlen(text);
 27931  010CCE  C0B2  F060         	movff	__display_itoa_long@text,strlen@s
 27932  010CD2  C0B3  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 27933  010CD6  ECBD  F0A8         	call	_strlen	;wreg free
 27934  010CDA  0100               	movlb	0	; () banked
 27935  010CDC  5160               	movf	?_strlen& (0+255),w,b
 27936  010CDE  6FB8               	movwf	__display_itoa_long@length& (0+255),b
 27937                           
 27938                           ; BSR set to: 0
 27939                           ;display.c: 218: last_digit = value % 10;
 27940  010CE0  C0AD  F060         	movff	__display_itoa_long@value,___almod@dividend
 27941  010CE4  C0AE  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 27942  010CE8  C0AF  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 27943  010CEC  C0B0  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 27944  010CF0  0E0A               	movlw	10
 27945  010CF2  6F64               	movwf	___almod@divisor& (0+255),b
 27946  010CF4  0E00               	movlw	0
 27947  010CF6  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 27948  010CF8  0E00               	movlw	0
 27949  010CFA  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 27950  010CFC  0E00               	movlw	0
 27951  010CFE  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 27952  010D00  EC25  F098         	call	___almod	;wreg free
 27953  010D04  0100               	movlb	0	; () banked
 27954  010D06  5160               	movf	?___almod& (0+255),w,b
 27955  010D08  6FBB               	movwf	__display_itoa_long@last_digit& (0+255),b
 27956                           
 27957                           ; BSR set to: 0
 27958                           ;display.c: 219: if(last_digit<0)
 27959  010D0A  BFBB               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 27960                           
 27961                           ; BSR set to: 0
 27962                           ;display.c: 220: last_digit = -last_digit;
 27963  010D0C  6DBB               	negf	__display_itoa_long@last_digit& (0+255),b
 27964                           
 27965                           ; BSR set to: 0
 27966                           ;display.c: 221: text[length] = last_digit + 0x30;
 27967                           
 27968                           ; BSR set to: 0
 27969  010D0E  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27970  010D10  0D01               	mullw	1
 27971  010D12  50F3               	movf	prodl,w,c
 27972  010D14  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27973  010D16  6ED9               	movwf	fsr2l,c
 27974  010D18  50F4               	movf	prodh,w,c
 27975  010D1A  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 27976  010D1C  6EDA               	movwf	fsr2h,c
 27977  010D1E  51BB               	movf	__display_itoa_long@last_digit& (0+255),w,b
 27978  010D20  0F30               	addlw	48
 27979  010D22  6EDF               	movwf	indf2,c
 27980                           
 27981                           ; BSR set to: 0
 27982                           ;display.c: 222: text[length+1] = 0x00;
 27983  010D24  51B8               	movf	__display_itoa_long@length& (0+255),w,b
 27984  010D26  6FB4               	movwf	??__display_itoa_long& (0+255),b
 27985  010D28  6BB5               	clrf	(??__display_itoa_long+1)& (0+255),b
 27986  010D2A  0E01               	movlw	1
 27987  010D2C  27B4               	addwf	??__display_itoa_long& (0+255),f,b
 27988  010D2E  0E00               	movlw	0
 27989  010D30  23B5               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 27990  010D32  51B4               	movf	??__display_itoa_long& (0+255),w,b
 27991  010D34  25B2               	addwf	__display_itoa_long@text& (0+255),w,b
 27992  010D36  6ED9               	movwf	fsr2l,c
 27993  010D38  51B5               	movf	(??__display_itoa_long+1)& (0+255),w,b
 27994  010D3A  21B3               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 27995  010D3C  6EDA               	movwf	fsr2h,c
 27996  010D3E  0E00               	movlw	0
 27997  010D40  6EDF               	movwf	indf2,c
 27998  010D42  0012               	return	
 27999  010D44                     __end_of__display_itoa_long:
 28000                           	opt stack 0
 28001                           tblptru	equ	0xFF8
 28002                           tblptrh	equ	0xFF7
 28003                           tblptrl	equ	0xFF6
 28004                           tablat	equ	0xFF5
 28005                           prodh	equ	0xFF4
 28006                           prodl	equ	0xFF3
 28007                           intcon	equ	0xFF2
 28008                           postinc0	equ	0xFEE
 28009                           wreg	equ	0xFE8
 28010                           indf1	equ	0xFE7
 28011                           postinc1	equ	0xFE6
 28012                           postdec1	equ	0xFE5
 28013                           plusw1	equ	0xFE3
 28014                           fsr1h	equ	0xFE2
 28015                           fsr1l	equ	0xFE1
 28016                           indf2	equ	0xFDF
 28017                           postinc2	equ	0xFDE
 28018                           postdec2	equ	0xFDD
 28019                           plusw2	equ	0xFDB
 28020                           fsr2h	equ	0xFDA
 28021                           fsr2l	equ	0xFD9
 28022                           status	equ	0xFD8
 28023                           
 28024 ;; *************** function __display_itoa *****************
 28025 ;; Defined at:
 28026 ;;		line 134 in file "display.c"
 28027 ;; Parameters:    Size  Location     Type
 28028 ;;  value           2   53[BANK0 ] int 
 28029 ;;  decimals        1   55[BANK0 ] unsigned char 
 28030 ;;  text            2   56[BANK0 ] PTR unsigned char 
 28031 ;;		 -> display_prepare@temp(10), display_content(80), 
 28032 ;; Auto vars:     Size  Location     Type
 28033 ;;  tmp            10   64[BANK0 ] unsigned char [10]
 28034 ;;  pos             1   76[BANK0 ] unsigned char 
 28035 ;;  missing         1   75[BANK0 ] char 
 28036 ;;  len             1   74[BANK0 ] unsigned char 
 28037 ;; Return value:  Size  Location     Type
 28038 ;;                  1    wreg      void 
 28039 ;; Registers used:
 28040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28041 ;; Tracked objects:
 28042 ;;		On entry : 0/0
 28043 ;;		On exit  : 0/0
 28044 ;;		Unchanged: 0/0
 28045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28046 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28047 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28048 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28049 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28050 ;;Total ram usage:       24 bytes
 28051 ;; Hardware stack levels used:    1
 28052 ;; Hardware stack levels required when called:   13
 28053 ;; This function calls:
 28054 ;;		_itoa
 28055 ;;		_strlen
 28056 ;; This function is called by:
 28057 ;;		__display_itoa_long
 28058 ;;		_display_prepare
 28059 ;; This function uses a non-reentrant model
 28060 ;;
 28061                           
 28062                           	psect	text110
 28063  00EA66                     __ptext110:
 28064                           	opt stack 0
 28065  00EA66                     __display_itoa:
 28066                           	opt stack 15
 28067                           
 28068                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 28069                           
 28070                           ;incstack = 0
 28071  00EA66  0EA0               	movlw	low __display_itoa@tmp
 28072  00EA68  0100               	movlb	0	; () banked
 28073  00EA6A  6F70               	movwf	itoa@buf& (0+255),b
 28074  00EA6C  0E00               	movlw	high __display_itoa@tmp
 28075  00EA6E  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28076  00EA70  C095  F072         	movff	__display_itoa@value,itoa@val
 28077  00EA74  C096  F073         	movff	__display_itoa@value+1,itoa@val+1
 28078  00EA78  0E00               	movlw	0
 28079  00EA7A  6F75               	movwf	(itoa@base+1)& (0+255),b
 28080  00EA7C  0E0A               	movlw	10
 28081  00EA7E  6F74               	movwf	itoa@base& (0+255),b
 28082  00EA80  EC17  F0A8         	call	_itoa	;wreg free
 28083                           
 28084                           ;display.c: 141: len = strlen(tmp);
 28085  00EA84  0EA0               	movlw	low __display_itoa@tmp
 28086  00EA86  0100               	movlb	0	; () banked
 28087  00EA88  6F60               	movwf	strlen@s& (0+255),b
 28088  00EA8A  0E00               	movlw	high __display_itoa@tmp
 28089  00EA8C  6F61               	movwf	(strlen@s+1)& (0+255),b
 28090  00EA8E  ECBD  F0A8         	call	_strlen	;wreg free
 28091  00EA92  0100               	movlb	0	; () banked
 28092  00EA94  5160               	movf	?_strlen& (0+255),w,b
 28093  00EA96  6FAA               	movwf	__display_itoa@len& (0+255),b
 28094                           
 28095                           ; BSR set to: 0
 28096                           ;display.c: 143: if(value<0)
 28097  00EA98  AF96               	btfss	(__display_itoa@value+1)& (0+255),7,b
 28098  00EA9A  D054               	goto	l1331
 28099                           
 28100                           ; BSR set to: 0
 28101                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 28102  00EA9C  51AA               	movf	__display_itoa@len& (0+255),w,b
 28103  00EA9E  0800               	sublw	0
 28104  00EAA0  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28105  00EAA2  0F02               	addlw	2
 28106  00EAA4  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28107                           
 28108                           ;display.c: 146: if(missing>0)
 28109  00EAA6  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28110  00EAA8  0A80               	xorlw	128
 28111  00EAAA  0F7F               	addlw	-129
 28112  00EAAC  A0D8               	btfss	status,0,c
 28113  00EAAE  D090               	goto	l1338
 28114                           
 28115                           ; BSR set to: 0
 28116                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 28117  00EAB0  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28118  00EAB4                     l15499:
 28119                           
 28120                           ; BSR set to: 0
 28121  00EAB4  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28122  00EAB6  B4D8               	btfsc	status,2,c
 28123  00EAB8  D042               	goto	u14290
 28124                           
 28125                           ; BSR set to: 0
 28126                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 28127                           
 28128                           ; BSR set to: 0
 28129                           
 28130                           ; BSR set to: 0
 28131  00EABA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28132  00EABC  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28133  00EABE  D004               	goto	u14280
 28134  00EAC0  0AFF               	xorlw	255
 28135  00EAC2  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28136  00EAC4  B0D8               	btfsc	status,0,c
 28137  00EAC6  D02A               	goto	l1335
 28138  00EAC8                     u14280:
 28139                           
 28140                           ; BSR set to: 0
 28141                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 28142  00EAC8  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28143  00EACC  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28144  00EACE  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28145  00EAD0  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28146  00EAD2  1F9A               	comf	??__display_itoa& (0+255),f,b
 28147  00EAD4  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28148  00EAD6  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28149  00EAD8  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28150  00EADA  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28151  00EADC  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28152  00EADE  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28153  00EAE0  519A               	movf	??__display_itoa& (0+255),w,b
 28154  00EAE2  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28155  00EAE4  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28156  00EAE6  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28157  00EAE8  0E01               	movlw	1
 28158  00EAEA  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28159  00EAEC  0E00               	movlw	0
 28160  00EAEE  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28161  00EAF0  0EA0               	movlw	low __display_itoa@tmp
 28162  00EAF2  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28163  00EAF4  6ED9               	movwf	fsr2l,c
 28164  00EAF6  0E00               	movlw	high __display_itoa@tmp
 28165  00EAF8  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28166  00EAFA  6EDA               	movwf	fsr2h,c
 28167  00EAFC  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28168  00EAFE  6F9E               	movwf	(??__display_itoa+4)& (0+255),b
 28169  00EB00  6B9F               	clrf	(??__display_itoa+5)& (0+255),b
 28170  00EB02  0E01               	movlw	1
 28171  00EB04  279E               	addwf	(??__display_itoa+4)& (0+255),f,b
 28172  00EB06  0E00               	movlw	0
 28173  00EB08  239F               	addwfc	(??__display_itoa+5)& (0+255),f,b
 28174  00EB0A  0EA0               	movlw	low __display_itoa@tmp
 28175  00EB0C  259E               	addwf	(??__display_itoa+4)& (0+255),w,b
 28176  00EB0E  6EE1               	movwf	fsr1l,c
 28177  00EB10  0E00               	movlw	high __display_itoa@tmp
 28178  00EB12  219F               	addwfc	(??__display_itoa+5)& (0+255),w,b
 28179  00EB14  6EE2               	movwf	fsr1h,c
 28180  00EB16  CFDF FFE7          	movff	indf2,indf1
 28181                           
 28182                           ;display.c: 153: }
 28183  00EB1A  D00F               	goto	l1336
 28184  00EB1C                     l1335:
 28185                           
 28186                           ; BSR set to: 0
 28187                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 28188                           
 28189                           ; BSR set to: 0
 28190  00EB1C  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28191  00EB1E  6F9A               	movwf	??__display_itoa& (0+255),b
 28192  00EB20  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28193  00EB22  0E01               	movlw	1
 28194  00EB24  279A               	addwf	??__display_itoa& (0+255),f,b
 28195  00EB26  0E00               	movlw	0
 28196  00EB28  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28197  00EB2A  0EA0               	movlw	low __display_itoa@tmp
 28198  00EB2C  259A               	addwf	??__display_itoa& (0+255),w,b
 28199  00EB2E  6ED9               	movwf	fsr2l,c
 28200  00EB30  0E00               	movlw	high __display_itoa@tmp
 28201  00EB32  219B               	addwfc	(??__display_itoa+1)& (0+255),w,b
 28202  00EB34  6EDA               	movwf	fsr2h,c
 28203  00EB36  0E30               	movlw	48
 28204  00EB38  6EDF               	movwf	indf2,c
 28205  00EB3A                     l1336:
 28206                           
 28207                           ; BSR set to: 0
 28208                           
 28209                           ; BSR set to: 0
 28210  00EB3A  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28211  00EB3C  D7BB               	goto	l15499
 28212  00EB3E                     u14290:
 28213                           
 28214                           ; BSR set to: 0
 28215                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 28216                           
 28217                           ; BSR set to: 0
 28218  00EB3E  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28219  00EB40  0F02               	addlw	2
 28220  00EB42  D045               	goto	L38
 28221  00EB44                     l1331:
 28222                           
 28223                           ; BSR set to: 0
 28224                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 28225                           
 28226                           ; BSR set to: 0
 28227  00EB44  51AA               	movf	__display_itoa@len& (0+255),w,b
 28228  00EB46  0800               	sublw	0
 28229  00EB48  2597               	addwf	__display_itoa@decimals& (0+255),w,b
 28230  00EB4A  6F9A               	movwf	??__display_itoa& (0+255),b
 28231  00EB4C  299A               	incf	??__display_itoa& (0+255),w,b
 28232  00EB4E  6FAB               	movwf	__display_itoa@missing& (0+255),b
 28233                           
 28234                           ;display.c: 165: if(missing>0)
 28235  00EB50  51AB               	movf	__display_itoa@missing& (0+255),w,b
 28236  00EB52  0A80               	xorlw	128
 28237  00EB54  0F7F               	addlw	-129
 28238  00EB56  A0D8               	btfss	status,0,c
 28239  00EB58  D03B               	goto	l1338
 28240                           
 28241                           ; BSR set to: 0
 28242                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 28243  00EB5A  C097  F0AC         	movff	__display_itoa@decimals,__display_itoa@pos
 28244  00EB5E                     l15519:
 28245                           
 28246                           ; BSR set to: 0
 28247  00EB5E  29AC               	incf	__display_itoa@pos& (0+255),w,b
 28248  00EB60  B4D8               	btfsc	status,2,c
 28249  00EB62  D034               	goto	u14330
 28250                           
 28251                           ; BSR set to: 0
 28252                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 28253                           
 28254                           ; BSR set to: 0
 28255                           
 28256                           ; BSR set to: 0
 28257  00EB64  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28258  00EB66  BFAB               	btfsc	__display_itoa@missing& (0+255),7,b
 28259  00EB68  D004               	goto	u14320
 28260  00EB6A  0AFF               	xorlw	255
 28261  00EB6C  25AB               	addwf	__display_itoa@missing& (0+255),w,b
 28262  00EB6E  B0D8               	btfsc	status,0,c
 28263  00EB70  D021               	goto	l1341
 28264  00EB72                     u14320:
 28265                           
 28266                           ; BSR set to: 0
 28267                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 28268  00EB72  C0AB  F09A         	movff	__display_itoa@missing,??__display_itoa
 28269  00EB76  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28270  00EB78  BF9A               	btfsc	??__display_itoa& (0+255),7,b
 28271  00EB7A  079B               	decf	(??__display_itoa+1)& (0+255),f,b
 28272  00EB7C  1F9A               	comf	??__display_itoa& (0+255),f,b
 28273  00EB7E  1F9B               	comf	(??__display_itoa+1)& (0+255),f,b
 28274  00EB80  4B9A               	infsnz	??__display_itoa& (0+255),f,b
 28275  00EB82  2B9B               	incf	(??__display_itoa+1)& (0+255),f,b
 28276  00EB84  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28277  00EB86  6F9C               	movwf	(??__display_itoa+2)& (0+255),b
 28278  00EB88  6B9D               	clrf	(??__display_itoa+3)& (0+255),b
 28279  00EB8A  519A               	movf	??__display_itoa& (0+255),w,b
 28280  00EB8C  279C               	addwf	(??__display_itoa+2)& (0+255),f,b
 28281  00EB8E  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28282  00EB90  239D               	addwfc	(??__display_itoa+3)& (0+255),f,b
 28283  00EB92  0EA0               	movlw	low __display_itoa@tmp
 28284  00EB94  259C               	addwf	(??__display_itoa+2)& (0+255),w,b
 28285  00EB96  6ED9               	movwf	fsr2l,c
 28286  00EB98  0E00               	movlw	high __display_itoa@tmp
 28287  00EB9A  219D               	addwfc	(??__display_itoa+3)& (0+255),w,b
 28288  00EB9C  6EDA               	movwf	fsr2h,c
 28289  00EB9E  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28290  00EBA0  0D01               	mullw	1
 28291  00EBA2  0EA0               	movlw	low __display_itoa@tmp
 28292  00EBA4  24F3               	addwf	prodl,w,c
 28293  00EBA6  6EE1               	movwf	fsr1l,c
 28294  00EBA8  0E00               	movlw	high __display_itoa@tmp
 28295  00EBAA  20F4               	addwfc	prodh,w,c
 28296  00EBAC  6EE2               	movwf	fsr1h,c
 28297  00EBAE  CFDF FFE7          	movff	indf2,indf1
 28298                           
 28299                           ;display.c: 172: }
 28300  00EBB2  D00A               	goto	l1342
 28301  00EBB4                     l1341:
 28302                           
 28303                           ; BSR set to: 0
 28304                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 28305                           
 28306                           ; BSR set to: 0
 28307  00EBB4  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28308  00EBB6  0D01               	mullw	1
 28309  00EBB8  0EA0               	movlw	low __display_itoa@tmp
 28310  00EBBA  24F3               	addwf	prodl,w,c
 28311  00EBBC  6ED9               	movwf	fsr2l,c
 28312  00EBBE  0E00               	movlw	high __display_itoa@tmp
 28313  00EBC0  20F4               	addwfc	prodh,w,c
 28314  00EBC2  6EDA               	movwf	fsr2h,c
 28315  00EBC4  0E30               	movlw	48
 28316  00EBC6  6EDF               	movwf	indf2,c
 28317  00EBC8                     l1342:
 28318                           
 28319                           ; BSR set to: 0
 28320                           
 28321                           ; BSR set to: 0
 28322  00EBC8  07AC               	decf	__display_itoa@pos& (0+255),f,b
 28323  00EBCA  D7C9               	goto	l15519
 28324  00EBCC                     u14330:
 28325                           
 28326                           ; BSR set to: 0
 28327                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 28328                           
 28329                           ; BSR set to: 0
 28330  00EBCC  2997               	incf	__display_itoa@decimals& (0+255),w,b
 28331  00EBCE                     L38:
 28332  00EBCE  6FAA               	movwf	__display_itoa@len& (0+255),b
 28333  00EBD0                     l1338:
 28334                           
 28335                           ; BSR set to: 0
 28336                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 28337                           
 28338                           ; BSR set to: 0
 28339  00EBD0  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28340  00EBD2  0800               	sublw	0
 28341  00EBD4  25AA               	addwf	__display_itoa@len& (0+255),w,b
 28342  00EBD6  6F9A               	movwf	??__display_itoa& (0+255),b
 28343  00EBD8  059A               	decf	??__display_itoa& (0+255),w,b
 28344  00EBDA  6F97               	movwf	__display_itoa@decimals& (0+255),b
 28345                           
 28346                           ; BSR set to: 0
 28347                           ;display.c: 184: for(pos=0;pos<len;++pos)
 28348  00EBDC  0E00               	movlw	0
 28349  00EBDE  6FAC               	movwf	__display_itoa@pos& (0+255),b
 28350  00EBE0  D023               	goto	l1343
 28351  00EBE2                     
 28352                           ; BSR set to: 0
 28353                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 28354                           
 28355                           ; BSR set to: 0
 28356  00EBE2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28357  00EBE4  0D01               	mullw	1
 28358  00EBE6  0EA0               	movlw	low __display_itoa@tmp
 28359  00EBE8  24F3               	addwf	prodl,w,c
 28360  00EBEA  6ED9               	movwf	fsr2l,c
 28361  00EBEC  0E00               	movlw	high __display_itoa@tmp
 28362  00EBEE  20F4               	addwfc	prodh,w,c
 28363  00EBF0  6EDA               	movwf	fsr2h,c
 28364  00EBF2  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28365  00EBF4  0D01               	mullw	1
 28366  00EBF6  50F3               	movf	prodl,w,c
 28367  00EBF8  2598               	addwf	__display_itoa@text& (0+255),w,b
 28368  00EBFA  6EE1               	movwf	fsr1l,c
 28369  00EBFC  50F4               	movf	prodh,w,c
 28370  00EBFE  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28371  00EC00  6EE2               	movwf	fsr1h,c
 28372  00EC02  CFDF FFE7          	movff	indf2,indf1
 28373                           
 28374                           ; BSR set to: 0
 28375                           ;display.c: 187: if(pos==decimals)
 28376  00EC06  5197               	movf	__display_itoa@decimals& (0+255),w,b
 28377  00EC08  19AC               	xorwf	__display_itoa@pos& (0+255),w,b
 28378  00EC0A  A4D8               	btfss	status,2,c
 28379  00EC0C  D00C               	goto	l1345
 28380                           
 28381                           ; BSR set to: 0
 28382                           ;display.c: 188: {;display.c: 190: ++pos;
 28383  00EC0E  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28384                           
 28385                           ; BSR set to: 0
 28386                           ;display.c: 191: text[pos] = '.';
 28387  00EC10  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28388  00EC12  0D01               	mullw	1
 28389  00EC14  50F3               	movf	prodl,w,c
 28390  00EC16  2598               	addwf	__display_itoa@text& (0+255),w,b
 28391  00EC18  6ED9               	movwf	fsr2l,c
 28392  00EC1A  50F4               	movf	prodh,w,c
 28393  00EC1C  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28394  00EC1E  6EDA               	movwf	fsr2h,c
 28395  00EC20  0E2E               	movlw	46
 28396  00EC22  6EDF               	movwf	indf2,c
 28397                           
 28398                           ;display.c: 192: break;
 28399  00EC24  D01E               	goto	l1347
 28400  00EC26                     l1345:
 28401                           
 28402                           ; BSR set to: 0
 28403                           
 28404                           ; BSR set to: 0
 28405  00EC26  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28406  00EC28                     l1343:
 28407                           
 28408                           ; BSR set to: 0
 28409                           
 28410                           ; BSR set to: 0
 28411  00EC28  51AA               	movf	__display_itoa@len& (0+255),w,b
 28412  00EC2A  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28413  00EC2C  B0D8               	btfsc	status,0,c
 28414  00EC2E  D019               	goto	l1347
 28415  00EC30  D7D8               	goto	l1344
 28416  00EC32                     
 28417                           ; BSR set to: 0
 28418                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 28419                           
 28420                           ; BSR set to: 0
 28421  00EC32  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28422  00EC34  0D01               	mullw	1
 28423  00EC36  0EA0               	movlw	low __display_itoa@tmp
 28424  00EC38  24F3               	addwf	prodl,w,c
 28425  00EC3A  6ED9               	movwf	fsr2l,c
 28426  00EC3C  0E00               	movlw	high __display_itoa@tmp
 28427  00EC3E  20F4               	addwfc	prodh,w,c
 28428  00EC40  6EDA               	movwf	fsr2h,c
 28429  00EC42  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28430  00EC44  6F9A               	movwf	??__display_itoa& (0+255),b
 28431  00EC46  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28432  00EC48  0E01               	movlw	1
 28433  00EC4A  279A               	addwf	??__display_itoa& (0+255),f,b
 28434  00EC4C  0E00               	movlw	0
 28435  00EC4E  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28436  00EC50  519A               	movf	??__display_itoa& (0+255),w,b
 28437  00EC52  2598               	addwf	__display_itoa@text& (0+255),w,b
 28438  00EC54  6EE1               	movwf	fsr1l,c
 28439  00EC56  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28440  00EC58  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28441  00EC5A  6EE2               	movwf	fsr1h,c
 28442  00EC5C  CFDF FFE7          	movff	indf2,indf1
 28443                           
 28444                           ; BSR set to: 0
 28445  00EC60  2BAC               	incf	__display_itoa@pos& (0+255),f,b
 28446  00EC62                     l1347:
 28447                           
 28448                           ; BSR set to: 0
 28449                           
 28450                           ; BSR set to: 0
 28451  00EC62  51AA               	movf	__display_itoa@len& (0+255),w,b
 28452  00EC64  5DAC               	subwf	__display_itoa@pos& (0+255),w,b
 28453  00EC66  A0D8               	btfss	status,0,c
 28454  00EC68  D7E4               	goto	l1348
 28455                           
 28456                           ; BSR set to: 0
 28457                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 28458                           
 28459                           ; BSR set to: 0
 28460  00EC6A  51AC               	movf	__display_itoa@pos& (0+255),w,b
 28461  00EC6C  6F9A               	movwf	??__display_itoa& (0+255),b
 28462  00EC6E  6B9B               	clrf	(??__display_itoa+1)& (0+255),b
 28463  00EC70  0E01               	movlw	1
 28464  00EC72  279A               	addwf	??__display_itoa& (0+255),f,b
 28465  00EC74  0E00               	movlw	0
 28466  00EC76  239B               	addwfc	(??__display_itoa+1)& (0+255),f,b
 28467  00EC78  519A               	movf	??__display_itoa& (0+255),w,b
 28468  00EC7A  2598               	addwf	__display_itoa@text& (0+255),w,b
 28469  00EC7C  6ED9               	movwf	fsr2l,c
 28470  00EC7E  519B               	movf	(??__display_itoa+1)& (0+255),w,b
 28471  00EC80  2199               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 28472  00EC82  6EDA               	movwf	fsr2h,c
 28473  00EC84  0E00               	movlw	0
 28474  00EC86  6EDF               	movwf	indf2,c
 28475                           
 28476                           ; BSR set to: 0
 28477  00EC88  0012               	return		;funcret
 28478  00EC8A                     __end_of__display_itoa:
 28479                           	opt stack 0
 28480                           tblptru	equ	0xFF8
 28481                           tblptrh	equ	0xFF7
 28482                           tblptrl	equ	0xFF6
 28483                           tablat	equ	0xFF5
 28484                           prodh	equ	0xFF4
 28485                           prodl	equ	0xFF3
 28486                           intcon	equ	0xFF2
 28487                           postinc0	equ	0xFEE
 28488                           wreg	equ	0xFE8
 28489                           indf1	equ	0xFE7
 28490                           postinc1	equ	0xFE6
 28491                           postdec1	equ	0xFE5
 28492                           plusw1	equ	0xFE3
 28493                           fsr1h	equ	0xFE2
 28494                           fsr1l	equ	0xFE1
 28495                           indf2	equ	0xFDF
 28496                           postinc2	equ	0xFDE
 28497                           postdec2	equ	0xFDD
 28498                           plusw2	equ	0xFDB
 28499                           fsr2h	equ	0xFDA
 28500                           fsr2l	equ	0xFD9
 28501                           status	equ	0xFD8
 28502                           
 28503 ;; *************** function _strlen *****************
 28504 ;; Defined at:
 28505 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 28506 ;; Parameters:    Size  Location     Type
 28507 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 28508 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28509 ;; Auto vars:     Size  Location     Type
 28510 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 28511 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 28512 ;; Return value:  Size  Location     Type
 28513 ;;                  2    0[BANK0 ] unsigned int 
 28514 ;; Registers used:
 28515 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 28516 ;; Tracked objects:
 28517 ;;		On entry : 0/0
 28518 ;;		On exit  : 0/0
 28519 ;;		Unchanged: 0/0
 28520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28521 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28522 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28523 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28524 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28525 ;;Total ram usage:        6 bytes
 28526 ;; Hardware stack levels used:    1
 28527 ;; Hardware stack levels required when called:   10
 28528 ;; This function calls:
 28529 ;;		Nothing
 28530 ;; This function is called by:
 28531 ;;		__display_padded_itoa
 28532 ;;		__display_itoa
 28533 ;;		__display_itoa_long
 28534 ;;		_display_prepare
 28535 ;; This function uses a non-reentrant model
 28536 ;;
 28537                           
 28538                           	psect	text111
 28539  01517A                     __ptext111:
 28540                           	opt stack 0
 28541  01517A                     _strlen:
 28542                           	opt stack 19
 28543                           
 28544                           ; BSR set to: 0
 28545                           ;incstack = 0
 28546  01517A  C060  F064         	movff	strlen@s,strlen@cp
 28547  01517E  C061  F065         	movff	strlen@s+1,strlen@cp+1
 28548  015182  D003               	goto	l3731
 28549  015184  0100               	movlb	0	; () banked
 28550  015186  4B64               	infsnz	strlen@cp& (0+255),f,b
 28551  015188  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 28552  01518A                     l3731:
 28553                           
 28554                           ; BSR set to: 0
 28555  01518A  C064  FFD9         	movff	strlen@cp,fsr2l
 28556  01518E  C065  FFDA         	movff	strlen@cp+1,fsr2h
 28557  015192  50DF               	movf	indf2,w,c
 28558  015194  A4D8               	btfss	status,2,c
 28559  015196  D7F6               	goto	l3732
 28560  015198  C060  F062         	movff	strlen@s,??_strlen
 28561  01519C  C061  F063         	movff	strlen@s+1,??_strlen+1
 28562  0151A0  0100               	movlb	0	; () banked
 28563  0151A2  1F62               	comf	??_strlen& (0+255),f,b
 28564  0151A4  1F63               	comf	(??_strlen+1)& (0+255),f,b
 28565  0151A6  4B62               	infsnz	??_strlen& (0+255),f,b
 28566  0151A8  2B63               	incf	(??_strlen+1)& (0+255),f,b
 28567  0151AA  5164               	movf	strlen@cp& (0+255),w,b
 28568  0151AC  2562               	addwf	??_strlen& (0+255),w,b
 28569  0151AE  6F60               	movwf	?_strlen& (0+255),b
 28570  0151B0  5165               	movf	(strlen@cp+1)& (0+255),w,b
 28571  0151B2  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 28572  0151B4  6F61               	movwf	(?_strlen+1)& (0+255),b
 28573  0151B6  0012               	return	
 28574  0151B8                     __end_of_strlen:
 28575                           	opt stack 0
 28576                           tblptru	equ	0xFF8
 28577                           tblptrh	equ	0xFF7
 28578                           tblptrl	equ	0xFF6
 28579                           tablat	equ	0xFF5
 28580                           prodh	equ	0xFF4
 28581                           prodl	equ	0xFF3
 28582                           intcon	equ	0xFF2
 28583                           postinc0	equ	0xFEE
 28584                           wreg	equ	0xFE8
 28585                           indf1	equ	0xFE7
 28586                           postinc1	equ	0xFE6
 28587                           postdec1	equ	0xFE5
 28588                           plusw1	equ	0xFE3
 28589                           fsr1h	equ	0xFE2
 28590                           fsr1l	equ	0xFE1
 28591                           indf2	equ	0xFDF
 28592                           postinc2	equ	0xFDE
 28593                           postdec2	equ	0xFDD
 28594                           plusw2	equ	0xFDB
 28595                           fsr2h	equ	0xFDA
 28596                           fsr2l	equ	0xFD9
 28597                           status	equ	0xFD8
 28598                           
 28599 ;; *************** function _itoa *****************
 28600 ;; Defined at:
 28601 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28602 ;; Parameters:    Size  Location     Type
 28603 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 28604 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28605 ;;  val             2   18[BANK0 ] int 
 28606 ;;  base            2   20[BANK0 ] int 
 28607 ;; Auto vars:     Size  Location     Type
 28608 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 28609 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28610 ;; Return value:  Size  Location     Type
 28611 ;;                  2   16[BANK0 ] PTR unsigned char 
 28612 ;; Registers used:
 28613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28614 ;; Tracked objects:
 28615 ;;		On entry : 0/0
 28616 ;;		On exit  : 0/0
 28617 ;;		Unchanged: 0/0
 28618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28619 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28620 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28622 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28623 ;;Total ram usage:        8 bytes
 28624 ;; Hardware stack levels used:    1
 28625 ;; Hardware stack levels required when called:   12
 28626 ;; This function calls:
 28627 ;;		_utoa
 28628 ;; This function is called by:
 28629 ;;		__display_padded_itoa
 28630 ;;		__display_itoa
 28631 ;;		__display_itoa_u16
 28632 ;; This function uses a non-reentrant model
 28633 ;;
 28634                           
 28635                           	psect	text112
 28636  01502E                     __ptext112:
 28637                           	opt stack 0
 28638  01502E                     _itoa:
 28639                           	opt stack 14
 28640                           
 28641                           ; BSR set to: 0
 28642                           ;incstack = 0
 28643  01502E  C070  F076         	movff	itoa@buf,itoa@cp
 28644  015032  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 28645  015036  0100               	movlb	0	; () banked
 28646  015038  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 28647  01503A  D00C               	goto	l3683
 28648                           
 28649                           ; BSR set to: 0
 28650  01503C  C070  FFD9         	movff	itoa@buf,fsr2l
 28651  015040  C071  FFDA         	movff	itoa@buf+1,fsr2h
 28652  015044  0E2D               	movlw	45
 28653  015046  6EDF               	movwf	indf2,c
 28654                           
 28655                           ; BSR set to: 0
 28656  015048  4B70               	infsnz	itoa@buf& (0+255),f,b
 28657  01504A  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 28658                           
 28659                           ; BSR set to: 0
 28660  01504C  6D72               	negf	itoa@val& (0+255),b
 28661  01504E  1F73               	comf	(itoa@val+1)& (0+255),f,b
 28662  015050  B0D8               	btfsc	status,0,c
 28663  015052  2B73               	incf	(itoa@val+1)& (0+255),f,b
 28664  015054                     l3683:
 28665                           
 28666                           ; BSR set to: 0
 28667                           
 28668                           ; BSR set to: 0
 28669  015054  C070  F067         	movff	itoa@buf,utoa@buf
 28670  015058  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 28671  01505C  C072  F069         	movff	itoa@val,utoa@val
 28672  015060  C073  F06A         	movff	itoa@val+1,utoa@val+1
 28673  015064  C074  F06B         	movff	itoa@base,utoa@base
 28674  015068  C075  F06C         	movff	itoa@base+1,utoa@base+1
 28675  01506C  ECD1  F098         	call	_utoa	;wreg free
 28676  015070  0012               	return	
 28677  015072                     __end_of_itoa:
 28678                           	opt stack 0
 28679                           tblptru	equ	0xFF8
 28680                           tblptrh	equ	0xFF7
 28681                           tblptrl	equ	0xFF6
 28682                           tablat	equ	0xFF5
 28683                           prodh	equ	0xFF4
 28684                           prodl	equ	0xFF3
 28685                           intcon	equ	0xFF2
 28686                           postinc0	equ	0xFEE
 28687                           wreg	equ	0xFE8
 28688                           indf1	equ	0xFE7
 28689                           postinc1	equ	0xFE6
 28690                           postdec1	equ	0xFE5
 28691                           plusw1	equ	0xFE3
 28692                           fsr1h	equ	0xFE2
 28693                           fsr1l	equ	0xFE1
 28694                           indf2	equ	0xFDF
 28695                           postinc2	equ	0xFDE
 28696                           postdec2	equ	0xFDD
 28697                           plusw2	equ	0xFDB
 28698                           fsr2h	equ	0xFDA
 28699                           fsr2l	equ	0xFD9
 28700                           status	equ	0xFD8
 28701                           
 28702 ;; *************** function _utoa *****************
 28703 ;; Defined at:
 28704 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 28705 ;; Parameters:    Size  Location     Type
 28706 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 28707 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 28708 ;;  val             2    9[BANK0 ] unsigned int 
 28709 ;;  base            2   11[BANK0 ] int 
 28710 ;; Auto vars:     Size  Location     Type
 28711 ;;  v               2   13[BANK0 ] unsigned int 
 28712 ;;  c               1   15[BANK0 ] unsigned char 
 28713 ;; Return value:  Size  Location     Type
 28714 ;;                  2    7[BANK0 ] PTR unsigned char 
 28715 ;; Registers used:
 28716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 28717 ;; Tracked objects:
 28718 ;;		On entry : 0/0
 28719 ;;		On exit  : 0/0
 28720 ;;		Unchanged: 0/0
 28721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28722 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28723 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28725 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28726 ;;Total ram usage:        9 bytes
 28727 ;; Hardware stack levels used:    1
 28728 ;; Hardware stack levels required when called:   11
 28729 ;; This function calls:
 28730 ;;		___lwdiv
 28731 ;;		___lwmod
 28732 ;; This function is called by:
 28733 ;;		_itoa
 28734 ;; This function uses a non-reentrant model
 28735 ;;
 28736                           
 28737                           	psect	text113
 28738  0131A2                     __ptext113:
 28739                           	opt stack 0
 28740  0131A2                     _utoa:
 28741                           	opt stack 14
 28742                           
 28743                           ;incstack = 0
 28744  0131A2  C069  F06D         	movff	utoa@val,utoa@v
 28745  0131A6  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 28746  0131AA  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 28747  0131AE  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 28748  0131B2  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28749  0131B6  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28750  0131BA  ECAD  F0A5         	call	___lwdiv	;wreg free
 28751  0131BE  C060  F06D         	movff	?___lwdiv,utoa@v
 28752  0131C2  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 28753  0131C6  0100               	movlb	0	; () banked
 28754  0131C8  4B67               	infsnz	utoa@buf& (0+255),f,b
 28755  0131CA  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28756                           
 28757                           ; BSR set to: 0
 28758  0131CC  516D               	movf	utoa@v& (0+255),w,b
 28759  0131CE  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 28760  0131D0  A4D8               	btfss	status,2,c
 28761  0131D2  D7EB               	goto	l3687
 28762                           
 28763                           ; BSR set to: 0
 28764                           
 28765                           ; BSR set to: 0
 28766  0131D4  C067  FFD9         	movff	utoa@buf,fsr2l
 28767  0131D8  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28768  0131DC  0E00               	movlw	0
 28769  0131DE  6EDF               	movwf	indf2,c
 28770                           
 28771                           ; BSR set to: 0
 28772  0131E0  0767               	decf	utoa@buf& (0+255),f,b
 28773  0131E2  A0D8               	btfss	status,0,c
 28774  0131E4  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28775  0131E6                     
 28776                           ; BSR set to: 0
 28777                           
 28778                           ; BSR set to: 0
 28779  0131E6  C069  F060         	movff	utoa@val,___lwmod@dividend
 28780  0131EA  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 28781  0131EE  C06B  F062         	movff	utoa@base,___lwmod@divisor
 28782  0131F2  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 28783  0131F6  EC39  F0A8         	call	___lwmod	;wreg free
 28784  0131FA  0100               	movlb	0	; () banked
 28785  0131FC  5160               	movf	?___lwmod& (0+255),w,b
 28786  0131FE  6F6F               	movwf	utoa@c& (0+255),b
 28787                           
 28788                           ; BSR set to: 0
 28789  013200  C069  F060         	movff	utoa@val,___lwdiv@dividend
 28790  013204  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 28791  013208  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 28792  01320C  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 28793  013210  ECAD  F0A5         	call	___lwdiv	;wreg free
 28794  013214  C060  F069         	movff	?___lwdiv,utoa@val
 28795  013218  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 28796  01321C  0E09               	movlw	9
 28797  01321E  0100               	movlb	0	; () banked
 28798  013220  656F               	cpfsgt	utoa@c& (0+255),b
 28799  013222  D002               	goto	l3690
 28800                           
 28801                           ; BSR set to: 0
 28802  013224  0E07               	movlw	7
 28803  013226  276F               	addwf	utoa@c& (0+255),f,b
 28804  013228                     l3690:
 28805                           
 28806                           ; BSR set to: 0
 28807  013228  0E30               	movlw	48
 28808  01322A  276F               	addwf	utoa@c& (0+255),f,b
 28809                           
 28810                           ; BSR set to: 0
 28811  01322C  C067  FFD9         	movff	utoa@buf,fsr2l
 28812  013230  C068  FFDA         	movff	utoa@buf+1,fsr2h
 28813  013234  C06F  FFDF         	movff	utoa@c,indf2
 28814                           
 28815                           ; BSR set to: 0
 28816  013238  0767               	decf	utoa@buf& (0+255),f,b
 28817  01323A  A0D8               	btfss	status,0,c
 28818  01323C  0768               	decf	(utoa@buf+1)& (0+255),f,b
 28819                           
 28820                           ; BSR set to: 0
 28821  01323E  5169               	movf	utoa@val& (0+255),w,b
 28822  013240  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 28823  013242  A4D8               	btfss	status,2,c
 28824  013244  D7D0               	goto	l3689
 28825                           
 28826                           ; BSR set to: 0
 28827                           ;	Return value of _utoa is never used
 28828                           
 28829                           ; BSR set to: 0
 28830  013246  4B67               	infsnz	utoa@buf& (0+255),f,b
 28831  013248  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 28832  01324A  0012               	return	
 28833  01324C                     __end_of_utoa:
 28834                           	opt stack 0
 28835                           tblptru	equ	0xFF8
 28836                           tblptrh	equ	0xFF7
 28837                           tblptrl	equ	0xFF6
 28838                           tablat	equ	0xFF5
 28839                           prodh	equ	0xFF4
 28840                           prodl	equ	0xFF3
 28841                           intcon	equ	0xFF2
 28842                           postinc0	equ	0xFEE
 28843                           wreg	equ	0xFE8
 28844                           indf1	equ	0xFE7
 28845                           postinc1	equ	0xFE6
 28846                           postdec1	equ	0xFE5
 28847                           plusw1	equ	0xFE3
 28848                           fsr1h	equ	0xFE2
 28849                           fsr1l	equ	0xFE1
 28850                           indf2	equ	0xFDF
 28851                           postinc2	equ	0xFDE
 28852                           postdec2	equ	0xFDD
 28853                           plusw2	equ	0xFDB
 28854                           fsr2h	equ	0xFDA
 28855                           fsr2l	equ	0xFD9
 28856                           status	equ	0xFD8
 28857                           
 28858 ;; *************** function ___lwmod *****************
 28859 ;; Defined at:
 28860 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 28861 ;; Parameters:    Size  Location     Type
 28862 ;;  dividend        2    0[BANK0 ] unsigned int 
 28863 ;;  divisor         2    2[BANK0 ] unsigned int 
 28864 ;; Auto vars:     Size  Location     Type
 28865 ;;  counter         1    4[BANK0 ] unsigned char 
 28866 ;; Return value:  Size  Location     Type
 28867 ;;                  2    0[BANK0 ] unsigned int 
 28868 ;; Registers used:
 28869 ;;		wreg, status,2, status,0
 28870 ;; Tracked objects:
 28871 ;;		On entry : 0/0
 28872 ;;		On exit  : 0/0
 28873 ;;		Unchanged: 0/0
 28874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28875 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28876 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28877 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28878 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28879 ;;Total ram usage:        5 bytes
 28880 ;; Hardware stack levels used:    1
 28881 ;; Hardware stack levels required when called:   10
 28882 ;; This function calls:
 28883 ;;		Nothing
 28884 ;; This function is called by:
 28885 ;;		_utoa
 28886 ;; This function uses a non-reentrant model
 28887 ;;
 28888                           
 28889                           	psect	text114
 28890  015072                     __ptext114:
 28891                           	opt stack 0
 28892  015072                     ___lwmod:
 28893                           	opt stack 14
 28894                           
 28895                           ; BSR set to: 0
 28896                           ;incstack = 0
 28897  015072  0100               	movlb	0	; () banked
 28898  015074  5162               	movf	___lwmod@divisor& (0+255),w,b
 28899  015076  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 28900  015078  B4D8               	btfsc	status,2,c
 28901  01507A  D018               	goto	l3480
 28902                           
 28903                           ; BSR set to: 0
 28904  01507C  0E01               	movlw	1
 28905  01507E  6F64               	movwf	___lwmod@counter& (0+255),b
 28906  015080  D004               	goto	l3475
 28907  015082                     
 28908                           ; BSR set to: 0
 28909                           
 28910                           ; BSR set to: 0
 28911  015082  90D8               	bcf	status,0,c
 28912  015084  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 28913  015086  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 28914  015088  2B64               	incf	___lwmod@counter& (0+255),f,b
 28915  01508A                     l3475:
 28916                           
 28917                           ; BSR set to: 0
 28918                           
 28919                           ; BSR set to: 0
 28920  01508A  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 28921  01508C  D7FA               	goto	l3476
 28922  01508E                     u11060:
 28923                           
 28924                           ; BSR set to: 0
 28925                           
 28926                           ; BSR set to: 0
 28927                           
 28928                           ; BSR set to: 0
 28929  01508E  5162               	movf	___lwmod@divisor& (0+255),w,b
 28930  015090  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 28931  015092  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28932  015094  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 28933  015096  A0D8               	btfss	status,0,c
 28934  015098  D004               	goto	l3479
 28935                           
 28936                           ; BSR set to: 0
 28937  01509A  5162               	movf	___lwmod@divisor& (0+255),w,b
 28938  01509C  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 28939  01509E  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 28940  0150A0  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 28941  0150A2                     l3479:
 28942                           
 28943                           ; BSR set to: 0
 28944                           
 28945                           ; BSR set to: 0
 28946  0150A2  90D8               	bcf	status,0,c
 28947  0150A4  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 28948  0150A6  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 28949                           
 28950                           ; BSR set to: 0
 28951  0150A8  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 28952  0150AA  D7F1               	goto	u11060
 28953  0150AC                     l3480:
 28954                           
 28955                           ; BSR set to: 0
 28956                           
 28957                           ; BSR set to: 0
 28958  0150AC  C060  F060         	movff	___lwmod@dividend,?___lwmod
 28959  0150B0  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 28960                           
 28961                           ; BSR set to: 0
 28962  0150B4  0012               	return		;funcret
 28963  0150B6                     __end_of___lwmod:
 28964                           	opt stack 0
 28965                           tblptru	equ	0xFF8
 28966                           tblptrh	equ	0xFF7
 28967                           tblptrl	equ	0xFF6
 28968                           tablat	equ	0xFF5
 28969                           prodh	equ	0xFF4
 28970                           prodl	equ	0xFF3
 28971                           intcon	equ	0xFF2
 28972                           postinc0	equ	0xFEE
 28973                           wreg	equ	0xFE8
 28974                           indf1	equ	0xFE7
 28975                           postinc1	equ	0xFE6
 28976                           postdec1	equ	0xFE5
 28977                           plusw1	equ	0xFE3
 28978                           fsr1h	equ	0xFE2
 28979                           fsr1l	equ	0xFE1
 28980                           indf2	equ	0xFDF
 28981                           postinc2	equ	0xFDE
 28982                           postdec2	equ	0xFDD
 28983                           plusw2	equ	0xFDB
 28984                           fsr2h	equ	0xFDA
 28985                           fsr2l	equ	0xFD9
 28986                           status	equ	0xFD8
 28987                           
 28988 ;; *************** function ___lwdiv *****************
 28989 ;; Defined at:
 28990 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 28991 ;; Parameters:    Size  Location     Type
 28992 ;;  dividend        2    0[BANK0 ] unsigned int 
 28993 ;;  divisor         2    2[BANK0 ] unsigned int 
 28994 ;; Auto vars:     Size  Location     Type
 28995 ;;  quotient        2    4[BANK0 ] unsigned int 
 28996 ;;  counter         1    6[BANK0 ] unsigned char 
 28997 ;; Return value:  Size  Location     Type
 28998 ;;                  2    0[BANK0 ] unsigned int 
 28999 ;; Registers used:
 29000 ;;		wreg, status,2, status,0
 29001 ;; Tracked objects:
 29002 ;;		On entry : 0/0
 29003 ;;		On exit  : 0/0
 29004 ;;		Unchanged: 0/0
 29005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29006 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29007 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29009 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29010 ;;Total ram usage:        7 bytes
 29011 ;; Hardware stack levels used:    1
 29012 ;; Hardware stack levels required when called:   10
 29013 ;; This function calls:
 29014 ;;		Nothing
 29015 ;; This function is called by:
 29016 ;;		_utoa
 29017 ;; This function uses a non-reentrant model
 29018 ;;
 29019                           
 29020                           	psect	text115
 29021  014B5A                     __ptext115:
 29022                           	opt stack 0
 29023  014B5A                     ___lwdiv:
 29024                           	opt stack 14
 29025                           
 29026                           ; BSR set to: 0
 29027                           ;incstack = 0
 29028  014B5A  0E00               	movlw	0
 29029  014B5C  0100               	movlb	0	; () banked
 29030  014B5E  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29031  014B60  0E00               	movlw	0
 29032  014B62  6F64               	movwf	___lwdiv@quotient& (0+255),b
 29033                           
 29034                           ; BSR set to: 0
 29035  014B64  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29036  014B66  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29037  014B68  B4D8               	btfsc	status,2,c
 29038  014B6A  D01C               	goto	l3470
 29039                           
 29040                           ; BSR set to: 0
 29041  014B6C  0E01               	movlw	1
 29042  014B6E  6F66               	movwf	___lwdiv@counter& (0+255),b
 29043  014B70  D004               	goto	l3465
 29044  014B72                     
 29045                           ; BSR set to: 0
 29046                           
 29047                           ; BSR set to: 0
 29048  014B72  90D8               	bcf	status,0,c
 29049  014B74  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 29050  014B76  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29051  014B78  2B66               	incf	___lwdiv@counter& (0+255),f,b
 29052  014B7A                     l3465:
 29053                           
 29054                           ; BSR set to: 0
 29055                           
 29056                           ; BSR set to: 0
 29057  014B7A  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29058  014B7C  D7FA               	goto	l3466
 29059  014B7E                     u11030:
 29060                           
 29061                           ; BSR set to: 0
 29062                           
 29063                           ; BSR set to: 0
 29064                           
 29065                           ; BSR set to: 0
 29066  014B7E  90D8               	bcf	status,0,c
 29067  014B80  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 29068  014B82  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29069                           
 29070                           ; BSR set to: 0
 29071  014B84  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29072  014B86  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 29073  014B88  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29074  014B8A  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29075  014B8C  A0D8               	btfss	status,0,c
 29076  014B8E  D005               	goto	l3469
 29077                           
 29078                           ; BSR set to: 0
 29079  014B90  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29080  014B92  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 29081  014B94  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29082  014B96  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29083                           
 29084                           ; BSR set to: 0
 29085  014B98  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 29086  014B9A                     l3469:
 29087                           
 29088                           ; BSR set to: 0
 29089                           
 29090                           ; BSR set to: 0
 29091  014B9A  90D8               	bcf	status,0,c
 29092  014B9C  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29093  014B9E  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 29094                           
 29095                           ; BSR set to: 0
 29096  014BA0  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 29097  014BA2  D7ED               	goto	u11030
 29098  014BA4                     l3470:
 29099                           
 29100                           ; BSR set to: 0
 29101                           
 29102                           ; BSR set to: 0
 29103  014BA4  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 29104  014BA8  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29105                           
 29106                           ; BSR set to: 0
 29107  014BAC  0012               	return		;funcret
 29108  014BAE                     __end_of___lwdiv:
 29109                           	opt stack 0
 29110                           tblptru	equ	0xFF8
 29111                           tblptrh	equ	0xFF7
 29112                           tblptrl	equ	0xFF6
 29113                           tablat	equ	0xFF5
 29114                           prodh	equ	0xFF4
 29115                           prodl	equ	0xFF3
 29116                           intcon	equ	0xFF2
 29117                           postinc0	equ	0xFEE
 29118                           wreg	equ	0xFE8
 29119                           indf1	equ	0xFE7
 29120                           postinc1	equ	0xFE6
 29121                           postdec1	equ	0xFE5
 29122                           plusw1	equ	0xFE3
 29123                           fsr1h	equ	0xFE2
 29124                           fsr1l	equ	0xFE1
 29125                           indf2	equ	0xFDF
 29126                           postinc2	equ	0xFDE
 29127                           postdec2	equ	0xFDD
 29128                           plusw2	equ	0xFDB
 29129                           fsr2h	equ	0xFDA
 29130                           fsr2l	equ	0xFD9
 29131                           status	equ	0xFD8
 29132                           
 29133 ;; *************** function ___almod *****************
 29134 ;; Defined at:
 29135 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 29136 ;; Parameters:    Size  Location     Type
 29137 ;;  dividend        4    0[BANK0 ] long 
 29138 ;;  divisor         4    4[BANK0 ] long 
 29139 ;; Auto vars:     Size  Location     Type
 29140 ;;  sign            1    9[BANK0 ] unsigned char 
 29141 ;;  counter         1    8[BANK0 ] unsigned char 
 29142 ;; Return value:  Size  Location     Type
 29143 ;;                  4    0[BANK0 ] long 
 29144 ;; Registers used:
 29145 ;;		wreg, status,2, status,0
 29146 ;; Tracked objects:
 29147 ;;		On entry : 0/0
 29148 ;;		On exit  : 0/0
 29149 ;;		Unchanged: 0/0
 29150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29151 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29152 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29154 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29155 ;;Total ram usage:       10 bytes
 29156 ;; Hardware stack levels used:    1
 29157 ;; Hardware stack levels required when called:   10
 29158 ;; This function calls:
 29159 ;;		Nothing
 29160 ;; This function is called by:
 29161 ;;		__display_itoa_long
 29162 ;; This function uses a non-reentrant model
 29163 ;;
 29164                           
 29165                           	psect	text116
 29166  01304A                     __ptext116:
 29167                           	opt stack 0
 29168  01304A                     ___almod:
 29169                           	opt stack 18
 29170                           
 29171                           ; BSR set to: 0
 29172                           ;incstack = 0
 29173  01304A  0E00               	movlw	0
 29174  01304C  0100               	movlb	0	; () banked
 29175  01304E  6F69               	movwf	___almod@sign& (0+255),b
 29176                           
 29177                           ; BSR set to: 0
 29178  013050  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 29179  013052  D00A               	goto	l3067
 29180                           
 29181                           ; BSR set to: 0
 29182  013054  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29183  013056  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29184  013058  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29185  01305A  6D60               	negf	___almod@dividend& (0+255),b
 29186  01305C  0E00               	movlw	0
 29187  01305E  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29188  013060  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29189  013062  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29190                           
 29191                           ; BSR set to: 0
 29192  013064  0E01               	movlw	1
 29193  013066  6F69               	movwf	___almod@sign& (0+255),b
 29194  013068                     l3067:
 29195                           
 29196                           ; BSR set to: 0
 29197                           
 29198                           ; BSR set to: 0
 29199  013068  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29200  01306A  D008               	goto	l3068
 29201                           
 29202                           ; BSR set to: 0
 29203  01306C  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 29204  01306E  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 29205  013070  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 29206  013072  6D64               	negf	___almod@divisor& (0+255),b
 29207  013074  0E00               	movlw	0
 29208  013076  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 29209  013078  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 29210  01307A  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 29211  01307C                     l3068:
 29212                           
 29213                           ; BSR set to: 0
 29214                           
 29215                           ; BSR set to: 0
 29216  01307C  5164               	movf	___almod@divisor& (0+255),w,b
 29217  01307E  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 29218  013080  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 29219  013082  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 29220  013084  B4D8               	btfsc	status,2,c
 29221  013086  D024               	goto	l3075
 29222                           
 29223                           ; BSR set to: 0
 29224  013088  0E01               	movlw	1
 29225  01308A  6F68               	movwf	___almod@counter& (0+255),b
 29226  01308C  D006               	goto	l3070
 29227  01308E                     
 29228                           ; BSR set to: 0
 29229                           
 29230                           ; BSR set to: 0
 29231  01308E  90D8               	bcf	status,0,c
 29232  013090  3764               	rlcf	___almod@divisor& (0+255),f,b
 29233  013092  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 29234  013094  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 29235  013096  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 29236  013098  2B68               	incf	___almod@counter& (0+255),f,b
 29237  01309A                     l3070:
 29238                           
 29239                           ; BSR set to: 0
 29240                           
 29241                           ; BSR set to: 0
 29242  01309A  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 29243  01309C  D7F8               	goto	l3071
 29244  01309E                     u15320:
 29245                           
 29246                           ; BSR set to: 0
 29247                           
 29248                           ; BSR set to: 0
 29249                           
 29250                           ; BSR set to: 0
 29251  01309E  5164               	movf	___almod@divisor& (0+255),w,b
 29252  0130A0  5D60               	subwf	___almod@dividend& (0+255),w,b
 29253  0130A2  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29254  0130A4  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 29255  0130A6  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29256  0130A8  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 29257  0130AA  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29258  0130AC  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 29259  0130AE  A0D8               	btfss	status,0,c
 29260  0130B0  D008               	goto	l3074
 29261                           
 29262                           ; BSR set to: 0
 29263  0130B2  5164               	movf	___almod@divisor& (0+255),w,b
 29264  0130B4  5F60               	subwf	___almod@dividend& (0+255),f,b
 29265  0130B6  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 29266  0130B8  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 29267  0130BA  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 29268  0130BC  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 29269  0130BE  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 29270  0130C0  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 29271  0130C2                     l3074:
 29272                           
 29273                           ; BSR set to: 0
 29274                           
 29275                           ; BSR set to: 0
 29276  0130C2  90D8               	bcf	status,0,c
 29277  0130C4  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 29278  0130C6  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 29279  0130C8  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 29280  0130CA  3364               	rrcf	___almod@divisor& (0+255),f,b
 29281                           
 29282                           ; BSR set to: 0
 29283  0130CC  2F68               	decfsz	___almod@counter& (0+255),f,b
 29284  0130CE  D7E7               	goto	u15320
 29285  0130D0                     l3075:
 29286                           
 29287                           ; BSR set to: 0
 29288                           
 29289                           ; BSR set to: 0
 29290                           
 29291                           ; BSR set to: 0
 29292  0130D0  5169               	movf	___almod@sign& (0+255),w,b
 29293  0130D2  B4D8               	btfsc	status,2,c
 29294  0130D4  D008               	goto	l3076
 29295                           
 29296                           ; BSR set to: 0
 29297  0130D6  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 29298  0130D8  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 29299  0130DA  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 29300  0130DC  6D60               	negf	___almod@dividend& (0+255),b
 29301  0130DE  0E00               	movlw	0
 29302  0130E0  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 29303  0130E2  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 29304  0130E4  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 29305  0130E6                     l3076:
 29306                           
 29307                           ; BSR set to: 0
 29308                           
 29309                           ; BSR set to: 0
 29310  0130E6  C060  F060         	movff	___almod@dividend,?___almod
 29311  0130EA  C061  F061         	movff	___almod@dividend+1,?___almod+1
 29312  0130EE  C062  F062         	movff	___almod@dividend+2,?___almod+2
 29313  0130F2  C063  F063         	movff	___almod@dividend+3,?___almod+3
 29314  0130F6  0012               	return	
 29315  0130F8                     __end_of___almod:
 29316                           	opt stack 0
 29317                           tblptru	equ	0xFF8
 29318                           tblptrh	equ	0xFF7
 29319                           tblptrl	equ	0xFF6
 29320                           tablat	equ	0xFF5
 29321                           prodh	equ	0xFF4
 29322                           prodl	equ	0xFF3
 29323                           intcon	equ	0xFF2
 29324                           postinc0	equ	0xFEE
 29325                           wreg	equ	0xFE8
 29326                           indf1	equ	0xFE7
 29327                           postinc1	equ	0xFE6
 29328                           postdec1	equ	0xFE5
 29329                           plusw1	equ	0xFE3
 29330                           fsr1h	equ	0xFE2
 29331                           fsr1l	equ	0xFE1
 29332                           indf2	equ	0xFDF
 29333                           postinc2	equ	0xFDE
 29334                           postdec2	equ	0xFDD
 29335                           plusw2	equ	0xFDB
 29336                           fsr2h	equ	0xFDA
 29337                           fsr2l	equ	0xFD9
 29338                           status	equ	0xFD8
 29339                           
 29340 ;; *************** function ___aldiv *****************
 29341 ;; Defined at:
 29342 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 29343 ;; Parameters:    Size  Location     Type
 29344 ;;  dividend        4    0[BANK0 ] long 
 29345 ;;  divisor         4    4[BANK0 ] long 
 29346 ;; Auto vars:     Size  Location     Type
 29347 ;;  quotient        4   10[BANK0 ] long 
 29348 ;;  sign            1    9[BANK0 ] unsigned char 
 29349 ;;  counter         1    8[BANK0 ] unsigned char 
 29350 ;; Return value:  Size  Location     Type
 29351 ;;                  4    0[BANK0 ] long 
 29352 ;; Registers used:
 29353 ;;		wreg, status,2, status,0
 29354 ;; Tracked objects:
 29355 ;;		On entry : 0/0
 29356 ;;		On exit  : 0/0
 29357 ;;		Unchanged: 0/0
 29358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29359 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29360 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29361 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29362 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29363 ;;Total ram usage:       14 bytes
 29364 ;; Hardware stack levels used:    1
 29365 ;; Hardware stack levels required when called:   10
 29366 ;; This function calls:
 29367 ;;		Nothing
 29368 ;; This function is called by:
 29369 ;;		__display_itoa_long
 29370 ;; This function uses a non-reentrant model
 29371 ;;
 29372                           
 29373                           	psect	text117
 29374  012826                     __ptext117:
 29375                           	opt stack 0
 29376  012826                     ___aldiv:
 29377                           	opt stack 18
 29378                           
 29379                           ; BSR set to: 0
 29380                           ;incstack = 0
 29381  012826  0E00               	movlw	0
 29382  012828  0100               	movlb	0	; () banked
 29383  01282A  6F69               	movwf	___aldiv@sign& (0+255),b
 29384                           
 29385                           ; BSR set to: 0
 29386  01282C  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29387  01282E  D00A               	goto	l3054
 29388                           
 29389                           ; BSR set to: 0
 29390  012830  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 29391  012832  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 29392  012834  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 29393  012836  6D64               	negf	___aldiv@divisor& (0+255),b
 29394  012838  0E00               	movlw	0
 29395  01283A  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 29396  01283C  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 29397  01283E  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 29398                           
 29399                           ; BSR set to: 0
 29400  012840  0E01               	movlw	1
 29401  012842  6F69               	movwf	___aldiv@sign& (0+255),b
 29402  012844                     l3054:
 29403                           
 29404                           ; BSR set to: 0
 29405                           
 29406                           ; BSR set to: 0
 29407  012844  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 29408  012846  D00A               	goto	l3055
 29409                           
 29410                           ; BSR set to: 0
 29411  012848  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 29412  01284A  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 29413  01284C  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 29414  01284E  6D60               	negf	___aldiv@dividend& (0+255),b
 29415  012850  0E00               	movlw	0
 29416  012852  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 29417  012854  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 29418  012856  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 29419                           
 29420                           ; BSR set to: 0
 29421  012858  0E01               	movlw	1
 29422  01285A  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 29423  01285C                     l3055:
 29424                           
 29425                           ; BSR set to: 0
 29426                           
 29427                           ; BSR set to: 0
 29428  01285C  0E00               	movlw	0
 29429  01285E  6F6A               	movwf	___aldiv@quotient& (0+255),b
 29430  012860  0E00               	movlw	0
 29431  012862  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 29432  012864  0E00               	movlw	0
 29433  012866  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 29434  012868  0E00               	movlw	0
 29435  01286A  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 29436                           
 29437                           ; BSR set to: 0
 29438  01286C  5164               	movf	___aldiv@divisor& (0+255),w,b
 29439  01286E  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 29440  012870  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 29441  012872  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 29442  012874  B4D8               	btfsc	status,2,c
 29443  012876  D02A               	goto	l3062
 29444                           
 29445                           ; BSR set to: 0
 29446  012878  0E01               	movlw	1
 29447  01287A  6F68               	movwf	___aldiv@counter& (0+255),b
 29448  01287C  D006               	goto	l3057
 29449  01287E                     
 29450                           ; BSR set to: 0
 29451                           
 29452                           ; BSR set to: 0
 29453  01287E  90D8               	bcf	status,0,c
 29454  012880  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 29455  012882  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 29456  012884  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 29457  012886  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 29458  012888  2B68               	incf	___aldiv@counter& (0+255),f,b
 29459  01288A                     l3057:
 29460                           
 29461                           ; BSR set to: 0
 29462                           
 29463                           ; BSR set to: 0
 29464  01288A  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 29465  01288C  D7F8               	goto	l3058
 29466  01288E                     u15260:
 29467                           
 29468                           ; BSR set to: 0
 29469                           
 29470                           ; BSR set to: 0
 29471                           
 29472                           ; BSR set to: 0
 29473  01288E  90D8               	bcf	status,0,c
 29474  012890  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 29475  012892  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 29476  012894  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 29477  012896  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 29478                           
 29479                           ; BSR set to: 0
 29480  012898  5164               	movf	___aldiv@divisor& (0+255),w,b
 29481  01289A  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 29482  01289C  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29483  01289E  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 29484  0128A0  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29485  0128A2  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 29486  0128A4  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29487  0128A6  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 29488  0128A8  A0D8               	btfss	status,0,c
 29489  0128AA  D009               	goto	l3061
 29490                           
 29491                           ; BSR set to: 0
 29492  0128AC  5164               	movf	___aldiv@divisor& (0+255),w,b
 29493  0128AE  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 29494  0128B0  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 29495  0128B2  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 29496  0128B4  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 29497  0128B6  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 29498  0128B8  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 29499  0128BA  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 29500                           
 29501                           ; BSR set to: 0
 29502  0128BC  816A               	bsf	___aldiv@quotient& (0+255),0,b
 29503  0128BE                     l3061:
 29504                           
 29505                           ; BSR set to: 0
 29506                           
 29507                           ; BSR set to: 0
 29508  0128BE  90D8               	bcf	status,0,c
 29509  0128C0  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 29510  0128C2  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 29511  0128C4  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 29512  0128C6  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 29513                           
 29514                           ; BSR set to: 0
 29515  0128C8  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 29516  0128CA  D7E1               	goto	u15260
 29517  0128CC                     l3062:
 29518                           
 29519                           ; BSR set to: 0
 29520                           
 29521                           ; BSR set to: 0
 29522                           
 29523                           ; BSR set to: 0
 29524  0128CC  5169               	movf	___aldiv@sign& (0+255),w,b
 29525  0128CE  B4D8               	btfsc	status,2,c
 29526  0128D0  D008               	goto	l3063
 29527                           
 29528                           ; BSR set to: 0
 29529  0128D2  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 29530  0128D4  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 29531  0128D6  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 29532  0128D8  6D6A               	negf	___aldiv@quotient& (0+255),b
 29533  0128DA  0E00               	movlw	0
 29534  0128DC  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 29535  0128DE  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 29536  0128E0  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 29537  0128E2                     l3063:
 29538                           
 29539                           ; BSR set to: 0
 29540                           
 29541                           ; BSR set to: 0
 29542  0128E2  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 29543  0128E6  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 29544  0128EA  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 29545  0128EE  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 29546  0128F2  0012               	return	
 29547  0128F4                     __end_of___aldiv:
 29548                           	opt stack 0
 29549                           tblptru	equ	0xFF8
 29550                           tblptrh	equ	0xFF7
 29551                           tblptrl	equ	0xFF6
 29552                           tablat	equ	0xFF5
 29553                           prodh	equ	0xFF4
 29554                           prodl	equ	0xFF3
 29555                           intcon	equ	0xFF2
 29556                           postinc0	equ	0xFEE
 29557                           wreg	equ	0xFE8
 29558                           indf1	equ	0xFE7
 29559                           postinc1	equ	0xFE6
 29560                           postdec1	equ	0xFE5
 29561                           plusw1	equ	0xFE3
 29562                           fsr1h	equ	0xFE2
 29563                           fsr1l	equ	0xFE1
 29564                           indf2	equ	0xFDF
 29565                           postinc2	equ	0xFDE
 29566                           postdec2	equ	0xFDD
 29567                           plusw2	equ	0xFDB
 29568                           fsr2h	equ	0xFDA
 29569                           fsr2l	equ	0xFD9
 29570                           status	equ	0xFD8
 29571                           
 29572 ;; *************** function __display_clear *****************
 29573 ;; Defined at:
 29574 ;;		line 85 in file "display.c"
 29575 ;; Parameters:    Size  Location     Type
 29576 ;;		None
 29577 ;; Auto vars:     Size  Location     Type
 29578 ;;  col             1    3[BANK0 ] unsigned char 
 29579 ;;  row             1    2[BANK0 ] unsigned char 
 29580 ;; Return value:  Size  Location     Type
 29581 ;;                  1    wreg      void 
 29582 ;; Registers used:
 29583 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29584 ;; Tracked objects:
 29585 ;;		On entry : 0/0
 29586 ;;		On exit  : 0/0
 29587 ;;		Unchanged: 0/0
 29588 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29589 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29590 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29591 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29592 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29593 ;;Total ram usage:        4 bytes
 29594 ;; Hardware stack levels used:    1
 29595 ;; Hardware stack levels required when called:   10
 29596 ;; This function calls:
 29597 ;;		Nothing
 29598 ;; This function is called by:
 29599 ;;		_display_prepare
 29600 ;; This function uses a non-reentrant model
 29601 ;;
 29602                           
 29603                           	psect	text118
 29604  014ECA                     __ptext118:
 29605                           	opt stack 0
 29606  014ECA                     __display_clear:
 29607                           	opt stack 19
 29608                           
 29609                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 29610                           
 29611                           ; BSR set to: 0
 29612                           ;incstack = 0
 29613  014ECA  0E00               	movlw	0
 29614  014ECC  0100               	movlb	0	; () banked
 29615  014ECE  6F62               	movwf	__display_clear@row& (0+255),b
 29616  014ED0                     l17149:
 29617                           
 29618                           ; BSR set to: 0
 29619  014ED0  0E03               	movlw	3
 29620  014ED2  6562               	cpfsgt	__display_clear@row& (0+255),b
 29621  014ED4  D001               	goto	l1310
 29622  014ED6  0012               	return	
 29623  014ED8                     l1310:
 29624                           
 29625                           ; BSR set to: 0
 29626                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 29627                           
 29628                           ; BSR set to: 0
 29629  014ED8  0E00               	movlw	0
 29630  014EDA  6F63               	movwf	__display_clear@col& (0+255),b
 29631  014EDC                     l17155:
 29632                           
 29633                           ; BSR set to: 0
 29634  014EDC  0E13               	movlw	19
 29635  014EDE  6563               	cpfsgt	__display_clear@col& (0+255),b
 29636  014EE0  D001               	goto	l1312
 29637  014EE2  D016               	goto	u16570
 29638  014EE4                     l1312:
 29639                           
 29640                           ; BSR set to: 0
 29641                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 29642                           
 29643                           ; BSR set to: 0
 29644  014EE4  5162               	movf	__display_clear@row& (0+255),w,b
 29645  014EE6  0D14               	mullw	20
 29646  014EE8  0E34               	movlw	low _display_content
 29647  014EEA  6F60               	movwf	??__display_clear& (0+255),b
 29648  014EEC  0E02               	movlw	high _display_content
 29649  014EEE  6F61               	movwf	(??__display_clear+1)& (0+255),b
 29650  014EF0  50F3               	movf	prodl,w,c
 29651  014EF2  2760               	addwf	??__display_clear& (0+255),f,b
 29652  014EF4  50F4               	movf	prodh,w,c
 29653  014EF6  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 29654  014EF8  5163               	movf	__display_clear@col& (0+255),w,b
 29655  014EFA  0D01               	mullw	1
 29656  014EFC  50F3               	movf	prodl,w,c
 29657  014EFE  2560               	addwf	??__display_clear& (0+255),w,b
 29658  014F00  6ED9               	movwf	fsr2l,c
 29659  014F02  50F4               	movf	prodh,w,c
 29660  014F04  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 29661  014F06  6EDA               	movwf	fsr2h,c
 29662  014F08  0E20               	movlw	32
 29663  014F0A  6EDF               	movwf	indf2,c
 29664                           
 29665                           ; BSR set to: 0
 29666  014F0C  2B63               	incf	__display_clear@col& (0+255),f,b
 29667  014F0E  D7E6               	goto	l17155
 29668  014F10                     u16570:
 29669                           
 29670                           ; BSR set to: 0
 29671                           
 29672                           ; BSR set to: 0
 29673  014F10  2B62               	incf	__display_clear@row& (0+255),f,b
 29674  014F12  D7DE               	goto	l17149
 29675  014F14                     __end_of__display_clear:
 29676                           	opt stack 0
 29677                           tblptru	equ	0xFF8
 29678                           tblptrh	equ	0xFF7
 29679                           tblptrl	equ	0xFF6
 29680                           tablat	equ	0xFF5
 29681                           prodh	equ	0xFF4
 29682                           prodl	equ	0xFF3
 29683                           intcon	equ	0xFF2
 29684                           postinc0	equ	0xFEE
 29685                           wreg	equ	0xFE8
 29686                           indf1	equ	0xFE7
 29687                           postinc1	equ	0xFE6
 29688                           postdec1	equ	0xFE5
 29689                           plusw1	equ	0xFE3
 29690                           fsr1h	equ	0xFE2
 29691                           fsr1l	equ	0xFE1
 29692                           indf2	equ	0xFDF
 29693                           postinc2	equ	0xFDE
 29694                           postdec2	equ	0xFDD
 29695                           plusw2	equ	0xFDB
 29696                           fsr2h	equ	0xFDA
 29697                           fsr2l	equ	0xFD9
 29698                           status	equ	0xFD8
 29699                           
 29700 ;; *************** function _adc_read_temperature *****************
 29701 ;; Defined at:
 29702 ;;		line 44 in file "adc.c"
 29703 ;; Parameters:    Size  Location     Type
 29704 ;;		None
 29705 ;; Auto vars:     Size  Location     Type
 29706 ;;  temperature     4   43[BANK0 ] float 
 29707 ;;  adc_result      2   41[BANK0 ] unsigned int 
 29708 ;; Return value:  Size  Location     Type
 29709 ;;                  1    wreg      void 
 29710 ;; Registers used:
 29711 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29712 ;; Tracked objects:
 29713 ;;		On entry : 0/0
 29714 ;;		On exit  : 0/0
 29715 ;;		Unchanged: 0/0
 29716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29718 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29719 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29720 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29721 ;;Total ram usage:        8 bytes
 29722 ;; Hardware stack levels used:    1
 29723 ;; Hardware stack levels required when called:   11
 29724 ;; This function calls:
 29725 ;;		___fladd
 29726 ;;		___flmul
 29727 ;;		___flneg
 29728 ;;		___fltol
 29729 ;;		___xxtofl
 29730 ;; This function is called by:
 29731 ;;		_main
 29732 ;; This function uses a non-reentrant model
 29733 ;;
 29734                           
 29735                           	psect	text119
 29736  00F27A                     __ptext119:
 29737                           	opt stack 0
 29738  00F27A                     _adc_read_temperature:
 29739                           	opt stack 19
 29740                           
 29741                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 29742                           
 29743                           ; BSR set to: 0
 29744                           ;incstack = 0
 29745  00F27A  CFC4 F089          	movff	4036,adc_read_temperature@adc_result	;volatile
 29746  00F27E  0100               	movlb	0	; () banked
 29747  00F280  6B8A               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 29748                           
 29749                           ; BSR set to: 0
 29750                           ;adc.c: 51: adc_result <<= 8;
 29751  00F282  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29752  00F284  6F8A               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 29753  00F286  6B89               	clrf	adc_read_temperature@adc_result& (0+255),b
 29754                           
 29755                           ; BSR set to: 0
 29756                           ;adc.c: 52: adc_result |= ADRESL;
 29757  00F288  50C3               	movf	4035,w,c	;volatile
 29758  00F28A  1389               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 29759                           
 29760                           ; BSR set to: 0
 29761                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 29762  00F28C  0102               	movlb	2	; () banked
 29763  00F28E  511F               	movf	_params& (0+255),w,b
 29764  00F290  0D02               	mullw	2
 29765  00F292  0E20               	movlw	low (_params+1)
 29766  00F294  24F3               	addwf	prodl,w,c
 29767  00F296  6ED9               	movwf	fsr2l,c
 29768  00F298  0E02               	movlw	high (_params+1)
 29769  00F29A  20F4               	addwfc	prodh,w,c
 29770  00F29C  6EDA               	movwf	fsr2h,c
 29771  00F29E  0100               	movlb	0	; () banked
 29772  00F2A0  5189               	movf	adc_read_temperature@adc_result& (0+255),w,b
 29773  00F2A2  26DE               	addwf	postinc2,f,c
 29774  00F2A4  518A               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 29775  00F2A6  22DD               	addwfc	postdec2,f,c
 29776                           
 29777                           ; BSR set to: 0
 29778                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 29779  00F2A8  0102               	movlb	2	; () banked
 29780  00F2AA  511F               	movf	_params& (0+255),w,b
 29781  00F2AC  0D01               	mullw	1
 29782  00F2AE  0E24               	movlw	low (_params+5)
 29783  00F2B0  24F3               	addwf	prodl,w,c
 29784  00F2B2  6ED9               	movwf	fsr2l,c
 29785  00F2B4  0E02               	movlw	high (_params+5)
 29786  00F2B6  20F4               	addwfc	prodh,w,c
 29787  00F2B8  6EDA               	movwf	fsr2h,c
 29788  00F2BA  2ADF               	incf	indf2,f,c
 29789                           
 29790                           ; BSR set to: 2
 29791                           ;adc.c: 59: ADCON0bits.GO = 1;
 29792  00F2BC  82C2               	bsf	4034,1,c	;volatile
 29793                           
 29794                           ; BSR set to: 2
 29795                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 29796  00F2BE  511F               	movf	_params& (0+255),w,b
 29797  00F2C0  0D01               	mullw	1
 29798  00F2C2  0E24               	movlw	low (_params+5)
 29799  00F2C4  24F3               	addwf	prodl,w,c
 29800  00F2C6  6ED9               	movwf	fsr2l,c
 29801  00F2C8  0E02               	movlw	high (_params+5)
 29802  00F2CA  20F4               	addwfc	prodh,w,c
 29803  00F2CC  6EDA               	movwf	fsr2h,c
 29804  00F2CE  0E08               	movlw	8
 29805  00F2D0  18DE               	xorwf	postinc2,w,c
 29806  00F2D2  A4D8               	btfss	status,2,c
 29807  00F2D4  D0AF               	goto	l2854
 29808                           
 29809                           ; BSR set to: 2
 29810                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 29811  00F2D6  511F               	movf	_params& (0+255),w,b
 29812  00F2D8  0D02               	mullw	2
 29813  00F2DA  0E20               	movlw	low (_params+1)
 29814  00F2DC  24F3               	addwf	prodl,w,c
 29815  00F2DE  6ED9               	movwf	fsr2l,c
 29816  00F2E0  0E02               	movlw	high (_params+1)
 29817  00F2E2  20F4               	addwfc	prodh,w,c
 29818  00F2E4  6EDA               	movwf	fsr2h,c
 29819  00F2E6  CFDE F087          	movff	postinc2,??_adc_read_temperature
 29820  00F2EA  CFDD F088          	movff	postdec2,??_adc_read_temperature+1
 29821  00F2EE  C087  F060         	movff	??_adc_read_temperature,___xxtofl@val
 29822  00F2F2  C088  F061         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 29823  00F2F6  0100               	movlb	0	; () banked
 29824  00F2F8  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 29825  00F2FA  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 29826  00F2FC  0E00               	movlw	0
 29827  00F2FE  EC62  F081         	call	___xxtofl
 29828  00F302  C060  F06E         	movff	?___xxtofl,___flneg@f1
 29829  00F306  C061  F06F         	movff	?___xxtofl+1,___flneg@f1+1
 29830  00F30A  C062  F070         	movff	?___xxtofl+2,___flneg@f1+2
 29831  00F30E  C063  F071         	movff	?___xxtofl+3,___flneg@f1+3
 29832  00F312  EC3C  F0AA         	call	___flneg	;wreg free
 29833  00F316  C06E  F072         	movff	?___flneg,___fladd@b
 29834  00F31A  C06F  F073         	movff	?___flneg+1,___fladd@b+1
 29835  00F31E  C070  F074         	movff	?___flneg+2,___fladd@b+2
 29836  00F322  C071  F075         	movff	?___flneg+3,___fladd@b+3
 29837  00F326  0E00               	movlw	0
 29838  00F328  0100               	movlb	0	; () banked
 29839  00F32A  6F76               	movwf	___fladd@a& (0+255),b
 29840  00F32C  0E90               	movlw	144
 29841  00F32E  6F77               	movwf	(___fladd@a+1)& (0+255),b
 29842  00F330  0EA4               	movlw	164
 29843  00F332  6F78               	movwf	(___fladd@a+2)& (0+255),b
 29844  00F334  0E46               	movlw	70
 29845  00F336  6F79               	movwf	(___fladd@a+3)& (0+255),b
 29846  00F338  ECE1  F067         	call	___fladd	;wreg free
 29847  00F33C  C072  F08B         	movff	?___fladd,adc_read_temperature@temperature
 29848  00F340  C073  F08C         	movff	?___fladd+1,adc_read_temperature@temperature+1
 29849  00F344  C074  F08D         	movff	?___fladd+2,adc_read_temperature@temperature+2
 29850  00F348  C075  F08E         	movff	?___fladd+3,adc_read_temperature@temperature+3
 29851                           
 29852                           ;adc.c: 68: temperature *= 0.7405;
 29853  00F34C  C08B  F06E         	movff	adc_read_temperature@temperature,___flmul@b
 29854  00F350  C08C  F06F         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 29855  00F354  C08D  F070         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 29856  00F358  C08E  F071         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 29857  00F35C  0E68               	movlw	104
 29858  00F35E  0100               	movlb	0	; () banked
 29859  00F360  6F72               	movwf	___flmul@a& (0+255),b
 29860  00F362  0E91               	movlw	145
 29861  00F364  6F73               	movwf	(___flmul@a+1)& (0+255),b
 29862  00F366  0E3D               	movlw	61
 29863  00F368  6F74               	movwf	(___flmul@a+2)& (0+255),b
 29864  00F36A  0E3F               	movlw	63
 29865  00F36C  6F75               	movwf	(___flmul@a+3)& (0+255),b
 29866  00F36E  EC38  F066         	call	___flmul	;wreg free
 29867  00F372  C06E  F08B         	movff	?___flmul,adc_read_temperature@temperature
 29868  00F376  C06F  F08C         	movff	?___flmul+1,adc_read_temperature@temperature+1
 29869  00F37A  C070  F08D         	movff	?___flmul+2,adc_read_temperature@temperature+2
 29870  00F37E  C071  F08E         	movff	?___flmul+3,adc_read_temperature@temperature+3
 29871                           
 29872                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 29873  00F382  C08B  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 29874  00F386  C08C  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 29875  00F38A  C08D  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 29876  00F38E  C08E  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 29877  00F392  ECBA  F090         	call	___fltol	;wreg free
 29878  00F396  0102               	movlb	2	; () banked
 29879  00F398  511F               	movf	_params& (0+255),w,b
 29880  00F39A  0D02               	mullw	2
 29881  00F39C  0E98               	movlw	low (_os+39)
 29882  00F39E  24F3               	addwf	prodl,w,c
 29883  00F3A0  6ED9               	movwf	fsr2l,c
 29884  00F3A2  0E01               	movlw	high (_os+39)
 29885  00F3A4  20F4               	addwfc	prodh,w,c
 29886  00F3A6  6EDA               	movwf	fsr2h,c
 29887  00F3A8  0100               	movlb	0	; () banked
 29888  00F3AA  C060  FFDE         	movff	?___fltol,postinc2
 29889  00F3AE  C061  FFDD         	movff	?___fltol+1,postdec2
 29890                           
 29891                           ; BSR set to: 0
 29892                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 29893  00F3B2  0102               	movlb	2	; () banked
 29894  00F3B4  511F               	movf	_params& (0+255),w,b
 29895  00F3B6  0D02               	mullw	2
 29896  00F3B8  0E20               	movlw	low (_params+1)
 29897  00F3BA  24F3               	addwf	prodl,w,c
 29898  00F3BC  6ED9               	movwf	fsr2l,c
 29899  00F3BE  0E02               	movlw	high (_params+1)
 29900  00F3C0  20F4               	addwfc	prodh,w,c
 29901  00F3C2  6EDA               	movwf	fsr2h,c
 29902  00F3C4  0E00               	movlw	0
 29903  00F3C6  6EDE               	movwf	postinc2,c
 29904  00F3C8  0E00               	movlw	0
 29905  00F3CA  6EDD               	movwf	postdec2,c
 29906                           
 29907                           ; BSR set to: 2
 29908                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 29909  00F3CC  511F               	movf	_params& (0+255),w,b
 29910  00F3CE  0D01               	mullw	1
 29911  00F3D0  0E24               	movlw	low (_params+5)
 29912  00F3D2  24F3               	addwf	prodl,w,c
 29913  00F3D4  6ED9               	movwf	fsr2l,c
 29914  00F3D6  0E02               	movlw	high (_params+5)
 29915  00F3D8  20F4               	addwfc	prodh,w,c
 29916  00F3DA  6EDA               	movwf	fsr2h,c
 29917  00F3DC  0E00               	movlw	0
 29918  00F3DE  6EDF               	movwf	indf2,c
 29919                           
 29920                           ; BSR set to: 2
 29921                           ;adc.c: 78: if(os.fan_on)
 29922  00F3E0  0101               	movlb	1	; () banked
 29923  00F3E2  519F               	movf	(_os+46)& (0+255),w,b	;volatile
 29924  00F3E4  B4D8               	btfsc	status,2,c
 29925  00F3E6  D013               	goto	l2851
 29926                           
 29927                           ; BSR set to: 1
 29928                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 29929  00F3E8  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29930  00F3EA  D006               	goto	u18200
 29931  00F3EC  0E60               	movlw	96
 29932  00F3EE  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29933  00F3F0  0E09               	movlw	9
 29934  00F3F2  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29935  00F3F4  B0D8               	btfsc	status,0,c
 29936  00F3F6  D01E               	goto	l2854
 29937  00F3F8                     u18200:
 29938                           
 29939                           ; BSR set to: 1
 29940  00F3F8  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29941  00F3FA  D006               	goto	u18210
 29942  00F3FC  0E60               	movlw	96
 29943  00F3FE  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29944  00F400  0E09               	movlw	9
 29945  00F402  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29946  00F404  B0D8               	btfsc	status,0,c
 29947  00F406  D016               	goto	l2854
 29948  00F408                     u18210:
 29949                           
 29950                           ; BSR set to: 1
 29951                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 29952  00F408  9C8B               	bcf	3979,6,c	;volatile
 29953                           
 29954                           ; BSR set to: 1
 29955                           ;adc.c: 83: os.fan_on = 0;
 29956  00F40A  0E00               	movlw	0
 29957  00F40C  D012               	goto	L39
 29958  00F40E                     l2851:
 29959                           
 29960                           ; BSR set to: 1
 29961                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 29962                           
 29963                           ; BSR set to: 1
 29964  00F40E  BF99               	btfsc	(_os+40)& (0+255),7,b	;volatile
 29965  00F410  D006               	goto	u18220
 29966  00F412  0EC5               	movlw	197
 29967  00F414  5D98               	subwf	(_os+39)& (0+255),w,b	;volatile
 29968  00F416  0E09               	movlw	9
 29969  00F418  5999               	subwfb	(_os+40)& (0+255),w,b	;volatile
 29970  00F41A  B0D8               	btfsc	status,0,c
 29971  00F41C  D008               	goto	u18230
 29972  00F41E                     u18220:
 29973                           
 29974                           ; BSR set to: 1
 29975  00F41E  BF9B               	btfsc	(_os+42)& (0+255),7,b	;volatile
 29976  00F420  D009               	goto	l2854
 29977  00F422  0EC5               	movlw	197
 29978  00F424  5D9A               	subwf	(_os+41)& (0+255),w,b	;volatile
 29979  00F426  0E09               	movlw	9
 29980  00F428  599B               	subwfb	(_os+42)& (0+255),w,b	;volatile
 29981  00F42A  A0D8               	btfss	status,0,c
 29982  00F42C  D003               	goto	l2854
 29983  00F42E                     u18230:
 29984                           
 29985                           ; BSR set to: 1
 29986                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 29987  00F42E  8C8B               	bsf	3979,6,c	;volatile
 29988                           
 29989                           ; BSR set to: 1
 29990                           ;adc.c: 91: os.fan_on = 1;
 29991  00F430  0E01               	movlw	1
 29992  00F432                     L39:
 29993  00F432  6F9F               	movwf	(_os+46)& (0+255),b	;volatile
 29994  00F434                     l2854:
 29995                           
 29996                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 29997                           
 29998                           ; BSR set to: 1
 29999                           
 30000                           ; BSR set to: 1
 30001  00F434  0102               	movlb	2	; () banked
 30002  00F436  511F               	movf	_params& (0+255),w,b
 30003  00F438  A4D8               	btfss	status,2,c
 30004  00F43A  D007               	goto	l2857
 30005                           
 30006                           ; BSR set to: 2
 30007                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 30008  00F43C  50C2               	movf	4034,w,c	;volatile
 30009  00F43E  0BC3               	andlw	-61
 30010  00F440  092C               	iorlw	44
 30011  00F442  6EC2               	movwf	4034,c	;volatile
 30012                           
 30013                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 30014  00F444  0E01               	movlw	1
 30015  00F446  6F1F               	movwf	_params& (0+255),b
 30016                           
 30017                           ;adc.c: 101: }
 30018  00F448  0012               	return	
 30019  00F44A                     l2857:
 30020                           
 30021                           ; BSR set to: 2
 30022                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 30023                           
 30024                           ; BSR set to: 2
 30025  00F44A  50C2               	movf	4034,w,c	;volatile
 30026  00F44C  0BC3               	andlw	-61
 30027  00F44E  0924               	iorlw	36
 30028  00F450  6EC2               	movwf	4034,c	;volatile
 30029                           
 30030                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 30031  00F452  0E00               	movlw	0
 30032  00F454  6F1F               	movwf	_params& (0+255),b
 30033  00F456  0012               	return	
 30034  00F458                     __end_of_adc_read_temperature:
 30035                           	opt stack 0
 30036                           tblptru	equ	0xFF8
 30037                           tblptrh	equ	0xFF7
 30038                           tblptrl	equ	0xFF6
 30039                           tablat	equ	0xFF5
 30040                           prodh	equ	0xFF4
 30041                           prodl	equ	0xFF3
 30042                           intcon	equ	0xFF2
 30043                           postinc0	equ	0xFEE
 30044                           wreg	equ	0xFE8
 30045                           indf1	equ	0xFE7
 30046                           postinc1	equ	0xFE6
 30047                           postdec1	equ	0xFE5
 30048                           plusw1	equ	0xFE3
 30049                           fsr1h	equ	0xFE2
 30050                           fsr1l	equ	0xFE1
 30051                           indf2	equ	0xFDF
 30052                           postinc2	equ	0xFDE
 30053                           postdec2	equ	0xFDD
 30054                           plusw2	equ	0xFDB
 30055                           fsr2h	equ	0xFDA
 30056                           fsr2l	equ	0xFD9
 30057                           status	equ	0xFD8
 30058                           
 30059 ;; *************** function ___flneg *****************
 30060 ;; Defined at:
 30061 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 30062 ;; Parameters:    Size  Location     Type
 30063 ;;  f1              4   14[BANK0 ] void 
 30064 ;; Auto vars:     Size  Location     Type
 30065 ;;		None
 30066 ;; Return value:  Size  Location     Type
 30067 ;;                  4   14[BANK0 ] void 
 30068 ;; Registers used:
 30069 ;;		wreg, status,2, status,0
 30070 ;; Tracked objects:
 30071 ;;		On entry : 0/0
 30072 ;;		On exit  : 0/0
 30073 ;;		Unchanged: 0/0
 30074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30075 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30078 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30079 ;;Total ram usage:        4 bytes
 30080 ;; Hardware stack levels used:    1
 30081 ;; Hardware stack levels required when called:   10
 30082 ;; This function calls:
 30083 ;;		Nothing
 30084 ;; This function is called by:
 30085 ;;		_adc_read_temperature
 30086 ;; This function uses a non-reentrant model
 30087 ;;
 30088                           
 30089                           	psect	text120
 30090  015478                     __ptext120:
 30091                           	opt stack 0
 30092  015478                     ___flneg:
 30093                           	opt stack 19
 30094                           
 30095                           ; BSR set to: 2
 30096                           ;incstack = 0
 30097  015478  0100               	movlb	0	; () banked
 30098  01547A  516E               	movf	___flneg@f1& (0+255),w,b
 30099  01547C  116F               	iorwf	(___flneg@f1+1)& (0+255),w,b
 30100  01547E  1170               	iorwf	(___flneg@f1+2)& (0+255),w,b
 30101  015480  1171               	iorwf	(___flneg@f1+3)& (0+255),w,b
 30102  015482  B4D8               	btfsc	status,2,c
 30103  015484  D008               	goto	l3250
 30104                           
 30105                           ; BSR set to: 0
 30106  015486  0E00               	movlw	0
 30107  015488  1B6E               	xorwf	___flneg@f1& (0+255),f,b
 30108  01548A  0E00               	movlw	0
 30109  01548C  1B6F               	xorwf	(___flneg@f1+1)& (0+255),f,b
 30110  01548E  0E00               	movlw	0
 30111  015490  1B70               	xorwf	(___flneg@f1+2)& (0+255),f,b
 30112  015492  0E80               	movlw	128
 30113  015494  1B71               	xorwf	(___flneg@f1+3)& (0+255),f,b
 30114  015496                     l3250:
 30115                           
 30116                           ; BSR set to: 0
 30117                           
 30118                           ; BSR set to: 0
 30119  015496  C06E  F06E         	movff	___flneg@f1,?___flneg
 30120  01549A  C06F  F06F         	movff	___flneg@f1+1,?___flneg+1
 30121  01549E  C070  F070         	movff	___flneg@f1+2,?___flneg+2
 30122  0154A2  C071  F071         	movff	___flneg@f1+3,?___flneg+3
 30123  0154A6  0012               	return	
 30124  0154A8                     __end_of___flneg:
 30125                           	opt stack 0
 30126                           tblptru	equ	0xFF8
 30127                           tblptrh	equ	0xFF7
 30128                           tblptrl	equ	0xFF6
 30129                           tablat	equ	0xFF5
 30130                           prodh	equ	0xFF4
 30131                           prodl	equ	0xFF3
 30132                           intcon	equ	0xFF2
 30133                           postinc0	equ	0xFEE
 30134                           wreg	equ	0xFE8
 30135                           indf1	equ	0xFE7
 30136                           postinc1	equ	0xFE6
 30137                           postdec1	equ	0xFE5
 30138                           plusw1	equ	0xFE3
 30139                           fsr1h	equ	0xFE2
 30140                           fsr1l	equ	0xFE1
 30141                           indf2	equ	0xFDF
 30142                           postinc2	equ	0xFDE
 30143                           postdec2	equ	0xFDD
 30144                           plusw2	equ	0xFDB
 30145                           fsr2h	equ	0xFDA
 30146                           fsr2l	equ	0xFD9
 30147                           status	equ	0xFD8
 30148                           
 30149 ;; *************** function ___fladd *****************
 30150 ;; Defined at:
 30151 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 30152 ;; Parameters:    Size  Location     Type
 30153 ;;  b               4   18[BANK0 ] void 
 30154 ;;  a               4   22[BANK0 ] void 
 30155 ;; Auto vars:     Size  Location     Type
 30156 ;;  grs             1   37[BANK0 ] unsigned char 
 30157 ;;  bexp            1   36[BANK0 ] unsigned char 
 30158 ;;  aexp            1   35[BANK0 ] unsigned char 
 30159 ;;  signs           1   34[BANK0 ] unsigned char 
 30160 ;; Return value:  Size  Location     Type
 30161 ;;                  4   18[BANK0 ] unsigned char 
 30162 ;; Registers used:
 30163 ;;		wreg, status,2, status,0
 30164 ;; Tracked objects:
 30165 ;;		On entry : 0/0
 30166 ;;		On exit  : 0/0
 30167 ;;		Unchanged: 0/0
 30168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30169 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30170 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30171 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30172 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30173 ;;Total ram usage:       20 bytes
 30174 ;; Hardware stack levels used:    1
 30175 ;; Hardware stack levels required when called:   10
 30176 ;; This function calls:
 30177 ;;		Nothing
 30178 ;; This function is called by:
 30179 ;;		_motor_divide_jump_to_nearest
 30180 ;;		_adc_read_temperature
 30181 ;; This function uses a non-reentrant model
 30182 ;;
 30183                           
 30184                           	psect	text121
 30185  00CFC2                     __ptext121:
 30186                           	opt stack 0
 30187  00CFC2                     ___fladd:
 30188                           	opt stack 18
 30189                           
 30190                           ; BSR set to: 0
 30191                           ;incstack = 0
 30192  00CFC2  0100               	movlb	0	; () banked
 30193  00CFC4  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30194  00CFC6  0B80               	andlw	128
 30195  00CFC8  6F82               	movwf	___fladd@signs& (0+255),b
 30196  00CFCA  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30197  00CFCC  2575               	addwf	(___fladd@b+3)& (0+255),w,b
 30198  00CFCE  6F84               	movwf	___fladd@bexp& (0+255),b
 30199                           
 30200                           ; BSR set to: 0
 30201  00CFD0  BF74               	btfsc	(___fladd@b+2)& (0+255),7,b
 30202                           
 30203                           ; BSR set to: 0
 30204  00CFD2  8184               	bsf	___fladd@bexp& (0+255),0,b
 30205                           
 30206                           ; BSR set to: 0
 30207                           
 30208                           ; BSR set to: 0
 30209  00CFD4  5184               	movf	___fladd@bexp& (0+255),w,b
 30210  00CFD6  B4D8               	btfsc	status,2,c
 30211  00CFD8  D00D               	goto	l3490
 30212                           
 30213                           ; BSR set to: 0
 30214  00CFDA  2984               	incf	___fladd@bexp& (0+255),w,b
 30215  00CFDC  A4D8               	btfss	status,2,c
 30216  00CFDE  D008               	goto	l3491
 30217                           
 30218                           ; BSR set to: 0
 30219  00CFE0  0E00               	movlw	0
 30220  00CFE2  6F72               	movwf	___fladd@b& (0+255),b
 30221  00CFE4  0E00               	movlw	0
 30222  00CFE6  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30223  00CFE8  0E00               	movlw	0
 30224  00CFEA  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30225  00CFEC  0E00               	movlw	0
 30226  00CFEE  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30227  00CFF0                     l3491:
 30228                           
 30229                           ; BSR set to: 0
 30230                           
 30231                           ; BSR set to: 0
 30232  00CFF0  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30233  00CFF2  D006               	goto	L40
 30234  00CFF4                     l3490:
 30235                           
 30236                           ; BSR set to: 0
 30237                           
 30238                           ; BSR set to: 0
 30239  00CFF4  0E00               	movlw	0
 30240  00CFF6  6F72               	movwf	___fladd@b& (0+255),b
 30241  00CFF8  0E00               	movlw	0
 30242  00CFFA  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30243  00CFFC  0E00               	movlw	0
 30244  00CFFE  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30245  00D000                     L40:
 30246  00D000  0E00               	movlw	0
 30247  00D002  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30248                           
 30249                           ; BSR set to: 0
 30250                           
 30251                           ; BSR set to: 0
 30252  00D004  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30253  00D006  0B80               	andlw	128
 30254  00D008  6F83               	movwf	___fladd@aexp& (0+255),b
 30255                           
 30256                           ; BSR set to: 0
 30257  00D00A  5182               	movf	___fladd@signs& (0+255),w,b
 30258  00D00C  1983               	xorwf	___fladd@aexp& (0+255),w,b
 30259  00D00E  A4D8               	btfss	status,2,c
 30260                           
 30261                           ; BSR set to: 0
 30262  00D010  8D82               	bsf	___fladd@signs& (0+255),6,b
 30263                           
 30264                           ; BSR set to: 0
 30265                           
 30266                           ; BSR set to: 0
 30267  00D012  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30268  00D014  2579               	addwf	(___fladd@a+3)& (0+255),w,b
 30269  00D016  6F83               	movwf	___fladd@aexp& (0+255),b
 30270                           
 30271                           ; BSR set to: 0
 30272  00D018  BF78               	btfsc	(___fladd@a+2)& (0+255),7,b
 30273                           
 30274                           ; BSR set to: 0
 30275  00D01A  8183               	bsf	___fladd@aexp& (0+255),0,b
 30276                           
 30277                           ; BSR set to: 0
 30278                           
 30279                           ; BSR set to: 0
 30280  00D01C  5183               	movf	___fladd@aexp& (0+255),w,b
 30281  00D01E  B4D8               	btfsc	status,2,c
 30282  00D020  D00D               	goto	l3495
 30283                           
 30284                           ; BSR set to: 0
 30285  00D022  2983               	incf	___fladd@aexp& (0+255),w,b
 30286  00D024  A4D8               	btfss	status,2,c
 30287  00D026  D008               	goto	l3496
 30288                           
 30289                           ; BSR set to: 0
 30290  00D028  0E00               	movlw	0
 30291  00D02A  6F76               	movwf	___fladd@a& (0+255),b
 30292  00D02C  0E00               	movlw	0
 30293  00D02E  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30294  00D030  0E00               	movlw	0
 30295  00D032  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30296  00D034  0E00               	movlw	0
 30297  00D036  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30298  00D038                     l3496:
 30299                           
 30300                           ; BSR set to: 0
 30301                           
 30302                           ; BSR set to: 0
 30303  00D038  8F78               	bsf	(___fladd@a+2)& (0+255),7,b
 30304  00D03A  D006               	goto	L41
 30305  00D03C                     l3495:
 30306                           
 30307                           ; BSR set to: 0
 30308                           
 30309                           ; BSR set to: 0
 30310  00D03C  0E00               	movlw	0
 30311  00D03E  6F76               	movwf	___fladd@a& (0+255),b
 30312  00D040  0E00               	movlw	0
 30313  00D042  6F77               	movwf	(___fladd@a+1)& (0+255),b
 30314  00D044  0E00               	movlw	0
 30315  00D046  6F78               	movwf	(___fladd@a+2)& (0+255),b
 30316  00D048                     L41:
 30317  00D048  0E00               	movlw	0
 30318  00D04A  6F79               	movwf	(___fladd@a+3)& (0+255),b
 30319                           
 30320                           ; BSR set to: 0
 30321                           
 30322                           ; BSR set to: 0
 30323  00D04C  5184               	movf	___fladd@bexp& (0+255),w,b
 30324  00D04E  5D83               	subwf	___fladd@aexp& (0+255),w,b
 30325  00D050  B0D8               	btfsc	status,0,c
 30326  00D052  D022               	goto	l3498
 30327                           
 30328                           ; BSR set to: 0
 30329  00D054  AD82               	btfss	___fladd@signs& (0+255),6,b
 30330  00D056  D002               	goto	l3499
 30331                           
 30332                           ; BSR set to: 0
 30333  00D058  0E80               	movlw	128
 30334  00D05A  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30335  00D05C                     l3499:
 30336                           
 30337                           ; BSR set to: 0
 30338                           
 30339                           ; BSR set to: 0
 30340  00D05C  C084  F085         	movff	___fladd@bexp,___fladd@grs
 30341                           
 30342                           ; BSR set to: 0
 30343  00D060  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30344                           
 30345                           ; BSR set to: 0
 30346  00D064  C085  F083         	movff	___fladd@grs,___fladd@aexp
 30347                           
 30348                           ; BSR set to: 0
 30349  00D068  C072  F085         	movff	___fladd@b,___fladd@grs
 30350                           
 30351                           ; BSR set to: 0
 30352  00D06C  C076  F072         	movff	___fladd@a,___fladd@b
 30353                           
 30354                           ; BSR set to: 0
 30355  00D070  C085  F076         	movff	___fladd@grs,___fladd@a
 30356                           
 30357                           ; BSR set to: 0
 30358  00D074  C073  F085         	movff	___fladd@b+1,___fladd@grs
 30359                           
 30360                           ; BSR set to: 0
 30361  00D078  C077  F073         	movff	___fladd@a+1,___fladd@b+1
 30362                           
 30363                           ; BSR set to: 0
 30364  00D07C  C085  F077         	movff	___fladd@grs,___fladd@a+1
 30365                           
 30366                           ; BSR set to: 0
 30367  00D080  C074  F085         	movff	___fladd@b+2,___fladd@grs
 30368                           
 30369                           ; BSR set to: 0
 30370  00D084  C078  F074         	movff	___fladd@a+2,___fladd@b+2
 30371                           
 30372                           ; BSR set to: 0
 30373  00D088  C085  F078         	movff	___fladd@grs,___fladd@a+2
 30374                           
 30375                           ; BSR set to: 0
 30376  00D08C  C075  F085         	movff	___fladd@b+3,___fladd@grs
 30377                           
 30378                           ; BSR set to: 0
 30379  00D090  C079  F075         	movff	___fladd@a+3,___fladd@b+3
 30380                           
 30381                           ; BSR set to: 0
 30382  00D094  C085  F079         	movff	___fladd@grs,___fladd@a+3
 30383  00D098                     l3498:
 30384                           
 30385                           ; BSR set to: 0
 30386                           
 30387                           ; BSR set to: 0
 30388  00D098  0E00               	movlw	0
 30389  00D09A  6F85               	movwf	___fladd@grs& (0+255),b
 30390                           
 30391                           ; BSR set to: 0
 30392  00D09C  5184               	movf	___fladd@bexp& (0+255),w,b
 30393  00D09E  6F7A               	movwf	??___fladd& (0+255),b
 30394  00D0A0  6B7B               	clrf	(??___fladd+1)& (0+255),b
 30395  00D0A2  1F7A               	comf	??___fladd& (0+255),f,b
 30396  00D0A4  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30397  00D0A6  4B7A               	infsnz	??___fladd& (0+255),f,b
 30398  00D0A8  2B7B               	incf	(??___fladd+1)& (0+255),f,b
 30399  00D0AA  5183               	movf	___fladd@aexp& (0+255),w,b
 30400  00D0AC  6F7C               	movwf	(??___fladd+2)& (0+255),b
 30401  00D0AE  6B7D               	clrf	(??___fladd+3)& (0+255),b
 30402  00D0B0  517A               	movf	??___fladd& (0+255),w,b
 30403  00D0B2  277C               	addwf	(??___fladd+2)& (0+255),f,b
 30404  00D0B4  517B               	movf	(??___fladd+1)& (0+255),w,b
 30405  00D0B6  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30406  00D0B8  BF7D               	btfsc	(??___fladd+3)& (0+255),7,b
 30407  00D0BA  D02C               	goto	l3502
 30408  00D0BC  517D               	movf	(??___fladd+3)& (0+255),w,b
 30409  00D0BE  E104               	bnz	u15440
 30410  00D0C0  0E1A               	movlw	26
 30411  00D0C2  5D7C               	subwf	(??___fladd+2)& (0+255),w,b
 30412  00D0C4  A0D8               	btfss	status,0,c
 30413  00D0C6  D026               	goto	l3502
 30414  00D0C8                     u15440:
 30415                           
 30416                           ; BSR set to: 0
 30417  00D0C8  5172               	movf	___fladd@b& (0+255),w,b
 30418  00D0CA  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30419  00D0CC  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30420  00D0CE  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30421  00D0D0  B4D8               	btfsc	status,2,c
 30422  00D0D2  D002               	goto	u15450
 30423  00D0D4  0E01               	movlw	1
 30424  00D0D6  D001               	goto	u15460
 30425  00D0D8                     u15450:
 30426  00D0D8  0E00               	movlw	0
 30427  00D0DA                     u15460:
 30428  00D0DA  6F85               	movwf	___fladd@grs& (0+255),b
 30429                           
 30430                           ; BSR set to: 0
 30431  00D0DC  0E00               	movlw	0
 30432  00D0DE  6F72               	movwf	___fladd@b& (0+255),b
 30433  00D0E0  0E00               	movlw	0
 30434  00D0E2  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30435  00D0E4  0E00               	movlw	0
 30436  00D0E6  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30437  00D0E8  0E00               	movlw	0
 30438  00D0EA  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30439                           
 30440                           ; BSR set to: 0
 30441  00D0EC  C083  F084         	movff	___fladd@aexp,___fladd@bexp
 30442  00D0F0  D015               	goto	u15490
 30443  00D0F2                     l3503:
 30444                           
 30445                           ; BSR set to: 0
 30446  00D0F2  A185               	btfss	___fladd@grs& (0+255),0,b
 30447  00D0F4  D005               	goto	l3504
 30448                           
 30449                           ; BSR set to: 0
 30450  00D0F6  90D8               	bcf	status,0,c
 30451  00D0F8  3185               	rrcf	___fladd@grs& (0+255),w,b
 30452  00D0FA  0901               	iorlw	1
 30453  00D0FC  6F85               	movwf	___fladd@grs& (0+255),b
 30454  00D0FE  D002               	goto	l3505
 30455  00D100                     l3504:
 30456                           
 30457                           ; BSR set to: 0
 30458                           
 30459                           ; BSR set to: 0
 30460  00D100  90D8               	bcf	status,0,c
 30461  00D102  3385               	rrcf	___fladd@grs& (0+255),f,b
 30462  00D104                     l3505:
 30463                           
 30464                           ; BSR set to: 0
 30465                           
 30466                           ; BSR set to: 0
 30467  00D104  B172               	btfsc	___fladd@b& (0+255),0,b
 30468                           
 30469                           ; BSR set to: 0
 30470  00D106  8F85               	bsf	___fladd@grs& (0+255),7,b
 30471                           
 30472                           ; BSR set to: 0
 30473                           
 30474                           ; BSR set to: 0
 30475  00D108  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30476  00D10A  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30477  00D10C  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30478  00D10E  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30479  00D110  3372               	rrcf	___fladd@b& (0+255),f,b
 30480                           
 30481                           ; BSR set to: 0
 30482  00D112  2B84               	incf	___fladd@bexp& (0+255),f,b
 30483  00D114                     l3502:
 30484                           
 30485                           ; BSR set to: 0
 30486  00D114  5183               	movf	___fladd@aexp& (0+255),w,b
 30487  00D116  5D84               	subwf	___fladd@bexp& (0+255),w,b
 30488  00D118  A0D8               	btfss	status,0,c
 30489  00D11A  D7EB               	goto	l3503
 30490  00D11C                     u15490:
 30491                           
 30492                           ; BSR set to: 0
 30493                           
 30494                           ; BSR set to: 0
 30495  00D11C  BD82               	btfsc	___fladd@signs& (0+255),6,b
 30496  00D11E  D028               	goto	l3508
 30497                           
 30498                           ; BSR set to: 0
 30499  00D120  5184               	movf	___fladd@bexp& (0+255),w,b
 30500  00D122  A4D8               	btfss	status,2,c
 30501  00D124  D009               	goto	l3509
 30502                           
 30503                           ; BSR set to: 0
 30504  00D126  0E00               	movlw	0
 30505  00D128  6F72               	movwf	?___fladd& (0+255),b
 30506  00D12A  0E00               	movlw	0
 30507  00D12C  6F73               	movwf	(?___fladd+1)& (0+255),b
 30508  00D12E  0E00               	movlw	0
 30509  00D130  6F74               	movwf	(?___fladd+2)& (0+255),b
 30510  00D132  0E00               	movlw	0
 30511  00D134  6F75               	movwf	(?___fladd+3)& (0+255),b
 30512                           
 30513                           ; BSR set to: 0
 30514  00D136  0012               	return	
 30515  00D138                     l3509:
 30516                           
 30517                           ; BSR set to: 0
 30518                           
 30519                           ; BSR set to: 0
 30520  00D138  5176               	movf	___fladd@a& (0+255),w,b
 30521  00D13A  2772               	addwf	___fladd@b& (0+255),f,b
 30522  00D13C  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30523  00D13E  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30524  00D140  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30525  00D142  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30526  00D144  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30527  00D146  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30528                           
 30529                           ; BSR set to: 0
 30530  00D148  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30531  00D14A  D082               	goto	u15620
 30532                           
 30533                           ; BSR set to: 0
 30534  00D14C  A185               	btfss	___fladd@grs& (0+255),0,b
 30535  00D14E  D005               	goto	l3512
 30536                           
 30537                           ; BSR set to: 0
 30538  00D150  90D8               	bcf	status,0,c
 30539  00D152  3185               	rrcf	___fladd@grs& (0+255),w,b
 30540  00D154  0901               	iorlw	1
 30541  00D156  6F85               	movwf	___fladd@grs& (0+255),b
 30542  00D158  D002               	goto	l3513
 30543  00D15A                     l3512:
 30544                           
 30545                           ; BSR set to: 0
 30546                           
 30547                           ; BSR set to: 0
 30548  00D15A  90D8               	bcf	status,0,c
 30549  00D15C  3385               	rrcf	___fladd@grs& (0+255),f,b
 30550  00D15E                     l3513:
 30551                           
 30552                           ; BSR set to: 0
 30553                           
 30554                           ; BSR set to: 0
 30555  00D15E  B172               	btfsc	___fladd@b& (0+255),0,b
 30556                           
 30557                           ; BSR set to: 0
 30558  00D160  8F85               	bsf	___fladd@grs& (0+255),7,b
 30559                           
 30560                           ; BSR set to: 0
 30561                           
 30562                           ; BSR set to: 0
 30563  00D162  3575               	rlcf	(___fladd@b+3)& (0+255),w,b
 30564  00D164  3375               	rrcf	(___fladd@b+3)& (0+255),f,b
 30565  00D166  3374               	rrcf	(___fladd@b+2)& (0+255),f,b
 30566  00D168  3373               	rrcf	(___fladd@b+1)& (0+255),f,b
 30567  00D16A  3372               	rrcf	___fladd@b& (0+255),f,b
 30568                           
 30569                           ; BSR set to: 0
 30570  00D16C  2B84               	incf	___fladd@bexp& (0+255),f,b
 30571                           
 30572                           ; BSR set to: 0
 30573  00D16E  D070               	goto	u15620
 30574  00D170                     l3508:
 30575                           
 30576                           ; BSR set to: 0
 30577                           
 30578                           ; BSR set to: 0
 30579  00D170  5176               	movf	___fladd@a& (0+255),w,b
 30580  00D172  5D72               	subwf	___fladd@b& (0+255),w,b
 30581  00D174  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30582  00D176  5973               	subwfb	(___fladd@b+1)& (0+255),w,b
 30583  00D178  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30584  00D17A  5974               	subwfb	(___fladd@b+2)& (0+255),w,b
 30585  00D17C  5175               	movf	(___fladd@b+3)& (0+255),w,b
 30586  00D17E  0A80               	xorlw	128
 30587  00D180  6F7A               	movwf	??___fladd& (0+255),b
 30588  00D182  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30589  00D184  0A80               	xorlw	128
 30590  00D186  597A               	subwfb	??___fladd& (0+255),w,b
 30591  00D188  B0D8               	btfsc	status,0,c
 30592  00D18A  D036               	goto	l3516
 30593                           
 30594                           ; BSR set to: 0
 30595  00D18C  C072  F07A         	movff	___fladd@b,??___fladd
 30596  00D190  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30597  00D194  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30598  00D198  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30599  00D19C  1F7A               	comf	??___fladd& (0+255),f,b
 30600  00D19E  1F7B               	comf	(??___fladd+1)& (0+255),f,b
 30601  00D1A0  1F7C               	comf	(??___fladd+2)& (0+255),f,b
 30602  00D1A2  1F7D               	comf	(??___fladd+3)& (0+255),f,b
 30603  00D1A4  2B7A               	incf	??___fladd& (0+255),f,b
 30604  00D1A6  0E00               	movlw	0
 30605  00D1A8  237B               	addwfc	(??___fladd+1)& (0+255),f,b
 30606  00D1AA  237C               	addwfc	(??___fladd+2)& (0+255),f,b
 30607  00D1AC  237D               	addwfc	(??___fladd+3)& (0+255),f,b
 30608  00D1AE  5176               	movf	___fladd@a& (0+255),w,b
 30609  00D1B0  257A               	addwf	??___fladd& (0+255),w,b
 30610  00D1B2  6F7E               	movwf	(??___fladd+4)& (0+255),b
 30611  00D1B4  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30612  00D1B6  217B               	addwfc	(??___fladd+1)& (0+255),w,b
 30613  00D1B8  6F7F               	movwf	(??___fladd+5)& (0+255),b
 30614  00D1BA  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30615  00D1BC  217C               	addwfc	(??___fladd+2)& (0+255),w,b
 30616  00D1BE  6F80               	movwf	(??___fladd+6)& (0+255),b
 30617  00D1C0  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30618  00D1C2  217D               	addwfc	(??___fladd+3)& (0+255),w,b
 30619  00D1C4  6F81               	movwf	(??___fladd+7)& (0+255),b
 30620  00D1C6  0EFF               	movlw	255
 30621  00D1C8  257E               	addwf	(??___fladd+4)& (0+255),w,b
 30622  00D1CA  6F72               	movwf	___fladd@b& (0+255),b
 30623  00D1CC  0EFF               	movlw	255
 30624  00D1CE  217F               	addwfc	(??___fladd+5)& (0+255),w,b
 30625  00D1D0  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30626  00D1D2  0EFF               	movlw	255
 30627  00D1D4  2180               	addwfc	(??___fladd+6)& (0+255),w,b
 30628  00D1D6  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30629  00D1D8  0EFF               	movlw	255
 30630  00D1DA  2181               	addwfc	(??___fladd+7)& (0+255),w,b
 30631  00D1DC  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30632  00D1DE  0E80               	movlw	128
 30633  00D1E0  1B82               	xorwf	___fladd@signs& (0+255),f,b
 30634                           
 30635                           ; BSR set to: 0
 30636  00D1E2  6D85               	negf	___fladd@grs& (0+255),b
 30637                           
 30638                           ; BSR set to: 0
 30639  00D1E4  5185               	movf	___fladd@grs& (0+255),w,b
 30640  00D1E6  A4D8               	btfss	status,2,c
 30641  00D1E8  D00F               	goto	l3518
 30642                           
 30643                           ; BSR set to: 0
 30644  00D1EA  0E01               	movlw	1
 30645  00D1EC  2772               	addwf	___fladd@b& (0+255),f,b
 30646  00D1EE  0E00               	movlw	0
 30647  00D1F0  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30648  00D1F2  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30649  00D1F4  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30650                           
 30651                           ; BSR set to: 0
 30652  00D1F6  D008               	goto	l3518
 30653  00D1F8                     l3516:
 30654                           
 30655                           ; BSR set to: 0
 30656                           
 30657                           ; BSR set to: 0
 30658  00D1F8  5176               	movf	___fladd@a& (0+255),w,b
 30659  00D1FA  5F72               	subwf	___fladd@b& (0+255),f,b
 30660  00D1FC  5177               	movf	(___fladd@a+1)& (0+255),w,b
 30661  00D1FE  5B73               	subwfb	(___fladd@b+1)& (0+255),f,b
 30662  00D200  5178               	movf	(___fladd@a+2)& (0+255),w,b
 30663  00D202  5B74               	subwfb	(___fladd@b+2)& (0+255),f,b
 30664  00D204  5179               	movf	(___fladd@a+3)& (0+255),w,b
 30665  00D206  5B75               	subwfb	(___fladd@b+3)& (0+255),f,b
 30666  00D208                     l3518:
 30667                           
 30668                           ; BSR set to: 0
 30669  00D208  5172               	movf	___fladd@b& (0+255),w,b
 30670  00D20A  1173               	iorwf	(___fladd@b+1)& (0+255),w,b
 30671  00D20C  1174               	iorwf	(___fladd@b+2)& (0+255),w,b
 30672  00D20E  1175               	iorwf	(___fladd@b+3)& (0+255),w,b
 30673  00D210  A4D8               	btfss	status,2,c
 30674  00D212  D01C               	goto	l3525
 30675                           
 30676                           ; BSR set to: 0
 30677  00D214  5185               	movf	___fladd@grs& (0+255),w,b
 30678  00D216  A4D8               	btfss	status,2,c
 30679  00D218  D019               	goto	l3525
 30680                           
 30681                           ; BSR set to: 0
 30682  00D21A  0E00               	movlw	0
 30683  00D21C  6F72               	movwf	?___fladd& (0+255),b
 30684  00D21E  0E00               	movlw	0
 30685  00D220  6F73               	movwf	(?___fladd+1)& (0+255),b
 30686  00D222  0E00               	movlw	0
 30687  00D224  6F74               	movwf	(?___fladd+2)& (0+255),b
 30688  00D226  0E00               	movlw	0
 30689  00D228  6F75               	movwf	(?___fladd+3)& (0+255),b
 30690                           
 30691                           ; BSR set to: 0
 30692  00D22A  0012               	return	
 30693  00D22C                     
 30694                           ; BSR set to: 0
 30695                           
 30696                           ; BSR set to: 0
 30697  00D22C  90D8               	bcf	status,0,c
 30698  00D22E  3772               	rlcf	___fladd@b& (0+255),f,b
 30699  00D230  3773               	rlcf	(___fladd@b+1)& (0+255),f,b
 30700  00D232  3774               	rlcf	(___fladd@b+2)& (0+255),f,b
 30701  00D234  3775               	rlcf	(___fladd@b+3)& (0+255),f,b
 30702                           
 30703                           ; BSR set to: 0
 30704  00D236  BF85               	btfsc	___fladd@grs& (0+255),7,b
 30705                           
 30706                           ; BSR set to: 0
 30707  00D238  8172               	bsf	___fladd@b& (0+255),0,b
 30708                           
 30709                           ; BSR set to: 0
 30710                           
 30711                           ; BSR set to: 0
 30712  00D23A  A185               	btfss	___fladd@grs& (0+255),0,b
 30713  00D23C  D002               	goto	l3523
 30714                           
 30715                           ; BSR set to: 0
 30716  00D23E  80D8               	bsf	status,0,c
 30717  00D240  D001               	goto	L42
 30718  00D242                     l3523:
 30719                           
 30720                           ; BSR set to: 0
 30721                           
 30722                           ; BSR set to: 0
 30723  00D242  90D8               	bcf	status,0,c
 30724  00D244                     L42:
 30725  00D244  3785               	rlcf	___fladd@grs& (0+255),f,b
 30726                           
 30727                           ; BSR set to: 0
 30728                           
 30729                           ; BSR set to: 0
 30730  00D246  5184               	movf	___fladd@bexp& (0+255),w,b
 30731  00D248  A4D8               	btfss	status,2,c
 30732                           
 30733                           ; BSR set to: 0
 30734  00D24A  0784               	decf	___fladd@bexp& (0+255),f,b
 30735  00D24C                     l3525:
 30736                           
 30737                           ; BSR set to: 0
 30738                           
 30739                           ; BSR set to: 0
 30740                           
 30741                           ; BSR set to: 0
 30742  00D24C  AF74               	btfss	(___fladd@b+2)& (0+255),7,b
 30743  00D24E  D7EE               	goto	l3521
 30744  00D250                     u15620:
 30745                           
 30746                           ; BSR set to: 0
 30747                           
 30748                           ; BSR set to: 0
 30749                           
 30750                           ; BSR set to: 0
 30751  00D250  0E00               	movlw	0
 30752  00D252  6F83               	movwf	___fladd@aexp& (0+255),b
 30753                           
 30754                           ; BSR set to: 0
 30755  00D254  AF85               	btfss	___fladd@grs& (0+255),7,b
 30756  00D256  D00A               	goto	l3530
 30757                           
 30758                           ; BSR set to: 0
 30759  00D258  C085  F07A         	movff	___fladd@grs,??___fladd
 30760  00D25C  0E7F               	movlw	127
 30761  00D25E  177A               	andwf	??___fladd& (0+255),f,b
 30762  00D260  A4D8               	btfss	status,2,c
 30763  00D262  D002               	goto	u15650
 30764                           
 30765                           ; BSR set to: 0
 30766                           
 30767                           ; BSR set to: 0
 30768  00D264  A172               	btfss	___fladd@b& (0+255),0,b
 30769  00D266  D002               	goto	l3530
 30770  00D268                     u15650:
 30771                           
 30772                           ; BSR set to: 0
 30773  00D268  0E01               	movlw	1
 30774  00D26A  6F83               	movwf	___fladd@aexp& (0+255),b
 30775  00D26C                     l3530:
 30776                           
 30777                           ; BSR set to: 0
 30778                           
 30779                           ; BSR set to: 0
 30780                           
 30781                           ; BSR set to: 0
 30782  00D26C  5183               	movf	___fladd@aexp& (0+255),w,b
 30783  00D26E  B4D8               	btfsc	status,2,c
 30784  00D270  D020               	goto	l3533
 30785                           
 30786                           ; BSR set to: 0
 30787  00D272  0E01               	movlw	1
 30788  00D274  2772               	addwf	___fladd@b& (0+255),f,b
 30789  00D276  0E00               	movlw	0
 30790  00D278  2373               	addwfc	(___fladd@b+1)& (0+255),f,b
 30791  00D27A  2374               	addwfc	(___fladd@b+2)& (0+255),f,b
 30792  00D27C  2375               	addwfc	(___fladd@b+3)& (0+255),f,b
 30793                           
 30794                           ; BSR set to: 0
 30795  00D27E  A175               	btfss	(___fladd@b+3)& (0+255),0,b
 30796  00D280  D018               	goto	l3533
 30797                           
 30798                           ; BSR set to: 0
 30799  00D282  C072  F07A         	movff	___fladd@b,??___fladd
 30800  00D286  C073  F07B         	movff	___fladd@b+1,??___fladd+1
 30801  00D28A  C074  F07C         	movff	___fladd@b+2,??___fladd+2
 30802  00D28E  C075  F07D         	movff	___fladd@b+3,??___fladd+3
 30803  00D292  357D               	rlcf	(??___fladd+3)& (0+255),w,b
 30804  00D294  337D               	rrcf	(??___fladd+3)& (0+255),f,b
 30805  00D296  337C               	rrcf	(??___fladd+2)& (0+255),f,b
 30806  00D298  337B               	rrcf	(??___fladd+1)& (0+255),f,b
 30807  00D29A  337A               	rrcf	??___fladd& (0+255),f,b
 30808  00D29C  C07A  F072         	movff	??___fladd,___fladd@b
 30809  00D2A0  C07B  F073         	movff	??___fladd+1,___fladd@b+1
 30810  00D2A4  C07C  F074         	movff	??___fladd+2,___fladd@b+2
 30811  00D2A8  C07D  F075         	movff	??___fladd+3,___fladd@b+3
 30812  00D2AC  2984               	incf	___fladd@bexp& (0+255),w,b
 30813  00D2AE  A4D8               	btfss	status,2,c
 30814                           
 30815                           ; BSR set to: 0
 30816  00D2B0  2B84               	incf	___fladd@bexp& (0+255),f,b
 30817  00D2B2                     l3533:
 30818                           
 30819                           ; BSR set to: 0
 30820                           
 30821                           ; BSR set to: 0
 30822                           
 30823                           ; BSR set to: 0
 30824                           
 30825                           ; BSR set to: 0
 30826  00D2B2  2984               	incf	___fladd@bexp& (0+255),w,b
 30827  00D2B4  B4D8               	btfsc	status,2,c
 30828  00D2B6  D003               	goto	u15700
 30829                           
 30830                           ; BSR set to: 0
 30831  00D2B8  5184               	movf	___fladd@bexp& (0+255),w,b
 30832  00D2BA  A4D8               	btfss	status,2,c
 30833  00D2BC  D00D               	goto	l3537
 30834  00D2BE                     u15700:
 30835                           
 30836                           ; BSR set to: 0
 30837                           
 30838                           ; BSR set to: 0
 30839  00D2BE  0E00               	movlw	0
 30840  00D2C0  6F72               	movwf	___fladd@b& (0+255),b
 30841  00D2C2  0E00               	movlw	0
 30842  00D2C4  6F73               	movwf	(___fladd@b+1)& (0+255),b
 30843  00D2C6  0E00               	movlw	0
 30844  00D2C8  6F74               	movwf	(___fladd@b+2)& (0+255),b
 30845  00D2CA  0E00               	movlw	0
 30846  00D2CC  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30847  00D2CE  5184               	movf	___fladd@bexp& (0+255),w,b
 30848  00D2D0  A4D8               	btfss	status,2,c
 30849  00D2D2  D002               	goto	l3537
 30850                           
 30851                           ; BSR set to: 0
 30852  00D2D4  0E00               	movlw	0
 30853  00D2D6  6F82               	movwf	___fladd@signs& (0+255),b
 30854  00D2D8                     l3537:
 30855                           
 30856                           ; BSR set to: 0
 30857                           
 30858                           ; BSR set to: 0
 30859                           
 30860                           ; BSR set to: 0
 30861  00D2D8  A184               	btfss	___fladd@bexp& (0+255),0,b
 30862  00D2DA  D002               	goto	l3538
 30863                           
 30864                           ; BSR set to: 0
 30865  00D2DC  8F74               	bsf	(___fladd@b+2)& (0+255),7,b
 30866  00D2DE  D001               	goto	l3539
 30867  00D2E0                     l3538:
 30868                           
 30869                           ; BSR set to: 0
 30870                           
 30871                           ; BSR set to: 0
 30872  00D2E0  9F74               	bcf	(___fladd@b+2)& (0+255),7,b
 30873  00D2E2                     l3539:
 30874                           
 30875                           ; BSR set to: 0
 30876                           
 30877                           ; BSR set to: 0
 30878  00D2E2  90D8               	bcf	status,0,c
 30879  00D2E4  3184               	rrcf	___fladd@bexp& (0+255),w,b
 30880  00D2E6  6F75               	movwf	(___fladd@b+3)& (0+255),b
 30881                           
 30882                           ; BSR set to: 0
 30883  00D2E8  BF82               	btfsc	___fladd@signs& (0+255),7,b
 30884                           
 30885                           ; BSR set to: 0
 30886  00D2EA  8F75               	bsf	(___fladd@b+3)& (0+255),7,b
 30887                           
 30888                           ; BSR set to: 0
 30889                           
 30890                           ; BSR set to: 0
 30891  00D2EC  C072  F072         	movff	___fladd@b,?___fladd
 30892  00D2F0  C073  F073         	movff	___fladd@b+1,?___fladd+1
 30893  00D2F4  C074  F074         	movff	___fladd@b+2,?___fladd+2
 30894  00D2F8  C075  F075         	movff	___fladd@b+3,?___fladd+3
 30895  00D2FC  0012               	return	
 30896  00D2FE                     __end_of___fladd:
 30897                           	opt stack 0
 30898                           tblptru	equ	0xFF8
 30899                           tblptrh	equ	0xFF7
 30900                           tblptrl	equ	0xFF6
 30901                           tablat	equ	0xFF5
 30902                           prodh	equ	0xFF4
 30903                           prodl	equ	0xFF3
 30904                           intcon	equ	0xFF2
 30905                           postinc0	equ	0xFEE
 30906                           wreg	equ	0xFE8
 30907                           indf1	equ	0xFE7
 30908                           postinc1	equ	0xFE6
 30909                           postdec1	equ	0xFE5
 30910                           plusw1	equ	0xFE3
 30911                           fsr1h	equ	0xFE2
 30912                           fsr1l	equ	0xFE1
 30913                           indf2	equ	0xFDF
 30914                           postinc2	equ	0xFDE
 30915                           postdec2	equ	0xFDD
 30916                           plusw2	equ	0xFDB
 30917                           fsr2h	equ	0xFDA
 30918                           fsr2l	equ	0xFD9
 30919                           status	equ	0xFD8
 30920                           
 30921 ;; *************** function _USBDeviceInit *****************
 30922 ;; Defined at:
 30923 ;;		line 277 in file "usb_device.c"
 30924 ;; Parameters:    Size  Location     Type
 30925 ;;		None
 30926 ;; Auto vars:     Size  Location     Type
 30927 ;;  i               1    8[BANK0 ] unsigned char 
 30928 ;; Return value:  Size  Location     Type
 30929 ;;                  1    wreg      void 
 30930 ;; Registers used:
 30931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30932 ;; Tracked objects:
 30933 ;;		On entry : 0/0
 30934 ;;		On exit  : 0/0
 30935 ;;		Unchanged: 0/0
 30936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30938 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30940 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30941 ;;Total ram usage:        1 bytes
 30942 ;; Hardware stack levels used:    1
 30943 ;; Hardware stack levels required when called:   11
 30944 ;; This function calls:
 30945 ;;		_memset
 30946 ;; This function is called by:
 30947 ;;		_main
 30948 ;; This function uses a non-reentrant model
 30949 ;;
 30950                           
 30951                           	psect	text122
 30952  00FEEC                     __ptext122:
 30953                           	opt stack 0
 30954  00FEEC                     _USBDeviceInit:
 30955                           	opt stack 19
 30956                           
 30957                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 30958                           
 30959                           ; BSR set to: 0
 30960                           ;incstack = 0
 30961  00FEEC  98A0               	bcf	4000,4,c	;volatile
 30962                           
 30963                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 30964  00FEEE  0E00               	movlw	0
 30965  00FEF0  6E63               	movwf	3939,c	;volatile
 30966                           
 30967                           ;usb_device.c: 291: {UIR = 0;};
 30968  00FEF2  0E00               	movlw	0
 30969  00FEF4  6E62               	movwf	3938,c	;volatile
 30970                           
 30971                           ;usb_device.c: 294: UEP0 = 0;
 30972  00FEF6  0E00               	movlw	0
 30973  00FEF8  010F               	movlb	15	; () banked
 30974  00FEFA  6F26               	movwf	38,b	;volatile
 30975                           
 30976                           ; BSR set to: 15
 30977                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 30978  00FEFC  0E27               	movlw	39
 30979  00FEFE  0100               	movlb	0	; () banked
 30980  00FF00  6F60               	movwf	memset@p1& (0+255),b
 30981  00FF02  0E0F               	movlw	15
 30982  00FF04  6F61               	movwf	(memset@p1+1)& (0+255),b
 30983  00FF06  0E00               	movlw	0
 30984  00FF08  6F63               	movwf	(memset@c+1)& (0+255),b
 30985  00FF0A  0E00               	movlw	0
 30986  00FF0C  6F62               	movwf	memset@c& (0+255),b
 30987  00FF0E  0E00               	movlw	0
 30988  00FF10  6F65               	movwf	(memset@n+1)& (0+255),b
 30989  00FF12  0E02               	movlw	2
 30990  00FF14  6F64               	movwf	memset@n& (0+255),b
 30991  00FF16  EC54  F0AA         	call	_memset	;wreg free
 30992                           
 30993                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 30994  00FF1A  0E16               	movlw	22
 30995  00FF1C  010F               	movlb	15	; () banked
 30996  00FF1E  6F39               	movwf	57,b	;volatile
 30997                           
 30998                           ; BSR set to: 15
 30999  00FF20  0E9F               	movlw	159
 31000  00FF22  6F37               	movwf	55,b	;volatile
 31001                           
 31002                           ; BSR set to: 15
 31003  00FF24  0E7B               	movlw	123
 31004  00FF26  6F36               	movwf	54,b	;volatile
 31005                           
 31006                           ; BSR set to: 15
 31007                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 31008  00FF28  0E00               	movlw	0
 31009  00FF2A  0100               	movlb	0	; () banked
 31010  00FF2C  6F68               	movwf	USBDeviceInit@i& (0+255),b
 31011  00FF2E                     l17481:
 31012                           
 31013                           ; BSR set to: 0
 31014  00FF2E  0E0B               	movlw	11
 31015  00FF30  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 31016  00FF32  D001               	goto	l145
 31017  00FF34  D00E               	goto	u16810
 31018  00FF36                     l145:
 31019                           
 31020                           ; BSR set to: 0
 31021                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 31022                           
 31023                           ; BSR set to: 0
 31024  00FF36  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31025  00FF38  0D04               	mullw	4
 31026  00FF3A  0E00               	movlw	0
 31027  00FF3C  24F3               	addwf	prodl,w,c
 31028  00FF3E  6ED9               	movwf	fsr2l,c
 31029  00FF40  0E0D               	movlw	13
 31030  00FF42  20F4               	addwfc	prodh,w,c
 31031  00FF44  6EDA               	movwf	fsr2h,c
 31032  00FF46  6ADE               	clrf	postinc2,c
 31033  00FF48  6ADE               	clrf	postinc2,c
 31034  00FF4A  6ADE               	clrf	postinc2,c
 31035  00FF4C  6ADD               	clrf	postdec2,c
 31036                           
 31037                           ; BSR set to: 0
 31038  00FF4E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 31039  00FF50  D7EE               	goto	l17481
 31040  00FF52                     u16810:
 31041                           
 31042                           ; BSR set to: 0
 31043                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 31044  00FF52  8C65               	bsf	3941,6,c	;volatile
 31045                           
 31046                           ; BSR set to: 0
 31047                           ;usb_device.c: 316: UADDR = 0x00;
 31048  00FF54  0E00               	movlw	0
 31049  00FF56  010F               	movlb	15	; () banked
 31050  00FF58  6F38               	movwf	56,b	;volatile
 31051                           
 31052                           ; BSR set to: 15
 31053                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 31054  00FF5A  9865               	bcf	3941,4,c	;volatile
 31055                           
 31056                           ; BSR set to: 15
 31057                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 31058  00FF5C  9C65               	bcf	3941,6,c	;volatile
 31059  00FF5E                     
 31060                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 31061                           
 31062                           ; BSR set to: 15
 31063  00FF5E  9662               	bcf	3938,3,c	;volatile
 31064                           
 31065                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 31066  00FF60  0E00               	movlw	0
 31067  00FF62  6E55               	movwf	_inPipes+3,c	;volatile
 31068                           
 31069                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 31070  00FF64  0E00               	movlw	0
 31071  00FF66  0101               	movlb	1	; () banked
 31072  00FF68  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 31073                           
 31074                           ; BSR set to: 1
 31075                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 31076  00FF6A  0E00               	movlw	0
 31077  00FF6C  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 31078  00FF6E  0E00               	movlw	0
 31079  00FF70  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 31080                           
 31081                           ; BSR set to: 1
 31082                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 31083  00FF72  B662               	btfsc	3938,3,c	;volatile
 31084  00FF74  D7F4               	goto	l147
 31085                           
 31086                           ; BSR set to: 1
 31087                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 31088                           
 31089                           ; BSR set to: 1
 31090  00FF76  0E01               	movlw	1
 31091  00FF78  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 31092                           
 31093                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 31094  00FF7A  0E01               	movlw	1
 31095  00FF7C  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 31096                           
 31097                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 31098  00FF7E  0E00               	movlw	0
 31099  00FF80  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 31100                           
 31101                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 31102  00FF82  0E00               	movlw	0
 31103  00FF84  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 31104                           
 31105                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 31106  00FF86  0E00               	movlw	0
 31107  00FF88  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 31108                           
 31109                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 31110  00FF8A  0E00               	movlw	0
 31111  00FF8C  0100               	movlb	0	; () banked
 31112  00FF8E  6F68               	movwf	USBDeviceInit@i& (0+255),b
 31113  00FF90                     l17509:
 31114                           
 31115                           ; BSR set to: 0
 31116  00FF90  0E02               	movlw	2
 31117  00FF92  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 31118  00FF94  D001               	goto	l149
 31119  00FF96  D02E               	goto	u16840
 31120  00FF98                     l149:
 31121                           
 31122                           ; BSR set to: 0
 31123                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 31124                           
 31125                           ; BSR set to: 0
 31126  00FF98  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31127  00FF9A  0D02               	mullw	2
 31128  00FF9C  0E1B               	movlw	low _pBDTEntryIn
 31129  00FF9E  24F3               	addwf	prodl,w,c
 31130  00FFA0  6ED9               	movwf	fsr2l,c
 31131  00FFA2  0E01               	movlw	high _pBDTEntryIn
 31132  00FFA4  20F4               	addwfc	prodh,w,c
 31133  00FFA6  6EDA               	movwf	fsr2h,c
 31134  00FFA8  0E00               	movlw	0
 31135  00FFAA  6EDE               	movwf	postinc2,c
 31136  00FFAC  0E00               	movlw	0
 31137  00FFAE  6EDD               	movwf	postdec2,c
 31138                           
 31139                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 31140  00FFB0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31141  00FFB2  0D02               	mullw	2
 31142  00FFB4  0E21               	movlw	low _pBDTEntryOut
 31143  00FFB6  24F3               	addwf	prodl,w,c
 31144  00FFB8  6ED9               	movwf	fsr2l,c
 31145  00FFBA  0E01               	movlw	high _pBDTEntryOut
 31146  00FFBC  20F4               	addwfc	prodh,w,c
 31147  00FFBE  6EDA               	movwf	fsr2h,c
 31148  00FFC0  0E00               	movlw	0
 31149  00FFC2  6EDE               	movwf	postinc2,c
 31150  00FFC4  0E00               	movlw	0
 31151  00FFC6  6EDD               	movwf	postdec2,c
 31152                           
 31153                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 31154  00FFC8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31155  00FFCA  0D01               	mullw	1
 31156  00FFCC  0E3C               	movlw	low _ep_data_in
 31157  00FFCE  24F3               	addwf	prodl,w,c
 31158  00FFD0  6ED9               	movwf	fsr2l,c
 31159  00FFD2  0E01               	movlw	high _ep_data_in
 31160  00FFD4  20F4               	addwfc	prodh,w,c
 31161  00FFD6  6EDA               	movwf	fsr2h,c
 31162  00FFD8  0E00               	movlw	0
 31163  00FFDA  6EDF               	movwf	indf2,c
 31164                           
 31165                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 31166  00FFDC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 31167  00FFDE  0D01               	mullw	1
 31168  00FFE0  0E39               	movlw	low _ep_data_out
 31169  00FFE2  24F3               	addwf	prodl,w,c
 31170  00FFE4  6ED9               	movwf	fsr2l,c
 31171  00FFE6  0E01               	movlw	high _ep_data_out
 31172  00FFE8  20F4               	addwfc	prodh,w,c
 31173  00FFEA  6EDA               	movwf	fsr2h,c
 31174  00FFEC  0E00               	movlw	0
 31175  00FFEE  6EDF               	movwf	indf2,c
 31176                           
 31177                           ; BSR set to: 0
 31178  00FFF0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 31179  00FFF2  D7CE               	goto	l17509
 31180  00FFF4                     u16840:
 31181                           
 31182                           ; BSR set to: 0
 31183                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 31184                           
 31185                           ; BSR set to: 0
 31186  00FFF4  0E08               	movlw	8
 31187  00FFF6  0101               	movlb	1	; () banked
 31188  00FFF8  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 31189  00FFFA  0E0D               	movlw	13
 31190  00FFFC  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 31191                           
 31192                           ; BSR set to: 1
 31193                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 31194  00FFFE  0E16               	movlw	22
 31195  010000  010F               	movlb	15	; () banked
 31196  010002  6F26               	movwf	38,b	;volatile
 31197                           
 31198                           ; BSR set to: 15
 31199                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 31200  010004  0E0D               	movlw	13
 31201  010006  010D               	movlb	13	; () banked
 31202  010008  6F03               	movwf	3,b	;volatile
 31203  01000A  0E30               	movlw	48
 31204  01000C  6F02               	movwf	2,b	;volatile
 31205                           
 31206                           ; BSR set to: 13
 31207                           ;usb_device.c: 359: BDT[0].CNT = 8;
 31208  01000E  0E08               	movlw	8
 31209  010010  6F01               	movwf	1,b	;volatile
 31210                           
 31211                           ; BSR set to: 13
 31212                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 31213  010012  0E04               	movlw	4
 31214  010014  6F00               	movwf	0,b	;volatile
 31215                           
 31216                           ; BSR set to: 13
 31217                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 31218  010016  8F00               	bsf	0,7,b	;volatile
 31219                           
 31220                           ; BSR set to: 13
 31221                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 31222  010018  0E00               	movlw	0
 31223  01001A  0101               	movlb	1	; () banked
 31224  01001C  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 31225                           
 31226                           ; BSR set to: 1
 31227                           ;usb_device.c: 366: USB1msTickCount = 0;
 31228  01001E  0E00               	movlw	0
 31229  010020  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 31230  010022  0E00               	movlw	0
 31231  010024  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 31232  010026  0E00               	movlw	0
 31233  010028  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 31234  01002A  0E00               	movlw	0
 31235  01002C  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 31236                           
 31237                           ; BSR set to: 1
 31238                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 31239  01002E  0E00               	movlw	0
 31240  010030  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 31241                           
 31242                           ; BSR set to: 1
 31243                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 31244  010032  0E00               	movlw	0
 31245  010034  6E5E               	movwf	_USBDeviceState,c	;volatile
 31246                           
 31247                           ; BSR set to: 1
 31248  010036  0012               	return		;funcret
 31249  010038                     __end_of_USBDeviceInit:
 31250                           	opt stack 0
 31251                           tblptru	equ	0xFF8
 31252                           tblptrh	equ	0xFF7
 31253                           tblptrl	equ	0xFF6
 31254                           tablat	equ	0xFF5
 31255                           prodh	equ	0xFF4
 31256                           prodl	equ	0xFF3
 31257                           intcon	equ	0xFF2
 31258                           postinc0	equ	0xFEE
 31259                           wreg	equ	0xFE8
 31260                           indf1	equ	0xFE7
 31261                           postinc1	equ	0xFE6
 31262                           postdec1	equ	0xFE5
 31263                           plusw1	equ	0xFE3
 31264                           fsr1h	equ	0xFE2
 31265                           fsr1l	equ	0xFE1
 31266                           indf2	equ	0xFDF
 31267                           postinc2	equ	0xFDE
 31268                           postdec2	equ	0xFDD
 31269                           plusw2	equ	0xFDB
 31270                           fsr2h	equ	0xFDA
 31271                           fsr2l	equ	0xFD9
 31272                           status	equ	0xFD8
 31273                           
 31274 ;; *************** function _memset *****************
 31275 ;; Defined at:
 31276 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 31277 ;; Parameters:    Size  Location     Type
 31278 ;;  p1              2    0[BANK0 ] PTR void 
 31279 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31280 ;;  c               2    2[BANK0 ] int 
 31281 ;;  n               2    4[BANK0 ] unsigned int 
 31282 ;; Auto vars:     Size  Location     Type
 31283 ;;  p               2    6[BANK0 ] PTR unsigned char 
 31284 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 31285 ;; Return value:  Size  Location     Type
 31286 ;;                  2    0[BANK0 ] PTR void 
 31287 ;; Registers used:
 31288 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 31289 ;; Tracked objects:
 31290 ;;		On entry : 0/0
 31291 ;;		On exit  : 0/0
 31292 ;;		Unchanged: 0/0
 31293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31294 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31295 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31297 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31298 ;;Total ram usage:        8 bytes
 31299 ;; Hardware stack levels used:    1
 31300 ;; Hardware stack levels required when called:   10
 31301 ;; This function calls:
 31302 ;;		Nothing
 31303 ;; This function is called by:
 31304 ;;		_USBDeviceInit
 31305 ;; This function uses a non-reentrant model
 31306 ;;
 31307                           
 31308                           	psect	text123
 31309  0154A8                     __ptext123:
 31310                           	opt stack 0
 31311  0154A8                     _memset:
 31312                           	opt stack 19
 31313                           
 31314                           ; BSR set to: 1
 31315                           ;incstack = 0
 31316  0154A8  C060  F066         	movff	memset@p1,memset@p
 31317  0154AC  C061  F067         	movff	memset@p1+1,memset@p+1
 31318  0154B0  D009               	goto	l3715
 31319  0154B2                     l16613:
 31320  0154B2  C066  FFD9         	movff	memset@p,fsr2l
 31321  0154B6  C067  FFDA         	movff	memset@p+1,fsr2h
 31322  0154BA  C062  FFDF         	movff	memset@c,indf2
 31323  0154BE  0100               	movlb	0	; () banked
 31324  0154C0  4B66               	infsnz	memset@p& (0+255),f,b
 31325  0154C2  2B67               	incf	(memset@p+1)& (0+255),f,b
 31326  0154C4                     l3715:
 31327                           
 31328                           ; BSR set to: 0
 31329  0154C4  0100               	movlb	0	; () banked
 31330  0154C6  0764               	decf	memset@n& (0+255),f,b
 31331  0154C8  A0D8               	btfss	status,0,c
 31332  0154CA  0765               	decf	(memset@n+1)& (0+255),f,b
 31333  0154CC  2964               	incf	memset@n& (0+255),w,b
 31334  0154CE  E1F1               	bnz	l16613
 31335  0154D0  2965               	incf	(memset@n+1)& (0+255),w,b
 31336  0154D2  B4D8               	btfsc	status,2,c
 31337  0154D4  0012               	return	
 31338  0154D6  D7ED               	goto	l3716
 31339  0154D8                     __end_of_memset:
 31340                           	opt stack 0
 31341                           tblptru	equ	0xFF8
 31342                           tblptrh	equ	0xFF7
 31343                           tblptrl	equ	0xFF6
 31344                           tablat	equ	0xFF5
 31345                           prodh	equ	0xFF4
 31346                           prodl	equ	0xFF3
 31347                           intcon	equ	0xFF2
 31348                           postinc0	equ	0xFEE
 31349                           wreg	equ	0xFE8
 31350                           indf1	equ	0xFE7
 31351                           postinc1	equ	0xFE6
 31352                           postdec1	equ	0xFE5
 31353                           plusw1	equ	0xFE3
 31354                           fsr1h	equ	0xFE2
 31355                           fsr1l	equ	0xFE1
 31356                           indf2	equ	0xFDF
 31357                           postinc2	equ	0xFDE
 31358                           postdec2	equ	0xFDD
 31359                           plusw2	equ	0xFDB
 31360                           fsr2h	equ	0xFDA
 31361                           fsr2l	equ	0xFD9
 31362                           status	equ	0xFD8
 31363                           
 31364 ;; *************** function _USBDeviceAttach *****************
 31365 ;; Defined at:
 31366 ;;		line 1354 in file "usb_device.c"
 31367 ;; Parameters:    Size  Location     Type
 31368 ;;		None
 31369 ;; Auto vars:     Size  Location     Type
 31370 ;;		None
 31371 ;; Return value:  Size  Location     Type
 31372 ;;                  1    wreg      void 
 31373 ;; Registers used:
 31374 ;;		wreg, status,2
 31375 ;; Tracked objects:
 31376 ;;		On entry : 0/0
 31377 ;;		On exit  : 0/0
 31378 ;;		Unchanged: 0/0
 31379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31383 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31384 ;;Total ram usage:        0 bytes
 31385 ;; Hardware stack levels used:    1
 31386 ;; Hardware stack levels required when called:   10
 31387 ;; This function calls:
 31388 ;;		Nothing
 31389 ;; This function is called by:
 31390 ;;		_main
 31391 ;; This function uses a non-reentrant model
 31392 ;;
 31393                           
 31394                           	psect	text124
 31395  015416                     __ptext124:
 31396                           	opt stack 0
 31397  015416                     _USBDeviceAttach:
 31398                           	opt stack 20
 31399                           
 31400                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 31401                           
 31402                           ; BSR set to: 0
 31403                           ;incstack = 0
 31404  015416  505E               	movf	_USBDeviceState,w,c	;volatile
 31405  015418  A4D8               	btfss	status,2,c
 31406  01541A  0012               	return	
 31407                           
 31408                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 31409  01541C  0E00               	movlw	0
 31410  01541E  6E65               	movwf	3941,c	;volatile
 31411                           
 31412                           ;usb_device.c: 1365: UIE = 0;
 31413  015420  0E00               	movlw	0
 31414  015422  010F               	movlb	15	; () banked
 31415  015424  6F36               	movwf	54,b	;volatile
 31416                           
 31417                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 31418  015426  0E16               	movlw	22
 31419  015428  6F39               	movwf	57,b	;volatile
 31420  01542A  0E9F               	movlw	159
 31421  01542C  6F37               	movwf	55,b	;volatile
 31422  01542E  0E7B               	movlw	123
 31423  015430  6F36               	movwf	54,b	;volatile
 31424                           
 31425                           ; BSR set to: 15
 31426                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 31427  015432  8ED0               	bsf	4048,7,c	;volatile
 31428                           
 31429                           ; BSR set to: 15
 31430  015434  88A2               	bsf	4002,4,c	;volatile
 31431                           
 31432                           ; BSR set to: 15
 31433  015436  88A0               	bsf	4000,4,c	;volatile
 31434                           
 31435                           ; BSR set to: 15
 31436  015438  8EF2               	bsf	intcon,7,c	;volatile
 31437                           
 31438                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 31439  01543A  D001               	goto	l206
 31440  01543C                     l207:
 31441  01543C  8665               	bsf	3941,3,c	;volatile
 31442  01543E                     l206:
 31443  01543E  A665               	btfss	3941,3,c	;volatile
 31444  015440  D7FD               	goto	l207
 31445                           
 31446                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 31447  015442  0E01               	movlw	1
 31448  015444  6E5E               	movwf	_USBDeviceState,c	;volatile
 31449  015446  0012               	return	
 31450  015448                     __end_of_USBDeviceAttach:
 31451                           	opt stack 0
 31452                           tblptru	equ	0xFF8
 31453                           tblptrh	equ	0xFF7
 31454                           tblptrl	equ	0xFF6
 31455                           tablat	equ	0xFF5
 31456                           prodh	equ	0xFF4
 31457                           prodl	equ	0xFF3
 31458                           intcon	equ	0xFF2
 31459                           postinc0	equ	0xFEE
 31460                           wreg	equ	0xFE8
 31461                           indf1	equ	0xFE7
 31462                           postinc1	equ	0xFE6
 31463                           postdec1	equ	0xFE5
 31464                           plusw1	equ	0xFE3
 31465                           fsr1h	equ	0xFE2
 31466                           fsr1l	equ	0xFE1
 31467                           indf2	equ	0xFDF
 31468                           postinc2	equ	0xFDE
 31469                           postdec2	equ	0xFDD
 31470                           plusw2	equ	0xFDB
 31471                           fsr2h	equ	0xFDA
 31472                           fsr2l	equ	0xFD9
 31473                           status	equ	0xFD8
 31474                           
 31475 ;; *************** function _SYSTEM_Initialize *****************
 31476 ;; Defined at:
 31477 ;;		line 39 in file "system.c"
 31478 ;; Parameters:    Size  Location     Type
 31479 ;;  state           1    wreg     enum E6623
 31480 ;; Auto vars:     Size  Location     Type
 31481 ;;  state           1    4[BANK0 ] enum E6623
 31482 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 31483 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 31484 ;; Return value:  Size  Location     Type
 31485 ;;                  1    wreg      void 
 31486 ;; Registers used:
 31487 ;;		wreg, status,2, status,0
 31488 ;; Tracked objects:
 31489 ;;		On entry : 0/0
 31490 ;;		On exit  : 0/0
 31491 ;;		Unchanged: 0/0
 31492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31493 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31494 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31496 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31497 ;;Total ram usage:        5 bytes
 31498 ;; Hardware stack levels used:    1
 31499 ;; Hardware stack levels required when called:   10
 31500 ;; This function calls:
 31501 ;;		Nothing
 31502 ;; This function is called by:
 31503 ;;		_main
 31504 ;; This function uses a non-reentrant model
 31505 ;;
 31506                           
 31507                           	psect	text125
 31508  0146E8                     __ptext125:
 31509                           	opt stack 0
 31510  0146E8                     _SYSTEM_Initialize:
 31511                           	opt stack 20
 31512                           
 31513                           ;incstack = 0
 31514                           ;SYSTEM_Initialize@state stored from wreg
 31515  0146E8  0100               	movlb	0	; () banked
 31516  0146EA  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 31517                           
 31518                           ;system.c: 41: switch(state)
 31519  0146EC  D01E               	goto	l897
 31520  0146EE                     
 31521                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 31522  0146EE  0E02               	movlw	2
 31523  0146F0  0100               	movlb	0	; () banked
 31524  0146F2  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 31525  0146F4  0E58               	movlw	88
 31526  0146F6  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 31527                           
 31528                           ; BSR set to: 0
 31529                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 31530  0146F8  8C9B               	bsf	3995,6,c	;volatile
 31531  0146FA                     l17661:
 31532                           
 31533                           ; BSR set to: 0
 31534  0146FA  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 31535  0146FC  A0D8               	btfss	status,0,c
 31536  0146FE  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 31537  014700  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 31538  014702  E1FB               	bnz	l17661
 31539  014704  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 31540  014706  B4D8               	btfsc	status,2,c
 31541  014708  0012               	return	
 31542  01470A  D7F7               	goto	l900
 31543  01470C                     
 31544                           ; BSR set to: 0
 31545                           ;system.c: 78: OSCCON = 0x70;
 31546                           
 31547                           ; BSR set to: 0
 31548  01470C  0E70               	movlw	112
 31549  01470E  6ED3               	movwf	4051,c	;volatile
 31550                           
 31551                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 31552  014710  0E03               	movlw	3
 31553  014712  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),b
 31554  014714  0E20               	movlw	32
 31555  014716  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),b
 31556  014718                     l17665:
 31557                           
 31558                           ; BSR set to: 0
 31559  014718  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),f,b
 31560  01471A  A0D8               	btfss	status,0,c
 31561  01471C  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),f,b
 31562  01471E  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3132& (0+255),w,b
 31563  014720  E1FB               	bnz	l17665
 31564  014722  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3132+1)& (0+255),w,b
 31565  014724  B4D8               	btfsc	status,2,c
 31566  014726  0012               	return	
 31567  014728  D7F7               	goto	l906
 31568  01472A                     l897:
 31569                           
 31570                           ; BSR set to: 0
 31571  01472A  0100               	movlb	0	; () banked
 31572  01472C  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 31573                           
 31574                           ; Switch size 1, requested type "space"
 31575                           ; Number of cases is 3, Range of values is 0 to 2
 31576                           ; switch strategies available:
 31577                           ; Name         Instructions Cycles
 31578                           ; simple_byte           10     6 (average)
 31579                           ;	Chosen strategy is simple_byte
 31580  01472E  0A00               	xorlw	0	; case 0
 31581  014730  B4D8               	btfsc	status,2,c
 31582  014732  D7DD               	goto	l898
 31583  014734  0A01               	xorlw	1	; case 1
 31584  014736  B4D8               	btfsc	status,2,c
 31585  014738  0012               	return	
 31586  01473A  0A03               	xorlw	3	; case 2
 31587  01473C  A4D8               	btfss	status,2,c
 31588  01473E  0012               	return	
 31589  014740  D7E5               	goto	l904
 31590  014742                     __end_of_SYSTEM_Initialize:
 31591                           	opt stack 0
 31592                           tblptru	equ	0xFF8
 31593                           tblptrh	equ	0xFF7
 31594                           tblptrl	equ	0xFF6
 31595                           tablat	equ	0xFF5
 31596                           prodh	equ	0xFF4
 31597                           prodl	equ	0xFF3
 31598                           intcon	equ	0xFF2
 31599                           postinc0	equ	0xFEE
 31600                           wreg	equ	0xFE8
 31601                           indf1	equ	0xFE7
 31602                           postinc1	equ	0xFE6
 31603                           postdec1	equ	0xFE5
 31604                           plusw1	equ	0xFE3
 31605                           fsr1h	equ	0xFE2
 31606                           fsr1l	equ	0xFE1
 31607                           indf2	equ	0xFDF
 31608                           postinc2	equ	0xFDE
 31609                           postdec2	equ	0xFDD
 31610                           plusw2	equ	0xFDB
 31611                           fsr2h	equ	0xFDA
 31612                           fsr2l	equ	0xFD9
 31613                           status	equ	0xFD8
 31614                           
 31615 ;; *************** function _APP_DeviceMSDTasks *****************
 31616 ;; Defined at:
 31617 ;;		line 110 in file "app_device_msd.c"
 31618 ;; Parameters:    Size  Location     Type
 31619 ;;		None
 31620 ;; Auto vars:     Size  Location     Type
 31621 ;;		None
 31622 ;; Return value:  Size  Location     Type
 31623 ;;                  1    wreg      void 
 31624 ;; Registers used:
 31625 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31626 ;; Tracked objects:
 31627 ;;		On entry : 0/0
 31628 ;;		On exit  : 0/0
 31629 ;;		Unchanged: 0/0
 31630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31635 ;;Total ram usage:        0 bytes
 31636 ;; Hardware stack levels used:    1
 31637 ;; Hardware stack levels required when called:   21
 31638 ;; This function calls:
 31639 ;;		_MSDTasks
 31640 ;; This function is called by:
 31641 ;;		_main
 31642 ;; This function uses a non-reentrant model
 31643 ;;
 31644                           
 31645                           	psect	text126
 31646  01598E                     __ptext126:
 31647                           	opt stack 0
 31648  01598E                     _APP_DeviceMSDTasks:
 31649                           	opt stack 9
 31650                           
 31651                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 31652                           
 31653                           ; BSR set to: 0
 31654                           ;incstack = 0
 31655  01598E  0E20               	movlw	32
 31656  015990  605E               	cpfslt	_USBDeviceState,c	;volatile
 31657  015992  D001               	goto	l986
 31658  015994  0012               	return	
 31659  015996                     l986:
 31660                           
 31661                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 31662  015996  B265               	btfsc	3941,1,c	;volatile
 31663  015998  0012               	return	
 31664                           
 31665                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 31666                           
 31667                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 31668  01599A  ECD1  F071         	call	_MSDTasks	;wreg free
 31669  01599E  0012               	return		;funcret
 31670  0159A0                     __end_of_APP_DeviceMSDTasks:
 31671                           	opt stack 0
 31672                           tblptru	equ	0xFF8
 31673                           tblptrh	equ	0xFF7
 31674                           tblptrl	equ	0xFF6
 31675                           tablat	equ	0xFF5
 31676                           prodh	equ	0xFF4
 31677                           prodl	equ	0xFF3
 31678                           intcon	equ	0xFF2
 31679                           postinc0	equ	0xFEE
 31680                           wreg	equ	0xFE8
 31681                           indf1	equ	0xFE7
 31682                           postinc1	equ	0xFE6
 31683                           postdec1	equ	0xFE5
 31684                           plusw1	equ	0xFE3
 31685                           fsr1h	equ	0xFE2
 31686                           fsr1l	equ	0xFE1
 31687                           indf2	equ	0xFDF
 31688                           postinc2	equ	0xFDE
 31689                           postdec2	equ	0xFDD
 31690                           plusw2	equ	0xFDB
 31691                           fsr2h	equ	0xFDA
 31692                           fsr2l	equ	0xFD9
 31693                           status	equ	0xFD8
 31694                           
 31695 ;; *************** function _MSDTasks *****************
 31696 ;; Defined at:
 31697 ;;		line 335 in file "usb_device_msd.c"
 31698 ;; Parameters:    Size  Location     Type
 31699 ;;		None
 31700 ;; Auto vars:     Size  Location     Type
 31701 ;;  i               1   81[BANK0 ] unsigned char 
 31702 ;; Return value:  Size  Location     Type
 31703 ;;                  1    wreg      unsigned char 
 31704 ;; Registers used:
 31705 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 31706 ;; Tracked objects:
 31707 ;;		On entry : 0/0
 31708 ;;		On exit  : 0/0
 31709 ;;		Unchanged: 0/0
 31710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31712 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31713 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31714 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31715 ;;Total ram usage:        6 bytes
 31716 ;; Hardware stack levels used:    1
 31717 ;; Hardware stack levels required when called:   20
 31718 ;; This function calls:
 31719 ;;		_MSDProcessCommand
 31720 ;;		_USBStallEndpoint
 31721 ;;		_USBTransferOnePacket
 31722 ;; This function is called by:
 31723 ;;		_APP_DeviceMSDTasks
 31724 ;; This function uses a non-reentrant model
 31725 ;;
 31726                           
 31727                           	psect	text127
 31728  00E3A2                     __ptext127:
 31729                           	opt stack 0
 31730  00E3A2                     _MSDTasks:
 31731                           	opt stack 9
 31732                           
 31733                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 31734                           
 31735                           ;incstack = 0
 31736  00E3A2  0E20               	movlw	32
 31737  00E3A4  185E               	xorwf	_USBDeviceState,w,c	;volatile
 31738  00E3A6  A4D8               	btfss	status,2,c
 31739  00E3A8  0012               	return	
 31740                           
 31741                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 31742                           
 31743                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 31744  00E3AA  98A0               	bcf	4000,4,c	;volatile
 31745                           
 31746                           ;usb_device_msd.c: 357: switch(MSD_State)
 31747  00E3AC  D11E               	goto	l570
 31748  00E3AE                     
 31749                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 31750  00E3AE  0101               	movlb	1	; () banked
 31751  00E3B0  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31752  00E3B2  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 31753  00E3B4  B4D8               	btfsc	status,2,c
 31754  00E3B6  D006               	goto	u15880
 31755                           
 31756                           ; BSR set to: 1
 31757  00E3B8  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 31758  00E3BC  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 31759  00E3C0  BEDF               	btfsc	indf2,7,c
 31760  00E3C2  D122               	goto	l586
 31761  00E3C4                     u15880:
 31762                           
 31763                           ; BSR set to: 1
 31764                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 31765                           
 31766                           ; BSR set to: 1
 31767  00E3C4  0E00               	movlw	0
 31768  00E3C6  0100               	movlb	0	; () banked
 31769  00E3C8  6FB1               	movwf	MSDTasks@i& (0+255),b
 31770  00E3CA                     l16699:
 31771                           
 31772                           ; BSR set to: 0
 31773  00E3CA  0E1E               	movlw	30
 31774  00E3CC  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 31775  00E3CE  D001               	goto	l575
 31776  00E3D0  D014               	goto	u15900
 31777  00E3D2                     l575:
 31778                           
 31779                           ; BSR set to: 0
 31780                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 31781                           
 31782                           ; BSR set to: 0
 31783  00E3D2  51B1               	movf	MSDTasks@i& (0+255),w,b
 31784  00E3D4  0D01               	mullw	1
 31785  00E3D6  0E40               	movlw	64
 31786  00E3D8  24F3               	addwf	prodl,w,c
 31787  00E3DA  6ED9               	movwf	fsr2l,c
 31788  00E3DC  0E0D               	movlw	13
 31789  00E3DE  20F4               	addwfc	prodh,w,c
 31790  00E3E0  6EDA               	movwf	fsr2h,c
 31791  00E3E2  51B1               	movf	MSDTasks@i& (0+255),w,b
 31792  00E3E4  0D01               	mullw	1
 31793  00E3E6  0E00               	movlw	low _gblCBW
 31794  00E3E8  24F3               	addwf	prodl,w,c
 31795  00E3EA  6EE1               	movwf	fsr1l,c
 31796  00E3EC  0E02               	movlw	high _gblCBW
 31797  00E3EE  20F4               	addwfc	prodh,w,c
 31798  00E3F0  6EE2               	movwf	fsr1h,c
 31799  00E3F2  CFDF FFE7          	movff	indf2,indf1
 31800                           
 31801                           ; BSR set to: 0
 31802  00E3F6  2BB1               	incf	MSDTasks@i& (0+255),f,b
 31803  00E3F8  D7E8               	goto	l16699
 31804  00E3FA                     u15900:
 31805                           
 31806                           ; BSR set to: 0
 31807                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 31808                           
 31809                           ; BSR set to: 0
 31810  00E3FA  0101               	movlb	1	; () banked
 31811  00E3FC  EE20 F001          	lfsr	2,1
 31812  00E400  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 31813  00E402  26D9               	addwf	fsr2l,f,c
 31814  00E404  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 31815  00E406  22DA               	addwfc	fsr2h,f,c
 31816  00E408  0E1F               	movlw	31
 31817  00E40A  18DE               	xorwf	postinc2,w,c
 31818  00E40C  A4D8               	btfss	status,2,c
 31819  00E40E  D077               	goto	l577
 31820                           
 31821                           ; BSR set to: 1
 31822  00E410  0E55               	movlw	85
 31823  00E412  0102               	movlb	2	; () banked
 31824  00E414  1900               	xorwf	_gblCBW& (0+255),w,b
 31825  00E416  E173               	bnz	l577
 31826  00E418  0E53               	movlw	83
 31827  00E41A  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 31828  00E41C  E170               	bnz	l577
 31829  00E41E  0E42               	movlw	66
 31830  00E420  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 31831  00E422  E16D               	bnz	l577
 31832  00E424  0E43               	movlw	67
 31833  00E426  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 31834  00E428  A4D8               	btfss	status,2,c
 31835  00E42A  D069               	goto	l577
 31836                           
 31837                           ; BSR set to: 2
 31838                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 31839  00E42C  0E01               	movlw	1
 31840  00E42E  0101               	movlb	1	; () banked
 31841  00E430  6F5B               	movwf	_MSDCBWValid& (0+255),b
 31842                           
 31843                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 31844  00E432  0102               	movlb	2	; () banked
 31845  00E434  510D               	movf	(_gblCBW+13)& (0+255),w,b
 31846  00E436  A4D8               	btfss	status,2,c
 31847  00E438  D055               	goto	l578
 31848                           
 31849                           ; BSR set to: 2
 31850  00E43A  0E11               	movlw	17
 31851  00E43C  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 31852  00E43E  D052               	goto	l578
 31853                           
 31854                           ; BSR set to: 2
 31855  00E440  510E               	movf	(_gblCBW+14)& (0+255),w,b
 31856  00E442  B4D8               	btfsc	status,2,c
 31857  00E444  D04F               	goto	l578
 31858                           
 31859                           ; BSR set to: 2
 31860  00E446  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 31861  00E44A  0E3F               	movlw	63
 31862  00E44C  0100               	movlb	0	; () banked
 31863  00E44E  17AC               	andwf	??_MSDTasks& (0+255),f,b
 31864  00E450  A4D8               	btfss	status,2,c
 31865  00E452  D048               	goto	l578
 31866                           
 31867                           ; BSR set to: 0
 31868                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 31869  00E454  0E55               	movlw	85
 31870  00E456  010D               	movlb	13	; () banked
 31871  00E458  6F80               	movwf	128,b	;volatile
 31872  00E45A  0E53               	movlw	83
 31873  00E45C  6F81               	movwf	129,b	;volatile
 31874  00E45E  0E42               	movlw	66
 31875  00E460  6F82               	movwf	130,b	;volatile
 31876  00E462  0E53               	movlw	83
 31877  00E464  6F83               	movwf	131,b	;volatile
 31878                           
 31879                           ; BSR set to: 13
 31880                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 31881  00E466  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 31882  00E46A  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 31883  00E46E  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 31884  00E472  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 31885                           
 31886                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 31887  00E476  0E00               	movlw	0
 31888  00E478  6F88               	movwf	136,b	;volatile
 31889  00E47A  0E00               	movlw	0
 31890  00E47C  6F89               	movwf	137,b	;volatile
 31891  00E47E  0E00               	movlw	0
 31892  00E480  6F8A               	movwf	138,b	;volatile
 31893  00E482  0E00               	movlw	0
 31894  00E484  6F8B               	movwf	139,b	;volatile
 31895                           
 31896                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 31897  00E486  0E00               	movlw	0
 31898  00E488  6F8C               	movwf	140,b	;volatile
 31899                           
 31900                           ; BSR set to: 13
 31901                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 31902  00E48A  0101               	movlb	1	; () banked
 31903  00E48C  6962               	setf	_MSDCommandState& (0+255),b
 31904                           
 31905                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 31906  00E48E  0E00               	movlw	0
 31907  00E490  6F61               	movwf	_MSDReadState& (0+255),b
 31908                           
 31909                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 31910  00E492  0E00               	movlw	0
 31911  00E494  6F60               	movwf	_MSDWriteState& (0+255),b
 31912                           
 31913                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 31914  00E496  0E00               	movlw	0
 31915  00E498  6F5F               	movwf	_MSDRetryAttempt& (0+255),b
 31916                           
 31917                           ; BSR set to: 1
 31918                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 31919  00E49A  0E03               	movlw	3
 31920  00E49C  0102               	movlb	2	; () banked
 31921  00E49E  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 31922  00E4A0  B4D8               	btfsc	status,2,c
 31923  00E4A2  D009               	goto	l579
 31924                           
 31925                           ; BSR set to: 2
 31926                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 31927  00E4A4  0101               	movlb	1	; () banked
 31928  00E4A6  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 31929  00E4A8  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 31930  00E4AA  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 31931  00E4AC  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 31932                           
 31933                           ; BSR set to: 1
 31934                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 31935  00E4AE  0E00               	movlw	0
 31936  00E4B0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 31937                           
 31938                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 31939  00E4B2  0E00               	movlw	0
 31940  00E4B4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 31941  00E4B6                     l579:
 31942                           
 31943                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 31944                           
 31945                           ; BSR set to: 1
 31946  00E4B6  0102               	movlb	2	; () banked
 31947  00E4B8  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 31948  00E4BA  D002               	goto	l580
 31949                           
 31950                           ; BSR set to: 2
 31951                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 31952  00E4BC  0E01               	movlw	1
 31953  00E4BE  D001               	goto	L44
 31954  00E4C0                     l580:
 31955                           
 31956                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 31957                           
 31958                           ; BSR set to: 1
 31959  00E4C0  0E02               	movlw	2
 31960  00E4C2                     L44:
 31961  00E4C2  0101               	movlb	1	; () banked
 31962  00E4C4  6F63               	movwf	_MSD_State& (0+255),b
 31963                           
 31964                           ; BSR set to: 1
 31965                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 31966                           
 31967                           ; BSR set to: 1
 31968  00E4C6  0102               	movlb	2	; () banked
 31969  00E4C8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 31970  00E4CA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 31971  00E4CC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 31972  00E4CE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 31973  00E4D0  B4D8               	btfsc	status,2,c
 31974  00E4D2  D002               	goto	l582
 31975                           
 31976                           ; BSR set to: 2
 31977                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 31978  00E4D4  0E00               	movlw	0
 31979  00E4D6  D001               	goto	L45
 31980  00E4D8                     l582:
 31981                           
 31982                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 31983                           
 31984                           ; BSR set to: 1
 31985  00E4D8  0E01               	movlw	1
 31986  00E4DA                     L45:
 31987  00E4DA  0101               	movlb	1	; () banked
 31988  00E4DC  6F5C               	movwf	_MSDHostNoData& (0+255),b
 31989                           
 31990                           ; BSR set to: 1
 31991                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 31992                           
 31993                           ; BSR set to: 1
 31994  00E4DE  C20F  F162         	movff	_gblCBW+15,_MSDCommandState
 31995                           
 31996                           ;usb_device_msd.c: 454: }
 31997  00E4E2  D092               	goto	l586
 31998  00E4E4                     l578:
 31999                           
 32000                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 32001                           
 32002                           ; BSR set to: 1
 32003  00E4E4  0E01               	movlw	1
 32004  00E4E6  0100               	movlb	0	; () banked
 32005  00E4E8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32006  00E4EA  0E02               	movlw	2
 32007  00E4EC  ECB0  F087         	call	_USBStallEndpoint
 32008                           
 32009                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 32010  00E4F0  0E00               	movlw	0
 32011  00E4F2  0100               	movlb	0	; () banked
 32012  00E4F4  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32013  00E4F6  0E02               	movlw	2
 32014  00E4F8  ECB0  F087         	call	_USBStallEndpoint
 32015                           
 32016                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 32017  00E4FC  D085               	goto	l586
 32018  00E4FE                     l577:
 32019                           
 32020                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 32021  00E4FE  0E01               	movlw	1
 32022  00E500  0100               	movlb	0	; () banked
 32023  00E502  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32024  00E504  0E02               	movlw	2
 32025  00E506  ECB0  F087         	call	_USBStallEndpoint
 32026                           
 32027                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 32028  00E50A  0E00               	movlw	0
 32029  00E50C  0100               	movlb	0	; () banked
 32030  00E50E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32031  00E510  0E02               	movlw	2
 32032  00E512  ECB0  F087         	call	_USBStallEndpoint
 32033                           
 32034                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 32035  00E516  0E00               	movlw	0
 32036  00E518  0101               	movlb	1	; () banked
 32037  00E51A  6F5B               	movwf	_MSDCBWValid& (0+255),b
 32038                           
 32039                           ; BSR set to: 1
 32040                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 32041                           
 32042                           ; BSR set to: 1
 32043  00E51C  D075               	goto	l586
 32044  00E51E                     
 32045                           ; BSR set to: 1
 32046                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 32047                           
 32048                           ; BSR set to: 1
 32049  00E51E  EC3F  F083         	call	_MSDProcessCommand	;wreg free
 32050  00E522  0AFF               	xorlw	255
 32051  00E524  A4D8               	btfss	status,2,c
 32052  00E526  D070               	goto	l586
 32053  00E528  D011               	goto	l591
 32054  00E52A                     
 32055                           ; BSR set to: 1
 32056                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 32057                           
 32058                           ; BSR set to: 1
 32059  00E52A  EC3F  F083         	call	_MSDProcessCommand	;wreg free
 32060  00E52E  0AFF               	xorlw	255
 32061  00E530  A4D8               	btfss	status,2,c
 32062  00E532  D06A               	goto	l586
 32063                           
 32064                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 32065  00E534  010D               	movlb	13	; () banked
 32066  00E536  518C               	movf	140,w,b	;volatile
 32067  00E538  A4D8               	btfss	status,2,c
 32068  00E53A  D008               	goto	l591
 32069                           
 32070                           ; BSR set to: 13
 32071  00E53C  5188               	movf	136,w,b	;volatile
 32072  00E53E  1189               	iorwf	137,w,b	;volatile
 32073  00E540  118A               	iorwf	138,w,b	;volatile
 32074  00E542  118B               	iorwf	139,w,b	;volatile
 32075  00E544  B4D8               	btfsc	status,2,c
 32076  00E546  D002               	goto	l591
 32077                           
 32078                           ; BSR set to: 13
 32079                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 32080  00E548  0E02               	movlw	2
 32081  00E54A  6F8C               	movwf	140,b	;volatile
 32082  00E54C                     l591:
 32083                           
 32084                           ; BSR set to: 13
 32085                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 32086  00E54C  0E03               	movlw	3
 32087  00E54E  D03E               	goto	L43
 32088  00E550                     
 32089                           ; BSR set to: 1
 32090                           
 32091                           ; BSR set to: 1
 32092  00E550  C11F  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 32093  00E554  C120  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 32094                           
 32095                           ; BSR set to: 1
 32096                           
 32097                           ; BSR set to: 1
 32098                           
 32099                           ; BSR set to: 1
 32100  00E558  0100               	movlb	0	; () banked
 32101  00E55A  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 32102  00E55C  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 32103  00E55E  B4D8               	btfsc	status,2,c
 32104  00E560  D00A               	goto	l593
 32105                           
 32106                           ; BSR set to: 0
 32107  00E562  C11F  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 32108  00E566  C120  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 32109                           
 32110                           ; BSR set to: 0
 32111                           
 32112                           ; BSR set to: 0
 32113                           
 32114                           ; BSR set to: 0
 32115                           
 32116                           ; BSR set to: 0
 32117  00E56A  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 32118  00E56E  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 32119  00E572  BEDF               	btfsc	indf2,7,c
 32120  00E574  D049               	goto	l586
 32121  00E576                     l593:
 32122                           
 32123                           ; BSR set to: 0
 32124                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 32125                           
 32126                           ; BSR set to: 0
 32127  00E576  0E01               	movlw	1
 32128  00E578  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32129  00E57A  0E80               	movlw	128
 32130  00E57C  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32131  00E57E  0E0D               	movlw	13
 32132  00E580  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32133  00E582  0E0D               	movlw	13
 32134  00E584  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32135  00E586  0E02               	movlw	2
 32136  00E588  EC35  F088         	call	_USBTransferOnePacket
 32137  00E58C  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 32138  00E590  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 32139                           
 32140                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 32141  00E594  0101               	movlb	1	; () banked
 32142  00E596  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 32143  00E598  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 32144  00E59A  B4D8               	btfsc	status,2,c
 32145  00E59C  D006               	goto	u16070
 32146                           
 32147                           ; BSR set to: 1
 32148  00E59E  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 32149  00E5A2  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 32150  00E5A6  BEDF               	btfsc	indf2,7,c
 32151  00E5A8  D010               	goto	l602
 32152  00E5AA                     u16070:
 32153                           
 32154                           ; BSR set to: 1
 32155                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 32156                           
 32157                           ; BSR set to: 1
 32158  00E5AA  0E00               	movlw	0
 32159  00E5AC  0100               	movlb	0	; () banked
 32160  00E5AE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 32161  00E5B0  0E40               	movlw	64
 32162  00E5B2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 32163  00E5B4  0E0D               	movlw	13
 32164  00E5B6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 32165  00E5B8  0E40               	movlw	64
 32166  00E5BA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 32167  00E5BC  0E02               	movlw	2
 32168  00E5BE  EC35  F088         	call	_USBTransferOnePacket
 32169  00E5C2  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 32170  00E5C6  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 32171  00E5CA                     l602:
 32172                           
 32173                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 32174  00E5CA  0E00               	movlw	0
 32175  00E5CC                     L43:
 32176  00E5CC  0101               	movlb	1	; () banked
 32177  00E5CE  6F63               	movwf	_MSD_State& (0+255),b
 32178                           
 32179                           ;usb_device_msd.c: 513: break;
 32180  00E5D0  D01B               	goto	l586
 32181  00E5D2                     
 32182                           ; BSR set to: 1
 32183                           ;usb_device_msd.c: 518: MSD_State=0x00;
 32184                           
 32185                           ; BSR set to: 1
 32186  00E5D2  0E00               	movlw	0
 32187  00E5D4  6F63               	movwf	_MSD_State& (0+255),b
 32188                           
 32189                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 32190  00E5D6  0E02               	movlw	2
 32191  00E5D8  010D               	movlb	13	; () banked
 32192  00E5DA  6F8C               	movwf	140,b	;volatile
 32193                           
 32194                           ; BSR set to: 13
 32195                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 32196  00E5DC  0E00               	movlw	0
 32197  00E5DE  0100               	movlb	0	; () banked
 32198  00E5E0  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 32199  00E5E2  0E02               	movlw	2
 32200  00E5E4  ECB0  F087         	call	_USBStallEndpoint
 32201                           
 32202                           ;usb_device_msd.c: 521: }
 32203  00E5E8  D00F               	goto	l586
 32204  00E5EA                     l570:
 32205  00E5EA  0101               	movlb	1	; () banked
 32206  00E5EC  5163               	movf	_MSD_State& (0+255),w,b
 32207                           
 32208                           ; Switch size 1, requested type "space"
 32209                           ; Number of cases is 4, Range of values is 0 to 3
 32210                           ; switch strategies available:
 32211                           ; Name         Instructions Cycles
 32212                           ; simple_byte           13     7 (average)
 32213                           ;	Chosen strategy is simple_byte
 32214  00E5EE  0A00               	xorlw	0	; case 0
 32215  00E5F0  B4D8               	btfsc	status,2,c
 32216  00E5F2  D6DD               	goto	l571
 32217  00E5F4  0A01               	xorlw	1	; case 1
 32218  00E5F6  B4D8               	btfsc	status,2,c
 32219  00E5F8  D792               	goto	l587
 32220  00E5FA  0A03               	xorlw	3	; case 2
 32221  00E5FC  B4D8               	btfsc	status,2,c
 32222  00E5FE  D795               	goto	l589
 32223  00E600  0A01               	xorlw	1	; case 3
 32224  00E602  B4D8               	btfsc	status,2,c
 32225  00E604  D7A5               	goto	l592
 32226  00E606  D7E5               	goto	l605
 32227  00E608                     l586:
 32228                           
 32229                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 32230  00E608  88A0               	bsf	4000,4,c	;volatile
 32231                           
 32232                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 32233  00E60A  0012               	return		;funcret
 32234  00E60C                     __end_of_MSDTasks:
 32235                           	opt stack 0
 32236                           tblptru	equ	0xFF8
 32237                           tblptrh	equ	0xFF7
 32238                           tblptrl	equ	0xFF6
 32239                           tablat	equ	0xFF5
 32240                           prodh	equ	0xFF4
 32241                           prodl	equ	0xFF3
 32242                           intcon	equ	0xFF2
 32243                           postinc0	equ	0xFEE
 32244                           wreg	equ	0xFE8
 32245                           indf1	equ	0xFE7
 32246                           postinc1	equ	0xFE6
 32247                           postdec1	equ	0xFE5
 32248                           plusw1	equ	0xFE3
 32249                           fsr1h	equ	0xFE2
 32250                           fsr1l	equ	0xFE1
 32251                           indf2	equ	0xFDF
 32252                           postinc2	equ	0xFDE
 32253                           postdec2	equ	0xFDD
 32254                           plusw2	equ	0xFDB
 32255                           fsr2h	equ	0xFDA
 32256                           fsr2l	equ	0xFD9
 32257                           status	equ	0xFD8
 32258                           
 32259 ;; *************** function _MSDProcessCommand *****************
 32260 ;; Defined at:
 32261 ;;		line 553 in file "usb_device_msd.c"
 32262 ;; Parameters:    Size  Location     Type
 32263 ;;		None
 32264 ;; Auto vars:     Size  Location     Type
 32265 ;;		None
 32266 ;; Return value:  Size  Location     Type
 32267 ;;                  1    wreg      unsigned char 
 32268 ;; Registers used:
 32269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32270 ;; Tracked objects:
 32271 ;;		On entry : 0/0
 32272 ;;		On exit  : 0/0
 32273 ;;		Unchanged: 0/0
 32274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32277 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32278 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32279 ;;Total ram usage:        5 bytes
 32280 ;; Hardware stack levels used:    1
 32281 ;; Hardware stack levels required when called:   19
 32282 ;; This function calls:
 32283 ;;		_ExternalFlash_MediaDetect
 32284 ;;		_ExternalFlash_MediaInitialize
 32285 ;;		_MSDProcessCommandMediaAbsent
 32286 ;;		_MSDProcessCommandMediaPresent
 32287 ;; This function is called by:
 32288 ;;		_MSDTasks
 32289 ;; This function uses a non-reentrant model
 32290 ;;
 32291                           
 32292                           	psect	text128
 32293  01067E                     __ptext128:
 32294                           	opt stack 0
 32295  01067E                     _MSDProcessCommand:
 32296                           	opt stack 9
 32297                           
 32298                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 32299                           
 32300                           ;incstack = 0
 32301  01067E  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 32302  010682  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 32303  010686  EE22  F092         	lfsr	2,_LUN+9
 32304  01068A  D801               	call	u14058
 32305  01068C  D00A               	goto	u14059
 32306  01068E                     u14058:
 32307  01068E  0005               	push	
 32308  010690  6EFA               	movwf	pclath,c
 32309  010692  50DE               	movf	postinc2,w,c
 32310  010694  6EFD               	movwf	tosl,c
 32311  010696  50DE               	movf	postinc2,w,c
 32312  010698  6EFE               	movwf	tosh,c
 32313  01069A  50DE               	movf	postinc2,w,c
 32314  01069C  6EFF               	movwf	tosu,c
 32315  01069E  50FA               	movf	pclath,w,c
 32316  0106A0  0012               	return		;indir
 32317  0106A2                     u14059:
 32318  0106A2  0900               	iorlw	0
 32319  0106A4  B4D8               	btfsc	status,2,c
 32320  0106A6  D00C               	goto	u14070
 32321  0106A8  0102               	movlb	2	; () banked
 32322  0106AA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 32323  0106AC  0D01               	mullw	1
 32324  0106AE  0E5D               	movlw	low _SoftDetach
 32325  0106B0  24F3               	addwf	prodl,w,c
 32326  0106B2  6ED9               	movwf	fsr2l,c
 32327  0106B4  0E01               	movlw	high _SoftDetach
 32328  0106B6  20F4               	addwfc	prodh,w,c
 32329  0106B8  6EDA               	movwf	fsr2h,c
 32330  0106BA  04DE               	decf	postinc2,w,c
 32331  0106BC  A4D8               	btfss	status,2,c
 32332  0106BE  D01D               	goto	l608
 32333  0106C0                     u14070:
 32334                           
 32335                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 32336                           
 32337                           ; BSR set to: 2
 32338  0106C0  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32339  0106C4  0E01               	movlw	1
 32340  0106C6  0100               	movlb	0	; () banked
 32341  0106C8  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32342  0106CA  0E00               	movlw	0
 32343  0106CC  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32344  0106CE  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32345  0106D0  D003               	goto	u14084
 32346  0106D2                     u14085:
 32347  0106D2  90D8               	bcf	status,0,c
 32348  0106D4  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32349  0106D6  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32350  0106D8                     u14084:
 32351  0106D8  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32352  0106DA  D7FB               	goto	u14085
 32353  0106DC  0100               	movlb	0	; () banked
 32354  0106DE  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 32355  0106E0  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 32356  0106E2  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 32357  0106E4  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 32358  0106E6  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 32359  0106E8  0101               	movlb	1	; () banked
 32360  0106EA  1747               	andwf	_gblMediaPresent& (0+255),f,b
 32361  0106EC  0100               	movlb	0	; () banked
 32362  0106EE  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 32363  0106F0  0101               	movlb	1	; () banked
 32364  0106F2  1748               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 32365                           
 32366                           ; BSR set to: 1
 32367                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 32368  0106F4  EC99  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32369                           
 32370                           ;usb_device_msd.c: 563: }
 32371  0106F8  D058               	goto	l615
 32372  0106FA                     l608:
 32373                           
 32374                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 32375  0106FA  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32376  0106FE  0E01               	movlw	1
 32377  010700  0100               	movlb	0	; () banked
 32378  010702  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32379  010704  0E00               	movlw	0
 32380  010706  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32381  010708  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32382  01070A  D003               	goto	u14094
 32383  01070C                     u14095:
 32384  01070C  90D8               	bcf	status,0,c
 32385  01070E  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32386  010710  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32387  010712                     u14094:
 32388  010712  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32389  010714  D7FB               	goto	u14095
 32390  010716  0101               	movlb	1	; () banked
 32391  010718  5147               	movf	_gblMediaPresent& (0+255),w,b
 32392  01071A  0100               	movlb	0	; () banked
 32393  01071C  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 32394  01071E  0101               	movlb	1	; () banked
 32395  010720  5148               	movf	(_gblMediaPresent+1)& (0+255),w,b
 32396  010722  0100               	movlb	0	; () banked
 32397  010724  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 32398  010726  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32399  010728  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 32400  01072A  A4D8               	btfss	status,2,c
 32401  01072C  D03C               	goto	l612
 32402                           
 32403                           ; BSR set to: 0
 32404                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 32405  01072E  C29E  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 32406  010732  C29F  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 32407  010736  D801               	call	u14118
 32408  010738  D00B               	goto	u14119
 32409  01073A                     u14118:
 32410  01073A  0005               	push	
 32411  01073C  6EFA               	movwf	pclath,c
 32412  01073E  0102               	movlb	2	; () banked
 32413  010740  5189               	movf	_LUN& (0+255),w,b
 32414  010742  6EFD               	movwf	tosl,c
 32415  010744  518A               	movf	(_LUN+1)& (0+255),w,b
 32416  010746  6EFE               	movwf	tosh,c
 32417  010748  518B               	movf	(_LUN+2)& (0+255),w,b
 32418  01074A  6EFF               	movwf	tosu,c
 32419  01074C  50FA               	movf	pclath,w,c
 32420  01074E  0012               	return		;indir
 32421  010750                     u14119:
 32422  010750  0100               	movlb	0	; () banked
 32423  010752  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 32424  010754  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 32425  010756  B4D8               	btfsc	status,2,c
 32426  010758  D023               	goto	l613
 32427                           
 32428                           ; BSR set to: 0
 32429                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 32430  01075A  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 32431  01075E  0E01               	movlw	1
 32432  010760  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 32433  010762  0E00               	movlw	0
 32434  010764  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 32435  010766  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 32436  010768  D003               	goto	u14134
 32437  01076A                     u14135:
 32438  01076A  90D8               	bcf	status,0,c
 32439  01076C  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 32440  01076E  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 32441  010770                     u14134:
 32442  010770  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 32443  010772  D7FB               	goto	u14135
 32444  010774  0100               	movlb	0	; () banked
 32445  010776  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 32446  010778  0101               	movlb	1	; () banked
 32447  01077A  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 32448  01077C  0100               	movlb	0	; () banked
 32449  01077E  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 32450  010780  0101               	movlb	1	; () banked
 32451  010782  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 32452                           
 32453                           ; BSR set to: 1
 32454                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 32455  010784  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32456  010786  0BF0               	andlw	-16
 32457  010788  0906               	iorlw	6
 32458  01078A  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32459                           
 32460                           ; BSR set to: 1
 32461                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 32462  01078C  0E28               	movlw	40
 32463  01078E  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32464                           
 32465                           ; BSR set to: 1
 32466                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 32467  010790  0E00               	movlw	0
 32468  010792  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32469                           
 32470                           ; BSR set to: 1
 32471                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 32472  010794  0E01               	movlw	1
 32473  010796  010D               	movlb	13	; () banked
 32474  010798  6F8C               	movwf	140,b	;volatile
 32475                           
 32476                           ; BSR set to: 13
 32477                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 32478  01079A  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32479                           
 32480                           ;usb_device_msd.c: 589: }
 32481  01079E  D005               	goto	l615
 32482  0107A0                     l613:
 32483                           
 32484                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 32485  0107A0  EC99  F0A1         	call	_MSDProcessCommandMediaAbsent	;wreg free
 32486                           
 32487                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 32488  0107A4  D002               	goto	l615
 32489  0107A6                     l612:
 32490                           
 32491                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 32492  0107A6  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32493  0107AA                     l615:
 32494                           
 32495                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 32496  0107AA  0101               	movlb	1	; () banked
 32497  0107AC  5162               	movf	_MSDCommandState& (0+255),w,b
 32498  0107AE  0012               	return	
 32499  0107B0                     __end_of_MSDProcessCommand:
 32500                           	opt stack 0
 32501                           tosu	equ	0xFFF
 32502                           tosh	equ	0xFFE
 32503                           tosl	equ	0xFFD
 32504                           pclath	equ	0xFFA
 32505                           tblptru	equ	0xFF8
 32506                           tblptrh	equ	0xFF7
 32507                           tblptrl	equ	0xFF6
 32508                           tablat	equ	0xFF5
 32509                           prodh	equ	0xFF4
 32510                           prodl	equ	0xFF3
 32511                           intcon	equ	0xFF2
 32512                           postinc0	equ	0xFEE
 32513                           wreg	equ	0xFE8
 32514                           indf1	equ	0xFE7
 32515                           postinc1	equ	0xFE6
 32516                           postdec1	equ	0xFE5
 32517                           plusw1	equ	0xFE3
 32518                           fsr1h	equ	0xFE2
 32519                           fsr1l	equ	0xFE1
 32520                           indf2	equ	0xFDF
 32521                           postinc2	equ	0xFDE
 32522                           postdec2	equ	0xFDD
 32523                           plusw2	equ	0xFDB
 32524                           fsr2h	equ	0xFDA
 32525                           fsr2l	equ	0xFD9
 32526                           status	equ	0xFD8
 32527                           
 32528 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 32529 ;; Defined at:
 32530 ;;		line 635 in file "usb_device_msd.c"
 32531 ;; Parameters:    Size  Location     Type
 32532 ;;		None
 32533 ;; Auto vars:     Size  Location     Type
 32534 ;;		None
 32535 ;; Return value:  Size  Location     Type
 32536 ;;                  1    wreg      void 
 32537 ;; Registers used:
 32538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32539 ;; Tracked objects:
 32540 ;;		On entry : 0/0
 32541 ;;		On exit  : 0/0
 32542 ;;		Unchanged: 0/0
 32543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32545 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32546 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32547 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32548 ;;Total ram usage:        0 bytes
 32549 ;; Hardware stack levels used:    1
 32550 ;; Hardware stack levels required when called:   18
 32551 ;; This function calls:
 32552 ;;		_MSDErrorHandler
 32553 ;;		_MSDProcessCommandMediaPresent
 32554 ;;		_ResetSenseData
 32555 ;; This function is called by:
 32556 ;;		_MSDProcessCommand
 32557 ;; This function uses a non-reentrant model
 32558 ;;
 32559                           
 32560                           	psect	text129
 32561  014332                     __ptext129:
 32562                           	opt stack 0
 32563  014332                     _MSDProcessCommandMediaAbsent:
 32564                           	opt stack 9
 32565                           
 32566                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 32567                           
 32568                           ; BSR set to: 1
 32569                           ;incstack = 0
 32570  014332  D01E               	goto	l619
 32571  014334                     
 32572                           ;usb_device_msd.c: 646: ResetSenseData();
 32573  014334  ECCA  F0A1         	call	_ResetSenseData	;wreg free
 32574                           
 32575                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 32576  014338  0101               	movlb	1	; () banked
 32577  01433A  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 32578  01433C  0BF0               	andlw	-16
 32579  01433E  0902               	iorlw	2
 32580  014340  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 32581                           
 32582                           ; BSR set to: 1
 32583                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 32584  014342  0E3A               	movlw	58
 32585  014344  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 32586                           
 32587                           ; BSR set to: 1
 32588                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 32589  014346  0E00               	movlw	0
 32590  014348  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 32591                           
 32592                           ; BSR set to: 1
 32593                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 32594  01434A  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32595                           
 32596                           ;usb_device_msd.c: 655: break;
 32597  01434E  0012               	return	
 32598  014350                     
 32599                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 32600  014350  0E01               	movlw	1
 32601  014352  010D               	movlb	13	; () banked
 32602  014354  6F8C               	movwf	140,b	;volatile
 32603                           
 32604                           ; BSR set to: 13
 32605                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 32606  014356  0101               	movlb	1	; () banked
 32607  014358  6962               	setf	_MSDCommandState& (0+255),b
 32608                           
 32609                           ;usb_device_msd.c: 665: break;
 32610  01435A  0012               	return	
 32611  01435C                     
 32612                           ; BSR set to: 1
 32613                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 32614                           
 32615                           ; BSR set to: 1
 32616  01435C  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32617                           
 32618                           ;usb_device_msd.c: 671: break;
 32619  014360  0012               	return	
 32620  014362                     
 32621                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 32622  014362  ECDE  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 32623                           
 32624                           ;usb_device_msd.c: 677: break;
 32625  014366  0012               	return	
 32626  014368                     
 32627                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 32628  014368  0E7F               	movlw	127
 32629  01436A  EC03  F085         	call	_MSDErrorHandler
 32630                           
 32631                           ;usb_device_msd.c: 685: }
 32632                           
 32633                           ;usb_device_msd.c: 684: break;
 32634  01436E  0012               	return	
 32635  014370                     l619:
 32636  014370  0101               	movlb	1	; () banked
 32637  014372  5162               	movf	_MSDCommandState& (0+255),w,b
 32638                           
 32639                           ; Switch size 1, requested type "space"
 32640                           ; Number of cases is 5, Range of values is 0 to 253
 32641                           ; switch strategies available:
 32642                           ; Name         Instructions Cycles
 32643                           ; simple_byte           16     9 (average)
 32644                           ;	Chosen strategy is simple_byte
 32645  014374  0A00               	xorlw	0	; case 0
 32646  014376  B4D8               	btfsc	status,2,c
 32647  014378  D7EB               	goto	l622
 32648  01437A  0A03               	xorlw	3	; case 3
 32649  01437C  B4D8               	btfsc	status,2,c
 32650  01437E  D7DA               	goto	l620
 32651  014380  0A11               	xorlw	17	; case 18
 32652  014382  B4D8               	btfsc	status,2,c
 32653  014384  D7EB               	goto	l624
 32654  014386  0A0C               	xorlw	12	; case 30
 32655  014388  B4D8               	btfsc	status,2,c
 32656  01438A  D7E2               	goto	l622
 32657  01438C  0AE3               	xorlw	227	; case 253
 32658  01438E  B4D8               	btfsc	status,2,c
 32659  014390  D7E8               	goto	l625
 32660  014392  D7EA               	goto	l626
 32661  014394                     __end_of_MSDProcessCommandMediaAbsent:
 32662                           	opt stack 0
 32663                           tosu	equ	0xFFF
 32664                           tosh	equ	0xFFE
 32665                           tosl	equ	0xFFD
 32666                           pclath	equ	0xFFA
 32667                           tblptru	equ	0xFF8
 32668                           tblptrh	equ	0xFF7
 32669                           tblptrl	equ	0xFF6
 32670                           tablat	equ	0xFF5
 32671                           prodh	equ	0xFF4
 32672                           prodl	equ	0xFF3
 32673                           intcon	equ	0xFF2
 32674                           postinc0	equ	0xFEE
 32675                           wreg	equ	0xFE8
 32676                           indf1	equ	0xFE7
 32677                           postinc1	equ	0xFE6
 32678                           postdec1	equ	0xFE5
 32679                           plusw1	equ	0xFE3
 32680                           fsr1h	equ	0xFE2
 32681                           fsr1l	equ	0xFE1
 32682                           indf2	equ	0xFDF
 32683                           postinc2	equ	0xFDE
 32684                           postdec2	equ	0xFDD
 32685                           plusw2	equ	0xFDB
 32686                           fsr2h	equ	0xFDA
 32687                           fsr2l	equ	0xFD9
 32688                           status	equ	0xFD8
 32689                           
 32690 ;; *************** function _MSDProcessCommandMediaPresent *****************
 32691 ;; Defined at:
 32692 ;;		line 712 in file "usb_device_msd.c"
 32693 ;; Parameters:    Size  Location     Type
 32694 ;;		None
 32695 ;; Auto vars:     Size  Location     Type
 32696 ;;  capacity        4   66[BANK0 ] struct .
 32697 ;;  sectorSize      4   62[BANK0 ] struct .
 32698 ;;  i               1   70[BANK0 ] unsigned char 
 32699 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 32700 ;; Return value:  Size  Location     Type
 32701 ;;                  1    wreg      void 
 32702 ;; Registers used:
 32703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 32704 ;; Tracked objects:
 32705 ;;		On entry : 0/0
 32706 ;;		On exit  : 0/0
 32707 ;;		Unchanged: 0/0
 32708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32710 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32711 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32712 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32713 ;;Total ram usage:       14 bytes
 32714 ;; Hardware stack levels used:    1
 32715 ;; Hardware stack levels required when called:   17
 32716 ;; This function calls:
 32717 ;;		_ExternalFlash_CapacityRead
 32718 ;;		_ExternalFlash_SectorSizeRead
 32719 ;;		_ExternalFlash_WriteProtectStateGet
 32720 ;;		_MSDCheckForErrorCases
 32721 ;;		_MSDComputeDeviceInAndResidue
 32722 ;;		_MSDErrorHandler
 32723 ;;		_MSDReadHandler
 32724 ;;		_MSDWriteHandler
 32725 ;;		_ResetSenseData
 32726 ;;		_USBTransferOnePacket
 32727 ;;		_memcpy
 32728 ;; This function is called by:
 32729 ;;		_MSDProcessCommand
 32730 ;;		_MSDProcessCommandMediaAbsent
 32731 ;; This function uses a non-reentrant model
 32732 ;;
 32733                           
 32734                           	psect	text130
 32735  00BDBC                     __ptext130:
 32736                           	opt stack 0
 32737  00BDBC                     _MSDProcessCommandMediaPresent:
 32738                           	opt stack 10
 32739                           
 32740                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 32741                           
 32742                           ;incstack = 0
 32743  00BDBC  D1D0               	goto	l630
 32744  00BDBE                     
 32745                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 32746  00BDBE  EC48  F078         	call	_MSDReadHandler	;wreg free
 32747  00BDC2  0900               	iorlw	0
 32748  00BDC4  A4D8               	btfss	status,2,c
 32749  00BDC6  0012               	return	
 32750                           
 32751                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 32752  00BDC8  0101               	movlb	1	; () banked
 32753  00BDCA  6962               	setf	_MSDCommandState& (0+255),b
 32754                           
 32755                           ; BSR set to: 1
 32756                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 32757  00BDCC  0012               	return	
 32758  00BDCE                     
 32759                           ; BSR set to: 1
 32760                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 32761                           
 32762                           ; BSR set to: 1
 32763  00BDCE  EC1B  F06B         	call	_MSDWriteHandler	;wreg free
 32764  00BDD2  0900               	iorlw	0
 32765  00BDD4  A4D8               	btfss	status,2,c
 32766  00BDD6  0012               	return	
 32767                           
 32768                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 32769  00BDD8  0101               	movlb	1	; () banked
 32770  00BDDA  6962               	setf	_MSDCommandState& (0+255),b
 32771                           
 32772                           ; BSR set to: 1
 32773                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 32774  00BDDC  0012               	return	
 32775  00BDDE                     
 32776                           ; BSR set to: 1
 32777                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 32778                           
 32779                           ; BSR set to: 1
 32780  00BDDE  055C               	decf	_MSDHostNoData& (0+255),w,b
 32781  00BDE0  A4D8               	btfss	status,2,c
 32782  00BDE2  D002               	goto	l637
 32783                           
 32784                           ; BSR set to: 1
 32785                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 32786  00BDE4  6962               	setf	_MSDCommandState& (0+255),b
 32787                           
 32788                           ;usb_device_msd.c: 751: break;
 32789  00BDE6  0012               	return	
 32790  00BDE8                     l637:
 32791                           
 32792                           ; BSR set to: 1
 32793                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 32794  00BDE8  C212  F146         	movff	_gblCBW+18,_TransferLength+1
 32795                           
 32796                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 32797  00BDEC  C213  F145         	movff	_gblCBW+19,_TransferLength
 32798                           
 32799                           ; BSR set to: 1
 32800                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 32801  00BDF0  C145  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 32802  00BDF4  C146  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 32803  00BDF8  0100               	movlb	0	; () banked
 32804  00BDFA  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 32805  00BDFC  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 32806  00BDFE  EC90  F085         	call	_MSDCheckForErrorCases	;wreg free
 32807  00BE02  0900               	iorlw	0
 32808  00BE04  A4D8               	btfss	status,2,c
 32809  00BE06  0012               	return	
 32810                           
 32811                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 32812                           
 32813                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 32814  00BE08  0E00               	movlw	0
 32815  00BE0A  0100               	movlb	0	; () banked
 32816  00BE0C  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32817  00BE0E  0E24               	movlw	36
 32818  00BE10  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32819  00BE12  ECA4  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32820                           
 32821                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 32822  00BE16  0E00               	movlw	0
 32823  00BE18  0100               	movlb	0	; () banked
 32824  00BE1A  6F60               	movwf	memcpy@d1& (0+255),b
 32825  00BE1C  0E06               	movlw	6
 32826  00BE1E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 32827  00BE20  0E60               	movlw	low _inq_resp
 32828  00BE22  6F62               	movwf	memcpy@s1& (0+255),b
 32829  00BE24  0EA1               	movlw	high _inq_resp
 32830  00BE26  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 32831  00BE28  0E00               	movlw	0
 32832  00BE2A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 32833  00BE2C  0E24               	movlw	36
 32834  00BE2E  6F64               	movwf	memcpy@n& (0+255),b
 32835  00BE30  EC5D  F0A2         	call	_memcpy	;wreg free
 32836                           
 32837                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 32838  00BE34  0EFD               	movlw	253
 32839  00BE36  0101               	movlb	1	; () banked
 32840  00BE38  6F62               	movwf	_MSDCommandState& (0+255),b
 32841                           
 32842                           ;usb_device_msd.c: 773: break;
 32843  00BE3A  0012               	return	
 32844  00BE3C                     
 32845                           ; BSR set to: 1
 32846                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 32847                           
 32848                           ; BSR set to: 1
 32849  00BE3C  C29E  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 32850  00BE40  C29F  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 32851  00BE44  EE22  F08C         	lfsr	2,_LUN+3
 32852  00BE48  D801               	call	u12388
 32853  00BE4A  D00A               	goto	u12389
 32854  00BE4C                     u12388:
 32855  00BE4C  0005               	push	
 32856  00BE4E  6EFA               	movwf	pclath,c
 32857  00BE50  50DE               	movf	postinc2,w,c
 32858  00BE52  6EFD               	movwf	tosl,c
 32859  00BE54  50DE               	movf	postinc2,w,c
 32860  00BE56  6EFE               	movwf	tosh,c
 32861  00BE58  50DE               	movf	postinc2,w,c
 32862  00BE5A  6EFF               	movwf	tosu,c
 32863  00BE5C  50FA               	movf	pclath,w,c
 32864  00BE5E  0012               	return		;indir
 32865  00BE60                     u12389:
 32866  00BE60  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 32867  00BE64  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 32868  00BE68  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 32869  00BE6C  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 32870                           
 32871                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 32872  00BE70  C29E  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 32873  00BE74  C29F  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 32874  00BE78  EE22  F08F         	lfsr	2,_LUN+6
 32875  00BE7C  D801               	call	u12398
 32876  00BE7E  D00A               	goto	u12399
 32877  00BE80                     u12398:
 32878  00BE80  0005               	push	
 32879  00BE82  6EFA               	movwf	pclath,c
 32880  00BE84  50DE               	movf	postinc2,w,c
 32881  00BE86  6EFD               	movwf	tosl,c
 32882  00BE88  50DE               	movf	postinc2,w,c
 32883  00BE8A  6EFE               	movwf	tosh,c
 32884  00BE8C  50DE               	movf	postinc2,w,c
 32885  00BE8E  6EFF               	movwf	tosu,c
 32886  00BE90  50FA               	movf	pclath,w,c
 32887  00BE92  0012               	return		;indir
 32888  00BE94                     u12399:
 32889  00BE94  0100               	movlb	0	; () banked
 32890  00BE96  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 32891  00BE9A  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 32892  00BE9E  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 32893  00BEA0  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 32894                           
 32895                           ; BSR set to: 0
 32896                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 32897  00BEA2  EE26 F000          	lfsr	2,1536
 32898  00BEA6  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 32899                           
 32900                           ; BSR set to: 0
 32901                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 32902  00BEAA  EE26 F001          	lfsr	2,1537	;volatile
 32903  00BEAE  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 32904                           
 32905                           ; BSR set to: 0
 32906                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 32907  00BEB2  EE26 F002          	lfsr	2,1538	;volatile
 32908  00BEB6  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 32909                           
 32910                           ; BSR set to: 0
 32911                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 32912  00BEBA  EE26 F003          	lfsr	2,1539	;volatile
 32913  00BEBE  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 32914                           
 32915                           ; BSR set to: 0
 32916                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 32917  00BEC2  EE26 F004          	lfsr	2,1540	;volatile
 32918  00BEC6  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 32919                           
 32920                           ; BSR set to: 0
 32921                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 32922  00BECA  EE26 F005          	lfsr	2,1541	;volatile
 32923  00BECE  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 32924                           
 32925                           ; BSR set to: 0
 32926                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 32927  00BED2  EE26 F006          	lfsr	2,1542	;volatile
 32928  00BED6  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 32929                           
 32930                           ; BSR set to: 0
 32931                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 32932  00BEDA  EE26 F007          	lfsr	2,1543	;volatile
 32933  00BEDE  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 32934                           
 32935                           ; BSR set to: 0
 32936                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 32937  00BEE2  0E00               	movlw	0
 32938  00BEE4  0101               	movlb	1	; () banked
 32939  00BEE6  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32940  00BEE8  0E08               	movlw	8
 32941  00BEEA  6F45               	movwf	_TransferLength& (0+255),b
 32942                           
 32943                           ; BSR set to: 1
 32944                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 32945  00BEEC  0E00               	movlw	0
 32946  00BEEE  0100               	movlb	0	; () banked
 32947  00BEF0  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32948  00BEF2  0E08               	movlw	8
 32949  00BEF4  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32950  00BEF6  ECA4  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32951                           
 32952                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 32953  00BEFA  0EFD               	movlw	253
 32954  00BEFC  0101               	movlb	1	; () banked
 32955  00BEFE  6F62               	movwf	_MSDCommandState& (0+255),b
 32956                           
 32957                           ;usb_device_msd.c: 802: break;
 32958  00BF00  0012               	return	
 32959  00BF02                     
 32960                           ; BSR set to: 1
 32961                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 32962                           
 32963                           ; BSR set to: 1
 32964  00BF02  055C               	decf	_MSDHostNoData& (0+255),w,b
 32965  00BF04  A4D8               	btfss	status,2,c
 32966  00BF06  D002               	goto	l641
 32967                           
 32968                           ; BSR set to: 1
 32969                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 32970  00BF08  6962               	setf	_MSDCommandState& (0+255),b
 32971                           
 32972                           ;usb_device_msd.c: 814: break;
 32973  00BF0A  0012               	return	
 32974  00BF0C                     l641:
 32975                           
 32976                           ; BSR set to: 1
 32977                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 32978                           
 32979                           ; BSR set to: 1
 32980  00BF0C  0E00               	movlw	0
 32981  00BF0E  6F46               	movwf	(_TransferLength+1)& (0+255),b
 32982  00BF10  0E12               	movlw	18
 32983  00BF12  6F45               	movwf	_TransferLength& (0+255),b
 32984                           
 32985                           ; BSR set to: 1
 32986                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 32987  00BF14  0E00               	movlw	0
 32988  00BF16  0100               	movlb	0	; () banked
 32989  00BF18  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 32990  00BF1A  0E12               	movlw	18
 32991  00BF1C  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 32992  00BF1E  ECA4  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 32993                           
 32994                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 32995  00BF22  0E00               	movlw	0
 32996  00BF24  0100               	movlb	0	; () banked
 32997  00BF26  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 32998  00BF28                     l13651:
 32999                           
 33000                           ; BSR set to: 0
 33001  00BF28  0E11               	movlw	17
 33002  00BF2A  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 33003  00BF2C  D001               	goto	l642
 33004  00BF2E  D014               	goto	u12420
 33005  00BF30                     l642:
 33006                           
 33007                           ; BSR set to: 0
 33008                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 33009                           
 33010                           ; BSR set to: 0
 33011  00BF30  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33012  00BF32  0D01               	mullw	1
 33013  00BF34  0E00               	movlw	low _gblSenseData
 33014  00BF36  24F3               	addwf	prodl,w,c
 33015  00BF38  6ED9               	movwf	fsr2l,c
 33016  00BF3A  0E01               	movlw	high _gblSenseData
 33017  00BF3C  20F4               	addwfc	prodh,w,c
 33018  00BF3E  6EDA               	movwf	fsr2h,c
 33019  00BF40  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33020  00BF42  0D01               	mullw	1
 33021  00BF44  0E00               	movlw	0
 33022  00BF46  24F3               	addwf	prodl,w,c
 33023  00BF48  6EE1               	movwf	fsr1l,c
 33024  00BF4A  0E06               	movlw	6
 33025  00BF4C  20F4               	addwfc	prodh,w,c
 33026  00BF4E  6EE2               	movwf	fsr1h,c
 33027  00BF50  CFDF FFE7          	movff	indf2,indf1
 33028                           
 33029                           ; BSR set to: 0
 33030  00BF54  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 33031  00BF56  D7E8               	goto	l13651
 33032  00BF58                     u12420:
 33033                           
 33034                           ; BSR set to: 0
 33035                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 33036                           
 33037                           ; BSR set to: 0
 33038  00BF58  0EFD               	movlw	253
 33039  00BF5A  0101               	movlb	1	; () banked
 33040  00BF5C  6F62               	movwf	_MSDCommandState& (0+255),b
 33041                           
 33042                           ;usb_device_msd.c: 827: break;
 33043  00BF5E  0012               	return	
 33044  00BF60                     l644:
 33045                           
 33046                           ; BSR set to: 1
 33047                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 33048  00BF60  0E03               	movlw	3
 33049  00BF62  CFE8 F600          	movff	wreg,1536
 33050                           
 33051                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 33052  00BF66  0E00               	movlw	0
 33053  00BF68  CFE8 F601          	movff	wreg,1537	;volatile
 33054                           
 33055                           ; BSR set to: 1
 33056                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 33057  00BF6C  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33058  00BF70  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33059  00BF74  EE22  F098         	lfsr	2,_LUN+15
 33060  00BF78  D801               	call	u12438
 33061  00BF7A  D00A               	goto	u12439
 33062  00BF7C                     u12438:
 33063  00BF7C  0005               	push	
 33064  00BF7E  6EFA               	movwf	pclath,c
 33065  00BF80  50DE               	movf	postinc2,w,c
 33066  00BF82  6EFD               	movwf	tosl,c
 33067  00BF84  50DE               	movf	postinc2,w,c
 33068  00BF86  6EFE               	movwf	tosh,c
 33069  00BF88  50DE               	movf	postinc2,w,c
 33070  00BF8A  6EFF               	movwf	tosu,c
 33071  00BF8C  50FA               	movf	pclath,w,c
 33072  00BF8E  0012               	return		;indir
 33073  00BF90                     u12439:
 33074  00BF90  0900               	iorlw	0
 33075  00BF92  A4D8               	btfss	status,2,c
 33076  00BF94  D005               	goto	l646
 33077  00BF96  0E00               	movlw	0
 33078  00BF98  0100               	movlb	0	; () banked
 33079  00BF9A  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33080  00BF9C  0E00               	movlw	0
 33081  00BF9E  D004               	goto	L46
 33082  00BFA0                     l646:
 33083                           
 33084                           ; BSR set to: 0
 33085  00BFA0  0E00               	movlw	0
 33086  00BFA2  0100               	movlb	0	; () banked
 33087  00BFA4  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 33088  00BFA6  0E80               	movlw	128
 33089  00BFA8                     L46:
 33090  00BFA8  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 33091                           
 33092                           ; BSR set to: 0
 33093                           
 33094                           ; BSR set to: 0
 33095  00BFAA  EE26 F002          	lfsr	2,1538	;volatile
 33096  00BFAE  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 33097                           
 33098                           ; BSR set to: 0
 33099                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 33100  00BFB2  0E00               	movlw	0
 33101  00BFB4  CFE8 F603          	movff	wreg,1539	;volatile
 33102                           
 33103                           ; BSR set to: 0
 33104                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 33105  00BFB8  0E00               	movlw	0
 33106  00BFBA  0101               	movlb	1	; () banked
 33107  00BFBC  6F46               	movwf	(_TransferLength+1)& (0+255),b
 33108  00BFBE  0E04               	movlw	4
 33109  00BFC0  6F45               	movwf	_TransferLength& (0+255),b
 33110                           
 33111                           ; BSR set to: 1
 33112                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 33113  00BFC2  0E00               	movlw	0
 33114  00BFC4  0100               	movlb	0	; () banked
 33115  00BFC6  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 33116  00BFC8  0E04               	movlw	4
 33117  00BFCA  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 33118  00BFCC  ECA4  F095         	call	_MSDComputeDeviceInAndResidue	;wreg free
 33119                           
 33120                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 33121  00BFD0  0EFD               	movlw	253
 33122  00BFD2  0101               	movlb	1	; () banked
 33123  00BFD4  6F62               	movwf	_MSDCommandState& (0+255),b
 33124                           
 33125                           ;usb_device_msd.c: 839: break;
 33126  00BFD6  0012               	return	
 33127  00BFD8                     
 33128                           ; BSR set to: 1
 33129                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 33130                           
 33131                           ; BSR set to: 1
 33132  00BFD8  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33133  00BFDA  0BF0               	andlw	-16
 33134  00BFDC  0905               	iorlw	5
 33135  00BFDE  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33136                           
 33137                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 33138  00BFE0  0E20               	movlw	32
 33139  00BFE2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33140                           
 33141                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 33142  00BFE4  0E00               	movlw	0
 33143  00BFE6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33144                           
 33145                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 33146  00BFE8  0E01               	movlw	1
 33147  00BFEA  010D               	movlb	13	; () banked
 33148  00BFEC  6F8C               	movwf	140,b	;volatile
 33149                           
 33150                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 33151  00BFEE  0E00               	movlw	0
 33152  00BFF0  6F88               	movwf	136,b	;volatile
 33153  00BFF2  0E00               	movlw	0
 33154  00BFF4  6F89               	movwf	137,b	;volatile
 33155  00BFF6  0E00               	movlw	0
 33156  00BFF8  6F8A               	movwf	138,b	;volatile
 33157  00BFFA  0E00               	movlw	0
 33158  00BFFC  6F8B               	movwf	139,b	;volatile
 33159                           
 33160                           ; BSR set to: 13
 33161                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 33162  00BFFE  0101               	movlb	1	; () banked
 33163  00C000  6962               	setf	_MSDCommandState& (0+255),b
 33164                           
 33165                           ;usb_device_msd.c: 848: break;
 33166  00C002  0012               	return	
 33167  00C004                     
 33168                           ; BSR set to: 1
 33169                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 33170                           
 33171                           ; BSR set to: 1
 33172  00C004  0E00               	movlw	0
 33173  00C006  0100               	movlb	0	; () banked
 33174  00C008  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 33175  00C00A  0E00               	movlw	0
 33176  00C00C  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 33177  00C00E  0E00               	movlw	0
 33178  00C010  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 33179  00C012  0E00               	movlw	0
 33180  00C014  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 33181  00C016  EC90  F085         	call	_MSDCheckForErrorCases	;wreg free
 33182  00C01A  0900               	iorlw	0
 33183  00C01C  A4D8               	btfss	status,2,c
 33184  00C01E  0012               	return	
 33185                           
 33186                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 33187                           
 33188                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 33189  00C020  0101               	movlb	1	; () banked
 33190  00C022  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33191  00C024  0B0F               	andlw	15
 33192  00C026  0A06               	xorlw	6
 33193  00C028  A4D8               	btfss	status,2,c
 33194  00C02A  D007               	goto	l652
 33195                           
 33196                           ; BSR set to: 1
 33197  00C02C  010D               	movlb	13	; () banked
 33198  00C02E  058C               	decf	140,w,b	;volatile
 33199  00C030  A4D8               	btfss	status,2,c
 33200  00C032  D003               	goto	l652
 33201                           
 33202                           ; BSR set to: 13
 33203                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 33204  00C034  0101               	movlb	1	; () banked
 33205  00C036  6962               	setf	_MSDCommandState& (0+255),b
 33206                           
 33207                           ;usb_device_msd.c: 870: }
 33208  00C038  0012               	return	
 33209  00C03A                     l652:
 33210                           
 33211                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 33212                           
 33213                           ; BSR set to: 1
 33214  00C03A  ECCA  F0A1         	call	_ResetSenseData	;wreg free
 33215                           
 33216                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 33217  00C03E  0E00               	movlw	0
 33218  00C040  010D               	movlb	13	; () banked
 33219  00C042  6F88               	movwf	136,b	;volatile
 33220  00C044  0E00               	movlw	0
 33221  00C046  6F89               	movwf	137,b	;volatile
 33222  00C048  0E00               	movlw	0
 33223  00C04A  6F8A               	movwf	138,b	;volatile
 33224  00C04C  0E00               	movlw	0
 33225  00C04E  6F8B               	movwf	139,b	;volatile
 33226                           
 33227                           ; BSR set to: 13
 33228                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 33229  00C050  0101               	movlb	1	; () banked
 33230  00C052  6962               	setf	_MSDCommandState& (0+255),b
 33231                           
 33232                           ; BSR set to: 1
 33233                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 33234  00C054  0012               	return	
 33235  00C056                     
 33236                           ; BSR set to: 1
 33237                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 33238                           
 33239                           ; BSR set to: 1
 33240                           
 33241                           ; BSR set to: 1
 33242  00C056  0E00               	movlw	0
 33243  00C058  010D               	movlb	13	; () banked
 33244  00C05A  6F88               	movwf	136,b	;volatile
 33245  00C05C  0E00               	movlw	0
 33246  00C05E  6F89               	movwf	137,b	;volatile
 33247  00C060  0E00               	movlw	0
 33248  00C062  6F8A               	movwf	138,b	;volatile
 33249  00C064  0E00               	movlw	0
 33250  00C066  6F8B               	movwf	139,b	;volatile
 33251                           
 33252                           ; BSR set to: 13
 33253                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 33254  00C068  0101               	movlb	1	; () banked
 33255  00C06A  6962               	setf	_MSDCommandState& (0+255),b
 33256                           
 33257                           ;usb_device_msd.c: 885: break;
 33258  00C06C  0012               	return	
 33259  00C06E                     
 33260                           ; BSR set to: 1
 33261                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 33262                           
 33263                           ; BSR set to: 1
 33264  00C06E  5149               	movf	_USBMSDInHandle& (0+255),w,b
 33265  00C070  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 33266  00C072  B4D8               	btfsc	status,2,c
 33267  00C074  D006               	goto	u12490
 33268                           
 33269                           ; BSR set to: 1
 33270  00C076  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 33271  00C07A  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 33272  00C07E  BEDF               	btfsc	indf2,7,c
 33273  00C080  0012               	return	
 33274  00C082                     u12490:
 33275                           
 33276                           ; BSR set to: 1
 33277                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 33278                           
 33279                           ; BSR set to: 1
 33280  00C082  0102               	movlb	2	; () banked
 33281  00C084  510B               	movf	(_gblCBW+11)& (0+255),w,b
 33282  00C086  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33283  00C088  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33284  00C08A  E104               	bnz	u12500
 33285  00C08C  0E40               	movlw	64
 33286  00C08E  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 33287  00C090  A0D8               	btfss	status,0,c
 33288  00C092  D00B               	goto	l660
 33289  00C094                     u12500:
 33290                           
 33291                           ; BSR set to: 2
 33292                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 33293  00C094  0E40               	movlw	64
 33294  00C096  0100               	movlb	0	; () banked
 33295  00C098  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 33296                           
 33297                           ; BSR set to: 0
 33298                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 33299  00C09A  0E40               	movlw	64
 33300  00C09C  0102               	movlb	2	; () banked
 33301  00C09E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33302  00C0A0  0E00               	movlw	0
 33303  00C0A2  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33304  00C0A4  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33305  00C0A6  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33306                           
 33307                           ;usb_device_msd.c: 900: }
 33308  00C0A8  D00A               	goto	l661
 33309  00C0AA                     l660:
 33310                           
 33311                           ; BSR set to: 2
 33312                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 33313  00C0AA  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 33314                           
 33315                           ; BSR set to: 2
 33316                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 33317  00C0AE  0E00               	movlw	0
 33318  00C0B0  6F08               	movwf	(_gblCBW+8)& (0+255),b
 33319  00C0B2  0E00               	movlw	0
 33320  00C0B4  6F09               	movwf	(_gblCBW+9)& (0+255),b
 33321  00C0B6  0E00               	movlw	0
 33322  00C0B8  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 33323  00C0BA  0E00               	movlw	0
 33324  00C0BC  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 33325  00C0BE                     l661:
 33326                           
 33327                           ; BSR set to: 2
 33328                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 33329                           
 33330                           ; BSR set to: 2
 33331  00C0BE  0100               	movlb	0	; () banked
 33332  00C0C0  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33333  00C0C2  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 33334  00C0C4  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 33335  00C0C6  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 33336  00C0C8  0101               	movlb	1	; () banked
 33337  00C0CA  5D45               	subwf	_TransferLength& (0+255),w,b
 33338  00C0CC  0100               	movlb	0	; () banked
 33339  00C0CE  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 33340  00C0D0  0101               	movlb	1	; () banked
 33341  00C0D2  5946               	subwfb	(_TransferLength+1)& (0+255),w,b
 33342  00C0D4  A0D8               	btfss	status,0,c
 33343  00C0D6  D007               	goto	l662
 33344                           
 33345                           ; BSR set to: 1
 33346                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 33347  00C0D8  0100               	movlb	0	; () banked
 33348  00C0DA  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33349  00C0DC  0101               	movlb	1	; () banked
 33350  00C0DE  5F45               	subwf	_TransferLength& (0+255),f,b
 33351  00C0E0  0E00               	movlw	0
 33352  00C0E2  5B46               	subwfb	(_TransferLength+1)& (0+255),f,b
 33353                           
 33354                           ;usb_device_msd.c: 918: }
 33355  00C0E4  D01E               	goto	u12530
 33356  00C0E6                     l662:
 33357                           
 33358                           ; BSR set to: 1
 33359                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 33360                           
 33361                           ; BSR set to: 1
 33362  00C0E6  0E00               	movlw	0
 33363  00C0E8  0100               	movlb	0	; () banked
 33364  00C0EA  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 33365  00C0EC  D016               	goto	l664
 33366  00C0EE                     
 33367                           ; BSR set to: 0
 33368                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 33369                           
 33370                           ; BSR set to: 0
 33371  00C0EE  0101               	movlb	1	; () banked
 33372  00C0F0  5145               	movf	_TransferLength& (0+255),w,b
 33373  00C0F2  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33374  00C0F4  B4D8               	btfsc	status,2,c
 33375  00C0F6  D004               	goto	l666
 33376                           
 33377                           ; BSR set to: 1
 33378                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 33379  00C0F8  0745               	decf	_TransferLength& (0+255),f,b
 33380  00C0FA  A0D8               	btfss	status,0,c
 33381  00C0FC  0746               	decf	(_TransferLength+1)& (0+255),f,b
 33382                           
 33383                           ;usb_device_msd.c: 932: }
 33384  00C0FE  D00B               	goto	l667
 33385  00C100                     l666:
 33386                           
 33387                           ; BSR set to: 1
 33388                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 33389                           
 33390                           ; BSR set to: 1
 33391  00C100  0100               	movlb	0	; () banked
 33392  00C102  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33393  00C104  0D01               	mullw	1
 33394  00C106  0E00               	movlw	0
 33395  00C108  24F3               	addwf	prodl,w,c
 33396  00C10A  6ED9               	movwf	fsr2l,c
 33397  00C10C  0E06               	movlw	6
 33398  00C10E  20F4               	addwfc	prodh,w,c
 33399  00C110  6EDA               	movwf	fsr2h,c
 33400  00C112  0E00               	movlw	0
 33401  00C114  6EDF               	movwf	indf2,c
 33402  00C116                     l667:
 33403                           
 33404                           ; BSR set to: 0
 33405  00C116  0100               	movlb	0	; () banked
 33406  00C118  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 33407  00C11A                     l664:
 33408                           
 33409                           ; BSR set to: 0
 33410                           
 33411                           ; BSR set to: 0
 33412  00C11A  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 33413  00C11C  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 33414  00C11E  A0D8               	btfss	status,0,c
 33415  00C120  D7E6               	goto	l665
 33416  00C122                     u12530:
 33417                           
 33418                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 33419                           
 33420                           ; BSR set to: 0
 33421                           
 33422                           ; BSR set to: 0
 33423  00C122  0E01               	movlw	1
 33424  00C124  0100               	movlb	0	; () banked
 33425  00C126  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33426  00C128  0E00               	movlw	0
 33427  00C12A  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 33428  00C12C  0E06               	movlw	6
 33429  00C12E  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 33430  00C130  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 33431  00C134  0E02               	movlw	2
 33432  00C136  EC35  F088         	call	_USBTransferOnePacket
 33433  00C13A  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 33434  00C13E  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 33435                           
 33436                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 33437  00C142  0102               	movlb	2	; () banked
 33438  00C144  5108               	movf	(_gblCBW+8)& (0+255),w,b
 33439  00C146  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 33440  00C148  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 33441  00C14A  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 33442  00C14C  A4D8               	btfss	status,2,c
 33443  00C14E  0012               	return	
 33444                           
 33445                           ; BSR set to: 2
 33446                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 33447  00C150  0101               	movlb	1	; () banked
 33448  00C152  6962               	setf	_MSDCommandState& (0+255),b
 33449                           
 33450                           ; BSR set to: 1
 33451                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 33452                           
 33453                           ; BSR set to: 1
 33454                           
 33455                           ;usb_device_msd.c: 949: break;
 33456  00C154  0012               	return	
 33457  00C156                     
 33458                           ; BSR set to: 1
 33459                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 33460                           
 33461                           ; BSR set to: 1
 33462                           
 33463                           ;usb_device_msd.c: 954: default:
 33464                           
 33465                           ; BSR set to: 1
 33466  00C156  0E7F               	movlw	127
 33467  00C158  EC03  F085         	call	_MSDErrorHandler
 33468                           
 33469                           ;usb_device_msd.c: 960: }
 33470                           
 33471                           ;usb_device_msd.c: 959: break;
 33472  00C15C  0012               	return	
 33473  00C15E                     l630:
 33474  00C15E  0101               	movlb	1	; () banked
 33475  00C160  5162               	movf	_MSDCommandState& (0+255),w,b
 33476                           
 33477                           ; Switch size 1, requested type "space"
 33478                           ; Number of cases is 12, Range of values is 0 to 254
 33479                           ; switch strategies available:
 33480                           ; Name         Instructions Cycles
 33481                           ; simple_byte           37    19 (average)
 33482                           ;	Chosen strategy is simple_byte
 33483  00C162  0A00               	xorlw	0	; case 0
 33484  00C164  B4D8               	btfsc	status,2,c
 33485  00C166  D74E               	goto	l650
 33486  00C168  0A03               	xorlw	3	; case 3
 33487  00C16A  B4D8               	btfsc	status,2,c
 33488  00C16C  D6CA               	goto	l640
 33489  00C16E  0A11               	xorlw	17	; case 18
 33490  00C170  B4D8               	btfsc	status,2,c
 33491  00C172  D635               	goto	l636
 33492  00C174  0A08               	xorlw	8	; case 26
 33493  00C176  B4D8               	btfsc	status,2,c
 33494  00C178  D6F3               	goto	l644
 33495  00C17A  0A01               	xorlw	1	; case 27
 33496  00C17C  B4D8               	btfsc	status,2,c
 33497  00C17E  D76B               	goto	l654
 33498  00C180  0A05               	xorlw	5	; case 30
 33499  00C182  B4D8               	btfsc	status,2,c
 33500  00C184  D729               	goto	l649
 33501  00C186  0A3B               	xorlw	59	; case 37
 33502  00C188  B4D8               	btfsc	status,2,c
 33503  00C18A  D658               	goto	l639
 33504  00C18C  0A0D               	xorlw	13	; case 40
 33505  00C18E  B4D8               	btfsc	status,2,c
 33506  00C190  D616               	goto	l631
 33507  00C192  0A02               	xorlw	2	; case 42
 33508  00C194  B4D8               	btfsc	status,2,c
 33509  00C196  D61B               	goto	l634
 33510  00C198  0A05               	xorlw	5	; case 47
 33511  00C19A  B4D8               	btfsc	status,2,c
 33512  00C19C  D75C               	goto	l654
 33513  00C19E  0AD2               	xorlw	210	; case 253
 33514  00C1A0  B4D8               	btfsc	status,2,c
 33515  00C1A2  D765               	goto	l656
 33516  00C1A4  0A03               	xorlw	3	; case 254
 33517  00C1A6  D7D7               	goto	l670
 33518  00C1A8                     __end_of_MSDProcessCommandMediaPresent:
 33519                           	opt stack 0
 33520                           tosu	equ	0xFFF
 33521                           tosh	equ	0xFFE
 33522                           tosl	equ	0xFFD
 33523                           pclath	equ	0xFFA
 33524                           tblptru	equ	0xFF8
 33525                           tblptrh	equ	0xFF7
 33526                           tblptrl	equ	0xFF6
 33527                           tablat	equ	0xFF5
 33528                           prodh	equ	0xFF4
 33529                           prodl	equ	0xFF3
 33530                           intcon	equ	0xFF2
 33531                           postinc0	equ	0xFEE
 33532                           wreg	equ	0xFE8
 33533                           indf1	equ	0xFE7
 33534                           postinc1	equ	0xFE6
 33535                           postdec1	equ	0xFE5
 33536                           plusw1	equ	0xFE3
 33537                           fsr1h	equ	0xFE2
 33538                           fsr1l	equ	0xFE1
 33539                           indf2	equ	0xFDF
 33540                           postinc2	equ	0xFDE
 33541                           postdec2	equ	0xFDD
 33542                           plusw2	equ	0xFDB
 33543                           fsr2h	equ	0xFDA
 33544                           fsr2l	equ	0xFD9
 33545                           status	equ	0xFD8
 33546                           
 33547 ;; *************** function _MSDWriteHandler *****************
 33548 ;; Defined at:
 33549 ;;		line 1188 in file "usb_device_msd.c"
 33550 ;; Parameters:    Size  Location     Type
 33551 ;;		None
 33552 ;; Auto vars:     Size  Location     Type
 33553 ;;		None
 33554 ;; Return value:  Size  Location     Type
 33555 ;;                  1    wreg      unsigned char 
 33556 ;; Registers used:
 33557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 33558 ;; Tracked objects:
 33559 ;;		On entry : 0/0
 33560 ;;		On exit  : 0/0
 33561 ;;		Unchanged: 0/0
 33562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33565 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33566 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33567 ;;Total ram usage:        5 bytes
 33568 ;; Hardware stack levels used:    1
 33569 ;; Hardware stack levels required when called:   16
 33570 ;; This function calls:
 33571 ;;		_ExternalFlash_SectorWrite
 33572 ;;		_ExternalFlash_WriteProtectStateGet
 33573 ;;		_MSDCheckForErrorCases
 33574 ;;		_USBStallEndpoint
 33575 ;;		_USBTransferOnePacket
 33576 ;; This function is called by:
 33577 ;;		_MSDProcessCommandMediaPresent
 33578 ;; This function uses a non-reentrant model
 33579 ;;
 33580                           
 33581                           	psect	text131
 33582  00D636                     __ptext131:
 33583                           	opt stack 0
 33584  00D636                     _MSDWriteHandler:
 33585                           	opt stack 10
 33586                           
 33587                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 33588                           
 33589                           ;incstack = 0
 33590  00D636  D160               	goto	l700
 33591  00D638                     l701:
 33592                           
 33593                           ; BSR set to: 1
 33594                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 33595  00D638  C211  F12E         	movff	_gblCBW+17,_LBA+3
 33596                           
 33597                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 33598  00D63C  C212  F12D         	movff	_gblCBW+18,_LBA+2
 33599                           
 33600                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 33601  00D640  C213  F12C         	movff	_gblCBW+19,_LBA+1
 33602                           
 33603                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 33604  00D644  C214  F12B         	movff	_gblCBW+20,_LBA
 33605                           
 33606                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 33607  00D648  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 33608                           
 33609                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 33610  00D64C  C217  F145         	movff	_gblCBW+23,_TransferLength
 33611                           
 33612                           ; BSR set to: 1
 33613                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 33614  00D650  5145               	movf	_TransferLength& (0+255),w,b
 33615  00D652  0100               	movlb	0	; () banked
 33616  00D654  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33617  00D656  0101               	movlb	1	; () banked
 33618  00D658  5146               	movf	(_TransferLength+1)& (0+255),w,b
 33619  00D65A  0100               	movlb	0	; () banked
 33620  00D65C  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 33621  00D65E  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33622  00D660  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33623  00D662  0E09               	movlw	9
 33624  00D664                     u11315:
 33625  00D664  90D8               	bcf	status,0,c
 33626  00D666  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 33627  00D668  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 33628  00D66A  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 33629  00D66C  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 33630  00D66E  2EE8               	decfsz	wreg,f,c
 33631  00D670  D7F9               	goto	u11315
 33632  00D672  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 33633  00D676  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 33634  00D67A  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 33635  00D67E  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 33636  00D682  EC90  F085         	call	_MSDCheckForErrorCases	;wreg free
 33637  00D686  0900               	iorlw	0
 33638  00D688  A4D8               	btfss	status,2,c
 33639  00D68A  D148               	goto	l703
 33640                           
 33641                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 33642                           
 33643                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 33644  00D68C  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33645  00D690  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33646  00D694  EE22  F098         	lfsr	2,_LUN+15
 33647  00D698  D801               	call	u11338
 33648  00D69A  D00A               	goto	u11339
 33649  00D69C                     u11338:
 33650  00D69C  0005               	push	
 33651  00D69E  6EFA               	movwf	pclath,c
 33652  00D6A0  50DE               	movf	postinc2,w,c
 33653  00D6A2  6EFD               	movwf	tosl,c
 33654  00D6A4  50DE               	movf	postinc2,w,c
 33655  00D6A6  6EFE               	movwf	tosh,c
 33656  00D6A8  50DE               	movf	postinc2,w,c
 33657  00D6AA  6EFF               	movwf	tosu,c
 33658  00D6AC  50FA               	movf	pclath,w,c
 33659  00D6AE  0012               	return		;indir
 33660  00D6B0                     u11339:
 33661  00D6B0  0900               	iorlw	0
 33662  00D6B2  B4D8               	btfsc	status,2,c
 33663  00D6B4  D017               	goto	l704
 33664                           
 33665                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 33666  00D6B6  0E01               	movlw	1
 33667  00D6B8  010D               	movlb	13	; () banked
 33668  00D6BA  6F8C               	movwf	140,b	;volatile
 33669                           
 33670                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 33671  00D6BC  0101               	movlb	1	; () banked
 33672  00D6BE  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33673  00D6C0  0BF0               	andlw	-16
 33674  00D6C2  0907               	iorlw	7
 33675  00D6C4  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33676                           
 33677                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 33678  00D6C6  0E27               	movlw	39
 33679  00D6C8  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33680                           
 33681                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 33682  00D6CA  0E00               	movlw	0
 33683  00D6CC  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33684                           
 33685                           ; BSR set to: 1
 33686                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 33687  00D6CE  0E00               	movlw	0
 33688  00D6D0  0100               	movlb	0	; () banked
 33689  00D6D2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 33690  00D6D4  0E02               	movlw	2
 33691  00D6D6  ECB0  F087         	call	_USBStallEndpoint
 33692                           
 33693                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 33694  00D6DA  0E00               	movlw	0
 33695  00D6DC  0101               	movlb	1	; () banked
 33696  00D6DE  6F60               	movwf	_MSDWriteState& (0+255),b
 33697                           
 33698                           ; BSR set to: 1
 33699                           ;usb_device_msd.c: 1228: return MSDWriteState;
 33700  00D6E0  5160               	movf	_MSDWriteState& (0+255),w,b
 33701                           
 33702                           ; BSR set to: 1
 33703  00D6E2  0012               	return	
 33704  00D6E4                     l704:
 33705                           
 33706                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 33707                           
 33708                           ; BSR set to: 1
 33709  00D6E4  0E01               	movlw	1
 33710  00D6E6  0101               	movlb	1	; () banked
 33711  00D6E8  6F63               	movwf	_MSD_State& (0+255),b
 33712  00D6EA                     
 33713                           ; BSR set to: 1
 33714                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 33715                           
 33716                           ; BSR set to: 1
 33717  00D6EA  5145               	movf	_TransferLength& (0+255),w,b
 33718  00D6EC  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 33719  00D6EE  A4D8               	btfss	status,2,c
 33720  00D6F0  D002               	goto	l707
 33721                           
 33722                           ; BSR set to: 1
 33723                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 33724  00D6F2  0E00               	movlw	0
 33725  00D6F4  D0FF               	goto	L50
 33726  00D6F6                     l707:
 33727                           
 33728                           ; BSR set to: 1
 33729                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 33730                           
 33731                           ; BSR set to: 1
 33732  00D6F6  0E03               	movlw	3
 33733  00D6F8  6F60               	movwf	_MSDWriteState& (0+255),b
 33734                           
 33735                           ; BSR set to: 1
 33736                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 33737  00D6FA  0E00               	movlw	0
 33738  00D6FC  6F4D               	movwf	_ptrNextData& (0+255),b
 33739  00D6FE  0E06               	movlw	6
 33740  00D700  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 33741                           
 33742                           ; BSR set to: 1
 33743                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 33744  00D702  0E00               	movlw	0
 33745  00D704  010D               	movlb	13	; () banked
 33746  00D706  6F88               	movwf	136,b	;volatile
 33747  00D708  0E02               	movlw	2
 33748  00D70A  6F89               	movwf	137,b	;volatile
 33749  00D70C  0E00               	movlw	0
 33750  00D70E  6F8A               	movwf	138,b	;volatile
 33751  00D710  0E00               	movlw	0
 33752  00D712  6F8B               	movwf	139,b	;volatile
 33753  00D714                     l708:
 33754                           
 33755                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 33756  00D714  010D               	movlb	13	; () banked
 33757  00D716  5188               	movf	136,w,b	;volatile
 33758  00D718  1189               	iorwf	137,w,b	;volatile
 33759  00D71A  118A               	iorwf	138,w,b	;volatile
 33760  00D71C  118B               	iorwf	139,w,b	;volatile
 33761  00D71E  B4D8               	btfsc	status,2,c
 33762  00D720  D01F               	goto	l709
 33763                           
 33764                           ; BSR set to: 13
 33765                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 33766  00D722  0101               	movlb	1	; () banked
 33767  00D724  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33768  00D726  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33769  00D728  B4D8               	btfsc	status,2,c
 33770  00D72A  D006               	goto	l710
 33771                           
 33772                           ; BSR set to: 1
 33773  00D72C  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33774  00D730  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33775  00D734  BEDF               	btfsc	indf2,7,c
 33776  00D736  D0F2               	goto	l703
 33777  00D738                     l710:
 33778                           
 33779                           ; BSR set to: 1
 33780                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 33781                           
 33782                           ; BSR set to: 1
 33783  00D738  0E00               	movlw	0
 33784  00D73A  0100               	movlb	0	; () banked
 33785  00D73C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 33786  00D73E  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 33787  00D742  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 33788  00D746  0E40               	movlw	64
 33789  00D748  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 33790  00D74A  0E02               	movlw	2
 33791  00D74C  EC35  F088         	call	_USBTransferOnePacket
 33792  00D750  C060  F14B         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 33793  00D754  C061  F14C         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 33794                           
 33795                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 33796  00D758  0E04               	movlw	4
 33797  00D75A  0101               	movlb	1	; () banked
 33798  00D75C  6F60               	movwf	_MSDWriteState& (0+255),b
 33799                           
 33800                           ;usb_device_msd.c: 1260: }
 33801  00D75E  D023               	goto	l711
 33802  00D760                     l709:
 33803                           
 33804                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 33805                           
 33806                           ; BSR set to: 1
 33807  00D760  C29E  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 33808  00D764  C29F  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 33809  00D768  EE22  F098         	lfsr	2,_LUN+15
 33810  00D76C  D801               	call	u11398
 33811  00D76E  D00A               	goto	u11399
 33812  00D770                     u11398:
 33813  00D770  0005               	push	
 33814  00D772  6EFA               	movwf	pclath,c
 33815  00D774  50DE               	movf	postinc2,w,c
 33816  00D776  6EFD               	movwf	tosl,c
 33817  00D778  50DE               	movf	postinc2,w,c
 33818  00D77A  6EFE               	movwf	tosh,c
 33819  00D77C  50DE               	movf	postinc2,w,c
 33820  00D77E  6EFF               	movwf	tosu,c
 33821  00D780  50FA               	movf	pclath,w,c
 33822  00D782  0012               	return		;indir
 33823  00D784                     u11399:
 33824  00D784  0900               	iorlw	0
 33825  00D786  B4D8               	btfsc	status,2,c
 33826  00D788  D00C               	goto	l712
 33827                           
 33828                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 33829  00D78A  0E01               	movlw	1
 33830  00D78C  010D               	movlb	13	; () banked
 33831  00D78E  6F8C               	movwf	140,b	;volatile
 33832                           
 33833                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 33834  00D790  0101               	movlb	1	; () banked
 33835  00D792  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 33836  00D794  0BF0               	andlw	-16
 33837  00D796  0902               	iorlw	2
 33838  00D798  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 33839                           
 33840                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 33841  00D79A  0E27               	movlw	39
 33842  00D79C  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 33843                           
 33844                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 33845  00D79E  0E00               	movlw	0
 33846  00D7A0  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 33847  00D7A2                     l712:
 33848                           
 33849                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 33850  00D7A2  0E02               	movlw	2
 33851  00D7A4  D0A6               	goto	L94
 33852  00D7A6                     l711:
 33853                           
 33854                           ; BSR set to: 1
 33855                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 33856                           
 33857                           ; BSR set to: 1
 33858                           
 33859                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 33860                           
 33861                           ; BSR set to: 1
 33862  00D7A6  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33863  00D7A8  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33864  00D7AA  B4D8               	btfsc	status,2,c
 33865  00D7AC  D006               	goto	l714
 33866                           
 33867                           ; BSR set to: 1
 33868  00D7AE  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33869  00D7B2  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33870  00D7B6  BEDF               	btfsc	indf2,7,c
 33871  00D7B8  D0B1               	goto	l703
 33872  00D7BA                     l714:
 33873                           
 33874                           ; BSR set to: 1
 33875                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 33876                           
 33877                           ; BSR set to: 1
 33878  00D7BA  EE20 F001          	lfsr	2,1
 33879  00D7BE  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33880  00D7C0  26D9               	addwf	fsr2l,f,c
 33881  00D7C2  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33882  00D7C4  22DA               	addwfc	fsr2h,f,c
 33883  00D7C6  50DF               	movf	indf2,w,c
 33884  00D7C8  0100               	movlb	0	; () banked
 33885  00D7CA  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33886  00D7CC  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33887  00D7D0  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33888  00D7D2  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33889  00D7D4  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33890  00D7D6  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33891  00D7D8  0102               	movlb	2	; () banked
 33892  00D7DA  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 33893  00D7DC  0100               	movlb	0	; () banked
 33894  00D7DE  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33895  00D7E0  0102               	movlb	2	; () banked
 33896  00D7E2  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 33897  00D7E4  0100               	movlb	0	; () banked
 33898  00D7E6  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33899  00D7E8  0102               	movlb	2	; () banked
 33900  00D7EA  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 33901  00D7EC  0100               	movlb	0	; () banked
 33902  00D7EE  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33903  00D7F0  0102               	movlb	2	; () banked
 33904  00D7F2  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 33905                           
 33906                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 33907  00D7F4  0101               	movlb	1	; () banked
 33908  00D7F6  EE20 F001          	lfsr	2,1
 33909  00D7FA  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 33910  00D7FC  26D9               	addwf	fsr2l,f,c
 33911  00D7FE  514C               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33912  00D800  22DA               	addwfc	fsr2h,f,c
 33913  00D802  50DF               	movf	indf2,w,c
 33914  00D804  0100               	movlb	0	; () banked
 33915  00D806  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 33916  00D808  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 33917  00D80C  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 33918  00D80E  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 33919  00D810  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 33920  00D812  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 33921  00D814  010D               	movlb	13	; () banked
 33922  00D816  5F88               	subwf	136,f,b	;volatile
 33923  00D818  0100               	movlb	0	; () banked
 33924  00D81A  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 33925  00D81C  010D               	movlb	13	; () banked
 33926  00D81E  5B89               	subwfb	137,f,b	;volatile
 33927  00D820  0100               	movlb	0	; () banked
 33928  00D822  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 33929  00D824  010D               	movlb	13	; () banked
 33930  00D826  5B8A               	subwfb	138,f,b	;volatile
 33931  00D828  0100               	movlb	0	; () banked
 33932  00D82A  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 33933  00D82C  010D               	movlb	13	; () banked
 33934  00D82E  5B8B               	subwfb	139,f,b	;volatile
 33935                           
 33936                           ; BSR set to: 13
 33937                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 33938  00D830  0E40               	movlw	64
 33939  00D832  0101               	movlb	1	; () banked
 33940  00D834  274D               	addwf	_ptrNextData& (0+255),f,b
 33941  00D836  0E00               	movlw	0
 33942  00D838  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 33943                           
 33944                           ; BSR set to: 1
 33945                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 33946  00D83A  0E03               	movlw	3
 33947  00D83C  D05B               	goto	L50
 33948  00D83E                     
 33949                           ; BSR set to: 1
 33950                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 33951                           
 33952                           ; BSR set to: 1
 33953  00D83E  010D               	movlb	13	; () banked
 33954  00D840  518C               	movf	140,w,b	;volatile
 33955  00D842  A4D8               	btfss	status,2,c
 33956  00D844  D040               	goto	l719
 33957                           
 33958                           ; BSR set to: 13
 33959                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 33960  00D846  C29E  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 33961  00D84A  C29F  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 33962  00D84E  C12B  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 33963  00D852  C12C  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 33964  00D856  C12D  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 33965  00D85A  C12E  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 33966  00D85E  0E00               	movlw	0
 33967  00D860  0100               	movlb	0	; () banked
 33968  00D862  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 33969  00D864  0E06               	movlw	6
 33970  00D866  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 33971  00D868  0101               	movlb	1	; () banked
 33972  00D86A  512B               	movf	_LBA& (0+255),w,b
 33973  00D86C  112C               	iorwf	(_LBA+1)& (0+255),w,b
 33974  00D86E  112D               	iorwf	(_LBA+2)& (0+255),w,b
 33975  00D870  112E               	iorwf	(_LBA+3)& (0+255),w,b
 33976  00D872  A4D8               	btfss	status,2,c
 33977  00D874  D002               	goto	u11440
 33978  00D876  0E01               	movlw	1
 33979  00D878  D001               	goto	u11450
 33980  00D87A                     u11440:
 33981  00D87A  0E00               	movlw	0
 33982  00D87C                     u11450:
 33983  00D87C  0100               	movlb	0	; () banked
 33984  00D87E  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 33985  00D880  EE22  F09B         	lfsr	2,_LUN+18
 33986  00D884  D801               	call	u11468
 33987  00D886  D00A               	goto	u11469
 33988  00D888                     u11468:
 33989  00D888  0005               	push	
 33990  00D88A  6EFA               	movwf	pclath,c
 33991  00D88C  50DE               	movf	postinc2,w,c
 33992  00D88E  6EFD               	movwf	tosl,c
 33993  00D890  50DE               	movf	postinc2,w,c
 33994  00D892  6EFE               	movwf	tosh,c
 33995  00D894  50DE               	movf	postinc2,w,c
 33996  00D896  6EFF               	movwf	tosu,c
 33997  00D898  50FA               	movf	pclath,w,c
 33998  00D89A  0012               	return		;indir
 33999  00D89C                     u11469:
 34000  00D89C  06E8               	decf	wreg,f,c
 34001  00D89E  B4D8               	btfsc	status,2,c
 34002  00D8A0  D012               	goto	l719
 34003                           
 34004                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 34005  00D8A2  0E64               	movlw	100
 34006  00D8A4  0101               	movlb	1	; () banked
 34007  00D8A6  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 34008  00D8A8  D002               	goto	l718
 34009                           
 34010                           ; BSR set to: 1
 34011                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 34012  00D8AA  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 34013                           
 34014                           ;usb_device_msd.c: 1314: break;
 34015  00D8AC  D037               	goto	l703
 34016  00D8AE                     l718:
 34017                           
 34018                           ; BSR set to: 1
 34019                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 34020                           
 34021                           ; BSR set to: 1
 34022  00D8AE  0E01               	movlw	1
 34023  00D8B0  010D               	movlb	13	; () banked
 34024  00D8B2  6F8C               	movwf	140,b	;volatile
 34025                           
 34026                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 34027  00D8B4  0101               	movlb	1	; () banked
 34028  00D8B6  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 34029  00D8B8  0BF0               	andlw	-16
 34030  00D8BA  0903               	iorlw	3
 34031  00D8BC  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 34032                           
 34033                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 34034  00D8BE  0E00               	movlw	0
 34035  00D8C0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 34036                           
 34037                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 34038  00D8C2  0E00               	movlw	0
 34039  00D8C4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 34040  00D8C6                     l719:
 34041                           
 34042                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 34043                           
 34044                           ; BSR set to: 1
 34045                           
 34046                           ; BSR set to: 1
 34047                           
 34048                           ; BSR set to: 1
 34049  00D8C6  0E01               	movlw	1
 34050  00D8C8  0101               	movlb	1	; () banked
 34051  00D8CA  272B               	addwf	_LBA& (0+255),f,b
 34052  00D8CC  0E00               	movlw	0
 34053  00D8CE  232C               	addwfc	(_LBA+1)& (0+255),f,b
 34054  00D8D0  232D               	addwfc	(_LBA+2)& (0+255),f,b
 34055  00D8D2  232E               	addwfc	(_LBA+3)& (0+255),f,b
 34056                           
 34057                           ; BSR set to: 1
 34058                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 34059  00D8D4  0745               	decf	_TransferLength& (0+255),f,b
 34060  00D8D6  A0D8               	btfss	status,0,c
 34061  00D8D8  0746               	decf	(_TransferLength+1)& (0+255),f,b
 34062                           
 34063                           ; BSR set to: 1
 34064                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 34065  00D8DA  0E01               	movlw	1
 34066  00D8DC  D00B               	goto	L50
 34067  00D8DE                     
 34068                           ; BSR set to: 1
 34069                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 34070                           
 34071                           ; BSR set to: 1
 34072  00D8DE  0E02               	movlw	2
 34073  00D8E0  010D               	movlb	13	; () banked
 34074  00D8E2  6F8C               	movwf	140,b	;volatile
 34075                           
 34076                           ; BSR set to: 13
 34077                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 34078  00D8E4  0E00               	movlw	0
 34079  00D8E6  0100               	movlb	0	; () banked
 34080  00D8E8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34081  00D8EA  0E02               	movlw	2
 34082  00D8EC  ECB0  F087         	call	_USBStallEndpoint
 34083                           
 34084                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 34085  00D8F0  0E00               	movlw	0
 34086  00D8F2                     L94:
 34087  00D8F2  0101               	movlb	1	; () banked
 34088  00D8F4                     L50:
 34089  00D8F4  6F60               	movwf	_MSDWriteState& (0+255),b
 34090                           
 34091                           ; BSR set to: 1
 34092                           ;usb_device_msd.c: 1345: }
 34093                           
 34094                           ;usb_device_msd.c: 1344: break;
 34095  00D8F6  D012               	goto	l703
 34096  00D8F8                     l700:
 34097                           
 34098                           ; BSR set to: 1
 34099  00D8F8  0101               	movlb	1	; () banked
 34100  00D8FA  5160               	movf	_MSDWriteState& (0+255),w,b
 34101                           
 34102                           ; Switch size 1, requested type "space"
 34103                           ; Number of cases is 5, Range of values is 0 to 4
 34104                           ; switch strategies available:
 34105                           ; Name         Instructions Cycles
 34106                           ; simple_byte           16     9 (average)
 34107                           ;	Chosen strategy is simple_byte
 34108  00D8FC  0A00               	xorlw	0	; case 0
 34109  00D8FE  B4D8               	btfsc	status,2,c
 34110  00D900  D69B               	goto	l701
 34111  00D902  0A01               	xorlw	1	; case 1
 34112  00D904  B4D8               	btfsc	status,2,c
 34113  00D906  D6F1               	goto	l706
 34114  00D908  0A03               	xorlw	3	; case 2
 34115  00D90A  B4D8               	btfsc	status,2,c
 34116  00D90C  D798               	goto	l715
 34117  00D90E  0A01               	xorlw	1	; case 3
 34118  00D910  B4D8               	btfsc	status,2,c
 34119  00D912  D700               	goto	l708
 34120  00D914  0A07               	xorlw	7	; case 4
 34121  00D916  B4D8               	btfsc	status,2,c
 34122  00D918  D746               	goto	l711
 34123  00D91A  D7E1               	goto	l720
 34124  00D91C                     l703:
 34125                           
 34126                           ;usb_device_msd.c: 1347: return MSDWriteState;
 34127                           
 34128                           ; BSR set to: 1
 34129  00D91C  0101               	movlb	1	; () banked
 34130  00D91E  5160               	movf	_MSDWriteState& (0+255),w,b
 34131  00D920  0012               	return	
 34132  00D922                     __end_of_MSDWriteHandler:
 34133                           	opt stack 0
 34134                           tosu	equ	0xFFF
 34135                           tosh	equ	0xFFE
 34136                           tosl	equ	0xFFD
 34137                           pclath	equ	0xFFA
 34138                           tblptru	equ	0xFF8
 34139                           tblptrh	equ	0xFF7
 34140                           tblptrl	equ	0xFF6
 34141                           tablat	equ	0xFF5
 34142                           prodh	equ	0xFF4
 34143                           prodl	equ	0xFF3
 34144                           intcon	equ	0xFF2
 34145                           postinc0	equ	0xFEE
 34146                           wreg	equ	0xFE8
 34147                           indf1	equ	0xFE7
 34148                           postinc1	equ	0xFE6
 34149                           postdec1	equ	0xFE5
 34150                           plusw1	equ	0xFE3
 34151                           fsr1h	equ	0xFE2
 34152                           fsr1l	equ	0xFE1
 34153                           indf2	equ	0xFDF
 34154                           postinc2	equ	0xFDE
 34155                           postdec2	equ	0xFDD
 34156                           plusw2	equ	0xFDB
 34157                           fsr2h	equ	0xFDA
 34158                           fsr2l	equ	0xFD9
 34159                           status	equ	0xFD8
 34160                           
 34161 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 34162 ;; Defined at:
 34163 ;;		line 34 in file "external_flash.c"
 34164 ;; Parameters:    Size  Location     Type
 34165 ;;  config          2    0[BANK0 ] PTR void 
 34166 ;;		 -> NULL(0), 
 34167 ;; Auto vars:     Size  Location     Type
 34168 ;;		None
 34169 ;; Return value:  Size  Location     Type
 34170 ;;                  1    wreg      unsigned char 
 34171 ;; Registers used:
 34172 ;;		wreg
 34173 ;; Tracked objects:
 34174 ;;		On entry : 0/0
 34175 ;;		On exit  : 0/0
 34176 ;;		Unchanged: 0/0
 34177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34178 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34181 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34182 ;;Total ram usage:        2 bytes
 34183 ;; Hardware stack levels used:    1
 34184 ;; Hardware stack levels required when called:   10
 34185 ;; This function calls:
 34186 ;;		Nothing
 34187 ;; This function is called by:
 34188 ;;		_MSDWriteHandler
 34189 ;;		_MSDProcessCommandMediaPresent
 34190 ;; This function uses a non-reentrant model
 34191 ;;
 34192                           
 34193                           	psect	text132
 34194  015A7C                     __ptext132:
 34195                           	opt stack 0
 34196  015A7C                     _ExternalFlash_WriteProtectStateGet:
 34197                           	opt stack 15
 34198                           
 34199                           ;external_flash.c: 37: return 0;
 34200                           
 34201                           ; BSR set to: 1
 34202                           ;incstack = 0
 34203  015A7C  0E00               	movlw	0
 34204  015A7E  0012               	return	
 34205  015A80                     __end_of_ExternalFlash_WriteProtectStateGet:
 34206                           	opt stack 0
 34207                           tosu	equ	0xFFF
 34208                           tosh	equ	0xFFE
 34209                           tosl	equ	0xFFD
 34210                           pclath	equ	0xFFA
 34211                           tblptru	equ	0xFF8
 34212                           tblptrh	equ	0xFF7
 34213                           tblptrl	equ	0xFF6
 34214                           tablat	equ	0xFF5
 34215                           prodh	equ	0xFF4
 34216                           prodl	equ	0xFF3
 34217                           intcon	equ	0xFF2
 34218                           postinc0	equ	0xFEE
 34219                           wreg	equ	0xFE8
 34220                           indf1	equ	0xFE7
 34221                           postinc1	equ	0xFE6
 34222                           postdec1	equ	0xFE5
 34223                           plusw1	equ	0xFE3
 34224                           fsr1h	equ	0xFE2
 34225                           fsr1l	equ	0xFE1
 34226                           indf2	equ	0xFDF
 34227                           postinc2	equ	0xFDE
 34228                           postdec2	equ	0xFDD
 34229                           plusw2	equ	0xFDB
 34230                           fsr2h	equ	0xFDA
 34231                           fsr2l	equ	0xFD9
 34232                           status	equ	0xFD8
 34233                           
 34234 ;; *************** function _ExternalFlash_SectorWrite *****************
 34235 ;; Defined at:
 34236 ;;		line 56 in file "external_flash.c"
 34237 ;; Parameters:    Size  Location     Type
 34238 ;;  config          2   36[BANK0 ] PTR void 
 34239 ;;		 -> NULL(0), 
 34240 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 34241 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 34242 ;;		 -> msd_buffer(512), 
 34243 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 34244 ;; Auto vars:     Size  Location     Type
 34245 ;;  page            2   45[BANK0 ] unsigned int 
 34246 ;; Return value:  Size  Location     Type
 34247 ;;                  1    wreg      unsigned char 
 34248 ;; Registers used:
 34249 ;;		wreg, status,2, status,0, cstack
 34250 ;; Tracked objects:
 34251 ;;		On entry : 0/0
 34252 ;;		On exit  : 0/0
 34253 ;;		Unchanged: 0/0
 34254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34255 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34256 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34258 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34259 ;;Total ram usage:       11 bytes
 34260 ;; Hardware stack levels used:    1
 34261 ;; Hardware stack levels required when called:   15
 34262 ;; This function calls:
 34263 ;;		_flash_sector_write
 34264 ;; This function is called by:
 34265 ;;		_MSDWriteHandler
 34266 ;; This function uses a non-reentrant model
 34267 ;;
 34268                           
 34269                           	psect	text133
 34270  015346                     __ptext133:
 34271                           	opt stack 0
 34272  015346                     _ExternalFlash_SectorWrite:
 34273                           	opt stack 10
 34274                           
 34275                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 34276                           
 34277                           ;incstack = 0
 34278  015346  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 34279  01534A  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 34280                           
 34281                           ;external_flash.c: 61: if(sector_addr >= 8192)
 34282  01534E  0100               	movlb	0	; () banked
 34283  015350  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 34284  015352  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 34285  015354  E104               	bnz	u11000
 34286  015356  0E20               	movlw	32
 34287  015358  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 34288  01535A  A0D8               	btfss	status,0,c
 34289  01535C  D002               	goto	l1681
 34290  01535E                     u11000:
 34291                           
 34292                           ; BSR set to: 0
 34293                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 34294  01535E  0E00               	movlw	0
 34295                           
 34296                           ; BSR set to: 0
 34297  015360  0012               	return	
 34298  015362                     l1681:
 34299                           
 34300                           ; BSR set to: 0
 34301                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 34302                           
 34303                           ; BSR set to: 0
 34304  015362  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 34305  015366  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 34306  01536A  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 34307  01536E  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 34308  015372  ECA2  F0A6         	call	_flash_sector_write	;wreg free
 34309                           
 34310                           ;external_flash.c: 69: return 1;
 34311  015376  0E01               	movlw	1
 34312  015378  0012               	return	
 34313  01537A                     __end_of_ExternalFlash_SectorWrite:
 34314                           	opt stack 0
 34315                           tosu	equ	0xFFF
 34316                           tosh	equ	0xFFE
 34317                           tosl	equ	0xFFD
 34318                           pclath	equ	0xFFA
 34319                           tblptru	equ	0xFF8
 34320                           tblptrh	equ	0xFF7
 34321                           tblptrl	equ	0xFF6
 34322                           tablat	equ	0xFF5
 34323                           prodh	equ	0xFF4
 34324                           prodl	equ	0xFF3
 34325                           intcon	equ	0xFF2
 34326                           postinc0	equ	0xFEE
 34327                           wreg	equ	0xFE8
 34328                           indf1	equ	0xFE7
 34329                           postinc1	equ	0xFE6
 34330                           postdec1	equ	0xFE5
 34331                           plusw1	equ	0xFE3
 34332                           fsr1h	equ	0xFE2
 34333                           fsr1l	equ	0xFE1
 34334                           indf2	equ	0xFDF
 34335                           postinc2	equ	0xFDE
 34336                           postdec2	equ	0xFDD
 34337                           plusw2	equ	0xFDB
 34338                           fsr2h	equ	0xFDA
 34339                           fsr2l	equ	0xFD9
 34340                           status	equ	0xFD8
 34341                           
 34342 ;; *************** function _flash_sector_write *****************
 34343 ;; Defined at:
 34344 ;;		line 434 in file "flash.c"
 34345 ;; Parameters:    Size  Location     Type
 34346 ;;  page            2   31[BANK0 ] unsigned int 
 34347 ;;  data            2   33[BANK0 ] PTR unsigned char 
 34348 ;;		 -> buffer(512), msd_buffer(512), 
 34349 ;; Auto vars:     Size  Location     Type
 34350 ;;  match           1   35[BANK0 ] enum E7013
 34351 ;; Return value:  Size  Location     Type
 34352 ;;                  1    wreg      void 
 34353 ;; Registers used:
 34354 ;;		wreg, status,2, status,0, cstack
 34355 ;; Tracked objects:
 34356 ;;		On entry : 0/0
 34357 ;;		On exit  : 0/0
 34358 ;;		Unchanged: 0/0
 34359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34360 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34361 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34363 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34364 ;;Total ram usage:        5 bytes
 34365 ;; Hardware stack levels used:    1
 34366 ;; Hardware stack levels required when called:   14
 34367 ;; This function calls:
 34368 ;;		__flash_compare_page_to_buffer
 34369 ;;		__flash_write_page_from_buffer
 34370 ;;		__flash_write_to_buffer
 34371 ;; This function is called by:
 34372 ;;		_ExternalFlash_SectorWrite
 34373 ;;		__make_cluster_chain
 34374 ;;		_fat_format
 34375 ;; This function uses a non-reentrant model
 34376 ;;
 34377                           
 34378                           	psect	text134
 34379  014D44                     __ptext134:
 34380                           	opt stack 0
 34381  014D44                     _flash_sector_write:
 34382                           	opt stack 13
 34383                           
 34384                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 34385                           
 34386                           ;incstack = 0
 34387  014D44  0E00               	movlw	0
 34388  014D46  0100               	movlb	0	; () banked
 34389  014D48  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 34390  014D4A  0E00               	movlw	0
 34391  014D4C  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 34392  014D4E  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 34393  014D52  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 34394  014D56  0E02               	movlw	2
 34395  014D58  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 34396  014D5A  0E00               	movlw	0
 34397  014D5C  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 34398  014D5E  0E00               	movlw	0
 34399  014D60  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 34400  014D62  EC01  F0A6         	call	__flash_write_to_buffer	;wreg free
 34401                           
 34402                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 34403  014D66  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 34404  014D6A  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 34405  014D6E  0E00               	movlw	0
 34406  014D70  0100               	movlb	0	; () banked
 34407  014D72  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 34408  014D74  EC8D  F09E         	call	__flash_compare_page_to_buffer	;wreg free
 34409  014D78  0100               	movlb	0	; () banked
 34410  014D7A  6F83               	movwf	flash_sector_write@match& (0+255),b
 34411                           
 34412                           ; BSR set to: 0
 34413                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 34414  014D7C  0583               	decf	flash_sector_write@match& (0+255),w,b
 34415  014D7E  A4D8               	btfss	status,2,c
 34416  014D80  0012               	return	
 34417                           
 34418                           ; BSR set to: 0
 34419                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 34420  014D82  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 34421  014D86  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 34422  014D8A  0E00               	movlw	0
 34423  014D8C  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 34424  014D8E  ECA1  F0A3         	call	__flash_write_page_from_buffer	;wreg free
 34425  014D92  0012               	return	
 34426  014D94                     __end_of_flash_sector_write:
 34427                           	opt stack 0
 34428                           tosu	equ	0xFFF
 34429                           tosh	equ	0xFFE
 34430                           tosl	equ	0xFFD
 34431                           pclath	equ	0xFFA
 34432                           tblptru	equ	0xFF8
 34433                           tblptrh	equ	0xFF7
 34434                           tblptrl	equ	0xFF6
 34435                           tablat	equ	0xFF5
 34436                           prodh	equ	0xFF4
 34437                           prodl	equ	0xFF3
 34438                           intcon	equ	0xFF2
 34439                           postinc0	equ	0xFEE
 34440                           wreg	equ	0xFE8
 34441                           indf1	equ	0xFE7
 34442                           postinc1	equ	0xFE6
 34443                           postdec1	equ	0xFE5
 34444                           plusw1	equ	0xFE3
 34445                           fsr1h	equ	0xFE2
 34446                           fsr1l	equ	0xFE1
 34447                           indf2	equ	0xFDF
 34448                           postinc2	equ	0xFDE
 34449                           postdec2	equ	0xFDD
 34450                           plusw2	equ	0xFDB
 34451                           fsr2h	equ	0xFDA
 34452                           fsr2l	equ	0xFD9
 34453                           status	equ	0xFD8
 34454                           
 34455 ;; *************** function __flash_write_to_buffer *****************
 34456 ;; Defined at:
 34457 ;;		line 236 in file "flash.c"
 34458 ;; Parameters:    Size  Location     Type
 34459 ;;  start           2   19[BANK0 ] unsigned int 
 34460 ;;  data            2   21[BANK0 ] PTR unsigned char 
 34461 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34462 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34463 ;;  data_length     2   23[BANK0 ] unsigned int 
 34464 ;;  buffer          1   25[BANK0 ] enum E7009
 34465 ;; Auto vars:     Size  Location     Type
 34466 ;;  command         4   26[BANK0 ] unsigned char [4]
 34467 ;; Return value:  Size  Location     Type
 34468 ;;                  1    wreg      void 
 34469 ;; Registers used:
 34470 ;;		wreg, status,2, status,0, cstack
 34471 ;; Tracked objects:
 34472 ;;		On entry : 0/0
 34473 ;;		On exit  : 0/0
 34474 ;;		Unchanged: 0/0
 34475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34476 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34477 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34479 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34480 ;;Total ram usage:       11 bytes
 34481 ;; Hardware stack levels used:    1
 34482 ;; Hardware stack levels required when called:   13
 34483 ;; This function calls:
 34484 ;;		__flash_is_busy
 34485 ;;		_spi_tx_tx
 34486 ;; This function is called by:
 34487 ;;		_flash_sector_write
 34488 ;;		_flash_partial_write
 34489 ;;		_flash_write_to_buffer
 34490 ;; This function uses a non-reentrant model
 34491 ;;
 34492                           
 34493                           	psect	text135
 34494  014C02                     __ptext135:
 34495                           	opt stack 0
 34496  014C02                     __flash_write_to_buffer:
 34497                           	opt stack 13
 34498                           
 34499                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 34500                           
 34501                           ;incstack = 0
 34502  014C02  ECE2  F0AB         	call	__flash_is_busy	;wreg free
 34503  014C06  0900               	iorlw	0
 34504  014C08  A4D8               	btfss	status,2,c
 34505  014C0A  D7FB               	goto	__flash_write_to_buffer
 34506                           
 34507                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 34508  014C0C  0100               	movlb	0	; () banked
 34509  014C0E  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 34510  014C10  A4D8               	btfss	status,2,c
 34511  014C12  D002               	goto	l1567
 34512                           
 34513                           ; BSR set to: 0
 34514                           ;flash.c: 245: command[0] = 0x84;
 34515  014C14  0E84               	movlw	132
 34516  014C16  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34517  014C18                     l1567:
 34518                           
 34519                           ; BSR set to: 0
 34520                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 34521                           
 34522                           ; BSR set to: 0
 34523  014C18  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 34524  014C1A  A4D8               	btfss	status,2,c
 34525  014C1C  D002               	goto	l1568
 34526                           
 34527                           ; BSR set to: 0
 34528                           ;flash.c: 247: command[0] = 0x87;
 34529  014C1E  0E87               	movlw	135
 34530  014C20  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 34531  014C22                     l1568:
 34532                           
 34533                           ; BSR set to: 0
 34534                           ;flash.c: 249: command[1] = 0x00;
 34535  014C22  0E00               	movlw	0
 34536  014C24  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 34537                           
 34538                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 34539  014C26  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 34540  014C28  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 34541                           
 34542                           ; BSR set to: 0
 34543                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 34544  014C2A  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 34545                           
 34546                           ; BSR set to: 0
 34547                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 34548  014C2E  0E7A               	movlw	low __flash_write_to_buffer@command
 34549  014C30  6F60               	movwf	spi_tx_tx@command& (0+255),b
 34550  014C32  0E00               	movlw	high __flash_write_to_buffer@command
 34551  014C34  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 34552  014C36  0E00               	movlw	0
 34553  014C38  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 34554  014C3A  0E04               	movlw	4
 34555  014C3C  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 34556  014C3E  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 34557  014C42  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 34558  014C46  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 34559  014C4A  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 34560  014C4E  EC77  F09C         	call	_spi_tx_tx	;wreg free
 34561  014C52  0012               	return		;funcret
 34562  014C54                     __end_of__flash_write_to_buffer:
 34563                           	opt stack 0
 34564                           tosu	equ	0xFFF
 34565                           tosh	equ	0xFFE
 34566                           tosl	equ	0xFFD
 34567                           pclath	equ	0xFFA
 34568                           tblptru	equ	0xFF8
 34569                           tblptrh	equ	0xFF7
 34570                           tblptrl	equ	0xFF6
 34571                           tablat	equ	0xFF5
 34572                           prodh	equ	0xFF4
 34573                           prodl	equ	0xFF3
 34574                           intcon	equ	0xFF2
 34575                           postinc0	equ	0xFEE
 34576                           wreg	equ	0xFE8
 34577                           indf1	equ	0xFE7
 34578                           postinc1	equ	0xFE6
 34579                           postdec1	equ	0xFE5
 34580                           plusw1	equ	0xFE3
 34581                           fsr1h	equ	0xFE2
 34582                           fsr1l	equ	0xFE1
 34583                           indf2	equ	0xFDF
 34584                           postinc2	equ	0xFDE
 34585                           postdec2	equ	0xFDD
 34586                           plusw2	equ	0xFDB
 34587                           fsr2h	equ	0xFDA
 34588                           fsr2l	equ	0xFD9
 34589                           status	equ	0xFD8
 34590                           
 34591 ;; *************** function _spi_tx_tx *****************
 34592 ;; Defined at:
 34593 ;;		line 146 in file "spi.c"
 34594 ;; Parameters:    Size  Location     Type
 34595 ;;  command         2    0[BANK0 ] PTR unsigned char 
 34596 ;;		 -> _flash_write_to_buffer@command(4), 
 34597 ;;  command_leng    2    2[BANK0 ] unsigned int 
 34598 ;;  data            2    4[BANK0 ] PTR unsigned char 
 34599 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 34600 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 34601 ;;  data_length     2    6[BANK0 ] unsigned int 
 34602 ;; Auto vars:     Size  Location     Type
 34603 ;;		None
 34604 ;; Return value:  Size  Location     Type
 34605 ;;                  1    wreg      void 
 34606 ;; Registers used:
 34607 ;;		wreg, status,2, status,0
 34608 ;; Tracked objects:
 34609 ;;		On entry : 0/0
 34610 ;;		On exit  : 0/0
 34611 ;;		Unchanged: 0/0
 34612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34613 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34615 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34616 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34617 ;;Total ram usage:       12 bytes
 34618 ;; Hardware stack levels used:    1
 34619 ;; Hardware stack levels required when called:   10
 34620 ;; This function calls:
 34621 ;;		Nothing
 34622 ;; This function is called by:
 34623 ;;		__flash_write_to_buffer
 34624 ;; This function uses a non-reentrant model
 34625 ;;
 34626                           
 34627                           	psect	text136
 34628  0138EE                     __ptext136:
 34629                           	opt stack 0
 34630  0138EE                     _spi_tx_tx:
 34631                           	opt stack 15
 34632                           
 34633                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 34634                           
 34635                           ;incstack = 0
 34636  0138EE  9E88               	bcf	3976,7,c	;volatile
 34637                           
 34638                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 34639  0138F0  9C88               	bcf	3976,6,c	;volatile
 34640                           
 34641                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 34642  0138F2  8A88               	bsf	3976,5,c	;volatile
 34643                           
 34644                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 34645  0138F4  9888               	bcf	3976,4,c	;volatile
 34646                           
 34647                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 34648  0138F6  9688               	bcf	3976,3,c	;volatile
 34649                           
 34650                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 34651  0138F8  8488               	bsf	3976,2,c	;volatile
 34652                           
 34653                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 34654  0138FA  9288               	bcf	3976,1,c	;volatile
 34655                           
 34656                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 34657  0138FC  9886               	bcf	3974,4,c	;volatile
 34658  0138FE  9A86               	bcf	3974,5,c	;volatile
 34659  013900  9C86               	bcf	3974,6,c	;volatile
 34660  013902  9E86               	bcf	3974,7,c	;volatile
 34661                           
 34662                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 34663  013904  9086               	bcf	3974,0,c	;volatile
 34664  013906  9286               	bcf	3974,1,c	;volatile
 34665  013908  9486               	bcf	3974,2,c	;volatile
 34666  01390A  9686               	bcf	3974,3,c	;volatile
 34667                           
 34668                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 34669  01390C  0100               	movlb	0	; () banked
 34670  01390E  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 34671  013910  6E6A               	movwf	3946,c	;volatile
 34672                           
 34673                           ; BSR set to: 0
 34674                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 34675  013912  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 34676                           
 34677                           ; BSR set to: 0
 34678                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 34679  013916  0EFF               	movlw	255
 34680  013918  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34681  01391A  0EFF               	movlw	255
 34682  01391C  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34683  01391E  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 34684  013922  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 34685  013926  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34686  013928  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34687  01392A  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34688  01392C  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34689  01392E  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34690  013932  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34691  013934  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34692  013936  6E66               	movwf	3942,c	;volatile
 34693                           
 34694                           ; BSR set to: 0
 34695                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 34696  013938  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 34697  01393A  6E67               	movwf	3943,c	;volatile
 34698                           
 34699                           ; BSR set to: 0
 34700                           ;spi.c: 174: LATDbits.LD7 = 0;
 34701  01393C  9E8C               	bcf	3980,7,c	;volatile
 34702                           
 34703                           ; BSR set to: 0
 34704                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 34705  01393E  8088               	bsf	3976,0,c	;volatile
 34706  013940                     
 34707                           ; BSR set to: 0
 34708  013940  B088               	btfsc	3976,0,c	;volatile
 34709  013942  D7FE               	goto	l2178
 34710                           
 34711                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 34712  013944  0100               	movlb	0	; () banked
 34713  013946  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 34714  013948  6E6A               	movwf	3946,c	;volatile
 34715                           
 34716                           ; BSR set to: 0
 34717                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 34718  01394A  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 34719                           
 34720                           ; BSR set to: 0
 34721                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 34722  01394E  0EFF               	movlw	255
 34723  013950  6F68               	movwf	??_spi_tx_tx& (0+255),b
 34724  013952  0EFF               	movlw	255
 34725  013954  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 34726  013956  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 34727  01395A  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 34728  01395E  5168               	movf	??_spi_tx_tx& (0+255),w,b
 34729  013960  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 34730  013962  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 34731  013964  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 34732  013966  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 34733  01396A  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 34734  01396C  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 34735  01396E  6E66               	movwf	3942,c	;volatile
 34736                           
 34737                           ; BSR set to: 0
 34738                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 34739  013970  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 34740  013972  6E67               	movwf	3943,c	;volatile
 34741                           
 34742                           ; BSR set to: 0
 34743                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 34744  013974  8088               	bsf	3976,0,c	;volatile
 34745  013976                     
 34746                           ; BSR set to: 0
 34747  013976  B088               	btfsc	3976,0,c	;volatile
 34748  013978  D7FE               	goto	l2181
 34749                           
 34750                           ;spi.c: 193: LATDbits.LD7 = 1;
 34751  01397A  8E8C               	bsf	3980,7,c	;volatile
 34752  01397C  0012               	return		;funcret
 34753  01397E                     __end_of_spi_tx_tx:
 34754                           	opt stack 0
 34755                           tosu	equ	0xFFF
 34756                           tosh	equ	0xFFE
 34757                           tosl	equ	0xFFD
 34758                           pclath	equ	0xFFA
 34759                           tblptru	equ	0xFF8
 34760                           tblptrh	equ	0xFF7
 34761                           tblptrl	equ	0xFF6
 34762                           tablat	equ	0xFF5
 34763                           prodh	equ	0xFF4
 34764                           prodl	equ	0xFF3
 34765                           intcon	equ	0xFF2
 34766                           postinc0	equ	0xFEE
 34767                           wreg	equ	0xFE8
 34768                           indf1	equ	0xFE7
 34769                           postinc1	equ	0xFE6
 34770                           postdec1	equ	0xFE5
 34771                           plusw1	equ	0xFE3
 34772                           fsr1h	equ	0xFE2
 34773                           fsr1l	equ	0xFE1
 34774                           indf2	equ	0xFDF
 34775                           postinc2	equ	0xFDE
 34776                           postdec2	equ	0xFDD
 34777                           plusw2	equ	0xFDB
 34778                           fsr2h	equ	0xFDA
 34779                           fsr2l	equ	0xFD9
 34780                           status	equ	0xFD8
 34781                           
 34782 ;; *************** function __flash_write_page_from_buffer *****************
 34783 ;; Defined at:
 34784 ;;		line 258 in file "flash.c"
 34785 ;; Parameters:    Size  Location     Type
 34786 ;;  page            2   19[BANK0 ] unsigned int 
 34787 ;;  buffer          1   21[BANK0 ] enum E7009
 34788 ;; Auto vars:     Size  Location     Type
 34789 ;;  command         4   25[BANK0 ] unsigned char [4]
 34790 ;; Return value:  Size  Location     Type
 34791 ;;                  1    wreg      void 
 34792 ;; Registers used:
 34793 ;;		wreg, status,2, status,0, cstack
 34794 ;; Tracked objects:
 34795 ;;		On entry : 0/0
 34796 ;;		On exit  : 0/0
 34797 ;;		Unchanged: 0/0
 34798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34799 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34800 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34801 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34802 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34803 ;;Total ram usage:       10 bytes
 34804 ;; Hardware stack levels used:    1
 34805 ;; Hardware stack levels required when called:   13
 34806 ;; This function calls:
 34807 ;;		__flash_is_busy
 34808 ;;		_spi_tx
 34809 ;; This function is called by:
 34810 ;;		_flash_sector_write
 34811 ;;		_flash_partial_write
 34812 ;;		_flash_write_page_from_buffer
 34813 ;; This function uses a non-reentrant model
 34814 ;;
 34815                           
 34816                           	psect	text137
 34817  014742                     __ptext137:
 34818                           	opt stack 0
 34819  014742                     __flash_write_page_from_buffer:
 34820                           	opt stack 13
 34821                           
 34822                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 34823                           
 34824                           ;incstack = 0
 34825  014742  ECE2  F0AB         	call	__flash_is_busy	;wreg free
 34826  014746  0900               	iorlw	0
 34827  014748  A4D8               	btfss	status,2,c
 34828  01474A  D7FB               	goto	__flash_write_page_from_buffer
 34829                           
 34830                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 34831  01474C  0100               	movlb	0	; () banked
 34832  01474E  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34833  014750  A4D8               	btfss	status,2,c
 34834  014752  D002               	goto	l1575
 34835                           
 34836                           ; BSR set to: 0
 34837                           ;flash.c: 267: command[0] = 0x83;
 34838  014754  0E83               	movlw	131
 34839  014756  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34840  014758                     l1575:
 34841                           
 34842                           ; BSR set to: 0
 34843                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 34844                           
 34845                           ; BSR set to: 0
 34846  014758  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 34847  01475A  A4D8               	btfss	status,2,c
 34848  01475C  D002               	goto	l1576
 34849                           
 34850                           ; BSR set to: 0
 34851                           ;flash.c: 269: command[0] = 0x86;
 34852  01475E  0E86               	movlw	134
 34853  014760  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 34854  014762                     l1576:
 34855                           
 34856                           ; BSR set to: 0
 34857                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 34858                           
 34859                           ; BSR set to: 0
 34860  014762  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 34861  014766  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 34862  01476A  0E07               	movlw	7
 34863  01476C  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 34864  01476E                     u9815:
 34865  01476E  90D8               	bcf	status,0,c
 34866  014770  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 34867  014772  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 34868  014774  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 34869  014776  D7FB               	goto	u9815
 34870  014778  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 34871  01477A  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 34872                           
 34873                           ; BSR set to: 0
 34874                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 34875  01477C  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 34876  01477E  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 34877  014780  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 34878                           
 34879                           ;flash.c: 273: command[3] = 0x00;
 34880  014782  0E00               	movlw	0
 34881  014784  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 34882                           
 34883                           ; BSR set to: 0
 34884                           ;flash.c: 276: spi_tx(command, 4);
 34885  014786  0E79               	movlw	low __flash_write_page_from_buffer@command
 34886  014788  6F60               	movwf	spi_tx@data& (0+255),b
 34887  01478A  0E00               	movlw	high __flash_write_page_from_buffer@command
 34888  01478C  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 34889  01478E  0E00               	movlw	0
 34890  014790  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 34891  014792  0E04               	movlw	4
 34892  014794  6F62               	movwf	spi_tx@length& (0+255),b
 34893  014796  ECCE  F0A3         	call	_spi_tx	;wreg free
 34894  01479A  0012               	return		;funcret
 34895  01479C                     __end_of__flash_write_page_from_buffer:
 34896                           	opt stack 0
 34897                           tosu	equ	0xFFF
 34898                           tosh	equ	0xFFE
 34899                           tosl	equ	0xFFD
 34900                           pclath	equ	0xFFA
 34901                           tblptru	equ	0xFF8
 34902                           tblptrh	equ	0xFF7
 34903                           tblptrl	equ	0xFF6
 34904                           tablat	equ	0xFF5
 34905                           prodh	equ	0xFF4
 34906                           prodl	equ	0xFF3
 34907                           intcon	equ	0xFF2
 34908                           postinc0	equ	0xFEE
 34909                           wreg	equ	0xFE8
 34910                           indf1	equ	0xFE7
 34911                           postinc1	equ	0xFE6
 34912                           postdec1	equ	0xFE5
 34913                           plusw1	equ	0xFE3
 34914                           fsr1h	equ	0xFE2
 34915                           fsr1l	equ	0xFE1
 34916                           indf2	equ	0xFDF
 34917                           postinc2	equ	0xFDE
 34918                           postdec2	equ	0xFDD
 34919                           plusw2	equ	0xFDB
 34920                           fsr2h	equ	0xFDA
 34921                           fsr2l	equ	0xFD9
 34922                           status	equ	0xFD8
 34923                           
 34924 ;; *************** function __flash_compare_page_to_buffer *****************
 34925 ;; Defined at:
 34926 ;;		line 176 in file "flash.c"
 34927 ;; Parameters:    Size  Location     Type
 34928 ;;  page            2   19[BANK0 ] unsigned int 
 34929 ;;  buffer          1   21[BANK0 ] enum E7009
 34930 ;; Auto vars:     Size  Location     Type
 34931 ;;  command         4   27[BANK0 ] unsigned char [4]
 34932 ;;  status          2   25[BANK0 ] unsigned int 
 34933 ;; Return value:  Size  Location     Type
 34934 ;;                  1    wreg      enum E7013
 34935 ;; Registers used:
 34936 ;;		wreg, status,2, status,0, cstack
 34937 ;; Tracked objects:
 34938 ;;		On entry : 0/0
 34939 ;;		On exit  : 0/0
 34940 ;;		Unchanged: 0/0
 34941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34942 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34943 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34944 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34945 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34946 ;;Total ram usage:       12 bytes
 34947 ;; Hardware stack levels used:    1
 34948 ;; Hardware stack levels required when called:   13
 34949 ;; This function calls:
 34950 ;;		__flash_get_status
 34951 ;;		__flash_is_busy
 34952 ;;		_spi_tx
 34953 ;; This function is called by:
 34954 ;;		_flash_sector_write
 34955 ;;		_flash_partial_write
 34956 ;; This function uses a non-reentrant model
 34957 ;;
 34958                           
 34959                           	psect	text138
 34960  013D1A                     __ptext138:
 34961                           	opt stack 0
 34962  013D1A                     __flash_compare_page_to_buffer:
 34963                           	opt stack 13
 34964                           
 34965                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 34966                           
 34967                           ;incstack = 0
 34968  013D1A  ECE2  F0AB         	call	__flash_is_busy	;wreg free
 34969  013D1E  0900               	iorlw	0
 34970  013D20  A4D8               	btfss	status,2,c
 34971  013D22  D7FB               	goto	__flash_compare_page_to_buffer
 34972                           
 34973                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 34974  013D24  0100               	movlb	0	; () banked
 34975  013D26  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34976  013D28  A4D8               	btfss	status,2,c
 34977  013D2A  D002               	goto	l1548
 34978                           
 34979                           ; BSR set to: 0
 34980                           ;flash.c: 186: command[0] = 0x60;
 34981  013D2C  0E60               	movlw	96
 34982  013D2E  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34983  013D30                     l1548:
 34984                           
 34985                           ; BSR set to: 0
 34986                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 34987                           
 34988                           ; BSR set to: 0
 34989  013D30  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 34990  013D32  A4D8               	btfss	status,2,c
 34991  013D34  D002               	goto	l1549
 34992                           
 34993                           ; BSR set to: 0
 34994                           ;flash.c: 188: command[0] = 0x60;
 34995  013D36  0E60               	movlw	96
 34996  013D38  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 34997  013D3A                     l1549:
 34998                           
 34999                           ; BSR set to: 0
 35000                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 35001                           
 35002                           ; BSR set to: 0
 35003  013D3A  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 35004  013D3E  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 35005  013D42  0E07               	movlw	7
 35006  013D44  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 35007  013D46                     u9725:
 35008  013D46  90D8               	bcf	status,0,c
 35009  013D48  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 35010  013D4A  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 35011  013D4C  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 35012  013D4E  D7FB               	goto	u9725
 35013  013D50  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 35014  013D52  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 35015                           
 35016                           ; BSR set to: 0
 35017                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 35018  013D54  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 35019  013D56  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 35020  013D58  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 35021                           
 35022                           ;flash.c: 192: command[3] = 0x00;
 35023  013D5A  0E00               	movlw	0
 35024  013D5C  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 35025                           
 35026                           ; BSR set to: 0
 35027                           ;flash.c: 195: spi_tx(command, 4);
 35028  013D5E  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 35029  013D60  6F60               	movwf	spi_tx@data& (0+255),b
 35030  013D62  0E00               	movlw	high __flash_compare_page_to_buffer@command
 35031  013D64  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 35032  013D66  0E00               	movlw	0
 35033  013D68  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 35034  013D6A  0E04               	movlw	4
 35035  013D6C  6F62               	movwf	spi_tx@length& (0+255),b
 35036  013D6E  ECCE  F0A3         	call	_spi_tx	;wreg free
 35037  013D72  ECE2  F0AB         	call	__flash_is_busy	;wreg free
 35038  013D76  0900               	iorlw	0
 35039  013D78  A4D8               	btfss	status,2,c
 35040  013D7A  D7FB               	goto	l1551
 35041                           
 35042                           ;flash.c: 201: status = _flash_get_status();
 35043  013D7C  ECD7  F0A9         	call	__flash_get_status	;wreg free
 35044  013D80  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 35045  013D84  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 35046                           
 35047                           ;flash.c: 204: if(status & 0b0000000001000000)
 35048  013D88  0100               	movlb	0	; () banked
 35049  013D8A  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 35050  013D8C  D002               	goto	l1553
 35051                           
 35052                           ; BSR set to: 0
 35053                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 35054  013D8E  0E01               	movlw	1
 35055                           
 35056                           ; BSR set to: 0
 35057                           ;flash.c: 208: }
 35058                           
 35059                           ; BSR set to: 0
 35060  013D90  0012               	return	
 35061  013D92                     l1553:
 35062                           
 35063                           ; BSR set to: 0
 35064                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 35065                           
 35066                           ; BSR set to: 0
 35067  013D92  0E00               	movlw	0
 35068                           
 35069                           ; BSR set to: 0
 35070  013D94  0012               	return	
 35071  013D96                     __end_of__flash_compare_page_to_buffer:
 35072                           	opt stack 0
 35073                           tosu	equ	0xFFF
 35074                           tosh	equ	0xFFE
 35075                           tosl	equ	0xFFD
 35076                           pclath	equ	0xFFA
 35077                           tblptru	equ	0xFF8
 35078                           tblptrh	equ	0xFF7
 35079                           tblptrl	equ	0xFF6
 35080                           tablat	equ	0xFF5
 35081                           prodh	equ	0xFF4
 35082                           prodl	equ	0xFF3
 35083                           intcon	equ	0xFF2
 35084                           postinc0	equ	0xFEE
 35085                           wreg	equ	0xFE8
 35086                           indf1	equ	0xFE7
 35087                           postinc1	equ	0xFE6
 35088                           postdec1	equ	0xFE5
 35089                           plusw1	equ	0xFE3
 35090                           fsr1h	equ	0xFE2
 35091                           fsr1l	equ	0xFE1
 35092                           indf2	equ	0xFDF
 35093                           postinc2	equ	0xFDE
 35094                           postdec2	equ	0xFDD
 35095                           plusw2	equ	0xFDB
 35096                           fsr2h	equ	0xFDA
 35097                           fsr2l	equ	0xFD9
 35098                           status	equ	0xFD8
 35099                           
 35100 ;; *************** function _MSDReadHandler *****************
 35101 ;; Defined at:
 35102 ;;		line 1038 in file "usb_device_msd.c"
 35103 ;; Parameters:    Size  Location     Type
 35104 ;;		None
 35105 ;; Auto vars:     Size  Location     Type
 35106 ;;		None
 35107 ;; Return value:  Size  Location     Type
 35108 ;;                  1    wreg      unsigned char 
 35109 ;; Registers used:
 35110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35111 ;; Tracked objects:
 35112 ;;		On entry : 0/0
 35113 ;;		On exit  : 0/0
 35114 ;;		Unchanged: 0/0
 35115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35118 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35119 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35120 ;;Total ram usage:        4 bytes
 35121 ;; Hardware stack levels used:    1
 35122 ;; Hardware stack levels required when called:   16
 35123 ;; This function calls:
 35124 ;;		_ExternalFlash_SectorRead
 35125 ;;		_MSDCheckForErrorCases
 35126 ;;		_USBStallEndpoint
 35127 ;;		_USBTransferOnePacket
 35128 ;; This function is called by:
 35129 ;;		_MSDProcessCommandMediaPresent
 35130 ;; This function uses a non-reentrant model
 35131 ;;
 35132                           
 35133                           	psect	text139
 35134  00F090                     __ptext139:
 35135                           	opt stack 0
 35136  00F090                     _MSDReadHandler:
 35137                           	opt stack 10
 35138                           
 35139                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 35140                           
 35141                           ; BSR set to: 0
 35142                           ;incstack = 0
 35143  00F090  D0DF               	goto	l681
 35144  00F092                     l682:
 35145                           
 35146                           ; BSR set to: 1
 35147                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 35148  00F092  C211  F12E         	movff	_gblCBW+17,_LBA+3
 35149                           
 35150                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 35151  00F096  C212  F12D         	movff	_gblCBW+18,_LBA+2
 35152                           
 35153                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 35154  00F09A  C213  F12C         	movff	_gblCBW+19,_LBA+1
 35155                           
 35156                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 35157  00F09E  C214  F12B         	movff	_gblCBW+20,_LBA
 35158                           
 35159                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 35160  00F0A2  C216  F146         	movff	_gblCBW+22,_TransferLength+1
 35161                           
 35162                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 35163  00F0A6  C217  F145         	movff	_gblCBW+23,_TransferLength
 35164                           
 35165                           ; BSR set to: 1
 35166                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35167  00F0AA  5145               	movf	_TransferLength& (0+255),w,b
 35168  00F0AC  0100               	movlb	0	; () banked
 35169  00F0AE  6F95               	movwf	??_MSDReadHandler& (0+255),b
 35170  00F0B0  0101               	movlb	1	; () banked
 35171  00F0B2  5146               	movf	(_TransferLength+1)& (0+255),w,b
 35172  00F0B4  0100               	movlb	0	; () banked
 35173  00F0B6  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 35174  00F0B8  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 35175  00F0BA  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 35176  00F0BC  0E09               	movlw	9
 35177  00F0BE                     u11205:
 35178  00F0BE  90D8               	bcf	status,0,c
 35179  00F0C0  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 35180  00F0C2  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 35181  00F0C4  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 35182  00F0C6  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 35183  00F0C8  2EE8               	decfsz	wreg,f,c
 35184  00F0CA  D7F9               	goto	u11205
 35185  00F0CC  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 35186  00F0D0  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35187  00F0D4  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35188  00F0D8  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35189  00F0DC  EC90  F085         	call	_MSDCheckForErrorCases	;wreg free
 35190  00F0E0  0900               	iorlw	0
 35191  00F0E2  A4D8               	btfss	status,2,c
 35192  00F0E4  D0C7               	goto	l684
 35193                           
 35194                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 35195                           
 35196                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 35197  00F0E6  0E01               	movlw	1
 35198  00F0E8  0101               	movlb	1	; () banked
 35199  00F0EA  6F61               	movwf	_MSDReadState& (0+255),b
 35200  00F0EC                     
 35201                           ; BSR set to: 1
 35202                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 35203                           
 35204                           ; BSR set to: 1
 35205  00F0EC  5145               	movf	_TransferLength& (0+255),w,b
 35206  00F0EE  1146               	iorwf	(_TransferLength+1)& (0+255),w,b
 35207  00F0F0  A4D8               	btfss	status,2,c
 35208  00F0F2  D002               	goto	l686
 35209                           
 35210                           ; BSR set to: 1
 35211                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 35212  00F0F4  0E00               	movlw	0
 35213  00F0F6  D04A               	goto	L51
 35214  00F0F8                     l686:
 35215                           
 35216                           ; BSR set to: 1
 35217                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 35218                           
 35219                           ; BSR set to: 1
 35220  00F0F8  0745               	decf	_TransferLength& (0+255),f,b
 35221  00F0FA  A0D8               	btfss	status,0,c
 35222  00F0FC  0746               	decf	(_TransferLength+1)& (0+255),f,b
 35223                           
 35224                           ; BSR set to: 1
 35225                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 35226  00F0FE  0E02               	movlw	2
 35227  00F100  6F61               	movwf	_MSDReadState& (0+255),b
 35228  00F102                     
 35229                           ; BSR set to: 1
 35230                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 35231                           
 35232                           ; BSR set to: 1
 35233  00F102  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35234  00F104  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35235  00F106  B4D8               	btfsc	status,2,c
 35236  00F108  D006               	goto	l688
 35237                           
 35238                           ; BSR set to: 1
 35239  00F10A  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35240  00F10E  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35241  00F112  BEDF               	btfsc	indf2,7,c
 35242  00F114  D0AF               	goto	l684
 35243  00F116                     l688:
 35244                           
 35245                           ; BSR set to: 1
 35246                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 35247                           
 35248                           ; BSR set to: 1
 35249  00F116  C29E  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 35250  00F11A  C29F  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 35251  00F11E  C12B  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 35252  00F122  C12C  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 35253  00F126  C12D  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 35254  00F12A  C12E  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 35255  00F12E  0E00               	movlw	0
 35256  00F130  0100               	movlb	0	; () banked
 35257  00F132  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 35258  00F134  0E06               	movlw	6
 35259  00F136  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 35260  00F138  EE22  F095         	lfsr	2,_LUN+12
 35261  00F13C  D801               	call	u11258
 35262  00F13E  D00A               	goto	u11259
 35263  00F140                     u11258:
 35264  00F140  0005               	push	
 35265  00F142  6EFA               	movwf	pclath,c
 35266  00F144  50DE               	movf	postinc2,w,c
 35267  00F146  6EFD               	movwf	tosl,c
 35268  00F148  50DE               	movf	postinc2,w,c
 35269  00F14A  6EFE               	movwf	tosh,c
 35270  00F14C  50DE               	movf	postinc2,w,c
 35271  00F14E  6EFF               	movwf	tosu,c
 35272  00F150  50FA               	movf	pclath,w,c
 35273  00F152  0012               	return		;indir
 35274  00F154                     u11259:
 35275  00F154  06E8               	decf	wreg,f,c
 35276  00F156  B4D8               	btfsc	status,2,c
 35277  00F158  D01B               	goto	l691
 35278                           
 35279                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 35280  00F15A  0E64               	movlw	100
 35281  00F15C  0101               	movlb	1	; () banked
 35282  00F15E  615F               	cpfslt	_MSDRetryAttempt& (0+255),b
 35283  00F160  D002               	goto	l690
 35284                           
 35285                           ; BSR set to: 1
 35286                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 35287  00F162  2B5F               	incf	_MSDRetryAttempt& (0+255),f,b
 35288                           
 35289                           ;usb_device_msd.c: 1088: break;
 35290  00F164  D087               	goto	l684
 35291  00F166                     l690:
 35292                           
 35293                           ; BSR set to: 1
 35294                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 35295                           
 35296                           ; BSR set to: 1
 35297  00F166  0E02               	movlw	2
 35298  00F168  010D               	movlb	13	; () banked
 35299  00F16A  6F8C               	movwf	140,b	;volatile
 35300                           
 35301                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 35302  00F16C  0101               	movlb	1	; () banked
 35303  00F16E  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35304  00F170  0BF0               	andlw	-16
 35305  00F172  0903               	iorlw	3
 35306  00F174  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35307                           
 35308                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 35309  00F176  0E00               	movlw	0
 35310  00F178  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35311                           
 35312                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 35313  00F17A  0E00               	movlw	0
 35314  00F17C  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35315                           
 35316                           ; BSR set to: 1
 35317                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 35318  00F17E  0E01               	movlw	1
 35319  00F180  0100               	movlb	0	; () banked
 35320  00F182  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35321  00F184  0E02               	movlw	2
 35322  00F186  ECB0  F087         	call	_USBStallEndpoint
 35323  00F18A  D05F               	goto	l12951
 35324  00F18C                     L51:
 35325  00F18C  6F61               	movwf	_MSDReadState& (0+255),b
 35326                           
 35327                           ;usb_device_msd.c: 1109: break;
 35328  00F18E  D072               	goto	l684
 35329  00F190                     l691:
 35330                           
 35331                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 35332                           
 35333                           ; BSR set to: 1
 35334                           
 35335                           ; BSR set to: 1
 35336  00F190  0E01               	movlw	1
 35337  00F192  0101               	movlb	1	; () banked
 35338  00F194  272B               	addwf	_LBA& (0+255),f,b
 35339  00F196  0E00               	movlw	0
 35340  00F198  232C               	addwfc	(_LBA+1)& (0+255),f,b
 35341  00F19A  232D               	addwfc	(_LBA+2)& (0+255),f,b
 35342  00F19C  232E               	addwfc	(_LBA+3)& (0+255),f,b
 35343                           
 35344                           ; BSR set to: 1
 35345                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 35346  00F19E  0E00               	movlw	0
 35347  00F1A0  010D               	movlb	13	; () banked
 35348  00F1A2  6F88               	movwf	136,b	;volatile
 35349  00F1A4  0E02               	movlw	2
 35350  00F1A6  6F89               	movwf	137,b	;volatile
 35351  00F1A8  0E00               	movlw	0
 35352  00F1AA  6F8A               	movwf	138,b	;volatile
 35353  00F1AC  0E00               	movlw	0
 35354  00F1AE  6F8B               	movwf	139,b	;volatile
 35355                           
 35356                           ; BSR set to: 13
 35357                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 35358  00F1B0  0E00               	movlw	0
 35359  00F1B2  0101               	movlb	1	; () banked
 35360  00F1B4  6F4D               	movwf	_ptrNextData& (0+255),b
 35361  00F1B6  0E06               	movlw	6
 35362  00F1B8  6F4E               	movwf	(_ptrNextData+1)& (0+255),b
 35363                           
 35364                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 35365  00F1BA  0E03               	movlw	3
 35366  00F1BC  6F61               	movwf	_MSDReadState& (0+255),b
 35367  00F1BE                     
 35368                           ; BSR set to: 1
 35369                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 35370                           
 35371                           ; BSR set to: 1
 35372  00F1BE  010D               	movlb	13	; () banked
 35373  00F1C0  5188               	movf	136,w,b	;volatile
 35374  00F1C2  1189               	iorwf	137,w,b	;volatile
 35375  00F1C4  118A               	iorwf	138,w,b	;volatile
 35376  00F1C6  118B               	iorwf	139,w,b	;volatile
 35377  00F1C8  A4D8               	btfss	status,2,c
 35378  00F1CA  D002               	goto	l693
 35379                           
 35380                           ; BSR set to: 13
 35381                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 35382  00F1CC  0E01               	movlw	1
 35383  00F1CE  D03E               	goto	L53
 35384  00F1D0                     l693:
 35385                           
 35386                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 35387                           
 35388                           ; BSR set to: 1
 35389  00F1D0  0E04               	movlw	4
 35390  00F1D2  0101               	movlb	1	; () banked
 35391  00F1D4  6F61               	movwf	_MSDReadState& (0+255),b
 35392  00F1D6                     
 35393                           ; BSR set to: 1
 35394                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 35395                           
 35396                           ; BSR set to: 1
 35397  00F1D6  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35398  00F1D8  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35399  00F1DA  B4D8               	btfsc	status,2,c
 35400  00F1DC  D006               	goto	l695
 35401                           
 35402                           ; BSR set to: 1
 35403  00F1DE  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35404  00F1E2  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35405  00F1E6  BEDF               	btfsc	indf2,7,c
 35406  00F1E8  D045               	goto	l684
 35407  00F1EA                     l695:
 35408                           
 35409                           ; BSR set to: 1
 35410                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 35411                           
 35412                           ; BSR set to: 1
 35413  00F1EA  0E01               	movlw	1
 35414  00F1EC  0100               	movlb	0	; () banked
 35415  00F1EE  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35416  00F1F0  C14D  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35417  00F1F4  C14E  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35418  00F1F8  0E40               	movlw	64
 35419  00F1FA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35420  00F1FC  0E02               	movlw	2
 35421  00F1FE  EC35  F088         	call	_USBTransferOnePacket
 35422  00F202  C060  F149         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35423  00F206  C061  F14A         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35424                           
 35425                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 35426  00F20A  0E03               	movlw	3
 35427  00F20C  0101               	movlb	1	; () banked
 35428  00F20E  6F61               	movwf	_MSDReadState& (0+255),b
 35429                           
 35430                           ; BSR set to: 1
 35431                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 35432  00F210  0E40               	movlw	64
 35433  00F212  0102               	movlb	2	; () banked
 35434  00F214  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35435  00F216  0E00               	movlw	0
 35436  00F218  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35437  00F21A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35438  00F21C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35439                           
 35440                           ; BSR set to: 2
 35441                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 35442  00F21E  0E40               	movlw	64
 35443  00F220  010D               	movlb	13	; () banked
 35444  00F222  5F88               	subwf	136,f,b	;volatile
 35445  00F224  0E00               	movlw	0
 35446  00F226  5B89               	subwfb	137,f,b	;volatile
 35447  00F228  5B8A               	subwfb	138,f,b	;volatile
 35448  00F22A  5B8B               	subwfb	139,f,b	;volatile
 35449                           
 35450                           ; BSR set to: 13
 35451                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 35452  00F22C  0E40               	movlw	64
 35453  00F22E  0101               	movlb	1	; () banked
 35454  00F230  274D               	addwf	_ptrNextData& (0+255),f,b
 35455  00F232  0E00               	movlw	0
 35456  00F234  234E               	addwfc	(_ptrNextData+1)& (0+255),f,b
 35457                           
 35458                           ;usb_device_msd.c: 1149: break;
 35459  00F236  D01E               	goto	l684
 35460  00F238                     
 35461                           ; BSR set to: 1
 35462                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 35463                           
 35464                           ; BSR set to: 1
 35465  00F238  0E02               	movlw	2
 35466  00F23A  010D               	movlb	13	; () banked
 35467  00F23C  6F8C               	movwf	140,b	;volatile
 35468                           
 35469                           ; BSR set to: 13
 35470                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 35471  00F23E  0E01               	movlw	1
 35472  00F240  0100               	movlb	0	; () banked
 35473  00F242  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35474  00F244  0E02               	movlw	2
 35475  00F246  ECB0  F087         	call	_USBStallEndpoint
 35476  00F24A                     l12951:
 35477                           
 35478                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 35479  00F24A  0E00               	movlw	0
 35480  00F24C                     L53:
 35481  00F24C  0101               	movlb	1	; () banked
 35482  00F24E  D79E               	goto	L51
 35483  00F250                     l681:
 35484                           
 35485                           ; BSR set to: 1
 35486  00F250  0101               	movlb	1	; () banked
 35487  00F252  5161               	movf	_MSDReadState& (0+255),w,b
 35488                           
 35489                           ; Switch size 1, requested type "space"
 35490                           ; Number of cases is 5, Range of values is 0 to 4
 35491                           ; switch strategies available:
 35492                           ; Name         Instructions Cycles
 35493                           ; simple_byte           16     9 (average)
 35494                           ;	Chosen strategy is simple_byte
 35495  00F254  0A00               	xorlw	0	; case 0
 35496  00F256  B4D8               	btfsc	status,2,c
 35497  00F258  D71C               	goto	l682
 35498  00F25A  0A01               	xorlw	1	; case 1
 35499  00F25C  B4D8               	btfsc	status,2,c
 35500  00F25E  D746               	goto	l685
 35501  00F260  0A03               	xorlw	3	; case 2
 35502  00F262  B4D8               	btfsc	status,2,c
 35503  00F264  D74E               	goto	l687
 35504  00F266  0A01               	xorlw	1	; case 3
 35505  00F268  B4D8               	btfsc	status,2,c
 35506  00F26A  D7A9               	goto	l692
 35507  00F26C  0A07               	xorlw	7	; case 4
 35508  00F26E  B4D8               	btfsc	status,2,c
 35509  00F270  D7B2               	goto	l694
 35510  00F272  D7E2               	goto	l696
 35511  00F274                     l684:
 35512                           
 35513                           ;usb_device_msd.c: 1161: return MSDReadState;
 35514                           
 35515                           ; BSR set to: 1
 35516  00F274  0101               	movlb	1	; () banked
 35517  00F276  5161               	movf	_MSDReadState& (0+255),w,b
 35518  00F278  0012               	return	
 35519  00F27A                     __end_of_MSDReadHandler:
 35520                           	opt stack 0
 35521                           tosu	equ	0xFFF
 35522                           tosh	equ	0xFFE
 35523                           tosl	equ	0xFFD
 35524                           pclath	equ	0xFFA
 35525                           tblptru	equ	0xFF8
 35526                           tblptrh	equ	0xFF7
 35527                           tblptrl	equ	0xFF6
 35528                           tablat	equ	0xFF5
 35529                           prodh	equ	0xFF4
 35530                           prodl	equ	0xFF3
 35531                           intcon	equ	0xFF2
 35532                           postinc0	equ	0xFEE
 35533                           wreg	equ	0xFE8
 35534                           indf1	equ	0xFE7
 35535                           postinc1	equ	0xFE6
 35536                           postdec1	equ	0xFE5
 35537                           plusw1	equ	0xFE3
 35538                           fsr1h	equ	0xFE2
 35539                           fsr1l	equ	0xFE1
 35540                           indf2	equ	0xFDF
 35541                           postinc2	equ	0xFDE
 35542                           postdec2	equ	0xFDD
 35543                           plusw2	equ	0xFDB
 35544                           fsr2h	equ	0xFDA
 35545                           fsr2l	equ	0xFD9
 35546                           status	equ	0xFD8
 35547                           
 35548 ;; *************** function _MSDCheckForErrorCases *****************
 35549 ;; Defined at:
 35550 ;;		line 1434 in file "usb_device_msd.c"
 35551 ;; Parameters:    Size  Location     Type
 35552 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 35553 ;; Auto vars:     Size  Location     Type
 35554 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 35555 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 35556 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 35557 ;; Return value:  Size  Location     Type
 35558 ;;                  1    wreg      unsigned char 
 35559 ;; Registers used:
 35560 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35561 ;; Tracked objects:
 35562 ;;		On entry : 0/0
 35563 ;;		On exit  : 0/0
 35564 ;;		Unchanged: 0/0
 35565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35566 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35567 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35569 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35570 ;;Total ram usage:        7 bytes
 35571 ;; Hardware stack levels used:    1
 35572 ;; Hardware stack levels required when called:   12
 35573 ;; This function calls:
 35574 ;;		_MSDErrorHandler
 35575 ;; This function is called by:
 35576 ;;		_MSDProcessCommandMediaPresent
 35577 ;;		_MSDReadHandler
 35578 ;;		_MSDWriteHandler
 35579 ;; This function uses a non-reentrant model
 35580 ;;
 35581                           
 35582                           	psect	text140
 35583  010B20                     __ptext140:
 35584                           	opt stack 0
 35585  010B20                     _MSDCheckForErrorCases:
 35586                           	opt stack 13
 35587                           
 35588                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 35589                           
 35590                           ; BSR set to: 1
 35591                           ;incstack = 0
 35592  010B20  0100               	movlb	0	; () banked
 35593  010B22  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35594  010B24  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35595  010B26  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35596  010B28  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35597  010B2A  A4D8               	btfss	status,2,c
 35598  010B2C  D002               	goto	l726
 35599                           
 35600                           ; BSR set to: 0
 35601                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 35602  010B2E  0E01               	movlw	1
 35603  010B30  D001               	goto	L54
 35604  010B32                     l726:
 35605                           
 35606                           ; BSR set to: 0
 35607                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 35608                           
 35609                           ; BSR set to: 0
 35610  010B32  0E00               	movlw	0
 35611  010B34                     L54:
 35612  010B34  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 35613                           
 35614                           ; BSR set to: 0
 35615                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 35616                           
 35617                           ; BSR set to: 0
 35618  010B36  0101               	movlb	1	; () banked
 35619  010B38  055C               	decf	_MSDHostNoData& (0+255),w,b
 35620  010B3A  A4D8               	btfss	status,2,c
 35621  010B3C  D006               	goto	l728
 35622                           
 35623                           ; BSR set to: 1
 35624  010B3E  0100               	movlb	0	; () banked
 35625  010B40  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35626  010B42  A4D8               	btfss	status,2,c
 35627  010B44  D002               	goto	l728
 35628                           
 35629                           ; BSR set to: 0
 35630                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 35631  010B46  0E00               	movlw	0
 35632                           
 35633                           ; BSR set to: 0
 35634  010B48  0012               	return	
 35635  010B4A                     l728:
 35636                           
 35637                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 35638                           
 35639                           ; BSR set to: 0
 35640  010B4A  0100               	movlb	0	; () banked
 35641  010B4C  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35642  010B4E  0102               	movlb	2	; () banked
 35643  010B50  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 35644  010B52  E120               	bnz	l12595
 35645  010B54  0100               	movlb	0	; () banked
 35646  010B56  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35647  010B58  0102               	movlb	2	; () banked
 35648  010B5A  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 35649  010B5C  E11B               	bnz	l12595
 35650  010B5E  0100               	movlb	0	; () banked
 35651  010B60  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35652  010B62  0102               	movlb	2	; () banked
 35653  010B64  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 35654  010B66  E116               	bnz	l12595
 35655  010B68  0100               	movlb	0	; () banked
 35656  010B6A  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35657  010B6C  0102               	movlb	2	; () banked
 35658  010B6E  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 35659  010B70  A4D8               	btfss	status,2,c
 35660  010B72  D010               	goto	l734
 35661                           
 35662                           ; BSR set to: 2
 35663                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 35664  010B74  0101               	movlb	1	; () banked
 35665  010B76  0563               	decf	_MSD_State& (0+255),w,b
 35666  010B78  A4D8               	btfss	status,2,c
 35667  010B7A  D006               	goto	l731
 35668                           
 35669                           ; BSR set to: 1
 35670                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 35671  010B7C  0E2A               	movlw	42
 35672  010B7E  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35673  010B80  B4D8               	btfsc	status,2,c
 35674  010B82  D008               	goto	l734
 35675                           
 35676                           ; BSR set to: 1
 35677                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 35678  010B84  0E00               	movlw	0
 35679                           
 35680                           ; BSR set to: 1
 35681  010B86  0012               	return	
 35682  010B88                     l731:
 35683                           
 35684                           ; BSR set to: 1
 35685                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 35686                           
 35687                           ; BSR set to: 1
 35688  010B88  0E2A               	movlw	42
 35689  010B8A  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35690  010B8C  A4D8               	btfss	status,2,c
 35691  010B8E  D002               	goto	l734
 35692                           
 35693                           ; BSR set to: 1
 35694                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 35695  010B90  0E00               	movlw	0
 35696                           
 35697                           ; BSR set to: 1
 35698  010B92  0012               	return	
 35699  010B94                     l734:
 35700  010B94                     l12595:
 35701                           
 35702                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 35703  010B94  0102               	movlb	2	; () banked
 35704  010B96  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35705  010B98  0100               	movlb	0	; () banked
 35706  010B9A  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 35707  010B9C  0102               	movlb	2	; () banked
 35708  010B9E  5109               	movf	(_gblCBW+9)& (0+255),w,b
 35709  010BA0  0100               	movlb	0	; () banked
 35710  010BA2  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 35711  010BA4  0102               	movlb	2	; () banked
 35712  010BA6  510A               	movf	(_gblCBW+10)& (0+255),w,b
 35713  010BA8  0100               	movlb	0	; () banked
 35714  010BAA  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 35715  010BAC  0102               	movlb	2	; () banked
 35716  010BAE  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35717  010BB0  0100               	movlb	0	; () banked
 35718  010BB2  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 35719  010BB4  B0D8               	btfsc	status,0,c
 35720  010BB6  D002               	goto	l735
 35721                           
 35722                           ; BSR set to: 0
 35723                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 35724  010BB8  0E01               	movlw	1
 35725  010BBA  D001               	goto	L55
 35726  010BBC                     l735:
 35727                           
 35728                           ; BSR set to: 0
 35729                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 35730                           
 35731                           ; BSR set to: 0
 35732  010BBC  0E00               	movlw	0
 35733  010BBE                     L55:
 35734  010BBE  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 35735                           
 35736                           ; BSR set to: 0
 35737                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 35738                           
 35739                           ; BSR set to: 0
 35740  010BC0  0E02               	movlw	2
 35741  010BC2  0101               	movlb	1	; () banked
 35742  010BC4  1963               	xorwf	_MSD_State& (0+255),w,b
 35743  010BC6  A4D8               	btfss	status,2,c
 35744  010BC8  D017               	goto	l737
 35745                           
 35746                           ; BSR set to: 1
 35747                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 35748  010BCA  0E2A               	movlw	42
 35749  010BCC  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35750  010BCE  B4D8               	btfsc	status,2,c
 35751  010BD0  D006               	goto	l738
 35752                           
 35753                           ; BSR set to: 1
 35754  010BD2  0100               	movlb	0	; () banked
 35755  010BD4  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35756  010BD6  A4D8               	btfss	status,2,c
 35757  010BD8  D002               	goto	l738
 35758  010BDA                     u10880:
 35759                           
 35760                           ; BSR set to: 0
 35761                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 35762  010BDA  0E05               	movlw	5
 35763  010BDC  D025               	goto	L60
 35764  010BDE                     l738:
 35765                           
 35766                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 35767                           
 35768                           ; BSR set to: 0
 35769  010BDE  0101               	movlb	1	; () banked
 35770  010BE0  055C               	decf	_MSDHostNoData& (0+255),w,b
 35771  010BE2  B4D8               	btfsc	status,2,c
 35772  010BE4  D014               	goto	u10930
 35773                           
 35774                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 35775                           
 35776                           ; BSR set to: 0
 35777                           
 35778                           ; BSR set to: 1
 35779                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 35780  010BE6  0100               	movlb	0	; () banked
 35781  010BE8  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35782  010BEA  B4D8               	btfsc	status,2,c
 35783  010BEC  D003               	goto	u10910
 35784                           
 35785                           ; BSR set to: 0
 35786                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 35787                           
 35788                           ; BSR set to: 0
 35789                           
 35790                           ; BSR set to: 0
 35791                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 35792  010BEE  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35793  010BF0  A4D8               	btfss	status,2,c
 35794  010BF2  D7F3               	goto	u10880
 35795  010BF4                     u10910:
 35796                           
 35797                           ; BSR set to: 0
 35798                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 35799  010BF4  0E04               	movlw	4
 35800  010BF6  D018               	goto	L60
 35801  010BF8                     l737:
 35802                           
 35803                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 35804                           
 35805                           ; BSR set to: 0
 35806  010BF8  0E2A               	movlw	42
 35807  010BFA  0101               	movlb	1	; () banked
 35808  010BFC  1962               	xorwf	_MSDCommandState& (0+255),w,b
 35809  010BFE  A4D8               	btfss	status,2,c
 35810  010C00  D002               	goto	l747
 35811                           
 35812                           ; BSR set to: 1
 35813                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 35814  010C02  0E03               	movlw	3
 35815  010C04  D005               	goto	L59
 35816  010C06                     l747:
 35817                           
 35818                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 35819                           
 35820                           ; BSR set to: 0
 35821  010C06  0101               	movlb	1	; () banked
 35822  010C08  055C               	decf	_MSDHostNoData& (0+255),w,b
 35823  010C0A  A4D8               	btfss	status,2,c
 35824  010C0C  D003               	goto	l749
 35825  010C0E                     u10930:
 35826                           
 35827                           ; BSR set to: 1
 35828                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 35829  010C0E  0E01               	movlw	1
 35830  010C10                     L59:
 35831  010C10  0100               	movlb	0	; () banked
 35832  010C12  D00A               	goto	L60
 35833  010C14                     l749:
 35834                           
 35835                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 35836                           
 35837                           ; BSR set to: 0
 35838  010C14  0100               	movlb	0	; () banked
 35839  010C16  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 35840  010C18  B4D8               	btfsc	status,2,c
 35841  010C1A  D003               	goto	u10950
 35842                           
 35843                           ; BSR set to: 0
 35844                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 35845                           
 35846                           ; BSR set to: 0
 35847                           
 35848                           ; BSR set to: 0
 35849                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 35850  010C1C  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 35851  010C1E  A4D8               	btfss	status,2,c
 35852  010C20  D002               	goto	l753
 35853  010C22                     u10950:
 35854                           
 35855                           ; BSR set to: 0
 35856                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 35857  010C22  0E02               	movlw	2
 35858  010C24  D001               	goto	L60
 35859  010C26                     l753:
 35860                           
 35861                           ; BSR set to: 0
 35862                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 35863                           
 35864                           ; BSR set to: 0
 35865  010C26  0E03               	movlw	3
 35866  010C28                     L60:
 35867  010C28  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 35868                           
 35869                           ; BSR set to: 0
 35870                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 35871                           
 35872                           ; BSR set to: 0
 35873                           
 35874                           ; BSR set to: 0
 35875                           
 35876                           ; BSR set to: 0
 35877                           
 35878                           ; BSR set to: 0
 35879                           
 35880                           ; BSR set to: 0
 35881  010C2A  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35882  010C2C  EC03  F085         	call	_MSDErrorHandler
 35883                           
 35884                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 35885  010C30  0100               	movlb	0	; () banked
 35886  010C32  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 35887  010C34  0012               	return	
 35888  010C36                     __end_of_MSDCheckForErrorCases:
 35889                           	opt stack 0
 35890                           tosu	equ	0xFFF
 35891                           tosh	equ	0xFFE
 35892                           tosl	equ	0xFFD
 35893                           pclath	equ	0xFFA
 35894                           tblptru	equ	0xFF8
 35895                           tblptrh	equ	0xFF7
 35896                           tblptrl	equ	0xFF6
 35897                           tablat	equ	0xFF5
 35898                           prodh	equ	0xFF4
 35899                           prodl	equ	0xFF3
 35900                           intcon	equ	0xFF2
 35901                           postinc0	equ	0xFEE
 35902                           wreg	equ	0xFE8
 35903                           indf1	equ	0xFE7
 35904                           postinc1	equ	0xFE6
 35905                           postdec1	equ	0xFE5
 35906                           plusw1	equ	0xFE3
 35907                           fsr1h	equ	0xFE2
 35908                           fsr1l	equ	0xFE1
 35909                           indf2	equ	0xFDF
 35910                           postinc2	equ	0xFDE
 35911                           postdec2	equ	0xFDD
 35912                           plusw2	equ	0xFDB
 35913                           fsr2h	equ	0xFDA
 35914                           fsr2l	equ	0xFD9
 35915                           status	equ	0xFD8
 35916                           
 35917 ;; *************** function _MSDErrorHandler *****************
 35918 ;; Defined at:
 35919 ;;		line 1577 in file "usb_device_msd.c"
 35920 ;; Parameters:    Size  Location     Type
 35921 ;;  ErrorCase       1    wreg     unsigned char 
 35922 ;; Auto vars:     Size  Location     Type
 35923 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 35924 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 35925 ;; Return value:  Size  Location     Type
 35926 ;;                  1    wreg      void 
 35927 ;; Registers used:
 35928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35929 ;; Tracked objects:
 35930 ;;		On entry : 0/0
 35931 ;;		On exit  : 0/0
 35932 ;;		Unchanged: 0/0
 35933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35935 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35937 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35938 ;;Total ram usage:        2 bytes
 35939 ;; Hardware stack levels used:    1
 35940 ;; Hardware stack levels required when called:   11
 35941 ;; This function calls:
 35942 ;;		_ResetSenseData
 35943 ;;		_USBStallEndpoint
 35944 ;; This function is called by:
 35945 ;;		_MSDProcessCommandMediaAbsent
 35946 ;;		_MSDProcessCommandMediaPresent
 35947 ;;		_MSDCheckForErrorCases
 35948 ;; This function uses a non-reentrant model
 35949 ;;
 35950                           
 35951                           	psect	text141
 35952  010A06                     __ptext141:
 35953                           	opt stack 0
 35954  010A06                     _MSDErrorHandler:
 35955                           	opt stack 13
 35956                           
 35957                           ;incstack = 0
 35958                           ;MSDErrorHandler@ErrorCase stored from wreg
 35959  010A06  0100               	movlb	0	; () banked
 35960  010A08  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 35961                           
 35962                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 35963  010A0A  0101               	movlb	1	; () banked
 35964  010A0C  5149               	movf	_USBMSDInHandle& (0+255),w,b
 35965  010A0E  114A               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35966  010A10  B4D8               	btfsc	status,2,c
 35967  010A12  D006               	goto	u9960
 35968                           
 35969                           ; BSR set to: 1
 35970  010A14  C149  FFD9         	movff	_USBMSDInHandle,fsr2l
 35971  010A18  C14A  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35972  010A1C  BEDF               	btfsc	indf2,7,c
 35973  010A1E  0012               	return	
 35974  010A20                     u9960:
 35975                           
 35976                           ; BSR set to: 1
 35977                           
 35978                           ; BSR set to: 1
 35979  010A20  514B               	movf	_USBMSDOutHandle& (0+255),w,b
 35980  010A22  114C               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35981  010A24  B4D8               	btfsc	status,2,c
 35982  010A26  D006               	goto	l757
 35983                           
 35984                           ; BSR set to: 1
 35985  010A28  C14B  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35986  010A2C  C14C  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35987  010A30  BEDF               	btfsc	indf2,7,c
 35988  010A32  0012               	return	
 35989  010A34                     l757:
 35990                           
 35991                           ; BSR set to: 1
 35992                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 35993  010A34  C163  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 35994                           
 35995                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 35996  010A38  6962               	setf	_MSDCommandState& (0+255),b
 35997                           
 35998                           ; BSR set to: 1
 35999                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 36000  010A3A  0E00               	movlw	0
 36001  010A3C  6F61               	movwf	_MSDReadState& (0+255),b
 36002                           
 36003                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 36004  010A3E  0E00               	movlw	0
 36005  010A40  6F60               	movwf	_MSDWriteState& (0+255),b
 36006                           
 36007                           ; BSR set to: 1
 36008                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 36009  010A42  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 36010  010A46  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 36011  010A4A  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 36012  010A4E  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 36013                           
 36014                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 36015  010A52  0E01               	movlw	1
 36016  010A54  010D               	movlb	13	; () banked
 36017  010A56  6F8C               	movwf	140,b	;volatile
 36018                           
 36019                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 36020  010A58  0E03               	movlw	3
 36021  010A5A  0101               	movlb	1	; () banked
 36022  010A5C  6F63               	movwf	_MSD_State& (0+255),b
 36023                           
 36024                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 36025  010A5E  D04B               	goto	l763
 36026  010A60                     
 36027                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 36028                           
 36029                           ; BSR set to: 1
 36030  010A60  0E02               	movlw	2
 36031  010A62  010D               	movlb	13	; () banked
 36032  010A64  6F8C               	movwf	140,b	;volatile
 36033                           
 36034                           ;usb_device_msd.c: 1607: break;
 36035  010A66  0012               	return	
 36036  010A68                     
 36037                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 36038                           
 36039                           ; BSR set to: 13
 36040  010A68  0E01               	movlw	1
 36041  010A6A  0100               	movlb	0	; () banked
 36042  010A6C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36043  010A6E  0E02               	movlw	2
 36044  010A70  ECB0  F087         	call	_USBStallEndpoint
 36045                           
 36046                           ;usb_device_msd.c: 1611: break;
 36047  010A74  0012               	return	
 36048  010A76                     
 36049                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 36050  010A76  0E02               	movlw	2
 36051  010A78  010D               	movlb	13	; () banked
 36052  010A7A  6F8C               	movwf	140,b	;volatile
 36053                           
 36054                           ; BSR set to: 13
 36055                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 36056  010A7C  0E01               	movlw	1
 36057  010A7E  0100               	movlb	0	; () banked
 36058  010A80  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36059  010A82  0E02               	movlw	2
 36060  010A84  ECB0  F087         	call	_USBStallEndpoint
 36061                           
 36062                           ;usb_device_msd.c: 1616: break;
 36063  010A88  0012               	return	
 36064  010A8A                     
 36065                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 36066  010A8A  0E00               	movlw	0
 36067  010A8C  0100               	movlb	0	; () banked
 36068  010A8E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36069  010A90  0E02               	movlw	2
 36070  010A92  ECB0  F087         	call	_USBStallEndpoint
 36071                           
 36072                           ;usb_device_msd.c: 1620: break;
 36073  010A96  0012               	return	
 36074  010A98                     
 36075                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 36076  010A98  0E02               	movlw	2
 36077  010A9A  010D               	movlb	13	; () banked
 36078  010A9C  6F8C               	movwf	140,b	;volatile
 36079                           
 36080                           ; BSR set to: 13
 36081                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 36082  010A9E  0E00               	movlw	0
 36083  010AA0  0100               	movlb	0	; () banked
 36084  010AA2  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36085  010AA4  0E02               	movlw	2
 36086  010AA6  ECB0  F087         	call	_USBStallEndpoint
 36087                           
 36088                           ;usb_device_msd.c: 1625: break;
 36089  010AAA  0012               	return	
 36090  010AAC                     
 36091                           ;usb_device_msd.c: 1628: ResetSenseData();
 36092  010AAC  ECCA  F0A1         	call	_ResetSenseData	;wreg free
 36093                           
 36094                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 36095  010AB0  0101               	movlb	1	; () banked
 36096  010AB2  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 36097  010AB4  0BF0               	andlw	-16
 36098  010AB6  0905               	iorlw	5
 36099  010AB8  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 36100                           
 36101                           ; BSR set to: 1
 36102                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 36103  010ABA  0E20               	movlw	32
 36104  010ABC  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36105                           
 36106                           ; BSR set to: 1
 36107                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 36108  010ABE  0E00               	movlw	0
 36109  010AC0  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36110                           
 36111                           ; BSR set to: 1
 36112                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 36113  010AC2  0E02               	movlw	2
 36114  010AC4  0100               	movlb	0	; () banked
 36115  010AC6  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 36116  010AC8  A4D8               	btfss	status,2,c
 36117  010ACA  D00E               	goto	l771
 36118                           
 36119                           ; BSR set to: 0
 36120  010ACC  0102               	movlb	2	; () banked
 36121  010ACE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 36122  010AD0  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 36123  010AD2  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 36124  010AD4  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 36125  010AD6  B4D8               	btfsc	status,2,c
 36126  010AD8  D007               	goto	l771
 36127                           
 36128                           ; BSR set to: 2
 36129                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 36130  010ADA  0E00               	movlw	0
 36131  010ADC  0100               	movlb	0	; () banked
 36132  010ADE  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36133  010AE0  0E02               	movlw	2
 36134  010AE2  ECB0  F087         	call	_USBStallEndpoint
 36135                           
 36136                           ;usb_device_msd.c: 1636: }
 36137  010AE6  0012               	return	
 36138  010AE8                     l771:
 36139                           
 36140                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 36141  010AE8  0E01               	movlw	1
 36142  010AEA  0100               	movlb	0	; () banked
 36143  010AEC  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36144  010AEE  0E02               	movlw	2
 36145  010AF0  ECB0  F087         	call	_USBStallEndpoint
 36146                           
 36147                           ;usb_device_msd.c: 1644: }
 36148                           
 36149                           ;usb_device_msd.c: 1643: break;
 36150                           
 36151                           ;usb_device_msd.c: 1642: default:
 36152                           
 36153                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 36154  010AF4  0012               	return	
 36155  010AF6                     l763:
 36156  010AF6  0100               	movlb	0	; () banked
 36157  010AF8  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 36158                           
 36159                           ; Switch size 1, requested type "space"
 36160                           ; Number of cases is 6, Range of values is 1 to 127
 36161                           ; switch strategies available:
 36162                           ; Name         Instructions Cycles
 36163                           ; simple_byte           19    10 (average)
 36164                           ;	Chosen strategy is simple_byte
 36165  010AFA  0A01               	xorlw	1	; case 1
 36166  010AFC  B4D8               	btfsc	status,2,c
 36167  010AFE  D7B0               	goto	l764
 36168  010B00  0A03               	xorlw	3	; case 2
 36169  010B02  B4D8               	btfsc	status,2,c
 36170  010B04  D7B1               	goto	l766
 36171  010B06  0A01               	xorlw	1	; case 3
 36172  010B08  B4D8               	btfsc	status,2,c
 36173  010B0A  D7B5               	goto	l767
 36174  010B0C  0A07               	xorlw	7	; case 4
 36175  010B0E  B4D8               	btfsc	status,2,c
 36176  010B10  D7BC               	goto	l768
 36177  010B12  0A01               	xorlw	1	; case 5
 36178  010B14  B4D8               	btfsc	status,2,c
 36179  010B16  D7C0               	goto	l769
 36180  010B18  0A7A               	xorlw	122	; case 127
 36181  010B1A  A4D8               	btfss	status,2,c
 36182  010B1C  0012               	return	
 36183  010B1E  D7C6               	goto	l770
 36184  010B20                     __end_of_MSDErrorHandler:
 36185                           	opt stack 0
 36186                           tosu	equ	0xFFF
 36187                           tosh	equ	0xFFE
 36188                           tosl	equ	0xFFD
 36189                           pclath	equ	0xFFA
 36190                           tblptru	equ	0xFF8
 36191                           tblptrh	equ	0xFF7
 36192                           tblptrl	equ	0xFF6
 36193                           tablat	equ	0xFF5
 36194                           prodh	equ	0xFF4
 36195                           prodl	equ	0xFF3
 36196                           intcon	equ	0xFF2
 36197                           postinc0	equ	0xFEE
 36198                           wreg	equ	0xFE8
 36199                           indf1	equ	0xFE7
 36200                           postinc1	equ	0xFE6
 36201                           postdec1	equ	0xFE5
 36202                           plusw1	equ	0xFE3
 36203                           fsr1h	equ	0xFE2
 36204                           fsr1l	equ	0xFE1
 36205                           indf2	equ	0xFDF
 36206                           postinc2	equ	0xFDE
 36207                           postdec2	equ	0xFDD
 36208                           plusw2	equ	0xFDB
 36209                           fsr2h	equ	0xFDA
 36210                           fsr2l	equ	0xFD9
 36211                           status	equ	0xFD8
 36212                           
 36213 ;; *************** function _USBStallEndpoint *****************
 36214 ;; Defined at:
 36215 ;;		line 1073 in file "usb_device.c"
 36216 ;; Parameters:    Size  Location     Type
 36217 ;;  ep              1    wreg     unsigned char 
 36218 ;;  dir             1    0[BANK0 ] unsigned char 
 36219 ;; Auto vars:     Size  Location     Type
 36220 ;;  ep              1    5[BANK0 ] unsigned char 
 36221 ;;  p               2    6[BANK0 ] PTR struct __BDT
 36222 ;;		 -> BDT(48), 
 36223 ;; Return value:  Size  Location     Type
 36224 ;;                  1    wreg      void 
 36225 ;; Registers used:
 36226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 36227 ;; Tracked objects:
 36228 ;;		On entry : 0/0
 36229 ;;		On exit  : 0/0
 36230 ;;		Unchanged: 0/0
 36231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36232 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36233 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36234 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36235 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36236 ;;Total ram usage:        8 bytes
 36237 ;; Hardware stack levels used:    1
 36238 ;; Hardware stack levels required when called:   10
 36239 ;; This function calls:
 36240 ;;		Nothing
 36241 ;; This function is called by:
 36242 ;;		_MSDTasks
 36243 ;;		_MSDReadHandler
 36244 ;;		_MSDWriteHandler
 36245 ;;		_MSDErrorHandler
 36246 ;; This function uses a non-reentrant model
 36247 ;;
 36248                           
 36249                           	psect	text142
 36250  010F60                     __ptext142:
 36251                           	opt stack 0
 36252  010F60                     _USBStallEndpoint:
 36253                           	opt stack 18
 36254                           
 36255                           ;incstack = 0
 36256                           ;USBStallEndpoint@ep stored from wreg
 36257  010F60  0100               	movlb	0	; () banked
 36258  010F62  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 36259                           
 36260                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 36261  010F64  0100               	movlb	0	; () banked
 36262  010F66  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36263  010F68  A4D8               	btfss	status,2,c
 36264  010F6A  D02B               	goto	l192
 36265                           
 36266                           ; BSR set to: 0
 36267                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 36268  010F6C  EE20 F001          	lfsr	2,1
 36269  010F70  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36270  010F72  26D9               	addwf	fsr2l,f,c
 36271  010F74  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36272  010F76  22DA               	addwfc	fsr2h,f,c
 36273  010F78  0E08               	movlw	8
 36274  010F7A  6EDF               	movwf	indf2,c
 36275                           
 36276                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 36277  010F7C  EE20 F002          	lfsr	2,2
 36278  010F80  505C               	movf	_pBDTEntryEP0OutNext,w,c
 36279  010F82  26D9               	addwf	fsr2l,f,c
 36280  010F84  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 36281  010F86  22DA               	addwfc	fsr2h,f,c
 36282  010F88  0E30               	movlw	48
 36283  010F8A  6EDE               	movwf	postinc2,c
 36284  010F8C  0E0D               	movlw	13
 36285  010F8E  6EDD               	movwf	postdec2,c
 36286                           
 36287                           ; BSR set to: 0
 36288                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 36289  010F90  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36290  010F94  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36291  010F98  0E0C               	movlw	12
 36292  010F9A  6EDF               	movwf	indf2,c
 36293                           
 36294                           ; BSR set to: 0
 36295                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 36296  010F9C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 36297  010FA0  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 36298  010FA4  0E00               	movlw	0
 36299  010FA6  8EDB               	bsf	plusw2,7,c
 36300                           
 36301                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 36302  010FA8  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36303  010FAC  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36304  010FB0  0E04               	movlw	4
 36305  010FB2  6EDF               	movwf	indf2,c
 36306                           
 36307                           ; BSR set to: 0
 36308                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 36309  010FB4  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 36310  010FB8  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 36311  010FBC  0E00               	movlw	0
 36312  010FBE  8EDB               	bsf	plusw2,7,c
 36313                           
 36314                           ;usb_device.c: 1089: }
 36315  010FC0  0012               	return	
 36316  010FC2                     l192:
 36317                           
 36318                           ; BSR set to: 0
 36319                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 36320                           
 36321                           ; BSR set to: 0
 36322  010FC2  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36323  010FC4  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 36324  010FC6  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 36325  010FC8  90D8               	bcf	status,0,c
 36326  010FCA  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36327  010FCC  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36328  010FCE  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36329  010FD0  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 36330  010FD2  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 36331  010FD4  90D8               	bcf	status,0,c
 36332  010FD6  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36333  010FD8  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36334  010FDA  90D8               	bcf	status,0,c
 36335  010FDC  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36336  010FDE  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36337  010FE0  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 36338  010FE2  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 36339  010FE4  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 36340  010FE6  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 36341  010FE8  90D8               	bcf	status,0,c
 36342  010FEA  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36343  010FEC  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36344  010FEE  90D8               	bcf	status,0,c
 36345  010FF0  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 36346  010FF2  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 36347  010FF4  0E00               	movlw	0
 36348  010FF6  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 36349  010FF8  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36350  010FFA  0E0D               	movlw	13
 36351  010FFC  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 36352  010FFE  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36353                           
 36354                           ; BSR set to: 0
 36355                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 36356  011000  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36357  011004  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36358  011008  0E00               	movlw	0
 36359  01100A  84DB               	bsf	plusw2,2,c
 36360                           
 36361                           ; BSR set to: 0
 36362                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 36363  01100C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36364  011010  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36365  011014  0E00               	movlw	0
 36366  011016  8EDB               	bsf	plusw2,7,c
 36367                           
 36368                           ; BSR set to: 0
 36369                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 36370  011018  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 36371  01101A  0D04               	mullw	4
 36372  01101C  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 36373  011020  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 36374  011024  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 36375  011026  0D02               	mullw	2
 36376  011028  50F3               	movf	prodl,w,c
 36377  01102A  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36378  01102C  50F4               	movf	prodh,w,c
 36379  01102E  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36380  011030  90D8               	bcf	status,0,c
 36381  011032  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36382  011034  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36383  011036  90D8               	bcf	status,0,c
 36384  011038  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 36385  01103A  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 36386  01103C  0E04               	movlw	4
 36387  01103E  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 36388  011040  0E00               	movlw	0
 36389  011042  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 36390  011044  0E00               	movlw	0
 36391  011046  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 36392  011048  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 36393  01104A  0E0D               	movlw	13
 36394  01104C  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 36395  01104E  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 36396                           
 36397                           ; BSR set to: 0
 36398                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 36399  011050  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36400  011054  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36401  011058  0E00               	movlw	0
 36402  01105A  84DB               	bsf	plusw2,2,c
 36403                           
 36404                           ; BSR set to: 0
 36405                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 36406  01105C  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 36407  011060  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 36408  011064  0E00               	movlw	0
 36409  011066  8EDB               	bsf	plusw2,7,c
 36410  011068  0012               	return	
 36411  01106A                     __end_of_USBStallEndpoint:
 36412                           	opt stack 0
 36413                           tosu	equ	0xFFF
 36414                           tosh	equ	0xFFE
 36415                           tosl	equ	0xFFD
 36416                           pclath	equ	0xFFA
 36417                           tblptru	equ	0xFF8
 36418                           tblptrh	equ	0xFF7
 36419                           tblptrl	equ	0xFF6
 36420                           tablat	equ	0xFF5
 36421                           prodh	equ	0xFF4
 36422                           prodl	equ	0xFF3
 36423                           intcon	equ	0xFF2
 36424                           postinc0	equ	0xFEE
 36425                           wreg	equ	0xFE8
 36426                           indf1	equ	0xFE7
 36427                           postinc1	equ	0xFE6
 36428                           postdec1	equ	0xFE5
 36429                           plusw1	equ	0xFE3
 36430                           fsr1h	equ	0xFE2
 36431                           fsr1l	equ	0xFE1
 36432                           indf2	equ	0xFDF
 36433                           postinc2	equ	0xFDE
 36434                           postdec2	equ	0xFDD
 36435                           plusw2	equ	0xFDB
 36436                           fsr2h	equ	0xFDA
 36437                           fsr2l	equ	0xFD9
 36438                           status	equ	0xFD8
 36439                           
 36440 ;; *************** function _ResetSenseData *****************
 36441 ;; Defined at:
 36442 ;;		line 1373 in file "usb_device_msd.c"
 36443 ;; Parameters:    Size  Location     Type
 36444 ;;		None
 36445 ;; Auto vars:     Size  Location     Type
 36446 ;;		None
 36447 ;; Return value:  Size  Location     Type
 36448 ;;                  1    wreg      void 
 36449 ;; Registers used:
 36450 ;;		wreg, status,2
 36451 ;; Tracked objects:
 36452 ;;		On entry : 0/0
 36453 ;;		On exit  : 0/0
 36454 ;;		Unchanged: 0/0
 36455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36456 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36459 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36460 ;;Total ram usage:        0 bytes
 36461 ;; Hardware stack levels used:    1
 36462 ;; Hardware stack levels required when called:   10
 36463 ;; This function calls:
 36464 ;;		Nothing
 36465 ;; This function is called by:
 36466 ;;		_MSDProcessCommandMediaAbsent
 36467 ;;		_MSDProcessCommandMediaPresent
 36468 ;;		_MSDErrorHandler
 36469 ;; This function uses a non-reentrant model
 36470 ;;
 36471                           
 36472                           	psect	text143
 36473  014394                     __ptext143:
 36474                           	opt stack 0
 36475  014394                     _ResetSenseData:
 36476                           	opt stack 16
 36477                           
 36478                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 36479                           
 36480                           ; BSR set to: 0
 36481                           ;incstack = 0
 36482  014394  0101               	movlb	1	; () banked
 36483  014396  9100               	bcf	_gblSenseData& (0+255),0,b
 36484  014398  9300               	bcf	_gblSenseData& (0+255),1,b
 36485  01439A  9500               	bcf	_gblSenseData& (0+255),2,b
 36486  01439C  9700               	bcf	_gblSenseData& (0+255),3,b
 36487  01439E  8900               	bsf	_gblSenseData& (0+255),4,b
 36488  0143A0  8B00               	bsf	_gblSenseData& (0+255),5,b
 36489  0143A2  8D00               	bsf	_gblSenseData& (0+255),6,b
 36490                           
 36491                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 36492  0143A4  9F00               	bcf	_gblSenseData& (0+255),7,b
 36493                           
 36494                           ; BSR set to: 1
 36495                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 36496  0143A6  0E00               	movlw	0
 36497  0143A8  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 36498                           
 36499                           ; BSR set to: 1
 36500                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 36501  0143AA  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 36502  0143AC  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 36503  0143AE  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 36504  0143B0  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 36505                           
 36506                           ; BSR set to: 1
 36507                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 36508  0143B2  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 36509                           
 36510                           ; BSR set to: 1
 36511                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 36512  0143B4  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 36513                           
 36514                           ; BSR set to: 1
 36515                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 36516  0143B6  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 36517                           
 36518                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 36519  0143B8  0E00               	movlw	0
 36520  0143BA  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 36521                           
 36522                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 36523  0143BC  0E00               	movlw	0
 36524  0143BE  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 36525                           
 36526                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 36527  0143C0  0E00               	movlw	0
 36528  0143C2  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 36529                           
 36530                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 36531  0143C4  0E00               	movlw	0
 36532  0143C6  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 36533                           
 36534                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 36535  0143C8  0E0A               	movlw	10
 36536  0143CA  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 36537                           
 36538                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 36539  0143CC  0E00               	movlw	0
 36540  0143CE  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 36541  0143D0  0E00               	movlw	0
 36542  0143D2  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 36543  0143D4  0E00               	movlw	0
 36544  0143D6  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 36545  0143D8  0E00               	movlw	0
 36546  0143DA  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 36547                           
 36548                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 36549  0143DC  0E00               	movlw	0
 36550  0143DE  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36551                           
 36552                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 36553  0143E0  0E00               	movlw	0
 36554  0143E2  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36555                           
 36556                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 36557  0143E4  0E00               	movlw	0
 36558  0143E6  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 36559                           
 36560                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 36561  0143E8  0E00               	movlw	0
 36562  0143EA  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 36563                           
 36564                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 36565  0143EC  0E00               	movlw	0
 36566  0143EE  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 36567                           
 36568                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 36569  0143F0  0E00               	movlw	0
 36570  0143F2  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 36571                           
 36572                           ; BSR set to: 1
 36573  0143F4  0012               	return		;funcret
 36574  0143F6                     __end_of_ResetSenseData:
 36575                           	opt stack 0
 36576                           tosu	equ	0xFFF
 36577                           tosh	equ	0xFFE
 36578                           tosl	equ	0xFFD
 36579                           pclath	equ	0xFFA
 36580                           tblptru	equ	0xFF8
 36581                           tblptrh	equ	0xFF7
 36582                           tblptrl	equ	0xFF6
 36583                           tablat	equ	0xFF5
 36584                           prodh	equ	0xFF4
 36585                           prodl	equ	0xFF3
 36586                           intcon	equ	0xFF2
 36587                           postinc0	equ	0xFEE
 36588                           wreg	equ	0xFE8
 36589                           indf1	equ	0xFE7
 36590                           postinc1	equ	0xFE6
 36591                           postdec1	equ	0xFE5
 36592                           plusw1	equ	0xFE3
 36593                           fsr1h	equ	0xFE2
 36594                           fsr1l	equ	0xFE1
 36595                           indf2	equ	0xFDF
 36596                           postinc2	equ	0xFDE
 36597                           postdec2	equ	0xFDD
 36598                           plusw2	equ	0xFDB
 36599                           fsr2h	equ	0xFDA
 36600                           fsr2l	equ	0xFD9
 36601                           status	equ	0xFD8
 36602                           
 36603 ;; *************** function _ExternalFlash_SectorRead *****************
 36604 ;; Defined at:
 36605 ;;		line 40 in file "external_flash.c"
 36606 ;; Parameters:    Size  Location     Type
 36607 ;;  config          2   43[BANK0 ] PTR void 
 36608 ;;		 -> NULL(0), 
 36609 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 36610 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 36611 ;;		 -> msd_buffer(512), 
 36612 ;; Auto vars:     Size  Location     Type
 36613 ;;  page            2   51[BANK0 ] unsigned int 
 36614 ;; Return value:  Size  Location     Type
 36615 ;;                  1    wreg      unsigned char 
 36616 ;; Registers used:
 36617 ;;		wreg, status,2, status,0, cstack
 36618 ;; Tracked objects:
 36619 ;;		On entry : 0/0
 36620 ;;		On exit  : 0/0
 36621 ;;		Unchanged: 0/0
 36622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36623 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36624 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36626 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36627 ;;Total ram usage:       10 bytes
 36628 ;; Hardware stack levels used:    1
 36629 ;; Hardware stack levels required when called:   15
 36630 ;; This function calls:
 36631 ;;		_flash_sector_read
 36632 ;; This function is called by:
 36633 ;;		_MSDReadHandler
 36634 ;; This function uses a non-reentrant model
 36635 ;;
 36636                           
 36637                           	psect	text144
 36638  01537A                     __ptext144:
 36639                           	opt stack 0
 36640  01537A                     _ExternalFlash_SectorRead:
 36641                           	opt stack 10
 36642                           
 36643                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 36644                           
 36645                           ; BSR set to: 1
 36646                           ;incstack = 0
 36647  01537A  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 36648  01537E  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 36649                           
 36650                           ;external_flash.c: 45: if(sector_addr >= 8192)
 36651  015382  0100               	movlb	0	; () banked
 36652  015384  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 36653  015386  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 36654  015388  E104               	bnz	u10990
 36655  01538A  0E20               	movlw	32
 36656  01538C  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 36657  01538E  A0D8               	btfss	status,0,c
 36658  015390  D002               	goto	l1677
 36659  015392                     u10990:
 36660                           
 36661                           ; BSR set to: 0
 36662                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 36663  015392  0E00               	movlw	0
 36664                           
 36665                           ; BSR set to: 0
 36666  015394  0012               	return	
 36667  015396                     l1677:
 36668                           
 36669                           ; BSR set to: 0
 36670                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 36671                           
 36672                           ; BSR set to: 0
 36673  015396  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 36674  01539A  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 36675  01539E  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 36676  0153A2  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 36677  0153A6  EC84  F0AB         	call	_flash_sector_read	;wreg free
 36678                           
 36679                           ;external_flash.c: 53: return 1;
 36680  0153AA  0E01               	movlw	1
 36681  0153AC  0012               	return	
 36682  0153AE                     __end_of_ExternalFlash_SectorRead:
 36683                           	opt stack 0
 36684                           tosu	equ	0xFFF
 36685                           tosh	equ	0xFFE
 36686                           tosl	equ	0xFFD
 36687                           pclath	equ	0xFFA
 36688                           tblptru	equ	0xFF8
 36689                           tblptrh	equ	0xFF7
 36690                           tblptrl	equ	0xFF6
 36691                           tablat	equ	0xFF5
 36692                           prodh	equ	0xFF4
 36693                           prodl	equ	0xFF3
 36694                           intcon	equ	0xFF2
 36695                           postinc0	equ	0xFEE
 36696                           wreg	equ	0xFE8
 36697                           indf1	equ	0xFE7
 36698                           postinc1	equ	0xFE6
 36699                           postdec1	equ	0xFE5
 36700                           plusw1	equ	0xFE3
 36701                           fsr1h	equ	0xFE2
 36702                           fsr1l	equ	0xFE1
 36703                           indf2	equ	0xFDF
 36704                           postinc2	equ	0xFDE
 36705                           postdec2	equ	0xFDD
 36706                           plusw2	equ	0xFDB
 36707                           fsr2h	equ	0xFDA
 36708                           fsr2l	equ	0xFD9
 36709                           status	equ	0xFD8
 36710                           
 36711 ;; *************** function _flash_sector_read *****************
 36712 ;; Defined at:
 36713 ;;		line 426 in file "flash.c"
 36714 ;; Parameters:    Size  Location     Type
 36715 ;;  page            2   39[BANK0 ] unsigned int 
 36716 ;;  data            2   41[BANK0 ] PTR unsigned char 
 36717 ;;		 -> buffer(512), msd_buffer(512), 
 36718 ;; Auto vars:     Size  Location     Type
 36719 ;;		None
 36720 ;; Return value:  Size  Location     Type
 36721 ;;                  1    wreg      void 
 36722 ;; Registers used:
 36723 ;;		wreg, status,2, status,0, cstack
 36724 ;; Tracked objects:
 36725 ;;		On entry : 0/0
 36726 ;;		On exit  : 0/0
 36727 ;;		Unchanged: 0/0
 36728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36729 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36732 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36733 ;;Total ram usage:        4 bytes
 36734 ;; Hardware stack levels used:    1
 36735 ;; Hardware stack levels required when called:   14
 36736 ;; This function calls:
 36737 ;;		__flash_partial_read
 36738 ;; This function is called by:
 36739 ;;		_ExternalFlash_SectorRead
 36740 ;;		__get_available_cluster
 36741 ;;		__find_nth_cluster
 36742 ;;		__make_cluster_chain
 36743 ;;		_fat_find_file
 36744 ;;		_fat_get_format_status
 36745 ;; This function uses a non-reentrant model
 36746 ;;
 36747                           
 36748                           	psect	text145
 36749  015708                     __ptext145:
 36750                           	opt stack 0
 36751  015708                     _flash_sector_read:
 36752                           	opt stack 13
 36753                           
 36754                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 36755                           
 36756                           ;incstack = 0
 36757  015708  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 36758  01570C  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 36759  015710  0E00               	movlw	0
 36760  015712  0100               	movlb	0	; () banked
 36761  015714  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 36762  015716  0E00               	movlw	0
 36763  015718  6F75               	movwf	__flash_partial_read@start& (0+255),b
 36764  01571A  0E02               	movlw	2
 36765  01571C  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 36766  01571E  0E00               	movlw	0
 36767  015720  6F77               	movwf	__flash_partial_read@length& (0+255),b
 36768  015722  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 36769  015726  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 36770  01572A  EC45  F09F         	call	__flash_partial_read	;wreg free
 36771  01572E  0012               	return		;funcret
 36772  015730                     __end_of_flash_sector_read:
 36773                           	opt stack 0
 36774                           tosu	equ	0xFFF
 36775                           tosh	equ	0xFFE
 36776                           tosl	equ	0xFFD
 36777                           pclath	equ	0xFFA
 36778                           tblptru	equ	0xFF8
 36779                           tblptrh	equ	0xFF7
 36780                           tblptrl	equ	0xFF6
 36781                           tablat	equ	0xFF5
 36782                           prodh	equ	0xFF4
 36783                           prodl	equ	0xFF3
 36784                           intcon	equ	0xFF2
 36785                           postinc0	equ	0xFEE
 36786                           wreg	equ	0xFE8
 36787                           indf1	equ	0xFE7
 36788                           postinc1	equ	0xFE6
 36789                           postdec1	equ	0xFE5
 36790                           plusw1	equ	0xFE3
 36791                           fsr1h	equ	0xFE2
 36792                           fsr1l	equ	0xFE1
 36793                           indf2	equ	0xFDF
 36794                           postinc2	equ	0xFDE
 36795                           postdec2	equ	0xFDD
 36796                           plusw2	equ	0xFDB
 36797                           fsr2h	equ	0xFDA
 36798                           fsr2l	equ	0xFD9
 36799                           status	equ	0xFD8
 36800                           
 36801 ;; *************** function __flash_partial_read *****************
 36802 ;; Defined at:
 36803 ;;		line 309 in file "flash.c"
 36804 ;; Parameters:    Size  Location     Type
 36805 ;;  page            2   19[BANK0 ] unsigned int 
 36806 ;;  start           2   21[BANK0 ] unsigned int 
 36807 ;;  length          2   23[BANK0 ] unsigned int 
 36808 ;;  data            2   25[BANK0 ] PTR unsigned char 
 36809 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 36810 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 36811 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 36812 ;; Auto vars:     Size  Location     Type
 36813 ;;  command         4   31[BANK0 ] unsigned char [4]
 36814 ;;  address         4   35[BANK0 ] unsigned long 
 36815 ;; Return value:  Size  Location     Type
 36816 ;;                  1    wreg      void 
 36817 ;; Registers used:
 36818 ;;		wreg, status,2, status,0, cstack
 36819 ;; Tracked objects:
 36820 ;;		On entry : 0/0
 36821 ;;		On exit  : 0/0
 36822 ;;		Unchanged: 0/0
 36823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36824 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36825 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36826 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36827 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36828 ;;Total ram usage:       20 bytes
 36829 ;; Hardware stack levels used:    1
 36830 ;; Hardware stack levels required when called:   13
 36831 ;; This function calls:
 36832 ;;		__flash_is_busy
 36833 ;;		_spi_tx_rx
 36834 ;; This function is called by:
 36835 ;;		_flash_sector_read
 36836 ;;		_flash_partial_read
 36837 ;; This function uses a non-reentrant model
 36838 ;;
 36839                           
 36840                           	psect	text146
 36841  013E8A                     __ptext146:
 36842                           	opt stack 0
 36843  013E8A                     __flash_partial_read:
 36844                           	opt stack 13
 36845                           
 36846                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 36847                           
 36848                           ;incstack = 0
 36849  013E8A  ECE2  F0AB         	call	__flash_is_busy	;wreg free
 36850  013E8E  0900               	iorlw	0
 36851  013E90  A4D8               	btfss	status,2,c
 36852  013E92  D7FB               	goto	__flash_partial_read
 36853                           
 36854                           ;flash.c: 318: address = page;
 36855  013E94  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 36856  013E98  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 36857  013E9C  0100               	movlb	0	; () banked
 36858  013E9E  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 36859  013EA0  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 36860                           
 36861                           ; BSR set to: 0
 36862                           ;flash.c: 319: address <<= 9;
 36863  013EA2  0E09               	movlw	9
 36864  013EA4                     u9835:
 36865  013EA4  90D8               	bcf	status,0,c
 36866  013EA6  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 36867  013EA8  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 36868  013EAA  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 36869  013EAC  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 36870  013EAE  2EE8               	decfsz	wreg,f,c
 36871  013EB0  D7F9               	goto	u9835
 36872                           
 36873                           ; BSR set to: 0
 36874                           ;flash.c: 320: address |= start;
 36875  013EB2  5175               	movf	__flash_partial_read@start& (0+255),w,b
 36876  013EB4  6F7B               	movwf	??__flash_partial_read& (0+255),b
 36877  013EB6  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 36878  013EB8  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 36879  013EBA  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 36880  013EBC  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 36881  013EBE  517B               	movf	??__flash_partial_read& (0+255),w,b
 36882  013EC0  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 36883  013EC2  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 36884  013EC4  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 36885  013EC6  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 36886  013EC8  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 36887  013ECA  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 36888  013ECC  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 36889                           
 36890                           ; BSR set to: 0
 36891                           ;flash.c: 323: command[0] = 0x03;
 36892  013ECE  0E03               	movlw	3
 36893  013ED0  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 36894                           
 36895                           ; BSR set to: 0
 36896                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 36897  013ED2  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 36898                           
 36899                           ; BSR set to: 0
 36900                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 36901  013ED6  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 36902  013ED8  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 36903                           
 36904                           ; BSR set to: 0
 36905                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 36906  013EDA  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 36907                           
 36908                           ; BSR set to: 0
 36909                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 36910  013EDE  0E7F               	movlw	low __flash_partial_read@command
 36911  013EE0  6F60               	movwf	spi_tx_rx@command& (0+255),b
 36912  013EE2  0E00               	movlw	high __flash_partial_read@command
 36913  013EE4  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 36914  013EE6  0E00               	movlw	0
 36915  013EE8  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 36916  013EEA  0E04               	movlw	4
 36917  013EEC  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 36918  013EEE  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 36919  013EF2  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 36920  013EF6  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 36921  013EFA  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 36922  013EFE  ECB7  F09A         	call	_spi_tx_rx	;wreg free
 36923  013F02  0012               	return		;funcret
 36924  013F04                     __end_of__flash_partial_read:
 36925                           	opt stack 0
 36926                           tosu	equ	0xFFF
 36927                           tosh	equ	0xFFE
 36928                           tosl	equ	0xFFD
 36929                           pclath	equ	0xFFA
 36930                           tblptru	equ	0xFF8
 36931                           tblptrh	equ	0xFF7
 36932                           tblptrl	equ	0xFF6
 36933                           tablat	equ	0xFF5
 36934                           prodh	equ	0xFF4
 36935                           prodl	equ	0xFF3
 36936                           intcon	equ	0xFF2
 36937                           postinc0	equ	0xFEE
 36938                           wreg	equ	0xFE8
 36939                           indf1	equ	0xFE7
 36940                           postinc1	equ	0xFE6
 36941                           postdec1	equ	0xFE5
 36942                           plusw1	equ	0xFE3
 36943                           fsr1h	equ	0xFE2
 36944                           fsr1l	equ	0xFE1
 36945                           indf2	equ	0xFDF
 36946                           postinc2	equ	0xFDE
 36947                           postdec2	equ	0xFDD
 36948                           plusw2	equ	0xFDB
 36949                           fsr2h	equ	0xFDA
 36950                           fsr2l	equ	0xFD9
 36951                           status	equ	0xFD8
 36952                           
 36953 ;; *************** function __flash_is_busy *****************
 36954 ;; Defined at:
 36955 ;;		line 281 in file "flash.c"
 36956 ;; Parameters:    Size  Location     Type
 36957 ;;		None
 36958 ;; Auto vars:     Size  Location     Type
 36959 ;;  status          2   17[BANK0 ] unsigned int 
 36960 ;; Return value:  Size  Location     Type
 36961 ;;                  1    wreg      unsigned char 
 36962 ;; Registers used:
 36963 ;;		wreg, status,2, status,0, cstack
 36964 ;; Tracked objects:
 36965 ;;		On entry : 0/0
 36966 ;;		On exit  : 0/0
 36967 ;;		Unchanged: 0/0
 36968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36970 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36972 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36973 ;;Total ram usage:        2 bytes
 36974 ;; Hardware stack levels used:    1
 36975 ;; Hardware stack levels required when called:   12
 36976 ;; This function calls:
 36977 ;;		__flash_get_status
 36978 ;;		__flash_wakeup
 36979 ;; This function is called by:
 36980 ;;		__flash_set_page_size
 36981 ;;		__flash_copy_page_to_buffer
 36982 ;;		__flash_compare_page_to_buffer
 36983 ;;		__flash_write_to_buffer
 36984 ;;		__flash_write_page_from_buffer
 36985 ;;		__flash_partial_read
 36986 ;;		_flash_partial_write
 36987 ;;		__flash_erase_page
 36988 ;;		__flash_buffer_read
 36989 ;;		_flash_is_busy
 36990 ;;		_flash_set_power_state
 36991 ;; This function uses a non-reentrant model
 36992 ;;
 36993                           
 36994                           	psect	text147
 36995  0157C4                     __ptext147:
 36996                           	opt stack 0
 36997  0157C4                     __flash_is_busy:
 36998                           	opt stack 15
 36999                           
 37000                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 37001                           
 37002                           ;incstack = 0
 37003  0157C4  0101               	movlb	1	; () banked
 37004  0157C6  515A               	movf	_power_state& (0+255),w,b
 37005  0157C8  A4D8               	btfss	status,2,c
 37006                           
 37007                           ; BSR set to: 1
 37008                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 37009  0157CA  ECAB  F0A4         	call	__flash_wakeup	;wreg free
 37010                           
 37011                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 37012  0157CE  ECD7  F0A9         	call	__flash_get_status	;wreg free
 37013  0157D2  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 37014  0157D6  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 37015                           
 37016                           ;flash.c: 295: if(status & 0b0000000010000000)
 37017  0157DA  0100               	movlb	0	; () banked
 37018  0157DC  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 37019  0157DE  D002               	goto	l1581
 37020                           
 37021                           ; BSR set to: 0
 37022                           ;flash.c: 296: {;flash.c: 298: return 0;
 37023  0157E0  0E00               	movlw	0
 37024                           
 37025                           ; BSR set to: 0
 37026                           ;flash.c: 299: }
 37027                           
 37028                           ; BSR set to: 0
 37029  0157E2  0012               	return	
 37030  0157E4                     l1581:
 37031                           
 37032                           ; BSR set to: 0
 37033                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 37034                           
 37035                           ; BSR set to: 0
 37036  0157E4  0E01               	movlw	1
 37037                           
 37038                           ; BSR set to: 0
 37039  0157E6  0012               	return	
 37040  0157E8                     __end_of__flash_is_busy:
 37041                           	opt stack 0
 37042                           tosu	equ	0xFFF
 37043                           tosh	equ	0xFFE
 37044                           tosl	equ	0xFFD
 37045                           pclath	equ	0xFFA
 37046                           tblptru	equ	0xFF8
 37047                           tblptrh	equ	0xFF7
 37048                           tblptrl	equ	0xFF6
 37049                           tablat	equ	0xFF5
 37050                           prodh	equ	0xFF4
 37051                           prodl	equ	0xFF3
 37052                           intcon	equ	0xFF2
 37053                           postinc0	equ	0xFEE
 37054                           wreg	equ	0xFE8
 37055                           indf1	equ	0xFE7
 37056                           postinc1	equ	0xFE6
 37057                           postdec1	equ	0xFE5
 37058                           plusw1	equ	0xFE3
 37059                           fsr1h	equ	0xFE2
 37060                           fsr1l	equ	0xFE1
 37061                           indf2	equ	0xFDF
 37062                           postinc2	equ	0xFDE
 37063                           postdec2	equ	0xFDD
 37064                           plusw2	equ	0xFDB
 37065                           fsr2h	equ	0xFDA
 37066                           fsr2l	equ	0xFD9
 37067                           status	equ	0xFD8
 37068                           
 37069 ;; *************** function __flash_wakeup *****************
 37070 ;; Defined at:
 37071 ;;		line 128 in file "flash.c"
 37072 ;; Parameters:    Size  Location     Type
 37073 ;;		None
 37074 ;; Auto vars:     Size  Location     Type
 37075 ;;  command         1    8[BANK0 ] unsigned char 
 37076 ;; Return value:  Size  Location     Type
 37077 ;;                  1    wreg      void 
 37078 ;; Registers used:
 37079 ;;		wreg, status,2, status,0, cstack
 37080 ;; Tracked objects:
 37081 ;;		On entry : 0/0
 37082 ;;		On exit  : 0/0
 37083 ;;		Unchanged: 0/0
 37084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37085 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37086 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37088 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37089 ;;Total ram usage:        1 bytes
 37090 ;; Hardware stack levels used:    1
 37091 ;; Hardware stack levels required when called:   11
 37092 ;; This function calls:
 37093 ;;		_spi_tx
 37094 ;; This function is called by:
 37095 ;;		__flash_is_busy
 37096 ;;		_flash_set_power_state
 37097 ;; This function uses a non-reentrant model
 37098 ;;
 37099                           
 37100                           	psect	text148
 37101  014956                     __ptext148:
 37102                           	opt stack 0
 37103  014956                     __flash_wakeup:
 37104                           	opt stack 15
 37105                           
 37106                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 37107                           
 37108                           ; BSR set to: 0
 37109                           ;incstack = 0
 37110  014956  D022               	goto	l1530
 37111  014958                     
 37112                           ;flash.c: 135: command = 0xAB;
 37113  014958  0EAB               	movlw	171
 37114  01495A  0100               	movlb	0	; () banked
 37115  01495C  6F68               	movwf	__flash_wakeup@command& (0+255),b
 37116                           
 37117                           ; BSR set to: 0
 37118                           ;flash.c: 136: spi_tx(&command, 1);
 37119  01495E  0E68               	movlw	low __flash_wakeup@command
 37120  014960  6F60               	movwf	spi_tx@data& (0+255),b
 37121  014962  0E00               	movlw	high __flash_wakeup@command
 37122  014964  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37123  014966  0E00               	movlw	0
 37124  014968  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37125  01496A  0E01               	movlw	1
 37126  01496C  6F62               	movwf	spi_tx@length& (0+255),b
 37127  01496E  ECCE  F0A3         	call	_spi_tx	;wreg free
 37128                           
 37129                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 37130  014972  0E17               	movlw	23
 37131  014974                     u19217:
 37132  014974  2EE8               	decfsz	wreg,f,c
 37133  014976  D7FE               	bra	u19217
 37134  014978  F000               	nop	
 37135                           
 37136                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 37137  01497A  0E00               	movlw	0
 37138  01497C  0101               	movlb	1	; () banked
 37139  01497E  6F5A               	movwf	_power_state& (0+255),b
 37140                           
 37141                           ;flash.c: 139: break;
 37142  014980  0012               	return	
 37143  014982                     l1533:
 37144                           
 37145                           ; BSR set to: 1
 37146                           ;flash.c: 144: LATDbits.LD7 = 0;
 37147  014982  9E8C               	bcf	3980,7,c	;volatile
 37148                           
 37149                           ; BSR set to: 1
 37150                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 37151  014984  0E0D               	movlw	13
 37152  014986                     u19227:
 37153  014986  2EE8               	decfsz	wreg,f,c
 37154  014988  D7FE               	bra	u19227
 37155  01498A  F000               	nop	
 37156                           
 37157                           ;flash.c: 146: LATDbits.LD7 = 1;
 37158  01498C  8E8C               	bsf	3980,7,c	;volatile
 37159                           
 37160                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 37161  01498E  0E50               	movlw	80
 37162  014990                     u19237:
 37163  014990  2EE8               	decfsz	wreg,f,c
 37164  014992  D7FE               	bra	u19237
 37165                           
 37166                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 37167  014994  0E00               	movlw	0
 37168  014996  0101               	movlb	1	; () banked
 37169  014998  6F5A               	movwf	_power_state& (0+255),b
 37170                           
 37171                           ; BSR set to: 1
 37172                           ;flash.c: 150: }
 37173                           
 37174                           ;flash.c: 149: break;
 37175  01499A  0012               	return	
 37176  01499C                     l1530:
 37177                           
 37178                           ; BSR set to: 1
 37179  01499C  0101               	movlb	1	; () banked
 37180  01499E  515A               	movf	_power_state& (0+255),w,b
 37181                           
 37182                           ; Switch size 1, requested type "space"
 37183                           ; Number of cases is 2, Range of values is 1 to 2
 37184                           ; switch strategies available:
 37185                           ; Name         Instructions Cycles
 37186                           ; simple_byte            7     4 (average)
 37187                           ;	Chosen strategy is simple_byte
 37188  0149A0  0A01               	xorlw	1	; case 1
 37189  0149A2  B4D8               	btfsc	status,2,c
 37190  0149A4  D7D9               	goto	l1531
 37191  0149A6  0A03               	xorlw	3	; case 2
 37192  0149A8  A4D8               	btfss	status,2,c
 37193  0149AA  0012               	return	
 37194  0149AC  D7EA               	goto	l1533
 37195  0149AE                     __end_of__flash_wakeup:
 37196                           	opt stack 0
 37197                           tosu	equ	0xFFF
 37198                           tosh	equ	0xFFE
 37199                           tosl	equ	0xFFD
 37200                           pclath	equ	0xFFA
 37201                           tblptru	equ	0xFF8
 37202                           tblptrh	equ	0xFF7
 37203                           tblptrl	equ	0xFF6
 37204                           tablat	equ	0xFF5
 37205                           prodh	equ	0xFF4
 37206                           prodl	equ	0xFF3
 37207                           intcon	equ	0xFF2
 37208                           postinc0	equ	0xFEE
 37209                           wreg	equ	0xFE8
 37210                           indf1	equ	0xFE7
 37211                           postinc1	equ	0xFE6
 37212                           postdec1	equ	0xFE5
 37213                           plusw1	equ	0xFE3
 37214                           fsr1h	equ	0xFE2
 37215                           fsr1l	equ	0xFE1
 37216                           indf2	equ	0xFDF
 37217                           postinc2	equ	0xFDE
 37218                           postdec2	equ	0xFDD
 37219                           plusw2	equ	0xFDB
 37220                           fsr2h	equ	0xFDA
 37221                           fsr2l	equ	0xFD9
 37222                           status	equ	0xFD8
 37223                           
 37224 ;; *************** function _spi_tx *****************
 37225 ;; Defined at:
 37226 ;;		line 108 in file "spi.c"
 37227 ;; Parameters:    Size  Location     Type
 37228 ;;  data            2    0[BANK0 ] PTR unsigned char 
 37229 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 37230 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 37231 ;;  length          2    2[BANK0 ] unsigned int 
 37232 ;; Auto vars:     Size  Location     Type
 37233 ;;		None
 37234 ;; Return value:  Size  Location     Type
 37235 ;;                  1    wreg      void 
 37236 ;; Registers used:
 37237 ;;		wreg, status,2, status,0
 37238 ;; Tracked objects:
 37239 ;;		On entry : 0/0
 37240 ;;		On exit  : 0/0
 37241 ;;		Unchanged: 0/0
 37242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37243 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37245 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37246 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37247 ;;Total ram usage:        8 bytes
 37248 ;; Hardware stack levels used:    1
 37249 ;; Hardware stack levels required when called:   10
 37250 ;; This function calls:
 37251 ;;		Nothing
 37252 ;; This function is called by:
 37253 ;;		__flash_set_page_size
 37254 ;;		__flash_wakeup
 37255 ;;		__flash_copy_page_to_buffer
 37256 ;;		__flash_compare_page_to_buffer
 37257 ;;		__flash_write_page_from_buffer
 37258 ;;		__flash_erase_page
 37259 ;;		_flash_set_power_state
 37260 ;; This function uses a non-reentrant model
 37261 ;;
 37262                           
 37263                           	psect	text149
 37264  01479C                     __ptext149:
 37265                           	opt stack 0
 37266  01479C                     _spi_tx:
 37267                           	opt stack 17
 37268                           
 37269                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 37270                           
 37271                           ; BSR set to: 1
 37272                           ;incstack = 0
 37273  01479C  9E88               	bcf	3976,7,c	;volatile
 37274                           
 37275                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 37276  01479E  9C88               	bcf	3976,6,c	;volatile
 37277                           
 37278                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 37279  0147A0  8A88               	bsf	3976,5,c	;volatile
 37280                           
 37281                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 37282  0147A2  9888               	bcf	3976,4,c	;volatile
 37283                           
 37284                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 37285  0147A4  9688               	bcf	3976,3,c	;volatile
 37286                           
 37287                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 37288  0147A6  8488               	bsf	3976,2,c	;volatile
 37289                           
 37290                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 37291  0147A8  9288               	bcf	3976,1,c	;volatile
 37292                           
 37293                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 37294  0147AA  9886               	bcf	3974,4,c	;volatile
 37295  0147AC  9A86               	bcf	3974,5,c	;volatile
 37296  0147AE  9C86               	bcf	3974,6,c	;volatile
 37297  0147B0  9E86               	bcf	3974,7,c	;volatile
 37298                           
 37299                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 37300  0147B2  9086               	bcf	3974,0,c	;volatile
 37301  0147B4  9286               	bcf	3974,1,c	;volatile
 37302  0147B6  9486               	bcf	3974,2,c	;volatile
 37303  0147B8  9686               	bcf	3974,3,c	;volatile
 37304                           
 37305                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37306  0147BA  0100               	movlb	0	; () banked
 37307  0147BC  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 37308  0147BE  6E6A               	movwf	3946,c	;volatile
 37309                           
 37310                           ; BSR set to: 0
 37311                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37312  0147C0  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 37313                           
 37314                           ; BSR set to: 0
 37315                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 37316  0147C4  0EFF               	movlw	255
 37317  0147C6  6F64               	movwf	??_spi_tx& (0+255),b
 37318  0147C8  0EFF               	movlw	255
 37319  0147CA  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 37320  0147CC  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 37321  0147D0  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 37322  0147D4  5164               	movf	??_spi_tx& (0+255),w,b
 37323  0147D6  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 37324  0147D8  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 37325  0147DA  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 37326  0147DC  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 37327  0147E0  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 37328  0147E2  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 37329  0147E4  6E66               	movwf	3942,c	;volatile
 37330                           
 37331                           ; BSR set to: 0
 37332                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 37333  0147E6  0562               	decf	spi_tx@length& (0+255),w,b
 37334  0147E8  6E67               	movwf	3943,c	;volatile
 37335                           
 37336                           ; BSR set to: 0
 37337                           ;spi.c: 136: LATDbits.LD7 = 0;
 37338  0147EA  9E8C               	bcf	3980,7,c	;volatile
 37339                           
 37340                           ; BSR set to: 0
 37341                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 37342  0147EC  8088               	bsf	3976,0,c	;volatile
 37343  0147EE                     
 37344                           ; BSR set to: 0
 37345  0147EE  B088               	btfsc	3976,0,c	;volatile
 37346  0147F0  D7FE               	goto	l2172
 37347                           
 37348                           ;spi.c: 139: LATDbits.LD7 = 1;
 37349  0147F2  8E8C               	bsf	3980,7,c	;volatile
 37350  0147F4  0012               	return		;funcret
 37351  0147F6                     __end_of_spi_tx:
 37352                           	opt stack 0
 37353                           tosu	equ	0xFFF
 37354                           tosh	equ	0xFFE
 37355                           tosl	equ	0xFFD
 37356                           pclath	equ	0xFFA
 37357                           tblptru	equ	0xFF8
 37358                           tblptrh	equ	0xFF7
 37359                           tblptrl	equ	0xFF6
 37360                           tablat	equ	0xFF5
 37361                           prodh	equ	0xFF4
 37362                           prodl	equ	0xFF3
 37363                           intcon	equ	0xFF2
 37364                           postinc0	equ	0xFEE
 37365                           wreg	equ	0xFE8
 37366                           indf1	equ	0xFE7
 37367                           postinc1	equ	0xFE6
 37368                           postdec1	equ	0xFE5
 37369                           plusw1	equ	0xFE3
 37370                           fsr1h	equ	0xFE2
 37371                           fsr1l	equ	0xFE1
 37372                           indf2	equ	0xFDF
 37373                           postinc2	equ	0xFDE
 37374                           postdec2	equ	0xFDD
 37375                           plusw2	equ	0xFDB
 37376                           fsr2h	equ	0xFDA
 37377                           fsr2l	equ	0xFD9
 37378                           status	equ	0xFD8
 37379                           
 37380 ;; *************** function __flash_get_status *****************
 37381 ;; Defined at:
 37382 ;;		line 117 in file "flash.c"
 37383 ;; Parameters:    Size  Location     Type
 37384 ;;		None
 37385 ;; Auto vars:     Size  Location     Type
 37386 ;;  status          2   15[BANK0 ] unsigned int 
 37387 ;;  command         1   14[BANK0 ] unsigned char 
 37388 ;; Return value:  Size  Location     Type
 37389 ;;                  2   12[BANK0 ] unsigned int 
 37390 ;; Registers used:
 37391 ;;		wreg, status,2, status,0, cstack
 37392 ;; Tracked objects:
 37393 ;;		On entry : 0/0
 37394 ;;		On exit  : 0/0
 37395 ;;		Unchanged: 0/0
 37396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37398 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37400 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37401 ;;Total ram usage:        5 bytes
 37402 ;; Hardware stack levels used:    1
 37403 ;; Hardware stack levels required when called:   11
 37404 ;; This function calls:
 37405 ;;		_spi_tx_rx
 37406 ;; This function is called by:
 37407 ;;		__flash_compare_page_to_buffer
 37408 ;;		__flash_is_busy
 37409 ;; This function uses a non-reentrant model
 37410 ;;
 37411                           
 37412                           	psect	text150
 37413  0153AE                     __ptext150:
 37414                           	opt stack 0
 37415  0153AE                     __flash_get_status:
 37416                           	opt stack 15
 37417                           
 37418                           ;flash.c: 121: uint8_t command = 0xD7;
 37419                           
 37420                           ;incstack = 0
 37421  0153AE  0ED7               	movlw	215
 37422  0153B0  0100               	movlb	0	; () banked
 37423  0153B2  6F6E               	movwf	__flash_get_status@command& (0+255),b
 37424                           
 37425                           ; BSR set to: 0
 37426                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 37427  0153B4  0E6E               	movlw	low __flash_get_status@command
 37428  0153B6  6F60               	movwf	spi_tx_rx@command& (0+255),b
 37429  0153B8  0E00               	movlw	high __flash_get_status@command
 37430  0153BA  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 37431  0153BC  0E00               	movlw	0
 37432  0153BE  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 37433  0153C0  0E01               	movlw	1
 37434  0153C2  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 37435  0153C4  0E6F               	movlw	low __flash_get_status@status
 37436  0153C6  6F64               	movwf	spi_tx_rx@data& (0+255),b
 37437  0153C8  0E00               	movlw	high __flash_get_status@status
 37438  0153CA  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 37439  0153CC  0E00               	movlw	0
 37440  0153CE  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 37441  0153D0  0E02               	movlw	2
 37442  0153D2  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 37443  0153D4  ECB7  F09A         	call	_spi_tx_rx	;wreg free
 37444                           
 37445                           ;flash.c: 124: return status;
 37446  0153D8  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 37447  0153DC  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 37448  0153E0  0012               	return	
 37449  0153E2                     __end_of__flash_get_status:
 37450                           	opt stack 0
 37451                           tosu	equ	0xFFF
 37452                           tosh	equ	0xFFE
 37453                           tosl	equ	0xFFD
 37454                           pclath	equ	0xFFA
 37455                           tblptru	equ	0xFF8
 37456                           tblptrh	equ	0xFF7
 37457                           tblptrl	equ	0xFF6
 37458                           tablat	equ	0xFF5
 37459                           prodh	equ	0xFF4
 37460                           prodl	equ	0xFF3
 37461                           intcon	equ	0xFF2
 37462                           postinc0	equ	0xFEE
 37463                           wreg	equ	0xFE8
 37464                           indf1	equ	0xFE7
 37465                           postinc1	equ	0xFE6
 37466                           postdec1	equ	0xFE5
 37467                           plusw1	equ	0xFE3
 37468                           fsr1h	equ	0xFE2
 37469                           fsr1l	equ	0xFE1
 37470                           indf2	equ	0xFDF
 37471                           postinc2	equ	0xFDE
 37472                           postdec2	equ	0xFDD
 37473                           plusw2	equ	0xFDB
 37474                           fsr2h	equ	0xFDA
 37475                           fsr2l	equ	0xFD9
 37476                           status	equ	0xFD8
 37477                           
 37478 ;; *************** function _spi_tx_rx *****************
 37479 ;; Defined at:
 37480 ;;		line 199 in file "spi.c"
 37481 ;; Parameters:    Size  Location     Type
 37482 ;;  command         2    0[BANK0 ] PTR unsigned char 
 37483 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 37484 ;;  command_leng    2    2[BANK0 ] unsigned int 
 37485 ;;  data            2    4[BANK0 ] PTR unsigned char 
 37486 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 37487 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 37488 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 37489 ;;  data_length     2    6[BANK0 ] unsigned int 
 37490 ;; Auto vars:     Size  Location     Type
 37491 ;;		None
 37492 ;; Return value:  Size  Location     Type
 37493 ;;                  1    wreg      void 
 37494 ;; Registers used:
 37495 ;;		wreg, status,2, status,0
 37496 ;; Tracked objects:
 37497 ;;		On entry : 0/0
 37498 ;;		On exit  : 0/0
 37499 ;;		Unchanged: 0/0
 37500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37501 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37503 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37504 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37505 ;;Total ram usage:       12 bytes
 37506 ;; Hardware stack levels used:    1
 37507 ;; Hardware stack levels required when called:   10
 37508 ;; This function calls:
 37509 ;;		Nothing
 37510 ;; This function is called by:
 37511 ;;		__flash_get_status
 37512 ;;		__flash_partial_read
 37513 ;;		__flash_buffer_read
 37514 ;; This function uses a non-reentrant model
 37515 ;;
 37516                           
 37517                           	psect	text151
 37518  01356E                     __ptext151:
 37519                           	opt stack 0
 37520  01356E                     _spi_tx_rx:
 37521                           	opt stack 15
 37522                           
 37523                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 37524                           
 37525                           ;incstack = 0
 37526  01356E  9E88               	bcf	3976,7,c	;volatile
 37527                           
 37528                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 37529  013570  9C88               	bcf	3976,6,c	;volatile
 37530                           
 37531                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 37532  013572  8A88               	bsf	3976,5,c	;volatile
 37533                           
 37534                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 37535  013574  9888               	bcf	3976,4,c	;volatile
 37536                           
 37537                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 37538  013576  9688               	bcf	3976,3,c	;volatile
 37539                           
 37540                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 37541  013578  8488               	bsf	3976,2,c	;volatile
 37542                           
 37543                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 37544  01357A  9288               	bcf	3976,1,c	;volatile
 37545                           
 37546                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 37547  01357C  9886               	bcf	3974,4,c	;volatile
 37548  01357E  9A86               	bcf	3974,5,c	;volatile
 37549  013580  9C86               	bcf	3974,6,c	;volatile
 37550  013582  9E86               	bcf	3974,7,c	;volatile
 37551                           
 37552                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 37553  013584  9086               	bcf	3974,0,c	;volatile
 37554  013586  9286               	bcf	3974,1,c	;volatile
 37555  013588  9486               	bcf	3974,2,c	;volatile
 37556  01358A  9686               	bcf	3974,3,c	;volatile
 37557                           
 37558                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 37559  01358C  0100               	movlb	0	; () banked
 37560  01358E  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 37561  013590  6E6A               	movwf	3946,c	;volatile
 37562                           
 37563                           ; BSR set to: 0
 37564                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 37565  013592  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 37566                           
 37567                           ; BSR set to: 0
 37568                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 37569  013596  0EFF               	movlw	255
 37570  013598  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37571  01359A  0EFF               	movlw	255
 37572  01359C  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37573  01359E  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 37574  0135A2  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 37575  0135A6  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37576  0135A8  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37577  0135AA  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37578  0135AC  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37579  0135AE  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37580  0135B2  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37581  0135B4  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37582  0135B6  6E66               	movwf	3942,c	;volatile
 37583                           
 37584                           ; BSR set to: 0
 37585                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 37586  0135B8  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 37587  0135BA  6E67               	movwf	3943,c	;volatile
 37588                           
 37589                           ; BSR set to: 0
 37590                           ;spi.c: 227: LATDbits.LD7 = 0;
 37591  0135BC  9E8C               	bcf	3980,7,c	;volatile
 37592                           
 37593                           ; BSR set to: 0
 37594                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 37595  0135BE  8088               	bsf	3976,0,c	;volatile
 37596  0135C0                     
 37597                           ; BSR set to: 0
 37598  0135C0  B088               	btfsc	3976,0,c	;volatile
 37599  0135C2  D7FE               	goto	l2187
 37600                           
 37601                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 37602  0135C4  9A88               	bcf	3976,5,c	;volatile
 37603                           
 37604                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 37605  0135C6  8888               	bsf	3976,4,c	;volatile
 37606                           
 37607                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 37608  0135C8  9688               	bcf	3976,3,c	;volatile
 37609                           
 37610                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 37611  0135CA  9488               	bcf	3976,2,c	;volatile
 37612                           
 37613                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 37614  0135CC  0100               	movlb	0	; () banked
 37615  0135CE  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 37616  0135D0  6E68               	movwf	3944,c	;volatile
 37617                           
 37618                           ; BSR set to: 0
 37619                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 37620  0135D2  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 37621                           
 37622                           ; BSR set to: 0
 37623                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 37624  0135D6  0EFF               	movlw	255
 37625  0135D8  6F68               	movwf	??_spi_tx_rx& (0+255),b
 37626  0135DA  0EFF               	movlw	255
 37627  0135DC  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 37628  0135DE  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 37629  0135E2  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 37630  0135E6  5168               	movf	??_spi_tx_rx& (0+255),w,b
 37631  0135E8  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 37632  0135EA  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 37633  0135EC  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 37634  0135EE  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 37635  0135F2  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 37636  0135F4  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 37637  0135F6  6E66               	movwf	3942,c	;volatile
 37638                           
 37639                           ; BSR set to: 0
 37640                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 37641  0135F8  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 37642  0135FA  6E67               	movwf	3943,c	;volatile
 37643                           
 37644                           ; BSR set to: 0
 37645                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 37646  0135FC  8088               	bsf	3976,0,c	;volatile
 37647  0135FE                     
 37648                           ; BSR set to: 0
 37649  0135FE  B088               	btfsc	3976,0,c	;volatile
 37650  013600  D7FE               	goto	l2190
 37651                           
 37652                           ;spi.c: 254: LATDbits.LD7 = 1;
 37653  013602  8E8C               	bsf	3980,7,c	;volatile
 37654  013604  0012               	return		;funcret
 37655  013606                     __end_of_spi_tx_rx:
 37656                           	opt stack 0
 37657                           tosu	equ	0xFFF
 37658                           tosh	equ	0xFFE
 37659                           tosl	equ	0xFFD
 37660                           pclath	equ	0xFFA
 37661                           tblptru	equ	0xFF8
 37662                           tblptrh	equ	0xFF7
 37663                           tblptrl	equ	0xFF6
 37664                           tablat	equ	0xFF5
 37665                           prodh	equ	0xFF4
 37666                           prodl	equ	0xFF3
 37667                           intcon	equ	0xFF2
 37668                           postinc0	equ	0xFEE
 37669                           wreg	equ	0xFE8
 37670                           indf1	equ	0xFE7
 37671                           postinc1	equ	0xFE6
 37672                           postdec1	equ	0xFE5
 37673                           plusw1	equ	0xFE3
 37674                           fsr1h	equ	0xFE2
 37675                           fsr1l	equ	0xFE1
 37676                           indf2	equ	0xFDF
 37677                           postinc2	equ	0xFDE
 37678                           postdec2	equ	0xFDD
 37679                           plusw2	equ	0xFDB
 37680                           fsr2h	equ	0xFDA
 37681                           fsr2l	equ	0xFD9
 37682                           status	equ	0xFD8
 37683                           
 37684 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 37685 ;; Defined at:
 37686 ;;		line 993 in file "usb_device_msd.c"
 37687 ;; Parameters:    Size  Location     Type
 37688 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 37689 ;; Auto vars:     Size  Location     Type
 37690 ;;		None
 37691 ;; Return value:  Size  Location     Type
 37692 ;;                  1    wreg      void 
 37693 ;; Registers used:
 37694 ;;		wreg, status,2, status,0
 37695 ;; Tracked objects:
 37696 ;;		On entry : 0/0
 37697 ;;		On exit  : 0/0
 37698 ;;		Unchanged: 0/0
 37699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37700 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37702 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37703 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37704 ;;Total ram usage:        6 bytes
 37705 ;; Hardware stack levels used:    1
 37706 ;; Hardware stack levels required when called:   10
 37707 ;; This function calls:
 37708 ;;		Nothing
 37709 ;; This function is called by:
 37710 ;;		_MSDProcessCommandMediaPresent
 37711 ;; This function uses a non-reentrant model
 37712 ;;
 37713                           
 37714                           	psect	text152
 37715  012B48                     __ptext152:
 37716                           	opt stack 0
 37717  012B48                     _MSDComputeDeviceInAndResidue:
 37718                           	opt stack 16
 37719                           
 37720                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 37721                           
 37722                           ;incstack = 0
 37723  012B48  0100               	movlb	0	; () banked
 37724  012B4A  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37725  012B4C  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37726  012B4E  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37727  012B50  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37728  012B52  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37729  012B54  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37730  012B56  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37731  012B58  0102               	movlb	2	; () banked
 37732  012B5A  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 37733  012B5C  0100               	movlb	0	; () banked
 37734  012B5E  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37735  012B60  0102               	movlb	2	; () banked
 37736  012B62  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 37737  012B64  0100               	movlb	0	; () banked
 37738  012B66  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37739  012B68  0102               	movlb	2	; () banked
 37740  012B6A  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 37741  012B6C  0100               	movlb	0	; () banked
 37742  012B6E  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37743  012B70  0102               	movlb	2	; () banked
 37744  012B72  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 37745  012B74  B0D8               	btfsc	status,0,c
 37746  012B76  D00E               	goto	l675
 37747                           
 37748                           ; BSR set to: 2
 37749                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 37750  012B78  0E00               	movlw	0
 37751  012B7A  010D               	movlb	13	; () banked
 37752  012B7C  6F88               	movwf	136,b	;volatile
 37753  012B7E  0E00               	movlw	0
 37754  012B80  6F89               	movwf	137,b	;volatile
 37755  012B82  0E00               	movlw	0
 37756  012B84  6F8A               	movwf	138,b	;volatile
 37757  012B86  0E00               	movlw	0
 37758  012B88  6F8B               	movwf	139,b	;volatile
 37759                           
 37760                           ; BSR set to: 13
 37761                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 37762  012B8A  C208  F145         	movff	_gblCBW+8,_TransferLength
 37763  012B8E  C209  F146         	movff	_gblCBW+9,_TransferLength+1
 37764                           
 37765                           ;usb_device_msd.c: 1002: }
 37766  012B92  0012               	return	
 37767  012B94                     l675:
 37768                           
 37769                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 37770                           
 37771                           ; BSR set to: 13
 37772  012B94  0101               	movlb	1	; () banked
 37773  012B96  5145               	movf	_TransferLength& (0+255),w,b
 37774  012B98  0100               	movlb	0	; () banked
 37775  012B9A  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 37776  012B9C  0101               	movlb	1	; () banked
 37777  012B9E  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37778  012BA0  0100               	movlb	0	; () banked
 37779  012BA2  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 37780  012BA4  B0D8               	btfsc	status,0,c
 37781  012BA6  D004               	goto	l677
 37782                           
 37783                           ; BSR set to: 0
 37784                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 37785  012BA8  C060  F145         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 37786  012BAC  C061  F146         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 37787  012BB0                     l677:
 37788                           
 37789                           ; BSR set to: 0
 37790                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 37791                           
 37792                           ; BSR set to: 0
 37793  012BB0  0101               	movlb	1	; () banked
 37794  012BB2  5145               	movf	_TransferLength& (0+255),w,b
 37795  012BB4  0100               	movlb	0	; () banked
 37796  012BB6  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 37797  012BB8  0101               	movlb	1	; () banked
 37798  012BBA  5146               	movf	(_TransferLength+1)& (0+255),w,b
 37799  012BBC  0100               	movlb	0	; () banked
 37800  012BBE  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 37801  012BC0  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 37802  012BC2  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 37803  012BC4  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37804  012BC6  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37805  012BC8  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37806  012BCA  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37807  012BCC  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 37808  012BCE  0E00               	movlw	0
 37809  012BD0  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 37810  012BD2  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 37811  012BD4  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 37812  012BD6  0102               	movlb	2	; () banked
 37813  012BD8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37814  012BDA  0100               	movlb	0	; () banked
 37815  012BDC  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 37816  012BDE  010D               	movlb	13	; () banked
 37817  012BE0  6F88               	movwf	136,b	;volatile
 37818  012BE2  0102               	movlb	2	; () banked
 37819  012BE4  5109               	movf	(_gblCBW+9)& (0+255),w,b
 37820  012BE6  0100               	movlb	0	; () banked
 37821  012BE8  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 37822  012BEA  010D               	movlb	13	; () banked
 37823  012BEC  6F89               	movwf	137,b	;volatile
 37824  012BEE  0102               	movlb	2	; () banked
 37825  012BF0  510A               	movf	(_gblCBW+10)& (0+255),w,b
 37826  012BF2  0100               	movlb	0	; () banked
 37827  012BF4  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 37828  012BF6  010D               	movlb	13	; () banked
 37829  012BF8  6F8A               	movwf	138,b	;volatile
 37830  012BFA  0102               	movlb	2	; () banked
 37831  012BFC  510B               	movf	(_gblCBW+11)& (0+255),w,b
 37832  012BFE  0100               	movlb	0	; () banked
 37833  012C00  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 37834  012C02  010D               	movlb	13	; () banked
 37835  012C04  6F8B               	movwf	139,b	;volatile
 37836  012C06  0012               	return	
 37837  012C08                     __end_of_MSDComputeDeviceInAndResidue:
 37838                           	opt stack 0
 37839                           tosu	equ	0xFFF
 37840                           tosh	equ	0xFFE
 37841                           tosl	equ	0xFFD
 37842                           pclath	equ	0xFFA
 37843                           tblptru	equ	0xFF8
 37844                           tblptrh	equ	0xFF7
 37845                           tblptrl	equ	0xFF6
 37846                           tablat	equ	0xFF5
 37847                           prodh	equ	0xFF4
 37848                           prodl	equ	0xFF3
 37849                           intcon	equ	0xFF2
 37850                           postinc0	equ	0xFEE
 37851                           wreg	equ	0xFE8
 37852                           indf1	equ	0xFE7
 37853                           postinc1	equ	0xFE6
 37854                           postdec1	equ	0xFE5
 37855                           plusw1	equ	0xFE3
 37856                           fsr1h	equ	0xFE2
 37857                           fsr1l	equ	0xFE1
 37858                           indf2	equ	0xFDF
 37859                           postinc2	equ	0xFDE
 37860                           postdec2	equ	0xFDD
 37861                           plusw2	equ	0xFDB
 37862                           fsr2h	equ	0xFDA
 37863                           fsr2l	equ	0xFD9
 37864                           status	equ	0xFD8
 37865                           
 37866 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 37867 ;; Defined at:
 37868 ;;		line 18 in file "external_flash.c"
 37869 ;; Parameters:    Size  Location     Type
 37870 ;;  config          2    0[BANK0 ] PTR void 
 37871 ;;		 -> NULL(0), 
 37872 ;; Auto vars:     Size  Location     Type
 37873 ;;		None
 37874 ;; Return value:  Size  Location     Type
 37875 ;;                  2    0[BANK0 ] unsigned int 
 37876 ;; Registers used:
 37877 ;;		wreg, status,2
 37878 ;; Tracked objects:
 37879 ;;		On entry : 0/0
 37880 ;;		On exit  : 0/0
 37881 ;;		Unchanged: 0/0
 37882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37883 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37886 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37887 ;;Total ram usage:        2 bytes
 37888 ;; Hardware stack levels used:    1
 37889 ;; Hardware stack levels required when called:   10
 37890 ;; This function calls:
 37891 ;;		Nothing
 37892 ;; This function is called by:
 37893 ;;		_MSDProcessCommandMediaPresent
 37894 ;; This function uses a non-reentrant model
 37895 ;;
 37896                           
 37897                           	psect	text153
 37898  0159F6                     __ptext153:
 37899                           	opt stack 0
 37900  0159F6                     _ExternalFlash_SectorSizeRead:
 37901                           	opt stack 16
 37902                           
 37903                           ;external_flash.c: 20: return 512;
 37904                           
 37905                           ; BSR set to: 13
 37906                           ;incstack = 0
 37907  0159F6  0E02               	movlw	2
 37908  0159F8  0100               	movlb	0	; () banked
 37909  0159FA  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 37910  0159FC  0E00               	movlw	0
 37911  0159FE  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 37912  015A00  0012               	return	
 37913  015A02                     __end_of_ExternalFlash_SectorSizeRead:
 37914                           	opt stack 0
 37915                           tosu	equ	0xFFF
 37916                           tosh	equ	0xFFE
 37917                           tosl	equ	0xFFD
 37918                           pclath	equ	0xFFA
 37919                           tblptru	equ	0xFF8
 37920                           tblptrh	equ	0xFF7
 37921                           tblptrl	equ	0xFF6
 37922                           tablat	equ	0xFF5
 37923                           prodh	equ	0xFF4
 37924                           prodl	equ	0xFF3
 37925                           intcon	equ	0xFF2
 37926                           postinc0	equ	0xFEE
 37927                           wreg	equ	0xFE8
 37928                           indf1	equ	0xFE7
 37929                           postinc1	equ	0xFE6
 37930                           postdec1	equ	0xFE5
 37931                           plusw1	equ	0xFE3
 37932                           fsr1h	equ	0xFE2
 37933                           fsr1l	equ	0xFE1
 37934                           indf2	equ	0xFDF
 37935                           postinc2	equ	0xFDE
 37936                           postdec2	equ	0xFDD
 37937                           plusw2	equ	0xFDB
 37938                           fsr2h	equ	0xFDA
 37939                           fsr2l	equ	0xFD9
 37940                           status	equ	0xFD8
 37941                           
 37942 ;; *************** function _ExternalFlash_CapacityRead *****************
 37943 ;; Defined at:
 37944 ;;		line 23 in file "external_flash.c"
 37945 ;; Parameters:    Size  Location     Type
 37946 ;;  config          2    0[BANK0 ] PTR void 
 37947 ;;		 -> NULL(0), 
 37948 ;; Auto vars:     Size  Location     Type
 37949 ;;		None
 37950 ;; Return value:  Size  Location     Type
 37951 ;;                  4    0[BANK0 ] unsigned long 
 37952 ;; Registers used:
 37953 ;;		wreg, status,2
 37954 ;; Tracked objects:
 37955 ;;		On entry : 0/0
 37956 ;;		On exit  : 0/0
 37957 ;;		Unchanged: 0/0
 37958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37959 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37962 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37963 ;;Total ram usage:        4 bytes
 37964 ;; Hardware stack levels used:    1
 37965 ;; Hardware stack levels required when called:   10
 37966 ;; This function calls:
 37967 ;;		Nothing
 37968 ;; This function is called by:
 37969 ;;		_MSDProcessCommandMediaPresent
 37970 ;; This function uses a non-reentrant model
 37971 ;;
 37972                           
 37973                           	psect	text154
 37974  01597A                     __ptext154:
 37975                           	opt stack 0
 37976  01597A                     _ExternalFlash_CapacityRead:
 37977                           	opt stack 16
 37978                           
 37979                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 37980                           
 37981                           ; BSR set to: 0
 37982                           ;incstack = 0
 37983  01597A  0EFF               	movlw	255
 37984  01597C  0100               	movlb	0	; () banked
 37985  01597E  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 37986  015980  0E1F               	movlw	31
 37987  015982  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 37988  015984  0E00               	movlw	0
 37989  015986  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 37990  015988  0E00               	movlw	0
 37991  01598A  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 37992  01598C  0012               	return	
 37993  01598E                     __end_of_ExternalFlash_CapacityRead:
 37994                           	opt stack 0
 37995                           tosu	equ	0xFFF
 37996                           tosh	equ	0xFFE
 37997                           tosl	equ	0xFFD
 37998                           pclath	equ	0xFFA
 37999                           tblptru	equ	0xFF8
 38000                           tblptrh	equ	0xFF7
 38001                           tblptrl	equ	0xFF6
 38002                           tablat	equ	0xFF5
 38003                           prodh	equ	0xFF4
 38004                           prodl	equ	0xFF3
 38005                           intcon	equ	0xFF2
 38006                           postinc0	equ	0xFEE
 38007                           wreg	equ	0xFE8
 38008                           indf1	equ	0xFE7
 38009                           postinc1	equ	0xFE6
 38010                           postdec1	equ	0xFE5
 38011                           plusw1	equ	0xFE3
 38012                           fsr1h	equ	0xFE2
 38013                           fsr1l	equ	0xFE1
 38014                           indf2	equ	0xFDF
 38015                           postinc2	equ	0xFDE
 38016                           postdec2	equ	0xFDD
 38017                           plusw2	equ	0xFDB
 38018                           fsr2h	equ	0xFDA
 38019                           fsr2l	equ	0xFD9
 38020                           status	equ	0xFD8
 38021                           
 38022 ;; *************** function _ExternalFlash_MediaInitialize *****************
 38023 ;; Defined at:
 38024 ;;		line 10 in file "external_flash.c"
 38025 ;; Parameters:    Size  Location     Type
 38026 ;;  config          2    0[BANK0 ] PTR void 
 38027 ;;		 -> NULL(0), 
 38028 ;; Auto vars:     Size  Location     Type
 38029 ;;		None
 38030 ;; Return value:  Size  Location     Type
 38031 ;;                  2    0[BANK0 ] PTR struct .
 38032 ;; Registers used:
 38033 ;;		wreg, status,2, status,0
 38034 ;; Tracked objects:
 38035 ;;		On entry : 0/0
 38036 ;;		On exit  : 0/0
 38037 ;;		Unchanged: 0/0
 38038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38039 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38040 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38043 ;;Total ram usage:        2 bytes
 38044 ;; Hardware stack levels used:    1
 38045 ;; Hardware stack levels required when called:   10
 38046 ;; This function calls:
 38047 ;;		Nothing
 38048 ;; This function is called by:
 38049 ;;		_USBMSDInit
 38050 ;;		_MSDProcessCommand
 38051 ;; This function uses a non-reentrant model
 38052 ;;
 38053                           
 38054                           	psect	text155
 38055  01584E                     __ptext155:
 38056                           	opt stack 0
 38057  01584E                     _ExternalFlash_MediaInitialize:
 38058                           	opt stack 0
 38059                           
 38060                           ; BSR set to: 0
 38061                           ;Skip over the trampoline to the duplicate function for level 2
 38062  01584E  B25F               	btfsc	btemp,1,c
 38063  015850  EF99  F0AC         	goto	i2_ExternalFlash_MediaInitialize
 38064  015854                     _ExternalFlash_MediaInitialize$intlevel0:
 38065                           	opt stack 17
 38066                           
 38067                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 38068                           
 38069                           ;incstack = 0
 38070  015854  0102               	movlb	2	; () banked
 38071  015856  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 38072                           
 38073                           ; BSR set to: 2
 38074                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 38075  015858  0E02               	movlw	2
 38076  01585A  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 38077  01585C  0E00               	movlw	0
 38078  01585E  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 38079                           
 38080                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 38081  015860  0E00               	movlw	0
 38082  015862  6F84               	movwf	_mediaInformation& (0+255),b
 38083                           
 38084                           ; BSR set to: 2
 38085                           ;external_flash.c: 15: return &mediaInformation;
 38086  015864  0E84               	movlw	low _mediaInformation
 38087  015866  0100               	movlb	0	; () banked
 38088  015868  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 38089  01586A  0E02               	movlw	high _mediaInformation
 38090  01586C  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 38091  01586E  0012               	return	
 38092  015870                     __end_of_ExternalFlash_MediaInitialize:
 38093                           	opt stack 0
 38094                           tosu	equ	0xFFF
 38095                           tosh	equ	0xFFE
 38096                           tosl	equ	0xFFD
 38097                           pclath	equ	0xFFA
 38098                           tblptru	equ	0xFF8
 38099                           tblptrh	equ	0xFF7
 38100                           tblptrl	equ	0xFF6
 38101                           tablat	equ	0xFF5
 38102                           prodh	equ	0xFF4
 38103                           prodl	equ	0xFF3
 38104                           intcon	equ	0xFF2
 38105                           postinc0	equ	0xFEE
 38106                           wreg	equ	0xFE8
 38107                           indf1	equ	0xFE7
 38108                           postinc1	equ	0xFE6
 38109                           postdec1	equ	0xFE5
 38110                           plusw1	equ	0xFE3
 38111                           fsr1h	equ	0xFE2
 38112                           fsr1l	equ	0xFE1
 38113                           indf2	equ	0xFDF
 38114                           postinc2	equ	0xFDE
 38115                           postdec2	equ	0xFDD
 38116                           plusw2	equ	0xFDB
 38117                           fsr2h	equ	0xFDA
 38118                           fsr2l	equ	0xFD9
 38119                           status	equ	0xFD8
 38120                           
 38121 ;; *************** function _ExternalFlash_MediaDetect *****************
 38122 ;; Defined at:
 38123 ;;		line 29 in file "external_flash.c"
 38124 ;; Parameters:    Size  Location     Type
 38125 ;;  config          2    0[BANK0 ] PTR void 
 38126 ;;		 -> NULL(0), 
 38127 ;; Auto vars:     Size  Location     Type
 38128 ;;		None
 38129 ;; Return value:  Size  Location     Type
 38130 ;;                  1    wreg      unsigned char 
 38131 ;; Registers used:
 38132 ;;		wreg
 38133 ;; Tracked objects:
 38134 ;;		On entry : 0/0
 38135 ;;		On exit  : 0/0
 38136 ;;		Unchanged: 0/0
 38137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38138 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38139 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38140 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38141 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38142 ;;Total ram usage:        2 bytes
 38143 ;; Hardware stack levels used:    1
 38144 ;; Hardware stack levels required when called:   10
 38145 ;; This function calls:
 38146 ;;		Nothing
 38147 ;; This function is called by:
 38148 ;;		_USBMSDInit
 38149 ;;		_MSDProcessCommand
 38150 ;; This function uses a non-reentrant model
 38151 ;;
 38152                           
 38153                           	psect	text156
 38154  015A36                     __ptext156:
 38155                           	opt stack 0
 38156  015A36                     _ExternalFlash_MediaDetect:
 38157                           	opt stack 0
 38158                           
 38159                           ; BSR set to: 0
 38160                           ;Skip over the trampoline to the duplicate function for level 2
 38161  015A36  B25F               	btfsc	btemp,1,c
 38162  015A38  EF40  F0AD         	goto	i2_ExternalFlash_MediaDetect
 38163  015A3C                     _ExternalFlash_MediaDetect$intlevel0:
 38164                           	opt stack 17
 38165                           
 38166                           ;external_flash.c: 31: return 1;
 38167                           
 38168                           ;incstack = 0
 38169  015A3C  0E01               	movlw	1
 38170  015A3E  0012               	return	
 38171  015A40                     __end_of_ExternalFlash_MediaDetect:
 38172                           	opt stack 0
 38173                           tosu	equ	0xFFF
 38174                           tosh	equ	0xFFE
 38175                           tosl	equ	0xFFD
 38176                           pclath	equ	0xFFA
 38177                           tblptru	equ	0xFF8
 38178                           tblptrh	equ	0xFF7
 38179                           tblptrl	equ	0xFF6
 38180                           tablat	equ	0xFF5
 38181                           prodh	equ	0xFF4
 38182                           prodl	equ	0xFF3
 38183                           intcon	equ	0xFF2
 38184                           postinc0	equ	0xFEE
 38185                           wreg	equ	0xFE8
 38186                           indf1	equ	0xFE7
 38187                           postinc1	equ	0xFE6
 38188                           postdec1	equ	0xFE5
 38189                           plusw1	equ	0xFE3
 38190                           fsr1h	equ	0xFE2
 38191                           fsr1l	equ	0xFE1
 38192                           indf2	equ	0xFDF
 38193                           postinc2	equ	0xFDE
 38194                           postdec2	equ	0xFDD
 38195                           plusw2	equ	0xFDB
 38196                           fsr2h	equ	0xFDA
 38197                           fsr2l	equ	0xFD9
 38198                           status	equ	0xFD8
 38199                           
 38200 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 38201 ;; Defined at:
 38202 ;;		line 73 in file "app_device_custom_hid.c"
 38203 ;; Parameters:    Size  Location     Type
 38204 ;;		None
 38205 ;; Auto vars:     Size  Location     Type
 38206 ;;  idx             1    0        unsigned char 
 38207 ;; Return value:  Size  Location     Type
 38208 ;;                  1    wreg      void 
 38209 ;; Registers used:
 38210 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38211 ;; Tracked objects:
 38212 ;;		On entry : 0/0
 38213 ;;		On exit  : 0/0
 38214 ;;		Unchanged: 0/0
 38215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38216 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38217 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38218 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38219 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38220 ;;Total ram usage:        0 bytes
 38221 ;; Hardware stack levels used:    1
 38222 ;; Hardware stack levels required when called:   17
 38223 ;; This function calls:
 38224 ;;		_USBTransferOnePacket
 38225 ;;		_api_parse
 38226 ;;		_api_prepare
 38227 ;; This function is called by:
 38228 ;;		_main
 38229 ;; This function uses a non-reentrant model
 38230 ;;
 38231                           
 38232                           	psect	text157
 38233  01324C                     __ptext157:
 38234                           	opt stack 0
 38235  01324C                     _APP_DeviceCustomHIDTasks:
 38236                           	opt stack 13
 38237                           
 38238                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 38239                           
 38240                           ;incstack = 0
 38241  01324C  0E20               	movlw	32
 38242  01324E  605E               	cpfslt	_USBDeviceState,c	;volatile
 38243  013250  D001               	goto	l944
 38244  013252  0012               	return	
 38245  013254                     l944:
 38246                           
 38247                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 38248  013254  B265               	btfsc	3941,1,c	;volatile
 38249  013256  0012               	return	
 38250                           
 38251                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 38252                           
 38253                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 38254  013258  0101               	movlb	1	; () banked
 38255  01325A  5143               	movf	_USBOutHandle& (0+255),w,b
 38256  01325C  1144               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 38257  01325E  B4D8               	btfsc	status,2,c
 38258  013260  D006               	goto	u17190
 38259                           
 38260                           ; BSR set to: 1
 38261  013262  C143  FFD9         	movff	_USBOutHandle,fsr2l
 38262  013266  C144  FFDA         	movff	_USBOutHandle+1,fsr2h
 38263  01326A  BEDF               	btfsc	indf2,7,c
 38264  01326C  0012               	return	
 38265  01326E                     u17190:
 38266                           
 38267                           ; BSR set to: 1
 38268                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 38269                           
 38270                           ; BSR set to: 1
 38271  01326E  5141               	movf	_USBInHandle& (0+255),w,b
 38272  013270  1142               	iorwf	(_USBInHandle+1)& (0+255),w,b
 38273  013272  B4D8               	btfsc	status,2,c
 38274  013274  D006               	goto	u17210
 38275                           
 38276                           ; BSR set to: 1
 38277  013276  C141  FFD9         	movff	_USBInHandle,fsr2l
 38278  01327A  C142  FFDA         	movff	_USBInHandle+1,fsr2h
 38279  01327E  BEDF               	btfsc	indf2,7,c
 38280  013280  D01B               	goto	l950
 38281  013282                     u17210:
 38282                           
 38283                           ; BSR set to: 1
 38284                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 38285                           
 38286                           ; BSR set to: 1
 38287  013282  0E80               	movlw	low _ReceivedDataBuffer
 38288  013284  0100               	movlb	0	; () banked
 38289  013286  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 38290  013288  0E03               	movlw	high _ReceivedDataBuffer
 38291  01328A  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 38292  01328C  0E40               	movlw	low _ToSendDataBuffer
 38293  01328E  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 38294  013290  0E03               	movlw	high _ToSendDataBuffer
 38295  013292  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 38296  013294  ECDC  F08F         	call	_api_prepare	;wreg free
 38297                           
 38298                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 38299  013298  0E01               	movlw	1
 38300  01329A  0100               	movlb	0	; () banked
 38301  01329C  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38302  01329E  0E40               	movlw	low _ToSendDataBuffer
 38303  0132A0  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38304  0132A2  0E03               	movlw	high _ToSendDataBuffer
 38305  0132A4  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38306  0132A6  0E40               	movlw	64
 38307  0132A8  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38308  0132AA  0E01               	movlw	1
 38309  0132AC  EC35  F088         	call	_USBTransferOnePacket
 38310  0132B0  C060  F141         	movff	?_USBTransferOnePacket,_USBInHandle
 38311  0132B4  C061  F142         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 38312  0132B8                     l950:
 38313                           
 38314                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 38315  0132B8  0E80               	movlw	low _ReceivedDataBuffer
 38316  0132BA  0100               	movlb	0	; () banked
 38317  0132BC  6FC6               	movwf	api_parse@inBuffer& (0+255),b
 38318  0132BE  0E03               	movlw	high _ReceivedDataBuffer
 38319  0132C0  6FC7               	movwf	(api_parse@inBuffer+1)& (0+255),b
 38320  0132C2  0E40               	movlw	64
 38321  0132C4  6FC8               	movwf	api_parse@receivedDataLength& (0+255),b
 38322  0132C6  0E40               	movlw	low _ToSendDataBuffer
 38323  0132C8  6FC9               	movwf	api_parse@outBuffer& (0+255),b
 38324  0132CA  0E03               	movlw	high _ToSendDataBuffer
 38325  0132CC  6FCA               	movwf	(api_parse@outBuffer+1)& (0+255),b
 38326  0132CE  EC6E  F084         	call	_api_parse	;wreg free
 38327                           
 38328                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 38329  0132D2  0E00               	movlw	0
 38330  0132D4  0100               	movlb	0	; () banked
 38331  0132D6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 38332  0132D8  0E80               	movlw	low _ReceivedDataBuffer
 38333  0132DA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 38334  0132DC  0E03               	movlw	high _ReceivedDataBuffer
 38335  0132DE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 38336  0132E0  0E40               	movlw	64
 38337  0132E2  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 38338  0132E4  0E01               	movlw	1
 38339  0132E6  EC35  F088         	call	_USBTransferOnePacket
 38340  0132EA  C060  F143         	movff	?_USBTransferOnePacket,_USBOutHandle
 38341  0132EE  C061  F144         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 38342  0132F2  0012               	return	
 38343  0132F4                     __end_of_APP_DeviceCustomHIDTasks:
 38344                           	opt stack 0
 38345                           tosu	equ	0xFFF
 38346                           tosh	equ	0xFFE
 38347                           tosl	equ	0xFFD
 38348                           pclath	equ	0xFFA
 38349                           tblptru	equ	0xFF8
 38350                           tblptrh	equ	0xFF7
 38351                           tblptrl	equ	0xFF6
 38352                           tablat	equ	0xFF5
 38353                           prodh	equ	0xFF4
 38354                           prodl	equ	0xFF3
 38355                           intcon	equ	0xFF2
 38356                           postinc0	equ	0xFEE
 38357                           wreg	equ	0xFE8
 38358                           indf1	equ	0xFE7
 38359                           postinc1	equ	0xFE6
 38360                           postdec1	equ	0xFE5
 38361                           plusw1	equ	0xFE3
 38362                           fsr1h	equ	0xFE2
 38363                           fsr1l	equ	0xFE1
 38364                           indf2	equ	0xFDF
 38365                           postinc2	equ	0xFDE
 38366                           postdec2	equ	0xFDD
 38367                           plusw2	equ	0xFDB
 38368                           fsr2h	equ	0xFDA
 38369                           fsr2l	equ	0xFD9
 38370                           status	equ	0xFD8
 38371                           
 38372 ;; *************** function _api_prepare *****************
 38373 ;; Defined at:
 38374 ;;		line 38 in file "api.c"
 38375 ;; Parameters:    Size  Location     Type
 38376 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 38377 ;;		 -> ReceivedDataBuffer(64), 
 38378 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 38379 ;;		 -> ToSendDataBuffer(64), 
 38380 ;; Auto vars:     Size  Location     Type
 38381 ;;  command         1   20[BANK0 ] enum E6715
 38382 ;; Return value:  Size  Location     Type
 38383 ;;                  1    wreg      void 
 38384 ;; Registers used:
 38385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 38386 ;; Tracked objects:
 38387 ;;		On entry : 0/0
 38388 ;;		On exit  : 0/0
 38389 ;;		Unchanged: 0/0
 38390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38392 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38394 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38395 ;;Total ram usage:        5 bytes
 38396 ;; Hardware stack levels used:    1
 38397 ;; Hardware stack levels required when called:   12
 38398 ;; This function calls:
 38399 ;;		__fill_buffer_get_display
 38400 ;;		__fill_buffer_get_mode_details
 38401 ;;		__fill_buffer_get_status
 38402 ;;		_memcpy
 38403 ;; This function is called by:
 38404 ;;		_APP_DeviceCustomHIDTasks
 38405 ;; This function uses a non-reentrant model
 38406 ;;
 38407                           
 38408                           	psect	text158
 38409  011FB8                     __ptext158:
 38410                           	opt stack 0
 38411  011FB8                     _api_prepare:
 38412                           	opt stack 17
 38413                           
 38414                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 38415                           
 38416                           ;incstack = 0
 38417  011FB8  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 38418  011FBC  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 38419  011FC0  50DF               	movf	indf2,w,c
 38420  011FC2  0100               	movlb	0	; () banked
 38421  011FC4  6F74               	movwf	api_prepare@command& (0+255),b
 38422                           
 38423                           ; BSR set to: 0
 38424                           ;api.c: 42: if(command>0x7F)
 38425  011FC6  0E7F               	movlw	127
 38426  011FC8  6574               	cpfsgt	api_prepare@command& (0+255),b
 38427  011FCA  D051               	goto	l2236
 38428                           
 38429                           ; BSR set to: 0
 38430                           ;api.c: 49: outBuffer[0] = 0x99;
 38431                           
 38432                           ; BSR set to: 0
 38433                           
 38434                           ;api.c: 45: {;api.c: 48: default:
 38435                           
 38436                           ; BSR set to: 0
 38437                           ;api.c: 43: {;api.c: 44: switch(command)
 38438  011FCC  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38439  011FD0  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38440  011FD4  0E99               	movlw	153
 38441  011FD6  6EDF               	movwf	indf2,c
 38442                           
 38443                           ; BSR set to: 0
 38444                           ;api.c: 50: outBuffer[1] = 0x99;
 38445  011FD8  EE20 F001          	lfsr	2,1
 38446  011FDC  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38447  011FDE  26D9               	addwf	fsr2l,f,c
 38448  011FE0  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38449  011FE2  22DA               	addwfc	fsr2h,f,c
 38450  011FE4  0E99               	movlw	153
 38451  011FE6  6EDF               	movwf	indf2,c
 38452                           
 38453                           ;api.c: 51: }
 38454  011FE8  0012               	return	
 38455  011FEA                     
 38456                           ; BSR set to: 0
 38457                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 38458                           
 38459                           ; BSR set to: 0
 38460  011FEA  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 38461  011FEE  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 38462  011FF2  EC50  F077         	call	__fill_buffer_get_status	;wreg free
 38463                           
 38464                           ;api.c: 65: break;
 38465  011FF6  0012               	return	
 38466  011FF8                     
 38467                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 38468  011FF8  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38469  011FFC  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38470  012000  0E00               	movlw	0
 38471  012002  0100               	movlb	0	; () banked
 38472  012004  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38473  012006  ECBF  F096         	call	__fill_buffer_get_display	;wreg free
 38474                           
 38475                           ;api.c: 70: break;
 38476  01200A  0012               	return	
 38477  01200C                     
 38478                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 38479  01200C  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 38480  012010  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 38481  012014  0E01               	movlw	1
 38482  012016  0100               	movlb	0	; () banked
 38483  012018  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 38484  01201A  ECBF  F096         	call	__fill_buffer_get_display	;wreg free
 38485                           
 38486                           ;api.c: 75: break;
 38487  01201E  0012               	return	
 38488  012020                     
 38489                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 38490  012020  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 38491  012024  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 38492  012028  EC2C  F07A         	call	__fill_buffer_get_mode_details	;wreg free
 38493                           
 38494                           ;api.c: 80: break;
 38495  01202C  0012               	return	
 38496  01202E                     
 38497                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 38498  01202E  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 38499  012032  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 38500  012036  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 38501  01203A  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 38502  01203E  0E00               	movlw	0
 38503  012040  0100               	movlb	0	; () banked
 38504  012042  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38505  012044  0E40               	movlw	64
 38506  012046  6F64               	movwf	memcpy@n& (0+255),b
 38507  012048  EC5D  F0A2         	call	_memcpy	;wreg free
 38508                           
 38509                           ;api.c: 85: break;
 38510  01204C  0012               	return	
 38511  01204E                     
 38512                           ;api.c: 88: outBuffer[0] = 0x99;
 38513  01204E  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 38514  012052  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 38515  012056  0E99               	movlw	153
 38516  012058  6EDF               	movwf	indf2,c
 38517                           
 38518                           ;api.c: 89: outBuffer[1] = 0x99;
 38519  01205A  0100               	movlb	0	; () banked
 38520  01205C  EE20 F001          	lfsr	2,1
 38521  012060  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 38522  012062  26D9               	addwf	fsr2l,f,c
 38523  012064  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 38524  012066  22DA               	addwfc	fsr2h,f,c
 38525  012068  0E99               	movlw	153
 38526  01206A  6EDF               	movwf	indf2,c
 38527                           
 38528                           ;api.c: 90: }
 38529  01206C  0012               	return	
 38530  01206E                     l2236:
 38531                           
 38532                           ; BSR set to: 0
 38533                           
 38534                           ; BSR set to: 0
 38535  01206E  5174               	movf	api_prepare@command& (0+255),w,b
 38536                           
 38537                           ; Switch size 1, requested type "space"
 38538                           ; Number of cases is 6, Range of values is 0 to 32
 38539                           ; switch strategies available:
 38540                           ; Name         Instructions Cycles
 38541                           ; simple_byte           19    10 (average)
 38542                           ;	Chosen strategy is simple_byte
 38543  012070  0A00               	xorlw	0	; case 0
 38544  012072  B4D8               	btfsc	status,2,c
 38545  012074  0012               	return	
 38546  012076  0A10               	xorlw	16	; case 16
 38547  012078  B4D8               	btfsc	status,2,c
 38548  01207A  D7B7               	goto	l2239
 38549  01207C  0A01               	xorlw	1	; case 17
 38550  01207E  B4D8               	btfsc	status,2,c
 38551  012080  D7BB               	goto	l2240
 38552  012082  0A03               	xorlw	3	; case 18
 38553  012084  B4D8               	btfsc	status,2,c
 38554  012086  D7C2               	goto	l2241
 38555  012088  0A01               	xorlw	1	; case 19
 38556  01208A  B4D8               	btfsc	status,2,c
 38557  01208C  D7C9               	goto	l2242
 38558  01208E  0A33               	xorlw	51	; case 32
 38559  012090  B4D8               	btfsc	status,2,c
 38560  012092  D7CD               	goto	l2243
 38561  012094  D7DC               	goto	l2244
 38562  012096                     __end_of_api_prepare:
 38563                           	opt stack 0
 38564                           tosu	equ	0xFFF
 38565                           tosh	equ	0xFFE
 38566                           tosl	equ	0xFFD
 38567                           pclath	equ	0xFFA
 38568                           tblptru	equ	0xFF8
 38569                           tblptrh	equ	0xFF7
 38570                           tblptrl	equ	0xFF6
 38571                           tablat	equ	0xFF5
 38572                           prodh	equ	0xFF4
 38573                           prodl	equ	0xFF3
 38574                           intcon	equ	0xFF2
 38575                           postinc0	equ	0xFEE
 38576                           wreg	equ	0xFE8
 38577                           indf1	equ	0xFE7
 38578                           postinc1	equ	0xFE6
 38579                           postdec1	equ	0xFE5
 38580                           plusw1	equ	0xFE3
 38581                           fsr1h	equ	0xFE2
 38582                           fsr1l	equ	0xFE1
 38583                           indf2	equ	0xFDF
 38584                           postinc2	equ	0xFDE
 38585                           postdec2	equ	0xFDD
 38586                           plusw2	equ	0xFDB
 38587                           fsr2h	equ	0xFDA
 38588                           fsr2l	equ	0xFD9
 38589                           status	equ	0xFD8
 38590                           
 38591 ;; *************** function __fill_buffer_get_status *****************
 38592 ;; Defined at:
 38593 ;;		line 171 in file "api.c"
 38594 ;; Parameters:    Size  Location     Type
 38595 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 38596 ;;		 -> ToSendDataBuffer(64), 
 38597 ;; Auto vars:     Size  Location     Type
 38598 ;;		None
 38599 ;; Return value:  Size  Location     Type
 38600 ;;                  1    wreg      void 
 38601 ;; Registers used:
 38602 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 38603 ;; Tracked objects:
 38604 ;;		On entry : 0/0
 38605 ;;		On exit  : 0/0
 38606 ;;		Unchanged: 0/0
 38607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38608 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38609 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38611 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38612 ;;Total ram usage:        2 bytes
 38613 ;; Hardware stack levels used:    1
 38614 ;; Hardware stack levels required when called:   11
 38615 ;; This function calls:
 38616 ;;		_memcpy
 38617 ;; This function is called by:
 38618 ;;		_api_prepare
 38619 ;; This function uses a non-reentrant model
 38620 ;;
 38621                           
 38622                           	psect	text159
 38623  00EEA0                     __ptext159:
 38624                           	opt stack 0
 38625  00EEA0                     __fill_buffer_get_status:
 38626                           	opt stack 17
 38627                           
 38628                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 38629                           
 38630                           ;incstack = 0
 38631  00EEA0  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 38632  00EEA4  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 38633  00EEA8  0E10               	movlw	16
 38634  00EEAA  6EDF               	movwf	indf2,c
 38635                           
 38636                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 38637  00EEAC  0100               	movlb	0	; () banked
 38638  00EEAE  EE20 F001          	lfsr	2,1
 38639  00EEB2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38640  00EEB4  26D9               	addwf	fsr2l,f,c
 38641  00EEB6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38642  00EEB8  22DA               	addwfc	fsr2h,f,c
 38643  00EEBA  0EBC               	movlw	188
 38644  00EEBC  6EDF               	movwf	indf2,c
 38645                           
 38646                           ; BSR set to: 0
 38647                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 38648  00EEBE  EE20 F002          	lfsr	2,2
 38649  00EEC2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38650  00EEC4  26D9               	addwf	fsr2l,f,c
 38651  00EEC6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38652  00EEC8  22DA               	addwfc	fsr2h,f,c
 38653  00EECA  0E26               	movlw	38
 38654  00EECC  6EDF               	movwf	indf2,c
 38655                           
 38656                           ; BSR set to: 0
 38657                           ;api.c: 181: outBuffer[3] = 0x00;
 38658  00EECE  EE20 F003          	lfsr	2,3
 38659  00EED2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38660  00EED4  26D9               	addwf	fsr2l,f,c
 38661  00EED6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38662  00EED8  22DA               	addwfc	fsr2h,f,c
 38663  00EEDA  0E00               	movlw	0
 38664  00EEDC  6EDF               	movwf	indf2,c
 38665                           
 38666                           ; BSR set to: 0
 38667                           ;api.c: 182: outBuffer[4] = 0x05;
 38668  00EEDE  EE20 F004          	lfsr	2,4
 38669  00EEE2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38670  00EEE4  26D9               	addwf	fsr2l,f,c
 38671  00EEE6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38672  00EEE8  22DA               	addwfc	fsr2h,f,c
 38673  00EEEA  0E05               	movlw	5
 38674  00EEEC  6EDF               	movwf	indf2,c
 38675                           
 38676                           ; BSR set to: 0
 38677                           ;api.c: 183: outBuffer[5] = 0x05;
 38678  00EEEE  EE20 F005          	lfsr	2,5
 38679  00EEF2  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38680  00EEF4  26D9               	addwf	fsr2l,f,c
 38681  00EEF6  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38682  00EEF8  22DA               	addwfc	fsr2h,f,c
 38683  00EEFA  0E05               	movlw	5
 38684  00EEFC  6EDF               	movwf	indf2,c
 38685                           
 38686                           ; BSR set to: 0
 38687                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 38688  00EEFE  EE20 F006          	lfsr	2,6
 38689  00EF02  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38690  00EF04  26D9               	addwf	fsr2l,f,c
 38691  00EF06  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38692  00EF08  22DA               	addwfc	fsr2h,f,c
 38693  00EF0A  C171  FFDF         	movff	_os,indf2	;volatile
 38694                           
 38695                           ; BSR set to: 0
 38696                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 38697  00EF0E  EE20 F007          	lfsr	2,7
 38698  00EF12  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38699  00EF14  26D9               	addwf	fsr2l,f,c
 38700  00EF16  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38701  00EF18  22DA               	addwfc	fsr2h,f,c
 38702  00EF1A  C172  FFDF         	movff	_os+1,indf2	;volatile
 38703                           
 38704                           ; BSR set to: 0
 38705                           ;api.c: 188: outBuffer[8] = os.done;
 38706  00EF1E  EE20 F008          	lfsr	2,8
 38707  00EF22  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38708  00EF24  26D9               	addwf	fsr2l,f,c
 38709  00EF26  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38710  00EF28  22DA               	addwfc	fsr2h,f,c
 38711  00EF2A  C173  FFDF         	movff	_os+2,indf2	;volatile
 38712                           
 38713                           ; BSR set to: 0
 38714                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 38715  00EF2E  EE20 F009          	lfsr	2,9
 38716  00EF32  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38717  00EF34  26D9               	addwf	fsr2l,f,c
 38718  00EF36  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38719  00EF38  22DA               	addwfc	fsr2h,f,c
 38720  00EF3A  C174  FFDF         	movff	_os+3,indf2	;volatile
 38721                           
 38722                           ; BSR set to: 0
 38723                           ;api.c: 190: outBuffer[10] = os.button1;
 38724  00EF3E  EE20 F00A          	lfsr	2,10
 38725  00EF42  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38726  00EF44  26D9               	addwf	fsr2l,f,c
 38727  00EF46  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38728  00EF48  22DA               	addwfc	fsr2h,f,c
 38729  00EF4A  C175  FFDF         	movff	_os+4,indf2	;volatile
 38730                           
 38731                           ; BSR set to: 0
 38732                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 38733  00EF4E  EE20 F00B          	lfsr	2,11
 38734  00EF52  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38735  00EF54  26D9               	addwf	fsr2l,f,c
 38736  00EF56  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38737  00EF58  22DA               	addwfc	fsr2h,f,c
 38738  00EF5A  C176  FFDF         	movff	_os+5,indf2	;volatile
 38739                           
 38740                           ; BSR set to: 0
 38741                           ;api.c: 192: outBuffer[12] = os.button2;
 38742  00EF5E  EE20 F00C          	lfsr	2,12
 38743  00EF62  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38744  00EF64  26D9               	addwf	fsr2l,f,c
 38745  00EF66  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38746  00EF68  22DA               	addwfc	fsr2h,f,c
 38747  00EF6A  C177  FFDF         	movff	_os+6,indf2	;volatile
 38748                           
 38749                           ; BSR set to: 0
 38750                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 38751  00EF6E  0E0D               	movlw	13
 38752  00EF70  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38753  00EF72  6F60               	movwf	memcpy@d1& (0+255),b
 38754  00EF74  0E00               	movlw	0
 38755  00EF76  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38756  00EF78  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38757  00EF7A  0E78               	movlw	low (_os+7)
 38758  00EF7C  6F62               	movwf	memcpy@s1& (0+255),b
 38759  00EF7E  0E01               	movlw	high (_os+7)
 38760  00EF80  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38761  00EF82  0E00               	movlw	0
 38762  00EF84  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38763  00EF86  0E04               	movlw	4
 38764  00EF88  6F64               	movwf	memcpy@n& (0+255),b
 38765  00EF8A  EC5D  F0A2         	call	_memcpy	;wreg free
 38766                           
 38767                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 38768  00EF8E  0E11               	movlw	17
 38769  00EF90  0100               	movlb	0	; () banked
 38770  00EF92  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38771  00EF94  6F60               	movwf	memcpy@d1& (0+255),b
 38772  00EF96  0E00               	movlw	0
 38773  00EF98  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38774  00EF9A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38775  00EF9C  0E7C               	movlw	low (_os+11)
 38776  00EF9E  6F62               	movwf	memcpy@s1& (0+255),b
 38777  00EFA0  0E01               	movlw	high (_os+11)
 38778  00EFA2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38779  00EFA4  0E00               	movlw	0
 38780  00EFA6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38781  00EFA8  0E04               	movlw	4
 38782  00EFAA  6F64               	movwf	memcpy@n& (0+255),b
 38783  00EFAC  EC5D  F0A2         	call	_memcpy	;wreg free
 38784                           
 38785                           ;api.c: 203: outBuffer[21] = os.displayState;
 38786  00EFB0  0100               	movlb	0	; () banked
 38787  00EFB2  EE20 F015          	lfsr	2,21
 38788  00EFB6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38789  00EFB8  26D9               	addwf	fsr2l,f,c
 38790  00EFBA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38791  00EFBC  22DA               	addwfc	fsr2h,f,c
 38792  00EFBE  C17E  FFDF         	movff	_os+13,indf2	;volatile
 38793                           
 38794                           ; BSR set to: 0
 38795                           ;api.c: 204: outBuffer[22] = os.beep_count;
 38796  00EFC2  EE20 F016          	lfsr	2,22
 38797  00EFC6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38798  00EFC8  26D9               	addwf	fsr2l,f,c
 38799  00EFCA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38800  00EFCC  22DA               	addwfc	fsr2h,f,c
 38801  00EFCE  C197  FFDF         	movff	_os+38,indf2	;volatile
 38802                           
 38803                           ; BSR set to: 0
 38804                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 38805  00EFD2  EE20 F017          	lfsr	2,23
 38806  00EFD6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38807  00EFD8  26D9               	addwf	fsr2l,f,c
 38808  00EFDA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38809  00EFDC  22DA               	addwfc	fsr2h,f,c
 38810  00EFDE  C198  FFDF         	movff	_os+39,indf2	;volatile
 38811                           
 38812                           ; BSR set to: 0
 38813                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 38814  00EFE2  EE20 F018          	lfsr	2,24
 38815  00EFE6  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38816  00EFE8  26D9               	addwf	fsr2l,f,c
 38817  00EFEA  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38818  00EFEC  22DA               	addwfc	fsr2h,f,c
 38819  00EFEE  0101               	movlb	1	; () banked
 38820  00EFF0  5199               	movf	(_os+40)& (0+255),w,b	;volatile
 38821  00EFF2  6EDF               	movwf	indf2,c
 38822                           
 38823                           ; BSR set to: 1
 38824                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 38825  00EFF4  0100               	movlb	0	; () banked
 38826  00EFF6  EE20 F019          	lfsr	2,25
 38827  00EFFA  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38828  00EFFC  26D9               	addwf	fsr2l,f,c
 38829  00EFFE  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38830  00F000  22DA               	addwfc	fsr2h,f,c
 38831  00F002  C19A  FFDF         	movff	_os+41,indf2	;volatile
 38832                           
 38833                           ; BSR set to: 0
 38834                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 38835  00F006  EE20 F01A          	lfsr	2,26
 38836  00F00A  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38837  00F00C  26D9               	addwf	fsr2l,f,c
 38838  00F00E  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38839  00F010  22DA               	addwfc	fsr2h,f,c
 38840  00F012  0101               	movlb	1	; () banked
 38841  00F014  519B               	movf	(_os+42)& (0+255),w,b	;volatile
 38842  00F016  6EDF               	movwf	indf2,c
 38843                           
 38844                           ; BSR set to: 1
 38845                           ;api.c: 209: outBuffer[27] = os.fan_on;
 38846  00F018  0100               	movlb	0	; () banked
 38847  00F01A  EE20 F01B          	lfsr	2,27
 38848  00F01E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38849  00F020  26D9               	addwf	fsr2l,f,c
 38850  00F022  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38851  00F024  22DA               	addwfc	fsr2h,f,c
 38852  00F026  C19F  FFDF         	movff	_os+46,indf2	;volatile
 38853                           
 38854                           ; BSR set to: 0
 38855                           ;api.c: 210: outBuffer[28] = os.brake_on;
 38856  00F02A  EE20 F01C          	lfsr	2,28
 38857  00F02E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38858  00F030  26D9               	addwf	fsr2l,f,c
 38859  00F032  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38860  00F034  22DA               	addwfc	fsr2h,f,c
 38861  00F036  C1A0  FFDF         	movff	_os+47,indf2	;volatile
 38862                           
 38863                           ; BSR set to: 0
 38864                           ;api.c: 211: outBuffer[29] = os.busy;
 38865  00F03A  EE20 F01D          	lfsr	2,29
 38866  00F03E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38867  00F040  26D9               	addwf	fsr2l,f,c
 38868  00F042  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38869  00F044  22DA               	addwfc	fsr2h,f,c
 38870  00F046  C17F  FFDF         	movff	_os+14,indf2	;volatile
 38871                           
 38872                           ; BSR set to: 0
 38873                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 38874  00F04A  EE20 F01E          	lfsr	2,30
 38875  00F04E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38876  00F050  26D9               	addwf	fsr2l,f,c
 38877  00F052  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38878  00F054  22DA               	addwfc	fsr2h,f,c
 38879  00F056  C194  FFDF         	movff	_os+35,indf2	;volatile
 38880                           
 38881                           ; BSR set to: 0
 38882                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 38883  00F05A  EE20 F01F          	lfsr	2,31
 38884  00F05E  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38885  00F060  26D9               	addwf	fsr2l,f,c
 38886  00F062  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38887  00F064  22DA               	addwfc	fsr2h,f,c
 38888  00F066  0101               	movlb	1	; () banked
 38889  00F068  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 38890  00F06A  6EDF               	movwf	indf2,c
 38891                           
 38892                           ; BSR set to: 1
 38893                           ;api.c: 228: memcpy(&outBuffer[42], &config, 22);
 38894  00F06C  0E2A               	movlw	42
 38895  00F06E  0100               	movlb	0	; () banked
 38896  00F070  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 38897  00F072  6F60               	movwf	memcpy@d1& (0+255),b
 38898  00F074  0E00               	movlw	0
 38899  00F076  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 38900  00F078  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 38901  00F07A  0EA1               	movlw	low _config
 38902  00F07C  6F62               	movwf	memcpy@s1& (0+255),b
 38903  00F07E  0E01               	movlw	high _config
 38904  00F080  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 38905  00F082  0E00               	movlw	0
 38906  00F084  6F65               	movwf	(memcpy@n+1)& (0+255),b
 38907  00F086  0E16               	movlw	22
 38908  00F088  6F64               	movwf	memcpy@n& (0+255),b
 38909  00F08A  EC5D  F0A2         	call	_memcpy	;wreg free
 38910  00F08E  0012               	return		;funcret
 38911  00F090                     __end_of__fill_buffer_get_status:
 38912                           	opt stack 0
 38913                           tosu	equ	0xFFF
 38914                           tosh	equ	0xFFE
 38915                           tosl	equ	0xFFD
 38916                           pclath	equ	0xFFA
 38917                           tblptru	equ	0xFF8
 38918                           tblptrh	equ	0xFF7
 38919                           tblptrl	equ	0xFF6
 38920                           tablat	equ	0xFF5
 38921                           prodh	equ	0xFF4
 38922                           prodl	equ	0xFF3
 38923                           intcon	equ	0xFF2
 38924                           postinc0	equ	0xFEE
 38925                           wreg	equ	0xFE8
 38926                           indf1	equ	0xFE7
 38927                           postinc1	equ	0xFE6
 38928                           postdec1	equ	0xFE5
 38929                           plusw1	equ	0xFE3
 38930                           fsr1h	equ	0xFE2
 38931                           fsr1l	equ	0xFE1
 38932                           indf2	equ	0xFDF
 38933                           postinc2	equ	0xFDE
 38934                           postdec2	equ	0xFDD
 38935                           plusw2	equ	0xFDB
 38936                           fsr2h	equ	0xFDA
 38937                           fsr2l	equ	0xFD9
 38938                           status	equ	0xFD8
 38939                           
 38940 ;; *************** function _memcpy *****************
 38941 ;; Defined at:
 38942 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 38943 ;; Parameters:    Size  Location     Type
 38944 ;;  d1              2    0[BANK0 ] PTR void 
 38945 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38946 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38947 ;;  s1              2    2[BANK0 ] PTR const void 
 38948 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38949 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38950 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38951 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38952 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38953 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38954 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38955 ;;  n               2    4[BANK0 ] unsigned int 
 38956 ;; Auto vars:     Size  Location     Type
 38957 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 38958 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 38959 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 38960 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 38961 ;;		 -> dc_arc2(80), dc_arc1(80), os.current_position_in_degrees(2), dc_divide2(80), 
 38962 ;;		 -> dc_divide1(80), dc_setup2(80), dc_setup1(80), dc_main(80), 
 38963 ;;		 -> dc_startup(80), os.current_position_in_steps(4), config(28), ReceivedDataBuffer(64), 
 38964 ;;		 -> os(48), inq_resp(36), RAM(3759), 
 38965 ;;  d               2    6[BANK0 ] PTR unsigned char 
 38966 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 38967 ;;		 -> msd_buffer(512), SetupPkt(8), 
 38968 ;;  tmp             1   10[BANK0 ] unsigned char 
 38969 ;; Return value:  Size  Location     Type
 38970 ;;                  2    0[BANK0 ] PTR void 
 38971 ;; Registers used:
 38972 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 38973 ;; Tracked objects:
 38974 ;;		On entry : 0/0
 38975 ;;		On exit  : 0/0
 38976 ;;		Unchanged: 0/0
 38977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38978 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38979 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38981 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38982 ;;Total ram usage:       11 bytes
 38983 ;; Hardware stack levels used:    1
 38984 ;; Hardware stack levels required when called:   10
 38985 ;; This function calls:
 38986 ;;		Nothing
 38987 ;; This function is called by:
 38988 ;;		_MSDProcessCommandMediaPresent
 38989 ;;		__display_start
 38990 ;;		_display_prepare
 38991 ;;		__flash_set_page_size
 38992 ;;		_fat_create_file
 38993 ;;		_api_prepare
 38994 ;;		__fill_buffer_get_status
 38995 ;; This function uses a non-reentrant model
 38996 ;;
 38997                           
 38998                           	psect	text160
 38999  0144BA                     __ptext160:
 39000                           	opt stack 0
 39001  0144BA                     _memcpy:
 39002                           	opt stack 17
 39003                           
 39004                           ;incstack = 0
 39005  0144BA  C062  F068         	movff	memcpy@s1,memcpy@s
 39006  0144BE  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 39007  0144C2  C060  F066         	movff	memcpy@d1,memcpy@d
 39008  0144C6  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 39009  0144CA  D01D               	goto	l3709
 39010  0144CC                     l12873:
 39011  0144CC  C068  FFF6         	movff	memcpy@s,tblptrl
 39012  0144D0  C069  FFF7         	movff	memcpy@s+1,tblptrh
 39013  0144D4  0E00               	movlw	low (__mediumconst shr (0+16))
 39014  0144D6  6EF8               	movwf	tblptru,c
 39015  0144D8  0E0E               	movlw	(high __ramtop+-1)
 39016  0144DA  64F7               	cpfsgt	tblptrh,c
 39017  0144DC  D003               	bra	u11187
 39018  0144DE  0008               	tblrd		*
 39019  0144E0  50F5               	movf	tablat,w,c
 39020  0144E2  D005               	bra	u11180
 39021  0144E4                     u11187:
 39022  0144E4  CFF6 FFE9          	movff	tblptrl,fsr0l
 39023  0144E8  CFF7 FFEA          	movff	tblptrh,fsr0h
 39024  0144EC  50EF               	movf	indf0,w,c
 39025  0144EE                     u11180:
 39026  0144EE  0100               	movlb	0	; () banked
 39027  0144F0  6F6A               	movwf	memcpy@tmp& (0+255),b
 39028                           
 39029                           ; BSR set to: 0
 39030  0144F2  4B68               	infsnz	memcpy@s& (0+255),f,b
 39031  0144F4  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 39032                           
 39033                           ; BSR set to: 0
 39034  0144F6  C066  FFD9         	movff	memcpy@d,fsr2l
 39035  0144FA  C067  FFDA         	movff	memcpy@d+1,fsr2h
 39036  0144FE  C06A  FFDF         	movff	memcpy@tmp,indf2
 39037                           
 39038                           ; BSR set to: 0
 39039  014502  4B66               	infsnz	memcpy@d& (0+255),f,b
 39040  014504  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 39041  014506                     l3709:
 39042                           
 39043                           ; BSR set to: 0
 39044  014506  0100               	movlb	0	; () banked
 39045  014508  0764               	decf	memcpy@n& (0+255),f,b
 39046  01450A  A0D8               	btfss	status,0,c
 39047  01450C  0765               	decf	(memcpy@n+1)& (0+255),f,b
 39048  01450E  2964               	incf	memcpy@n& (0+255),w,b
 39049  014510  E1DD               	bnz	l12873
 39050  014512  2965               	incf	(memcpy@n+1)& (0+255),w,b
 39051  014514  B4D8               	btfsc	status,2,c
 39052  014516  0012               	return	
 39053  014518  D7D9               	goto	l3710
 39054  01451A                     __end_of_memcpy:
 39055                           	opt stack 0
 39056                           tosu	equ	0xFFF
 39057                           tosh	equ	0xFFE
 39058                           tosl	equ	0xFFD
 39059                           pclath	equ	0xFFA
 39060                           tblptru	equ	0xFF8
 39061                           tblptrh	equ	0xFF7
 39062                           tblptrl	equ	0xFF6
 39063                           tablat	equ	0xFF5
 39064                           prodh	equ	0xFF4
 39065                           prodl	equ	0xFF3
 39066                           intcon	equ	0xFF2
 39067                           indf0	equ	0xFEF
 39068                           postinc0	equ	0xFEE
 39069                           fsr0h	equ	0xFEA
 39070                           fsr0l	equ	0xFE9
 39071                           wreg	equ	0xFE8
 39072                           indf1	equ	0xFE7
 39073                           postinc1	equ	0xFE6
 39074                           postdec1	equ	0xFE5
 39075                           plusw1	equ	0xFE3
 39076                           fsr1h	equ	0xFE2
 39077                           fsr1l	equ	0xFE1
 39078                           indf2	equ	0xFDF
 39079                           postinc2	equ	0xFDE
 39080                           postdec2	equ	0xFDD
 39081                           plusw2	equ	0xFDB
 39082                           fsr2h	equ	0xFDA
 39083                           fsr2l	equ	0xFD9
 39084                           status	equ	0xFD8
 39085                           
 39086 ;; *************** function __fill_buffer_get_mode_details *****************
 39087 ;; Defined at:
 39088 ;;		line 273 in file "api.c"
 39089 ;; Parameters:    Size  Location     Type
 39090 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 39091 ;;		 -> ToSendDataBuffer(64), 
 39092 ;; Auto vars:     Size  Location     Type
 39093 ;;		None
 39094 ;; Return value:  Size  Location     Type
 39095 ;;                  1    wreg      void 
 39096 ;; Registers used:
 39097 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39098 ;; Tracked objects:
 39099 ;;		On entry : 0/0
 39100 ;;		On exit  : 0/0
 39101 ;;		Unchanged: 0/0
 39102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39103 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39105 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39106 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39107 ;;Total ram usage:        4 bytes
 39108 ;; Hardware stack levels used:    1
 39109 ;; Hardware stack levels required when called:   10
 39110 ;; This function calls:
 39111 ;;		Nothing
 39112 ;; This function is called by:
 39113 ;;		_api_prepare
 39114 ;; This function uses a non-reentrant model
 39115 ;;
 39116                           
 39117                           	psect	text161
 39118  00F458                     __ptext161:
 39119                           	opt stack 0
 39120  00F458                     __fill_buffer_get_mode_details:
 39121                           	opt stack 18
 39122                           
 39123                           ;api.c: 276: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 39124                           
 39125                           ; BSR set to: 0
 39126                           ;incstack = 0
 39127  00F458  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 39128  00F45C  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 39129  00F460  0E13               	movlw	19
 39130  00F462  6EDF               	movwf	indf2,c
 39131                           
 39132                           ;api.c: 279: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39133  00F464  0100               	movlb	0	; () banked
 39134  00F466  EE20 F001          	lfsr	2,1
 39135  00F46A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39136  00F46C  26D9               	addwf	fsr2l,f,c
 39137  00F46E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39138  00F470  22DA               	addwfc	fsr2h,f,c
 39139  00F472  0EBC               	movlw	188
 39140  00F474  6EDF               	movwf	indf2,c
 39141                           
 39142                           ; BSR set to: 0
 39143                           ;api.c: 280: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39144  00F476  EE20 F002          	lfsr	2,2
 39145  00F47A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39146  00F47C  26D9               	addwf	fsr2l,f,c
 39147  00F47E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39148  00F480  22DA               	addwfc	fsr2h,f,c
 39149  00F482  0E26               	movlw	38
 39150  00F484  6EDF               	movwf	indf2,c
 39151                           
 39152                           ; BSR set to: 0
 39153                           ;api.c: 283: outBuffer[3] = os.displayState;
 39154  00F486  EE20 F003          	lfsr	2,3
 39155  00F48A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39156  00F48C  26D9               	addwf	fsr2l,f,c
 39157  00F48E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39158  00F490  22DA               	addwfc	fsr2h,f,c
 39159  00F492  C17E  FFDF         	movff	_os+13,indf2	;volatile
 39160                           
 39161                           ;api.c: 285: switch(os.displayState & 0x0F)
 39162  00F496  D090               	goto	l2279
 39163  00F498                     
 39164                           ; BSR set to: 0
 39165                           ;api.c: 291: case DISPLAY_STATE_SETUP2:;api.c: 292: outBuffer[4] = os.setup_step_size;
 39166                           
 39167                           ; BSR set to: 0
 39168                           
 39169                           ; BSR set to: 0
 39170  00F498  EE20 F004          	lfsr	2,4
 39171  00F49C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39172  00F49E  26D9               	addwf	fsr2l,f,c
 39173  00F4A0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39174  00F4A2  22DA               	addwfc	fsr2h,f,c
 39175  00F4A4  C181  FFDF         	movff	_os+16,indf2	;volatile
 39176                           
 39177                           ;api.c: 293: break;
 39178  00F4A8  0012               	return	
 39179  00F4AA                     
 39180                           ; BSR set to: 0
 39181                           ;api.c: 296: case DISPLAY_STATE_DIVIDE2:;api.c: 298: outBuffer[4] = os.divide_step_size;
 39182                           
 39183                           ; BSR set to: 0
 39184                           
 39185                           ; BSR set to: 0
 39186  00F4AA  EE20 F004          	lfsr	2,4
 39187  00F4AE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39188  00F4B0  26D9               	addwf	fsr2l,f,c
 39189  00F4B2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39190  00F4B4  22DA               	addwfc	fsr2h,f,c
 39191  00F4B6  C186  FFDF         	movff	_os+21,indf2	;volatile
 39192                           
 39193                           ;api.c: 299: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 39194  00F4BA  EE20 F005          	lfsr	2,5
 39195  00F4BE  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39196  00F4C0  26D9               	addwf	fsr2l,f,c
 39197  00F4C2  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39198  00F4C4  22DA               	addwfc	fsr2h,f,c
 39199  00F4C6  0101               	movlb	1	; () banked
 39200  00F4C8  5185               	movf	(_os+20)& (0+255),w,b	;volatile
 39201  00F4CA  6EDF               	movwf	indf2,c
 39202                           
 39203                           ;api.c: 300: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 39204  00F4CC  0100               	movlb	0	; () banked
 39205  00F4CE  EE20 F006          	lfsr	2,6
 39206  00F4D2  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39207  00F4D4  26D9               	addwf	fsr2l,f,c
 39208  00F4D6  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39209  00F4D8  22DA               	addwfc	fsr2h,f,c
 39210  00F4DA  C184  FFDF         	movff	_os+19,indf2	;volatile
 39211                           
 39212                           ;api.c: 301: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 39213  00F4DE  EE20 F007          	lfsr	2,7
 39214  00F4E2  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39215  00F4E4  26D9               	addwf	fsr2l,f,c
 39216  00F4E6  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39217  00F4E8  22DA               	addwfc	fsr2h,f,c
 39218  00F4EA  0101               	movlb	1	; () banked
 39219  00F4EC  518A               	movf	(_os+25)& (0+255),w,b	;volatile
 39220  00F4EE  6EDF               	movwf	indf2,c
 39221                           
 39222                           ;api.c: 302: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 39223  00F4F0  0100               	movlb	0	; () banked
 39224  00F4F2  EE20 F008          	lfsr	2,8
 39225  00F4F6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39226  00F4F8  26D9               	addwf	fsr2l,f,c
 39227  00F4FA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39228  00F4FC  22DA               	addwfc	fsr2h,f,c
 39229  00F4FE  C189  FFDF         	movff	_os+24,indf2	;volatile
 39230                           
 39231                           ;api.c: 303: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 39232  00F502  EE20 F009          	lfsr	2,9
 39233  00F506  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39234  00F508  26D9               	addwf	fsr2l,f,c
 39235  00F50A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39236  00F50C  22DA               	addwfc	fsr2h,f,c
 39237  00F50E  0101               	movlb	1	; () banked
 39238  00F510  5188               	movf	(_os+23)& (0+255),w,b	;volatile
 39239  00F512  6EDF               	movwf	indf2,c
 39240                           
 39241                           ;api.c: 304: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 39242  00F514  0100               	movlb	0	; () banked
 39243  00F516  EE20 F00A          	lfsr	2,10
 39244  00F51A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39245  00F51C  26D9               	addwf	fsr2l,f,c
 39246  00F51E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39247  00F520  22DA               	addwfc	fsr2h,f,c
 39248  00F522  C187  FFDF         	movff	_os+22,indf2	;volatile
 39249                           
 39250                           ;api.c: 305: break;
 39251  00F526  0012               	return	
 39252  00F528                     
 39253                           ; BSR set to: 0
 39254                           ;api.c: 308: case DISPLAY_STATE_ARC2:;api.c: 309: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 39255                           
 39256                           ; BSR set to: 0
 39257                           
 39258                           ; BSR set to: 0
 39259  00F528  EE20 F004          	lfsr	2,4
 39260  00F52C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39261  00F52E  26D9               	addwf	fsr2l,f,c
 39262  00F530  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39263  00F532  22DA               	addwfc	fsr2h,f,c
 39264  00F534  0101               	movlb	1	; () banked
 39265  00F536  518C               	movf	(_os+27)& (0+255),w,b	;volatile
 39266  00F538  6EDF               	movwf	indf2,c
 39267                           
 39268                           ;api.c: 310: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 39269  00F53A  0100               	movlb	0	; () banked
 39270  00F53C  EE20 F005          	lfsr	2,5
 39271  00F540  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39272  00F542  26D9               	addwf	fsr2l,f,c
 39273  00F544  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39274  00F546  22DA               	addwfc	fsr2h,f,c
 39275  00F548  C18B  FFDF         	movff	_os+26,indf2	;volatile
 39276                           
 39277                           ;api.c: 311: outBuffer[6] = os.arc_direction;
 39278  00F54C  EE20 F006          	lfsr	2,6
 39279  00F550  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39280  00F552  26D9               	addwf	fsr2l,f,c
 39281  00F554  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39282  00F556  22DA               	addwfc	fsr2h,f,c
 39283  00F558  C193  FFDF         	movff	_os+34,indf2	;volatile
 39284                           
 39285                           ;api.c: 312: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 39286  00F55C  EE20 F007          	lfsr	2,7
 39287  00F560  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39288  00F562  26D9               	addwf	fsr2l,f,c
 39289  00F564  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39290  00F566  22DA               	addwfc	fsr2h,f,c
 39291  00F568  0101               	movlb	1	; () banked
 39292  00F56A  5192               	movf	(_os+33)& (0+255),w,b	;volatile
 39293  00F56C  6EDF               	movwf	indf2,c
 39294                           
 39295                           ;api.c: 313: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 39296  00F56E  0100               	movlb	0	; () banked
 39297  00F570  EE20 F008          	lfsr	2,8
 39298  00F574  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39299  00F576  26D9               	addwf	fsr2l,f,c
 39300  00F578  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39301  00F57A  22DA               	addwfc	fsr2h,f,c
 39302  00F57C  C191  FFDF         	movff	_os+32,indf2	;volatile
 39303                           
 39304                           ; BSR set to: 0
 39305                           ;api.c: 317: break;
 39306                           
 39307                           ;api.c: 316: case DISPLAY_STATE_ZERO:
 39308                           
 39309                           ;api.c: 314: break;
 39310  00F580  0012               	return	
 39311  00F582                     
 39312                           ; BSR set to: 0
 39313                           ;api.c: 320: outBuffer[4] = os.manual_direction;
 39314                           
 39315                           ; BSR set to: 0
 39316  00F582  EE20 F004          	lfsr	2,4
 39317  00F586  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39318  00F588  26D9               	addwf	fsr2l,f,c
 39319  00F58A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39320  00F58C  22DA               	addwfc	fsr2h,f,c
 39321  00F58E  C196  FFDF         	movff	_os+37,indf2	;volatile
 39322                           
 39323                           ;api.c: 321: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 39324  00F592  EE20 F005          	lfsr	2,5
 39325  00F596  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39326  00F598  26D9               	addwf	fsr2l,f,c
 39327  00F59A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39328  00F59C  22DA               	addwfc	fsr2h,f,c
 39329  00F59E  0101               	movlb	1	; () banked
 39330  00F5A0  5195               	movf	(_os+36)& (0+255),w,b	;volatile
 39331  00F5A2  6EDF               	movwf	indf2,c
 39332                           
 39333                           ;api.c: 322: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 39334  00F5A4  0100               	movlb	0	; () banked
 39335  00F5A6  EE20 F006          	lfsr	2,6
 39336  00F5AA  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 39337  00F5AC  26D9               	addwf	fsr2l,f,c
 39338  00F5AE  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 39339  00F5B0  22DA               	addwfc	fsr2h,f,c
 39340  00F5B2  C194  FFDF         	movff	_os+35,indf2	;volatile
 39341                           
 39342                           ; BSR set to: 0
 39343                           ;api.c: 324: }
 39344                           
 39345                           ;api.c: 323: break;
 39346  00F5B6  0012               	return	
 39347  00F5B8                     l2279:
 39348                           
 39349                           ; BSR set to: 0
 39350                           
 39351                           ; BSR set to: 0
 39352  00F5B8  0101               	movlb	1	; () banked
 39353  00F5BA  517E               	movf	(_os+13)& (0+255),w,b	;volatile
 39354  00F5BC  0B0F               	andlw	15
 39355  00F5BE  0100               	movlb	0	; () banked
 39356  00F5C0  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 39357  00F5C2  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 39358                           
 39359                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39360                           ; Switch size 1, requested type "space"
 39361                           ; Number of cases is 1, Range of values is 0 to 0
 39362                           ; switch strategies available:
 39363                           ; Name         Instructions Cycles
 39364                           ; simple_byte            4     3 (average)
 39365                           ;	Chosen strategy is simple_byte
 39366  00F5C4  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 39367  00F5C6  0A00               	xorlw	0	; case 0
 39368  00F5C8  A4D8               	btfss	status,2,c
 39369  00F5CA  0012               	return	
 39370                           
 39371                           ; BSR set to: 0
 39372                           ; Switch size 1, requested type "space"
 39373                           ; Number of cases is 9, Range of values is 0 to 128
 39374                           ; switch strategies available:
 39375                           ; Name         Instructions Cycles
 39376                           ; simple_byte           28    15 (average)
 39377                           ;	Chosen strategy is simple_byte
 39378  00F5CC  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 39379  00F5CE  0A00               	xorlw	0	; case 0
 39380  00F5D0  B4D8               	btfsc	status,2,c
 39381  00F5D2  0012               	return	
 39382  00F5D4  0A10               	xorlw	16	; case 16
 39383  00F5D6  B4D8               	btfsc	status,2,c
 39384  00F5D8  D75F               	goto	l2282
 39385  00F5DA  0A30               	xorlw	48	; case 32
 39386  00F5DC  B4D8               	btfsc	status,2,c
 39387  00F5DE  D75C               	goto	l2282
 39388  00F5E0  0A10               	xorlw	16	; case 48
 39389  00F5E2  B4D8               	btfsc	status,2,c
 39390  00F5E4  D762               	goto	l2284
 39391  00F5E6  0A70               	xorlw	112	; case 64
 39392  00F5E8  B4D8               	btfsc	status,2,c
 39393  00F5EA  D75F               	goto	l2284
 39394  00F5EC  0A10               	xorlw	16	; case 80
 39395  00F5EE  B4D8               	btfsc	status,2,c
 39396  00F5F0  D79B               	goto	l2286
 39397  00F5F2  0A30               	xorlw	48	; case 96
 39398  00F5F4  B4D8               	btfsc	status,2,c
 39399  00F5F6  D798               	goto	l2286
 39400  00F5F8  0A10               	xorlw	16	; case 112
 39401  00F5FA  B4D8               	btfsc	status,2,c
 39402  00F5FC  0012               	return	
 39403  00F5FE  0AF0               	xorlw	240	; case 128
 39404  00F600  A4D8               	btfss	status,2,c
 39405  00F602  0012               	return	
 39406  00F604  D7BE               	goto	l2289
 39407  00F606                     __end_of__fill_buffer_get_mode_details:
 39408                           	opt stack 0
 39409                           tosu	equ	0xFFF
 39410                           tosh	equ	0xFFE
 39411                           tosl	equ	0xFFD
 39412                           pclath	equ	0xFFA
 39413                           tblptru	equ	0xFF8
 39414                           tblptrh	equ	0xFF7
 39415                           tblptrl	equ	0xFF6
 39416                           tablat	equ	0xFF5
 39417                           prodh	equ	0xFF4
 39418                           prodl	equ	0xFF3
 39419                           intcon	equ	0xFF2
 39420                           indf0	equ	0xFEF
 39421                           postinc0	equ	0xFEE
 39422                           fsr0h	equ	0xFEA
 39423                           fsr0l	equ	0xFE9
 39424                           wreg	equ	0xFE8
 39425                           indf1	equ	0xFE7
 39426                           postinc1	equ	0xFE6
 39427                           postdec1	equ	0xFE5
 39428                           plusw1	equ	0xFE3
 39429                           fsr1h	equ	0xFE2
 39430                           fsr1l	equ	0xFE1
 39431                           indf2	equ	0xFDF
 39432                           postinc2	equ	0xFDE
 39433                           postdec2	equ	0xFDD
 39434                           plusw2	equ	0xFDB
 39435                           fsr2h	equ	0xFDA
 39436                           fsr2l	equ	0xFD9
 39437                           status	equ	0xFD8
 39438                           
 39439 ;; *************** function __fill_buffer_get_display *****************
 39440 ;; Defined at:
 39441 ;;		line 232 in file "api.c"
 39442 ;; Parameters:    Size  Location     Type
 39443 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 39444 ;;		 -> ToSendDataBuffer(64), 
 39445 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 39446 ;; Auto vars:     Size  Location     Type
 39447 ;;  position        1   15[BANK0 ] unsigned char 
 39448 ;;  start_line      1   14[BANK0 ] unsigned char 
 39449 ;;  line            1   13[BANK0 ] unsigned char 
 39450 ;;  cntr            1   12[BANK0 ] unsigned char 
 39451 ;; Return value:  Size  Location     Type
 39452 ;;                  1    wreg      void 
 39453 ;; Registers used:
 39454 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 39455 ;; Tracked objects:
 39456 ;;		On entry : 0/0
 39457 ;;		On exit  : 0/0
 39458 ;;		Unchanged: 0/0
 39459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39460 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39461 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39462 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39463 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39464 ;;Total ram usage:       12 bytes
 39465 ;; Hardware stack levels used:    1
 39466 ;; Hardware stack levels required when called:   11
 39467 ;; This function calls:
 39468 ;;		_display_get_character
 39469 ;; This function is called by:
 39470 ;;		_api_prepare
 39471 ;; This function uses a non-reentrant model
 39472 ;;
 39473                           
 39474                           	psect	text162
 39475  012D7E                     __ptext162:
 39476                           	opt stack 0
 39477  012D7E                     __fill_buffer_get_display:
 39478                           	opt stack 17
 39479                           
 39480                           ;api.c: 234: uint8_t cntr;;api.c: 235: uint8_t line;;api.c: 236: uint8_t start_line;;api
      +                          .c: 237: uint8_t position;;api.c: 240: if(secondHalf)
 39481                           
 39482                           ; BSR set to: 0
 39483                           ;incstack = 0
 39484  012D7E  0100               	movlb	0	; () banked
 39485  012D80  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39486  012D82  B4D8               	btfsc	status,2,c
 39487  012D84  D006               	goto	l2267
 39488                           
 39489                           ; BSR set to: 0
 39490                           ;api.c: 241: {;api.c: 242: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 39491  012D86  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39492  012D8A  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39493  012D8E  0E12               	movlw	18
 39494  012D90  D005               	goto	L61
 39495  012D92                     l2267:
 39496                           
 39497                           ; BSR set to: 0
 39498                           ;api.c: 244: else;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 39499                           
 39500                           ; BSR set to: 0
 39501  012D92  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 39502  012D96  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 39503  012D9A  0E11               	movlw	17
 39504  012D9C                     L61:
 39505  012D9C  6EDF               	movwf	indf2,c
 39506                           
 39507                           ; BSR set to: 0
 39508                           ;api.c: 247: };api.c: 250: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39509                           
 39510                           ; BSR set to: 0
 39511  012D9E  EE20 F001          	lfsr	2,1
 39512  012DA2  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39513  012DA4  26D9               	addwf	fsr2l,f,c
 39514  012DA6  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39515  012DA8  22DA               	addwfc	fsr2h,f,c
 39516  012DAA  0EBC               	movlw	188
 39517  012DAC  6EDF               	movwf	indf2,c
 39518                           
 39519                           ; BSR set to: 0
 39520                           ;api.c: 251: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39521  012DAE  EE20 F002          	lfsr	2,2
 39522  012DB2  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39523  012DB4  26D9               	addwf	fsr2l,f,c
 39524  012DB6  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39525  012DB8  22DA               	addwfc	fsr2h,f,c
 39526  012DBA  0E26               	movlw	38
 39527  012DBC  6EDF               	movwf	indf2,c
 39528                           
 39529                           ; BSR set to: 0
 39530                           ;api.c: 254: cntr = 3;
 39531  012DBE  0E03               	movlw	3
 39532  012DC0  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 39533                           
 39534                           ; BSR set to: 0
 39535                           ;api.c: 255: if(secondHalf)
 39536  012DC2  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 39537  012DC4  B4D8               	btfsc	status,2,c
 39538  012DC6  D002               	goto	l2269
 39539                           
 39540                           ; BSR set to: 0
 39541                           ;api.c: 256: {;api.c: 257: start_line = 2;
 39542  012DC8  0E02               	movlw	2
 39543  012DCA  D001               	goto	L62
 39544  012DCC                     l2269:
 39545                           
 39546                           ; BSR set to: 0
 39547                           ;api.c: 259: else;api.c: 260: {;api.c: 261: start_line = 0;
 39548                           
 39549                           ; BSR set to: 0
 39550  012DCC  0E00               	movlw	0
 39551  012DCE                     L62:
 39552  012DCE  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 39553                           
 39554                           ; BSR set to: 0
 39555                           ;api.c: 262: };api.c: 263: for(line=start_line; line<start_line+2; ++line)
 39556                           
 39557                           ; BSR set to: 0
 39558  012DD0  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 39559  012DD4  D01B               	goto	l2271
 39560  012DD6                     
 39561                           ; BSR set to: 0
 39562                           ;api.c: 264: {;api.c: 265: for(position=0; position<20; ++position)
 39563                           
 39564                           ; BSR set to: 0
 39565  012DD6  0E00               	movlw	0
 39566  012DD8  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 39567  012DDA                     l15999:
 39568                           
 39569                           ; BSR set to: 0
 39570  012DDA  0E13               	movlw	19
 39571  012DDC  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 39572  012DDE  D001               	goto	l2273
 39573  012DE0  D014               	goto	u14880
 39574  012DE2                     l2273:
 39575                           
 39576                           ; BSR set to: 0
 39577                           ;api.c: 266: {;api.c: 267: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 39578                           
 39579                           ; BSR set to: 0
 39580  012DE2  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 39581  012DE6  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39582  012DE8  EC9B  F0AA         	call	_display_get_character
 39583  012DEC  0100               	movlb	0	; () banked
 39584  012DEE  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39585  012DF0  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 39586  012DF2  0D01               	mullw	1
 39587  012DF4  50F3               	movf	prodl,w,c
 39588  012DF6  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 39589  012DF8  6ED9               	movwf	fsr2l,c
 39590  012DFA  50F4               	movf	prodh,w,c
 39591  012DFC  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 39592  012DFE  6EDA               	movwf	fsr2h,c
 39593  012E00  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 39594                           
 39595                           ; BSR set to: 0
 39596                           ;api.c: 268: ++cntr;
 39597  012E04  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 39598                           
 39599                           ; BSR set to: 0
 39600  012E06  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 39601  012E08  D7E8               	goto	l15999
 39602  012E0A                     u14880:
 39603                           
 39604                           ; BSR set to: 0
 39605                           
 39606                           ; BSR set to: 0
 39607  012E0A  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 39608  012E0C                     l2271:
 39609                           
 39610                           ; BSR set to: 0
 39611                           
 39612                           ; BSR set to: 0
 39613  012E0C  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 39614  012E0E  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 39615  012E10  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 39616  012E12  0E02               	movlw	2
 39617  012E14  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 39618  012E16  0E00               	movlw	0
 39619  012E18  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 39620  012E1A  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 39621  012E1C  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 39622  012E1E  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 39623  012E20  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 39624  012E22  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 39625  012E24  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 39626  012E26  0A80               	xorlw	128
 39627  012E28  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 39628  012E2A  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 39629  012E2C  0A80               	xorlw	128
 39630  012E2E  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 39631  012E30  B0D8               	btfsc	status,0,c
 39632  012E32  0012               	return	
 39633  012E34  D7D0               	goto	l2272
 39634  012E36                     __end_of__fill_buffer_get_display:
 39635                           	opt stack 0
 39636                           tosu	equ	0xFFF
 39637                           tosh	equ	0xFFE
 39638                           tosl	equ	0xFFD
 39639                           pclath	equ	0xFFA
 39640                           tblptru	equ	0xFF8
 39641                           tblptrh	equ	0xFF7
 39642                           tblptrl	equ	0xFF6
 39643                           tablat	equ	0xFF5
 39644                           prodh	equ	0xFF4
 39645                           prodl	equ	0xFF3
 39646                           intcon	equ	0xFF2
 39647                           indf0	equ	0xFEF
 39648                           postinc0	equ	0xFEE
 39649                           fsr0h	equ	0xFEA
 39650                           fsr0l	equ	0xFE9
 39651                           wreg	equ	0xFE8
 39652                           indf1	equ	0xFE7
 39653                           postinc1	equ	0xFE6
 39654                           postdec1	equ	0xFE5
 39655                           plusw1	equ	0xFE3
 39656                           fsr1h	equ	0xFE2
 39657                           fsr1l	equ	0xFE1
 39658                           indf2	equ	0xFDF
 39659                           postinc2	equ	0xFDE
 39660                           postdec2	equ	0xFDD
 39661                           plusw2	equ	0xFDB
 39662                           fsr2h	equ	0xFDA
 39663                           fsr2l	equ	0xFD9
 39664                           status	equ	0xFD8
 39665                           
 39666 ;; *************** function _display_get_character *****************
 39667 ;; Defined at:
 39668 ;;		line 628 in file "display.c"
 39669 ;; Parameters:    Size  Location     Type
 39670 ;;  line            1    wreg     unsigned char 
 39671 ;;  position        1    0[BANK0 ] unsigned char 
 39672 ;; Auto vars:     Size  Location     Type
 39673 ;;  line            1    3[BANK0 ] unsigned char 
 39674 ;; Return value:  Size  Location     Type
 39675 ;;                  1    wreg      unsigned char 
 39676 ;; Registers used:
 39677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39678 ;; Tracked objects:
 39679 ;;		On entry : 0/0
 39680 ;;		On exit  : 0/0
 39681 ;;		Unchanged: 0/0
 39682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39683 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39684 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39685 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39686 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39687 ;;Total ram usage:        4 bytes
 39688 ;; Hardware stack levels used:    1
 39689 ;; Hardware stack levels required when called:   10
 39690 ;; This function calls:
 39691 ;;		Nothing
 39692 ;; This function is called by:
 39693 ;;		__fill_buffer_get_display
 39694 ;; This function uses a non-reentrant model
 39695 ;;
 39696                           
 39697                           	psect	text163
 39698  015536                     __ptext163:
 39699                           	opt stack 0
 39700  015536                     _display_get_character:
 39701                           	opt stack 17
 39702                           
 39703                           ; BSR set to: 0
 39704                           ;incstack = 0
 39705                           ;display_get_character@line stored from wreg
 39706  015536  0100               	movlb	0	; () banked
 39707  015538  6F63               	movwf	display_get_character@line& (0+255),b
 39708                           
 39709                           ;display.c: 630: return display_content[line][position];
 39710  01553A  0100               	movlb	0	; () banked
 39711  01553C  5163               	movf	display_get_character@line& (0+255),w,b
 39712  01553E  0D14               	mullw	20
 39713  015540  0E34               	movlw	low _display_content
 39714  015542  6F61               	movwf	??_display_get_character& (0+255),b
 39715  015544  0E02               	movlw	high _display_content
 39716  015546  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 39717  015548  50F3               	movf	prodl,w,c
 39718  01554A  2761               	addwf	??_display_get_character& (0+255),f,b
 39719  01554C  50F4               	movf	prodh,w,c
 39720  01554E  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 39721  015550  5160               	movf	display_get_character@position& (0+255),w,b
 39722  015552  0D01               	mullw	1
 39723  015554  50F3               	movf	prodl,w,c
 39724  015556  2561               	addwf	??_display_get_character& (0+255),w,b
 39725  015558  6ED9               	movwf	fsr2l,c
 39726  01555A  50F4               	movf	prodh,w,c
 39727  01555C  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 39728  01555E  6EDA               	movwf	fsr2h,c
 39729  015560  50DF               	movf	indf2,w,c
 39730  015562  0012               	return	
 39731  015564                     __end_of_display_get_character:
 39732                           	opt stack 0
 39733                           tosu	equ	0xFFF
 39734                           tosh	equ	0xFFE
 39735                           tosl	equ	0xFFD
 39736                           pclath	equ	0xFFA
 39737                           tblptru	equ	0xFF8
 39738                           tblptrh	equ	0xFF7
 39739                           tblptrl	equ	0xFF6
 39740                           tablat	equ	0xFF5
 39741                           prodh	equ	0xFF4
 39742                           prodl	equ	0xFF3
 39743                           intcon	equ	0xFF2
 39744                           indf0	equ	0xFEF
 39745                           postinc0	equ	0xFEE
 39746                           fsr0h	equ	0xFEA
 39747                           fsr0l	equ	0xFE9
 39748                           wreg	equ	0xFE8
 39749                           indf1	equ	0xFE7
 39750                           postinc1	equ	0xFE6
 39751                           postdec1	equ	0xFE5
 39752                           plusw1	equ	0xFE3
 39753                           fsr1h	equ	0xFE2
 39754                           fsr1l	equ	0xFE1
 39755                           indf2	equ	0xFDF
 39756                           postinc2	equ	0xFDE
 39757                           postdec2	equ	0xFDD
 39758                           plusw2	equ	0xFDB
 39759                           fsr2h	equ	0xFDA
 39760                           fsr2l	equ	0xFD9
 39761                           status	equ	0xFD8
 39762                           
 39763 ;; *************** function _api_parse *****************
 39764 ;; Defined at:
 39765 ;;		line 94 in file "api.c"
 39766 ;; Parameters:    Size  Location     Type
 39767 ;;  inBuffer        2  102[BANK0 ] PTR unsigned char 
 39768 ;;		 -> ReceivedDataBuffer(64), 
 39769 ;;  receivedData    1  104[BANK0 ] unsigned char 
 39770 ;;  outBuffer       2  105[BANK0 ] PTR unsigned char 
 39771 ;;		 -> ToSendDataBuffer(64), 
 39772 ;; Auto vars:     Size  Location     Type
 39773 ;;  out_idx_ptr     2  109[BANK0 ] PTR unsigned char 
 39774 ;;		 -> api_parse@out_idx(1), 
 39775 ;;  in_idx          1  112[BANK0 ] unsigned char 
 39776 ;;  out_idx         1  111[BANK0 ] unsigned char 
 39777 ;; Return value:  Size  Location     Type
 39778 ;;                  1    wreg      void 
 39779 ;; Registers used:
 39780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 39781 ;; Tracked objects:
 39782 ;;		On entry : 0/0
 39783 ;;		On exit  : 0/0
 39784 ;;		Unchanged: 0/0
 39785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39786 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39787 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39788 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39789 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39790 ;;Total ram usage:       11 bytes
 39791 ;; Hardware stack levels used:    1
 39792 ;; Hardware stack levels required when called:   16
 39793 ;; This function calls:
 39794 ;;		__parse_command_long
 39795 ;;		__parse_command_short
 39796 ;; This function is called by:
 39797 ;;		_APP_DeviceCustomHIDTasks
 39798 ;; This function uses a non-reentrant model
 39799 ;;
 39800                           
 39801                           	psect	text164
 39802  0108DC                     __ptext164:
 39803                           	opt stack 0
 39804  0108DC                     _api_parse:
 39805                           	opt stack 13
 39806                           
 39807                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 39808                           
 39809                           ; BSR set to: 0
 39810                           ;incstack = 0
 39811  0108DC  0E00               	movlw	0
 39812  0108DE  0100               	movlb	0	; () banked
 39813  0108E0  6FCF               	movwf	api_parse@out_idx& (0+255),b
 39814                           
 39815                           ; BSR set to: 0
 39816                           ;api.c: 103: out_idx_ptr = &out_idx;
 39817  0108E2  0ECF               	movlw	low api_parse@out_idx
 39818  0108E4  6FCD               	movwf	api_parse@out_idx_ptr& (0+255),b
 39819  0108E6  0E00               	movlw	high api_parse@out_idx
 39820  0108E8  6FCE               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 39821                           
 39822                           ; BSR set to: 0
 39823                           ;api.c: 105: if(inBuffer[0]>0x7F)
 39824  0108EA  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 39825  0108EE  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39826  0108F2  0E7F               	movlw	127
 39827  0108F4  64DF               	cpfsgt	indf2,c
 39828  0108F6  D001               	goto	l2248
 39829  0108F8  0012               	return	
 39830  0108FA                     l2248:
 39831                           
 39832                           ; BSR set to: 0
 39833                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 39834                           
 39835                           ; BSR set to: 0
 39836  0108FA  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 39837  0108FE  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39838  010902  0E20               	movlw	32
 39839  010904  18DE               	xorwf	postinc2,w,c
 39840  010906  B4D8               	btfsc	status,2,c
 39841  010908  0012               	return	
 39842                           
 39843                           ; BSR set to: 0
 39844                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 39845                           
 39846                           ; BSR set to: 0
 39847                           
 39848                           ; BSR set to: 0
 39849                           ;api.c: 113: {;api.c: 116: return;
 39850  01090A  C0C6  FFD9         	movff	api_parse@inBuffer,fsr2l
 39851  01090E  C0C7  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 39852  010912  50DF               	movf	indf2,w,c
 39853  010914  A4D8               	btfss	status,2,c
 39854  010916  D018               	goto	l2251
 39855                           
 39856                           ; BSR set to: 0
 39857                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 39858  010918  C0C9  FFD9         	movff	api_parse@outBuffer,fsr2l
 39859  01091C  C0CA  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 39860  010920  0E00               	movlw	0
 39861  010922  6EDF               	movwf	indf2,c
 39862                           
 39863                           ; BSR set to: 0
 39864                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 39865  010924  EE20 F001          	lfsr	2,1
 39866  010928  51C9               	movf	api_parse@outBuffer& (0+255),w,b
 39867  01092A  26D9               	addwf	fsr2l,f,c
 39868  01092C  51CA               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39869  01092E  22DA               	addwfc	fsr2h,f,c
 39870  010930  0EBC               	movlw	188
 39871  010932  6EDF               	movwf	indf2,c
 39872                           
 39873                           ; BSR set to: 0
 39874                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 39875  010934  EE20 F002          	lfsr	2,2
 39876  010938  51C9               	movf	api_parse@outBuffer& (0+255),w,b
 39877  01093A  26D9               	addwf	fsr2l,f,c
 39878  01093C  51CA               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 39879  01093E  22DA               	addwfc	fsr2h,f,c
 39880  010940  0E26               	movlw	38
 39881  010942  6EDF               	movwf	indf2,c
 39882                           
 39883                           ; BSR set to: 0
 39884                           ;api.c: 129: out_idx = 3;
 39885  010944  0E03               	movlw	3
 39886  010946  6FCF               	movwf	api_parse@out_idx& (0+255),b
 39887  010948                     l2251:
 39888                           
 39889                           ; BSR set to: 0
 39890                           ;api.c: 130: };api.c: 132: in_idx = 1;
 39891                           
 39892                           ; BSR set to: 0
 39893  010948  0E01               	movlw	1
 39894  01094A  6FD0               	movwf	api_parse@in_idx& (0+255),b
 39895                           
 39896                           ;api.c: 133: while(in_idx<receivedDataLength)
 39897  01094C  D057               	goto	l2257
 39898  01094E                     
 39899                           ; BSR set to: 0
 39900                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 39901                           
 39902                           ; BSR set to: 0
 39903  01094E  51D0               	movf	api_parse@in_idx& (0+255),w,b
 39904  010950  0D01               	mullw	1
 39905  010952  50F3               	movf	prodl,w,c
 39906  010954  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 39907  010956  6ED9               	movwf	fsr2l,c
 39908  010958  50F4               	movf	prodh,w,c
 39909  01095A  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39910  01095C  6EDA               	movwf	fsr2h,c
 39911  01095E  0E99               	movlw	153
 39912  010960  18DE               	xorwf	postinc2,w,c
 39913  010962  B4D8               	btfsc	status,2,c
 39914  010964  0012               	return	
 39915  010966  D02F               	goto	l2255
 39916  010968                     
 39917                           ; BSR set to: 0
 39918                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 39919                           
 39920                           ; BSR set to: 0
 39921  010968  51D0               	movf	api_parse@in_idx& (0+255),w,b
 39922  01096A  0D01               	mullw	1
 39923  01096C  50F3               	movf	prodl,w,c
 39924  01096E  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 39925  010970  6ED9               	movwf	fsr2l,c
 39926  010972  50F4               	movf	prodh,w,c
 39927  010974  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39928  010976  6EDA               	movwf	fsr2h,c
 39929  010978  50DF               	movf	indf2,w,c
 39930  01097A  EC66  F07D         	call	__parse_command_short
 39931  01097E  D00B               	goto	l16865
 39932  010980                     
 39933                           ; BSR set to: 0
 39934                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 39935                           
 39936                           ; BSR set to: 0
 39937  010980  51D0               	movf	api_parse@in_idx& (0+255),w,b
 39938  010982  0D01               	mullw	1
 39939  010984  50F3               	movf	prodl,w,c
 39940  010986  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 39941  010988  6ED9               	movwf	fsr2l,c
 39942  01098A  50F4               	movf	prodh,w,c
 39943  01098C  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39944  01098E  6EDA               	movwf	fsr2h,c
 39945  010990  50DF               	movf	indf2,w,c
 39946  010992  EC66  F07D         	call	__parse_command_short
 39947  010996                     l16865:
 39948                           
 39949                           ;api.c: 150: ++in_idx;
 39950  010996  0100               	movlb	0	; () banked
 39951  010998  2BD0               	incf	api_parse@in_idx& (0+255),f,b
 39952                           
 39953                           ;api.c: 151: break;
 39954  01099A  D030               	goto	l2257
 39955  01099C                     
 39956                           ; BSR set to: 0
 39957                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 39958                           
 39959                           ; BSR set to: 0
 39960  01099C  51D0               	movf	api_parse@in_idx& (0+255),w,b
 39961  01099E  0D01               	mullw	1
 39962  0109A0  50F3               	movf	prodl,w,c
 39963  0109A2  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 39964  0109A4  6FB5               	movwf	__parse_command_long@data& (0+255),b
 39965  0109A6  50F4               	movf	prodh,w,c
 39966  0109A8  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39967  0109AA  6FB6               	movwf	(__parse_command_long@data+1)& (0+255),b
 39968  0109AC  C0C9  F0B7         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 39969  0109B0  C0CA  F0B8         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 39970  0109B4  C0CD  F0B9         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 39971  0109B8  C0CE  F0BA         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 39972  0109BC  ECFB  F0A1         	call	__parse_command_long	;wreg free
 39973  0109C0  0100               	movlb	0	; () banked
 39974  0109C2  27D0               	addwf	api_parse@in_idx& (0+255),f,b
 39975                           
 39976                           ;api.c: 155: break;
 39977  0109C4  D01B               	goto	l2257
 39978  0109C6                     l2255:
 39979                           
 39980                           ; BSR set to: 0
 39981                           
 39982                           ; BSR set to: 0
 39983  0109C6  51D0               	movf	api_parse@in_idx& (0+255),w,b
 39984  0109C8  0D01               	mullw	1
 39985  0109CA  50F3               	movf	prodl,w,c
 39986  0109CC  25C6               	addwf	api_parse@inBuffer& (0+255),w,b
 39987  0109CE  6ED9               	movwf	fsr2l,c
 39988  0109D0  50F4               	movf	prodh,w,c
 39989  0109D2  21C7               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 39990  0109D4  6EDA               	movwf	fsr2h,c
 39991  0109D6  50DF               	movf	indf2,w,c
 39992  0109D8  0BF0               	andlw	240
 39993  0109DA  6FCB               	movwf	??_api_parse& (0+255),b
 39994  0109DC  6BCC               	clrf	(??_api_parse+1)& (0+255),b
 39995                           
 39996                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 39997                           ; Switch size 1, requested type "space"
 39998                           ; Number of cases is 1, Range of values is 0 to 0
 39999                           ; switch strategies available:
 40000                           ; Name         Instructions Cycles
 40001                           ; simple_byte            4     3 (average)
 40002                           ;	Chosen strategy is simple_byte
 40003  0109DE  51CC               	movf	(??_api_parse+1)& (0+255),w,b
 40004  0109E0  0A00               	xorlw	0	; case 0
 40005  0109E2  A4D8               	btfss	status,2,c
 40006  0109E4  0012               	return	
 40007                           
 40008                           ; BSR set to: 0
 40009                           ; Switch size 1, requested type "space"
 40010                           ; Number of cases is 3, Range of values is 32 to 144
 40011                           ; switch strategies available:
 40012                           ; Name         Instructions Cycles
 40013                           ; simple_byte           10     6 (average)
 40014                           ;	Chosen strategy is simple_byte
 40015  0109E6  51CB               	movf	??_api_parse& (0+255),w,b
 40016  0109E8  0A20               	xorlw	32	; case 32
 40017  0109EA  B4D8               	btfsc	status,2,c
 40018  0109EC  D7BD               	goto	l2256
 40019  0109EE  0A10               	xorlw	16	; case 48
 40020  0109F0  B4D8               	btfsc	status,2,c
 40021  0109F2  D7C6               	goto	l2258
 40022  0109F4  0AA0               	xorlw	160	; case 144
 40023  0109F6  A4D8               	btfss	status,2,c
 40024  0109F8  0012               	return	
 40025  0109FA  D7D0               	goto	l2259
 40026  0109FC                     l2257:
 40027                           
 40028                           ; BSR set to: 0
 40029                           
 40030                           ; BSR set to: 0
 40031                           
 40032                           ; BSR set to: 0
 40033  0109FC  51C8               	movf	api_parse@receivedDataLength& (0+255),w,b
 40034  0109FE  5DD0               	subwf	api_parse@in_idx& (0+255),w,b
 40035  010A00  B0D8               	btfsc	status,0,c
 40036  010A02  0012               	return	
 40037  010A04  D7A4               	goto	l2253
 40038  010A06                     __end_of_api_parse:
 40039                           	opt stack 0
 40040                           tosu	equ	0xFFF
 40041                           tosh	equ	0xFFE
 40042                           tosl	equ	0xFFD
 40043                           pclath	equ	0xFFA
 40044                           tblptru	equ	0xFF8
 40045                           tblptrh	equ	0xFF7
 40046                           tblptrl	equ	0xFF6
 40047                           tablat	equ	0xFF5
 40048                           prodh	equ	0xFF4
 40049                           prodl	equ	0xFF3
 40050                           intcon	equ	0xFF2
 40051                           indf0	equ	0xFEF
 40052                           postinc0	equ	0xFEE
 40053                           fsr0h	equ	0xFEA
 40054                           fsr0l	equ	0xFE9
 40055                           wreg	equ	0xFE8
 40056                           indf1	equ	0xFE7
 40057                           postinc1	equ	0xFE6
 40058                           postdec1	equ	0xFE5
 40059                           plusw1	equ	0xFE3
 40060                           fsr1h	equ	0xFE2
 40061                           fsr1l	equ	0xFE1
 40062                           indf2	equ	0xFDF
 40063                           postinc2	equ	0xFDE
 40064                           postdec2	equ	0xFDD
 40065                           plusw2	equ	0xFDB
 40066                           fsr2h	equ	0xFDA
 40067                           fsr2l	equ	0xFD9
 40068                           status	equ	0xFD8
 40069                           
 40070 ;; *************** function __parse_command_short *****************
 40071 ;; Defined at:
 40072 ;;		line 327 in file "api.c"
 40073 ;; Parameters:    Size  Location     Type
 40074 ;;  cmd             1    wreg     unsigned char 
 40075 ;; Auto vars:     Size  Location     Type
 40076 ;;  cmd             1  101[BANK0 ] unsigned char 
 40077 ;; Return value:  Size  Location     Type
 40078 ;;                  1    wreg      void 
 40079 ;; Registers used:
 40080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40081 ;; Tracked objects:
 40082 ;;		On entry : 0/0
 40083 ;;		On exit  : 0/0
 40084 ;;		Unchanged: 0/0
 40085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40087 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40089 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40090 ;;Total ram usage:        1 bytes
 40091 ;; Hardware stack levels used:    1
 40092 ;; Hardware stack levels required when called:   15
 40093 ;; This function calls:
 40094 ;;		_motor_clear_command_cue
 40095 ;;		_motor_go_to_steps_position
 40096 ;;		_motor_schedule_command
 40097 ;;		_motor_set_zero
 40098 ;;		_motor_stop
 40099 ;; This function is called by:
 40100 ;;		_api_parse
 40101 ;; This function uses a non-reentrant model
 40102 ;;
 40103                           
 40104                           	psect	text165
 40105  00FACC                     __ptext165:
 40106                           	opt stack 0
 40107  00FACC                     __parse_command_short:
 40108                           	opt stack 13
 40109                           
 40110                           ; BSR set to: 0
 40111                           ;incstack = 0
 40112                           ;__parse_command_short@cmd stored from wreg
 40113  00FACC  0100               	movlb	0	; () banked
 40114  00FACE  6FC5               	movwf	__parse_command_short@cmd& (0+255),b
 40115                           
 40116                           ;api.c: 329: switch(cmd)
 40117  00FAD0  D082               	goto	l2293
 40118  00FAD2                     
 40119                           ;api.c: 347: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40120  00FAD2  0E01               	movlw	1
 40121  00FAD4  0101               	movlb	1	; () banked
 40122  00FAD6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40123                           
 40124                           ;api.c: 348: break;
 40125  00FAD8  0012               	return	
 40126  00FADA                     
 40127                           ;api.c: 351: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 40128                           
 40129                           ; BSR set to: 1
 40130  00FADA  0E11               	movlw	17
 40131  00FADC  0101               	movlb	1	; () banked
 40132  00FADE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40133                           
 40134                           ;api.c: 352: break;
 40135  00FAE0  0012               	return	
 40136  00FAE2                     
 40137                           ;api.c: 355: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 40138                           
 40139                           ; BSR set to: 1
 40140  00FAE2  0E31               	movlw	49
 40141  00FAE4  0101               	movlb	1	; () banked
 40142  00FAE6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40143                           
 40144                           ;api.c: 356: break;
 40145  00FAE8  0012               	return	
 40146  00FAEA                     
 40147                           ;api.c: 359: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 40148                           
 40149                           ; BSR set to: 1
 40150  00FAEA  0E51               	movlw	81
 40151  00FAEC  0101               	movlb	1	; () banked
 40152  00FAEE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40153                           
 40154                           ;api.c: 360: break;
 40155  00FAF0  0012               	return	
 40156  00FAF2                     
 40157                           ;api.c: 363: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40158                           
 40159                           ; BSR set to: 1
 40160  00FAF2  0E82               	movlw	130
 40161  00FAF4  0101               	movlb	1	; () banked
 40162  00FAF6  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40163                           
 40164                           ;api.c: 364: break;
 40165  00FAF8  0012               	return	
 40166  00FAFA                     
 40167                           ;api.c: 367: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 40168                           
 40169                           ; BSR set to: 1
 40170  00FAFA  0E71               	movlw	113
 40171  00FAFC  0101               	movlb	1	; () banked
 40172  00FAFE  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40173                           
 40174                           ;api.c: 368: break;
 40175  00FB00  0012               	return	
 40176  00FB02                     
 40177                           ;api.c: 371: motor_set_zero(MOTOR_DIRECTION_CCW);
 40178                           
 40179                           ; BSR set to: 1
 40180  00FB02  0EFF               	movlw	255
 40181  00FB04  EC62  F096         	call	_motor_set_zero
 40182                           
 40183                           ;api.c: 372: break;
 40184  00FB08  0012               	return	
 40185  00FB0A                     
 40186                           ;api.c: 375: motor_set_zero(MOTOR_DIRECTION_CW);
 40187  00FB0A  0E01               	movlw	1
 40188  00FB0C  EC62  F096         	call	_motor_set_zero
 40189                           
 40190                           ;api.c: 376: break;
 40191  00FB10  0012               	return	
 40192  00FB12                     
 40193                           ;api.c: 379: motor_go_to_steps_position(0);
 40194  00FB12  0E00               	movlw	0
 40195  00FB14  0100               	movlb	0	; () banked
 40196  00FB16  6FA9               	movwf	motor_go_to_steps_position@target_position& (0+255),b
 40197  00FB18  0E00               	movlw	0
 40198  00FB1A  6FAA               	movwf	(motor_go_to_steps_position@target_position+1)& (0+255),b
 40199  00FB1C  0E00               	movlw	0
 40200  00FB1E  6FAB               	movwf	(motor_go_to_steps_position@target_position+2)& (0+255),b
 40201  00FB20  0E00               	movlw	0
 40202  00FB22  6FAC               	movwf	(motor_go_to_steps_position@target_position+3)& (0+255),b
 40203  00FB24  EC7F  F069         	call	_motor_go_to_steps_position	;wreg free
 40204                           
 40205                           ;api.c: 381: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 40206  00FB28  0E05               	movlw	5
 40207  00FB2A  0101               	movlb	1	; () banked
 40208  00FB2C  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40209                           
 40210                           ; BSR set to: 1
 40211                           ;api.c: 382: os.divide_position = 0;
 40212  00FB2E  0E00               	movlw	0
 40213  00FB30  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40214  00FB32  0E00               	movlw	0
 40215  00FB34  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40216  00FB36                     
 40217                           ;api.c: 385: --os.encoder2Count;
 40218                           
 40219                           ; BSR set to: 1
 40220  00FB36  0101               	movlb	1	; () banked
 40221  00FB38  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 40222                           
 40223                           ;api.c: 386: break;
 40224  00FB3A  0012               	return	
 40225  00FB3C                     
 40226                           ;api.c: 389: ++os.encoder2Count;
 40227                           
 40228                           ; BSR set to: 1
 40229  00FB3C  0101               	movlb	1	; () banked
 40230  00FB3E  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 40231                           
 40232                           ;api.c: 390: break;
 40233  00FB40  0012               	return	
 40234  00FB42                     
 40235                           ;api.c: 393: ++os.button2;
 40236                           
 40237                           ; BSR set to: 1
 40238  00FB42  0101               	movlb	1	; () banked
 40239  00FB44  2B77               	incf	(_os+6)& (0+255),f,b	;volatile
 40240                           
 40241                           ;api.c: 394: break;
 40242  00FB46  0012               	return	
 40243  00FB48                     
 40244                           ;api.c: 397: --os.encoder1Count;
 40245                           
 40246                           ; BSR set to: 1
 40247  00FB48  0101               	movlb	1	; () banked
 40248  00FB4A  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 40249                           
 40250                           ;api.c: 398: break;
 40251  00FB4C  0012               	return	
 40252  00FB4E                     
 40253                           ;api.c: 401: ++os.encoder1Count;
 40254                           
 40255                           ; BSR set to: 1
 40256  00FB4E  0101               	movlb	1	; () banked
 40257  00FB50  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 40258                           
 40259                           ;api.c: 402: break;
 40260  00FB52  0012               	return	
 40261  00FB54                     
 40262                           ;api.c: 405: ++os.button1;
 40263                           
 40264                           ; BSR set to: 1
 40265  00FB54  0101               	movlb	1	; () banked
 40266  00FB56  2B75               	incf	(_os+4)& (0+255),f,b	;volatile
 40267                           
 40268                           ;api.c: 406: break;
 40269  00FB58  0012               	return	
 40270  00FB5A                     
 40271                           ;api.c: 409: if(!os.busy)
 40272                           
 40273                           ; BSR set to: 1
 40274  00FB5A  0101               	movlb	1	; () banked
 40275  00FB5C  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40276  00FB5E  A4D8               	btfss	status,2,c
 40277  00FB60  0012               	return	
 40278                           
 40279                           ; BSR set to: 1
 40280                           ;api.c: 410: {;api.c: 411: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 40281  00FB62  0E84               	movlw	132
 40282  00FB64  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40283                           
 40284                           ; BSR set to: 1
 40285                           ;api.c: 412: motor_schedule_command(MOTOR_DIRECTION_CCW, 0, os.manual_speed, MOTOR_MOVE_
      +                          TYPE_NORMAL);
 40286  00FB66  0E00               	movlw	0
 40287  00FB68  0100               	movlb	0	; () banked
 40288  00FB6A  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 40289  00FB6C  0E00               	movlw	0
 40290  00FB6E  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 40291  00FB70  0E00               	movlw	0
 40292  00FB72  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40293  00FB74  0E00               	movlw	0
 40294  00FB76  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40295  00FB78  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 40296  00FB7C  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 40297  00FB80  0E00               	movlw	0
 40298  00FB82  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40299  00FB84  0EFF               	movlw	255
 40300  00FB86  EC7A  F094         	call	_motor_schedule_command
 40301                           
 40302                           ;api.c: 413: };api.c: 414: break;
 40303  00FB8A  0012               	return	
 40304  00FB8C                     
 40305                           ;api.c: 417: if(!os.busy)
 40306  00FB8C  0101               	movlb	1	; () banked
 40307  00FB8E  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40308  00FB90  A4D8               	btfss	status,2,c
 40309  00FB92  0012               	return	
 40310                           
 40311                           ; BSR set to: 1
 40312                           ;api.c: 418: {;api.c: 419: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 40313  00FB94  0E84               	movlw	132
 40314  00FB96  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40315                           
 40316                           ; BSR set to: 1
 40317                           ;api.c: 420: motor_schedule_command(MOTOR_DIRECTION_CW, 0, os.manual_speed, MOTOR_MOVE_T
      +                          YPE_NORMAL);
 40318  00FB98  0E00               	movlw	0
 40319  00FB9A  0100               	movlb	0	; () banked
 40320  00FB9C  6FA1               	movwf	motor_schedule_command@distance_in_steps& (0+255),b
 40321  00FB9E  0E00               	movlw	0
 40322  00FBA0  6FA2               	movwf	(motor_schedule_command@distance_in_steps+1)& (0+255),b
 40323  00FBA2  0E00               	movlw	0
 40324  00FBA4  6FA3               	movwf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40325  00FBA6  0E00               	movlw	0
 40326  00FBA8  6FA4               	movwf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40327  00FBAA  C194  F0A5         	movff	_os+35,motor_schedule_command@speed	;volatile
 40328  00FBAE  C195  F0A6         	movff	_os+36,motor_schedule_command@speed+1	;volatile
 40329  00FBB2  0E00               	movlw	0
 40330  00FBB4  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40331  00FBB6  0E01               	movlw	1
 40332  00FBB8  EC7A  F094         	call	_motor_schedule_command
 40333                           
 40334                           ;api.c: 421: };api.c: 422: break;
 40335  00FBBC  0012               	return	
 40336  00FBBE                     
 40337                           ;api.c: 425: if(os.busy)
 40338  00FBBE  0101               	movlb	1	; () banked
 40339  00FBC0  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40340  00FBC2  B4D8               	btfsc	status,2,c
 40341  00FBC4  0012               	return	
 40342                           
 40343                           ; BSR set to: 1
 40344                           ;api.c: 426: {;api.c: 427: motor_stop();
 40345  00FBC6  ECD2  F0A7         	call	_motor_stop	;wreg free
 40346                           
 40347                           ;api.c: 428: motor_clear_command_cue();
 40348  00FBCA  EC39  F0AD         	call	_motor_clear_command_cue	;wreg free
 40349                           
 40350                           ;api.c: 429: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 40351  00FBCE  0E82               	movlw	130
 40352  00FBD0  0101               	movlb	1	; () banked
 40353  00FBD2  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40354                           
 40355                           ; BSR set to: 1
 40356                           ;api.c: 432: }
 40357                           
 40358                           ; BSR set to: 1
 40359                           ;api.c: 430: };api.c: 431: break;
 40360  00FBD4  0012               	return	
 40361  00FBD6                     l2293:
 40362                           
 40363                           ; BSR set to: 1
 40364  00FBD6  0100               	movlb	0	; () banked
 40365  00FBD8  51C5               	movf	__parse_command_short@cmd& (0+255),w,b
 40366                           
 40367                           ; Switch size 1, requested type "space"
 40368                           ; Number of cases is 18, Range of values is 32 to 56
 40369                           ; switch strategies available:
 40370                           ; Name         Instructions Cycles
 40371                           ; simple_byte           55    28 (average)
 40372                           ;	Chosen strategy is simple_byte
 40373  00FBDA  0A20               	xorlw	32	; case 32
 40374  00FBDC  B4D8               	btfsc	status,2,c
 40375  00FBDE  D779               	goto	l2294
 40376  00FBE0  0A01               	xorlw	1	; case 33
 40377  00FBE2  B4D8               	btfsc	status,2,c
 40378  00FBE4  D77A               	goto	l2296
 40379  00FBE6  0A03               	xorlw	3	; case 34
 40380  00FBE8  B4D8               	btfsc	status,2,c
 40381  00FBEA  D77B               	goto	l2297
 40382  00FBEC  0A01               	xorlw	1	; case 35
 40383  00FBEE  B4D8               	btfsc	status,2,c
 40384  00FBF0  D77C               	goto	l2298
 40385  00FBF2  0A07               	xorlw	7	; case 36
 40386  00FBF4  B4D8               	btfsc	status,2,c
 40387  00FBF6  D77D               	goto	l2299
 40388  00FBF8  0A01               	xorlw	1	; case 37
 40389  00FBFA  B4D8               	btfsc	status,2,c
 40390  00FBFC  D77E               	goto	l2300
 40391  00FBFE  0A03               	xorlw	3	; case 38
 40392  00FC00  B4D8               	btfsc	status,2,c
 40393  00FC02  D77F               	goto	l2301
 40394  00FC04  0A01               	xorlw	1	; case 39
 40395  00FC06  B4D8               	btfsc	status,2,c
 40396  00FC08  D780               	goto	l2302
 40397  00FC0A  0A0F               	xorlw	15	; case 40
 40398  00FC0C  B4D8               	btfsc	status,2,c
 40399  00FC0E  D781               	goto	l2303
 40400  00FC10  0A18               	xorlw	24	; case 48
 40401  00FC12  B4D8               	btfsc	status,2,c
 40402  00FC14  D790               	goto	l2304
 40403  00FC16  0A01               	xorlw	1	; case 49
 40404  00FC18  B4D8               	btfsc	status,2,c
 40405  00FC1A  D790               	goto	l2305
 40406  00FC1C  0A03               	xorlw	3	; case 50
 40407  00FC1E  B4D8               	btfsc	status,2,c
 40408  00FC20  D790               	goto	l2306
 40409  00FC22  0A01               	xorlw	1	; case 51
 40410  00FC24  B4D8               	btfsc	status,2,c
 40411  00FC26  D790               	goto	l2307
 40412  00FC28  0A07               	xorlw	7	; case 52
 40413  00FC2A  B4D8               	btfsc	status,2,c
 40414  00FC2C  D790               	goto	l2308
 40415  00FC2E  0A01               	xorlw	1	; case 53
 40416  00FC30  B4D8               	btfsc	status,2,c
 40417  00FC32  D790               	goto	l2309
 40418  00FC34  0A03               	xorlw	3	; case 54
 40419  00FC36  B4D8               	btfsc	status,2,c
 40420  00FC38  D790               	goto	l2310
 40421  00FC3A  0A01               	xorlw	1	; case 55
 40422  00FC3C  B4D8               	btfsc	status,2,c
 40423  00FC3E  D7A6               	goto	l2312
 40424  00FC40  0A0F               	xorlw	15	; case 56
 40425  00FC42  A4D8               	btfss	status,2,c
 40426  00FC44  0012               	return	
 40427  00FC46  D7BB               	goto	l2314
 40428  00FC48                     __end_of__parse_command_short:
 40429                           	opt stack 0
 40430                           tosu	equ	0xFFF
 40431                           tosh	equ	0xFFE
 40432                           tosl	equ	0xFFD
 40433                           pclath	equ	0xFFA
 40434                           tblptru	equ	0xFF8
 40435                           tblptrh	equ	0xFF7
 40436                           tblptrl	equ	0xFF6
 40437                           tablat	equ	0xFF5
 40438                           prodh	equ	0xFF4
 40439                           prodl	equ	0xFF3
 40440                           intcon	equ	0xFF2
 40441                           indf0	equ	0xFEF
 40442                           postinc0	equ	0xFEE
 40443                           fsr0h	equ	0xFEA
 40444                           fsr0l	equ	0xFE9
 40445                           wreg	equ	0xFE8
 40446                           indf1	equ	0xFE7
 40447                           postinc1	equ	0xFE6
 40448                           postdec1	equ	0xFE5
 40449                           plusw1	equ	0xFE3
 40450                           fsr1h	equ	0xFE2
 40451                           fsr1l	equ	0xFE1
 40452                           indf2	equ	0xFDF
 40453                           postinc2	equ	0xFDE
 40454                           postdec2	equ	0xFDD
 40455                           plusw2	equ	0xFDB
 40456                           fsr2h	equ	0xFDA
 40457                           fsr2l	equ	0xFD9
 40458                           status	equ	0xFD8
 40459                           
 40460 ;; *************** function _motor_stop *****************
 40461 ;; Defined at:
 40462 ;;		line 534 in file "motor.c"
 40463 ;; Parameters:    Size  Location     Type
 40464 ;;		None
 40465 ;; Auto vars:     Size  Location     Type
 40466 ;;		None
 40467 ;; Return value:  Size  Location     Type
 40468 ;;                  1    wreg      void 
 40469 ;; Registers used:
 40470 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 40471 ;; Tracked objects:
 40472 ;;		On entry : 0/0
 40473 ;;		On exit  : 0/0
 40474 ;;		Unchanged: 0/0
 40475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40478 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40479 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40480 ;;Total ram usage:        2 bytes
 40481 ;; Hardware stack levels used:    1
 40482 ;; Hardware stack levels required when called:   10
 40483 ;; This function calls:
 40484 ;;		Nothing
 40485 ;; This function is called by:
 40486 ;;		__parse_command_short
 40487 ;;		_encoder_statemachine
 40488 ;; This function uses a non-reentrant model
 40489 ;;
 40490                           
 40491                           	psect	text166
 40492  014FA4                     __ptext166:
 40493                           	opt stack 0
 40494  014FA4                     _motor_stop:
 40495                           	opt stack 19
 40496                           
 40497                           ;motor.c: 536: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 40498                           
 40499                           ;incstack = 0
 40500  014FA4  90D8               	bcf	status,0,c
 40501  014FA6  0100               	movlb	0	; () banked
 40502  014FA8  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 40503  014FAA  6EF6               	movwf	tblptrl,c
 40504  014FAC  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 40505  014FAE  6EF7               	movwf	tblptrh,c
 40506  014FB0  0E61               	movlw	low _motor_steps_lookup
 40507  014FB2  26F6               	addwf	tblptrl,f,c
 40508  014FB4  0E94               	movlw	high _motor_steps_lookup
 40509  014FB6  22F7               	addwfc	tblptrh,f,c
 40510  014FB8                     	if	1	;There are 3 active tblptr bytes
 40511  014FB8  6AF8               	clrf	tblptru,c
 40512  014FBA  0E00               	movlw	low (__mediumconst shr (0+16))
 40513  014FBC  22F8               	addwfc	tblptru,f,c
 40514  014FBE                     	endif
 40515  014FBE  0009               	tblrd		*+
 40516  014FC0  CFF5 F060          	movff	tablat,??_motor_stop
 40517  014FC4  0009               	tblrd		*+
 40518  014FC6  CFF5 F061          	movff	tablat,??_motor_stop+1
 40519  014FCA  5160               	movf	??_motor_stop& (0+255),w,b
 40520  014FCC  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 40521  014FCE  0101               	movlb	1	; () banked
 40522  014FD0  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 40523  014FD2  0100               	movlb	0	; () banked
 40524  014FD4  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 40525  014FD6  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 40526  014FD8  0101               	movlb	1	; () banked
 40527  014FDA  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 40528  014FDC  0E00               	movlw	0
 40529  014FDE  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 40530  014FE0  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 40531  014FE2  0E00               	movlw	0
 40532  014FE4  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 40533  014FE6  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 40534                           
 40535                           ; BSR set to: 1
 40536  014FE8  0012               	return		;funcret
 40537  014FEA                     __end_of_motor_stop:
 40538                           	opt stack 0
 40539                           tosu	equ	0xFFF
 40540                           tosh	equ	0xFFE
 40541                           tosl	equ	0xFFD
 40542                           pclath	equ	0xFFA
 40543                           tblptru	equ	0xFF8
 40544                           tblptrh	equ	0xFF7
 40545                           tblptrl	equ	0xFF6
 40546                           tablat	equ	0xFF5
 40547                           prodh	equ	0xFF4
 40548                           prodl	equ	0xFF3
 40549                           intcon	equ	0xFF2
 40550                           indf0	equ	0xFEF
 40551                           postinc0	equ	0xFEE
 40552                           fsr0h	equ	0xFEA
 40553                           fsr0l	equ	0xFE9
 40554                           wreg	equ	0xFE8
 40555                           indf1	equ	0xFE7
 40556                           postinc1	equ	0xFE6
 40557                           postdec1	equ	0xFE5
 40558                           plusw1	equ	0xFE3
 40559                           fsr1h	equ	0xFE2
 40560                           fsr1l	equ	0xFE1
 40561                           indf2	equ	0xFDF
 40562                           postinc2	equ	0xFDE
 40563                           postdec2	equ	0xFDD
 40564                           plusw2	equ	0xFDB
 40565                           fsr2h	equ	0xFDA
 40566                           fsr2l	equ	0xFD9
 40567                           status	equ	0xFD8
 40568                           
 40569 ;; *************** function _motor_set_zero *****************
 40570 ;; Defined at:
 40571 ;;		line 729 in file "motor.c"
 40572 ;; Parameters:    Size  Location     Type
 40573 ;;  direction       1    wreg     enum E6622
 40574 ;; Auto vars:     Size  Location     Type
 40575 ;;  direction       1   73[BANK0 ] enum E6622
 40576 ;; Return value:  Size  Location     Type
 40577 ;;                  1    wreg      void 
 40578 ;; Registers used:
 40579 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40580 ;; Tracked objects:
 40581 ;;		On entry : 0/0
 40582 ;;		On exit  : 0/0
 40583 ;;		Unchanged: 0/0
 40584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40586 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40588 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40589 ;;Total ram usage:        1 bytes
 40590 ;; Hardware stack levels used:    1
 40591 ;; Hardware stack levels required when called:   14
 40592 ;; This function calls:
 40593 ;;		_motor_schedule_command
 40594 ;; This function is called by:
 40595 ;;		__parse_command_short
 40596 ;;		_encoder_statemachine
 40597 ;; This function uses a non-reentrant model
 40598 ;;
 40599                           
 40600                           	psect	text167
 40601  012CC4                     __ptext167:
 40602                           	opt stack 0
 40603  012CC4                     _motor_set_zero:
 40604                           	opt stack 15
 40605                           
 40606                           ; BSR set to: 1
 40607                           ;incstack = 0
 40608                           ;motor_set_zero@direction stored from wreg
 40609  012CC4  0100               	movlb	0	; () banked
 40610  012CC6  6FA9               	movwf	motor_set_zero@direction& (0+255),b
 40611                           
 40612                           ;motor.c: 731: if(config.overshoot_in_steps!=0)
 40613  012CC8  0101               	movlb	1	; () banked
 40614  012CCA  51A6               	movf	(_config+5)& (0+255),w,b
 40615  012CCC  11A7               	iorwf	(_config+6)& (0+255),w,b
 40616  012CCE  B4D8               	btfsc	status,2,c
 40617  012CD0  D044               	goto	l2567
 40618                           
 40619                           ; BSR set to: 1
 40620                           ;motor.c: 732: {;motor.c: 733: if(direction==MOTOR_DIRECTION_CW)
 40621  012CD2  0100               	movlb	0	; () banked
 40622  012CD4  05A9               	decf	motor_set_zero@direction& (0+255),w,b
 40623  012CD6  A4D8               	btfss	status,2,c
 40624  012CD8  D020               	goto	l2566
 40625                           
 40626                           ; BSR set to: 0
 40627                           ;motor.c: 734: {;motor.c: 735: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 40628  012CDA  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 40629  012CDE  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40630  012CE2  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40631  012CE4  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40632  012CE6  0E00               	movlw	0
 40633  012CE8  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40634  012CEA  0E00               	movlw	0
 40635  012CEC  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40636  012CEE  0E01               	movlw	1
 40637  012CF0  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40638  012CF2  0EFF               	movlw	255
 40639  012CF4  EC7A  F094         	call	_motor_schedule_command
 40640                           
 40641                           ;motor.c: 736: motor_schedule_command(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0, 
      +                          MOTOR_MOVE_TYPE_NORMAL);
 40642  012CF8  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 40643  012CFC  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40644  012D00  0100               	movlb	0	; () banked
 40645  012D02  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40646  012D04  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40647  012D06  0E00               	movlw	0
 40648  012D08  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40649  012D0A  0E00               	movlw	0
 40650  012D0C  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40651  012D0E  0E00               	movlw	0
 40652  012D10  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40653  012D12  0E01               	movlw	1
 40654  012D14  EC7A  F094         	call	_motor_schedule_command
 40655                           
 40656                           ;motor.c: 737: }
 40657  012D18  D020               	goto	l2567
 40658  012D1A                     l2566:
 40659                           
 40660                           ;motor.c: 738: else;motor.c: 739: {;motor.c: 740: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, config.overshoot_in_steps, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 40661  012D1A  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 40662  012D1E  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40663  012D22  0100               	movlb	0	; () banked
 40664  012D24  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40665  012D26  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40666  012D28  0E00               	movlw	0
 40667  012D2A  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40668  012D2C  0E00               	movlw	0
 40669  012D2E  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40670  012D30  0E01               	movlw	1
 40671  012D32  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40672  012D34  0E01               	movlw	1
 40673  012D36  EC7A  F094         	call	_motor_schedule_command
 40674                           
 40675                           ;motor.c: 741: motor_schedule_command(MOTOR_DIRECTION_CCW, config.overshoot_in_steps, 0,
      +                           MOTOR_MOVE_TYPE_NORMAL);
 40676  012D3A  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 40677  012D3E  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 40678  012D42  0100               	movlb	0	; () banked
 40679  012D44  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 40680  012D46  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 40681  012D48  0E00               	movlw	0
 40682  012D4A  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 40683  012D4C  0E00               	movlw	0
 40684  012D4E  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 40685  012D50  0E00               	movlw	0
 40686  012D52  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 40687  012D54  0EFF               	movlw	255
 40688  012D56  EC7A  F094         	call	_motor_schedule_command
 40689  012D5A                     l2567:
 40690                           
 40691                           ;motor.c: 742: };motor.c: 743: };motor.c: 744: os.approach_direction = direction;
 40692  012D5A  C0A9  F183         	movff	motor_set_zero@direction,_os+18	;volatile
 40693                           
 40694                           ;motor.c: 745: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 40695  012D5E  0E01               	movlw	1
 40696  012D60  0101               	movlb	1	; () banked
 40697  012D62  6F7E               	movwf	(_os+13)& (0+255),b	;volatile
 40698                           
 40699                           ; BSR set to: 1
 40700                           ;motor.c: 746: os.current_position_in_steps = 0;
 40701  012D64  0E00               	movlw	0
 40702  012D66  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 40703  012D68  0E00               	movlw	0
 40704  012D6A  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 40705  012D6C  0E00               	movlw	0
 40706  012D6E  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 40707  012D70  0E00               	movlw	0
 40708  012D72  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 40709                           
 40710                           ; BSR set to: 1
 40711                           ;motor.c: 747: os.divide_position = 0;
 40712  012D74  0E00               	movlw	0
 40713  012D76  6F88               	movwf	(_os+23)& (0+255),b	;volatile
 40714  012D78  0E00               	movlw	0
 40715  012D7A  6F87               	movwf	(_os+22)& (0+255),b	;volatile
 40716                           
 40717                           ; BSR set to: 1
 40718  012D7C  0012               	return		;funcret
 40719  012D7E                     __end_of_motor_set_zero:
 40720                           	opt stack 0
 40721                           tosu	equ	0xFFF
 40722                           tosh	equ	0xFFE
 40723                           tosl	equ	0xFFD
 40724                           pclath	equ	0xFFA
 40725                           tblptru	equ	0xFF8
 40726                           tblptrh	equ	0xFF7
 40727                           tblptrl	equ	0xFF6
 40728                           tablat	equ	0xFF5
 40729                           prodh	equ	0xFF4
 40730                           prodl	equ	0xFF3
 40731                           intcon	equ	0xFF2
 40732                           indf0	equ	0xFEF
 40733                           postinc0	equ	0xFEE
 40734                           fsr0h	equ	0xFEA
 40735                           fsr0l	equ	0xFE9
 40736                           wreg	equ	0xFE8
 40737                           indf1	equ	0xFE7
 40738                           postinc1	equ	0xFE6
 40739                           postdec1	equ	0xFE5
 40740                           plusw1	equ	0xFE3
 40741                           fsr1h	equ	0xFE2
 40742                           fsr1l	equ	0xFE1
 40743                           indf2	equ	0xFDF
 40744                           postinc2	equ	0xFDE
 40745                           postdec2	equ	0xFDD
 40746                           plusw2	equ	0xFDB
 40747                           fsr2h	equ	0xFDA
 40748                           fsr2l	equ	0xFD9
 40749                           status	equ	0xFD8
 40750                           
 40751 ;; *************** function _motor_go_to_steps_position *****************
 40752 ;; Defined at:
 40753 ;;		line 577 in file "motor.c"
 40754 ;; Parameters:    Size  Location     Type
 40755 ;;  target_posit    4   73[BANK0 ] unsigned long 
 40756 ;; Auto vars:     Size  Location     Type
 40757 ;;  distance_ccw    4   97[BANK0 ] unsigned long 
 40758 ;;  distance_cw     4   93[BANK0 ] unsigned long 
 40759 ;;  overhead_ccw    4   89[BANK0 ] unsigned long 
 40760 ;;  overhead_cw     4   85[BANK0 ] unsigned long 
 40761 ;; Return value:  Size  Location     Type
 40762 ;;                  1    wreg      void 
 40763 ;; Registers used:
 40764 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40765 ;; Tracked objects:
 40766 ;;		On entry : 0/0
 40767 ;;		On exit  : 0/0
 40768 ;;		Unchanged: 0/0
 40769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40770 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40771 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40772 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40773 ;;      Totals:         0      28       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40774 ;;Total ram usage:       28 bytes
 40775 ;; Hardware stack levels used:    1
 40776 ;; Hardware stack levels required when called:   14
 40777 ;; This function calls:
 40778 ;;		_motor_schedule_command
 40779 ;; This function is called by:
 40780 ;;		__parse_command_short
 40781 ;;		_motor_divide_jump
 40782 ;;		_motor_divide_jump_to_nearest
 40783 ;;		_encoder_statemachine
 40784 ;;		_motor_go_to_degrees_position
 40785 ;; This function uses a non-reentrant model
 40786 ;;
 40787                           
 40788                           	psect	text168
 40789  00D2FE                     __ptext168:
 40790                           	opt stack 0
 40791  00D2FE                     _motor_go_to_steps_position:
 40792                           	opt stack 15
 40793                           
 40794                           ;motor.c: 579: uint32_t distance_cw;;motor.c: 580: uint32_t overhead_cw;;motor.c: 581: u
      +                          int32_t distance_ccw;;motor.c: 582: uint32_t overhead_ccw;;motor.c: 585: if(os.busy)
 40795                           
 40796                           ; BSR set to: 1
 40797                           ;incstack = 0
 40798  00D2FE  0101               	movlb	1	; () banked
 40799  00D300  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 40800  00D302  A4D8               	btfss	status,2,c
 40801  00D304  0012               	return	
 40802                           
 40803                           ; BSR set to: 1
 40804                           ;motor.c: 588: };motor.c: 591: if(os.current_position_in_steps == target_position)
 40805                           
 40806                           ; BSR set to: 1
 40807                           
 40808                           ; BSR set to: 1
 40809                           ;motor.c: 586: {;motor.c: 587: return;
 40810  00D306  0100               	movlb	0	; () banked
 40811  00D308  51A9               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40812  00D30A  0101               	movlb	1	; () banked
 40813  00D30C  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 40814  00D30E  E110               	bnz	l15053
 40815  00D310  0100               	movlb	0	; () banked
 40816  00D312  51AA               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40817  00D314  0101               	movlb	1	; () banked
 40818  00D316  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 40819  00D318  E10B               	bnz	l15053
 40820  00D31A  0100               	movlb	0	; () banked
 40821  00D31C  51AB               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40822  00D31E  0101               	movlb	1	; () banked
 40823  00D320  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 40824  00D322  E106               	bnz	l15053
 40825  00D324  0100               	movlb	0	; () banked
 40826  00D326  51AC               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40827  00D328  0101               	movlb	1	; () banked
 40828  00D32A  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 40829  00D32C  B4D8               	btfsc	status,2,c
 40830  00D32E  0012               	return	
 40831  00D330                     l15053:
 40832                           
 40833                           ; BSR set to: 1
 40834                           ;motor.c: 594: };motor.c: 597: overhead_cw = 0;
 40835  00D330  0E00               	movlw	0
 40836  00D332  0100               	movlb	0	; () banked
 40837  00D334  6FB5               	movwf	motor_go_to_steps_position@overhead_cw& (0+255),b
 40838  00D336  0E00               	movlw	0
 40839  00D338  6FB6               	movwf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),b
 40840  00D33A  0E00               	movlw	0
 40841  00D33C  6FB7               	movwf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),b
 40842  00D33E  0E00               	movlw	0
 40843  00D340  6FB8               	movwf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),b
 40844                           
 40845                           ; BSR set to: 0
 40846                           ;motor.c: 598: distance_cw = target_position - os.current_position_in_steps;
 40847  00D342  C178  F0AD         	movff	_os+7,??_motor_go_to_steps_position	;volatile
 40848  00D346  C179  F0AE         	movff	_os+8,??_motor_go_to_steps_position+1	;volatile
 40849  00D34A  C17A  F0AF         	movff	_os+9,??_motor_go_to_steps_position+2	;volatile
 40850  00D34E  C17B  F0B0         	movff	_os+10,??_motor_go_to_steps_position+3	;volatile
 40851  00D352  1FAD               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40852  00D354  1FAE               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40853  00D356  1FAF               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40854  00D358  1FB0               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40855  00D35A  2BAD               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40856  00D35C  0E00               	movlw	0
 40857  00D35E  23AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40858  00D360  23AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40859  00D362  23B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40860  00D364  51A9               	movf	motor_go_to_steps_position@target_position& (0+255),w,b
 40861  00D366  25AD               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40862  00D368  6FBD               	movwf	motor_go_to_steps_position@distance_cw& (0+255),b
 40863  00D36A  51AA               	movf	(motor_go_to_steps_position@target_position+1)& (0+255),w,b
 40864  00D36C  21AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40865  00D36E  6FBE               	movwf	(motor_go_to_steps_position@distance_cw+1)& (0+255),b
 40866  00D370  51AB               	movf	(motor_go_to_steps_position@target_position+2)& (0+255),w,b
 40867  00D372  21AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 40868  00D374  6FBF               	movwf	(motor_go_to_steps_position@distance_cw+2)& (0+255),b
 40869  00D376  51AC               	movf	(motor_go_to_steps_position@target_position+3)& (0+255),w,b
 40870  00D378  21B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 40871  00D37A  6FC0               	movwf	(motor_go_to_steps_position@distance_cw+3)& (0+255),b
 40872                           
 40873                           ; BSR set to: 0
 40874                           ;motor.c: 599: if(distance_cw>config.full_circle_in_steps)
 40875  00D37C  51BD               	movf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 40876  00D37E  0101               	movlb	1	; () banked
 40877  00D380  5DA1               	subwf	_config& (0+255),w,b
 40878  00D382  0100               	movlb	0	; () banked
 40879  00D384  51BE               	movf	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 40880  00D386  0101               	movlb	1	; () banked
 40881  00D388  59A2               	subwfb	(_config+1)& (0+255),w,b
 40882  00D38A  0100               	movlb	0	; () banked
 40883  00D38C  51BF               	movf	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 40884  00D38E  0101               	movlb	1	; () banked
 40885  00D390  59A3               	subwfb	(_config+2)& (0+255),w,b
 40886  00D392  0100               	movlb	0	; () banked
 40887  00D394  51C0               	movf	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 40888  00D396  0101               	movlb	1	; () banked
 40889  00D398  59A4               	subwfb	(_config+3)& (0+255),w,b
 40890  00D39A  B0D8               	btfsc	status,0,c
 40891  00D39C  D00F               	goto	l2535
 40892                           
 40893                           ; BSR set to: 1
 40894                           ;motor.c: 600: {;motor.c: 601: distance_cw += config.full_circle_in_steps;
 40895  00D39E  51A1               	movf	_config& (0+255),w,b
 40896  00D3A0  0100               	movlb	0	; () banked
 40897  00D3A2  27BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40898  00D3A4  0101               	movlb	1	; () banked
 40899  00D3A6  51A2               	movf	(_config+1)& (0+255),w,b
 40900  00D3A8  0100               	movlb	0	; () banked
 40901  00D3AA  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40902  00D3AC  0101               	movlb	1	; () banked
 40903  00D3AE  51A3               	movf	(_config+2)& (0+255),w,b
 40904  00D3B0  0100               	movlb	0	; () banked
 40905  00D3B2  23BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40906  00D3B4  0101               	movlb	1	; () banked
 40907  00D3B6  51A4               	movf	(_config+3)& (0+255),w,b
 40908  00D3B8  0100               	movlb	0	; () banked
 40909  00D3BA  23C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40910  00D3BC                     l2535:
 40911                           
 40912                           ;motor.c: 602: };motor.c: 603: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 40913  00D3BC  0101               	movlb	1	; () banked
 40914  00D3BE  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 40915  00D3C0  A4D8               	btfss	status,2,c
 40916  00D3C2  D023               	goto	l2536
 40917                           
 40918                           ; BSR set to: 1
 40919                           ;motor.c: 604: {;motor.c: 605: distance_cw += config.overshoot_in_steps;
 40920  00D3C4  51A6               	movf	(_config+5)& (0+255),w,b
 40921  00D3C6  0100               	movlb	0	; () banked
 40922  00D3C8  27BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),f,b
 40923  00D3CA  0101               	movlb	1	; () banked
 40924  00D3CC  51A7               	movf	(_config+6)& (0+255),w,b
 40925  00D3CE  0100               	movlb	0	; () banked
 40926  00D3D0  23BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),f,b
 40927  00D3D2  0E00               	movlw	0
 40928  00D3D4  23BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),f,b
 40929  00D3D6  0E00               	movlw	0
 40930  00D3D8  23C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),f,b
 40931                           
 40932                           ;motor.c: 606: overhead_cw += config.overshoot_in_steps;
 40933  00D3DA  0101               	movlb	1	; () banked
 40934  00D3DC  51A6               	movf	(_config+5)& (0+255),w,b
 40935  00D3DE  0100               	movlb	0	; () banked
 40936  00D3E0  27B5               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40937  00D3E2  0101               	movlb	1	; () banked
 40938  00D3E4  51A7               	movf	(_config+6)& (0+255),w,b
 40939  00D3E6  0100               	movlb	0	; () banked
 40940  00D3E8  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40941  00D3EA  0E00               	movlw	0
 40942  00D3EC  23B7               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40943  00D3EE  0E00               	movlw	0
 40944  00D3F0  23B8               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40945                           
 40946                           ;motor.c: 607: overhead_cw += config.overshoot_cost_in_steps;
 40947  00D3F2  0101               	movlb	1	; () banked
 40948  00D3F4  51A8               	movf	(_config+7)& (0+255),w,b
 40949  00D3F6  0100               	movlb	0	; () banked
 40950  00D3F8  27B5               	addwf	motor_go_to_steps_position@overhead_cw& (0+255),f,b
 40951  00D3FA  0101               	movlb	1	; () banked
 40952  00D3FC  51A9               	movf	(_config+8)& (0+255),w,b
 40953  00D3FE  0100               	movlb	0	; () banked
 40954  00D400  23B6               	addwfc	(motor_go_to_steps_position@overhead_cw+1)& (0+255),f,b
 40955  00D402  0E00               	movlw	0
 40956  00D404  23B7               	addwfc	(motor_go_to_steps_position@overhead_cw+2)& (0+255),f,b
 40957  00D406  0E00               	movlw	0
 40958  00D408  23B8               	addwfc	(motor_go_to_steps_position@overhead_cw+3)& (0+255),f,b
 40959  00D40A                     l2536:
 40960                           
 40961                           ;motor.c: 608: };motor.c: 611: overhead_ccw = 0;
 40962                           
 40963                           ; BSR set to: 0
 40964  00D40A  0E00               	movlw	0
 40965  00D40C  0100               	movlb	0	; () banked
 40966  00D40E  6FB9               	movwf	motor_go_to_steps_position@overhead_ccw& (0+255),b
 40967  00D410  0E00               	movlw	0
 40968  00D412  6FBA               	movwf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),b
 40969  00D414  0E00               	movlw	0
 40970  00D416  6FBB               	movwf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),b
 40971  00D418  0E00               	movlw	0
 40972  00D41A  6FBC               	movwf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),b
 40973                           
 40974                           ; BSR set to: 0
 40975                           ;motor.c: 612: distance_ccw = os.current_position_in_steps - target_position;
 40976  00D41C  C0A9  F0AD         	movff	motor_go_to_steps_position@target_position,??_motor_go_to_steps_position
 40977  00D420  C0AA  F0AE         	movff	motor_go_to_steps_position@target_position+1,??_motor_go_to_steps_position+1
 40978  00D424  C0AB  F0AF         	movff	motor_go_to_steps_position@target_position+2,??_motor_go_to_steps_position+2
 40979  00D428  C0AC  F0B0         	movff	motor_go_to_steps_position@target_position+3,??_motor_go_to_steps_position+3
 40980  00D42C  1FAD               	comf	??_motor_go_to_steps_position& (0+255),f,b
 40981  00D42E  1FAE               	comf	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40982  00D430  1FAF               	comf	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40983  00D432  1FB0               	comf	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40984  00D434  2BAD               	incf	??_motor_go_to_steps_position& (0+255),f,b
 40985  00D436  0E00               	movlw	0
 40986  00D438  23AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),f,b
 40987  00D43A  23AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),f,b
 40988  00D43C  23B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),f,b
 40989  00D43E  0101               	movlb	1	; () banked
 40990  00D440  5178               	movf	(_os+7)& (0+255),w,b	;volatile
 40991  00D442  0100               	movlb	0	; () banked
 40992  00D444  25AD               	addwf	??_motor_go_to_steps_position& (0+255),w,b
 40993  00D446  6FC1               	movwf	motor_go_to_steps_position@distance_ccw& (0+255),b
 40994  00D448  0101               	movlb	1	; () banked
 40995  00D44A  5179               	movf	(_os+8)& (0+255),w,b	;volatile
 40996  00D44C  0100               	movlb	0	; () banked
 40997  00D44E  21AE               	addwfc	(??_motor_go_to_steps_position+1)& (0+255),w,b
 40998  00D450  6FC2               	movwf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),b
 40999  00D452  0101               	movlb	1	; () banked
 41000  00D454  517A               	movf	(_os+9)& (0+255),w,b	;volatile
 41001  00D456  0100               	movlb	0	; () banked
 41002  00D458  21AF               	addwfc	(??_motor_go_to_steps_position+2)& (0+255),w,b
 41003  00D45A  6FC3               	movwf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),b
 41004  00D45C  0101               	movlb	1	; () banked
 41005  00D45E  517B               	movf	(_os+10)& (0+255),w,b	;volatile
 41006  00D460  0100               	movlb	0	; () banked
 41007  00D462  21B0               	addwfc	(??_motor_go_to_steps_position+3)& (0+255),w,b
 41008  00D464  6FC4               	movwf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),b
 41009                           
 41010                           ; BSR set to: 0
 41011                           ;motor.c: 613: if(distance_ccw>config.full_circle_in_steps)
 41012  00D466  51C1               	movf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 41013  00D468  0101               	movlb	1	; () banked
 41014  00D46A  5DA1               	subwf	_config& (0+255),w,b
 41015  00D46C  0100               	movlb	0	; () banked
 41016  00D46E  51C2               	movf	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 41017  00D470  0101               	movlb	1	; () banked
 41018  00D472  59A2               	subwfb	(_config+1)& (0+255),w,b
 41019  00D474  0100               	movlb	0	; () banked
 41020  00D476  51C3               	movf	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 41021  00D478  0101               	movlb	1	; () banked
 41022  00D47A  59A3               	subwfb	(_config+2)& (0+255),w,b
 41023  00D47C  0100               	movlb	0	; () banked
 41024  00D47E  51C4               	movf	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 41025  00D480  0101               	movlb	1	; () banked
 41026  00D482  59A4               	subwfb	(_config+3)& (0+255),w,b
 41027  00D484  B0D8               	btfsc	status,0,c
 41028  00D486  D00F               	goto	l2537
 41029                           
 41030                           ; BSR set to: 1
 41031                           ;motor.c: 614: {;motor.c: 615: distance_ccw += config.full_circle_in_steps;
 41032  00D488  51A1               	movf	_config& (0+255),w,b
 41033  00D48A  0100               	movlb	0	; () banked
 41034  00D48C  27C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 41035  00D48E  0101               	movlb	1	; () banked
 41036  00D490  51A2               	movf	(_config+1)& (0+255),w,b
 41037  00D492  0100               	movlb	0	; () banked
 41038  00D494  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 41039  00D496  0101               	movlb	1	; () banked
 41040  00D498  51A3               	movf	(_config+2)& (0+255),w,b
 41041  00D49A  0100               	movlb	0	; () banked
 41042  00D49C  23C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 41043  00D49E  0101               	movlb	1	; () banked
 41044  00D4A0  51A4               	movf	(_config+3)& (0+255),w,b
 41045  00D4A2  0100               	movlb	0	; () banked
 41046  00D4A4  23C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 41047  00D4A6                     l2537:
 41048                           
 41049                           ;motor.c: 616: };motor.c: 617: if(os.approach_direction==MOTOR_DIRECTION_CW)
 41050  00D4A6  0101               	movlb	1	; () banked
 41051  00D4A8  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 41052  00D4AA  A4D8               	btfss	status,2,c
 41053  00D4AC  D023               	goto	l2538
 41054                           
 41055                           ; BSR set to: 1
 41056                           ;motor.c: 618: {;motor.c: 619: distance_ccw += config.overshoot_in_steps;
 41057  00D4AE  51A6               	movf	(_config+5)& (0+255),w,b
 41058  00D4B0  0100               	movlb	0	; () banked
 41059  00D4B2  27C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),f,b
 41060  00D4B4  0101               	movlb	1	; () banked
 41061  00D4B6  51A7               	movf	(_config+6)& (0+255),w,b
 41062  00D4B8  0100               	movlb	0	; () banked
 41063  00D4BA  23C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),f,b
 41064  00D4BC  0E00               	movlw	0
 41065  00D4BE  23C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),f,b
 41066  00D4C0  0E00               	movlw	0
 41067  00D4C2  23C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),f,b
 41068                           
 41069                           ;motor.c: 620: overhead_ccw += config.overshoot_in_steps;
 41070  00D4C4  0101               	movlb	1	; () banked
 41071  00D4C6  51A6               	movf	(_config+5)& (0+255),w,b
 41072  00D4C8  0100               	movlb	0	; () banked
 41073  00D4CA  27B9               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 41074  00D4CC  0101               	movlb	1	; () banked
 41075  00D4CE  51A7               	movf	(_config+6)& (0+255),w,b
 41076  00D4D0  0100               	movlb	0	; () banked
 41077  00D4D2  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 41078  00D4D4  0E00               	movlw	0
 41079  00D4D6  23BB               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 41080  00D4D8  0E00               	movlw	0
 41081  00D4DA  23BC               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 41082                           
 41083                           ;motor.c: 621: overhead_ccw += config.overshoot_cost_in_steps;
 41084  00D4DC  0101               	movlb	1	; () banked
 41085  00D4DE  51A8               	movf	(_config+7)& (0+255),w,b
 41086  00D4E0  0100               	movlb	0	; () banked
 41087  00D4E2  27B9               	addwf	motor_go_to_steps_position@overhead_ccw& (0+255),f,b
 41088  00D4E4  0101               	movlb	1	; () banked
 41089  00D4E6  51A9               	movf	(_config+8)& (0+255),w,b
 41090  00D4E8  0100               	movlb	0	; () banked
 41091  00D4EA  23BA               	addwfc	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),f,b
 41092  00D4EC  0E00               	movlw	0
 41093  00D4EE  23BB               	addwfc	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),f,b
 41094  00D4F0  0E00               	movlw	0
 41095  00D4F2  23BC               	addwfc	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),f,b
 41096  00D4F4                     l2538:
 41097                           
 41098                           ;motor.c: 622: };motor.c: 625: if((distance_cw+overhead_cw) < (distance_ccw+overhead_ccw
      +                          ))
 41099                           
 41100                           ; BSR set to: 0
 41101  00D4F4  0100               	movlb	0	; () banked
 41102  00D4F6  51B9               	movf	motor_go_to_steps_position@overhead_ccw& (0+255),w,b
 41103  00D4F8  25C1               	addwf	motor_go_to_steps_position@distance_ccw& (0+255),w,b
 41104  00D4FA  6FAD               	movwf	??_motor_go_to_steps_position& (0+255),b
 41105  00D4FC  51BA               	movf	(motor_go_to_steps_position@overhead_ccw+1)& (0+255),w,b
 41106  00D4FE  21C2               	addwfc	(motor_go_to_steps_position@distance_ccw+1)& (0+255),w,b
 41107  00D500  6FAE               	movwf	(??_motor_go_to_steps_position+1)& (0+255),b
 41108  00D502  51BB               	movf	(motor_go_to_steps_position@overhead_ccw+2)& (0+255),w,b
 41109  00D504  21C3               	addwfc	(motor_go_to_steps_position@distance_ccw+2)& (0+255),w,b
 41110  00D506  6FAF               	movwf	(??_motor_go_to_steps_position+2)& (0+255),b
 41111  00D508  51BC               	movf	(motor_go_to_steps_position@overhead_ccw+3)& (0+255),w,b
 41112  00D50A  21C4               	addwfc	(motor_go_to_steps_position@distance_ccw+3)& (0+255),w,b
 41113  00D50C  6FB0               	movwf	(??_motor_go_to_steps_position+3)& (0+255),b
 41114  00D50E  51B5               	movf	motor_go_to_steps_position@overhead_cw& (0+255),w,b
 41115  00D510  25BD               	addwf	motor_go_to_steps_position@distance_cw& (0+255),w,b
 41116  00D512  6FB1               	movwf	(??_motor_go_to_steps_position+4)& (0+255),b
 41117  00D514  51B6               	movf	(motor_go_to_steps_position@overhead_cw+1)& (0+255),w,b
 41118  00D516  21BE               	addwfc	(motor_go_to_steps_position@distance_cw+1)& (0+255),w,b
 41119  00D518  6FB2               	movwf	(??_motor_go_to_steps_position+5)& (0+255),b
 41120  00D51A  51B7               	movf	(motor_go_to_steps_position@overhead_cw+2)& (0+255),w,b
 41121  00D51C  21BF               	addwfc	(motor_go_to_steps_position@distance_cw+2)& (0+255),w,b
 41122  00D51E  6FB3               	movwf	(??_motor_go_to_steps_position+6)& (0+255),b
 41123  00D520  51B8               	movf	(motor_go_to_steps_position@overhead_cw+3)& (0+255),w,b
 41124  00D522  21C0               	addwfc	(motor_go_to_steps_position@distance_cw+3)& (0+255),w,b
 41125  00D524  6FB4               	movwf	(??_motor_go_to_steps_position+7)& (0+255),b
 41126  00D526  51AD               	movf	??_motor_go_to_steps_position& (0+255),w,b
 41127  00D528  5DB1               	subwf	(??_motor_go_to_steps_position+4)& (0+255),w,b
 41128  00D52A  51AE               	movf	(??_motor_go_to_steps_position+1)& (0+255),w,b
 41129  00D52C  59B2               	subwfb	(??_motor_go_to_steps_position+5)& (0+255),w,b
 41130  00D52E  51AF               	movf	(??_motor_go_to_steps_position+2)& (0+255),w,b
 41131  00D530  59B3               	subwfb	(??_motor_go_to_steps_position+6)& (0+255),w,b
 41132  00D532  51B0               	movf	(??_motor_go_to_steps_position+3)& (0+255),w,b
 41133  00D534  59B4               	subwfb	(??_motor_go_to_steps_position+7)& (0+255),w,b
 41134  00D536  B0D8               	btfsc	status,0,c
 41135  00D538  D03F               	goto	l2539
 41136                           
 41137                           ; BSR set to: 0
 41138                           ;motor.c: 626: {;motor.c: 627: if(os.approach_direction==MOTOR_DIRECTION_CW)
 41139  00D53A  0101               	movlb	1	; () banked
 41140  00D53C  0583               	decf	(_os+18)& (0+255),w,b	;volatile
 41141  00D53E  A4D8               	btfss	status,2,c
 41142  00D540  D013               	goto	l2540
 41143                           
 41144                           ; BSR set to: 1
 41145                           ;motor.c: 628: {;motor.c: 630: motor_schedule_command(MOTOR_DIRECTION_CW, distance_cw, 0
      +                          , MOTOR_MOVE_TYPE_NORMAL);
 41146  00D542  C0BD  F0A1         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 41147  00D546  C0BE  F0A2         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 41148  00D54A  C0BF  F0A3         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 41149  00D54E  C0C0  F0A4         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 41150  00D552  0E00               	movlw	0
 41151  00D554  0100               	movlb	0	; () banked
 41152  00D556  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41153  00D558  0E00               	movlw	0
 41154  00D55A  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41155  00D55C  0E00               	movlw	0
 41156  00D55E  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41157  00D560  0E01               	movlw	1
 41158  00D562  EC7A  F094         	call	_motor_schedule_command
 41159                           
 41160                           ;motor.c: 631: }
 41161  00D566  0012               	return	
 41162  00D568                     l2540:
 41163                           
 41164                           ;motor.c: 632: else;motor.c: 633: {;motor.c: 635: motor_schedule_command(MOTOR_DIRECTION
      +                          _CW, distance_cw, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 41165  00D568  C0BD  F0A1         	movff	motor_go_to_steps_position@distance_cw,motor_schedule_command@distance_in_steps
 41166  00D56C  C0BE  F0A2         	movff	motor_go_to_steps_position@distance_cw+1,motor_schedule_command@distance_in_steps
      +                          +1
 41167  00D570  C0BF  F0A3         	movff	motor_go_to_steps_position@distance_cw+2,motor_schedule_command@distance_in_steps
      +                          +2
 41168  00D574  C0C0  F0A4         	movff	motor_go_to_steps_position@distance_cw+3,motor_schedule_command@distance_in_steps
      +                          +3
 41169  00D578  0E00               	movlw	0
 41170  00D57A  0100               	movlb	0	; () banked
 41171  00D57C  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41172  00D57E  0E00               	movlw	0
 41173  00D580  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41174  00D582  0E01               	movlw	1
 41175  00D584  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41176  00D586  0E01               	movlw	1
 41177  00D588  EC7A  F094         	call	_motor_schedule_command
 41178                           
 41179                           ;motor.c: 636: if(config.overshoot_in_steps!=0)
 41180  00D58C  0101               	movlb	1	; () banked
 41181  00D58E  51A6               	movf	(_config+5)& (0+255),w,b
 41182  00D590  11A7               	iorwf	(_config+6)& (0+255),w,b
 41183  00D592  B4D8               	btfsc	status,2,c
 41184  00D594  0012               	return	
 41185                           
 41186                           ; BSR set to: 1
 41187                           ;motor.c: 637: {;motor.c: 638: motor_schedule_command(MOTOR_DIRECTION_CCW, config.oversh
      +                          oot_in_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 41188  00D596  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 41189  00D59A  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41190  00D59E  0100               	movlb	0	; () banked
 41191  00D5A0  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41192  00D5A2  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41193  00D5A4  0E00               	movlw	0
 41194  00D5A6  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41195  00D5A8  0E00               	movlw	0
 41196  00D5AA  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41197  00D5AC  0E00               	movlw	0
 41198  00D5AE  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41199  00D5B0  0EFF               	movlw	255
 41200  00D5B2  EC7A  F094         	call	_motor_schedule_command
 41201                           
 41202                           ;motor.c: 639: };motor.c: 640: };motor.c: 641: }
 41203  00D5B6  0012               	return	
 41204  00D5B8                     l2539:
 41205                           
 41206                           ;motor.c: 642: else;motor.c: 643: {;motor.c: 644: if(os.approach_direction==MOTOR_DIRECT
      +                          ION_CCW)
 41207  00D5B8  0101               	movlb	1	; () banked
 41208  00D5BA  2983               	incf	(_os+18)& (0+255),w,b	;volatile
 41209  00D5BC  A4D8               	btfss	status,2,c
 41210  00D5BE  D013               	goto	l2544
 41211                           
 41212                           ; BSR set to: 1
 41213                           ;motor.c: 645: {;motor.c: 647: motor_schedule_command(MOTOR_DIRECTION_CCW, distance_ccw,
      +                           0, MOTOR_MOVE_TYPE_NORMAL);
 41214  00D5C0  C0C1  F0A1         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 41215  00D5C4  C0C2  F0A2         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 41216  00D5C8  C0C3  F0A3         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 41217  00D5CC  C0C4  F0A4         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 41218  00D5D0  0E00               	movlw	0
 41219  00D5D2  0100               	movlb	0	; () banked
 41220  00D5D4  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41221  00D5D6  0E00               	movlw	0
 41222  00D5D8  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41223  00D5DA  0E00               	movlw	0
 41224  00D5DC  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41225  00D5DE  0EFF               	movlw	255
 41226  00D5E0  EC7A  F094         	call	_motor_schedule_command
 41227                           
 41228                           ;motor.c: 648: }
 41229  00D5E4  0012               	return	
 41230  00D5E6                     l2544:
 41231                           
 41232                           ;motor.c: 649: else;motor.c: 650: {;motor.c: 652: motor_schedule_command(MOTOR_DIRECTION
      +                          _CCW, distance_ccw, 0, MOTOR_MOVE_TYPE_OVERSHOOT);
 41233  00D5E6  C0C1  F0A1         	movff	motor_go_to_steps_position@distance_ccw,motor_schedule_command@distance_in_steps
 41234  00D5EA  C0C2  F0A2         	movff	motor_go_to_steps_position@distance_ccw+1,motor_schedule_command@distance_in_step
      +                          s+1
 41235  00D5EE  C0C3  F0A3         	movff	motor_go_to_steps_position@distance_ccw+2,motor_schedule_command@distance_in_step
      +                          s+2
 41236  00D5F2  C0C4  F0A4         	movff	motor_go_to_steps_position@distance_ccw+3,motor_schedule_command@distance_in_step
      +                          s+3
 41237  00D5F6  0E00               	movlw	0
 41238  00D5F8  0100               	movlb	0	; () banked
 41239  00D5FA  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41240  00D5FC  0E00               	movlw	0
 41241  00D5FE  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41242  00D600  0E01               	movlw	1
 41243  00D602  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41244  00D604  0EFF               	movlw	255
 41245  00D606  EC7A  F094         	call	_motor_schedule_command
 41246                           
 41247                           ;motor.c: 653: if(config.overshoot_in_steps!=0)
 41248  00D60A  0101               	movlb	1	; () banked
 41249  00D60C  51A6               	movf	(_config+5)& (0+255),w,b
 41250  00D60E  11A7               	iorwf	(_config+6)& (0+255),w,b
 41251  00D610  B4D8               	btfsc	status,2,c
 41252  00D612  0012               	return	
 41253                           
 41254                           ; BSR set to: 1
 41255                           ;motor.c: 654: {;motor.c: 655: motor_schedule_command(MOTOR_DIRECTION_CW, config.oversho
      +                          ot_in_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 41256  00D614  C1A6  F0A1         	movff	_config+5,motor_schedule_command@distance_in_steps
 41257  00D618  C1A7  F0A2         	movff	_config+6,motor_schedule_command@distance_in_steps+1
 41258  00D61C  0100               	movlb	0	; () banked
 41259  00D61E  6BA3               	clrf	(motor_schedule_command@distance_in_steps+2)& (0+255),b
 41260  00D620  6BA4               	clrf	(motor_schedule_command@distance_in_steps+3)& (0+255),b
 41261  00D622  0E00               	movlw	0
 41262  00D624  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 41263  00D626  0E00               	movlw	0
 41264  00D628  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 41265  00D62A  0E00               	movlw	0
 41266  00D62C  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 41267  00D62E  0E01               	movlw	1
 41268  00D630  EC7A  F094         	call	_motor_schedule_command
 41269  00D634  0012               	return	
 41270  00D636                     __end_of_motor_go_to_steps_position:
 41271                           	opt stack 0
 41272                           tosu	equ	0xFFF
 41273                           tosh	equ	0xFFE
 41274                           tosl	equ	0xFFD
 41275                           pclath	equ	0xFFA
 41276                           tblptru	equ	0xFF8
 41277                           tblptrh	equ	0xFF7
 41278                           tblptrl	equ	0xFF6
 41279                           tablat	equ	0xFF5
 41280                           prodh	equ	0xFF4
 41281                           prodl	equ	0xFF3
 41282                           intcon	equ	0xFF2
 41283                           indf0	equ	0xFEF
 41284                           postinc0	equ	0xFEE
 41285                           fsr0h	equ	0xFEA
 41286                           fsr0l	equ	0xFE9
 41287                           wreg	equ	0xFE8
 41288                           indf1	equ	0xFE7
 41289                           postinc1	equ	0xFE6
 41290                           postdec1	equ	0xFE5
 41291                           plusw1	equ	0xFE3
 41292                           fsr1h	equ	0xFE2
 41293                           fsr1l	equ	0xFE1
 41294                           indf2	equ	0xFDF
 41295                           postinc2	equ	0xFDE
 41296                           postdec2	equ	0xFDD
 41297                           plusw2	equ	0xFDB
 41298                           fsr2h	equ	0xFDA
 41299                           fsr2l	equ	0xFD9
 41300                           status	equ	0xFD8
 41301                           
 41302 ;; *************** function _motor_clear_command_cue *****************
 41303 ;; Defined at:
 41304 ;;		line 154 in file "motor.c"
 41305 ;; Parameters:    Size  Location     Type
 41306 ;;		None
 41307 ;; Auto vars:     Size  Location     Type
 41308 ;;		None
 41309 ;; Return value:  Size  Location     Type
 41310 ;;                  1    wreg      void 
 41311 ;; Registers used:
 41312 ;;		None
 41313 ;; Tracked objects:
 41314 ;;		On entry : 0/0
 41315 ;;		On exit  : 0/0
 41316 ;;		Unchanged: 0/0
 41317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41322 ;;Total ram usage:        0 bytes
 41323 ;; Hardware stack levels used:    1
 41324 ;; Hardware stack levels required when called:   10
 41325 ;; This function calls:
 41326 ;;		Nothing
 41327 ;; This function is called by:
 41328 ;;		__parse_command_short
 41329 ;; This function uses a non-reentrant model
 41330 ;;
 41331                           
 41332                           	psect	text169
 41333  015A72                     __ptext169:
 41334                           	opt stack 0
 41335  015A72                     _motor_clear_command_cue:
 41336                           	opt stack 17
 41337                           
 41338                           ;motor.c: 157: motor_cue_write_index = motor_cue_read_index;
 41339                           
 41340                           ;incstack = 0
 41341  015A72  C158  F157         	movff	_motor_cue_read_index,_motor_cue_write_index
 41342  015A76  0012               	return		;funcret
 41343  015A78                     __end_of_motor_clear_command_cue:
 41344                           	opt stack 0
 41345                           tosu	equ	0xFFF
 41346                           tosh	equ	0xFFE
 41347                           tosl	equ	0xFFD
 41348                           pclath	equ	0xFFA
 41349                           tblptru	equ	0xFF8
 41350                           tblptrh	equ	0xFF7
 41351                           tblptrl	equ	0xFF6
 41352                           tablat	equ	0xFF5
 41353                           prodh	equ	0xFF4
 41354                           prodl	equ	0xFF3
 41355                           intcon	equ	0xFF2
 41356                           indf0	equ	0xFEF
 41357                           postinc0	equ	0xFEE
 41358                           fsr0h	equ	0xFEA
 41359                           fsr0l	equ	0xFE9
 41360                           wreg	equ	0xFE8
 41361                           indf1	equ	0xFE7
 41362                           postinc1	equ	0xFE6
 41363                           postdec1	equ	0xFE5
 41364                           plusw1	equ	0xFE3
 41365                           fsr1h	equ	0xFE2
 41366                           fsr1l	equ	0xFE1
 41367                           indf2	equ	0xFDF
 41368                           postinc2	equ	0xFDE
 41369                           postdec2	equ	0xFDD
 41370                           plusw2	equ	0xFDB
 41371                           fsr2h	equ	0xFDA
 41372                           fsr2l	equ	0xFD9
 41373                           status	equ	0xFD8
 41374                           
 41375 ;; *************** function __parse_command_long *****************
 41376 ;; Defined at:
 41377 ;;		line 435 in file "api.c"
 41378 ;; Parameters:    Size  Location     Type
 41379 ;;  data            2   85[BANK0 ] PTR unsigned char 
 41380 ;;		 -> ReceivedDataBuffer(64), 
 41381 ;;  out_buffer      2   87[BANK0 ] PTR unsigned char 
 41382 ;;		 -> ToSendDataBuffer(64), 
 41383 ;;  out_idx_ptr     2   89[BANK0 ] PTR unsigned char 
 41384 ;;		 -> api_parse@out_idx(1), 
 41385 ;; Auto vars:     Size  Location     Type
 41386 ;;  length          1   91[BANK0 ] unsigned char 
 41387 ;; Return value:  Size  Location     Type
 41388 ;;                  1    wreg      unsigned char 
 41389 ;; Registers used:
 41390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41391 ;; Tracked objects:
 41392 ;;		On entry : 0/0
 41393 ;;		On exit  : 0/0
 41394 ;;		Unchanged: 0/0
 41395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41396 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41397 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41399 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41400 ;;Total ram usage:        7 bytes
 41401 ;; Hardware stack levels used:    1
 41402 ;; Hardware stack levels required when called:   15
 41403 ;; This function calls:
 41404 ;;		__parse_jump_steps
 41405 ;;		__parse_set_manual_speed
 41406 ;; This function is called by:
 41407 ;;		_api_parse
 41408 ;; This function uses a non-reentrant model
 41409 ;;
 41410                           
 41411                           	psect	text170
 41412  0143F6                     __ptext170:
 41413                           	opt stack 0
 41414  0143F6                     __parse_command_long:
 41415                           	opt stack 13
 41416                           
 41417                           ;api.c: 437: uint8_t length = 65;
 41418                           
 41419                           ;incstack = 0
 41420  0143F6  0E41               	movlw	65
 41421  0143F8  0100               	movlb	0	; () banked
 41422  0143FA  6FBB               	movwf	__parse_command_long@length& (0+255),b
 41423                           
 41424                           ;api.c: 439: switch(data[0])
 41425  0143FC  D020               	goto	l2319
 41426  0143FE                     
 41427                           ; BSR set to: 0
 41428                           ;api.c: 446: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 41429                           
 41430                           ; BSR set to: 0
 41431  0143FE  C0B5  F0A9         	movff	__parse_command_long@data,__parse_jump_steps@data
 41432  014402  C0B6  F0AA         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 41433  014406  C0B7  F0AB         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 41434  01440A  C0B8  F0AC         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 41435  01440E  C0B9  F0AD         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 41436  014412  C0BA  F0AE         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 41437  014416  EC24  F07E         	call	__parse_jump_steps	;wreg free
 41438  01441A  D00E               	goto	L63
 41439  01441C                     
 41440                           ; BSR set to: 0
 41441                           ;api.c: 450: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 41442                           
 41443                           ; BSR set to: 0
 41444  01441C  C0B5  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 41445  014420  C0B6  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 41446  014424  C0B7  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 41447  014428  C0B8  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 41448  01442C  C0B9  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 41449  014430  C0BA  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 41450  014434  EC8C  F09D         	call	__parse_set_manual_speed	;wreg free
 41451  014438                     L63:
 41452  014438  0100               	movlb	0	; () banked
 41453  01443A  6FBB               	movwf	__parse_command_long@length& (0+255),b
 41454                           
 41455                           ; BSR set to: 0
 41456                           ;api.c: 452: }
 41457                           
 41458                           ;api.c: 451: break;
 41459  01443C  D00B               	goto	l2321
 41460  01443E                     l2319:
 41461                           
 41462                           ; BSR set to: 0
 41463                           
 41464                           ; BSR set to: 0
 41465  01443E  C0B5  FFD9         	movff	__parse_command_long@data,fsr2l
 41466  014442  C0B6  FFDA         	movff	__parse_command_long@data+1,fsr2h
 41467  014446  50DF               	movf	indf2,w,c
 41468                           
 41469                           ; Switch size 1, requested type "space"
 41470                           ; Number of cases is 2, Range of values is 144 to 146
 41471                           ; switch strategies available:
 41472                           ; Name         Instructions Cycles
 41473                           ; simple_byte            7     4 (average)
 41474                           ;	Chosen strategy is simple_byte
 41475  014448  0A90               	xorlw	144	; case 144
 41476  01444A  B4D8               	btfsc	status,2,c
 41477  01444C  D7D8               	goto	l2320
 41478  01444E  0A02               	xorlw	2	; case 146
 41479  014450  B4D8               	btfsc	status,2,c
 41480  014452  D7E4               	goto	l2322
 41481  014454                     l2321:
 41482                           
 41483                           ; BSR set to: 0
 41484                           ;api.c: 456: return length;
 41485                           
 41486                           ; BSR set to: 0
 41487  014454  51BB               	movf	__parse_command_long@length& (0+255),w,b
 41488  014456  0012               	return	
 41489  014458                     __end_of__parse_command_long:
 41490                           	opt stack 0
 41491                           tosu	equ	0xFFF
 41492                           tosh	equ	0xFFE
 41493                           tosl	equ	0xFFD
 41494                           pclath	equ	0xFFA
 41495                           tblptru	equ	0xFF8
 41496                           tblptrh	equ	0xFF7
 41497                           tblptrl	equ	0xFF6
 41498                           tablat	equ	0xFF5
 41499                           prodh	equ	0xFF4
 41500                           prodl	equ	0xFF3
 41501                           intcon	equ	0xFF2
 41502                           indf0	equ	0xFEF
 41503                           postinc0	equ	0xFEE
 41504                           fsr0h	equ	0xFEA
 41505                           fsr0l	equ	0xFE9
 41506                           wreg	equ	0xFE8
 41507                           indf1	equ	0xFE7
 41508                           postinc1	equ	0xFE6
 41509                           postdec1	equ	0xFE5
 41510                           plusw1	equ	0xFE3
 41511                           fsr1h	equ	0xFE2
 41512                           fsr1l	equ	0xFE1
 41513                           indf2	equ	0xFDF
 41514                           postinc2	equ	0xFDE
 41515                           postdec2	equ	0xFDD
 41516                           plusw2	equ	0xFDB
 41517                           fsr2h	equ	0xFDA
 41518                           fsr2l	equ	0xFD9
 41519                           status	equ	0xFD8
 41520                           
 41521 ;; *************** function __parse_set_manual_speed *****************
 41522 ;; Defined at:
 41523 ;;		line 550 in file "api.c"
 41524 ;; Parameters:    Size  Location     Type
 41525 ;;  data            2    4[BANK0 ] PTR unsigned char 
 41526 ;;		 -> ReceivedDataBuffer(64), 
 41527 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 41528 ;;		 -> ToSendDataBuffer(64), 
 41529 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 41530 ;;		 -> api_parse@out_idx(1), 
 41531 ;; Auto vars:     Size  Location     Type
 41532 ;;  new_speed       2   11[BANK0 ] unsigned int 
 41533 ;; Return value:  Size  Location     Type
 41534 ;;                  1    wreg      unsigned char 
 41535 ;; Registers used:
 41536 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41537 ;; Tracked objects:
 41538 ;;		On entry : 0/0
 41539 ;;		On exit  : 0/0
 41540 ;;		Unchanged: 0/0
 41541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41542 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41543 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41544 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41545 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41546 ;;Total ram usage:        9 bytes
 41547 ;; Hardware stack levels used:    1
 41548 ;; Hardware stack levels required when called:   12
 41549 ;; This function calls:
 41550 ;;		_motor_set_manual_speed
 41551 ;; This function is called by:
 41552 ;;		__parse_command_long
 41553 ;; This function uses a non-reentrant model
 41554 ;;
 41555                           
 41556                           	psect	text171
 41557  013B18                     __ptext171:
 41558                           	opt stack 0
 41559  013B18                     __parse_set_manual_speed:
 41560                           	opt stack 15
 41561                           
 41562                           ;api.c: 554: uint16_t new_speed;;api.c: 556: new_speed = data[1];
 41563                           
 41564                           ; BSR set to: 0
 41565                           ;incstack = 0
 41566  013B18  0100               	movlb	0	; () banked
 41567  013B1A  EE20 F001          	lfsr	2,1
 41568  013B1E  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 41569  013B20  26D9               	addwf	fsr2l,f,c
 41570  013B22  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 41571  013B24  22DA               	addwfc	fsr2h,f,c
 41572  013B26  50DF               	movf	indf2,w,c
 41573  013B28  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 41574  013B2A  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41575  013B2C  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 41576  013B2E  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 41577                           
 41578                           ; BSR set to: 0
 41579                           ;api.c: 557: new_speed <<= 8;
 41580  013B30  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 41581  013B32  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 41582  013B34  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 41583                           
 41584                           ; BSR set to: 0
 41585                           ;api.c: 558: new_speed |= data[2];
 41586  013B36  EE20 F002          	lfsr	2,2
 41587  013B3A  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 41588  013B3C  26D9               	addwf	fsr2l,f,c
 41589  013B3E  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 41590  013B40  22DA               	addwfc	fsr2h,f,c
 41591  013B42  50DF               	movf	indf2,w,c
 41592  013B44  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 41593  013B46  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41594  013B48  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 41595                           
 41596                           ; BSR set to: 0
 41597                           ;api.c: 560: motor_set_manual_speed(new_speed);
 41598  013B4A  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 41599  013B4E  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 41600  013B52  ECCA  F0A6         	call	_motor_set_manual_speed	;wreg free
 41601                           
 41602                           ;api.c: 563: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 41603  013B56  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41604  013B5A  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41605  013B5E  50DF               	movf	indf2,w,c
 41606  013B60  B4D8               	btfsc	status,2,c
 41607  013B62  D01A               	goto	l2338
 41608  013B64  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41609  013B68  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41610  013B6C  0E3F               	movlw	63
 41611  013B6E  60DF               	cpfslt	indf2,c
 41612  013B70  D013               	goto	l2338
 41613                           
 41614                           ;api.c: 564: {;api.c: 565: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 41615  013B72  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 41616  013B76  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 41617  013B7A  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 41618  013B7E  0E01               	movlw	1
 41619  013B80  26DF               	addwf	indf2,f,c
 41620  013B82  0100               	movlb	0	; () banked
 41621  013B84  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 41622  013B86  0D01               	mullw	1
 41623  013B88  50F3               	movf	prodl,w,c
 41624  013B8A  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 41625  013B8C  6ED9               	movwf	fsr2l,c
 41626  013B8E  50F4               	movf	prodh,w,c
 41627  013B90  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 41628  013B92  6EDA               	movwf	fsr2h,c
 41629  013B94  0E92               	movlw	146
 41630  013B96  6EDF               	movwf	indf2,c
 41631  013B98                     l2338:
 41632                           
 41633                           ;api.c: 566: };api.c: 568: return 3;
 41634                           
 41635                           ; BSR set to: 0
 41636  013B98  0E03               	movlw	3
 41637  013B9A  0012               	return	
 41638  013B9C                     __end_of__parse_set_manual_speed:
 41639                           	opt stack 0
 41640                           tosu	equ	0xFFF
 41641                           tosh	equ	0xFFE
 41642                           tosl	equ	0xFFD
 41643                           pclath	equ	0xFFA
 41644                           tblptru	equ	0xFF8
 41645                           tblptrh	equ	0xFF7
 41646                           tblptrl	equ	0xFF6
 41647                           tablat	equ	0xFF5
 41648                           prodh	equ	0xFF4
 41649                           prodl	equ	0xFF3
 41650                           intcon	equ	0xFF2
 41651                           indf0	equ	0xFEF
 41652                           postinc0	equ	0xFEE
 41653                           fsr0h	equ	0xFEA
 41654                           fsr0l	equ	0xFE9
 41655                           wreg	equ	0xFE8
 41656                           indf1	equ	0xFE7
 41657                           postinc1	equ	0xFE6
 41658                           postdec1	equ	0xFE5
 41659                           plusw1	equ	0xFE3
 41660                           fsr1h	equ	0xFE2
 41661                           fsr1l	equ	0xFE1
 41662                           indf2	equ	0xFDF
 41663                           postinc2	equ	0xFDE
 41664                           postdec2	equ	0xFDD
 41665                           plusw2	equ	0xFDB
 41666                           fsr2h	equ	0xFDA
 41667                           fsr2l	equ	0xFD9
 41668                           status	equ	0xFD8
 41669                           
 41670 ;; *************** function _motor_set_manual_speed *****************
 41671 ;; Defined at:
 41672 ;;		line 555 in file "motor.c"
 41673 ;; Parameters:    Size  Location     Type
 41674 ;;  new_speed       2    2[BANK0 ] unsigned int 
 41675 ;; Auto vars:     Size  Location     Type
 41676 ;;		None
 41677 ;; Return value:  Size  Location     Type
 41678 ;;                  1    wreg      void 
 41679 ;; Registers used:
 41680 ;;		wreg, status,2, status,0, cstack
 41681 ;; Tracked objects:
 41682 ;;		On entry : 0/0
 41683 ;;		On exit  : 0/0
 41684 ;;		Unchanged: 0/0
 41685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41686 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41689 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41690 ;;Total ram usage:        2 bytes
 41691 ;; Hardware stack levels used:    1
 41692 ;; Hardware stack levels required when called:   11
 41693 ;; This function calls:
 41694 ;;		_motor_change_speed
 41695 ;; This function is called by:
 41696 ;;		__parse_set_manual_speed
 41697 ;;		_motor_increase_manual_speed
 41698 ;;		_motor_decrease_manual_speed
 41699 ;; This function uses a non-reentrant model
 41700 ;;
 41701                           
 41702                           	psect	text172
 41703  014D94                     __ptext172:
 41704                           	opt stack 0
 41705  014D94                     _motor_set_manual_speed:
 41706                           	opt stack 17
 41707                           
 41708                           ;motor.c: 557: if(new_speed>config.maximum_speed_manual)
 41709                           
 41710                           ;incstack = 0
 41711  014D94  0100               	movlb	0	; () banked
 41712  014D96  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 41713  014D98  0101               	movlb	1	; () banked
 41714  014D9A  5DB4               	subwf	(_config+19)& (0+255),w,b
 41715  014D9C  0100               	movlb	0	; () banked
 41716  014D9E  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 41717  014DA0  0101               	movlb	1	; () banked
 41718  014DA2  59B5               	subwfb	(_config+20)& (0+255),w,b
 41719  014DA4  B0D8               	btfsc	status,0,c
 41720  014DA6  D005               	goto	l2522
 41721                           
 41722                           ; BSR set to: 1
 41723                           ;motor.c: 558: {;motor.c: 559: os.manual_speed = config.maximum_speed_manual;
 41724  014DA8  C1B4  F194         	movff	_config+19,_os+35	;volatile
 41725  014DAC  C1B5  F195         	movff	_config+20,_os+36	;volatile
 41726                           
 41727                           ;motor.c: 560: }
 41728  014DB0  D012               	goto	l2525
 41729  014DB2                     l2522:
 41730                           
 41731                           ; BSR set to: 1
 41732                           ;motor.c: 561: else if(new_speed<config.minimum_speed)
 41733                           
 41734                           ; BSR set to: 1
 41735  014DB2  51AA               	movf	(_config+9)& (0+255),w,b
 41736  014DB4  0100               	movlb	0	; () banked
 41737  014DB6  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 41738  014DB8  0101               	movlb	1	; () banked
 41739  014DBA  51AB               	movf	(_config+10)& (0+255),w,b
 41740  014DBC  0100               	movlb	0	; () banked
 41741  014DBE  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 41742  014DC0  B0D8               	btfsc	status,0,c
 41743  014DC2  D005               	goto	l2524
 41744                           
 41745                           ; BSR set to: 0
 41746                           ;motor.c: 562: {;motor.c: 563: os.manual_speed = config.minimum_speed;
 41747  014DC4  C1AA  F194         	movff	_config+9,_os+35	;volatile
 41748  014DC8  C1AB  F195         	movff	_config+10,_os+36	;volatile
 41749                           
 41750                           ;motor.c: 564: }
 41751  014DCC  D004               	goto	l2525
 41752  014DCE                     l2524:
 41753                           
 41754                           ; BSR set to: 0
 41755                           ;motor.c: 565: else;motor.c: 566: {;motor.c: 567: os.manual_speed = new_speed;
 41756  014DCE  C062  F194         	movff	motor_set_manual_speed@new_speed,_os+35	;volatile
 41757  014DD2  C063  F195         	movff	motor_set_manual_speed@new_speed+1,_os+36	;volatile
 41758  014DD6                     l2525:
 41759                           
 41760                           ;motor.c: 568: };motor.c: 569: motor_change_speed(new_speed);
 41761                           
 41762                           ; BSR set to: 0
 41763                           
 41764                           ; BSR set to: 0
 41765  014DD6  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 41766  014DDA  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 41767  014DDE  EC20  F0AD         	call	_motor_change_speed	;wreg free
 41768  014DE2  0012               	return		;funcret
 41769  014DE4                     __end_of_motor_set_manual_speed:
 41770                           	opt stack 0
 41771                           tosu	equ	0xFFF
 41772                           tosh	equ	0xFFE
 41773                           tosl	equ	0xFFD
 41774                           pclath	equ	0xFFA
 41775                           tblptru	equ	0xFF8
 41776                           tblptrh	equ	0xFF7
 41777                           tblptrl	equ	0xFF6
 41778                           tablat	equ	0xFF5
 41779                           prodh	equ	0xFF4
 41780                           prodl	equ	0xFF3
 41781                           intcon	equ	0xFF2
 41782                           indf0	equ	0xFEF
 41783                           postinc0	equ	0xFEE
 41784                           fsr0h	equ	0xFEA
 41785                           fsr0l	equ	0xFE9
 41786                           wreg	equ	0xFE8
 41787                           indf1	equ	0xFE7
 41788                           postinc1	equ	0xFE6
 41789                           postdec1	equ	0xFE5
 41790                           plusw1	equ	0xFE3
 41791                           fsr1h	equ	0xFE2
 41792                           fsr1l	equ	0xFE1
 41793                           indf2	equ	0xFDF
 41794                           postinc2	equ	0xFDE
 41795                           postdec2	equ	0xFDD
 41796                           plusw2	equ	0xFDB
 41797                           fsr2h	equ	0xFDA
 41798                           fsr2l	equ	0xFD9
 41799                           status	equ	0xFD8
 41800                           
 41801 ;; *************** function _motor_change_speed *****************
 41802 ;; Defined at:
 41803 ;;		line 572 in file "motor.c"
 41804 ;; Parameters:    Size  Location     Type
 41805 ;;  new_speed       2    0[BANK0 ] unsigned int 
 41806 ;; Auto vars:     Size  Location     Type
 41807 ;;		None
 41808 ;; Return value:  Size  Location     Type
 41809 ;;                  1    wreg      void 
 41810 ;; Registers used:
 41811 ;;		None
 41812 ;; Tracked objects:
 41813 ;;		On entry : 0/0
 41814 ;;		On exit  : 0/0
 41815 ;;		Unchanged: 0/0
 41816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41817 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41819 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41820 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41821 ;;Total ram usage:        2 bytes
 41822 ;; Hardware stack levels used:    1
 41823 ;; Hardware stack levels required when called:   10
 41824 ;; This function calls:
 41825 ;;		Nothing
 41826 ;; This function is called by:
 41827 ;;		_motor_set_manual_speed
 41828 ;;		_encoder_statemachine
 41829 ;; This function uses a non-reentrant model
 41830 ;;
 41831                           
 41832                           	psect	text173
 41833  015A40                     __ptext173:
 41834                           	opt stack 0
 41835  015A40                     _motor_change_speed:
 41836                           	opt stack 17
 41837                           
 41838                           ;motor.c: 574: motor_maximum_speed = new_speed;
 41839                           
 41840                           ;incstack = 0
 41841  015A40  C060  F13F         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 41842  015A44  C061  F140         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 41843  015A48  0012               	return		;funcret
 41844  015A4A                     __end_of_motor_change_speed:
 41845                           	opt stack 0
 41846                           tosu	equ	0xFFF
 41847                           tosh	equ	0xFFE
 41848                           tosl	equ	0xFFD
 41849                           pclath	equ	0xFFA
 41850                           tblptru	equ	0xFF8
 41851                           tblptrh	equ	0xFF7
 41852                           tblptrl	equ	0xFF6
 41853                           tablat	equ	0xFF5
 41854                           prodh	equ	0xFF4
 41855                           prodl	equ	0xFF3
 41856                           intcon	equ	0xFF2
 41857                           indf0	equ	0xFEF
 41858                           postinc0	equ	0xFEE
 41859                           fsr0h	equ	0xFEA
 41860                           fsr0l	equ	0xFE9
 41861                           wreg	equ	0xFE8
 41862                           indf1	equ	0xFE7
 41863                           postinc1	equ	0xFE6
 41864                           postdec1	equ	0xFE5
 41865                           plusw1	equ	0xFE3
 41866                           fsr1h	equ	0xFE2
 41867                           fsr1l	equ	0xFE1
 41868                           indf2	equ	0xFDF
 41869                           postinc2	equ	0xFDE
 41870                           postdec2	equ	0xFDD
 41871                           plusw2	equ	0xFDB
 41872                           fsr2h	equ	0xFDA
 41873                           fsr2l	equ	0xFD9
 41874                           status	equ	0xFD8
 41875                           
 41876 ;; *************** function __parse_jump_steps *****************
 41877 ;; Defined at:
 41878 ;;		line 482 in file "api.c"
 41879 ;; Parameters:    Size  Location     Type
 41880 ;;  data            2   73[BANK0 ] PTR unsigned char 
 41881 ;;		 -> ReceivedDataBuffer(64), 
 41882 ;;  out_buffer      2   75[BANK0 ] PTR unsigned char 
 41883 ;;		 -> ToSendDataBuffer(64), 
 41884 ;;  out_idx_ptr     2   77[BANK0 ] PTR unsigned char 
 41885 ;;		 -> api_parse@out_idx(1), 
 41886 ;; Auto vars:     Size  Location     Type
 41887 ;;  number_of_st    4   81[BANK0 ] long 
 41888 ;;  return_value    1   80[BANK0 ] unsigned char 
 41889 ;; Return value:  Size  Location     Type
 41890 ;;                  1    wreg      unsigned char 
 41891 ;; Registers used:
 41892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41893 ;; Tracked objects:
 41894 ;;		On entry : 0/0
 41895 ;;		On exit  : 0/0
 41896 ;;		Unchanged: 0/0
 41897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41898 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41899 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41900 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41901 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41902 ;;Total ram usage:       12 bytes
 41903 ;; Hardware stack levels used:    1
 41904 ;; Hardware stack levels required when called:   14
 41905 ;; This function calls:
 41906 ;;		_motor_schedule_command
 41907 ;; This function is called by:
 41908 ;;		__parse_command_long
 41909 ;; This function uses a non-reentrant model
 41910 ;;
 41911                           
 41912                           	psect	text174
 41913  00FC48                     __ptext174:
 41914                           	opt stack 0
 41915  00FC48                     __parse_jump_steps:
 41916                           	opt stack 13
 41917                           
 41918                           ;api.c: 486: uint8_t return_value;;api.c: 487: int32_t number_of_steps;;api.c: 489: numb
      +                          er_of_steps = data[1];
 41919                           
 41920                           ;incstack = 0
 41921  00FC48  0100               	movlb	0	; () banked
 41922  00FC4A  EE20 F001          	lfsr	2,1
 41923  00FC4E  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 41924  00FC50  26D9               	addwf	fsr2l,f,c
 41925  00FC52  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41926  00FC54  22DA               	addwfc	fsr2h,f,c
 41927  00FC56  50DF               	movf	indf2,w,c
 41928  00FC58  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 41929  00FC5A  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41930  00FC5C  6FB1               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 41931  00FC5E  6BB2               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 41932  00FC60  6BB3               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 41933  00FC62  6BB4               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 41934                           
 41935                           ; BSR set to: 0
 41936                           ;api.c: 490: number_of_steps <<= 8;
 41937  00FC64  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41938  00FC68  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41939  00FC6C  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41940  00FC70  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41941                           
 41942                           ; BSR set to: 0
 41943                           ;api.c: 491: number_of_steps |= data[2];
 41944  00FC72  EE20 F002          	lfsr	2,2
 41945  00FC76  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 41946  00FC78  26D9               	addwf	fsr2l,f,c
 41947  00FC7A  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41948  00FC7C  22DA               	addwfc	fsr2h,f,c
 41949  00FC7E  50DF               	movf	indf2,w,c
 41950  00FC80  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 41951  00FC82  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41952  00FC84  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41953                           
 41954                           ;api.c: 492: number_of_steps <<= 8;
 41955  00FC86  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41956  00FC8A  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41957  00FC8E  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41958  00FC92  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41959                           
 41960                           ; BSR set to: 0
 41961                           ;api.c: 493: number_of_steps |= data[3];
 41962  00FC94  EE20 F003          	lfsr	2,3
 41963  00FC98  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 41964  00FC9A  26D9               	addwf	fsr2l,f,c
 41965  00FC9C  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41966  00FC9E  22DA               	addwfc	fsr2h,f,c
 41967  00FCA0  50DF               	movf	indf2,w,c
 41968  00FCA2  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 41969  00FCA4  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41970  00FCA6  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41971                           
 41972                           ; BSR set to: 0
 41973                           ;api.c: 494: number_of_steps <<= 8;
 41974  00FCA8  C0B3  F0B4         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 41975  00FCAC  C0B2  F0B3         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 41976  00FCB0  C0B1  F0B2         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 41977  00FCB4  6BB1               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 41978                           
 41979                           ;api.c: 495: number_of_steps |= data[4];
 41980  00FCB6  EE20 F004          	lfsr	2,4
 41981  00FCBA  51A9               	movf	__parse_jump_steps@data& (0+255),w,b
 41982  00FCBC  26D9               	addwf	fsr2l,f,c
 41983  00FCBE  51AA               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 41984  00FCC0  22DA               	addwfc	fsr2h,f,c
 41985  00FCC2  50DF               	movf	indf2,w,c
 41986  00FCC4  6FAF               	movwf	??__parse_jump_steps& (0+255),b
 41987  00FCC6  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 41988  00FCC8  13B1               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 41989                           
 41990                           ; BSR set to: 0
 41991                           ;api.c: 497: if(number_of_steps>0)
 41992  00FCCA  BFB4               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 41993  00FCCC  D019               	goto	l2326
 41994  00FCCE  51B4               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 41995  00FCD0  11B3               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 41996  00FCD2  11B2               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 41997  00FCD4  E103               	bnz	u13760
 41998  00FCD6  05B1               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 41999  00FCD8  A0D8               	btfss	status,0,c
 42000  00FCDA  D012               	goto	l2326
 42001  00FCDC                     u13760:
 42002                           
 42003                           ; BSR set to: 0
 42004                           ;api.c: 498: {;api.c: 499: return_value = motor_schedule_command(MOTOR_DIRECTION_CW, (ui
      +                          nt32_t) number_of_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 42005  00FCDC  C0B1  F0A1         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 42006  00FCE0  C0B2  F0A2         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 42007  00FCE4  C0B3  F0A3         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 42008  00FCE8  C0B4  F0A4         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 42009  00FCEC  0E00               	movlw	0
 42010  00FCEE  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 42011  00FCF0  0E00               	movlw	0
 42012  00FCF2  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 42013  00FCF4  0E00               	movlw	0
 42014  00FCF6  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 42015  00FCF8  0E01               	movlw	1
 42016  00FCFA  EC7A  F094         	call	_motor_schedule_command
 42017  00FCFE  D019               	goto	L64
 42018  00FD00                     l2326:
 42019                           
 42020                           ; BSR set to: 0
 42021                           ;api.c: 501: else;api.c: 502: {;api.c: 503: number_of_steps = -number_of_steps;
 42022                           
 42023                           ; BSR set to: 0
 42024  00FD00  1FB4               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 42025  00FD02  1FB3               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 42026  00FD04  1FB2               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 42027  00FD06  6DB1               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 42028  00FD08  0E00               	movlw	0
 42029  00FD0A  23B2               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 42030  00FD0C  23B3               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 42031  00FD0E  23B4               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 42032                           
 42033                           ; BSR set to: 0
 42034                           ;api.c: 504: return_value = motor_schedule_command(MOTOR_DIRECTION_CCW, (uint32_t) numbe
      +                          r_of_steps, 0, MOTOR_MOVE_TYPE_NORMAL);
 42035  00FD10  C0B1  F0A1         	movff	__parse_jump_steps@number_of_steps,motor_schedule_command@distance_in_steps
 42036  00FD14  C0B2  F0A2         	movff	__parse_jump_steps@number_of_steps+1,motor_schedule_command@distance_in_steps+1
 42037  00FD18  C0B3  F0A3         	movff	__parse_jump_steps@number_of_steps+2,motor_schedule_command@distance_in_steps+2
 42038  00FD1C  C0B4  F0A4         	movff	__parse_jump_steps@number_of_steps+3,motor_schedule_command@distance_in_steps+3
 42039  00FD20  0E00               	movlw	0
 42040  00FD22  6FA6               	movwf	(motor_schedule_command@speed+1)& (0+255),b
 42041  00FD24  0E00               	movlw	0
 42042  00FD26  6FA5               	movwf	motor_schedule_command@speed& (0+255),b
 42043  00FD28  0E00               	movlw	0
 42044  00FD2A  6FA7               	movwf	motor_schedule_command@type& (0+255),b
 42045  00FD2C  0EFF               	movlw	255
 42046  00FD2E  EC7A  F094         	call	_motor_schedule_command
 42047  00FD32                     L64:
 42048  00FD32  0100               	movlb	0	; () banked
 42049  00FD34  6FB0               	movwf	__parse_jump_steps@return_value& (0+255),b
 42050                           
 42051                           ; BSR set to: 0
 42052                           ;api.c: 505: };api.c: 508: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 42053                           
 42054                           ; BSR set to: 0
 42055  00FD36  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42056  00FD3A  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42057  00FD3E  50DF               	movf	indf2,w,c
 42058  00FD40  B4D8               	btfsc	status,2,c
 42059  00FD42  D02B               	goto	l2328
 42060                           
 42061                           ; BSR set to: 0
 42062  00FD44  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42063  00FD48  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42064  00FD4C  0E3E               	movlw	62
 42065  00FD4E  60DF               	cpfslt	indf2,c
 42066  00FD50  D024               	goto	l2328
 42067                           
 42068                           ; BSR set to: 0
 42069                           ;api.c: 509: {;api.c: 510: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 42070  00FD52  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42071  00FD56  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42072  00FD5A  CFDF F0AF          	movff	indf2,??__parse_jump_steps
 42073  00FD5E  0E01               	movlw	1
 42074  00FD60  26DF               	addwf	indf2,f,c
 42075  00FD62  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 42076  00FD64  0D01               	mullw	1
 42077  00FD66  50F3               	movf	prodl,w,c
 42078  00FD68  25AB               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 42079  00FD6A  6ED9               	movwf	fsr2l,c
 42080  00FD6C  50F4               	movf	prodh,w,c
 42081  00FD6E  21AC               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 42082  00FD70  6EDA               	movwf	fsr2h,c
 42083  00FD72  0E90               	movlw	144
 42084  00FD74  6EDF               	movwf	indf2,c
 42085                           
 42086                           ;api.c: 511: out_buffer[(*out_idx_ptr)++] = return_value;
 42087  00FD76  C0AD  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 42088  00FD7A  C0AE  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 42089  00FD7E  CFDF F0AF          	movff	indf2,??__parse_jump_steps
 42090  00FD82  0E01               	movlw	1
 42091  00FD84  26DF               	addwf	indf2,f,c
 42092  00FD86  51AF               	movf	??__parse_jump_steps& (0+255),w,b
 42093  00FD88  0D01               	mullw	1
 42094  00FD8A  50F3               	movf	prodl,w,c
 42095  00FD8C  25AB               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 42096  00FD8E  6ED9               	movwf	fsr2l,c
 42097  00FD90  50F4               	movf	prodh,w,c
 42098  00FD92  21AC               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 42099  00FD94  6EDA               	movwf	fsr2h,c
 42100  00FD96  C0B0  FFDF         	movff	__parse_jump_steps@return_value,indf2
 42101  00FD9A                     l2328:
 42102                           
 42103                           ; BSR set to: 0
 42104                           ;api.c: 512: };api.c: 514: return 5;
 42105                           
 42106                           ; BSR set to: 0
 42107  00FD9A  0E05               	movlw	5
 42108  00FD9C  0012               	return	
 42109  00FD9E                     __end_of__parse_jump_steps:
 42110                           	opt stack 0
 42111                           tosu	equ	0xFFF
 42112                           tosh	equ	0xFFE
 42113                           tosl	equ	0xFFD
 42114                           pclath	equ	0xFFA
 42115                           tblptru	equ	0xFF8
 42116                           tblptrh	equ	0xFF7
 42117                           tblptrl	equ	0xFF6
 42118                           tablat	equ	0xFF5
 42119                           prodh	equ	0xFF4
 42120                           prodl	equ	0xFF3
 42121                           intcon	equ	0xFF2
 42122                           indf0	equ	0xFEF
 42123                           postinc0	equ	0xFEE
 42124                           fsr0h	equ	0xFEA
 42125                           fsr0l	equ	0xFE9
 42126                           wreg	equ	0xFE8
 42127                           indf1	equ	0xFE7
 42128                           postinc1	equ	0xFE6
 42129                           postdec1	equ	0xFE5
 42130                           plusw1	equ	0xFE3
 42131                           fsr1h	equ	0xFE2
 42132                           fsr1l	equ	0xFE1
 42133                           indf2	equ	0xFDF
 42134                           postinc2	equ	0xFDE
 42135                           postdec2	equ	0xFDD
 42136                           plusw2	equ	0xFDB
 42137                           fsr2h	equ	0xFDA
 42138                           fsr2l	equ	0xFD9
 42139                           status	equ	0xFD8
 42140                           
 42141 ;; *************** function _motor_schedule_command *****************
 42142 ;; Defined at:
 42143 ;;		line 124 in file "motor.c"
 42144 ;; Parameters:    Size  Location     Type
 42145 ;;  direction       1    wreg     enum E6622
 42146 ;;  distance_in_    4   65[BANK0 ] unsigned long 
 42147 ;;  speed           2   69[BANK0 ] unsigned int 
 42148 ;;  type            1   71[BANK0 ] enum E6630
 42149 ;; Auto vars:     Size  Location     Type
 42150 ;;  direction       1   72[BANK0 ] enum E6622
 42151 ;; Return value:  Size  Location     Type
 42152 ;;                  1    wreg      unsigned char 
 42153 ;; Registers used:
 42154 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42155 ;; Tracked objects:
 42156 ;;		On entry : 0/0
 42157 ;;		On exit  : 0/0
 42158 ;;		Unchanged: 0/0
 42159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42160 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42161 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42163 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42164 ;;Total ram usage:        8 bytes
 42165 ;; Hardware stack levels used:    1
 42166 ;; Hardware stack levels required when called:   13
 42167 ;; This function calls:
 42168 ;;		__motor_run
 42169 ;;		_motor_items_in_cue
 42170 ;; This function is called by:
 42171 ;;		__parse_command_short
 42172 ;;		__parse_jump_steps
 42173 ;;		_motor_go_to_steps_position
 42174 ;;		_motor_arc_move
 42175 ;;		_motor_set_zero
 42176 ;;		_encoder_statemachine
 42177 ;;		_motor_move_steps_with_overshoot
 42178 ;; This function uses a non-reentrant model
 42179 ;;
 42180                           
 42181                           	psect	text175
 42182  0128F4                     __ptext175:
 42183                           	opt stack 0
 42184  0128F4                     _motor_schedule_command:
 42185                           	opt stack 15
 42186                           
 42187                           ; BSR set to: 0
 42188                           ;incstack = 0
 42189                           ;motor_schedule_command@direction stored from wreg
 42190  0128F4  0100               	movlb	0	; () banked
 42191  0128F6  6FA8               	movwf	motor_schedule_command@direction& (0+255),b
 42192                           
 42193                           ;motor.c: 126: if((motor_items_in_cue()==0) && (os.busy==0))
 42194  0128F8  EC01  F0AD         	call	_motor_items_in_cue	;wreg free
 42195  0128FC  0900               	iorlw	0
 42196  0128FE  A4D8               	btfss	status,2,c
 42197  012900  D018               	goto	l2441
 42198  012902  0101               	movlb	1	; () banked
 42199  012904  517F               	movf	(_os+14)& (0+255),w,b	;volatile
 42200  012906  A4D8               	btfss	status,2,c
 42201  012908  D014               	goto	l2441
 42202                           
 42203                           ; BSR set to: 1
 42204                           ;motor.c: 127: {;motor.c: 130: _motor_run(direction, distance_in_steps, speed, type);
 42205  01290A  C0A1  F08F         	movff	motor_schedule_command@distance_in_steps,__motor_run@distance_in_steps
 42206  01290E  C0A2  F090         	movff	motor_schedule_command@distance_in_steps+1,__motor_run@distance_in_steps+1
 42207  012912  C0A3  F091         	movff	motor_schedule_command@distance_in_steps+2,__motor_run@distance_in_steps+2
 42208  012916  C0A4  F092         	movff	motor_schedule_command@distance_in_steps+3,__motor_run@distance_in_steps+3
 42209  01291A  C0A5  F093         	movff	motor_schedule_command@speed,__motor_run@speed
 42210  01291E  C0A6  F094         	movff	motor_schedule_command@speed+1,__motor_run@speed+1
 42211  012922  C0A7  F095         	movff	motor_schedule_command@type,__motor_run@type
 42212  012926  0100               	movlb	0	; () banked
 42213  012928  51A8               	movf	motor_schedule_command@direction& (0+255),w,b
 42214  01292A  ECAD  F062         	call	__motor_run
 42215                           
 42216                           ;motor.c: 132: return 1;
 42217  01292E  0E01               	movlw	1
 42218  012930  0012               	return	
 42219  012932                     l2441:
 42220                           
 42221                           ;motor.c: 133: };motor.c: 134: if(motor_items_in_cue()==8-1)
 42222  012932  EC01  F0AD         	call	_motor_items_in_cue	;wreg free
 42223  012936  0A07               	xorlw	7
 42224  012938  A4D8               	btfss	status,2,c
 42225  01293A  D002               	goto	l2443
 42226                           
 42227                           ;motor.c: 135: {;motor.c: 138: return 0;
 42228  01293C  0E00               	movlw	0
 42229                           
 42230                           ;motor.c: 139: }
 42231  01293E  0012               	return	
 42232  012940                     l2443:
 42233                           
 42234                           ;motor.c: 140: else;motor.c: 141: {;motor.c: 143: motor_command_cue[motor_cue_write_inde
      +                          x].direction = direction;
 42235  012940  0101               	movlb	1	; () banked
 42236  012942  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42237  012944  0D08               	mullw	8
 42238  012946  0E00               	movlw	low _motor_command_cue
 42239  012948  24F3               	addwf	prodl,w,c
 42240  01294A  6ED9               	movwf	fsr2l,c
 42241  01294C  0E03               	movlw	high _motor_command_cue
 42242  01294E  20F4               	addwfc	prodh,w,c
 42243  012950  6EDA               	movwf	fsr2h,c
 42244  012952  C0A8  FFDF         	movff	motor_schedule_command@direction,indf2
 42245                           
 42246                           ;motor.c: 144: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 42247  012956  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42248  012958  0D08               	mullw	8
 42249  01295A  0E01               	movlw	1
 42250  01295C  26F3               	addwf	prodl,f,c
 42251  01295E  0E00               	movlw	0
 42252  012960  22F4               	addwfc	prodh,f,c
 42253  012962  0E00               	movlw	low _motor_command_cue
 42254  012964  24F3               	addwf	prodl,w,c
 42255  012966  6ED9               	movwf	fsr2l,c
 42256  012968  0E03               	movlw	high _motor_command_cue
 42257  01296A  20F4               	addwfc	prodh,w,c
 42258  01296C  6EDA               	movwf	fsr2h,c
 42259  01296E  C0A1  FFDE         	movff	motor_schedule_command@distance_in_steps,postinc2
 42260  012972  C0A2  FFDE         	movff	motor_schedule_command@distance_in_steps+1,postinc2
 42261  012976  C0A3  FFDE         	movff	motor_schedule_command@distance_in_steps+2,postinc2
 42262  01297A  C0A4  FFDE         	movff	motor_schedule_command@distance_in_steps+3,postinc2
 42263                           
 42264                           ;motor.c: 145: motor_command_cue[motor_cue_write_index].speed = speed;
 42265  01297E  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42266  012980  0D08               	mullw	8
 42267  012982  0E05               	movlw	5
 42268  012984  26F3               	addwf	prodl,f,c
 42269  012986  0E00               	movlw	0
 42270  012988  22F4               	addwfc	prodh,f,c
 42271  01298A  0E00               	movlw	low _motor_command_cue
 42272  01298C  24F3               	addwf	prodl,w,c
 42273  01298E  6ED9               	movwf	fsr2l,c
 42274  012990  0E03               	movlw	high _motor_command_cue
 42275  012992  20F4               	addwfc	prodh,w,c
 42276  012994  6EDA               	movwf	fsr2h,c
 42277  012996  C0A5  FFDE         	movff	motor_schedule_command@speed,postinc2
 42278  01299A  C0A6  FFDD         	movff	motor_schedule_command@speed+1,postdec2
 42279                           
 42280                           ;motor.c: 146: motor_command_cue[motor_cue_write_index].type = type;
 42281  01299E  5157               	movf	_motor_cue_write_index& (0+255),w,b
 42282  0129A0  0D08               	mullw	8
 42283  0129A2  0E07               	movlw	7
 42284  0129A4  26F3               	addwf	prodl,f,c
 42285  0129A6  0E00               	movlw	0
 42286  0129A8  22F4               	addwfc	prodh,f,c
 42287  0129AA  0E00               	movlw	low _motor_command_cue
 42288  0129AC  24F3               	addwf	prodl,w,c
 42289  0129AE  6ED9               	movwf	fsr2l,c
 42290  0129B0  0E03               	movlw	high _motor_command_cue
 42291  0129B2  20F4               	addwfc	prodh,w,c
 42292  0129B4  6EDA               	movwf	fsr2h,c
 42293  0129B6  C0A7  FFDF         	movff	motor_schedule_command@type,indf2
 42294                           
 42295                           ; BSR set to: 1
 42296                           ;motor.c: 148: ++motor_cue_write_index;
 42297  0129BA  2B57               	incf	_motor_cue_write_index& (0+255),f,b
 42298                           
 42299                           ; BSR set to: 1
 42300                           ;motor.c: 150: return 1;
 42301  0129BC  0E01               	movlw	1
 42302                           
 42303                           ; BSR set to: 1
 42304  0129BE  0012               	return	
 42305  0129C0                     __end_of_motor_schedule_command:
 42306                           	opt stack 0
 42307                           tosu	equ	0xFFF
 42308                           tosh	equ	0xFFE
 42309                           tosl	equ	0xFFD
 42310                           pclath	equ	0xFFA
 42311                           tblptru	equ	0xFF8
 42312                           tblptrh	equ	0xFF7
 42313                           tblptrl	equ	0xFF6
 42314                           tablat	equ	0xFF5
 42315                           prodh	equ	0xFF4
 42316                           prodl	equ	0xFF3
 42317                           intcon	equ	0xFF2
 42318                           indf0	equ	0xFEF
 42319                           postinc0	equ	0xFEE
 42320                           fsr0h	equ	0xFEA
 42321                           fsr0l	equ	0xFE9
 42322                           wreg	equ	0xFE8
 42323                           indf1	equ	0xFE7
 42324                           postinc1	equ	0xFE6
 42325                           postdec1	equ	0xFE5
 42326                           plusw1	equ	0xFE3
 42327                           fsr1h	equ	0xFE2
 42328                           fsr1l	equ	0xFE1
 42329                           indf2	equ	0xFDF
 42330                           postinc2	equ	0xFDE
 42331                           postdec2	equ	0xFDD
 42332                           plusw2	equ	0xFDB
 42333                           fsr2h	equ	0xFDA
 42334                           fsr2l	equ	0xFD9
 42335                           status	equ	0xFD8
 42336                           
 42337 ;; *************** function _motor_items_in_cue *****************
 42338 ;; Defined at:
 42339 ;;		line 119 in file "motor.c"
 42340 ;; Parameters:    Size  Location     Type
 42341 ;;		None
 42342 ;; Auto vars:     Size  Location     Type
 42343 ;;		None
 42344 ;; Return value:  Size  Location     Type
 42345 ;;                  1    wreg      unsigned char 
 42346 ;; Registers used:
 42347 ;;		wreg, status,2, status,0
 42348 ;; Tracked objects:
 42349 ;;		On entry : 0/0
 42350 ;;		On exit  : 0/0
 42351 ;;		Unchanged: 0/0
 42352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42353 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42356 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42357 ;;Total ram usage:        0 bytes
 42358 ;; Hardware stack levels used:    1
 42359 ;; Hardware stack levels required when called:   10
 42360 ;; This function calls:
 42361 ;;		Nothing
 42362 ;; This function is called by:
 42363 ;;		_motor_schedule_command
 42364 ;;		_motor_process_cue
 42365 ;; This function uses a non-reentrant model
 42366 ;;
 42367                           
 42368                           	psect	text176
 42369  015A02                     __ptext176:
 42370                           	opt stack 0
 42371  015A02                     _motor_items_in_cue:
 42372                           	opt stack 19
 42373                           
 42374                           ;motor.c: 121: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 42375                           
 42376                           ;incstack = 0
 42377  015A02  0101               	movlb	1	; () banked
 42378  015A04  5158               	movf	_motor_cue_read_index& (0+255),w,b
 42379  015A06  0800               	sublw	0
 42380  015A08  2557               	addwf	_motor_cue_write_index& (0+255),w,b
 42381  015A0A  0B07               	andlw	7
 42382  015A0C  0012               	return	
 42383  015A0E                     __end_of_motor_items_in_cue:
 42384                           	opt stack 0
 42385                           tosu	equ	0xFFF
 42386                           tosh	equ	0xFFE
 42387                           tosl	equ	0xFFD
 42388                           pclath	equ	0xFFA
 42389                           tblptru	equ	0xFF8
 42390                           tblptrh	equ	0xFF7
 42391                           tblptrl	equ	0xFF6
 42392                           tablat	equ	0xFF5
 42393                           prodh	equ	0xFF4
 42394                           prodl	equ	0xFF3
 42395                           intcon	equ	0xFF2
 42396                           indf0	equ	0xFEF
 42397                           postinc0	equ	0xFEE
 42398                           fsr0h	equ	0xFEA
 42399                           fsr0l	equ	0xFE9
 42400                           wreg	equ	0xFE8
 42401                           indf1	equ	0xFE7
 42402                           postinc1	equ	0xFE6
 42403                           postdec1	equ	0xFE5
 42404                           plusw1	equ	0xFE3
 42405                           fsr1h	equ	0xFE2
 42406                           fsr1l	equ	0xFE1
 42407                           indf2	equ	0xFDF
 42408                           postinc2	equ	0xFDE
 42409                           postdec2	equ	0xFDD
 42410                           plusw2	equ	0xFDB
 42411                           fsr2h	equ	0xFDA
 42412                           fsr2l	equ	0xFD9
 42413                           status	equ	0xFD8
 42414                           
 42415 ;; *************** function __motor_run *****************
 42416 ;; Defined at:
 42417 ;;		line 210 in file "motor.c"
 42418 ;; Parameters:    Size  Location     Type
 42419 ;;  direction       1    wreg     enum E6622
 42420 ;;  distance_in_    4   47[BANK0 ] unsigned long 
 42421 ;;  speed           2   51[BANK0 ] unsigned int 
 42422 ;;  type            1   53[BANK0 ] enum E6630
 42423 ;; Auto vars:     Size  Location     Type
 42424 ;;  direction       1   58[BANK0 ] enum E6622
 42425 ;;  maximum_dist    4   61[BANK0 ] unsigned long 
 42426 ;;  maximum_dist    2   59[BANK0 ] unsigned int 
 42427 ;; Return value:  Size  Location     Type
 42428 ;;                  1    wreg      void 
 42429 ;; Registers used:
 42430 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42431 ;; Tracked objects:
 42432 ;;		On entry : 0/0
 42433 ;;		On exit  : 0/0
 42434 ;;		Unchanged: 0/0
 42435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42436 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42437 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42438 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42439 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42440 ;;Total ram usage:       18 bytes
 42441 ;; Hardware stack levels used:    1
 42442 ;; Hardware stack levels required when called:   12
 42443 ;; This function calls:
 42444 ;;		_motor_calculate_position_in_degrees
 42445 ;;		_motor_steps_from_degrees
 42446 ;; This function is called by:
 42447 ;;		_motor_schedule_command
 42448 ;;		_motor_process_cue
 42449 ;; This function uses a non-reentrant model
 42450 ;;
 42451                           
 42452                           	psect	text177
 42453  00C55A                     __ptext177:
 42454                           	opt stack 0
 42455  00C55A                     __motor_run:
 42456                           	opt stack 17
 42457                           
 42458                           ; BSR set to: 1
 42459                           ;incstack = 0
 42460                           ;__motor_run@direction stored from wreg
 42461  00C55A  0100               	movlb	0	; () banked
 42462  00C55C  6F9A               	movwf	__motor_run@direction& (0+255),b
 42463                           
 42464                           ;motor.c: 212: uint16_t maximum_distance_in_degrees;;motor.c: 213: uint32_t maximum_dist
      +                          ance_in_steps;;motor.c: 216: motor_direction = direction;
 42465  00C55E  C09A  F155         	movff	__motor_run@direction,_motor_direction
 42466                           
 42467                           ;motor.c: 219: if(distance_in_steps==0)
 42468  00C562  0100               	movlb	0	; () banked
 42469  00C564  518F               	movf	__motor_run@distance_in_steps& (0+255),w,b
 42470  00C566  1190               	iorwf	(__motor_run@distance_in_steps+1)& (0+255),w,b
 42471  00C568  1191               	iorwf	(__motor_run@distance_in_steps+2)& (0+255),w,b
 42472  00C56A  1192               	iorwf	(__motor_run@distance_in_steps+3)& (0+255),w,b
 42473  00C56C  A4D8               	btfss	status,2,c
 42474  00C56E  D00A               	goto	l2460
 42475                           
 42476                           ; BSR set to: 0
 42477                           ;motor.c: 220: {;motor.c: 222: motor_final_stepcount = 0xFF000000;
 42478  00C570  0E00               	movlw	0
 42479  00C572  0101               	movlb	1	; () banked
 42480  00C574  6F27               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42481  00C576  0E00               	movlw	0
 42482  00C578  6F28               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42483  00C57A  0E00               	movlw	0
 42484  00C57C  6F29               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42485  00C57E  0EFF               	movlw	255
 42486  00C580  6F2A               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42487                           
 42488                           ;motor.c: 223: }
 42489  00C582  D008               	goto	l2461
 42490  00C584                     l2460:
 42491                           
 42492                           ; BSR set to: 0
 42493                           ;motor.c: 224: else;motor.c: 225: {;motor.c: 226: motor_final_stepcount = distance_in_st
      +                          eps;
 42494  00C584  C08F  F127         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 42495  00C588  C090  F128         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42496  00C58C  C091  F129         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42497  00C590  C092  F12A         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42498  00C594                     l2461:
 42499                           
 42500                           ;motor.c: 227: };motor.c: 230: if((motor_direction==MOTOR_DIRECTION_CCW) && config.use_c
      +                          cw_limit)
 42501                           
 42502                           ; BSR set to: 0
 42503  00C594  0101               	movlb	1	; () banked
 42504  00C596  2955               	incf	_motor_direction& (0+255),w,b
 42505  00C598  A4D8               	btfss	status,2,c
 42506  00C59A  D071               	goto	l2466
 42507                           
 42508                           ; BSR set to: 1
 42509  00C59C  51BA               	movf	(_config+25)& (0+255),w,b
 42510  00C59E  B4D8               	btfsc	status,2,c
 42511  00C5A0  D06E               	goto	l2466
 42512                           
 42513                           ; BSR set to: 1
 42514                           ;motor.c: 231: {;motor.c: 233: motor_calculate_position_in_degrees();
 42515  00C5A2  EC4B  F090         	call	_motor_calculate_position_in_degrees	;wreg free
 42516                           
 42517                           ;motor.c: 236: if(os.current_position_in_degrees >= config.ccw_limit)
 42518  00C5A6  0101               	movlb	1	; () banked
 42519  00C5A8  51BB               	movf	(_config+26)& (0+255),w,b
 42520  00C5AA  5D7C               	subwf	(_os+11)& (0+255),w,b	;volatile
 42521  00C5AC  51BC               	movf	(_config+27)& (0+255),w,b
 42522  00C5AE  597D               	subwfb	(_os+12)& (0+255),w,b	;volatile
 42523  00C5B0  A0D8               	btfss	status,0,c
 42524  00C5B2  D014               	goto	l2463
 42525                           
 42526                           ; BSR set to: 1
 42527                           ;motor.c: 237: {;motor.c: 238: maximum_distance_in_degrees = os.current_position_in_degr
      +                          ees - config.ccw_limit;
 42528  00C5B4  EE21  F0BB         	lfsr	2,_config+26
 42529  00C5B8  CFDE F096          	movff	postinc2,??__motor_run
 42530  00C5BC  CFDD F097          	movff	postdec2,??__motor_run+1
 42531  00C5C0  0100               	movlb	0	; () banked
 42532  00C5C2  1F96               	comf	??__motor_run& (0+255),f,b
 42533  00C5C4  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 42534  00C5C6  4B96               	infsnz	??__motor_run& (0+255),f,b
 42535  00C5C8  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 42536  00C5CA  0101               	movlb	1	; () banked
 42537  00C5CC  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42538  00C5CE  0100               	movlb	0	; () banked
 42539  00C5D0  2596               	addwf	??__motor_run& (0+255),w,b
 42540  00C5D2  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42541  00C5D4  0101               	movlb	1	; () banked
 42542  00C5D6  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42543  00C5D8  0100               	movlb	0	; () banked
 42544  00C5DA  D017               	goto	L65
 42545  00C5DC                     l2463:
 42546                           
 42547                           ;motor.c: 240: else;motor.c: 241: {;motor.c: 243: maximum_distance_in_degrees = 36000 + 
      +                          os.current_position_in_degrees - config.ccw_limit;
 42548                           
 42549                           ; BSR set to: 0
 42550  00C5DC  EE21  F0BB         	lfsr	2,_config+26
 42551  00C5E0  CFDE F096          	movff	postinc2,??__motor_run
 42552  00C5E4  CFDD F097          	movff	postdec2,??__motor_run+1
 42553  00C5E8  0100               	movlb	0	; () banked
 42554  00C5EA  1F96               	comf	??__motor_run& (0+255),f,b
 42555  00C5EC  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 42556  00C5EE  4B96               	infsnz	??__motor_run& (0+255),f,b
 42557  00C5F0  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 42558  00C5F2  0101               	movlb	1	; () banked
 42559  00C5F4  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42560  00C5F6  0100               	movlb	0	; () banked
 42561  00C5F8  2796               	addwf	??__motor_run& (0+255),f,b
 42562  00C5FA  0101               	movlb	1	; () banked
 42563  00C5FC  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42564  00C5FE  0100               	movlb	0	; () banked
 42565  00C600  2397               	addwfc	(??__motor_run+1)& (0+255),f,b
 42566  00C602  0EA0               	movlw	160
 42567  00C604  2596               	addwf	??__motor_run& (0+255),w,b
 42568  00C606  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42569  00C608  0E8C               	movlw	140
 42570  00C60A                     L65:
 42571  00C60A  2197               	addwfc	(??__motor_run+1)& (0+255),w,b
 42572  00C60C  6F9C               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42573                           
 42574                           ; BSR set to: 0
 42575                           ;motor.c: 244: };motor.c: 246: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42576                           
 42577                           ; BSR set to: 0
 42578  00C60E  C09B  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42579  00C612  C09C  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42580  00C616  ECF9  F08E         	call	_motor_steps_from_degrees	;wreg free
 42581  00C61A  C087  F09D         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42582  00C61E  C088  F09E         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42583  00C622  C089  F09F         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42584  00C626  C08A  F0A0         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42585                           
 42586                           ;motor.c: 248: if(type==MOTOR_MOVE_TYPE_OVERSHOOT)
 42587  00C62A  0100               	movlb	0	; () banked
 42588  00C62C  0595               	decf	__motor_run@type& (0+255),w,b
 42589  00C62E  A4D8               	btfss	status,2,c
 42590  00C630  D00C               	goto	l2465
 42591                           
 42592                           ; BSR set to: 0
 42593                           ;motor.c: 249: {;motor.c: 250: maximum_distance_in_steps += config.overshoot_in_steps;
 42594  00C632  0101               	movlb	1	; () banked
 42595  00C634  51A6               	movf	(_config+5)& (0+255),w,b
 42596  00C636  0100               	movlb	0	; () banked
 42597  00C638  279D               	addwf	__motor_run@maximum_distance_in_steps& (0+255),f,b
 42598  00C63A  0101               	movlb	1	; () banked
 42599  00C63C  51A7               	movf	(_config+6)& (0+255),w,b
 42600  00C63E  0100               	movlb	0	; () banked
 42601  00C640  239E               	addwfc	(__motor_run@maximum_distance_in_steps+1)& (0+255),f,b
 42602  00C642  0E00               	movlw	0
 42603  00C644  239F               	addwfc	(__motor_run@maximum_distance_in_steps+2)& (0+255),f,b
 42604  00C646  0E00               	movlw	0
 42605  00C648  23A0               	addwfc	(__motor_run@maximum_distance_in_steps+3)& (0+255),f,b
 42606  00C64A                     l2465:
 42607                           
 42608                           ; BSR set to: 0
 42609                           ;motor.c: 251: };motor.c: 253: if(maximum_distance_in_steps<motor_final_stepcount)
 42610                           
 42611                           ; BSR set to: 0
 42612  00C64A  0101               	movlb	1	; () banked
 42613  00C64C  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42614  00C64E  0100               	movlb	0	; () banked
 42615  00C650  5D9D               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42616  00C652  0101               	movlb	1	; () banked
 42617  00C654  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42618  00C656  0100               	movlb	0	; () banked
 42619  00C658  599E               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42620  00C65A  0101               	movlb	1	; () banked
 42621  00C65C  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42622  00C65E  0100               	movlb	0	; () banked
 42623  00C660  599F               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42624  00C662  0101               	movlb	1	; () banked
 42625  00C664  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42626  00C666  0100               	movlb	0	; () banked
 42627  00C668  59A0               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42628  00C66A  B0D8               	btfsc	status,0,c
 42629  00C66C  D008               	goto	l2466
 42630                           
 42631                           ; BSR set to: 0
 42632                           ;motor.c: 254: {;motor.c: 255: motor_final_stepcount = maximum_distance_in_steps;
 42633  00C66E  C09D  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42634  00C672  C09E  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42635  00C676  C09F  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42636  00C67A  C0A0  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42637  00C67E                     l2466:
 42638                           
 42639                           ;motor.c: 256: };motor.c: 257: };motor.c: 260: if((motor_direction==MOTOR_DIRECTION_CW) 
      +                          && config.use_cw_limit)
 42640                           
 42641                           ; BSR set to: 0
 42642                           
 42643                           ; BSR set to: 0
 42644  00C67E  0101               	movlb	1	; () banked
 42645  00C680  0555               	decf	_motor_direction& (0+255),w,b
 42646  00C682  A4D8               	btfss	status,2,c
 42647  00C684  D061               	goto	l2470
 42648                           
 42649                           ; BSR set to: 1
 42650  00C686  51B7               	movf	(_config+22)& (0+255),w,b
 42651  00C688  B4D8               	btfsc	status,2,c
 42652  00C68A  D05E               	goto	l2470
 42653                           
 42654                           ; BSR set to: 1
 42655                           ;motor.c: 262: {;motor.c: 264: motor_calculate_position_in_degrees();
 42656  00C68C  EC4B  F090         	call	_motor_calculate_position_in_degrees	;wreg free
 42657                           
 42658                           ;motor.c: 267: if(config.cw_limit >= os.current_position_in_degrees)
 42659  00C690  0101               	movlb	1	; () banked
 42660  00C692  517C               	movf	(_os+11)& (0+255),w,b	;volatile
 42661  00C694  5DB8               	subwf	(_config+23)& (0+255),w,b
 42662  00C696  517D               	movf	(_os+12)& (0+255),w,b	;volatile
 42663  00C698  59B9               	subwfb	(_config+24)& (0+255),w,b
 42664  00C69A  A0D8               	btfss	status,0,c
 42665  00C69C  D014               	goto	l2468
 42666                           
 42667                           ; BSR set to: 1
 42668                           ;motor.c: 268: {;motor.c: 269: maximum_distance_in_degrees = config.cw_limit - os.curren
      +                          t_position_in_degrees;
 42669  00C69E  EE21  F07C         	lfsr	2,_os+11	;volatile
 42670  00C6A2  CFDE F096          	movff	postinc2,??__motor_run
 42671  00C6A6  CFDD F097          	movff	postdec2,??__motor_run+1
 42672  00C6AA  0100               	movlb	0	; () banked
 42673  00C6AC  1F96               	comf	??__motor_run& (0+255),f,b
 42674  00C6AE  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 42675  00C6B0  4B96               	infsnz	??__motor_run& (0+255),f,b
 42676  00C6B2  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 42677  00C6B4  0101               	movlb	1	; () banked
 42678  00C6B6  51B8               	movf	(_config+23)& (0+255),w,b
 42679  00C6B8  0100               	movlb	0	; () banked
 42680  00C6BA  2596               	addwf	??__motor_run& (0+255),w,b
 42681  00C6BC  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42682  00C6BE  0101               	movlb	1	; () banked
 42683  00C6C0  51B9               	movf	(_config+24)& (0+255),w,b
 42684  00C6C2  0100               	movlb	0	; () banked
 42685  00C6C4  D017               	goto	L66
 42686  00C6C6                     l2468:
 42687                           
 42688                           ;motor.c: 271: else;motor.c: 272: {;motor.c: 274: maximum_distance_in_degrees = 36000 + 
      +                          config.cw_limit - os.current_position_in_degrees;
 42689                           
 42690                           ; BSR set to: 0
 42691  00C6C6  EE21  F07C         	lfsr	2,_os+11	;volatile
 42692  00C6CA  CFDE F096          	movff	postinc2,??__motor_run
 42693  00C6CE  CFDD F097          	movff	postdec2,??__motor_run+1
 42694  00C6D2  0100               	movlb	0	; () banked
 42695  00C6D4  1F96               	comf	??__motor_run& (0+255),f,b
 42696  00C6D6  1F97               	comf	(??__motor_run+1)& (0+255),f,b
 42697  00C6D8  4B96               	infsnz	??__motor_run& (0+255),f,b
 42698  00C6DA  2B97               	incf	(??__motor_run+1)& (0+255),f,b
 42699  00C6DC  0101               	movlb	1	; () banked
 42700  00C6DE  51B8               	movf	(_config+23)& (0+255),w,b
 42701  00C6E0  0100               	movlb	0	; () banked
 42702  00C6E2  2796               	addwf	??__motor_run& (0+255),f,b
 42703  00C6E4  0101               	movlb	1	; () banked
 42704  00C6E6  51B9               	movf	(_config+24)& (0+255),w,b
 42705  00C6E8  0100               	movlb	0	; () banked
 42706  00C6EA  2397               	addwfc	(??__motor_run+1)& (0+255),f,b
 42707  00C6EC  0EA0               	movlw	160
 42708  00C6EE  2596               	addwf	??__motor_run& (0+255),w,b
 42709  00C6F0  6F9B               	movwf	__motor_run@maximum_distance_in_degrees& (0+255),b
 42710  00C6F2  0E8C               	movlw	140
 42711  00C6F4                     L66:
 42712  00C6F4  2197               	addwfc	(??__motor_run+1)& (0+255),w,b
 42713  00C6F6  6F9C               	movwf	(__motor_run@maximum_distance_in_degrees+1)& (0+255),b
 42714                           
 42715                           ; BSR set to: 0
 42716                           ;motor.c: 275: };motor.c: 277: maximum_distance_in_steps = motor_steps_from_degrees(maxi
      +                          mum_distance_in_degrees);
 42717                           
 42718                           ; BSR set to: 0
 42719  00C6F8  C09B  F087         	movff	__motor_run@maximum_distance_in_degrees,motor_steps_from_degrees@degrees
 42720  00C6FC  C09C  F088         	movff	__motor_run@maximum_distance_in_degrees+1,motor_steps_from_degrees@degrees+1
 42721  00C700  ECF9  F08E         	call	_motor_steps_from_degrees	;wreg free
 42722  00C704  C087  F09D         	movff	?_motor_steps_from_degrees,__motor_run@maximum_distance_in_steps
 42723  00C708  C088  F09E         	movff	?_motor_steps_from_degrees+1,__motor_run@maximum_distance_in_steps+1
 42724  00C70C  C089  F09F         	movff	?_motor_steps_from_degrees+2,__motor_run@maximum_distance_in_steps+2
 42725  00C710  C08A  F0A0         	movff	?_motor_steps_from_degrees+3,__motor_run@maximum_distance_in_steps+3
 42726                           
 42727                           ;motor.c: 279: if(maximum_distance_in_steps<motor_final_stepcount)
 42728  00C714  0101               	movlb	1	; () banked
 42729  00C716  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42730  00C718  0100               	movlb	0	; () banked
 42731  00C71A  5D9D               	subwf	__motor_run@maximum_distance_in_steps& (0+255),w,b
 42732  00C71C  0101               	movlb	1	; () banked
 42733  00C71E  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42734  00C720  0100               	movlb	0	; () banked
 42735  00C722  599E               	subwfb	(__motor_run@maximum_distance_in_steps+1)& (0+255),w,b
 42736  00C724  0101               	movlb	1	; () banked
 42737  00C726  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42738  00C728  0100               	movlb	0	; () banked
 42739  00C72A  599F               	subwfb	(__motor_run@maximum_distance_in_steps+2)& (0+255),w,b
 42740  00C72C  0101               	movlb	1	; () banked
 42741  00C72E  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42742  00C730  0100               	movlb	0	; () banked
 42743  00C732  59A0               	subwfb	(__motor_run@maximum_distance_in_steps+3)& (0+255),w,b
 42744  00C734  B0D8               	btfsc	status,0,c
 42745  00C736  D008               	goto	l2470
 42746                           
 42747                           ; BSR set to: 0
 42748                           ;motor.c: 280: {;motor.c: 281: motor_final_stepcount = maximum_distance_in_steps;
 42749  00C738  C09D  F127         	movff	__motor_run@maximum_distance_in_steps,_motor_final_stepcount	;volatile
 42750  00C73C  C09E  F128         	movff	__motor_run@maximum_distance_in_steps+1,_motor_final_stepcount+1	;volatile
 42751  00C740  C09F  F129         	movff	__motor_run@maximum_distance_in_steps+2,_motor_final_stepcount+2	;volatile
 42752  00C744  C0A0  F12A         	movff	__motor_run@maximum_distance_in_steps+3,_motor_final_stepcount+3	;volatile
 42753  00C748                     l2470:
 42754                           
 42755                           ;motor.c: 282: };motor.c: 283: };motor.c: 287: if(motor_final_stepcount==0)
 42756                           
 42757                           ; BSR set to: 0
 42758                           
 42759                           ; BSR set to: 0
 42760  00C748  0101               	movlb	1	; () banked
 42761  00C74A  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 42762  00C74C  1128               	iorwf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 42763  00C74E  1129               	iorwf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 42764  00C750  112A               	iorwf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 42765  00C752  B4D8               	btfsc	status,2,c
 42766  00C754  0012               	return	
 42767                           
 42768                           ; BSR set to: 1
 42769                           ;motor.c: 290: };motor.c: 293: if(speed==0)
 42770                           
 42771                           ; BSR set to: 1
 42772                           
 42773                           ; BSR set to: 1
 42774                           ;motor.c: 288: {;motor.c: 289: return;
 42775  00C756  0100               	movlb	0	; () banked
 42776  00C758  5193               	movf	__motor_run@speed& (0+255),w,b
 42777  00C75A  1194               	iorwf	(__motor_run@speed+1)& (0+255),w,b
 42778  00C75C  A4D8               	btfss	status,2,c
 42779  00C75E  D005               	goto	l2473
 42780                           
 42781                           ; BSR set to: 0
 42782                           ;motor.c: 294: {;motor.c: 295: motor_maximum_speed = config.maximum_speed;
 42783  00C760  C1AC  F13F         	movff	_config+11,_motor_maximum_speed
 42784  00C764  C1AD  F140         	movff	_config+12,_motor_maximum_speed+1
 42785                           
 42786                           ;motor.c: 296: }
 42787  00C768  D004               	goto	l2474
 42788  00C76A                     l2473:
 42789                           
 42790                           ; BSR set to: 0
 42791                           ;motor.c: 297: else;motor.c: 298: {;motor.c: 299: motor_maximum_speed = speed;
 42792  00C76A  C093  F13F         	movff	__motor_run@speed,_motor_maximum_speed
 42793  00C76E  C094  F140         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 42794  00C772                     l2474:
 42795                           
 42796                           ; BSR set to: 0
 42797                           ;motor.c: 300: };motor.c: 303: motor_current_speed = 0;
 42798                           
 42799                           ; BSR set to: 0
 42800  00C772  0E00               	movlw	0
 42801  00C774  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 42802  00C776  0E00               	movlw	0
 42803  00C778  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 42804                           
 42805                           ;motor.c: 304: motor_current_stepcount = 0;
 42806  00C77A  0E00               	movlw	0
 42807  00C77C  6E58               	movwf	_motor_current_stepcount,c	;volatile
 42808  00C77E  0E00               	movlw	0
 42809  00C780  6E59               	movwf	_motor_current_stepcount+1,c	;volatile
 42810  00C782  0E00               	movlw	0
 42811  00C784  6E5A               	movwf	_motor_current_stepcount+2,c	;volatile
 42812  00C786  0E00               	movlw	0
 42813  00C788  6E5B               	movwf	_motor_current_stepcount+3,c	;volatile
 42814                           
 42815                           ; BSR set to: 0
 42816                           ;motor.c: 306: motor_next_speed_check = motor_steps_lookup[1];
 42817  00C78A  0E63               	movlw	low (_motor_steps_lookup+2)
 42818  00C78C  6EF6               	movwf	tblptrl,c
 42819  00C78E  0E94               	movlw	high (_motor_steps_lookup+2)
 42820  00C790  6EF7               	movwf	tblptrh,c
 42821  00C792                     	if	0	;tblptru may be non-zero
 42822  00C792                     	endif
 42823  00C792                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 42824  00C792  0E00               	movlw	low (__mediumconst shr (0+16))
 42825  00C794  6EF8               	movwf	tblptru,c
 42826  00C796                     	endif
 42827  00C796  0009               	tblrd		*+
 42828  00C798  CFF5 F096          	movff	tablat,??__motor_run
 42829  00C79C  0009               	tblrd		*+
 42830  00C79E  CFF5 F097          	movff	tablat,??__motor_run+1
 42831  00C7A2  C096  F226         	movff	??__motor_run,_motor_next_speed_check	;volatile
 42832  00C7A6  C097  F227         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 42833  00C7AA  0102               	movlb	2	; () banked
 42834  00C7AC  6B28               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 42835  00C7AE  6B29               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 42836                           
 42837                           ; BSR set to: 2
 42838                           ;motor.c: 309: CCP1CONbits.CCP1M = 0b0000;
 42839  00C7B0  90BA               	bcf	4026,0,c	;volatile
 42840  00C7B2  92BA               	bcf	4026,1,c	;volatile
 42841  00C7B4  94BA               	bcf	4026,2,c	;volatile
 42842  00C7B6  96BA               	bcf	4026,3,c	;volatile
 42843                           
 42844                           ; BSR set to: 2
 42845                           ;motor.c: 312: LATBbits.LB0 = 0;
 42846  00C7B8  908A               	bcf	3978,0,c	;volatile
 42847                           
 42848                           ; BSR set to: 2
 42849                           ;motor.c: 313: if(direction==MOTOR_DIRECTION_CCW)
 42850  00C7BA  0100               	movlb	0	; () banked
 42851  00C7BC  299A               	incf	__motor_run@direction& (0+255),w,b
 42852  00C7BE  A4D8               	btfss	status,2,c
 42853  00C7C0  D005               	goto	l2475
 42854                           
 42855                           ; BSR set to: 0
 42856                           ;motor.c: 314: {;motor.c: 315: if(config.inverse_direction)
 42857  00C7C2  0101               	movlb	1	; () banked
 42858  00C7C4  51A5               	movf	(_config+4)& (0+255),w,b
 42859  00C7C6  B4D8               	btfsc	status,2,c
 42860  00C7C8  D005               	goto	u11830
 42861  00C7CA  D006               	goto	l2479
 42862  00C7CC                     l2475:
 42863                           
 42864                           ;motor.c: 320: else;motor.c: 321: {;motor.c: 322: if(config.inverse_direction)
 42865                           
 42866                           ; BSR set to: 1
 42867  00C7CC  0101               	movlb	1	; () banked
 42868  00C7CE  51A5               	movf	(_config+4)& (0+255),w,b
 42869  00C7D0  B4D8               	btfsc	status,2,c
 42870  00C7D2  D002               	goto	l2479
 42871  00C7D4                     u11830:
 42872                           
 42873                           ; BSR set to: 1
 42874                           ;motor.c: 323: LATBbits.LB2 = 0;
 42875  00C7D4  948A               	bcf	3978,2,c	;volatile
 42876  00C7D6  D001               	goto	l2480
 42877  00C7D8                     l2479:
 42878                           
 42879                           ; BSR set to: 1
 42880                           ;motor.c: 324: else;motor.c: 325: LATBbits.LB2 = 1;
 42881  00C7D8  848A               	bsf	3978,2,c	;volatile
 42882  00C7DA                     l2480:
 42883                           
 42884                           ; BSR set to: 1
 42885                           ;motor.c: 326: };motor.c: 329: LATBbits.LB1 = 1;
 42886                           
 42887                           ; BSR set to: 1
 42888  00C7DA  828A               	bsf	3978,1,c	;volatile
 42889                           
 42890                           ; BSR set to: 1
 42891                           ;motor.c: 332: ++motor_current_stepcount;
 42892  00C7DC  0E01               	movlw	1
 42893  00C7DE  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 42894  00C7E0  0E00               	movlw	0
 42895  00C7E2  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 42896  00C7E4  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 42897  00C7E6  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 42898                           
 42899                           ;motor.c: 335: os.current_position_in_steps += motor_direction;
 42900  00C7E8  5155               	movf	_motor_direction& (0+255),w,b
 42901  00C7EA  0100               	movlb	0	; () banked
 42902  00C7EC  6F96               	movwf	??__motor_run& (0+255),b
 42903  00C7EE  0E00               	movlw	0
 42904  00C7F0  BF96               	btfsc	??__motor_run& (0+255),7,b
 42905  00C7F2  0EFF               	movlw	255
 42906  00C7F4  6F97               	movwf	(??__motor_run+1)& (0+255),b
 42907  00C7F6  6F98               	movwf	(??__motor_run+2)& (0+255),b
 42908  00C7F8  6F99               	movwf	(??__motor_run+3)& (0+255),b
 42909  00C7FA  5196               	movf	??__motor_run& (0+255),w,b
 42910  00C7FC  0101               	movlb	1	; () banked
 42911  00C7FE  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 42912  00C800  0100               	movlb	0	; () banked
 42913  00C802  5197               	movf	(??__motor_run+1)& (0+255),w,b
 42914  00C804  0101               	movlb	1	; () banked
 42915  00C806  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 42916  00C808  0100               	movlb	0	; () banked
 42917  00C80A  5198               	movf	(??__motor_run+2)& (0+255),w,b
 42918  00C80C  0101               	movlb	1	; () banked
 42919  00C80E  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 42920  00C810  0100               	movlb	0	; () banked
 42921  00C812  5199               	movf	(??__motor_run+3)& (0+255),w,b
 42922  00C814  0101               	movlb	1	; () banked
 42923  00C816  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 42924                           
 42925                           ;motor.c: 336: if(os.current_position_in_steps==config.full_circle_in_steps)
 42926  00C818  51A1               	movf	_config& (0+255),w,b
 42927  00C81A  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 42928  00C81C  E112               	bnz	l13239
 42929  00C81E  51A2               	movf	(_config+1)& (0+255),w,b
 42930  00C820  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 42931  00C822  E10F               	bnz	l13239
 42932  00C824  51A3               	movf	(_config+2)& (0+255),w,b
 42933  00C826  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 42934  00C828  E10C               	bnz	l13239
 42935  00C82A  51A4               	movf	(_config+3)& (0+255),w,b
 42936  00C82C  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 42937  00C82E  A4D8               	btfss	status,2,c
 42938  00C830  D008               	goto	l2481
 42939                           
 42940                           ; BSR set to: 1
 42941                           ;motor.c: 337: os.current_position_in_steps = 0;
 42942  00C832  0E00               	movlw	0
 42943  00C834  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42944  00C836  0E00               	movlw	0
 42945  00C838  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42946  00C83A  0E00               	movlw	0
 42947  00C83C  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42948  00C83E  0E00               	movlw	0
 42949  00C840  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42950  00C842                     l2481:
 42951  00C842                     l13239:
 42952                           
 42953                           ; BSR set to: 1
 42954                           ;motor.c: 338: if(os.current_position_in_steps==0xFFFFFFFF)
 42955  00C842  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 42956  00C844  E113               	bnz	l13243
 42957  00C846  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 42958  00C848  E111               	bnz	l13243
 42959  00C84A  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 42960  00C84C  E10F               	bnz	l13243
 42961  00C84E  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 42962  00C850  A4D8               	btfss	status,2,c
 42963  00C852  D00C               	goto	l2482
 42964                           
 42965                           ; BSR set to: 1
 42966                           ;motor.c: 339: os.current_position_in_steps = (config.full_circle_in_steps-1);
 42967  00C854  0EFF               	movlw	255
 42968  00C856  25A1               	addwf	_config& (0+255),w,b
 42969  00C858  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 42970  00C85A  0EFF               	movlw	255
 42971  00C85C  21A2               	addwfc	(_config+1)& (0+255),w,b
 42972  00C85E  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 42973  00C860  0EFF               	movlw	255
 42974  00C862  21A3               	addwfc	(_config+2)& (0+255),w,b
 42975  00C864  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 42976  00C866  0EFF               	movlw	255
 42977  00C868  21A4               	addwfc	(_config+3)& (0+255),w,b
 42978  00C86A  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 42979  00C86C                     l2482:
 42980  00C86C                     l13243:
 42981                           
 42982                           ; BSR set to: 1
 42983                           ;motor.c: 342: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42984  00C86C  0E55               	movlw	85
 42985  00C86E  6EA7               	movwf	4007,c	;volsfr
 42986                           
 42987                           ; BSR set to: 1
 42988  00C870  0EAA               	movlw	170
 42989  00C872  6EA7               	movwf	4007,c	;volsfr
 42990                           
 42991                           ; BSR set to: 1
 42992  00C874  010E               	movlb	14	; () banked
 42993  00C876  91BF               	bcf	191,0,b	;volatile
 42994                           
 42995                           ; BSR set to: 14
 42996                           ;motor.c: 343: RPOR4 = 0;
 42997  00C878  0E00               	movlw	0
 42998  00C87A  6FC4               	movwf	196,b	;volatile
 42999                           
 43000                           ; BSR set to: 14
 43001                           ;motor.c: 344: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 43002  00C87C  0E55               	movlw	85
 43003  00C87E  6EA7               	movwf	4007,c	;volsfr
 43004                           
 43005                           ; BSR set to: 14
 43006  00C880  0EAA               	movlw	170
 43007  00C882  6EA7               	movwf	4007,c	;volsfr
 43008                           
 43009                           ; BSR set to: 14
 43010  00C884  81BF               	bsf	191,0,b	;volatile
 43011                           
 43012                           ; BSR set to: 14
 43013                           ;motor.c: 347: motor_mode = MOTOR_MODE_MANUAL;
 43014  00C886  0E00               	movlw	0
 43015  00C888  0101               	movlb	1	; () banked
 43016  00C88A  6F56               	movwf	_motor_mode& (0+255),b
 43017                           
 43018                           ; BSR set to: 1
 43019                           ;motor.c: 351: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 43020  00C88C  0EFD               	movlw	low _motor_prescaler_lookup
 43021  00C88E  0100               	movlb	0	; () banked
 43022  00C890  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 43023  00C892  6EF6               	movwf	tblptrl,c
 43024  00C894  0E9B               	movlw	high _motor_prescaler_lookup
 43025  00C896  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 43026  00C898  6EF7               	movwf	tblptrh,c
 43027  00C89A                     	if	1	;There are 3 active tblptr bytes
 43028  00C89A  6AF8               	clrf	tblptru,c
 43029  00C89C  0E00               	movlw	low (__mediumconst shr (0+16))
 43030  00C89E  22F8               	addwfc	tblptru,f,c
 43031  00C8A0                     	endif
 43032  00C8A0  0008               	tblrd		*
 43033  00C8A2  CFF5 F096          	movff	tablat,??__motor_run
 43034  00C8A6  50CA               	movf	4042,w,c	;volatile
 43035  00C8A8  1996               	xorwf	??__motor_run& (0+255),w,b
 43036  00C8AA  0BFC               	andlw	-4
 43037  00C8AC  1996               	xorwf	??__motor_run& (0+255),w,b
 43038  00C8AE  6ECA               	movwf	4042,c	;volatile
 43039                           
 43040                           ; BSR set to: 0
 43041                           ;motor.c: 353: PR2 = motor_period_lookup[motor_current_speed];
 43042  00C8B0  0E16               	movlw	low _motor_period_lookup
 43043  00C8B2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 43044  00C8B4  6EF6               	movwf	tblptrl,c
 43045  00C8B6  0E9A               	movlw	high _motor_period_lookup
 43046  00C8B8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 43047  00C8BA  6EF7               	movwf	tblptrh,c
 43048  00C8BC                     	if	1	;There are 3 active tblptr bytes
 43049  00C8BC  6AF8               	clrf	tblptru,c
 43050  00C8BE  0E00               	movlw	low (__mediumconst shr (0+16))
 43051  00C8C0  22F8               	addwfc	tblptru,f,c
 43052  00C8C2                     	endif
 43053  00C8C2  0008               	tblrd		*
 43054  00C8C4  CFF5 FFCB          	movff	tablat,4043	;volatile
 43055                           
 43056                           ; BSR set to: 0
 43057                           ;motor.c: 355: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 43058  00C8C8  0E2F               	movlw	low _motor_postscaler_lookup
 43059  00C8CA  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 43060  00C8CC  6EF6               	movwf	tblptrl,c
 43061  00C8CE  0E98               	movlw	high _motor_postscaler_lookup
 43062  00C8D0  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 43063  00C8D2  6EF7               	movwf	tblptrh,c
 43064  00C8D4                     	if	1	;There are 3 active tblptr bytes
 43065  00C8D4  6AF8               	clrf	tblptru,c
 43066  00C8D6  0E00               	movlw	low (__mediumconst shr (0+16))
 43067  00C8D8  22F8               	addwfc	tblptru,f,c
 43068  00C8DA                     	endif
 43069  00C8DA  0008               	tblrd		*
 43070  00C8DC  CFF5 F096          	movff	tablat,??__motor_run
 43071  00C8E0  4796               	rlncf	??__motor_run& (0+255),f,b
 43072  00C8E2  4796               	rlncf	??__motor_run& (0+255),f,b
 43073  00C8E4  4796               	rlncf	??__motor_run& (0+255),f,b
 43074  00C8E6  50CA               	movf	4042,w,c	;volatile
 43075  00C8E8  1996               	xorwf	??__motor_run& (0+255),w,b
 43076  00C8EA  0B87               	andlw	-121
 43077  00C8EC  1996               	xorwf	??__motor_run& (0+255),w,b
 43078  00C8EE  6ECA               	movwf	4042,c	;volatile
 43079                           
 43080                           ; BSR set to: 0
 43081                           ;motor.c: 357: CCPR1L = PR2>>1;
 43082  00C8F0  90D8               	bcf	status,0,c
 43083  00C8F2  30CB               	rrcf	4043,w,c	;volatile
 43084  00C8F4  6EBB               	movwf	4027,c	;volatile
 43085                           
 43086                           ; BSR set to: 0
 43087                           ;motor.c: 360: PIR1bits.TMR2IF = 0;
 43088  00C8F6  929E               	bcf	3998,1,c	;volatile
 43089                           
 43090                           ; BSR set to: 0
 43091                           ;motor.c: 361: PIE1bits.TMR2IE = 1;
 43092  00C8F8  829D               	bsf	3997,1,c	;volatile
 43093                           
 43094                           ; BSR set to: 0
 43095                           ;motor.c: 364: TMR2 = 0;
 43096  00C8FA  0E00               	movlw	0
 43097  00C8FC  6ECC               	movwf	4044,c	;volatile
 43098                           
 43099                           ; BSR set to: 0
 43100                           ;motor.c: 365: T2CONbits.TMR2ON = 1;
 43101  00C8FE  84CA               	bsf	4042,2,c	;volatile
 43102                           
 43103                           ; BSR set to: 0
 43104                           ;motor.c: 368: os.busy = 1;
 43105  00C900  0E01               	movlw	1
 43106  00C902  0101               	movlb	1	; () banked
 43107  00C904  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 43108                           
 43109                           ; BSR set to: 1
 43110  00C906  0012               	return		;funcret
 43111  00C908                     __end_of__motor_run:
 43112                           	opt stack 0
 43113                           tosu	equ	0xFFF
 43114                           tosh	equ	0xFFE
 43115                           tosl	equ	0xFFD
 43116                           pclath	equ	0xFFA
 43117                           tblptru	equ	0xFF8
 43118                           tblptrh	equ	0xFF7
 43119                           tblptrl	equ	0xFF6
 43120                           tablat	equ	0xFF5
 43121                           prodh	equ	0xFF4
 43122                           prodl	equ	0xFF3
 43123                           intcon	equ	0xFF2
 43124                           indf0	equ	0xFEF
 43125                           postinc0	equ	0xFEE
 43126                           fsr0h	equ	0xFEA
 43127                           fsr0l	equ	0xFE9
 43128                           wreg	equ	0xFE8
 43129                           indf1	equ	0xFE7
 43130                           postinc1	equ	0xFE6
 43131                           postdec1	equ	0xFE5
 43132                           plusw1	equ	0xFE3
 43133                           fsr1h	equ	0xFE2
 43134                           fsr1l	equ	0xFE1
 43135                           indf2	equ	0xFDF
 43136                           postinc2	equ	0xFDE
 43137                           postdec2	equ	0xFDD
 43138                           plusw2	equ	0xFDB
 43139                           fsr2h	equ	0xFDA
 43140                           fsr2l	equ	0xFD9
 43141                           status	equ	0xFD8
 43142                           
 43143 ;; *************** function _motor_steps_from_degrees *****************
 43144 ;; Defined at:
 43145 ;;		line 32 in file "motor.c"
 43146 ;; Parameters:    Size  Location     Type
 43147 ;;  degrees         2   39[BANK0 ] unsigned int 
 43148 ;; Auto vars:     Size  Location     Type
 43149 ;;  steps           4   43[BANK0 ] float 
 43150 ;; Return value:  Size  Location     Type
 43151 ;;                  4   39[BANK0 ] unsigned long 
 43152 ;; Registers used:
 43153 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 43154 ;; Tracked objects:
 43155 ;;		On entry : 0/0
 43156 ;;		On exit  : 0/0
 43157 ;;		Unchanged: 0/0
 43158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43159 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43160 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43161 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43162 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43163 ;;Total ram usage:        8 bytes
 43164 ;; Hardware stack levels used:    1
 43165 ;; Hardware stack levels required when called:   11
 43166 ;; This function calls:
 43167 ;;		___fldiv
 43168 ;;		___flmul
 43169 ;;		___fltol
 43170 ;;		___xxtofl
 43171 ;; This function is called by:
 43172 ;;		_motor_nonzero_steps_from_degrees
 43173 ;;		__motor_run
 43174 ;; This function uses a non-reentrant model
 43175 ;;
 43176                           
 43177                           	psect	text178
 43178  011DF2                     __ptext178:
 43179                           	opt stack 0
 43180  011DF2                     _motor_steps_from_degrees:
 43181                           	opt stack 17
 43182                           
 43183                           ;motor.c: 34: float steps;;motor.c: 37: if(degrees==0)
 43184                           
 43185                           ; BSR set to: 1
 43186                           ;incstack = 0
 43187  011DF2  0100               	movlb	0	; () banked
 43188  011DF4  5187               	movf	motor_steps_from_degrees@degrees& (0+255),w,b
 43189  011DF6  1188               	iorwf	(motor_steps_from_degrees@degrees+1)& (0+255),w,b
 43190  011DF8  A4D8               	btfss	status,2,c
 43191  011DFA  D009               	goto	l2411
 43192                           
 43193                           ; BSR set to: 0
 43194                           ;motor.c: 38: {;motor.c: 39: return 0;
 43195  011DFC  0E00               	movlw	0
 43196  011DFE  6F87               	movwf	?_motor_steps_from_degrees& (0+255),b
 43197  011E00  0E00               	movlw	0
 43198  011E02  6F88               	movwf	(?_motor_steps_from_degrees+1)& (0+255),b
 43199  011E04  0E00               	movlw	0
 43200  011E06  6F89               	movwf	(?_motor_steps_from_degrees+2)& (0+255),b
 43201  011E08  0E00               	movlw	0
 43202  011E0A  6F8A               	movwf	(?_motor_steps_from_degrees+3)& (0+255),b
 43203                           
 43204                           ; BSR set to: 0
 43205  011E0C  0012               	return	
 43206  011E0E                     l2411:
 43207                           
 43208                           ; BSR set to: 0
 43209                           ;motor.c: 40: };motor.c: 42: steps = (float) degrees;
 43210                           
 43211                           ; BSR set to: 0
 43212  011E0E  C087  F060         	movff	motor_steps_from_degrees@degrees,___xxtofl@val
 43213  011E12  C088  F061         	movff	motor_steps_from_degrees@degrees+1,___xxtofl@val+1
 43214  011E16  6B62               	clrf	(___xxtofl@val+2)& (0+255),b
 43215  011E18  6B63               	clrf	(___xxtofl@val+3)& (0+255),b
 43216  011E1A  0E00               	movlw	0
 43217  011E1C  EC62  F081         	call	___xxtofl
 43218  011E20  C060  F08B         	movff	?___xxtofl,motor_steps_from_degrees@steps
 43219  011E24  C061  F08C         	movff	?___xxtofl+1,motor_steps_from_degrees@steps+1
 43220  011E28  C062  F08D         	movff	?___xxtofl+2,motor_steps_from_degrees@steps+2
 43221  011E2C  C063  F08E         	movff	?___xxtofl+3,motor_steps_from_degrees@steps+3
 43222                           
 43223                           ;motor.c: 43: steps *= config.full_circle_in_steps;
 43224  011E30  C08B  F06E         	movff	motor_steps_from_degrees@steps,___flmul@b
 43225  011E34  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___flmul@b+1
 43226  011E38  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___flmul@b+2
 43227  011E3C  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___flmul@b+3
 43228  011E40  C1A1  F060         	movff	_config,___xxtofl@val
 43229  011E44  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 43230  011E48  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 43231  011E4C  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 43232  011E50  0E00               	movlw	0
 43233  011E52  EC62  F081         	call	___xxtofl
 43234  011E56  C060  F072         	movff	?___xxtofl,___flmul@a
 43235  011E5A  C061  F073         	movff	?___xxtofl+1,___flmul@a+1
 43236  011E5E  C062  F074         	movff	?___xxtofl+2,___flmul@a+2
 43237  011E62  C063  F075         	movff	?___xxtofl+3,___flmul@a+3
 43238  011E66  EC38  F066         	call	___flmul	;wreg free
 43239  011E6A  C06E  F08B         	movff	?___flmul,motor_steps_from_degrees@steps
 43240  011E6E  C06F  F08C         	movff	?___flmul+1,motor_steps_from_degrees@steps+1
 43241  011E72  C070  F08D         	movff	?___flmul+2,motor_steps_from_degrees@steps+2
 43242  011E76  C071  F08E         	movff	?___flmul+3,motor_steps_from_degrees@steps+3
 43243                           
 43244                           ;motor.c: 44: steps /= 36000;
 43245  011E7A  C08B  F06E         	movff	motor_steps_from_degrees@steps,___fldiv@b
 43246  011E7E  C08C  F06F         	movff	motor_steps_from_degrees@steps+1,___fldiv@b+1
 43247  011E82  C08D  F070         	movff	motor_steps_from_degrees@steps+2,___fldiv@b+2
 43248  011E86  C08E  F071         	movff	motor_steps_from_degrees@steps+3,___fldiv@b+3
 43249  011E8A  0E00               	movlw	0
 43250  011E8C  0100               	movlb	0	; () banked
 43251  011E8E  6F72               	movwf	___fldiv@a& (0+255),b
 43252  011E90  0EA0               	movlw	160
 43253  011E92  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 43254  011E94  0E0C               	movlw	12
 43255  011E96  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 43256  011E98  0E47               	movlw	71
 43257  011E9A  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 43258  011E9C  ECFC  F06D         	call	___fldiv	;wreg free
 43259  011EA0  C06E  F08B         	movff	?___fldiv,motor_steps_from_degrees@steps
 43260  011EA4  C06F  F08C         	movff	?___fldiv+1,motor_steps_from_degrees@steps+1
 43261  011EA8  C070  F08D         	movff	?___fldiv+2,motor_steps_from_degrees@steps+2
 43262  011EAC  C071  F08E         	movff	?___fldiv+3,motor_steps_from_degrees@steps+3
 43263                           
 43264                           ;motor.c: 46: return (uint32_t) steps;
 43265  011EB0  C08B  F060         	movff	motor_steps_from_degrees@steps,___fltol@f1
 43266  011EB4  C08C  F061         	movff	motor_steps_from_degrees@steps+1,___fltol@f1+1
 43267  011EB8  C08D  F062         	movff	motor_steps_from_degrees@steps+2,___fltol@f1+2
 43268  011EBC  C08E  F063         	movff	motor_steps_from_degrees@steps+3,___fltol@f1+3
 43269  011EC0  ECBA  F090         	call	___fltol	;wreg free
 43270  011EC4  C060  F087         	movff	?___fltol,?_motor_steps_from_degrees
 43271  011EC8  C061  F088         	movff	?___fltol+1,?_motor_steps_from_degrees+1
 43272  011ECC  C062  F089         	movff	?___fltol+2,?_motor_steps_from_degrees+2
 43273  011ED0  C063  F08A         	movff	?___fltol+3,?_motor_steps_from_degrees+3
 43274  011ED4  0012               	return	
 43275  011ED6                     __end_of_motor_steps_from_degrees:
 43276                           	opt stack 0
 43277                           tosu	equ	0xFFF
 43278                           tosh	equ	0xFFE
 43279                           tosl	equ	0xFFD
 43280                           pclath	equ	0xFFA
 43281                           tblptru	equ	0xFF8
 43282                           tblptrh	equ	0xFF7
 43283                           tblptrl	equ	0xFF6
 43284                           tablat	equ	0xFF5
 43285                           prodh	equ	0xFF4
 43286                           prodl	equ	0xFF3
 43287                           intcon	equ	0xFF2
 43288                           indf0	equ	0xFEF
 43289                           postinc0	equ	0xFEE
 43290                           fsr0h	equ	0xFEA
 43291                           fsr0l	equ	0xFE9
 43292                           wreg	equ	0xFE8
 43293                           indf1	equ	0xFE7
 43294                           postinc1	equ	0xFE6
 43295                           postdec1	equ	0xFE5
 43296                           plusw1	equ	0xFE3
 43297                           fsr1h	equ	0xFE2
 43298                           fsr1l	equ	0xFE1
 43299                           indf2	equ	0xFDF
 43300                           postinc2	equ	0xFDE
 43301                           postdec2	equ	0xFDD
 43302                           plusw2	equ	0xFDB
 43303                           fsr2h	equ	0xFDA
 43304                           fsr2l	equ	0xFD9
 43305                           status	equ	0xFD8
 43306                           
 43307 ;; *************** function _motor_calculate_position_in_degrees *****************
 43308 ;; Defined at:
 43309 ;;		line 59 in file "motor.c"
 43310 ;; Parameters:    Size  Location     Type
 43311 ;;		None
 43312 ;; Auto vars:     Size  Location     Type
 43313 ;;  tmp             4   39[BANK0 ] float 
 43314 ;; Return value:  Size  Location     Type
 43315 ;;                  1    wreg      void 
 43316 ;; Registers used:
 43317 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 43318 ;; Tracked objects:
 43319 ;;		On entry : 0/0
 43320 ;;		On exit  : 0/0
 43321 ;;		Unchanged: 0/0
 43322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43324 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43326 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43327 ;;Total ram usage:        4 bytes
 43328 ;; Hardware stack levels used:    1
 43329 ;; Hardware stack levels required when called:   11
 43330 ;; This function calls:
 43331 ;;		___fldiv
 43332 ;;		___flmul
 43333 ;;		___fltol
 43334 ;;		___xxtofl
 43335 ;; This function is called by:
 43336 ;;		_main
 43337 ;;		_system_init
 43338 ;;		__motor_run
 43339 ;; This function uses a non-reentrant model
 43340 ;;
 43341                           
 43342                           	psect	text179
 43343  012096                     __ptext179:
 43344                           	opt stack 0
 43345  012096                     _motor_calculate_position_in_degrees:
 43346                           	opt stack 18
 43347                           
 43348                           ;motor.c: 61: float tmp;;motor.c: 63: tmp = (float) os.current_position_in_steps;
 43349                           
 43350                           ;incstack = 0
 43351  012096  C178  F060         	movff	_os+7,___xxtofl@val	;volatile
 43352  01209A  C179  F061         	movff	_os+8,___xxtofl@val+1	;volatile
 43353  01209E  C17A  F062         	movff	_os+9,___xxtofl@val+2	;volatile
 43354  0120A2  C17B  F063         	movff	_os+10,___xxtofl@val+3	;volatile
 43355  0120A6  0E00               	movlw	0
 43356  0120A8  EC62  F081         	call	___xxtofl
 43357  0120AC  C060  F087         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
 43358  0120B0  C061  F088         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
 43359  0120B4  C062  F089         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
 43360  0120B8  C063  F08A         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
 43361                           
 43362                           ;motor.c: 64: tmp *= 36000;
 43363  0120BC  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
 43364  0120C0  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
 43365  0120C4  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
 43366  0120C8  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
 43367  0120CC  0E00               	movlw	0
 43368  0120CE  0100               	movlb	0	; () banked
 43369  0120D0  6F72               	movwf	___flmul@a& (0+255),b
 43370  0120D2  0EA0               	movlw	160
 43371  0120D4  6F73               	movwf	(___flmul@a+1)& (0+255),b
 43372  0120D6  0E0C               	movlw	12
 43373  0120D8  6F74               	movwf	(___flmul@a+2)& (0+255),b
 43374  0120DA  0E47               	movlw	71
 43375  0120DC  6F75               	movwf	(___flmul@a+3)& (0+255),b
 43376  0120DE  EC38  F066         	call	___flmul	;wreg free
 43377  0120E2  C06E  F087         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
 43378  0120E6  C06F  F088         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
 43379  0120EA  C070  F089         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
 43380  0120EE  C071  F08A         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
 43381                           
 43382                           ;motor.c: 65: tmp /= config.full_circle_in_steps;
 43383  0120F2  C087  F06E         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
 43384  0120F6  C088  F06F         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
 43385  0120FA  C089  F070         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
 43386  0120FE  C08A  F071         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
 43387  012102  C1A1  F060         	movff	_config,___xxtofl@val
 43388  012106  C1A2  F061         	movff	_config+1,___xxtofl@val+1
 43389  01210A  C1A3  F062         	movff	_config+2,___xxtofl@val+2
 43390  01210E  C1A4  F063         	movff	_config+3,___xxtofl@val+3
 43391  012112  0E00               	movlw	0
 43392  012114  EC62  F081         	call	___xxtofl
 43393  012118  C060  F072         	movff	?___xxtofl,___fldiv@a
 43394  01211C  C061  F073         	movff	?___xxtofl+1,___fldiv@a+1
 43395  012120  C062  F074         	movff	?___xxtofl+2,___fldiv@a+2
 43396  012124  C063  F075         	movff	?___xxtofl+3,___fldiv@a+3
 43397  012128  ECFC  F06D         	call	___fldiv	;wreg free
 43398  01212C  C06E  F087         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
 43399  012130  C06F  F088         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
 43400  012134  C070  F089         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
 43401  012138  C071  F08A         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
 43402                           
 43403                           ;motor.c: 67: os.current_position_in_degrees = (uint16_t) tmp;
 43404  01213C  C087  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
 43405  012140  C088  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
 43406  012144  C089  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
 43407  012148  C08A  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
 43408  01214C  ECBA  F090         	call	___fltol	;wreg free
 43409  012150  C060  F17C         	movff	?___fltol,_os+11	;volatile
 43410  012154  C061  F17D         	movff	?___fltol+1,_os+12	;volatile
 43411                           
 43412                           ;motor.c: 68: if(os.current_position_in_degrees==36000)
 43413  012158  0EA0               	movlw	160
 43414  01215A  0101               	movlb	1	; () banked
 43415  01215C  197C               	xorwf	(_os+11)& (0+255),w,b	;volatile
 43416  01215E  E109               	bnz	l2420
 43417  012160  0E8C               	movlw	140
 43418  012162  197D               	xorwf	(_os+12)& (0+255),w,b	;volatile
 43419  012164  A4D8               	btfss	status,2,c
 43420  012166  0012               	return	
 43421                           
 43422                           ; BSR set to: 1
 43423                           ;motor.c: 69: {;motor.c: 71: os.current_position_in_degrees = 0;
 43424  012168  0E00               	movlw	0
 43425  01216A  6F7D               	movwf	(_os+12)& (0+255),b	;volatile
 43426  01216C  0E00               	movlw	0
 43427  01216E  6F7C               	movwf	(_os+11)& (0+255),b	;volatile
 43428  012170  0012               	return	
 43429  012172                     l2420:
 43430                           
 43431                           ; BSR set to: 1
 43432  012172  0012               	return		;funcret
 43433  012174                     __end_of_motor_calculate_position_in_degrees:
 43434                           	opt stack 0
 43435                           tosu	equ	0xFFF
 43436                           tosh	equ	0xFFE
 43437                           tosl	equ	0xFFD
 43438                           pclath	equ	0xFFA
 43439                           tblptru	equ	0xFF8
 43440                           tblptrh	equ	0xFF7
 43441                           tblptrl	equ	0xFF6
 43442                           tablat	equ	0xFF5
 43443                           prodh	equ	0xFF4
 43444                           prodl	equ	0xFF3
 43445                           intcon	equ	0xFF2
 43446                           indf0	equ	0xFEF
 43447                           postinc0	equ	0xFEE
 43448                           fsr0h	equ	0xFEA
 43449                           fsr0l	equ	0xFE9
 43450                           wreg	equ	0xFE8
 43451                           indf1	equ	0xFE7
 43452                           postinc1	equ	0xFE6
 43453                           postdec1	equ	0xFE5
 43454                           plusw1	equ	0xFE3
 43455                           fsr1h	equ	0xFE2
 43456                           fsr1l	equ	0xFE1
 43457                           indf2	equ	0xFDF
 43458                           postinc2	equ	0xFDE
 43459                           postdec2	equ	0xFDD
 43460                           plusw2	equ	0xFDB
 43461                           fsr2h	equ	0xFDA
 43462                           fsr2l	equ	0xFD9
 43463                           status	equ	0xFD8
 43464                           
 43465 ;; *************** function ___xxtofl *****************
 43466 ;; Defined at:
 43467 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 43468 ;; Parameters:    Size  Location     Type
 43469 ;;  sign            1    wreg     unsigned char 
 43470 ;;  val             4    0[BANK0 ] long 
 43471 ;; Auto vars:     Size  Location     Type
 43472 ;;  sign            1    8[BANK0 ] unsigned char 
 43473 ;;  arg             4   10[BANK0 ] unsigned long 
 43474 ;;  exp             1    9[BANK0 ] unsigned char 
 43475 ;; Return value:  Size  Location     Type
 43476 ;;                  4    0[BANK0 ] unsigned char 
 43477 ;; Registers used:
 43478 ;;		wreg, status,2, status,0
 43479 ;; Tracked objects:
 43480 ;;		On entry : 0/0
 43481 ;;		On exit  : 0/0
 43482 ;;		Unchanged: 0/0
 43483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43484 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43485 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43486 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43487 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43488 ;;Total ram usage:       14 bytes
 43489 ;; Hardware stack levels used:    1
 43490 ;; Hardware stack levels required when called:   10
 43491 ;; This function calls:
 43492 ;;		Nothing
 43493 ;; This function is called by:
 43494 ;;		_motor_steps_from_degrees
 43495 ;;		_motor_calculate_position_in_degrees
 43496 ;;		__motor_get_speed_in_degrees
 43497 ;;		__step_position_from_divide_position
 43498 ;;		_motor_divide_jump_to_nearest
 43499 ;;		_motor_arc_move
 43500 ;;		_adc_read_temperature
 43501 ;;		_motor_go_to_degrees_position
 43502 ;; This function uses a non-reentrant model
 43503 ;;
 43504                           
 43505                           	psect	text180
 43506  0102C4                     __ptext180:
 43507                           	opt stack 0
 43508  0102C4                     ___xxtofl:
 43509                           	opt stack 18
 43510                           
 43511                           ; BSR set to: 1
 43512                           ;incstack = 0
 43513                           ;___xxtofl@sign stored from wreg
 43514  0102C4  0100               	movlb	0	; () banked
 43515  0102C6  6F68               	movwf	___xxtofl@sign& (0+255),b
 43516  0102C8  0100               	movlb	0	; () banked
 43517  0102CA  5168               	movf	___xxtofl@sign& (0+255),w,b
 43518  0102CC  A4D8               	btfss	status,2,c
 43519                           
 43520                           ; BSR set to: 0
 43521  0102CE  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43522  0102D0  D01A               	goto	l3628
 43523                           
 43524                           ; BSR set to: 0
 43525  0102D2  C060  F064         	movff	___xxtofl@val,??___xxtofl
 43526  0102D6  C061  F065         	movff	___xxtofl@val+1,??___xxtofl+1
 43527  0102DA  C062  F066         	movff	___xxtofl@val+2,??___xxtofl+2
 43528  0102DE  C063  F067         	movff	___xxtofl@val+3,??___xxtofl+3
 43529  0102E2  1F64               	comf	??___xxtofl& (0+255),f,b
 43530  0102E4  1F65               	comf	(??___xxtofl+1)& (0+255),f,b
 43531  0102E6  1F66               	comf	(??___xxtofl+2)& (0+255),f,b
 43532  0102E8  1F67               	comf	(??___xxtofl+3)& (0+255),f,b
 43533  0102EA  2B64               	incf	??___xxtofl& (0+255),f,b
 43534  0102EC  0E00               	movlw	0
 43535  0102EE  2365               	addwfc	(??___xxtofl+1)& (0+255),f,b
 43536  0102F0  2366               	addwfc	(??___xxtofl+2)& (0+255),f,b
 43537  0102F2  2367               	addwfc	(??___xxtofl+3)& (0+255),f,b
 43538  0102F4  C064  F06A         	movff	??___xxtofl,___xxtofl@arg
 43539  0102F8  C065  F06B         	movff	??___xxtofl+1,___xxtofl@arg+1
 43540  0102FC  C066  F06C         	movff	??___xxtofl+2,___xxtofl@arg+2
 43541  010300  C067  F06D         	movff	??___xxtofl+3,___xxtofl@arg+3
 43542  010304  D008               	goto	l3629
 43543  010306                     l3628:
 43544                           
 43545                           ; BSR set to: 0
 43546  010306  C060  F06A         	movff	___xxtofl@val,___xxtofl@arg
 43547  01030A  C061  F06B         	movff	___xxtofl@val+1,___xxtofl@arg+1
 43548  01030E  C062  F06C         	movff	___xxtofl@val+2,___xxtofl@arg+2
 43549  010312  C063  F06D         	movff	___xxtofl@val+3,___xxtofl@arg+3
 43550  010316                     l3629:
 43551                           
 43552                           ; BSR set to: 0
 43553                           
 43554                           ; BSR set to: 0
 43555  010316  5160               	movf	___xxtofl@val& (0+255),w,b
 43556  010318  1161               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 43557  01031A  1162               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 43558  01031C  1163               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 43559  01031E  A4D8               	btfss	status,2,c
 43560  010320  D009               	goto	l3630
 43561                           
 43562                           ; BSR set to: 0
 43563  010322  0E00               	movlw	0
 43564  010324  6F60               	movwf	?___xxtofl& (0+255),b
 43565  010326  0E00               	movlw	0
 43566  010328  6F61               	movwf	(?___xxtofl+1)& (0+255),b
 43567  01032A  0E00               	movlw	0
 43568  01032C  6F62               	movwf	(?___xxtofl+2)& (0+255),b
 43569  01032E  0E00               	movlw	0
 43570  010330  6F63               	movwf	(?___xxtofl+3)& (0+255),b
 43571                           
 43572                           ; BSR set to: 0
 43573  010332  0012               	return	
 43574  010334                     l3630:
 43575                           
 43576                           ; BSR set to: 0
 43577                           
 43578                           ; BSR set to: 0
 43579  010334  0E96               	movlw	150
 43580  010336  6F69               	movwf	___xxtofl@exp& (0+255),b
 43581  010338  D006               	goto	l3632
 43582  01033A                     
 43583                           ; BSR set to: 0
 43584                           
 43585                           ; BSR set to: 0
 43586  01033A  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43587  01033C  90D8               	bcf	status,0,c
 43588  01033E  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43589  010340  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43590  010342  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43591  010344  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43592  010346                     l3632:
 43593                           
 43594                           ; BSR set to: 0
 43595                           
 43596                           ; BSR set to: 0
 43597  010346  0E00               	movlw	0
 43598  010348  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43599  01034A  6F64               	movwf	??___xxtofl& (0+255),b
 43600  01034C  0E00               	movlw	0
 43601  01034E  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43602  010350  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43603  010352  0E00               	movlw	0
 43604  010354  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43605  010356  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43606  010358  0EFE               	movlw	254
 43607  01035A  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43608  01035C  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43609  01035E  5164               	movf	??___xxtofl& (0+255),w,b
 43610  010360  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43611  010362  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43612  010364  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43613  010366  B4D8               	btfsc	status,2,c
 43614  010368  D00D               	goto	l3635
 43615  01036A  D7E7               	goto	l3633
 43616  01036C                     
 43617                           ; BSR set to: 0
 43618                           
 43619                           ; BSR set to: 0
 43620  01036C  2B69               	incf	___xxtofl@exp& (0+255),f,b
 43621                           
 43622                           ; BSR set to: 0
 43623  01036E  0E01               	movlw	1
 43624  010370  276A               	addwf	___xxtofl@arg& (0+255),f,b
 43625  010372  0E00               	movlw	0
 43626  010374  236B               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 43627  010376  236C               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 43628  010378  236D               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 43629                           
 43630                           ; BSR set to: 0
 43631  01037A  90D8               	bcf	status,0,c
 43632  01037C  336D               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 43633  01037E  336C               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 43634  010380  336B               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 43635  010382  336A               	rrcf	___xxtofl@arg& (0+255),f,b
 43636  010384                     l3635:
 43637                           
 43638                           ; BSR set to: 0
 43639  010384  0E00               	movlw	0
 43640  010386  156A               	andwf	___xxtofl@arg& (0+255),w,b
 43641  010388  6F64               	movwf	??___xxtofl& (0+255),b
 43642  01038A  0E00               	movlw	0
 43643  01038C  156B               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 43644  01038E  6F65               	movwf	(??___xxtofl+1)& (0+255),b
 43645  010390  0E00               	movlw	0
 43646  010392  156C               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 43647  010394  6F66               	movwf	(??___xxtofl+2)& (0+255),b
 43648  010396  0EFF               	movlw	255
 43649  010398  156D               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 43650  01039A  6F67               	movwf	(??___xxtofl+3)& (0+255),b
 43651  01039C  5164               	movf	??___xxtofl& (0+255),w,b
 43652  01039E  1165               	iorwf	(??___xxtofl+1)& (0+255),w,b
 43653  0103A0  1166               	iorwf	(??___xxtofl+2)& (0+255),w,b
 43654  0103A2  1167               	iorwf	(??___xxtofl+3)& (0+255),w,b
 43655  0103A4  B4D8               	btfsc	status,2,c
 43656  0103A6  D007               	goto	l3638
 43657  0103A8  D7E1               	goto	l3636
 43658  0103AA                     
 43659                           ; BSR set to: 0
 43660                           
 43661                           ; BSR set to: 0
 43662  0103AA  0769               	decf	___xxtofl@exp& (0+255),f,b
 43663  0103AC  90D8               	bcf	status,0,c
 43664  0103AE  376A               	rlcf	___xxtofl@arg& (0+255),f,b
 43665  0103B0  376B               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 43666  0103B2  376C               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 43667  0103B4  376D               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 43668  0103B6                     l3638:
 43669                           
 43670                           ; BSR set to: 0
 43671                           
 43672                           ; BSR set to: 0
 43673  0103B6  BF6C               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 43674  0103B8  D003               	goto	u10570
 43675                           
 43676                           ; BSR set to: 0
 43677  0103BA  0E02               	movlw	2
 43678  0103BC  6169               	cpfslt	___xxtofl@exp& (0+255),b
 43679  0103BE  D7F5               	goto	l3639
 43680  0103C0                     u10570:
 43681                           
 43682                           ; BSR set to: 0
 43683                           
 43684                           ; BSR set to: 0
 43685  0103C0  A169               	btfss	___xxtofl@exp& (0+255),0,b
 43686                           
 43687                           ; BSR set to: 0
 43688  0103C2  9F6C               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 43689                           
 43690                           ; BSR set to: 0
 43691                           
 43692                           ; BSR set to: 0
 43693  0103C4  90D8               	bcf	status,0,c
 43694  0103C6  3369               	rrcf	___xxtofl@exp& (0+255),f,b
 43695                           
 43696                           ; BSR set to: 0
 43697  0103C8  C069  F064         	movff	___xxtofl@exp,??___xxtofl
 43698  0103CC  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43699  0103CE  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43700  0103D0  6B67               	clrf	(??___xxtofl+3)& (0+255),b
 43701  0103D2  C064  F067         	movff	??___xxtofl,??___xxtofl+3
 43702  0103D6  6B66               	clrf	(??___xxtofl+2)& (0+255),b
 43703  0103D8  6B65               	clrf	(??___xxtofl+1)& (0+255),b
 43704  0103DA  6B64               	clrf	??___xxtofl& (0+255),b
 43705  0103DC  5164               	movf	??___xxtofl& (0+255),w,b
 43706  0103DE  136A               	iorwf	___xxtofl@arg& (0+255),f,b
 43707  0103E0  5165               	movf	(??___xxtofl+1)& (0+255),w,b
 43708  0103E2  136B               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 43709  0103E4  5166               	movf	(??___xxtofl+2)& (0+255),w,b
 43710  0103E6  136C               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 43711  0103E8  5167               	movf	(??___xxtofl+3)& (0+255),w,b
 43712  0103EA  136D               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 43713                           
 43714                           ; BSR set to: 0
 43715  0103EC  5168               	movf	___xxtofl@sign& (0+255),w,b
 43716  0103EE  A4D8               	btfss	status,2,c
 43717                           
 43718                           ; BSR set to: 0
 43719  0103F0  AF63               	btfss	(___xxtofl@val+3)& (0+255),7,b
 43720  0103F2  D001               	goto	l3644
 43721                           
 43722                           ; BSR set to: 0
 43723  0103F4  8F6D               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 43724  0103F6                     l3644:
 43725                           
 43726                           ; BSR set to: 0
 43727                           
 43728                           ; BSR set to: 0
 43729  0103F6  C06A  F060         	movff	___xxtofl@arg,?___xxtofl
 43730  0103FA  C06B  F061         	movff	___xxtofl@arg+1,?___xxtofl+1
 43731  0103FE  C06C  F062         	movff	___xxtofl@arg+2,?___xxtofl+2
 43732  010402  C06D  F063         	movff	___xxtofl@arg+3,?___xxtofl+3
 43733  010406  0012               	return	
 43734  010408                     __end_of___xxtofl:
 43735                           	opt stack 0
 43736                           tosu	equ	0xFFF
 43737                           tosh	equ	0xFFE
 43738                           tosl	equ	0xFFD
 43739                           pclath	equ	0xFFA
 43740                           tblptru	equ	0xFF8
 43741                           tblptrh	equ	0xFF7
 43742                           tblptrl	equ	0xFF6
 43743                           tablat	equ	0xFF5
 43744                           prodh	equ	0xFF4
 43745                           prodl	equ	0xFF3
 43746                           intcon	equ	0xFF2
 43747                           indf0	equ	0xFEF
 43748                           postinc0	equ	0xFEE
 43749                           fsr0h	equ	0xFEA
 43750                           fsr0l	equ	0xFE9
 43751                           wreg	equ	0xFE8
 43752                           indf1	equ	0xFE7
 43753                           postinc1	equ	0xFE6
 43754                           postdec1	equ	0xFE5
 43755                           plusw1	equ	0xFE3
 43756                           fsr1h	equ	0xFE2
 43757                           fsr1l	equ	0xFE1
 43758                           indf2	equ	0xFDF
 43759                           postinc2	equ	0xFDE
 43760                           postdec2	equ	0xFDD
 43761                           plusw2	equ	0xFDB
 43762                           fsr2h	equ	0xFDA
 43763                           fsr2l	equ	0xFD9
 43764                           status	equ	0xFD8
 43765                           
 43766 ;; *************** function ___fltol *****************
 43767 ;; Defined at:
 43768 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 43769 ;; Parameters:    Size  Location     Type
 43770 ;;  f1              4    0[BANK0 ] unsigned char 
 43771 ;; Auto vars:     Size  Location     Type
 43772 ;;  exp1            1    9[BANK0 ] unsigned char 
 43773 ;;  sign1           1    8[BANK0 ] unsigned char 
 43774 ;; Return value:  Size  Location     Type
 43775 ;;                  4    0[BANK0 ] long 
 43776 ;; Registers used:
 43777 ;;		wreg, status,2, status,0
 43778 ;; Tracked objects:
 43779 ;;		On entry : 0/0
 43780 ;;		On exit  : 0/0
 43781 ;;		Unchanged: 0/0
 43782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43783 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43784 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43785 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43786 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43787 ;;Total ram usage:       10 bytes
 43788 ;; Hardware stack levels used:    1
 43789 ;; Hardware stack levels required when called:   10
 43790 ;; This function calls:
 43791 ;;		Nothing
 43792 ;; This function is called by:
 43793 ;;		_motor_steps_from_degrees
 43794 ;;		_motor_calculate_position_in_degrees
 43795 ;;		__motor_get_speed_in_degrees
 43796 ;;		__step_position_from_divide_position
 43797 ;;		_motor_divide_jump_to_nearest
 43798 ;;		_motor_arc_move
 43799 ;;		_adc_read_temperature
 43800 ;;		_motor_go_to_degrees_position
 43801 ;; This function uses a non-reentrant model
 43802 ;;
 43803                           
 43804                           	psect	text181
 43805  012174                     __ptext181:
 43806                           	opt stack 0
 43807  012174                     ___fltol:
 43808                           	opt stack 18
 43809                           
 43810                           ; BSR set to: 0
 43811                           ;incstack = 0
 43812  012174  0100               	movlb	0	; () banked
 43813  012176  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 43814  012178  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 43815  01217A  6F69               	movwf	___fltol@exp1& (0+255),b
 43816  01217C  5169               	movf	___fltol@exp1& (0+255),w,b
 43817  01217E  A4D8               	btfss	status,2,c
 43818  012180  D009               	goto	l3273
 43819                           
 43820                           ; BSR set to: 0
 43821  012182  0E00               	movlw	0
 43822  012184  6F60               	movwf	?___fltol& (0+255),b
 43823  012186  0E00               	movlw	0
 43824  012188  6F61               	movwf	(?___fltol+1)& (0+255),b
 43825  01218A  0E00               	movlw	0
 43826  01218C  6F62               	movwf	(?___fltol+2)& (0+255),b
 43827  01218E  0E00               	movlw	0
 43828  012190  6F63               	movwf	(?___fltol+3)& (0+255),b
 43829                           
 43830                           ; BSR set to: 0
 43831  012192  0012               	return	
 43832  012194                     l3273:
 43833                           
 43834                           ; BSR set to: 0
 43835                           
 43836                           ; BSR set to: 0
 43837  012194  C060  F064         	movff	___fltol@f1,??___fltol
 43838  012198  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 43839  01219C  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 43840  0121A0  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 43841  0121A4  0E20               	movlw	32
 43842  0121A6  D005               	goto	u10450
 43843  0121A8                     u10455:
 43844  0121A8  90D8               	bcf	status,0,c
 43845  0121AA  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 43846  0121AC  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 43847  0121AE  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 43848  0121B0  3364               	rrcf	??___fltol& (0+255),f,b
 43849  0121B2                     u10450:
 43850  0121B2  2EE8               	decfsz	wreg,f,c
 43851  0121B4  D7F9               	goto	u10455
 43852  0121B6  5164               	movf	??___fltol& (0+255),w,b
 43853  0121B8  6F68               	movwf	___fltol@sign1& (0+255),b
 43854                           
 43855                           ; BSR set to: 0
 43856  0121BA  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 43857                           
 43858                           ; BSR set to: 0
 43859  0121BC  0EFF               	movlw	255
 43860  0121BE  1760               	andwf	___fltol@f1& (0+255),f,b
 43861  0121C0  0EFF               	movlw	255
 43862  0121C2  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 43863  0121C4  0EFF               	movlw	255
 43864  0121C6  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 43865  0121C8  0E00               	movlw	0
 43866  0121CA  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 43867                           
 43868                           ; BSR set to: 0
 43869  0121CC  0E96               	movlw	150
 43870  0121CE  5F69               	subwf	___fltol@exp1& (0+255),f,b
 43871                           
 43872                           ; BSR set to: 0
 43873  0121D0  AF69               	btfss	___fltol@exp1& (0+255),7,b
 43874  0121D2  D016               	goto	l3275
 43875                           
 43876                           ; BSR set to: 0
 43877  0121D4  5169               	movf	___fltol@exp1& (0+255),w,b
 43878  0121D6  0A80               	xorlw	128
 43879  0121D8  0F97               	addlw	151
 43880  0121DA  B0D8               	btfsc	status,0,c
 43881  0121DC  D009               	goto	l3276
 43882                           
 43883                           ; BSR set to: 0
 43884  0121DE  0E00               	movlw	0
 43885  0121E0  6F60               	movwf	?___fltol& (0+255),b
 43886  0121E2  0E00               	movlw	0
 43887  0121E4  6F61               	movwf	(?___fltol+1)& (0+255),b
 43888  0121E6  0E00               	movlw	0
 43889  0121E8  6F62               	movwf	(?___fltol+2)& (0+255),b
 43890  0121EA  0E00               	movlw	0
 43891  0121EC  6F63               	movwf	(?___fltol+3)& (0+255),b
 43892                           
 43893                           ; BSR set to: 0
 43894  0121EE  0012               	return	
 43895  0121F0                     l3276:
 43896                           
 43897                           ; BSR set to: 0
 43898                           
 43899                           ; BSR set to: 0
 43900                           
 43901                           ; BSR set to: 0
 43902  0121F0  90D8               	bcf	status,0,c
 43903  0121F2  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 43904  0121F4  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 43905  0121F6  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 43906  0121F8  3360               	rrcf	___fltol@f1& (0+255),f,b
 43907                           
 43908                           ; BSR set to: 0
 43909  0121FA  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 43910  0121FC  D7F9               	goto	l3276
 43911                           
 43912                           ; BSR set to: 0
 43913  0121FE  D015               	goto	u10490
 43914  012200                     l3275:
 43915                           
 43916                           ; BSR set to: 0
 43917                           
 43918                           ; BSR set to: 0
 43919  012200  0E1F               	movlw	31
 43920  012202  6569               	cpfsgt	___fltol@exp1& (0+255),b
 43921  012204  D00F               	goto	l3281
 43922                           
 43923                           ; BSR set to: 0
 43924  012206  0E00               	movlw	0
 43925  012208  6F60               	movwf	?___fltol& (0+255),b
 43926  01220A  0E00               	movlw	0
 43927  01220C  6F61               	movwf	(?___fltol+1)& (0+255),b
 43928  01220E  0E00               	movlw	0
 43929  012210  6F62               	movwf	(?___fltol+2)& (0+255),b
 43930  012212  0E00               	movlw	0
 43931  012214  6F63               	movwf	(?___fltol+3)& (0+255),b
 43932                           
 43933                           ; BSR set to: 0
 43934  012216  0012               	return	
 43935  012218                     
 43936                           ; BSR set to: 0
 43937                           
 43938                           ; BSR set to: 0
 43939  012218  90D8               	bcf	status,0,c
 43940  01221A  3760               	rlcf	___fltol@f1& (0+255),f,b
 43941  01221C  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 43942  01221E  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 43943  012220  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 43944  012222  0769               	decf	___fltol@exp1& (0+255),f,b
 43945  012224                     l3281:
 43946                           
 43947                           ; BSR set to: 0
 43948                           
 43949                           ; BSR set to: 0
 43950  012224  5169               	movf	___fltol@exp1& (0+255),w,b
 43951  012226  A4D8               	btfss	status,2,c
 43952  012228  D7F7               	goto	l3282
 43953  01222A                     u10490:
 43954                           
 43955                           ; BSR set to: 0
 43956                           
 43957                           ; BSR set to: 0
 43958                           
 43959                           ; BSR set to: 0
 43960  01222A  5168               	movf	___fltol@sign1& (0+255),w,b
 43961  01222C  B4D8               	btfsc	status,2,c
 43962  01222E  D008               	goto	l3284
 43963                           
 43964                           ; BSR set to: 0
 43965  012230  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 43966  012232  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 43967  012234  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 43968  012236  6D60               	negf	___fltol@f1& (0+255),b
 43969  012238  0E00               	movlw	0
 43970  01223A  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 43971  01223C  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 43972  01223E  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 43973  012240                     l3284:
 43974                           
 43975                           ; BSR set to: 0
 43976                           
 43977                           ; BSR set to: 0
 43978  012240  C060  F060         	movff	___fltol@f1,?___fltol
 43979  012244  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 43980  012248  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 43981  01224C  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 43982  012250  0012               	return	
 43983  012252                     __end_of___fltol:
 43984                           	opt stack 0
 43985                           tosu	equ	0xFFF
 43986                           tosh	equ	0xFFE
 43987                           tosl	equ	0xFFD
 43988                           pclath	equ	0xFFA
 43989                           tblptru	equ	0xFF8
 43990                           tblptrh	equ	0xFF7
 43991                           tblptrl	equ	0xFF6
 43992                           tablat	equ	0xFF5
 43993                           prodh	equ	0xFF4
 43994                           prodl	equ	0xFF3
 43995                           intcon	equ	0xFF2
 43996                           indf0	equ	0xFEF
 43997                           postinc0	equ	0xFEE
 43998                           fsr0h	equ	0xFEA
 43999                           fsr0l	equ	0xFE9
 44000                           wreg	equ	0xFE8
 44001                           indf1	equ	0xFE7
 44002                           postinc1	equ	0xFE6
 44003                           postdec1	equ	0xFE5
 44004                           plusw1	equ	0xFE3
 44005                           fsr1h	equ	0xFE2
 44006                           fsr1l	equ	0xFE1
 44007                           indf2	equ	0xFDF
 44008                           postinc2	equ	0xFDE
 44009                           postdec2	equ	0xFDD
 44010                           plusw2	equ	0xFDB
 44011                           fsr2h	equ	0xFDA
 44012                           fsr2l	equ	0xFD9
 44013                           status	equ	0xFD8
 44014                           
 44015 ;; *************** function ___flmul *****************
 44016 ;; Defined at:
 44017 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 44018 ;; Parameters:    Size  Location     Type
 44019 ;;  b               4   14[BANK0 ] long 
 44020 ;;  a               4   18[BANK0 ] long 
 44021 ;; Auto vars:     Size  Location     Type
 44022 ;;  prod            4   33[BANK0 ] struct .
 44023 ;;  grs             4   27[BANK0 ] unsigned long 
 44024 ;;  temp            2   37[BANK0 ] struct .
 44025 ;;  bexp            1   32[BANK0 ] unsigned char 
 44026 ;;  aexp            1   31[BANK0 ] unsigned char 
 44027 ;;  sign            1   26[BANK0 ] unsigned char 
 44028 ;; Return value:  Size  Location     Type
 44029 ;;                  4   14[BANK0 ] unsigned char 
 44030 ;; Registers used:
 44031 ;;		wreg, status,2, status,0, prodl, prodh
 44032 ;; Tracked objects:
 44033 ;;		On entry : 0/0
 44034 ;;		On exit  : 0/0
 44035 ;;		Unchanged: 0/0
 44036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44037 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44038 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44039 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44040 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44041 ;;Total ram usage:       25 bytes
 44042 ;; Hardware stack levels used:    1
 44043 ;; Hardware stack levels required when called:   10
 44044 ;; This function calls:
 44045 ;;		Nothing
 44046 ;; This function is called by:
 44047 ;;		_motor_steps_from_degrees
 44048 ;;		_motor_calculate_position_in_degrees
 44049 ;;		__step_position_from_divide_position
 44050 ;;		_motor_divide_jump_to_nearest
 44051 ;;		_motor_arc_move
 44052 ;;		_adc_read_temperature
 44053 ;;		_motor_go_to_degrees_position
 44054 ;; This function uses a non-reentrant model
 44055 ;;
 44056                           
 44057                           	psect	text182
 44058  00CC70                     __ptext182:
 44059                           	opt stack 0
 44060  00CC70                     ___flmul:
 44061                           	opt stack 18
 44062                           
 44063                           ; BSR set to: 0
 44064                           ;incstack = 0
 44065  00CC70  0100               	movlb	0	; () banked
 44066  00CC72  5171               	movf	(___flmul@b+3)& (0+255),w,b
 44067  00CC74  0B80               	andlw	128
 44068  00CC76  6F7A               	movwf	___flmul@sign& (0+255),b
 44069  00CC78  5171               	movf	(___flmul@b+3)& (0+255),w,b
 44070  00CC7A  2571               	addwf	(___flmul@b+3)& (0+255),w,b
 44071  00CC7C  6F80               	movwf	___flmul@bexp& (0+255),b
 44072                           
 44073                           ; BSR set to: 0
 44074  00CC7E  BF70               	btfsc	(___flmul@b+2)& (0+255),7,b
 44075                           
 44076                           ; BSR set to: 0
 44077  00CC80  8180               	bsf	___flmul@bexp& (0+255),0,b
 44078                           
 44079                           ; BSR set to: 0
 44080                           
 44081                           ; BSR set to: 0
 44082  00CC82  5180               	movf	___flmul@bexp& (0+255),w,b
 44083  00CC84  B4D8               	btfsc	status,2,c
 44084  00CC86  D00D               	goto	l3581
 44085                           
 44086                           ; BSR set to: 0
 44087  00CC88  2980               	incf	___flmul@bexp& (0+255),w,b
 44088  00CC8A  A4D8               	btfss	status,2,c
 44089  00CC8C  D008               	goto	l3582
 44090                           
 44091                           ; BSR set to: 0
 44092  00CC8E  0E00               	movlw	0
 44093  00CC90  6F6E               	movwf	___flmul@b& (0+255),b
 44094  00CC92  0E00               	movlw	0
 44095  00CC94  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 44096  00CC96  0E00               	movlw	0
 44097  00CC98  6F70               	movwf	(___flmul@b+2)& (0+255),b
 44098  00CC9A  0E00               	movlw	0
 44099  00CC9C  6F71               	movwf	(___flmul@b+3)& (0+255),b
 44100  00CC9E                     l3582:
 44101                           
 44102                           ; BSR set to: 0
 44103                           
 44104                           ; BSR set to: 0
 44105  00CC9E  8F70               	bsf	(___flmul@b+2)& (0+255),7,b
 44106  00CCA0  D008               	goto	l3583
 44107  00CCA2                     l3581:
 44108                           
 44109                           ; BSR set to: 0
 44110                           
 44111                           ; BSR set to: 0
 44112  00CCA2  0E00               	movlw	0
 44113  00CCA4  6F6E               	movwf	___flmul@b& (0+255),b
 44114  00CCA6  0E00               	movlw	0
 44115  00CCA8  6F6F               	movwf	(___flmul@b+1)& (0+255),b
 44116  00CCAA  0E00               	movlw	0
 44117  00CCAC  6F70               	movwf	(___flmul@b+2)& (0+255),b
 44118  00CCAE  0E00               	movlw	0
 44119  00CCB0  6F71               	movwf	(___flmul@b+3)& (0+255),b
 44120  00CCB2                     l3583:
 44121                           
 44122                           ; BSR set to: 0
 44123                           
 44124                           ; BSR set to: 0
 44125  00CCB2  5175               	movf	(___flmul@a+3)& (0+255),w,b
 44126  00CCB4  0B80               	andlw	128
 44127  00CCB6  1B7A               	xorwf	___flmul@sign& (0+255),f,b
 44128                           
 44129                           ; BSR set to: 0
 44130  00CCB8  5175               	movf	(___flmul@a+3)& (0+255),w,b
 44131  00CCBA  2575               	addwf	(___flmul@a+3)& (0+255),w,b
 44132  00CCBC  6F7F               	movwf	___flmul@aexp& (0+255),b
 44133                           
 44134                           ; BSR set to: 0
 44135  00CCBE  BF74               	btfsc	(___flmul@a+2)& (0+255),7,b
 44136                           
 44137                           ; BSR set to: 0
 44138  00CCC0  817F               	bsf	___flmul@aexp& (0+255),0,b
 44139                           
 44140                           ; BSR set to: 0
 44141                           
 44142                           ; BSR set to: 0
 44143  00CCC2  517F               	movf	___flmul@aexp& (0+255),w,b
 44144  00CCC4  B4D8               	btfsc	status,2,c
 44145  00CCC6  D00D               	goto	l3585
 44146                           
 44147                           ; BSR set to: 0
 44148  00CCC8  297F               	incf	___flmul@aexp& (0+255),w,b
 44149  00CCCA  A4D8               	btfss	status,2,c
 44150  00CCCC  D008               	goto	l3586
 44151                           
 44152                           ; BSR set to: 0
 44153  00CCCE  0E00               	movlw	0
 44154  00CCD0  6F72               	movwf	___flmul@a& (0+255),b
 44155  00CCD2  0E00               	movlw	0
 44156  00CCD4  6F73               	movwf	(___flmul@a+1)& (0+255),b
 44157  00CCD6  0E00               	movlw	0
 44158  00CCD8  6F74               	movwf	(___flmul@a+2)& (0+255),b
 44159  00CCDA  0E00               	movlw	0
 44160  00CCDC  6F75               	movwf	(___flmul@a+3)& (0+255),b
 44161  00CCDE                     l3586:
 44162                           
 44163                           ; BSR set to: 0
 44164                           
 44165                           ; BSR set to: 0
 44166  00CCDE  8F74               	bsf	(___flmul@a+2)& (0+255),7,b
 44167  00CCE0  D008               	goto	l3587
 44168  00CCE2                     l3585:
 44169                           
 44170                           ; BSR set to: 0
 44171                           
 44172                           ; BSR set to: 0
 44173  00CCE2  0E00               	movlw	0
 44174  00CCE4  6F72               	movwf	___flmul@a& (0+255),b
 44175  00CCE6  0E00               	movlw	0
 44176  00CCE8  6F73               	movwf	(___flmul@a+1)& (0+255),b
 44177  00CCEA  0E00               	movlw	0
 44178  00CCEC  6F74               	movwf	(___flmul@a+2)& (0+255),b
 44179  00CCEE  0E00               	movlw	0
 44180  00CCF0  6F75               	movwf	(___flmul@a+3)& (0+255),b
 44181  00CCF2                     l3587:
 44182                           
 44183                           ; BSR set to: 0
 44184  00CCF2  517F               	movf	___flmul@aexp& (0+255),w,b
 44185  00CCF4  B4D8               	btfsc	status,2,c
 44186  00CCF6  D003               	goto	u10320
 44187                           
 44188                           ; BSR set to: 0
 44189  00CCF8  5180               	movf	___flmul@bexp& (0+255),w,b
 44190  00CCFA  A4D8               	btfss	status,2,c
 44191  00CCFC  D009               	goto	l3588
 44192  00CCFE                     u10320:
 44193                           
 44194                           ; BSR set to: 0
 44195                           
 44196                           ; BSR set to: 0
 44197  00CCFE  0E00               	movlw	0
 44198  00CD00  6F6E               	movwf	?___flmul& (0+255),b
 44199  00CD02  0E00               	movlw	0
 44200  00CD04  6F6F               	movwf	(?___flmul+1)& (0+255),b
 44201  00CD06  0E00               	movlw	0
 44202  00CD08  6F70               	movwf	(?___flmul+2)& (0+255),b
 44203  00CD0A  0E00               	movlw	0
 44204  00CD0C  6F71               	movwf	(?___flmul+3)& (0+255),b
 44205                           
 44206                           ; BSR set to: 0
 44207  00CD0E  0012               	return	
 44208  00CD10                     l3588:
 44209                           
 44210                           ; BSR set to: 0
 44211                           
 44212                           ; BSR set to: 0
 44213  00CD10  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44214  00CD12  036E               	mulwf	___flmul@b& (0+255),b
 44215  00CD14  CFF3 F085          	movff	prodl,___flmul@temp
 44216  00CD18  CFF4 F086          	movff	prodh,___flmul@temp+1
 44217                           
 44218                           ; BSR set to: 0
 44219  00CD1C  5185               	movf	___flmul@temp& (0+255),w,b
 44220  00CD1E  6F7B               	movwf	___flmul@grs& (0+255),b
 44221  00CD20  6B7C               	clrf	(___flmul@grs+1)& (0+255),b
 44222  00CD22  6B7D               	clrf	(___flmul@grs+2)& (0+255),b
 44223  00CD24  6B7E               	clrf	(___flmul@grs+3)& (0+255),b
 44224                           
 44225                           ; BSR set to: 0
 44226  00CD26  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44227  00CD28  6F81               	movwf	___flmul@prod& (0+255),b
 44228  00CD2A  6B82               	clrf	(___flmul@prod+1)& (0+255),b
 44229  00CD2C  6B83               	clrf	(___flmul@prod+2)& (0+255),b
 44230  00CD2E  6B84               	clrf	(___flmul@prod+3)& (0+255),b
 44231  00CD30  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44232  00CD32  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44233  00CD34  CFF3 F085          	movff	prodl,___flmul@temp
 44234  00CD38  CFF4 F086          	movff	prodh,___flmul@temp+1
 44235                           
 44236                           ; BSR set to: 0
 44237  00CD3C  5185               	movf	___flmul@temp& (0+255),w,b
 44238  00CD3E  277B               	addwf	___flmul@grs& (0+255),f,b
 44239  00CD40  0E00               	movlw	0
 44240  00CD42  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44241  00CD44  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44242  00CD46  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44243                           
 44244                           ; BSR set to: 0
 44245  00CD48  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44246  00CD4A  2781               	addwf	___flmul@prod& (0+255),f,b
 44247  00CD4C  0E00               	movlw	0
 44248  00CD4E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44249  00CD50  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44250  00CD52  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44251  00CD54  5172               	movf	___flmul@a& (0+255),w,b
 44252  00CD56  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44253  00CD58  CFF3 F085          	movff	prodl,___flmul@temp
 44254  00CD5C  CFF4 F086          	movff	prodh,___flmul@temp+1
 44255                           
 44256                           ; BSR set to: 0
 44257  00CD60  5185               	movf	___flmul@temp& (0+255),w,b
 44258  00CD62  277B               	addwf	___flmul@grs& (0+255),f,b
 44259  00CD64  0E00               	movlw	0
 44260  00CD66  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44261  00CD68  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44262  00CD6A  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44263                           
 44264                           ; BSR set to: 0
 44265  00CD6C  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44266  00CD6E  2781               	addwf	___flmul@prod& (0+255),f,b
 44267  00CD70  0E00               	movlw	0
 44268  00CD72  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44269  00CD74  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44270  00CD76  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44271                           
 44272                           ; BSR set to: 0
 44273  00CD78  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44274  00CD7C  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44275  00CD80  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44276  00CD84  6B7B               	clrf	___flmul@grs& (0+255),b
 44277                           
 44278                           ; BSR set to: 0
 44279  00CD86  5172               	movf	___flmul@a& (0+255),w,b
 44280  00CD88  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44281  00CD8A  CFF3 F085          	movff	prodl,___flmul@temp
 44282  00CD8E  CFF4 F086          	movff	prodh,___flmul@temp+1
 44283                           
 44284                           ; BSR set to: 0
 44285  00CD92  5185               	movf	___flmul@temp& (0+255),w,b
 44286  00CD94  277B               	addwf	___flmul@grs& (0+255),f,b
 44287  00CD96  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44288  00CD98  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44289  00CD9A  0E00               	movlw	0
 44290  00CD9C  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44291  00CD9E  0E00               	movlw	0
 44292  00CDA0  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44293                           
 44294                           ; BSR set to: 0
 44295  00CDA2  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44296  00CDA4  036E               	mulwf	___flmul@b& (0+255),b
 44297  00CDA6  CFF3 F085          	movff	prodl,___flmul@temp
 44298  00CDAA  CFF4 F086          	movff	prodh,___flmul@temp+1
 44299                           
 44300                           ; BSR set to: 0
 44301  00CDAE  5185               	movf	___flmul@temp& (0+255),w,b
 44302  00CDB0  277B               	addwf	___flmul@grs& (0+255),f,b
 44303  00CDB2  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44304  00CDB4  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44305  00CDB6  0E00               	movlw	0
 44306  00CDB8  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44307  00CDBA  0E00               	movlw	0
 44308  00CDBC  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44309                           
 44310                           ; BSR set to: 0
 44311  00CDBE  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44312  00CDC2  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44313  00CDC6  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44314  00CDCA  6B7B               	clrf	___flmul@grs& (0+255),b
 44315  00CDCC  5172               	movf	___flmul@a& (0+255),w,b
 44316  00CDCE  036E               	mulwf	___flmul@b& (0+255),b
 44317  00CDD0  CFF3 F085          	movff	prodl,___flmul@temp
 44318  00CDD4  CFF4 F086          	movff	prodh,___flmul@temp+1
 44319                           
 44320                           ; BSR set to: 0
 44321  00CDD8  5185               	movf	___flmul@temp& (0+255),w,b
 44322  00CDDA  277B               	addwf	___flmul@grs& (0+255),f,b
 44323  00CDDC  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44324  00CDDE  237C               	addwfc	(___flmul@grs+1)& (0+255),f,b
 44325  00CDE0  0E00               	movlw	0
 44326  00CDE2  237D               	addwfc	(___flmul@grs+2)& (0+255),f,b
 44327  00CDE4  0E00               	movlw	0
 44328  00CDE6  237E               	addwfc	(___flmul@grs+3)& (0+255),f,b
 44329                           
 44330                           ; BSR set to: 0
 44331  00CDE8  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44332  00CDEA  036F               	mulwf	(___flmul@b+1)& (0+255),b
 44333  00CDEC  CFF3 F085          	movff	prodl,___flmul@temp
 44334  00CDF0  CFF4 F086          	movff	prodh,___flmul@temp+1
 44335  00CDF4  5185               	movf	___flmul@temp& (0+255),w,b
 44336  00CDF6  2781               	addwf	___flmul@prod& (0+255),f,b
 44337  00CDF8  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44338  00CDFA  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44339  00CDFC  0E00               	movlw	0
 44340  00CDFE  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44341  00CE00  0E00               	movlw	0
 44342  00CE02  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44343                           
 44344                           ; BSR set to: 0
 44345  00CE04  5173               	movf	(___flmul@a+1)& (0+255),w,b
 44346  00CE06  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44347  00CE08  CFF3 F085          	movff	prodl,___flmul@temp
 44348  00CE0C  CFF4 F086          	movff	prodh,___flmul@temp+1
 44349                           
 44350                           ; BSR set to: 0
 44351  00CE10  5185               	movf	___flmul@temp& (0+255),w,b
 44352  00CE12  2781               	addwf	___flmul@prod& (0+255),f,b
 44353  00CE14  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44354  00CE16  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44355  00CE18  0E00               	movlw	0
 44356  00CE1A  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44357  00CE1C  0E00               	movlw	0
 44358  00CE1E  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44359  00CE20  5174               	movf	(___flmul@a+2)& (0+255),w,b
 44360  00CE22  0370               	mulwf	(___flmul@b+2)& (0+255),b
 44361  00CE24  CFF3 F085          	movff	prodl,___flmul@temp
 44362  00CE28  CFF4 F086          	movff	prodh,___flmul@temp+1
 44363                           
 44364                           ; BSR set to: 0
 44365  00CE2C  5185               	movf	___flmul@temp& (0+255),w,b
 44366  00CE2E  6F76               	movwf	??___flmul& (0+255),b
 44367  00CE30  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44368  00CE32  6F77               	movwf	(??___flmul+1)& (0+255),b
 44369  00CE34  6B78               	clrf	(??___flmul+2)& (0+255),b
 44370  00CE36  6B79               	clrf	(??___flmul+3)& (0+255),b
 44371  00CE38  C078  F079         	movff	??___flmul+2,??___flmul+3
 44372  00CE3C  C077  F078         	movff	??___flmul+1,??___flmul+2
 44373  00CE40  C076  F077         	movff	??___flmul,??___flmul+1
 44374  00CE44  6B76               	clrf	??___flmul& (0+255),b
 44375  00CE46  5176               	movf	??___flmul& (0+255),w,b
 44376  00CE48  2781               	addwf	___flmul@prod& (0+255),f,b
 44377  00CE4A  5177               	movf	(??___flmul+1)& (0+255),w,b
 44378  00CE4C  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44379  00CE4E  5178               	movf	(??___flmul+2)& (0+255),w,b
 44380  00CE50  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44381  00CE52  5179               	movf	(??___flmul+3)& (0+255),w,b
 44382  00CE54  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44383                           
 44384                           ; BSR set to: 0
 44385  00CE56  C07B  F076         	movff	___flmul@grs,??___flmul
 44386  00CE5A  C07C  F077         	movff	___flmul@grs+1,??___flmul+1
 44387  00CE5E  C07D  F078         	movff	___flmul@grs+2,??___flmul+2
 44388  00CE62  C07E  F079         	movff	___flmul@grs+3,??___flmul+3
 44389  00CE66  0E19               	movlw	25
 44390  00CE68  D005               	goto	u10330
 44391  00CE6A                     u10335:
 44392  00CE6A  90D8               	bcf	status,0,c
 44393  00CE6C  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 44394  00CE6E  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 44395  00CE70  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 44396  00CE72  3376               	rrcf	??___flmul& (0+255),f,b
 44397  00CE74                     u10330:
 44398  00CE74  2EE8               	decfsz	wreg,f,c
 44399  00CE76  D7F9               	goto	u10335
 44400  00CE78  5176               	movf	??___flmul& (0+255),w,b
 44401  00CE7A  2781               	addwf	___flmul@prod& (0+255),f,b
 44402  00CE7C  5177               	movf	(??___flmul+1)& (0+255),w,b
 44403  00CE7E  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44404  00CE80  5178               	movf	(??___flmul+2)& (0+255),w,b
 44405  00CE82  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44406  00CE84  5179               	movf	(??___flmul+3)& (0+255),w,b
 44407  00CE86  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44408                           
 44409                           ; BSR set to: 0
 44410  00CE88  C07D  F07E         	movff	___flmul@grs+2,___flmul@grs+3
 44411  00CE8C  C07C  F07D         	movff	___flmul@grs+1,___flmul@grs+2
 44412  00CE90  C07B  F07C         	movff	___flmul@grs,___flmul@grs+1
 44413  00CE94  6B7B               	clrf	___flmul@grs& (0+255),b
 44414                           
 44415                           ; BSR set to: 0
 44416  00CE96  517F               	movf	___flmul@aexp& (0+255),w,b
 44417  00CE98  C080  F076         	movff	___flmul@bexp,??___flmul
 44418  00CE9C  6B77               	clrf	(??___flmul+1)& (0+255),b
 44419  00CE9E  2776               	addwf	??___flmul& (0+255),f,b
 44420  00CEA0  0E00               	movlw	0
 44421  00CEA2  2377               	addwfc	(??___flmul+1)& (0+255),f,b
 44422  00CEA4  0E82               	movlw	130
 44423  00CEA6  2576               	addwf	??___flmul& (0+255),w,b
 44424  00CEA8  6F85               	movwf	___flmul@temp& (0+255),b
 44425  00CEAA  0EFF               	movlw	255
 44426  00CEAC  2177               	addwfc	(??___flmul+1)& (0+255),w,b
 44427  00CEAE  6F86               	movwf	(___flmul@temp+1)& (0+255),b
 44428  00CEB0  D00F               	goto	l3592
 44429  00CEB2                     
 44430                           ; BSR set to: 0
 44431                           
 44432                           ; BSR set to: 0
 44433  00CEB2  90D8               	bcf	status,0,c
 44434  00CEB4  3781               	rlcf	___flmul@prod& (0+255),f,b
 44435  00CEB6  3782               	rlcf	(___flmul@prod+1)& (0+255),f,b
 44436  00CEB8  3783               	rlcf	(___flmul@prod+2)& (0+255),f,b
 44437  00CEBA  3784               	rlcf	(___flmul@prod+3)& (0+255),f,b
 44438                           
 44439                           ; BSR set to: 0
 44440  00CEBC  BF7E               	btfsc	(___flmul@grs+3)& (0+255),7,b
 44441                           
 44442                           ; BSR set to: 0
 44443  00CEBE  8181               	bsf	___flmul@prod& (0+255),0,b
 44444                           
 44445                           ; BSR set to: 0
 44446  00CEC0  90D8               	bcf	status,0,c
 44447  00CEC2  377B               	rlcf	___flmul@grs& (0+255),f,b
 44448  00CEC4  377C               	rlcf	(___flmul@grs+1)& (0+255),f,b
 44449  00CEC6  377D               	rlcf	(___flmul@grs+2)& (0+255),f,b
 44450  00CEC8  377E               	rlcf	(___flmul@grs+3)& (0+255),f,b
 44451  00CECA  0785               	decf	___flmul@temp& (0+255),f,b
 44452  00CECC  A0D8               	btfss	status,0,c
 44453  00CECE  0786               	decf	(___flmul@temp+1)& (0+255),f,b
 44454  00CED0                     l3592:
 44455                           
 44456                           ; BSR set to: 0
 44457                           
 44458                           ; BSR set to: 0
 44459  00CED0  AF83               	btfss	(___flmul@prod+2)& (0+255),7,b
 44460  00CED2  D7EF               	goto	l3593
 44461                           
 44462                           ; BSR set to: 0
 44463                           
 44464                           ; BSR set to: 0
 44465  00CED4  0E00               	movlw	0
 44466  00CED6  6F7F               	movwf	___flmul@aexp& (0+255),b
 44467                           
 44468                           ; BSR set to: 0
 44469  00CED8  AF7E               	btfss	(___flmul@grs+3)& (0+255),7,b
 44470  00CEDA  D016               	goto	l3599
 44471                           
 44472                           ; BSR set to: 0
 44473  00CEDC  0EFF               	movlw	255
 44474  00CEDE  157B               	andwf	___flmul@grs& (0+255),w,b
 44475  00CEE0  6F76               	movwf	??___flmul& (0+255),b
 44476  00CEE2  0EFF               	movlw	255
 44477  00CEE4  157C               	andwf	(___flmul@grs+1)& (0+255),w,b
 44478  00CEE6  6F77               	movwf	(??___flmul+1)& (0+255),b
 44479  00CEE8  0EFF               	movlw	255
 44480  00CEEA  157D               	andwf	(___flmul@grs+2)& (0+255),w,b
 44481  00CEEC  6F78               	movwf	(??___flmul+2)& (0+255),b
 44482  00CEEE  0E7F               	movlw	127
 44483  00CEF0  157E               	andwf	(___flmul@grs+3)& (0+255),w,b
 44484  00CEF2  6F79               	movwf	(??___flmul+3)& (0+255),b
 44485  00CEF4  5176               	movf	??___flmul& (0+255),w,b
 44486  00CEF6  1177               	iorwf	(??___flmul+1)& (0+255),w,b
 44487  00CEF8  1178               	iorwf	(??___flmul+2)& (0+255),w,b
 44488  00CEFA  1179               	iorwf	(??___flmul+3)& (0+255),w,b
 44489  00CEFC  A4D8               	btfss	status,2,c
 44490  00CEFE  D002               	goto	u10380
 44491                           
 44492                           ; BSR set to: 0
 44493                           
 44494                           ; BSR set to: 0
 44495  00CF00  A181               	btfss	___flmul@prod& (0+255),0,b
 44496  00CF02  D002               	goto	l3599
 44497  00CF04                     u10380:
 44498                           
 44499                           ; BSR set to: 0
 44500  00CF04  0E01               	movlw	1
 44501  00CF06  6F7F               	movwf	___flmul@aexp& (0+255),b
 44502  00CF08                     l3599:
 44503                           
 44504                           ; BSR set to: 0
 44505                           
 44506                           ; BSR set to: 0
 44507                           
 44508                           ; BSR set to: 0
 44509  00CF08  517F               	movf	___flmul@aexp& (0+255),w,b
 44510  00CF0A  B4D8               	btfsc	status,2,c
 44511  00CF0C  D01F               	goto	l3601
 44512                           
 44513                           ; BSR set to: 0
 44514  00CF0E  0E01               	movlw	1
 44515  00CF10  2781               	addwf	___flmul@prod& (0+255),f,b
 44516  00CF12  0E00               	movlw	0
 44517  00CF14  2382               	addwfc	(___flmul@prod+1)& (0+255),f,b
 44518  00CF16  2383               	addwfc	(___flmul@prod+2)& (0+255),f,b
 44519  00CF18  2384               	addwfc	(___flmul@prod+3)& (0+255),f,b
 44520                           
 44521                           ; BSR set to: 0
 44522  00CF1A  A184               	btfss	(___flmul@prod+3)& (0+255),0,b
 44523  00CF1C  D017               	goto	l3601
 44524                           
 44525                           ; BSR set to: 0
 44526  00CF1E  C081  F076         	movff	___flmul@prod,??___flmul
 44527  00CF22  C082  F077         	movff	___flmul@prod+1,??___flmul+1
 44528  00CF26  C083  F078         	movff	___flmul@prod+2,??___flmul+2
 44529  00CF2A  C084  F079         	movff	___flmul@prod+3,??___flmul+3
 44530  00CF2E  3579               	rlcf	(??___flmul+3)& (0+255),w,b
 44531  00CF30  3379               	rrcf	(??___flmul+3)& (0+255),f,b
 44532  00CF32  3378               	rrcf	(??___flmul+2)& (0+255),f,b
 44533  00CF34  3377               	rrcf	(??___flmul+1)& (0+255),f,b
 44534  00CF36  3376               	rrcf	??___flmul& (0+255),f,b
 44535  00CF38  C076  F081         	movff	??___flmul,___flmul@prod
 44536  00CF3C  C077  F082         	movff	??___flmul+1,___flmul@prod+1
 44537  00CF40  C078  F083         	movff	??___flmul+2,___flmul@prod+2
 44538  00CF44  C079  F084         	movff	??___flmul+3,___flmul@prod+3
 44539                           
 44540                           ; BSR set to: 0
 44541  00CF48  4B85               	infsnz	___flmul@temp& (0+255),f,b
 44542  00CF4A  2B86               	incf	(___flmul@temp+1)& (0+255),f,b
 44543  00CF4C                     l3601:
 44544                           
 44545                           ; BSR set to: 0
 44546                           
 44547                           ; BSR set to: 0
 44548                           
 44549                           ; BSR set to: 0
 44550  00CF4C  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44551  00CF4E  D00D               	goto	l3602
 44552  00CF50  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44553  00CF52  E103               	bnz	u10410
 44554  00CF54  2985               	incf	___flmul@temp& (0+255),w,b
 44555  00CF56  A0D8               	btfss	status,0,c
 44556  00CF58  D008               	goto	l3602
 44557  00CF5A                     u10410:
 44558                           
 44559                           ; BSR set to: 0
 44560  00CF5A  0E00               	movlw	0
 44561  00CF5C  6F81               	movwf	___flmul@prod& (0+255),b
 44562  00CF5E  0E00               	movlw	0
 44563  00CF60  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44564  00CF62  0E80               	movlw	128
 44565  00CF64  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44566  00CF66  0E7F               	movlw	127
 44567  00CF68  D020               	goto	L67
 44568  00CF6A                     l3602:
 44569                           
 44570                           ; BSR set to: 0
 44571                           
 44572                           ; BSR set to: 0
 44573  00CF6A  BF86               	btfsc	(___flmul@temp+1)& (0+255),7,b
 44574  00CF6C  D005               	goto	u10420
 44575  00CF6E  5186               	movf	(___flmul@temp+1)& (0+255),w,b
 44576  00CF70  E10E               	bnz	l3604
 44577  00CF72  0585               	decf	___flmul@temp& (0+255),w,b
 44578  00CF74  B0D8               	btfsc	status,0,c
 44579  00CF76  D00B               	goto	l3604
 44580  00CF78                     u10420:
 44581                           
 44582                           ; BSR set to: 0
 44583  00CF78  0E00               	movlw	0
 44584  00CF7A  6F81               	movwf	___flmul@prod& (0+255),b
 44585  00CF7C  0E00               	movlw	0
 44586  00CF7E  6F82               	movwf	(___flmul@prod+1)& (0+255),b
 44587  00CF80  0E00               	movlw	0
 44588  00CF82  6F83               	movwf	(___flmul@prod+2)& (0+255),b
 44589  00CF84  0E00               	movlw	0
 44590  00CF86  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44591  00CF88  0E00               	movlw	0
 44592  00CF8A  6F7A               	movwf	___flmul@sign& (0+255),b
 44593  00CF8C  D00F               	goto	l3605
 44594  00CF8E                     l3604:
 44595                           
 44596                           ; BSR set to: 0
 44597  00CF8E  C085  F080         	movff	___flmul@temp,___flmul@bexp
 44598                           
 44599                           ; BSR set to: 0
 44600  00CF92  0EFF               	movlw	255
 44601  00CF94  1781               	andwf	___flmul@prod& (0+255),f,b
 44602  00CF96  0EFF               	movlw	255
 44603  00CF98  1782               	andwf	(___flmul@prod+1)& (0+255),f,b
 44604  00CF9A  0E7F               	movlw	127
 44605  00CF9C  1783               	andwf	(___flmul@prod+2)& (0+255),f,b
 44606  00CF9E  0E00               	movlw	0
 44607  00CFA0  1784               	andwf	(___flmul@prod+3)& (0+255),f,b
 44608                           
 44609                           ; BSR set to: 0
 44610  00CFA2  B180               	btfsc	___flmul@bexp& (0+255),0,b
 44611                           
 44612                           ; BSR set to: 0
 44613  00CFA4  8F83               	bsf	(___flmul@prod+2)& (0+255),7,b
 44614                           
 44615                           ; BSR set to: 0
 44616                           
 44617                           ; BSR set to: 0
 44618  00CFA6  90D8               	bcf	status,0,c
 44619  00CFA8  3180               	rrcf	___flmul@bexp& (0+255),w,b
 44620  00CFAA                     L67:
 44621  00CFAA  6F84               	movwf	(___flmul@prod+3)& (0+255),b
 44622  00CFAC                     l3605:
 44623                           
 44624                           ; BSR set to: 0
 44625                           
 44626                           ; BSR set to: 0
 44627                           
 44628                           ; BSR set to: 0
 44629  00CFAC  517A               	movf	___flmul@sign& (0+255),w,b
 44630  00CFAE  1384               	iorwf	(___flmul@prod+3)& (0+255),f,b
 44631                           
 44632                           ; BSR set to: 0
 44633  00CFB0  C081  F06E         	movff	___flmul@prod,?___flmul
 44634  00CFB4  C082  F06F         	movff	___flmul@prod+1,?___flmul+1
 44635  00CFB8  C083  F070         	movff	___flmul@prod+2,?___flmul+2
 44636  00CFBC  C084  F071         	movff	___flmul@prod+3,?___flmul+3
 44637  00CFC0  0012               	return	
 44638  00CFC2                     __end_of___flmul:
 44639                           	opt stack 0
 44640                           tosu	equ	0xFFF
 44641                           tosh	equ	0xFFE
 44642                           tosl	equ	0xFFD
 44643                           pclath	equ	0xFFA
 44644                           tblptru	equ	0xFF8
 44645                           tblptrh	equ	0xFF7
 44646                           tblptrl	equ	0xFF6
 44647                           tablat	equ	0xFF5
 44648                           prodh	equ	0xFF4
 44649                           prodl	equ	0xFF3
 44650                           intcon	equ	0xFF2
 44651                           indf0	equ	0xFEF
 44652                           postinc0	equ	0xFEE
 44653                           fsr0h	equ	0xFEA
 44654                           fsr0l	equ	0xFE9
 44655                           wreg	equ	0xFE8
 44656                           indf1	equ	0xFE7
 44657                           postinc1	equ	0xFE6
 44658                           postdec1	equ	0xFE5
 44659                           plusw1	equ	0xFE3
 44660                           fsr1h	equ	0xFE2
 44661                           fsr1l	equ	0xFE1
 44662                           indf2	equ	0xFDF
 44663                           postinc2	equ	0xFDE
 44664                           postdec2	equ	0xFDD
 44665                           plusw2	equ	0xFDB
 44666                           fsr2h	equ	0xFDA
 44667                           fsr2l	equ	0xFD9
 44668                           status	equ	0xFD8
 44669                           
 44670 ;; *************** function ___fldiv *****************
 44671 ;; Defined at:
 44672 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 44673 ;; Parameters:    Size  Location     Type
 44674 ;;  b               4   14[BANK0 ] unsigned char 
 44675 ;;  a               4   18[BANK0 ] unsigned char 
 44676 ;; Auto vars:     Size  Location     Type
 44677 ;;  grs             4   33[BANK0 ] unsigned long 
 44678 ;;  rem             4   26[BANK0 ] unsigned long 
 44679 ;;  new_exp         2   31[BANK0 ] int 
 44680 ;;  aexp            1   38[BANK0 ] unsigned char 
 44681 ;;  bexp            1   37[BANK0 ] unsigned char 
 44682 ;;  sign            1   30[BANK0 ] unsigned char 
 44683 ;; Return value:  Size  Location     Type
 44684 ;;                  4   14[BANK0 ] unsigned char 
 44685 ;; Registers used:
 44686 ;;		wreg, status,2, status,0
 44687 ;; Tracked objects:
 44688 ;;		On entry : 0/0
 44689 ;;		On exit  : 0/0
 44690 ;;		Unchanged: 0/0
 44691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44692 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44693 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44694 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44695 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44696 ;;Total ram usage:       25 bytes
 44697 ;; Hardware stack levels used:    1
 44698 ;; Hardware stack levels required when called:   10
 44699 ;; This function calls:
 44700 ;;		Nothing
 44701 ;; This function is called by:
 44702 ;;		_motor_steps_from_degrees
 44703 ;;		_motor_calculate_position_in_degrees
 44704 ;;		__motor_get_speed_in_degrees
 44705 ;;		__step_position_from_divide_position
 44706 ;;		_motor_divide_jump_to_nearest
 44707 ;;		_motor_arc_move
 44708 ;;		_motor_go_to_degrees_position
 44709 ;; This function uses a non-reentrant model
 44710 ;;
 44711                           
 44712                           	psect	text183
 44713  00DBF8                     __ptext183:
 44714                           	opt stack 0
 44715  00DBF8                     ___fldiv:
 44716                           	opt stack 18
 44717                           
 44718                           ; BSR set to: 0
 44719                           ;incstack = 0
 44720  00DBF8  0100               	movlb	0	; () banked
 44721  00DBFA  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44722  00DBFC  0B80               	andlw	128
 44723  00DBFE  6F7E               	movwf	___fldiv@sign& (0+255),b
 44724  00DC00  5171               	movf	(___fldiv@b+3)& (0+255),w,b
 44725  00DC02  2571               	addwf	(___fldiv@b+3)& (0+255),w,b
 44726  00DC04  6F85               	movwf	___fldiv@bexp& (0+255),b
 44727                           
 44728                           ; BSR set to: 0
 44729  00DC06  BF70               	btfsc	(___fldiv@b+2)& (0+255),7,b
 44730                           
 44731                           ; BSR set to: 0
 44732  00DC08  8185               	bsf	___fldiv@bexp& (0+255),0,b
 44733                           
 44734                           ; BSR set to: 0
 44735                           
 44736                           ; BSR set to: 0
 44737  00DC0A  5185               	movf	___fldiv@bexp& (0+255),w,b
 44738  00DC0C  B4D8               	btfsc	status,2,c
 44739  00DC0E  D00D               	goto	l3547
 44740                           
 44741                           ; BSR set to: 0
 44742  00DC10  2985               	incf	___fldiv@bexp& (0+255),w,b
 44743  00DC12  A4D8               	btfss	status,2,c
 44744  00DC14  D008               	goto	l3548
 44745                           
 44746                           ; BSR set to: 0
 44747  00DC16  0E00               	movlw	0
 44748  00DC18  6F6E               	movwf	___fldiv@b& (0+255),b
 44749  00DC1A  0E00               	movlw	0
 44750  00DC1C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44751  00DC1E  0E00               	movlw	0
 44752  00DC20  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44753  00DC22  0E00               	movlw	0
 44754  00DC24  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44755  00DC26                     l3548:
 44756                           
 44757                           ; BSR set to: 0
 44758                           
 44759                           ; BSR set to: 0
 44760  00DC26  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 44761  00DC28  D006               	goto	L68
 44762  00DC2A                     l3547:
 44763                           
 44764                           ; BSR set to: 0
 44765                           
 44766                           ; BSR set to: 0
 44767  00DC2A  0E00               	movlw	0
 44768  00DC2C  6F6E               	movwf	___fldiv@b& (0+255),b
 44769  00DC2E  0E00               	movlw	0
 44770  00DC30  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44771  00DC32  0E00               	movlw	0
 44772  00DC34  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44773  00DC36                     L68:
 44774  00DC36  0E00               	movlw	0
 44775  00DC38  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44776                           
 44777                           ; BSR set to: 0
 44778                           
 44779                           ; BSR set to: 0
 44780  00DC3A  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44781  00DC3C  0B80               	andlw	128
 44782  00DC3E  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
 44783                           
 44784                           ; BSR set to: 0
 44785  00DC40  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 44786  00DC42  2575               	addwf	(___fldiv@a+3)& (0+255),w,b
 44787  00DC44  6F86               	movwf	___fldiv@aexp& (0+255),b
 44788                           
 44789                           ; BSR set to: 0
 44790  00DC46  BF74               	btfsc	(___fldiv@a+2)& (0+255),7,b
 44791                           
 44792                           ; BSR set to: 0
 44793  00DC48  8186               	bsf	___fldiv@aexp& (0+255),0,b
 44794                           
 44795                           ; BSR set to: 0
 44796                           
 44797                           ; BSR set to: 0
 44798  00DC4A  5186               	movf	___fldiv@aexp& (0+255),w,b
 44799  00DC4C  B4D8               	btfsc	status,2,c
 44800  00DC4E  D00D               	goto	l3551
 44801                           
 44802                           ; BSR set to: 0
 44803  00DC50  2986               	incf	___fldiv@aexp& (0+255),w,b
 44804  00DC52  A4D8               	btfss	status,2,c
 44805  00DC54  D008               	goto	l3552
 44806                           
 44807                           ; BSR set to: 0
 44808  00DC56  0E00               	movlw	0
 44809  00DC58  6F72               	movwf	___fldiv@a& (0+255),b
 44810  00DC5A  0E00               	movlw	0
 44811  00DC5C  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44812  00DC5E  0E00               	movlw	0
 44813  00DC60  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44814  00DC62  0E00               	movlw	0
 44815  00DC64  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44816  00DC66                     l3552:
 44817                           
 44818                           ; BSR set to: 0
 44819                           
 44820                           ; BSR set to: 0
 44821  00DC66  8F74               	bsf	(___fldiv@a+2)& (0+255),7,b
 44822  00DC68  D006               	goto	L69
 44823  00DC6A                     l3551:
 44824                           
 44825                           ; BSR set to: 0
 44826                           
 44827                           ; BSR set to: 0
 44828  00DC6A  0E00               	movlw	0
 44829  00DC6C  6F72               	movwf	___fldiv@a& (0+255),b
 44830  00DC6E  0E00               	movlw	0
 44831  00DC70  6F73               	movwf	(___fldiv@a+1)& (0+255),b
 44832  00DC72  0E00               	movlw	0
 44833  00DC74  6F74               	movwf	(___fldiv@a+2)& (0+255),b
 44834  00DC76                     L69:
 44835  00DC76  0E00               	movlw	0
 44836  00DC78  6F75               	movwf	(___fldiv@a+3)& (0+255),b
 44837                           
 44838                           ; BSR set to: 0
 44839                           
 44840                           ; BSR set to: 0
 44841  00DC7A  5172               	movf	___fldiv@a& (0+255),w,b
 44842  00DC7C  1173               	iorwf	(___fldiv@a+1)& (0+255),w,b
 44843  00DC7E  1174               	iorwf	(___fldiv@a+2)& (0+255),w,b
 44844  00DC80  1175               	iorwf	(___fldiv@a+3)& (0+255),w,b
 44845  00DC82  A4D8               	btfss	status,2,c
 44846  00DC84  D017               	goto	l3554
 44847                           
 44848                           ; BSR set to: 0
 44849  00DC86  0E00               	movlw	0
 44850  00DC88  6F6E               	movwf	___fldiv@b& (0+255),b
 44851  00DC8A  0E00               	movlw	0
 44852  00DC8C  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44853  00DC8E  0E00               	movlw	0
 44854  00DC90  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44855  00DC92  0E00               	movlw	0
 44856  00DC94  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44857                           
 44858                           ; BSR set to: 0
 44859  00DC96  0E80               	movlw	128
 44860  00DC98  1370               	iorwf	(___fldiv@b+2)& (0+255),f,b
 44861  00DC9A  0E7F               	movlw	127
 44862  00DC9C  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44863                           
 44864                           ; BSR set to: 0
 44865  00DC9E  517E               	movf	___fldiv@sign& (0+255),w,b
 44866  00DCA0  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 44867                           
 44868                           ; BSR set to: 0
 44869  00DCA2  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44870  00DCA6  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44871  00DCAA  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44872  00DCAE  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44873                           
 44874                           ; BSR set to: 0
 44875  00DCB2  0012               	return	
 44876  00DCB4                     l3554:
 44877                           
 44878                           ; BSR set to: 0
 44879                           
 44880                           ; BSR set to: 0
 44881  00DCB4  5185               	movf	___fldiv@bexp& (0+255),w,b
 44882  00DCB6  A4D8               	btfss	status,2,c
 44883  00DCB8  D011               	goto	l3556
 44884                           
 44885                           ; BSR set to: 0
 44886  00DCBA  0E00               	movlw	0
 44887  00DCBC  6F6E               	movwf	___fldiv@b& (0+255),b
 44888  00DCBE  0E00               	movlw	0
 44889  00DCC0  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44890  00DCC2  0E00               	movlw	0
 44891  00DCC4  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44892  00DCC6  0E00               	movlw	0
 44893  00DCC8  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44894                           
 44895                           ; BSR set to: 0
 44896  00DCCA  C06E  F06E         	movff	___fldiv@b,?___fldiv
 44897  00DCCE  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 44898  00DCD2  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 44899  00DCD6  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 44900                           
 44901                           ; BSR set to: 0
 44902  00DCDA  0012               	return	
 44903  00DCDC                     l3556:
 44904                           
 44905                           ; BSR set to: 0
 44906                           
 44907                           ; BSR set to: 0
 44908  00DCDC  5186               	movf	___fldiv@aexp& (0+255),w,b
 44909  00DCDE  6F76               	movwf	??___fldiv& (0+255),b
 44910  00DCE0  6B77               	clrf	(??___fldiv+1)& (0+255),b
 44911  00DCE2  1F76               	comf	??___fldiv& (0+255),f,b
 44912  00DCE4  1F77               	comf	(??___fldiv+1)& (0+255),f,b
 44913  00DCE6  4B76               	infsnz	??___fldiv& (0+255),f,b
 44914  00DCE8  2B77               	incf	(??___fldiv+1)& (0+255),f,b
 44915  00DCEA  5185               	movf	___fldiv@bexp& (0+255),w,b
 44916  00DCEC  6F78               	movwf	(??___fldiv+2)& (0+255),b
 44917  00DCEE  6B79               	clrf	(??___fldiv+3)& (0+255),b
 44918  00DCF0  5176               	movf	??___fldiv& (0+255),w,b
 44919  00DCF2  2778               	addwf	(??___fldiv+2)& (0+255),f,b
 44920  00DCF4  5177               	movf	(??___fldiv+1)& (0+255),w,b
 44921  00DCF6  2379               	addwfc	(??___fldiv+3)& (0+255),f,b
 44922  00DCF8  0E7F               	movlw	127
 44923  00DCFA  2578               	addwf	(??___fldiv+2)& (0+255),w,b
 44924  00DCFC  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 44925  00DCFE  0E00               	movlw	0
 44926  00DD00  2179               	addwfc	(??___fldiv+3)& (0+255),w,b
 44927  00DD02  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 44928                           
 44929                           ; BSR set to: 0
 44930  00DD04  C06E  F07A         	movff	___fldiv@b,___fldiv@rem
 44931  00DD08  C06F  F07B         	movff	___fldiv@b+1,___fldiv@rem+1
 44932  00DD0C  C070  F07C         	movff	___fldiv@b+2,___fldiv@rem+2
 44933  00DD10  C071  F07D         	movff	___fldiv@b+3,___fldiv@rem+3
 44934                           
 44935                           ; BSR set to: 0
 44936  00DD14  0E00               	movlw	0
 44937  00DD16  6F6E               	movwf	___fldiv@b& (0+255),b
 44938  00DD18  0E00               	movlw	0
 44939  00DD1A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 44940  00DD1C  0E00               	movlw	0
 44941  00DD1E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 44942  00DD20  0E00               	movlw	0
 44943  00DD22  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 44944                           
 44945                           ; BSR set to: 0
 44946  00DD24  0E00               	movlw	0
 44947  00DD26  6F81               	movwf	___fldiv@grs& (0+255),b
 44948  00DD28  0E00               	movlw	0
 44949  00DD2A  6F82               	movwf	(___fldiv@grs+1)& (0+255),b
 44950  00DD2C  0E00               	movlw	0
 44951  00DD2E  6F83               	movwf	(___fldiv@grs+2)& (0+255),b
 44952  00DD30  0E00               	movlw	0
 44953  00DD32  6F84               	movwf	(___fldiv@grs+3)& (0+255),b
 44954                           
 44955                           ; BSR set to: 0
 44956  00DD34  0E00               	movlw	0
 44957  00DD36  6F86               	movwf	___fldiv@aexp& (0+255),b
 44958  00DD38  D028               	goto	l3557
 44959  00DD3A                     
 44960                           ; BSR set to: 0
 44961                           
 44962                           ; BSR set to: 0
 44963  00DD3A  5186               	movf	___fldiv@aexp& (0+255),w,b
 44964  00DD3C  B4D8               	btfsc	status,2,c
 44965  00DD3E  D011               	goto	l3559
 44966                           
 44967                           ; BSR set to: 0
 44968  00DD40  90D8               	bcf	status,0,c
 44969  00DD42  377A               	rlcf	___fldiv@rem& (0+255),f,b
 44970  00DD44  377B               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 44971  00DD46  377C               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 44972  00DD48  377D               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 44973  00DD4A  90D8               	bcf	status,0,c
 44974  00DD4C  376E               	rlcf	___fldiv@b& (0+255),f,b
 44975  00DD4E  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 44976  00DD50  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 44977  00DD52  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 44978                           
 44979                           ; BSR set to: 0
 44980  00DD54  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 44981                           
 44982                           ; BSR set to: 0
 44983  00DD56  816E               	bsf	___fldiv@b& (0+255),0,b
 44984                           
 44985                           ; BSR set to: 0
 44986  00DD58  90D8               	bcf	status,0,c
 44987  00DD5A  3781               	rlcf	___fldiv@grs& (0+255),f,b
 44988  00DD5C  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 44989  00DD5E  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 44990  00DD60  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 44991  00DD62                     l3559:
 44992                           
 44993                           ; BSR set to: 0
 44994                           
 44995                           ; BSR set to: 0
 44996  00DD62  5172               	movf	___fldiv@a& (0+255),w,b
 44997  00DD64  5D7A               	subwf	___fldiv@rem& (0+255),w,b
 44998  00DD66  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 44999  00DD68  597B               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 45000  00DD6A  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 45001  00DD6C  597C               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 45002  00DD6E  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 45003  00DD70  597D               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 45004  00DD72  A0D8               	btfss	status,0,c
 45005  00DD74  D009               	goto	l3561
 45006                           
 45007                           ; BSR set to: 0
 45008  00DD76  8D84               	bsf	(___fldiv@grs+3)& (0+255),6,b
 45009                           
 45010                           ; BSR set to: 0
 45011  00DD78  5172               	movf	___fldiv@a& (0+255),w,b
 45012  00DD7A  5F7A               	subwf	___fldiv@rem& (0+255),f,b
 45013  00DD7C  5173               	movf	(___fldiv@a+1)& (0+255),w,b
 45014  00DD7E  5B7B               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 45015  00DD80  5174               	movf	(___fldiv@a+2)& (0+255),w,b
 45016  00DD82  5B7C               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 45017  00DD84  5175               	movf	(___fldiv@a+3)& (0+255),w,b
 45018  00DD86  5B7D               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 45019  00DD88                     l3561:
 45020                           
 45021                           ; BSR set to: 0
 45022                           
 45023                           ; BSR set to: 0
 45024  00DD88  2B86               	incf	___fldiv@aexp& (0+255),f,b
 45025  00DD8A                     l3557:
 45026                           
 45027                           ; BSR set to: 0
 45028  00DD8A  0E19               	movlw	25
 45029  00DD8C  6586               	cpfsgt	___fldiv@aexp& (0+255),b
 45030  00DD8E  D7D5               	goto	l3558
 45031                           
 45032                           ; BSR set to: 0
 45033                           
 45034                           ; BSR set to: 0
 45035  00DD90  517A               	movf	___fldiv@rem& (0+255),w,b
 45036  00DD92  117B               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 45037  00DD94  117C               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 45038  00DD96  117D               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 45039  00DD98  B4D8               	btfsc	status,2,c
 45040  00DD9A  D011               	goto	l3564
 45041                           
 45042                           ; BSR set to: 0
 45043  00DD9C  8181               	bsf	___fldiv@grs& (0+255),0,b
 45044                           
 45045                           ; BSR set to: 0
 45046  00DD9E  D00F               	goto	l3564
 45047  00DDA0                     
 45048                           ; BSR set to: 0
 45049                           
 45050                           ; BSR set to: 0
 45051  00DDA0  90D8               	bcf	status,0,c
 45052  00DDA2  376E               	rlcf	___fldiv@b& (0+255),f,b
 45053  00DDA4  376F               	rlcf	(___fldiv@b+1)& (0+255),f,b
 45054  00DDA6  3770               	rlcf	(___fldiv@b+2)& (0+255),f,b
 45055  00DDA8  3771               	rlcf	(___fldiv@b+3)& (0+255),f,b
 45056                           
 45057                           ; BSR set to: 0
 45058  00DDAA  BF84               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 45059                           
 45060                           ; BSR set to: 0
 45061  00DDAC  816E               	bsf	___fldiv@b& (0+255),0,b
 45062                           
 45063                           ; BSR set to: 0
 45064  00DDAE  90D8               	bcf	status,0,c
 45065  00DDB0  3781               	rlcf	___fldiv@grs& (0+255),f,b
 45066  00DDB2  3782               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 45067  00DDB4  3783               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 45068  00DDB6  3784               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 45069  00DDB8  077F               	decf	___fldiv@new_exp& (0+255),f,b
 45070  00DDBA  A0D8               	btfss	status,0,c
 45071  00DDBC  0780               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 45072  00DDBE                     l3564:
 45073                           
 45074                           ; BSR set to: 0
 45075                           
 45076                           ; BSR set to: 0
 45077  00DDBE  AF70               	btfss	(___fldiv@b+2)& (0+255),7,b
 45078  00DDC0  D7EF               	goto	l3565
 45079                           
 45080                           ; BSR set to: 0
 45081                           
 45082                           ; BSR set to: 0
 45083  00DDC2  0E00               	movlw	0
 45084  00DDC4  6F86               	movwf	___fldiv@aexp& (0+255),b
 45085                           
 45086                           ; BSR set to: 0
 45087  00DDC6  AF84               	btfss	(___fldiv@grs+3)& (0+255),7,b
 45088  00DDC8  D016               	goto	l3571
 45089                           
 45090                           ; BSR set to: 0
 45091  00DDCA  0EFF               	movlw	255
 45092  00DDCC  1581               	andwf	___fldiv@grs& (0+255),w,b
 45093  00DDCE  6F76               	movwf	??___fldiv& (0+255),b
 45094  00DDD0  0EFF               	movlw	255
 45095  00DDD2  1582               	andwf	(___fldiv@grs+1)& (0+255),w,b
 45096  00DDD4  6F77               	movwf	(??___fldiv+1)& (0+255),b
 45097  00DDD6  0EFF               	movlw	255
 45098  00DDD8  1583               	andwf	(___fldiv@grs+2)& (0+255),w,b
 45099  00DDDA  6F78               	movwf	(??___fldiv+2)& (0+255),b
 45100  00DDDC  0E7F               	movlw	127
 45101  00DDDE  1584               	andwf	(___fldiv@grs+3)& (0+255),w,b
 45102  00DDE0  6F79               	movwf	(??___fldiv+3)& (0+255),b
 45103  00DDE2  5176               	movf	??___fldiv& (0+255),w,b
 45104  00DDE4  1177               	iorwf	(??___fldiv+1)& (0+255),w,b
 45105  00DDE6  1178               	iorwf	(??___fldiv+2)& (0+255),w,b
 45106  00DDE8  1179               	iorwf	(??___fldiv+3)& (0+255),w,b
 45107  00DDEA  A4D8               	btfss	status,2,c
 45108  00DDEC  D002               	goto	u10190
 45109                           
 45110                           ; BSR set to: 0
 45111                           
 45112                           ; BSR set to: 0
 45113  00DDEE  A16E               	btfss	___fldiv@b& (0+255),0,b
 45114  00DDF0  D002               	goto	l3571
 45115  00DDF2                     u10190:
 45116                           
 45117                           ; BSR set to: 0
 45118  00DDF2  0E01               	movlw	1
 45119  00DDF4  6F86               	movwf	___fldiv@aexp& (0+255),b
 45120  00DDF6                     l3571:
 45121                           
 45122                           ; BSR set to: 0
 45123                           
 45124                           ; BSR set to: 0
 45125                           
 45126                           ; BSR set to: 0
 45127  00DDF6  5186               	movf	___fldiv@aexp& (0+255),w,b
 45128  00DDF8  B4D8               	btfsc	status,2,c
 45129  00DDFA  D01F               	goto	l3573
 45130                           
 45131                           ; BSR set to: 0
 45132  00DDFC  0E01               	movlw	1
 45133  00DDFE  276E               	addwf	___fldiv@b& (0+255),f,b
 45134  00DE00  0E00               	movlw	0
 45135  00DE02  236F               	addwfc	(___fldiv@b+1)& (0+255),f,b
 45136  00DE04  2370               	addwfc	(___fldiv@b+2)& (0+255),f,b
 45137  00DE06  2371               	addwfc	(___fldiv@b+3)& (0+255),f,b
 45138                           
 45139                           ; BSR set to: 0
 45140  00DE08  A171               	btfss	(___fldiv@b+3)& (0+255),0,b
 45141  00DE0A  D017               	goto	l3573
 45142                           
 45143                           ; BSR set to: 0
 45144  00DE0C  C06E  F076         	movff	___fldiv@b,??___fldiv
 45145  00DE10  C06F  F077         	movff	___fldiv@b+1,??___fldiv+1
 45146  00DE14  C070  F078         	movff	___fldiv@b+2,??___fldiv+2
 45147  00DE18  C071  F079         	movff	___fldiv@b+3,??___fldiv+3
 45148  00DE1C  3579               	rlcf	(??___fldiv+3)& (0+255),w,b
 45149  00DE1E  3379               	rrcf	(??___fldiv+3)& (0+255),f,b
 45150  00DE20  3378               	rrcf	(??___fldiv+2)& (0+255),f,b
 45151  00DE22  3377               	rrcf	(??___fldiv+1)& (0+255),f,b
 45152  00DE24  3376               	rrcf	??___fldiv& (0+255),f,b
 45153  00DE26  C076  F06E         	movff	??___fldiv,___fldiv@b
 45154  00DE2A  C077  F06F         	movff	??___fldiv+1,___fldiv@b+1
 45155  00DE2E  C078  F070         	movff	??___fldiv+2,___fldiv@b+2
 45156  00DE32  C079  F071         	movff	??___fldiv+3,___fldiv@b+3
 45157                           
 45158                           ; BSR set to: 0
 45159  00DE36  4B7F               	infsnz	___fldiv@new_exp& (0+255),f,b
 45160  00DE38  2B80               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 45161  00DE3A                     l3573:
 45162                           
 45163                           ; BSR set to: 0
 45164                           
 45165                           ; BSR set to: 0
 45166                           
 45167                           ; BSR set to: 0
 45168  00DE3A  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 45169  00DE3C  D010               	goto	l3574
 45170  00DE3E  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 45171  00DE40  E103               	bnz	u10220
 45172  00DE42  297F               	incf	___fldiv@new_exp& (0+255),w,b
 45173  00DE44  A0D8               	btfss	status,0,c
 45174  00DE46  D00B               	goto	l3574
 45175  00DE48                     u10220:
 45176                           
 45177                           ; BSR set to: 0
 45178  00DE48  0E00               	movlw	0
 45179  00DE4A  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 45180  00DE4C  697F               	setf	___fldiv@new_exp& (0+255),b
 45181  00DE4E  0E00               	movlw	0
 45182  00DE50  6F6E               	movwf	___fldiv@b& (0+255),b
 45183  00DE52  0E00               	movlw	0
 45184  00DE54  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 45185  00DE56  0E00               	movlw	0
 45186  00DE58  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 45187  00DE5A  0E00               	movlw	0
 45188  00DE5C  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45189  00DE5E                     l3574:
 45190                           
 45191                           ; BSR set to: 0
 45192                           
 45193                           ; BSR set to: 0
 45194  00DE5E  BF80               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 45195  00DE60  D005               	goto	u10230
 45196  00DE62  5180               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 45197  00DE64  E111               	bnz	l12171
 45198  00DE66  057F               	decf	___fldiv@new_exp& (0+255),w,b
 45199  00DE68  B0D8               	btfsc	status,0,c
 45200  00DE6A  D00E               	goto	l3575
 45201  00DE6C                     u10230:
 45202                           
 45203                           ; BSR set to: 0
 45204  00DE6C  0E00               	movlw	0
 45205  00DE6E  6F80               	movwf	(___fldiv@new_exp+1)& (0+255),b
 45206  00DE70  0E00               	movlw	0
 45207  00DE72  6F7F               	movwf	___fldiv@new_exp& (0+255),b
 45208  00DE74  0E00               	movlw	0
 45209  00DE76  6F6E               	movwf	___fldiv@b& (0+255),b
 45210  00DE78  0E00               	movlw	0
 45211  00DE7A  6F6F               	movwf	(___fldiv@b+1)& (0+255),b
 45212  00DE7C  0E00               	movlw	0
 45213  00DE7E  6F70               	movwf	(___fldiv@b+2)& (0+255),b
 45214  00DE80  0E00               	movlw	0
 45215  00DE82  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45216  00DE84  0E00               	movlw	0
 45217  00DE86  6F7E               	movwf	___fldiv@sign& (0+255),b
 45218  00DE88                     l3575:
 45219  00DE88                     l12171:
 45220                           
 45221                           ; BSR set to: 0
 45222  00DE88  C07F  F085         	movff	___fldiv@new_exp,___fldiv@bexp
 45223                           
 45224                           ; BSR set to: 0
 45225  00DE8C  A185               	btfss	___fldiv@bexp& (0+255),0,b
 45226  00DE8E  D002               	goto	l3576
 45227                           
 45228                           ; BSR set to: 0
 45229  00DE90  8F70               	bsf	(___fldiv@b+2)& (0+255),7,b
 45230  00DE92  D001               	goto	l3577
 45231  00DE94                     l3576:
 45232                           
 45233                           ; BSR set to: 0
 45234                           
 45235                           ; BSR set to: 0
 45236  00DE94  9F70               	bcf	(___fldiv@b+2)& (0+255),7,b
 45237  00DE96                     l3577:
 45238                           
 45239                           ; BSR set to: 0
 45240                           
 45241                           ; BSR set to: 0
 45242  00DE96  90D8               	bcf	status,0,c
 45243  00DE98  3185               	rrcf	___fldiv@bexp& (0+255),w,b
 45244  00DE9A  6F71               	movwf	(___fldiv@b+3)& (0+255),b
 45245                           
 45246                           ; BSR set to: 0
 45247  00DE9C  517E               	movf	___fldiv@sign& (0+255),w,b
 45248  00DE9E  1371               	iorwf	(___fldiv@b+3)& (0+255),f,b
 45249                           
 45250                           ; BSR set to: 0
 45251  00DEA0  C06E  F06E         	movff	___fldiv@b,?___fldiv
 45252  00DEA4  C06F  F06F         	movff	___fldiv@b+1,?___fldiv+1
 45253  00DEA8  C070  F070         	movff	___fldiv@b+2,?___fldiv+2
 45254  00DEAC  C071  F071         	movff	___fldiv@b+3,?___fldiv+3
 45255  00DEB0  0012               	return	
 45256  00DEB2                     __end_of___fldiv:
 45257                           	opt stack 0
 45258                           tosu	equ	0xFFF
 45259                           tosh	equ	0xFFE
 45260                           tosl	equ	0xFFD
 45261                           pclath	equ	0xFFA
 45262                           tblptru	equ	0xFF8
 45263                           tblptrh	equ	0xFF7
 45264                           tblptrl	equ	0xFF6
 45265                           tablat	equ	0xFF5
 45266                           prodh	equ	0xFF4
 45267                           prodl	equ	0xFF3
 45268                           intcon	equ	0xFF2
 45269                           indf0	equ	0xFEF
 45270                           postinc0	equ	0xFEE
 45271                           fsr0h	equ	0xFEA
 45272                           fsr0l	equ	0xFE9
 45273                           wreg	equ	0xFE8
 45274                           indf1	equ	0xFE7
 45275                           postinc1	equ	0xFE6
 45276                           postdec1	equ	0xFE5
 45277                           plusw1	equ	0xFE3
 45278                           fsr1h	equ	0xFE2
 45279                           fsr1l	equ	0xFE1
 45280                           indf2	equ	0xFDF
 45281                           postinc2	equ	0xFDE
 45282                           postdec2	equ	0xFDD
 45283                           plusw2	equ	0xFDB
 45284                           fsr2h	equ	0xFDA
 45285                           fsr2l	equ	0xFD9
 45286                           status	equ	0xFD8
 45287                           
 45288 ;; *************** function _USBTransferOnePacket *****************
 45289 ;; Defined at:
 45290 ;;		line 995 in file "usb_device.c"
 45291 ;; Parameters:    Size  Location     Type
 45292 ;;  ep              1    wreg     unsigned char 
 45293 ;;  dir             1    0[BANK0 ] unsigned char 
 45294 ;;  data            2    1[BANK0 ] PTR unsigned char 
 45295 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 45296 ;;		 -> msd_cbw(31), NULL(0), 
 45297 ;;  len             1    3[BANK0 ] unsigned char 
 45298 ;; Auto vars:     Size  Location     Type
 45299 ;;  ep              1    8[BANK0 ] unsigned char 
 45300 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 45301 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 45302 ;; Return value:  Size  Location     Type
 45303 ;;                  2    0[BANK0 ] PTR void 
 45304 ;; Registers used:
 45305 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 45306 ;; Tracked objects:
 45307 ;;		On entry : 0/0
 45308 ;;		On exit  : 0/0
 45309 ;;		Unchanged: 0/0
 45310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45311 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45312 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45313 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45314 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45315 ;;Total ram usage:       11 bytes
 45316 ;; Hardware stack levels used:    1
 45317 ;; Hardware stack levels required when called:   10
 45318 ;; This function calls:
 45319 ;;		Nothing
 45320 ;; This function is called by:
 45321 ;;		_MSDTasks
 45322 ;;		_MSDProcessCommandMediaPresent
 45323 ;;		_MSDReadHandler
 45324 ;;		_MSDWriteHandler
 45325 ;;		_APP_DeviceCustomHIDTasks
 45326 ;; This function uses a non-reentrant model
 45327 ;;
 45328                           
 45329                           	psect	text184
 45330  01106A                     __ptext184:
 45331                           	opt stack 0
 45332  01106A                     _USBTransferOnePacket:
 45333                           	opt stack 18
 45334                           
 45335                           ; BSR set to: 0
 45336                           ;incstack = 0
 45337                           ;USBTransferOnePacket@ep stored from wreg
 45338  01106A  0100               	movlb	0	; () banked
 45339  01106C  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 45340                           
 45341                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 45342  01106E  0100               	movlb	0	; () banked
 45343  011070  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 45344  011072  B4D8               	btfsc	status,2,c
 45345  011074  D007               	goto	l184
 45346                           
 45347                           ; BSR set to: 0
 45348                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 45349  011076  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45350  011078  0D02               	mullw	2
 45351  01107A  0E1B               	movlw	low _pBDTEntryIn
 45352  01107C  24F3               	addwf	prodl,w,c
 45353  01107E  6ED9               	movwf	fsr2l,c
 45354  011080  0E01               	movlw	high _pBDTEntryIn
 45355  011082  D006               	goto	L70
 45356  011084                     l184:
 45357                           
 45358                           ; BSR set to: 0
 45359                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 45360                           
 45361                           ; BSR set to: 0
 45362  011084  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45363  011086  0D02               	mullw	2
 45364  011088  0E21               	movlw	low _pBDTEntryOut
 45365  01108A  24F3               	addwf	prodl,w,c
 45366  01108C  6ED9               	movwf	fsr2l,c
 45367  01108E  0E01               	movlw	high _pBDTEntryOut
 45368  011090                     L70:
 45369  011090  20F4               	addwfc	prodh,w,c
 45370  011092  6EDA               	movwf	fsr2h,c
 45371  011094  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 45372  011098  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 45373                           
 45374                           ; BSR set to: 0
 45375                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 45376                           
 45377                           ; BSR set to: 0
 45378  01109C  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45379  01109E  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45380  0110A0  A4D8               	btfss	status,2,c
 45381  0110A2  D005               	goto	l186
 45382                           
 45383                           ; BSR set to: 0
 45384                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 45385  0110A4  0E00               	movlw	0
 45386  0110A6  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 45387  0110A8  0E00               	movlw	0
 45388  0110AA  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 45389                           
 45390                           ; BSR set to: 0
 45391  0110AC  0012               	return	
 45392  0110AE                     l186:
 45393                           
 45394                           ; BSR set to: 0
 45395                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 45396                           
 45397                           ; BSR set to: 0
 45398  0110AE  EE20 F002          	lfsr	2,2
 45399  0110B2  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45400  0110B4  26D9               	addwf	fsr2l,f,c
 45401  0110B6  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45402  0110B8  22DA               	addwfc	fsr2h,f,c
 45403  0110BA  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 45404  0110BE  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 45405                           
 45406                           ;usb_device.c: 1030: handle->CNT = len;
 45407  0110C2  EE20 F001          	lfsr	2,1
 45408  0110C6  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 45409  0110C8  26D9               	addwf	fsr2l,f,c
 45410  0110CA  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 45411  0110CC  22DA               	addwfc	fsr2h,f,c
 45412  0110CE  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 45413                           
 45414                           ; BSR set to: 0
 45415                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 45416  0110D2  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45417  0110D6  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45418  0110DA  0E40               	movlw	64
 45419  0110DC  16DF               	andwf	indf2,f,c
 45420                           
 45421                           ; BSR set to: 0
 45422                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 45423  0110DE  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45424  0110E2  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45425  0110E6  0E00               	movlw	0
 45426  0110E8  86DB               	bsf	plusw2,3,c
 45427                           
 45428                           ; BSR set to: 0
 45429                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 45430  0110EA  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 45431  0110EE  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 45432  0110F2  0E00               	movlw	0
 45433  0110F4  8EDB               	bsf	plusw2,7,c
 45434                           
 45435                           ; BSR set to: 0
 45436                           ;usb_device.c: 1036: if(dir != 0)
 45437  0110F6  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 45438  0110F8  B4D8               	btfsc	status,2,c
 45439  0110FA  D018               	goto	l188
 45440                           
 45441                           ; BSR set to: 0
 45442                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 45443  0110FC  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45444  0110FE  0D02               	mullw	2
 45445  011100  0E1B               	movlw	low _pBDTEntryIn
 45446  011102  24F3               	addwf	prodl,w,c
 45447  011104  6ED9               	movwf	fsr2l,c
 45448  011106  0E01               	movlw	high _pBDTEntryIn
 45449  011108  20F4               	addwfc	prodh,w,c
 45450  01110A  6EDA               	movwf	fsr2h,c
 45451  01110C  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 45452  011110  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 45453  011114  0E04               	movlw	4
 45454  011116  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 45455  011118  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 45456  01111A  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 45457  01111C  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 45458  01111E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45459  011120  0D02               	mullw	2
 45460  011122  0E1B               	movlw	low _pBDTEntryIn
 45461  011124  24F3               	addwf	prodl,w,c
 45462  011126  6ED9               	movwf	fsr2l,c
 45463  011128  0E01               	movlw	high _pBDTEntryIn
 45464  01112A  D017               	goto	L71
 45465  01112C                     l188:
 45466                           
 45467                           ; BSR set to: 0
 45468                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 45469                           
 45470                           ; BSR set to: 0
 45471  01112C  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45472  01112E  0D02               	mullw	2
 45473  011130  0E21               	movlw	low _pBDTEntryOut
 45474  011132  24F3               	addwf	prodl,w,c
 45475  011134  6ED9               	movwf	fsr2l,c
 45476  011136  0E01               	movlw	high _pBDTEntryOut
 45477  011138  20F4               	addwfc	prodh,w,c
 45478  01113A  6EDA               	movwf	fsr2h,c
 45479  01113C  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 45480  011140  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 45481  011144  0E04               	movlw	4
 45482  011146  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 45483  011148  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 45484  01114A  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 45485  01114C  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 45486  01114E  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 45487  011150  0D02               	mullw	2
 45488  011152  0E21               	movlw	low _pBDTEntryOut
 45489  011154  24F3               	addwf	prodl,w,c
 45490  011156  6ED9               	movwf	fsr2l,c
 45491  011158  0E01               	movlw	high _pBDTEntryOut
 45492  01115A                     L71:
 45493  01115A  20F4               	addwfc	prodh,w,c
 45494  01115C  6EDA               	movwf	fsr2h,c
 45495  01115E  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 45496  011162  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 45497                           
 45498                           ; BSR set to: 0
 45499                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 45500                           
 45501                           ; BSR set to: 0
 45502  011166  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 45503  01116A  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 45504  01116E  0012               	return	
 45505  011170                     __end_of_USBTransferOnePacket:
 45506                           	opt stack 0
 45507                           tosu	equ	0xFFF
 45508                           tosh	equ	0xFFE
 45509                           tosl	equ	0xFFD
 45510                           pclath	equ	0xFFA
 45511                           tblptru	equ	0xFF8
 45512                           tblptrh	equ	0xFF7
 45513                           tblptrl	equ	0xFF6
 45514                           tablat	equ	0xFF5
 45515                           prodh	equ	0xFF4
 45516                           prodl	equ	0xFF3
 45517                           intcon	equ	0xFF2
 45518                           indf0	equ	0xFEF
 45519                           postinc0	equ	0xFEE
 45520                           fsr0h	equ	0xFEA
 45521                           fsr0l	equ	0xFE9
 45522                           wreg	equ	0xFE8
 45523                           indf1	equ	0xFE7
 45524                           postinc1	equ	0xFE6
 45525                           postdec1	equ	0xFE5
 45526                           plusw1	equ	0xFE3
 45527                           fsr1h	equ	0xFE2
 45528                           fsr1l	equ	0xFE1
 45529                           indf2	equ	0xFDF
 45530                           postinc2	equ	0xFDE
 45531                           postdec2	equ	0xFDD
 45532                           plusw2	equ	0xFDB
 45533                           fsr2h	equ	0xFDA
 45534                           fsr2l	equ	0xFD9
 45535                           status	equ	0xFD8
 45536                           
 45537 ;; *************** function _SYS_InterruptHigh *****************
 45538 ;; Defined at:
 45539 ;;		line 162 in file "system.c"
 45540 ;; Parameters:    Size  Location     Type
 45541 ;;		None
 45542 ;; Auto vars:     Size  Location     Type
 45543 ;;		None
 45544 ;; Return value:  Size  Location     Type
 45545 ;;                  1    wreg      void 
 45546 ;; Registers used:
 45547 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 45548 ;; Tracked objects:
 45549 ;;		On entry : 0/0
 45550 ;;		On exit  : 0/0
 45551 ;;		Unchanged: 0/0
 45552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45555 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45556 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45557 ;;Total ram usage:       14 bytes
 45558 ;; Hardware stack levels used:    1
 45559 ;; Hardware stack levels required when called:    9
 45560 ;; This function calls:
 45561 ;;		_USBDeviceTasks
 45562 ;;		_motor_isr
 45563 ;;		_tmr0_isr
 45564 ;; This function is called by:
 45565 ;;		Interrupt level 2
 45566 ;; This function uses a non-reentrant model
 45567 ;;
 45568                           
 45569                           	psect	intcode
 45570  009008                     __pintcode:
 45571                           	opt stack 0
 45572  009008                     _SYS_InterruptHigh:
 45573                           	opt stack 9
 45574                           
 45575                           ; BSR set to: 0
 45576                           ;incstack = 0
 45577  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 45578  00900A  CFFA F044          	movff	pclath,??_SYS_InterruptHigh
 45579  00900E  CFFB F045          	movff	pclatu,??_SYS_InterruptHigh+1
 45580  009012  CFE9 F046          	movff	fsr0l,??_SYS_InterruptHigh+2
 45581  009016  CFEA F047          	movff	fsr0h,??_SYS_InterruptHigh+3
 45582  00901A  CFE1 F048          	movff	fsr1l,??_SYS_InterruptHigh+4
 45583  00901E  CFE2 F049          	movff	fsr1h,??_SYS_InterruptHigh+5
 45584  009022  CFD9 F04A          	movff	fsr2l,??_SYS_InterruptHigh+6
 45585  009026  CFDA F04B          	movff	fsr2h,??_SYS_InterruptHigh+7
 45586  00902A  CFF3 F04C          	movff	prodl,??_SYS_InterruptHigh+8
 45587  00902E  CFF4 F04D          	movff	prodh,??_SYS_InterruptHigh+9
 45588  009032  CFF6 F04E          	movff	tblptrl,??_SYS_InterruptHigh+10
 45589  009036  CFF7 F04F          	movff	tblptrh,??_SYS_InterruptHigh+11
 45590  00903A  CFF8 F050          	movff	tblptru,??_SYS_InterruptHigh+12
 45591  00903E  CFF5 F051          	movff	tablat,??_SYS_InterruptHigh+13
 45592                           
 45593                           ;system.c: 165: USBDeviceTasks();
 45594  009042  EC1C  F080         	call	_USBDeviceTasks	;wreg free
 45595                           
 45596                           ;system.c: 169: if(PIR1bits.TMR2IF)
 45597  009046  B29E               	btfsc	3998,1,c	;volatile
 45598                           
 45599                           ;system.c: 170: {;system.c: 171: motor_isr();
 45600  009048  EC08  F05C         	call	_motor_isr	;wreg free
 45601                           
 45602                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 45603  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 45604                           
 45605                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 45606  00904E  EC17  F0A9         	call	_tmr0_isr	;wreg free
 45607  009052  C051  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 45608  009056  C050  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 45609  00905A  C04F  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 45610  00905E  C04E  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 45611  009062  C04D  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 45612  009066  C04C  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 45613  00906A  C04B  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 45614  00906E  C04A  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 45615  009072  C049  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 45616  009076  C048  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 45617  00907A  C047  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 45618  00907E  C046  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 45619  009082  C045  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 45620  009086  C044  FFFA         	movff	??_SYS_InterruptHigh,pclath
 45621  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 45622  00908C  0011               	retfie		f
 45623  00908E                     __end_of_SYS_InterruptHigh:
 45624                           	opt stack 0
 45625                           tosu	equ	0xFFF
 45626                           tosh	equ	0xFFE
 45627                           tosl	equ	0xFFD
 45628                           pclatu	equ	0xFFB
 45629                           pclath	equ	0xFFA
 45630                           tblptru	equ	0xFF8
 45631                           tblptrh	equ	0xFF7
 45632                           tblptrl	equ	0xFF6
 45633                           tablat	equ	0xFF5
 45634                           prodh	equ	0xFF4
 45635                           prodl	equ	0xFF3
 45636                           intcon	equ	0xFF2
 45637                           indf0	equ	0xFEF
 45638                           postinc0	equ	0xFEE
 45639                           fsr0h	equ	0xFEA
 45640                           fsr0l	equ	0xFE9
 45641                           wreg	equ	0xFE8
 45642                           indf1	equ	0xFE7
 45643                           postinc1	equ	0xFE6
 45644                           postdec1	equ	0xFE5
 45645                           plusw1	equ	0xFE3
 45646                           fsr1h	equ	0xFE2
 45647                           fsr1l	equ	0xFE1
 45648                           indf2	equ	0xFDF
 45649                           postinc2	equ	0xFDE
 45650                           postdec2	equ	0xFDD
 45651                           plusw2	equ	0xFDB
 45652                           fsr2h	equ	0xFDA
 45653                           fsr2l	equ	0xFD9
 45654                           status	equ	0xFD8
 45655                           
 45656 ;; *************** function _tmr0_isr *****************
 45657 ;; Defined at:
 45658 ;;		line 24 in file "os.c"
 45659 ;; Parameters:    Size  Location     Type
 45660 ;;		None
 45661 ;; Auto vars:     Size  Location     Type
 45662 ;;		None
 45663 ;; Return value:  Size  Location     Type
 45664 ;;                  1    wreg      void 
 45665 ;; Registers used:
 45666 ;;		wreg, status,2, status,0, cstack
 45667 ;; Tracked objects:
 45668 ;;		On entry : 0/0
 45669 ;;		On exit  : 0/0
 45670 ;;		Unchanged: 0/0
 45671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45673 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45675 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45676 ;;Total ram usage:        0 bytes
 45677 ;; Hardware stack levels used:    1
 45678 ;; Hardware stack levels required when called:    1
 45679 ;; This function calls:
 45680 ;;		_encoder_run
 45681 ;; This function is called by:
 45682 ;;		_SYS_InterruptHigh
 45683 ;; This function uses a non-reentrant model
 45684 ;;
 45685                           
 45686                           	psect	text186
 45687  01522E                     __ptext186:
 45688                           	opt stack 0
 45689  01522E                     _tmr0_isr:
 45690                           	opt stack 16
 45691                           
 45692                           ;os.c: 27: if(INTCONbits.T0IF)
 45693                           
 45694                           ;incstack = 0
 45695  01522E  A4F2               	btfss	intcon,2,c	;volatile
 45696  015230  0012               	return	
 45697                           
 45698                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 45699  015232  0EFA               	movlw	250
 45700  015234  6ED7               	movwf	4055,c	;volatile
 45701                           
 45702                           ;os.c: 31: TMR0L = 0x24;
 45703  015236  0E24               	movlw	36
 45704  015238  6ED6               	movwf	4054,c	;volatile
 45705                           
 45706                           ;os.c: 34: INTCONbits.T0IF = 0;
 45707  01523A  94F2               	bcf	intcon,2,c	;volatile
 45708                           
 45709                           ;os.c: 37: encoder_run();
 45710  01523C  ECAC  F08C         	call	_encoder_run	;wreg free
 45711                           
 45712                           ;os.c: 40: ++os.subTimeSlot;
 45713  015240  0101               	movlb	1	; () banked
 45714  015242  2B71               	incf	_os& (0+255),f,b	;volatile
 45715                           
 45716                           ; BSR set to: 1
 45717                           ;os.c: 41: if(os.subTimeSlot>=10)
 45718  015244  0E09               	movlw	9
 45719  015246  6571               	cpfsgt	_os& (0+255),b	;volatile
 45720  015248  0012               	return	
 45721                           
 45722                           ; BSR set to: 1
 45723                           ;os.c: 42: {;os.c: 43: if(os.done)
 45724  01524A  5173               	movf	(_os+2)& (0+255),w,b	;volatile
 45725  01524C  B4D8               	btfsc	status,2,c
 45726  01524E  0012               	return	
 45727                           
 45728                           ; BSR set to: 1
 45729                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 45730  015250  2B72               	incf	(_os+1)& (0+255),f,b	;volatile
 45731                           
 45732                           ; BSR set to: 1
 45733                           ;os.c: 46: if(os.timeSlot==16)
 45734  015252  0E10               	movlw	16
 45735  015254  1972               	xorwf	(_os+1)& (0+255),w,b	;volatile
 45736  015256  A4D8               	btfss	status,2,c
 45737  015258  D002               	goto	i2l1066
 45738                           
 45739                           ; BSR set to: 1
 45740                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 45741  01525A  0E00               	movlw	0
 45742  01525C  6F72               	movwf	(_os+1)& (0+255),b	;volatile
 45743  01525E                     i2l1066:
 45744                           
 45745                           ; BSR set to: 1
 45746                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 45747  01525E  0E00               	movlw	0
 45748  015260  6F71               	movwf	_os& (0+255),b	;volatile
 45749                           
 45750                           ;os.c: 51: os.done = 0;
 45751  015262  0E00               	movlw	0
 45752  015264  6F73               	movwf	(_os+2)& (0+255),b	;volatile
 45753                           
 45754                           ; BSR set to: 1
 45755                           
 45756                           ; BSR set to: 1
 45757  015266  0012               	return	
 45758  015268                     __end_of_tmr0_isr:
 45759                           	opt stack 0
 45760                           tosu	equ	0xFFF
 45761                           tosh	equ	0xFFE
 45762                           tosl	equ	0xFFD
 45763                           pclatu	equ	0xFFB
 45764                           pclath	equ	0xFFA
 45765                           tblptru	equ	0xFF8
 45766                           tblptrh	equ	0xFF7
 45767                           tblptrl	equ	0xFF6
 45768                           tablat	equ	0xFF5
 45769                           prodh	equ	0xFF4
 45770                           prodl	equ	0xFF3
 45771                           intcon	equ	0xFF2
 45772                           indf0	equ	0xFEF
 45773                           postinc0	equ	0xFEE
 45774                           fsr0h	equ	0xFEA
 45775                           fsr0l	equ	0xFE9
 45776                           wreg	equ	0xFE8
 45777                           indf1	equ	0xFE7
 45778                           postinc1	equ	0xFE6
 45779                           postdec1	equ	0xFE5
 45780                           plusw1	equ	0xFE3
 45781                           fsr1h	equ	0xFE2
 45782                           fsr1l	equ	0xFE1
 45783                           indf2	equ	0xFDF
 45784                           postinc2	equ	0xFDE
 45785                           postdec2	equ	0xFDD
 45786                           plusw2	equ	0xFDB
 45787                           fsr2h	equ	0xFDA
 45788                           fsr2l	equ	0xFD9
 45789                           status	equ	0xFD8
 45790                           
 45791 ;; *************** function _encoder_run *****************
 45792 ;; Defined at:
 45793 ;;		line 103 in file "encoder.c"
 45794 ;; Parameters:    Size  Location     Type
 45795 ;;		None
 45796 ;; Auto vars:     Size  Location     Type
 45797 ;;		None
 45798 ;; Return value:  Size  Location     Type
 45799 ;;                  1    wreg      void 
 45800 ;; Registers used:
 45801 ;;		wreg, status,2, status,0
 45802 ;; Tracked objects:
 45803 ;;		On entry : 0/0
 45804 ;;		On exit  : 0/0
 45805 ;;		Unchanged: 0/0
 45806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45807 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45809 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45810 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45811 ;;Total ram usage:        0 bytes
 45812 ;; Hardware stack levels used:    1
 45813 ;; This function calls:
 45814 ;;		Nothing
 45815 ;; This function is called by:
 45816 ;;		_tmr0_isr
 45817 ;; This function uses a non-reentrant model
 45818 ;;
 45819                           
 45820                           	psect	text187
 45821  011958                     __ptext187:
 45822                           	opt stack 0
 45823  011958                     _encoder_run:
 45824                           	opt stack 16
 45825                           
 45826                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 45827                           
 45828                           ;incstack = 0
 45829  011958  5084               	movf	3972,w,c	;volatile
 45830  01195A  0B07               	andlw	7
 45831  01195C  0101               	movlb	1	; () banked
 45832  01195E  1954               	xorwf	_enc1& (0+255),w,b
 45833  011960  B4D8               	btfsc	status,2,c
 45834  011962  D033               	goto	i2l2658
 45835                           
 45836                           ; BSR set to: 1
 45837                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 45838  011964  B084               	btfsc	3972,0,c	;volatile
 45839                           
 45840                           ; BSR set to: 1
 45841  011966  A484               	btfss	3972,2,c	;volatile
 45842  011968  D00D               	goto	i2l2661
 45843                           
 45844                           ; BSR set to: 1
 45845  01196A  B154               	btfsc	_enc1& (0+255),0,b
 45846  01196C  D00B               	goto	i2l2661
 45847                           
 45848                           ; BSR set to: 1
 45849                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 45850  01196E  0E7F               	movlw	127
 45851  011970  1974               	xorwf	(_os+3)& (0+255),w,b	;volatile
 45852  011972  B4D8               	btfsc	status,2,c
 45853  011974  D007               	goto	i2l2661
 45854                           
 45855                           ; BSR set to: 1
 45856                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 45857  011976  2B74               	incf	(_os+3)& (0+255),f,b	;volatile
 45858                           
 45859                           ; BSR set to: 1
 45860                           ;encoder.c: 113: if(config.beep_duration)
 45861  011978  51B6               	movf	(_config+21)& (0+255),w,b
 45862  01197A  B4D8               	btfsc	status,2,c
 45863  01197C  D003               	goto	i2l2661
 45864                           
 45865                           ; BSR set to: 1
 45866                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 45867  01197E  8E8B               	bsf	3979,7,c	;volatile
 45868                           
 45869                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 45870  011980  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45871  011984                     i2l2661:
 45872                           
 45873                           ; BSR set to: 1
 45874                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 45875                           
 45876                           ; BSR set to: 1
 45877                           
 45878                           ; BSR set to: 1
 45879  011984  B484               	btfsc	3972,2,c	;volatile
 45880                           
 45881                           ; BSR set to: 1
 45882  011986  A084               	btfss	3972,0,c	;volatile
 45883  011988  D00E               	goto	i2l2664
 45884                           
 45885                           ; BSR set to: 1
 45886  01198A  B554               	btfsc	_enc1& (0+255),2,b
 45887  01198C  D00C               	goto	i2l2664
 45888                           
 45889                           ; BSR set to: 1
 45890                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 45891  01198E  5174               	movf	(_os+3)& (0+255),w,b	;volatile
 45892  011990  0A80               	xorlw	128
 45893  011992  0FFF               	addlw	255
 45894  011994  A0D8               	btfss	status,0,c
 45895  011996  D007               	goto	i2l2664
 45896                           
 45897                           ; BSR set to: 1
 45898                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 45899  011998  0774               	decf	(_os+3)& (0+255),f,b	;volatile
 45900                           
 45901                           ; BSR set to: 1
 45902                           ;encoder.c: 126: if(config.beep_duration)
 45903  01199A  51B6               	movf	(_config+21)& (0+255),w,b
 45904  01199C  B4D8               	btfsc	status,2,c
 45905  01199E  D003               	goto	i2l2664
 45906                           
 45907                           ; BSR set to: 1
 45908                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 45909  0119A0  8E8B               	bsf	3979,7,c	;volatile
 45910                           
 45911                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 45912  0119A2  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45913  0119A6                     i2l2664:
 45914                           
 45915                           ; BSR set to: 1
 45916                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 45917                           
 45918                           ; BSR set to: 1
 45919                           
 45920                           ; BSR set to: 1
 45921  0119A6  B284               	btfsc	3972,1,c	;volatile
 45922                           
 45923                           ; BSR set to: 1
 45924  0119A8  B354               	btfsc	_enc1& (0+255),1,b
 45925  0119AA  D008               	goto	i2l2666
 45926                           
 45927                           ; BSR set to: 1
 45928                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 45929  0119AC  0E01               	movlw	1
 45930  0119AE  6F75               	movwf	(_os+4)& (0+255),b	;volatile
 45931                           
 45932                           ;encoder.c: 137: if(config.beep_duration)
 45933  0119B0  51B6               	movf	(_config+21)& (0+255),w,b
 45934  0119B2  B4D8               	btfsc	status,2,c
 45935  0119B4  D003               	goto	i2l2666
 45936                           
 45937                           ; BSR set to: 1
 45938                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 45939  0119B6  8E8B               	bsf	3979,7,c	;volatile
 45940                           
 45941                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 45942  0119B8  C1B6  F197         	movff	_config+21,_os+38	;volatile
 45943  0119BC                     i2l2666:
 45944                           
 45945                           ; BSR set to: 1
 45946                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 45947                           
 45948                           ; BSR set to: 1
 45949  0119BC  A284               	btfss	3972,1,c	;volatile
 45950                           
 45951                           ; BSR set to: 1
 45952  0119BE  A354               	btfss	_enc1& (0+255),1,b
 45953  0119C0  D001               	goto	i2l2667
 45954                           
 45955                           ; BSR set to: 1
 45956                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 45957  0119C2  6975               	setf	(_os+4)& (0+255),b	;volatile
 45958  0119C4                     i2l2667:
 45959                           
 45960                           ; BSR set to: 1
 45961                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 45962                           
 45963                           ; BSR set to: 1
 45964  0119C4  5084               	movf	3972,w,c	;volatile
 45965  0119C6  0B07               	andlw	7
 45966  0119C8  6F54               	movwf	_enc1& (0+255),b
 45967  0119CA                     i2l2658:
 45968                           
 45969                           ; BSR set to: 1
 45970                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 45971  0119CA  5080               	movf	3968,w,c	;volatile
 45972  0119CC  0B07               	andlw	7
 45973  0119CE  1953               	xorwf	_enc2& (0+255),w,b
 45974  0119D0  B4D8               	btfsc	status,2,c
 45975  0119D2  D033               	goto	i2l2668
 45976                           
 45977                           ; BSR set to: 1
 45978                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 45979  0119D4  B480               	btfsc	3968,2,c	;volatile
 45980                           
 45981                           ; BSR set to: 1
 45982  0119D6  A080               	btfss	3968,0,c	;volatile
 45983  0119D8  D00D               	goto	i2l2671
 45984                           
 45985                           ; BSR set to: 1
 45986  0119DA  B553               	btfsc	_enc2& (0+255),2,b
 45987  0119DC  D00B               	goto	i2l2671
 45988                           
 45989                           ; BSR set to: 1
 45990                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 45991  0119DE  0E7F               	movlw	127
 45992  0119E0  1976               	xorwf	(_os+5)& (0+255),w,b	;volatile
 45993  0119E2  B4D8               	btfsc	status,2,c
 45994  0119E4  D007               	goto	i2l2671
 45995                           
 45996                           ; BSR set to: 1
 45997                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 45998  0119E6  2B76               	incf	(_os+5)& (0+255),f,b	;volatile
 45999                           
 46000                           ; BSR set to: 1
 46001                           ;encoder.c: 160: if(config.beep_duration)
 46002  0119E8  51B6               	movf	(_config+21)& (0+255),w,b
 46003  0119EA  B4D8               	btfsc	status,2,c
 46004  0119EC  D003               	goto	i2l2671
 46005                           
 46006                           ; BSR set to: 1
 46007                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 46008  0119EE  8E8B               	bsf	3979,7,c	;volatile
 46009                           
 46010                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 46011  0119F0  C1B6  F197         	movff	_config+21,_os+38	;volatile
 46012  0119F4                     i2l2671:
 46013                           
 46014                           ; BSR set to: 1
 46015                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 46016                           
 46017                           ; BSR set to: 1
 46018                           
 46019                           ; BSR set to: 1
 46020  0119F4  B080               	btfsc	3968,0,c	;volatile
 46021                           
 46022                           ; BSR set to: 1
 46023  0119F6  A480               	btfss	3968,2,c	;volatile
 46024  0119F8  D00E               	goto	i2l2674
 46025                           
 46026                           ; BSR set to: 1
 46027  0119FA  B153               	btfsc	_enc2& (0+255),0,b
 46028  0119FC  D00C               	goto	i2l2674
 46029                           
 46030                           ; BSR set to: 1
 46031                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 46032  0119FE  5176               	movf	(_os+5)& (0+255),w,b	;volatile
 46033  011A00  0A80               	xorlw	128
 46034  011A02  0FFF               	addlw	255
 46035  011A04  A0D8               	btfss	status,0,c
 46036  011A06  D007               	goto	i2l2674
 46037                           
 46038                           ; BSR set to: 1
 46039                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 46040  011A08  0776               	decf	(_os+5)& (0+255),f,b	;volatile
 46041                           
 46042                           ; BSR set to: 1
 46043                           ;encoder.c: 173: if(config.beep_duration)
 46044  011A0A  51B6               	movf	(_config+21)& (0+255),w,b
 46045  011A0C  B4D8               	btfsc	status,2,c
 46046  011A0E  D003               	goto	i2l2674
 46047                           
 46048                           ; BSR set to: 1
 46049                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 46050  011A10  8E8B               	bsf	3979,7,c	;volatile
 46051                           
 46052                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 46053  011A12  C1B6  F197         	movff	_config+21,_os+38	;volatile
 46054  011A16                     i2l2674:
 46055                           
 46056                           ; BSR set to: 1
 46057                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 46058                           
 46059                           ; BSR set to: 1
 46060                           
 46061                           ; BSR set to: 1
 46062  011A16  B280               	btfsc	3968,1,c	;volatile
 46063                           
 46064                           ; BSR set to: 1
 46065  011A18  B353               	btfsc	_enc2& (0+255),1,b
 46066  011A1A  D008               	goto	i2l2676
 46067                           
 46068                           ; BSR set to: 1
 46069                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 46070  011A1C  0E01               	movlw	1
 46071  011A1E  6F77               	movwf	(_os+6)& (0+255),b	;volatile
 46072                           
 46073                           ;encoder.c: 184: if(config.beep_duration)
 46074  011A20  51B6               	movf	(_config+21)& (0+255),w,b
 46075  011A22  B4D8               	btfsc	status,2,c
 46076  011A24  D003               	goto	i2l2676
 46077                           
 46078                           ; BSR set to: 1
 46079                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 46080  011A26  8E8B               	bsf	3979,7,c	;volatile
 46081                           
 46082                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 46083  011A28  C1B6  F197         	movff	_config+21,_os+38	;volatile
 46084  011A2C                     i2l2676:
 46085                           
 46086                           ; BSR set to: 1
 46087                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 46088                           
 46089                           ; BSR set to: 1
 46090  011A2C  A280               	btfss	3968,1,c	;volatile
 46091                           
 46092                           ; BSR set to: 1
 46093  011A2E  A353               	btfss	_enc2& (0+255),1,b
 46094  011A30  D001               	goto	i2l2677
 46095                           
 46096                           ; BSR set to: 1
 46097                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 46098  011A32  6977               	setf	(_os+6)& (0+255),b	;volatile
 46099  011A34                     i2l2677:
 46100                           
 46101                           ; BSR set to: 1
 46102                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 46103                           
 46104                           ; BSR set to: 1
 46105  011A34  5080               	movf	3968,w,c	;volatile
 46106  011A36  0B07               	andlw	7
 46107  011A38  6F53               	movwf	_enc2& (0+255),b
 46108  011A3A                     i2l2668:
 46109                           
 46110                           ; BSR set to: 1
 46111                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 46112                           
 46113                           ; BSR set to: 1
 46114  011A3A  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 46115  011A3C  B4D8               	btfsc	status,2,c
 46116  011A3E  0012               	return	
 46117                           
 46118                           ; BSR set to: 1
 46119                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 46120  011A40  0797               	decf	(_os+38)& (0+255),f,b	;volatile
 46121                           
 46122                           ; BSR set to: 1
 46123                           ;encoder.c: 203: if(!os.beep_count)
 46124  011A42  5197               	movf	(_os+38)& (0+255),w,b	;volatile
 46125  011A44  A4D8               	btfss	status,2,c
 46126  011A46  0012               	return	
 46127                           
 46128                           ; BSR set to: 1
 46129                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 46130  011A48  9E8B               	bcf	3979,7,c	;volatile
 46131                           
 46132                           ; BSR set to: 1
 46133  011A4A  0012               	return	
 46134  011A4C                     __end_of_encoder_run:
 46135                           	opt stack 0
 46136                           tosu	equ	0xFFF
 46137                           tosh	equ	0xFFE
 46138                           tosl	equ	0xFFD
 46139                           pclatu	equ	0xFFB
 46140                           pclath	equ	0xFFA
 46141                           tblptru	equ	0xFF8
 46142                           tblptrh	equ	0xFF7
 46143                           tblptrl	equ	0xFF6
 46144                           tablat	equ	0xFF5
 46145                           prodh	equ	0xFF4
 46146                           prodl	equ	0xFF3
 46147                           intcon	equ	0xFF2
 46148                           indf0	equ	0xFEF
 46149                           postinc0	equ	0xFEE
 46150                           fsr0h	equ	0xFEA
 46151                           fsr0l	equ	0xFE9
 46152                           wreg	equ	0xFE8
 46153                           indf1	equ	0xFE7
 46154                           postinc1	equ	0xFE6
 46155                           postdec1	equ	0xFE5
 46156                           plusw1	equ	0xFE3
 46157                           fsr1h	equ	0xFE2
 46158                           fsr1l	equ	0xFE1
 46159                           indf2	equ	0xFDF
 46160                           postinc2	equ	0xFDE
 46161                           postdec2	equ	0xFDD
 46162                           plusw2	equ	0xFDB
 46163                           fsr2h	equ	0xFDA
 46164                           fsr2l	equ	0xFD9
 46165                           status	equ	0xFD8
 46166                           
 46167 ;; *************** function _motor_isr *****************
 46168 ;; Defined at:
 46169 ;;		line 371 in file "motor.c"
 46170 ;; Parameters:    Size  Location     Type
 46171 ;;		None
 46172 ;; Auto vars:     Size  Location     Type
 46173 ;;  steps_remain    4   63[COMRAM] unsigned long 
 46174 ;;  steps_until_    2   61[COMRAM] unsigned int 
 46175 ;;  steps_until_    2   59[COMRAM] unsigned int 
 46176 ;; Return value:  Size  Location     Type
 46177 ;;                  1    wreg      void 
 46178 ;; Registers used:
 46179 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46180 ;; Tracked objects:
 46181 ;;		On entry : 0/0
 46182 ;;		On exit  : 0/0
 46183 ;;		Unchanged: 0/0
 46184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46186 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46187 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46188 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46189 ;;Total ram usage:       24 bytes
 46190 ;; Hardware stack levels used:    1
 46191 ;; Hardware stack levels required when called:    4
 46192 ;; This function calls:
 46193 ;;		_i2c_eeprom_writeUint32
 46194 ;; This function is called by:
 46195 ;;		_SYS_InterruptHigh
 46196 ;; This function uses a non-reentrant model
 46197 ;;
 46198                           
 46199                           	psect	text188
 46200  00B810                     __ptext188:
 46201                           	opt stack 0
 46202  00B810                     _motor_isr:
 46203                           	opt stack 13
 46204                           
 46205                           ;motor.c: 373: uint32_t steps_remaining;;motor.c: 374: uint16_t steps_until_standstill;;
      +                          motor.c: 375: uint16_t steps_until_standstill_if_accelerate;;motor.c: 378: PIR1bits.TMR2
      +                          IF = 0;
 46206                           
 46207                           ; BSR set to: 1
 46208                           ;incstack = 0
 46209  00B810  929E               	bcf	3998,1,c	;volatile
 46210                           
 46211                           ;motor.c: 380: if(motor_mode==MOTOR_MODE_MANUAL)
 46212  00B812  0101               	movlb	1	; () banked
 46213  00B814  5156               	movf	_motor_mode& (0+255),w,b
 46214  00B816  A4D8               	btfss	status,2,c
 46215  00B818  D026               	goto	i2l2489
 46216                           
 46217                           ; BSR set to: 1
 46218                           ;motor.c: 381: {;motor.c: 383: if(LATBbits.LB1)
 46219  00B81A  A28A               	btfss	3978,1,c	;volatile
 46220  00B81C  D023               	goto	i2l2486
 46221                           
 46222                           ; BSR set to: 1
 46223                           ;motor.c: 384: {;motor.c: 386: LATBbits.LB1 = 0;
 46224  00B81E  928A               	bcf	3978,1,c	;volatile
 46225                           
 46226                           ; BSR set to: 1
 46227                           ;motor.c: 389: if(motor_current_stepcount==motor_final_stepcount)
 46228  00B820  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 46229  00B822  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 46230  00B824  E109               	bnz	i2u1854_41
 46231  00B826  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 46232  00B828  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 46233  00B82A  E106               	bnz	i2u1854_41
 46234  00B82C  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 46235  00B82E  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 46236  00B830  E103               	bnz	i2u1854_41
 46237  00B832  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 46238  00B834  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 46239  00B836  A4D8               	btfss	status,2,c
 46240  00B838                     i2u1854_41:
 46241  00B838  0012               	return	
 46242                           
 46243                           ; BSR set to: 1
 46244                           ;motor.c: 390: {;motor.c: 393: T2CONbits.TMR2ON = 0;
 46245  00B83A  94CA               	bcf	4042,2,c	;volatile
 46246                           
 46247                           ;motor.c: 395: PIR1bits.TMR2IF = 0;
 46248  00B83C  929E               	bcf	3998,1,c	;volatile
 46249                           
 46250                           ;motor.c: 396: PIE1bits.TMR2IE = 0;
 46251  00B83E  929D               	bcf	3997,1,c	;volatile
 46252                           
 46253                           ; BSR set to: 1
 46254                           ;motor.c: 398: i2c_eeprom_writeUint32(0x200, os.current_position_in_steps);
 46255  00B840  0E02               	movlw	2
 46256  00B842  6E27               	movwf	i2c_eeprom_writeUint32@address+1,c
 46257  00B844  0E00               	movlw	0
 46258  00B846  6E26               	movwf	i2c_eeprom_writeUint32@address,c
 46259  00B848  C178  F028         	movff	_os+7,i2c_eeprom_writeUint32@data	;volatile
 46260  00B84C  C179  F029         	movff	_os+8,i2c_eeprom_writeUint32@data+1	;volatile
 46261  00B850  C17A  F02A         	movff	_os+9,i2c_eeprom_writeUint32@data+2	;volatile
 46262  00B854  C17B  F02B         	movff	_os+10,i2c_eeprom_writeUint32@data+3	;volatile
 46263  00B858  EC8C  F0AC         	call	_i2c_eeprom_writeUint32	;wreg free
 46264                           
 46265                           ;motor.c: 400: os.busy = 0;
 46266  00B85C  0E00               	movlw	0
 46267  00B85E  0101               	movlb	1	; () banked
 46268  00B860  6F7F               	movwf	(_os+14)& (0+255),b	;volatile
 46269                           
 46270                           ; BSR set to: 1
 46271                           ;motor.c: 401: };motor.c: 404: return;
 46272                           
 46273                           ; BSR set to: 1
 46274  00B862  0012               	return	
 46275  00B864                     i2l2486:
 46276                           
 46277                           ; BSR set to: 1
 46278                           ;motor.c: 406: else;motor.c: 407: {;motor.c: 409: LATBbits.LB1 = 1;
 46279  00B864  828A               	bsf	3978,1,c	;volatile
 46280  00B866                     i2l2489:
 46281                           
 46282                           ; BSR set to: 1
 46283                           ;motor.c: 410: };motor.c: 411: };motor.c: 413: ++motor_current_stepcount;
 46284                           
 46285                           ; BSR set to: 1
 46286                           
 46287                           ; BSR set to: 1
 46288  00B866  0E01               	movlw	1
 46289  00B868  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 46290  00B86A  0E00               	movlw	0
 46291  00B86C  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 46292  00B86E  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 46293  00B870  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 46294                           
 46295                           ;motor.c: 416: os.current_position_in_steps += motor_direction;
 46296  00B872  5155               	movf	_motor_direction& (0+255),w,b
 46297  00B874  6E2C               	movwf	??_motor_isr& (0+255),c
 46298  00B876  0E00               	movlw	0
 46299  00B878  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 46300  00B87A  0EFF               	movlw	255
 46301  00B87C  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46302  00B87E  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46303  00B880  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46304  00B882  502C               	movf	??_motor_isr,w,c
 46305  00B884  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 46306  00B886  502D               	movf	??_motor_isr+1,w,c
 46307  00B888  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 46308  00B88A  502E               	movf	??_motor_isr+2,w,c
 46309  00B88C  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 46310  00B88E  502F               	movf	??_motor_isr+3,w,c
 46311  00B890  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 46312                           
 46313                           ;motor.c: 417: if(os.current_position_in_steps==config.full_circle_in_steps)
 46314  00B892  51A1               	movf	_config& (0+255),w,b
 46315  00B894  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 46316  00B896  E112               	bnz	i2l18585
 46317  00B898  51A2               	movf	(_config+1)& (0+255),w,b
 46318  00B89A  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 46319  00B89C  E10F               	bnz	i2l18585
 46320  00B89E  51A3               	movf	(_config+2)& (0+255),w,b
 46321  00B8A0  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 46322  00B8A2  E10C               	bnz	i2l18585
 46323  00B8A4  51A4               	movf	(_config+3)& (0+255),w,b
 46324  00B8A6  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 46325  00B8A8  A4D8               	btfss	status,2,c
 46326  00B8AA  D008               	goto	i2l2490
 46327                           
 46328                           ; BSR set to: 1
 46329                           ;motor.c: 418: os.current_position_in_steps = 0;
 46330  00B8AC  0E00               	movlw	0
 46331  00B8AE  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46332  00B8B0  0E00               	movlw	0
 46333  00B8B2  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46334  00B8B4  0E00               	movlw	0
 46335  00B8B6  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46336  00B8B8  0E00               	movlw	0
 46337  00B8BA  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46338  00B8BC                     i2l2490:
 46339  00B8BC                     i2l18585:
 46340                           
 46341                           ; BSR set to: 1
 46342                           ;motor.c: 419: if(os.current_position_in_steps==0xFFFFFFFF)
 46343  00B8BC  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 46344  00B8BE  E113               	bnz	i2l2491
 46345  00B8C0  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 46346  00B8C2  E111               	bnz	i2l2491
 46347  00B8C4  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 46348  00B8C6  E10F               	bnz	i2l2491
 46349  00B8C8  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 46350  00B8CA  A4D8               	btfss	status,2,c
 46351  00B8CC  D00C               	goto	i2l2491
 46352                           
 46353                           ; BSR set to: 1
 46354                           ;motor.c: 420: os.current_position_in_steps = (config.full_circle_in_steps-1);
 46355  00B8CE  0EFF               	movlw	255
 46356  00B8D0  25A1               	addwf	_config& (0+255),w,b
 46357  00B8D2  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 46358  00B8D4  0EFF               	movlw	255
 46359  00B8D6  21A2               	addwfc	(_config+1)& (0+255),w,b
 46360  00B8D8  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 46361  00B8DA  0EFF               	movlw	255
 46362  00B8DC  21A3               	addwfc	(_config+2)& (0+255),w,b
 46363  00B8DE  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 46364  00B8E0  0EFF               	movlw	255
 46365  00B8E2  21A4               	addwfc	(_config+3)& (0+255),w,b
 46366  00B8E4  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 46367  00B8E6                     i2l2491:
 46368                           
 46369                           ; BSR set to: 1
 46370                           ;motor.c: 423: if(motor_current_stepcount==motor_next_speed_check)
 46371  00B8E6  0102               	movlb	2	; () banked
 46372  00B8E8  5126               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 46373  00B8EA  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 46374  00B8EC  E109               	bnz	i2u1857_41
 46375  00B8EE  5127               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 46376  00B8F0  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 46377  00B8F2  E106               	bnz	i2u1857_41
 46378  00B8F4  5128               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 46379  00B8F6  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 46380  00B8F8  E103               	bnz	i2u1857_41
 46381  00B8FA  5129               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 46382  00B8FC  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 46383  00B8FE  A4D8               	btfss	status,2,c
 46384  00B900                     i2u1857_41:
 46385  00B900  D217               	goto	i2l2504
 46386                           
 46387                           ; BSR set to: 2
 46388                           ;motor.c: 424: {;motor.c: 426: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 46389  00B902  C058  F02C         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 46390  00B906  C059  F02D         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 46391  00B90A  C05A  F02E         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 46392  00B90E  C05B  F02F         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 46393  00B912  1E2C               	comf	??_motor_isr,f,c
 46394  00B914  1E2D               	comf	??_motor_isr+1,f,c
 46395  00B916  1E2E               	comf	??_motor_isr+2,f,c
 46396  00B918  1E2F               	comf	??_motor_isr+3,f,c
 46397  00B91A  2A2C               	incf	??_motor_isr,f,c
 46398  00B91C  0E00               	movlw	0
 46399  00B91E  222D               	addwfc	??_motor_isr+1,f,c
 46400  00B920  222E               	addwfc	??_motor_isr+2,f,c
 46401  00B922  222F               	addwfc	??_motor_isr+3,f,c
 46402  00B924  0101               	movlb	1	; () banked
 46403  00B926  5127               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 46404  00B928  242C               	addwf	??_motor_isr,w,c
 46405  00B92A  6E40               	movwf	motor_isr@steps_remaining,c
 46406  00B92C  5128               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 46407  00B92E  202D               	addwfc	??_motor_isr+1,w,c
 46408  00B930  6E41               	movwf	motor_isr@steps_remaining+1,c
 46409  00B932  5129               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 46410  00B934  202E               	addwfc	??_motor_isr+2,w,c
 46411  00B936  6E42               	movwf	motor_isr@steps_remaining+2,c
 46412  00B938  512A               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 46413  00B93A  202F               	addwfc	??_motor_isr+3,w,c
 46414  00B93C  6E43               	movwf	motor_isr@steps_remaining+3,c
 46415                           
 46416                           ; BSR set to: 1
 46417                           ;motor.c: 427: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 46418  00B93E  90D8               	bcf	status,0,c
 46419  00B940  0100               	movlb	0	; () banked
 46420  00B942  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46421  00B944  6EF6               	movwf	tblptrl,c
 46422  00B946  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46423  00B948  6EF7               	movwf	tblptrh,c
 46424  00B94A  0E61               	movlw	low _motor_steps_lookup
 46425  00B94C  26F6               	addwf	tblptrl,f,c
 46426  00B94E  0E94               	movlw	high _motor_steps_lookup
 46427  00B950  22F7               	addwfc	tblptrh,f,c
 46428  00B952                     	if	1	;There are 3 active tblptr bytes
 46429  00B952  6AF8               	clrf	tblptru,c
 46430  00B954  0E00               	movlw	low (__mediumconst shr (0+16))
 46431  00B956  22F8               	addwfc	tblptru,f,c
 46432  00B958                     	endif
 46433  00B958  0009               	tblrd		*+
 46434  00B95A  CFF5 F03C          	movff	tablat,motor_isr@steps_until_standstill
 46435  00B95E  000A               	tblrd		*-
 46436  00B960  CFF5 F03D          	movff	tablat,motor_isr@steps_until_standstill+1
 46437                           
 46438                           ; BSR set to: 0
 46439                           ;motor.c: 428: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 46440  00B964  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr	;volatile
 46441  00B968  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 46442  00B96C  90D8               	bcf	status,0,c
 46443  00B96E  362C               	rlcf	??_motor_isr,f,c
 46444  00B970  362D               	rlcf	??_motor_isr+1,f,c
 46445  00B972  0E04               	movlw	4
 46446  00B974  262C               	addwf	??_motor_isr,f,c
 46447  00B976  0E00               	movlw	0
 46448  00B978  222D               	addwfc	??_motor_isr+1,f,c
 46449  00B97A  0E61               	movlw	low _motor_steps_lookup
 46450  00B97C  242C               	addwf	??_motor_isr,w,c
 46451  00B97E  6EF6               	movwf	tblptrl,c
 46452  00B980  0E94               	movlw	high _motor_steps_lookup
 46453  00B982  202D               	addwfc	??_motor_isr+1,w,c
 46454  00B984  6EF7               	movwf	tblptrh,c
 46455  00B986                     	if	1	;There are 3 active tblptr bytes
 46456  00B986  6AF8               	clrf	tblptru,c
 46457  00B988  0E00               	movlw	low (__mediumconst shr (0+16))
 46458  00B98A  22F8               	addwfc	tblptru,f,c
 46459  00B98C                     	endif
 46460  00B98C  0009               	tblrd		*+
 46461  00B98E  CFF5 F03E          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 46462  00B992  000A               	tblrd		*-
 46463  00B994  CFF5 F03F          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 46464                           
 46465                           ;motor.c: 430: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 46466  00B998  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46467  00B99A  0101               	movlb	1	; () banked
 46468  00B99C  5D3F               	subwf	_motor_maximum_speed& (0+255),w,b
 46469  00B99E  0100               	movlb	0	; () banked
 46470  00B9A0  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46471  00B9A2  0101               	movlb	1	; () banked
 46472  00B9A4  5940               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 46473  00B9A6  A0D8               	btfss	status,0,c
 46474  00B9A8  D010               	goto	i2u1859_40
 46475                           
 46476                           ; BSR set to: 1
 46477  00B9AA  503C               	movf	motor_isr@steps_until_standstill,w,c
 46478  00B9AC  6E2C               	movwf	??_motor_isr& (0+255),c
 46479  00B9AE  503D               	movf	motor_isr@steps_until_standstill+1,w,c
 46480  00B9B0  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46481  00B9B2  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46482  00B9B4  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46483  00B9B6  5040               	movf	motor_isr@steps_remaining,w,c
 46484  00B9B8  5C2C               	subwf	??_motor_isr,w,c
 46485  00B9BA  5041               	movf	motor_isr@steps_remaining+1,w,c
 46486  00B9BC  582D               	subwfb	??_motor_isr+1,w,c
 46487  00B9BE  5042               	movf	motor_isr@steps_remaining+2,w,c
 46488  00B9C0  582E               	subwfb	??_motor_isr+2,w,c
 46489  00B9C2  5043               	movf	motor_isr@steps_remaining+3,w,c
 46490  00B9C4  582F               	subwfb	??_motor_isr+3,w,c
 46491  00B9C6  A0D8               	btfss	status,0,c
 46492  00B9C8  D0E3               	goto	i2l2493
 46493  00B9CA                     i2u1859_40:
 46494                           
 46495                           ; BSR set to: 1
 46496                           ;motor.c: 431: {;motor.c: 433: if(motor_current_speed>0)
 46497                           
 46498                           ; BSR set to: 1
 46499  00B9CA  0100               	movlb	0	; () banked
 46500  00B9CC  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46501  00B9CE  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46502  00B9D0  B4D8               	btfsc	status,2,c
 46503  00B9D2  D003               	goto	i2l2496
 46504                           
 46505                           ; BSR set to: 0
 46506                           ;motor.c: 434: {;motor.c: 435: --motor_current_speed;
 46507  00B9D4  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 46508  00B9D6  A0D8               	btfss	status,0,c
 46509  00B9D8  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46510  00B9DA                     i2l2496:
 46511                           
 46512                           ; BSR set to: 0
 46513                           ;motor.c: 436: };motor.c: 439: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 46514                           
 46515                           ; BSR set to: 0
 46516  00B9DA  0101               	movlb	1	; () banked
 46517  00B9DC  0556               	decf	_motor_mode& (0+255),w,b
 46518  00B9DE  A4D8               	btfss	status,2,c
 46519  00B9E0  D026               	goto	i2l2497
 46520                           
 46521                           ; BSR set to: 1
 46522  00B9E2  0E2F               	movlw	low _motor_postscaler_lookup
 46523  00B9E4  0100               	movlb	0	; () banked
 46524  00B9E6  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46525  00B9E8  6EF6               	movwf	tblptrl,c
 46526  00B9EA  0E98               	movlw	high _motor_postscaler_lookup
 46527  00B9EC  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46528  00B9EE  6EF7               	movwf	tblptrh,c
 46529  00B9F0                     	if	1	;There are 3 active tblptr bytes
 46530  00B9F0  6AF8               	clrf	tblptru,c
 46531  00B9F2  0E00               	movlw	low (__mediumconst shr (0+16))
 46532  00B9F4  22F8               	addwfc	tblptru,f,c
 46533  00B9F6                     	endif
 46534  00B9F6  0008               	tblrd		*
 46535  00B9F8  50F5               	movf	tablat,w,c
 46536  00B9FA  0900               	iorlw	0
 46537  00B9FC  B4D8               	btfsc	status,2,c
 46538  00B9FE  D017               	goto	i2l2497
 46539                           
 46540                           ; BSR set to: 0
 46541                           ;motor.c: 440: {;motor.c: 442: motor_mode = MOTOR_MODE_MANUAL;
 46542  00BA00  0E00               	movlw	0
 46543  00BA02  0101               	movlb	1	; () banked
 46544  00BA04  6F56               	movwf	_motor_mode& (0+255),b
 46545                           
 46546                           ; BSR set to: 1
 46547                           ;motor.c: 445: LATBbits.LB1 = 1;
 46548  00BA06  828A               	bsf	3978,1,c	;volatile
 46549                           
 46550                           ;motor.c: 446: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46551  00BA08  0E55               	movlw	85
 46552  00BA0A  6EA7               	movwf	4007,c	;volsfr
 46553  00BA0C  0EAA               	movlw	170
 46554  00BA0E  6EA7               	movwf	4007,c	;volsfr
 46555                           
 46556                           ; BSR set to: 1
 46557  00BA10  010E               	movlb	14	; () banked
 46558  00BA12  91BF               	bcf	191,0,b	;volatile
 46559                           
 46560                           ;motor.c: 447: RPOR4 = 0;
 46561  00BA14  0E00               	movlw	0
 46562  00BA16  6FC4               	movwf	196,b	;volatile
 46563                           
 46564                           ;motor.c: 448: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46565  00BA18  0E55               	movlw	85
 46566  00BA1A  6EA7               	movwf	4007,c	;volsfr
 46567  00BA1C  0EAA               	movlw	170
 46568  00BA1E  6EA7               	movwf	4007,c	;volsfr
 46569                           
 46570                           ; BSR set to: 14
 46571  00BA20  81BF               	bsf	191,0,b	;volatile
 46572                           
 46573                           ;motor.c: 451: TMR2 = 0;
 46574  00BA22  0E00               	movlw	0
 46575  00BA24  6ECC               	movwf	4044,c	;volatile
 46576                           
 46577                           ; BSR set to: 14
 46578                           ;motor.c: 454: CCP1CONbits.CCP1M = 0b0000;
 46579  00BA26  90BA               	bcf	4026,0,c	;volatile
 46580  00BA28  92BA               	bcf	4026,1,c	;volatile
 46581  00BA2A  94BA               	bcf	4026,2,c	;volatile
 46582  00BA2C  96BA               	bcf	4026,3,c	;volatile
 46583  00BA2E                     i2l2497:
 46584                           
 46585                           ;motor.c: 455: };motor.c: 459: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 46586                           
 46587                           ; BSR set to: 14
 46588  00BA2E  0EFD               	movlw	low _motor_prescaler_lookup
 46589  00BA30  0100               	movlb	0	; () banked
 46590  00BA32  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46591  00BA34  6EF6               	movwf	tblptrl,c
 46592  00BA36  0E9B               	movlw	high _motor_prescaler_lookup
 46593  00BA38  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46594  00BA3A  6EF7               	movwf	tblptrh,c
 46595  00BA3C                     	if	1	;There are 3 active tblptr bytes
 46596  00BA3C  6AF8               	clrf	tblptru,c
 46597  00BA3E  0E00               	movlw	low (__mediumconst shr (0+16))
 46598  00BA40  22F8               	addwfc	tblptru,f,c
 46599  00BA42                     	endif
 46600  00BA42  0008               	tblrd		*
 46601  00BA44  CFF5 F02C          	movff	tablat,??_motor_isr
 46602  00BA48  50CA               	movf	4042,w,c	;volatile
 46603  00BA4A  182C               	xorwf	??_motor_isr,w,c
 46604  00BA4C  0BFC               	andlw	-4
 46605  00BA4E  182C               	xorwf	??_motor_isr,w,c
 46606  00BA50  6ECA               	movwf	4042,c	;volatile
 46607                           
 46608                           ; BSR set to: 0
 46609                           ;motor.c: 461: PR2 = motor_period_lookup[motor_current_speed];
 46610  00BA52  0E16               	movlw	low _motor_period_lookup
 46611  00BA54  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46612  00BA56  6EF6               	movwf	tblptrl,c
 46613  00BA58  0E9A               	movlw	high _motor_period_lookup
 46614  00BA5A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46615  00BA5C  6EF7               	movwf	tblptrh,c
 46616  00BA5E                     	if	1	;There are 3 active tblptr bytes
 46617  00BA5E  6AF8               	clrf	tblptru,c
 46618  00BA60  0E00               	movlw	low (__mediumconst shr (0+16))
 46619  00BA62  22F8               	addwfc	tblptru,f,c
 46620  00BA64                     	endif
 46621  00BA64  0008               	tblrd		*
 46622  00BA66  CFF5 FFCB          	movff	tablat,4043	;volatile
 46623                           
 46624                           ; BSR set to: 0
 46625                           ;motor.c: 463: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46626  00BA6A  0E2F               	movlw	low _motor_postscaler_lookup
 46627  00BA6C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46628  00BA6E  6EF6               	movwf	tblptrl,c
 46629  00BA70  0E98               	movlw	high _motor_postscaler_lookup
 46630  00BA72  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46631  00BA74  6EF7               	movwf	tblptrh,c
 46632  00BA76                     	if	1	;There are 3 active tblptr bytes
 46633  00BA76  6AF8               	clrf	tblptru,c
 46634  00BA78  0E00               	movlw	low (__mediumconst shr (0+16))
 46635  00BA7A  22F8               	addwfc	tblptru,f,c
 46636  00BA7C                     	endif
 46637  00BA7C  0008               	tblrd		*
 46638  00BA7E  CFF5 F02C          	movff	tablat,??_motor_isr
 46639  00BA82  462C               	rlncf	??_motor_isr,f,c
 46640  00BA84  462C               	rlncf	??_motor_isr,f,c
 46641  00BA86  462C               	rlncf	??_motor_isr,f,c
 46642  00BA88  50CA               	movf	4042,w,c	;volatile
 46643  00BA8A  182C               	xorwf	??_motor_isr,w,c
 46644  00BA8C  0B87               	andlw	-121
 46645  00BA8E  182C               	xorwf	??_motor_isr,w,c
 46646  00BA90  6ECA               	movwf	4042,c	;volatile
 46647                           
 46648                           ; BSR set to: 0
 46649                           ;motor.c: 465: CCPR1L = PR2>>1;
 46650  00BA92  90D8               	bcf	status,0,c
 46651  00BA94  30CB               	rrcf	4043,w,c	;volatile
 46652  00BA96  6EBB               	movwf	4027,c	;volatile
 46653                           
 46654                           ; BSR set to: 0
 46655                           ;motor.c: 468: if(motor_current_speed>0)
 46656  00BA98  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 46657  00BA9A  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46658  00BA9C  B4D8               	btfsc	status,2,c
 46659  00BA9E  D058               	goto	i2l2498
 46660                           
 46661                           ; BSR set to: 0
 46662                           ;motor.c: 469: {;motor.c: 470: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 46663  00BAA0  0EFE               	movlw	254
 46664  00BAA2  6E2C               	movwf	??_motor_isr& (0+255),c
 46665  00BAA4  0EFF               	movlw	255
 46666  00BAA6  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46667  00BAA8  C0FE  F02E         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 46668  00BAAC  C0FF  F02F         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 46669  00BAB0  90D8               	bcf	status,0,c
 46670  00BAB2  362E               	rlcf	??_motor_isr+2,f,c
 46671  00BAB4  362F               	rlcf	??_motor_isr+3,f,c
 46672  00BAB6  502C               	movf	??_motor_isr,w,c
 46673  00BAB8  262E               	addwf	??_motor_isr+2,f,c
 46674  00BABA  502D               	movf	??_motor_isr+1,w,c
 46675  00BABC  222F               	addwfc	??_motor_isr+3,f,c
 46676  00BABE  0E61               	movlw	low _motor_steps_lookup
 46677  00BAC0  242E               	addwf	??_motor_isr+2,w,c
 46678  00BAC2  6EF6               	movwf	tblptrl,c
 46679  00BAC4  0E94               	movlw	high _motor_steps_lookup
 46680  00BAC6  202F               	addwfc	??_motor_isr+3,w,c
 46681  00BAC8  6EF7               	movwf	tblptrh,c
 46682  00BACA                     	if	1	;There are 3 active tblptr bytes
 46683  00BACA  6AF8               	clrf	tblptru,c
 46684  00BACC  0E00               	movlw	low (__mediumconst shr (0+16))
 46685  00BACE  22F8               	addwfc	tblptru,f,c
 46686  00BAD0                     	endif
 46687  00BAD0  0009               	tblrd		*+
 46688  00BAD2  CFF5 F030          	movff	tablat,??_motor_isr+4
 46689  00BAD6  0009               	tblrd		*+
 46690  00BAD8  CFF5 F031          	movff	tablat,??_motor_isr+5
 46691  00BADC  5030               	movf	??_motor_isr+4,w,c
 46692  00BADE  6E32               	movwf	(??_motor_isr+6)& (0+255),c
 46693  00BAE0  5031               	movf	??_motor_isr+5,w,c
 46694  00BAE2  6E33               	movwf	(??_motor_isr+7)& (0+255),c
 46695  00BAE4  6A34               	clrf	(??_motor_isr+8)& (0+255),c
 46696  00BAE6  6A35               	clrf	(??_motor_isr+9)& (0+255),c
 46697  00BAE8  1E32               	comf	??_motor_isr+6,f,c
 46698  00BAEA  1E33               	comf	??_motor_isr+7,f,c
 46699  00BAEC  1E34               	comf	??_motor_isr+8,f,c
 46700  00BAEE  1E35               	comf	??_motor_isr+9,f,c
 46701  00BAF0  2A32               	incf	??_motor_isr+6,f,c
 46702  00BAF2  0E00               	movlw	0
 46703  00BAF4  2233               	addwfc	??_motor_isr+7,f,c
 46704  00BAF6  2234               	addwfc	??_motor_isr+8,f,c
 46705  00BAF8  2235               	addwfc	??_motor_isr+9,f,c
 46706  00BAFA  90D8               	bcf	status,0,c
 46707  00BAFC  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46708  00BAFE  6EF6               	movwf	tblptrl,c
 46709  00BB00  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46710  00BB02  6EF7               	movwf	tblptrh,c
 46711  00BB04  0E61               	movlw	low _motor_steps_lookup
 46712  00BB06  26F6               	addwf	tblptrl,f,c
 46713  00BB08  0E94               	movlw	high _motor_steps_lookup
 46714  00BB0A  22F7               	addwfc	tblptrh,f,c
 46715  00BB0C                     	if	1	;There are 3 active tblptr bytes
 46716  00BB0C  6AF8               	clrf	tblptru,c
 46717  00BB0E  0E00               	movlw	low (__mediumconst shr (0+16))
 46718  00BB10  22F8               	addwfc	tblptru,f,c
 46719  00BB12                     	endif
 46720  00BB12  0009               	tblrd		*+
 46721  00BB14  CFF5 F036          	movff	tablat,??_motor_isr+10
 46722  00BB18  0009               	tblrd		*+
 46723  00BB1A  CFF5 F037          	movff	tablat,??_motor_isr+11
 46724  00BB1E  5036               	movf	??_motor_isr+10,w,c
 46725  00BB20  2432               	addwf	??_motor_isr+6,w,c
 46726  00BB22  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 46727  00BB24  5037               	movf	??_motor_isr+11,w,c
 46728  00BB26  2033               	addwfc	??_motor_isr+7,w,c
 46729  00BB28  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 46730  00BB2A  0E00               	movlw	0
 46731  00BB2C  2034               	addwfc	??_motor_isr+8,w,c
 46732  00BB2E  6E3A               	movwf	(??_motor_isr+14)& (0+255),c
 46733  00BB30  0E00               	movlw	0
 46734  00BB32  2035               	addwfc	??_motor_isr+9,w,c
 46735  00BB34  6E3B               	movwf	(??_motor_isr+15)& (0+255),c
 46736  00BB36  5058               	movf	_motor_current_stepcount,w,c	;volatile
 46737  00BB38  2438               	addwf	??_motor_isr+12,w,c
 46738  00BB3A  0102               	movlb	2	; () banked
 46739  00BB3C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46740  00BB3E  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 46741  00BB40  2039               	addwfc	??_motor_isr+13,w,c
 46742  00BB42  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46743  00BB44  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 46744  00BB46  203A               	addwfc	??_motor_isr+14,w,c
 46745  00BB48  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46746  00BB4A  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 46747  00BB4C  203B               	addwfc	??_motor_isr+15,w,c
 46748  00BB4E  D0EF               	goto	L75
 46749  00BB50                     i2l2498:
 46750                           
 46751                           ;motor.c: 472: else;motor.c: 473: {;motor.c: 474: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 46752                           
 46753                           ; BSR set to: 2
 46754  00BB50  90D8               	bcf	status,0,c
 46755  00BB52  0100               	movlb	0	; () banked
 46756  00BB54  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46757  00BB56  6EF6               	movwf	tblptrl,c
 46758  00BB58  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46759  00BB5A  6EF7               	movwf	tblptrh,c
 46760  00BB5C  0E61               	movlw	low _motor_steps_lookup
 46761  00BB5E  26F6               	addwf	tblptrl,f,c
 46762  00BB60  0E94               	movlw	high _motor_steps_lookup
 46763  00BB62  22F7               	addwfc	tblptrh,f,c
 46764  00BB64                     	if	1	;There are 3 active tblptr bytes
 46765  00BB64  6AF8               	clrf	tblptru,c
 46766  00BB66  0E00               	movlw	low (__mediumconst shr (0+16))
 46767  00BB68  22F8               	addwfc	tblptru,f,c
 46768  00BB6A                     	endif
 46769  00BB6A  0009               	tblrd		*+
 46770  00BB6C  CFF5 F02C          	movff	tablat,??_motor_isr
 46771  00BB70  0009               	tblrd		*+
 46772  00BB72  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46773  00BB76  502C               	movf	??_motor_isr,w,c
 46774  00BB78  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 46775  00BB7A  0102               	movlb	2	; () banked
 46776  00BB7C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 46777  00BB7E  502D               	movf	??_motor_isr+1,w,c
 46778  00BB80  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 46779  00BB82  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 46780  00BB84  0E00               	movlw	0
 46781  00BB86  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 46782  00BB88  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 46783  00BB8A  0E00               	movlw	0
 46784  00BB8C  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 46785  00BB8E  D0CF               	goto	L75
 46786  00BB90                     i2l2493:
 46787                           
 46788                           ;motor.c: 477: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 46789                           
 46790                           ; BSR set to: 2
 46791  00BB90  0101               	movlb	1	; () banked
 46792  00BB92  513F               	movf	_motor_maximum_speed& (0+255),w,b
 46793  00BB94  0100               	movlb	0	; () banked
 46794  00BB96  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 46795  00BB98  E106               	bnz	i2u1864_40
 46796  00BB9A  0101               	movlb	1	; () banked
 46797  00BB9C  5140               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 46798  00BB9E  0100               	movlb	0	; () banked
 46799  00BBA0  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46800  00BBA2  B4D8               	btfsc	status,2,c
 46801  00BBA4  D010               	goto	i2u1865_40
 46802  00BBA6                     i2u1864_40:
 46803                           
 46804                           ; BSR set to: 0
 46805  00BBA6  503E               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 46806  00BBA8  6E2C               	movwf	??_motor_isr& (0+255),c
 46807  00BBAA  503F               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 46808  00BBAC  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 46809  00BBAE  6A2E               	clrf	(??_motor_isr+2)& (0+255),c
 46810  00BBB0  6A2F               	clrf	(??_motor_isr+3)& (0+255),c
 46811  00BBB2  5040               	movf	motor_isr@steps_remaining,w,c
 46812  00BBB4  5C2C               	subwf	??_motor_isr,w,c
 46813  00BBB6  5041               	movf	motor_isr@steps_remaining+1,w,c
 46814  00BBB8  582D               	subwfb	??_motor_isr+1,w,c
 46815  00BBBA  5042               	movf	motor_isr@steps_remaining+2,w,c
 46816  00BBBC  582E               	subwfb	??_motor_isr+2,w,c
 46817  00BBBE  5043               	movf	motor_isr@steps_remaining+3,w,c
 46818  00BBC0  582F               	subwfb	??_motor_isr+3,w,c
 46819  00BBC2  A0D8               	btfss	status,0,c
 46820  00BBC4  D002               	goto	i2l2501
 46821  00BBC6                     i2u1865_40:
 46822                           
 46823                           ; BSR set to: 0
 46824                           ;motor.c: 478: {;motor.c: 481: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46825                           
 46826                           ; BSR set to: 0
 46827  00BBC6  90D8               	bcf	status,0,c
 46828  00BBC8  D060               	goto	L74
 46829  00BBCA                     i2l2501:
 46830                           
 46831                           ;motor.c: 483: else;motor.c: 484: {;motor.c: 486: ++motor_current_speed;
 46832                           
 46833                           ; BSR set to: 2
 46834  00BBCA  0100               	movlb	0	; () banked
 46835  00BBCC  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 46836  00BBCE  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 46837                           
 46838                           ; BSR set to: 0
 46839                           ;motor.c: 490: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 46840  00BBD0  0EFD               	movlw	low _motor_prescaler_lookup
 46841  00BBD2  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46842  00BBD4  6EF6               	movwf	tblptrl,c
 46843  00BBD6  0E9B               	movlw	high _motor_prescaler_lookup
 46844  00BBD8  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46845  00BBDA  6EF7               	movwf	tblptrh,c
 46846  00BBDC                     	if	1	;There are 3 active tblptr bytes
 46847  00BBDC  6AF8               	clrf	tblptru,c
 46848  00BBDE  0E00               	movlw	low (__mediumconst shr (0+16))
 46849  00BBE0  22F8               	addwfc	tblptru,f,c
 46850  00BBE2                     	endif
 46851  00BBE2  0008               	tblrd		*
 46852  00BBE4  CFF5 F02C          	movff	tablat,??_motor_isr
 46853  00BBE8  50CA               	movf	4042,w,c	;volatile
 46854  00BBEA  182C               	xorwf	??_motor_isr,w,c
 46855  00BBEC  0BFC               	andlw	-4
 46856  00BBEE  182C               	xorwf	??_motor_isr,w,c
 46857  00BBF0  6ECA               	movwf	4042,c	;volatile
 46858                           
 46859                           ; BSR set to: 0
 46860                           ;motor.c: 492: PR2 = motor_period_lookup[motor_current_speed];
 46861  00BBF2  0E16               	movlw	low _motor_period_lookup
 46862  00BBF4  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46863  00BBF6  6EF6               	movwf	tblptrl,c
 46864  00BBF8  0E9A               	movlw	high _motor_period_lookup
 46865  00BBFA  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46866  00BBFC  6EF7               	movwf	tblptrh,c
 46867  00BBFE                     	if	1	;There are 3 active tblptr bytes
 46868  00BBFE  6AF8               	clrf	tblptru,c
 46869  00BC00  0E00               	movlw	low (__mediumconst shr (0+16))
 46870  00BC02  22F8               	addwfc	tblptru,f,c
 46871  00BC04                     	endif
 46872  00BC04  0008               	tblrd		*
 46873  00BC06  CFF5 FFCB          	movff	tablat,4043	;volatile
 46874                           
 46875                           ; BSR set to: 0
 46876                           ;motor.c: 494: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 46877  00BC0A  0E2F               	movlw	low _motor_postscaler_lookup
 46878  00BC0C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46879  00BC0E  6EF6               	movwf	tblptrl,c
 46880  00BC10  0E98               	movlw	high _motor_postscaler_lookup
 46881  00BC12  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46882  00BC14  6EF7               	movwf	tblptrh,c
 46883  00BC16                     	if	1	;There are 3 active tblptr bytes
 46884  00BC16  6AF8               	clrf	tblptru,c
 46885  00BC18  0E00               	movlw	low (__mediumconst shr (0+16))
 46886  00BC1A  22F8               	addwfc	tblptru,f,c
 46887  00BC1C                     	endif
 46888  00BC1C  0008               	tblrd		*
 46889  00BC1E  CFF5 F02C          	movff	tablat,??_motor_isr
 46890  00BC22  462C               	rlncf	??_motor_isr,f,c
 46891  00BC24  462C               	rlncf	??_motor_isr,f,c
 46892  00BC26  462C               	rlncf	??_motor_isr,f,c
 46893  00BC28  50CA               	movf	4042,w,c	;volatile
 46894  00BC2A  182C               	xorwf	??_motor_isr,w,c
 46895  00BC2C  0B87               	andlw	-121
 46896  00BC2E  182C               	xorwf	??_motor_isr,w,c
 46897  00BC30  6ECA               	movwf	4042,c	;volatile
 46898                           
 46899                           ; BSR set to: 0
 46900                           ;motor.c: 496: CCPR1L = PR2>>1;
 46901  00BC32  90D8               	bcf	status,0,c
 46902  00BC34  30CB               	rrcf	4043,w,c	;volatile
 46903  00BC36  6EBB               	movwf	4027,c	;volatile
 46904                           
 46905                           ; BSR set to: 0
 46906                           ;motor.c: 498: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 46907  00BC38  0101               	movlb	1	; () banked
 46908  00BC3A  5156               	movf	_motor_mode& (0+255),w,b
 46909  00BC3C  A4D8               	btfss	status,2,c
 46910  00BC3E  D023               	goto	i2l2505
 46911                           
 46912                           ; BSR set to: 1
 46913  00BC40  0E2F               	movlw	low _motor_postscaler_lookup
 46914  00BC42  0100               	movlb	0	; () banked
 46915  00BC44  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 46916  00BC46  6EF6               	movwf	tblptrl,c
 46917  00BC48  0E98               	movlw	high _motor_postscaler_lookup
 46918  00BC4A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46919  00BC4C  6EF7               	movwf	tblptrh,c
 46920  00BC4E                     	if	1	;There are 3 active tblptr bytes
 46921  00BC4E  6AF8               	clrf	tblptru,c
 46922  00BC50  0E00               	movlw	low (__mediumconst shr (0+16))
 46923  00BC52  22F8               	addwfc	tblptru,f,c
 46924  00BC54                     	endif
 46925  00BC54  0008               	tblrd		*
 46926  00BC56  50F5               	movf	tablat,w,c
 46927  00BC58  0900               	iorlw	0
 46928  00BC5A  A4D8               	btfss	status,2,c
 46929  00BC5C  D014               	goto	i2l2505
 46930                           
 46931                           ; BSR set to: 0
 46932                           ;motor.c: 499: {;motor.c: 501: motor_mode = MOTOR_MODE_PWM;
 46933  00BC5E  0E01               	movlw	1
 46934  00BC60  0101               	movlb	1	; () banked
 46935  00BC62  6F56               	movwf	_motor_mode& (0+255),b
 46936                           
 46937                           ;motor.c: 504: CCP1CONbits.CCP1M = 0b1100;
 46938  00BC64  50BA               	movf	4026,w,c	;volatile
 46939  00BC66  0BF0               	andlw	-16
 46940  00BC68  090C               	iorlw	12
 46941  00BC6A  6EBA               	movwf	4026,c	;volatile
 46942                           
 46943                           ;motor.c: 507: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 46944  00BC6C  0E55               	movlw	85
 46945  00BC6E  6EA7               	movwf	4007,c	;volsfr
 46946  00BC70  0EAA               	movlw	170
 46947  00BC72  6EA7               	movwf	4007,c	;volsfr
 46948                           
 46949                           ; BSR set to: 1
 46950  00BC74  010E               	movlb	14	; () banked
 46951  00BC76  91BF               	bcf	191,0,b	;volatile
 46952                           
 46953                           ;motor.c: 508: RPOR4 = 14;
 46954  00BC78  0E0E               	movlw	14
 46955  00BC7A  6FC4               	movwf	196,b	;volatile
 46956                           
 46957                           ;motor.c: 509: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 46958  00BC7C  0E55               	movlw	85
 46959  00BC7E  6EA7               	movwf	4007,c	;volsfr
 46960  00BC80  0EAA               	movlw	170
 46961  00BC82  6EA7               	movwf	4007,c	;volsfr
 46962                           
 46963                           ; BSR set to: 14
 46964  00BC84  81BF               	bsf	191,0,b	;volatile
 46965  00BC86                     i2l2505:
 46966                           
 46967                           ;motor.c: 510: };motor.c: 513: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 46968                           
 46969                           ; BSR set to: 14
 46970  00BC86  90D8               	bcf	status,0,c
 46971  00BC88  0100               	movlb	0	; () banked
 46972  00BC8A                     L74:
 46973  00BC8A  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 46974  00BC8C  6EF6               	movwf	tblptrl,c
 46975  00BC8E  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 46976  00BC90  6EF7               	movwf	tblptrh,c
 46977  00BC92  0E61               	movlw	low _motor_steps_lookup
 46978  00BC94  26F6               	addwf	tblptrl,f,c
 46979  00BC96  0E94               	movlw	high _motor_steps_lookup
 46980  00BC98  22F7               	addwfc	tblptrh,f,c
 46981  00BC9A                     	if	1	;There are 3 active tblptr bytes
 46982  00BC9A  6AF8               	clrf	tblptru,c
 46983  00BC9C  0E00               	movlw	low (__mediumconst shr (0+16))
 46984  00BC9E  22F8               	addwfc	tblptru,f,c
 46985  00BCA0                     	endif
 46986  00BCA0  0009               	tblrd		*+
 46987  00BCA2  CFF5 F02C          	movff	tablat,??_motor_isr
 46988  00BCA6  0009               	tblrd		*+
 46989  00BCA8  CFF5 F02D          	movff	tablat,??_motor_isr+1
 46990  00BCAC  502C               	movf	??_motor_isr,w,c
 46991  00BCAE  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 46992  00BCB0  502D               	movf	??_motor_isr+1,w,c
 46993  00BCB2  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 46994  00BCB4  6A30               	clrf	(??_motor_isr+4)& (0+255),c
 46995  00BCB6  6A31               	clrf	(??_motor_isr+5)& (0+255),c
 46996  00BCB8  1E2E               	comf	??_motor_isr+2,f,c
 46997  00BCBA  1E2F               	comf	??_motor_isr+3,f,c
 46998  00BCBC  1E30               	comf	??_motor_isr+4,f,c
 46999  00BCBE  1E31               	comf	??_motor_isr+5,f,c
 47000  00BCC0  2A2E               	incf	??_motor_isr+2,f,c
 47001  00BCC2  0E00               	movlw	0
 47002  00BCC4  222F               	addwfc	??_motor_isr+3,f,c
 47003  00BCC6  2230               	addwfc	??_motor_isr+4,f,c
 47004  00BCC8  2231               	addwfc	??_motor_isr+5,f,c
 47005  00BCCA  C0FE  F032         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 47006  00BCCE  C0FF  F033         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 47007  00BCD2  90D8               	bcf	status,0,c
 47008  00BCD4  3632               	rlcf	??_motor_isr+6,f,c
 47009  00BCD6  3633               	rlcf	??_motor_isr+7,f,c
 47010  00BCD8  0E02               	movlw	2
 47011  00BCDA  2632               	addwf	??_motor_isr+6,f,c
 47012  00BCDC  0E00               	movlw	0
 47013  00BCDE  2233               	addwfc	??_motor_isr+7,f,c
 47014  00BCE0  0E61               	movlw	low _motor_steps_lookup
 47015  00BCE2  2432               	addwf	??_motor_isr+6,w,c
 47016  00BCE4  6EF6               	movwf	tblptrl,c
 47017  00BCE6  0E94               	movlw	high _motor_steps_lookup
 47018  00BCE8  2033               	addwfc	??_motor_isr+7,w,c
 47019  00BCEA  6EF7               	movwf	tblptrh,c
 47020  00BCEC                     	if	1	;There are 3 active tblptr bytes
 47021  00BCEC  6AF8               	clrf	tblptru,c
 47022  00BCEE  0E00               	movlw	low (__mediumconst shr (0+16))
 47023  00BCF0  22F8               	addwfc	tblptru,f,c
 47024  00BCF2                     	endif
 47025  00BCF2  0009               	tblrd		*+
 47026  00BCF4  CFF5 F034          	movff	tablat,??_motor_isr+8
 47027  00BCF8  0009               	tblrd		*+
 47028  00BCFA  CFF5 F035          	movff	tablat,??_motor_isr+9
 47029  00BCFE  5034               	movf	??_motor_isr+8,w,c
 47030  00BD00  242E               	addwf	??_motor_isr+2,w,c
 47031  00BD02  6E36               	movwf	(??_motor_isr+10)& (0+255),c
 47032  00BD04  5035               	movf	??_motor_isr+9,w,c
 47033  00BD06  202F               	addwfc	??_motor_isr+3,w,c
 47034  00BD08  6E37               	movwf	(??_motor_isr+11)& (0+255),c
 47035  00BD0A  0E00               	movlw	0
 47036  00BD0C  2030               	addwfc	??_motor_isr+4,w,c
 47037  00BD0E  6E38               	movwf	(??_motor_isr+12)& (0+255),c
 47038  00BD10  0E00               	movlw	0
 47039  00BD12  2031               	addwfc	??_motor_isr+5,w,c
 47040  00BD14  6E39               	movwf	(??_motor_isr+13)& (0+255),c
 47041  00BD16  5058               	movf	_motor_current_stepcount,w,c	;volatile
 47042  00BD18  2436               	addwf	??_motor_isr+10,w,c
 47043  00BD1A  0102               	movlb	2	; () banked
 47044  00BD1C  6F26               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47045  00BD1E  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 47046  00BD20  2037               	addwfc	??_motor_isr+11,w,c
 47047  00BD22  6F27               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47048  00BD24  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 47049  00BD26  2038               	addwfc	??_motor_isr+12,w,c
 47050  00BD28  6F28               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47051  00BD2A  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 47052  00BD2C  2039               	addwfc	??_motor_isr+13,w,c
 47053  00BD2E                     L75:
 47054  00BD2E  6F29               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47055  00BD30                     i2l2504:
 47056                           
 47057                           ; BSR set to: 2
 47058                           ;motor.c: 514: };motor.c: 515: };motor.c: 518: if(PIR1bits.TMR2IF)
 47059                           
 47060                           ; BSR set to: 2
 47061                           
 47062                           ; BSR set to: 2
 47063                           
 47064                           ; BSR set to: 2
 47065  00BD30  A29E               	btfss	3998,1,c	;volatile
 47066  00BD32  0012               	return	
 47067                           
 47068                           ; BSR set to: 2
 47069                           ;motor.c: 519: {;motor.c: 521: PIR1bits.TMR2IF = 0;
 47070  00BD34  929E               	bcf	3998,1,c	;volatile
 47071                           
 47072                           ; BSR set to: 2
 47073                           ;motor.c: 523: ++motor_current_stepcount;
 47074  00BD36  0E01               	movlw	1
 47075  00BD38  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 47076  00BD3A  0E00               	movlw	0
 47077  00BD3C  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 47078  00BD3E  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 47079  00BD40  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 47080                           
 47081                           ;motor.c: 526: os.current_position_in_steps += motor_direction;
 47082  00BD42  0101               	movlb	1	; () banked
 47083  00BD44  5155               	movf	_motor_direction& (0+255),w,b
 47084  00BD46  6E2C               	movwf	??_motor_isr& (0+255),c
 47085  00BD48  0E00               	movlw	0
 47086  00BD4A  BE2C               	btfsc	??_motor_isr& (0+255),7,c
 47087  00BD4C  0EFF               	movlw	255
 47088  00BD4E  6E2D               	movwf	(??_motor_isr+1)& (0+255),c
 47089  00BD50  6E2E               	movwf	(??_motor_isr+2)& (0+255),c
 47090  00BD52  6E2F               	movwf	(??_motor_isr+3)& (0+255),c
 47091  00BD54  502C               	movf	??_motor_isr,w,c
 47092  00BD56  2778               	addwf	(_os+7)& (0+255),f,b	;volatile
 47093  00BD58  502D               	movf	??_motor_isr+1,w,c
 47094  00BD5A  2379               	addwfc	(_os+8)& (0+255),f,b	;volatile
 47095  00BD5C  502E               	movf	??_motor_isr+2,w,c
 47096  00BD5E  237A               	addwfc	(_os+9)& (0+255),f,b	;volatile
 47097  00BD60  502F               	movf	??_motor_isr+3,w,c
 47098  00BD62  237B               	addwfc	(_os+10)& (0+255),f,b	;volatile
 47099                           
 47100                           ;motor.c: 527: if(os.current_position_in_steps==config.full_circle_in_steps)
 47101  00BD64  51A1               	movf	_config& (0+255),w,b
 47102  00BD66  1978               	xorwf	(_os+7)& (0+255),w,b	;volatile
 47103  00BD68  E112               	bnz	i2l18665
 47104  00BD6A  51A2               	movf	(_config+1)& (0+255),w,b
 47105  00BD6C  1979               	xorwf	(_os+8)& (0+255),w,b	;volatile
 47106  00BD6E  E10F               	bnz	i2l18665
 47107  00BD70  51A3               	movf	(_config+2)& (0+255),w,b
 47108  00BD72  197A               	xorwf	(_os+9)& (0+255),w,b	;volatile
 47109  00BD74  E10C               	bnz	i2l18665
 47110  00BD76  51A4               	movf	(_config+3)& (0+255),w,b
 47111  00BD78  197B               	xorwf	(_os+10)& (0+255),w,b	;volatile
 47112  00BD7A  A4D8               	btfss	status,2,c
 47113  00BD7C  D008               	goto	i2l2507
 47114                           
 47115                           ; BSR set to: 1
 47116                           ;motor.c: 528: os.current_position_in_steps = 0;
 47117  00BD7E  0E00               	movlw	0
 47118  00BD80  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 47119  00BD82  0E00               	movlw	0
 47120  00BD84  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 47121  00BD86  0E00               	movlw	0
 47122  00BD88  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 47123  00BD8A  0E00               	movlw	0
 47124  00BD8C  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 47125  00BD8E                     i2l2507:
 47126  00BD8E                     i2l18665:
 47127                           
 47128                           ; BSR set to: 1
 47129                           ;motor.c: 529: if(os.current_position_in_steps==0xFFFFFFFF)
 47130  00BD8E  2978               	incf	(_os+7)& (0+255),w,b	;volatile
 47131  00BD90  E114               	bnz	i2l2488
 47132  00BD92  2979               	incf	(_os+8)& (0+255),w,b	;volatile
 47133  00BD94  E112               	bnz	i2l2488
 47134  00BD96  297A               	incf	(_os+9)& (0+255),w,b	;volatile
 47135  00BD98  E110               	bnz	i2l2488
 47136  00BD9A  297B               	incf	(_os+10)& (0+255),w,b	;volatile
 47137  00BD9C  A4D8               	btfss	status,2,c
 47138  00BD9E  0012               	return	
 47139                           
 47140                           ; BSR set to: 1
 47141                           ;motor.c: 530: os.current_position_in_steps = (config.full_circle_in_steps-1);
 47142  00BDA0  0EFF               	movlw	255
 47143  00BDA2  25A1               	addwf	_config& (0+255),w,b
 47144  00BDA4  6F78               	movwf	(_os+7)& (0+255),b	;volatile
 47145  00BDA6  0EFF               	movlw	255
 47146  00BDA8  21A2               	addwfc	(_config+1)& (0+255),w,b
 47147  00BDAA  6F79               	movwf	(_os+8)& (0+255),b	;volatile
 47148  00BDAC  0EFF               	movlw	255
 47149  00BDAE  21A3               	addwfc	(_config+2)& (0+255),w,b
 47150  00BDB0  6F7A               	movwf	(_os+9)& (0+255),b	;volatile
 47151  00BDB2  0EFF               	movlw	255
 47152  00BDB4  21A4               	addwfc	(_config+3)& (0+255),w,b
 47153  00BDB6  6F7B               	movwf	(_os+10)& (0+255),b	;volatile
 47154                           
 47155                           ; BSR set to: 1
 47156  00BDB8  0012               	return	
 47157  00BDBA                     i2l2488:
 47158  00BDBA  0012               	return		;funcret
 47159  00BDBC                     __end_of_motor_isr:
 47160                           	opt stack 0
 47161                           tosu	equ	0xFFF
 47162                           tosh	equ	0xFFE
 47163                           tosl	equ	0xFFD
 47164                           pclatu	equ	0xFFB
 47165                           pclath	equ	0xFFA
 47166                           tblptru	equ	0xFF8
 47167                           tblptrh	equ	0xFF7
 47168                           tblptrl	equ	0xFF6
 47169                           tablat	equ	0xFF5
 47170                           prodh	equ	0xFF4
 47171                           prodl	equ	0xFF3
 47172                           intcon	equ	0xFF2
 47173                           indf0	equ	0xFEF
 47174                           postinc0	equ	0xFEE
 47175                           fsr0h	equ	0xFEA
 47176                           fsr0l	equ	0xFE9
 47177                           wreg	equ	0xFE8
 47178                           indf1	equ	0xFE7
 47179                           postinc1	equ	0xFE6
 47180                           postdec1	equ	0xFE5
 47181                           plusw1	equ	0xFE3
 47182                           fsr1h	equ	0xFE2
 47183                           fsr1l	equ	0xFE1
 47184                           indf2	equ	0xFDF
 47185                           postinc2	equ	0xFDE
 47186                           postdec2	equ	0xFDD
 47187                           plusw2	equ	0xFDB
 47188                           fsr2h	equ	0xFDA
 47189                           fsr2l	equ	0xFD9
 47190                           status	equ	0xFD8
 47191                           
 47192 ;; *************** function _i2c_eeprom_writeUint32 *****************
 47193 ;; Defined at:
 47194 ;;		line 230 in file "i2c.c"
 47195 ;; Parameters:    Size  Location     Type
 47196 ;;  address         2   37[COMRAM] unsigned int 
 47197 ;;  data            4   39[COMRAM] unsigned long 
 47198 ;; Auto vars:     Size  Location     Type
 47199 ;;		None
 47200 ;; Return value:  Size  Location     Type
 47201 ;;                  1    wreg      void 
 47202 ;; Registers used:
 47203 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47204 ;; Tracked objects:
 47205 ;;		On entry : 0/0
 47206 ;;		On exit  : 0/0
 47207 ;;		Unchanged: 0/0
 47208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47209 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47212 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47213 ;;Total ram usage:        6 bytes
 47214 ;; Hardware stack levels used:    1
 47215 ;; Hardware stack levels required when called:    3
 47216 ;; This function calls:
 47217 ;;		_i2c_eeprom_write
 47218 ;; This function is called by:
 47219 ;;		_motor_isr
 47220 ;; This function uses a non-reentrant model
 47221 ;;
 47222                           
 47223                           	psect	text189
 47224  015918                     __ptext189:
 47225                           	opt stack 0
 47226  015918                     _i2c_eeprom_writeUint32:
 47227                           	opt stack 13
 47228                           
 47229                           ;i2c.c: 232: i2c_eeprom_write(address, &data, 4);
 47230                           
 47231                           ;incstack = 0
 47232  015918  C026  F00B         	movff	i2c_eeprom_writeUint32@address,i2c_eeprom_write@address
 47233  01591C  C027  F00C         	movff	i2c_eeprom_writeUint32@address+1,i2c_eeprom_write@address+1
 47234  015920  0E28               	movlw	low i2c_eeprom_writeUint32@data
 47235  015922  6E0D               	movwf	i2c_eeprom_write@data,c
 47236  015924  0E00               	movlw	high i2c_eeprom_writeUint32@data
 47237  015926  6E0E               	movwf	i2c_eeprom_write@data+1,c
 47238  015928  0E04               	movlw	4
 47239  01592A  6E0F               	movwf	i2c_eeprom_write@length,c
 47240  01592C  ECCE  F09D         	call	_i2c_eeprom_write	;wreg free
 47241  015930  0012               	return		;funcret
 47242  015932                     __end_of_i2c_eeprom_writeUint32:
 47243                           	opt stack 0
 47244                           tosu	equ	0xFFF
 47245                           tosh	equ	0xFFE
 47246                           tosl	equ	0xFFD
 47247                           pclatu	equ	0xFFB
 47248                           pclath	equ	0xFFA
 47249                           tblptru	equ	0xFF8
 47250                           tblptrh	equ	0xFF7
 47251                           tblptrl	equ	0xFF6
 47252                           tablat	equ	0xFF5
 47253                           prodh	equ	0xFF4
 47254                           prodl	equ	0xFF3
 47255                           intcon	equ	0xFF2
 47256                           indf0	equ	0xFEF
 47257                           postinc0	equ	0xFEE
 47258                           fsr0h	equ	0xFEA
 47259                           fsr0l	equ	0xFE9
 47260                           wreg	equ	0xFE8
 47261                           indf1	equ	0xFE7
 47262                           postinc1	equ	0xFE6
 47263                           postdec1	equ	0xFE5
 47264                           plusw1	equ	0xFE3
 47265                           fsr1h	equ	0xFE2
 47266                           fsr1l	equ	0xFE1
 47267                           indf2	equ	0xFDF
 47268                           postinc2	equ	0xFDE
 47269                           postdec2	equ	0xFDD
 47270                           plusw2	equ	0xFDB
 47271                           fsr2h	equ	0xFDA
 47272                           fsr2l	equ	0xFD9
 47273                           status	equ	0xFD8
 47274                           
 47275 ;; *************** function _i2c_eeprom_write *****************
 47276 ;; Defined at:
 47277 ;;		line 242 in file "i2c.c"
 47278 ;; Parameters:    Size  Location     Type
 47279 ;;  address         2   10[COMRAM] unsigned int 
 47280 ;;  data            2   12[COMRAM] PTR unsigned char 
 47281 ;;		 -> i2c_eeprom_writeUint32@data(4), i2c_eeprom_writeUint16@data(2), 
 47282 ;;  length          1   14[COMRAM] unsigned char 
 47283 ;; Auto vars:     Size  Location     Type
 47284 ;;  dat            17   18[COMRAM] unsigned char [17]
 47285 ;;  cntr            1   36[COMRAM] unsigned char 
 47286 ;;  slave_addres    1   35[COMRAM] unsigned char 
 47287 ;; Return value:  Size  Location     Type
 47288 ;;                  1    wreg      void 
 47289 ;; Registers used:
 47290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47291 ;; Tracked objects:
 47292 ;;		On entry : 0/0
 47293 ;;		On exit  : 0/0
 47294 ;;		Unchanged: 0/0
 47295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47296 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47297 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47298 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47299 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47300 ;;Total ram usage:       27 bytes
 47301 ;; Hardware stack levels used:    1
 47302 ;; Hardware stack levels required when called:    2
 47303 ;; This function calls:
 47304 ;;		i2__i2c_eeprom_busy
 47305 ;;		i2__i2c_write
 47306 ;; This function is called by:
 47307 ;;		_i2c_eeprom_writeUint32
 47308 ;;		_i2c_eeprom_writeUint16
 47309 ;; This function uses a non-reentrant model
 47310 ;;
 47311                           
 47312                           	psect	text190
 47313  013B9C                     __ptext190:
 47314                           	opt stack 0
 47315  013B9C                     _i2c_eeprom_write:
 47316                           	opt stack 13
 47317                           
 47318                           ;i2c.c: 244: uint8_t cntr;;i2c.c: 245: uint8_t slave_address;;i2c.c: 246: uint8_t dat[17
      +                          ];;i2c.c: 248: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 47319                           
 47320                           ;incstack = 0
 47321  013B9C  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 47322  013BA0  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 47323  013BA4  0E07               	movlw	7
 47324  013BA6  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 47325  013BA8                     i2u1414_45:
 47326  013BA8  90D8               	bcf	status,0,c
 47327  013BAA  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 47328  013BAC  3210               	rrcf	??_i2c_eeprom_write,f,c
 47329  013BAE  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 47330  013BB0  D7FB               	goto	i2u1414_45
 47331  013BB2  5010               	movf	??_i2c_eeprom_write,w,c
 47332  013BB4  0B0E               	andlw	14
 47333  013BB6  09A0               	iorlw	160
 47334  013BB8  6E24               	movwf	i2c_eeprom_write@slave_address,c
 47335                           
 47336                           ;i2c.c: 249: dat[0] = address & 0xFF;
 47337  013BBA  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 47338                           
 47339                           ;i2c.c: 251: length &= 0b00001111;
 47340  013BBE  0E0F               	movlw	15
 47341  013BC0  160F               	andwf	i2c_eeprom_write@length,f,c
 47342                           
 47343                           ;i2c.c: 252: for(cntr=0; cntr<length; ++cntr)
 47344  013BC2  0E00               	movlw	0
 47345  013BC4  6E25               	movwf	i2c_eeprom_write@cntr,c
 47346  013BC6  D018               	goto	i2l1203
 47347  013BC8                     
 47348                           ;i2c.c: 253: {;i2c.c: 254: dat[cntr+1] = data[cntr];
 47349  013BC8  5025               	movf	i2c_eeprom_write@cntr,w,c
 47350  013BCA  0D01               	mullw	1
 47351  013BCC  50F3               	movf	prodl,w,c
 47352  013BCE  240D               	addwf	i2c_eeprom_write@data,w,c
 47353  013BD0  6ED9               	movwf	fsr2l,c
 47354  013BD2  50F4               	movf	prodh,w,c
 47355  013BD4  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 47356  013BD6  6EDA               	movwf	fsr2h,c
 47357  013BD8  5025               	movf	i2c_eeprom_write@cntr,w,c
 47358  013BDA  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 47359  013BDC  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 47360  013BDE  0E01               	movlw	1
 47361  013BE0  2610               	addwf	??_i2c_eeprom_write,f,c
 47362  013BE2  0E00               	movlw	0
 47363  013BE4  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 47364  013BE6  0E13               	movlw	low i2c_eeprom_write@dat
 47365  013BE8  2410               	addwf	??_i2c_eeprom_write,w,c
 47366  013BEA  6EE1               	movwf	fsr1l,c
 47367  013BEC  0E00               	movlw	high i2c_eeprom_write@dat
 47368  013BEE  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 47369  013BF0  6EE2               	movwf	fsr1h,c
 47370  013BF2  CFDF FFE7          	movff	indf2,indf1
 47371  013BF6  2A25               	incf	i2c_eeprom_write@cntr,f,c
 47372  013BF8                     i2l1203:
 47373  013BF8  500F               	movf	i2c_eeprom_write@length,w,c
 47374  013BFA  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 47375  013BFC  A0D8               	btfss	status,0,c
 47376  013BFE  D7E4               	goto	i2l1204
 47377  013C00                     i2u1415_40:
 47378                           
 47379                           ;i2c.c: 255: };i2c.c: 258: while(_i2c_eeprom_busy());
 47380  013C00  ECAB  F0AB         	call	i2__i2c_eeprom_busy	;wreg free
 47381  013C04  0900               	iorlw	0
 47382  013C06  A4D8               	btfss	status,2,c
 47383  013C08  D7FB               	goto	i2u1415_40
 47384                           
 47385                           ;i2c.c: 260: _i2c_write(slave_address, &dat[0], length+1);
 47386  013C0A  0E13               	movlw	low i2c_eeprom_write@dat
 47387  013C0C  6E06               	movwf	i2__i2c_write@data,c
 47388  013C0E  0E00               	movlw	high i2c_eeprom_write@dat
 47389  013C10  6E07               	movwf	i2__i2c_write@data+1,c
 47390  013C12  280F               	incf	i2c_eeprom_write@length,w,c
 47391  013C14  6E08               	movwf	i2__i2c_write@length,c
 47392  013C16  5024               	movf	i2c_eeprom_write@slave_address,w,c
 47393  013C18  ECAE  F0A7         	call	i2__i2c_write
 47394  013C1C  0012               	return		;funcret
 47395  013C1E                     __end_of_i2c_eeprom_write:
 47396                           	opt stack 0
 47397                           tosu	equ	0xFFF
 47398                           tosh	equ	0xFFE
 47399                           tosl	equ	0xFFD
 47400                           pclatu	equ	0xFFB
 47401                           pclath	equ	0xFFA
 47402                           tblptru	equ	0xFF8
 47403                           tblptrh	equ	0xFF7
 47404                           tblptrl	equ	0xFF6
 47405                           tablat	equ	0xFF5
 47406                           prodh	equ	0xFF4
 47407                           prodl	equ	0xFF3
 47408                           intcon	equ	0xFF2
 47409                           indf0	equ	0xFEF
 47410                           postinc0	equ	0xFEE
 47411                           fsr0h	equ	0xFEA
 47412                           fsr0l	equ	0xFE9
 47413                           wreg	equ	0xFE8
 47414                           indf1	equ	0xFE7
 47415                           postinc1	equ	0xFE6
 47416                           postdec1	equ	0xFE5
 47417                           plusw1	equ	0xFE3
 47418                           fsr1h	equ	0xFE2
 47419                           fsr1l	equ	0xFE1
 47420                           indf2	equ	0xFDF
 47421                           postinc2	equ	0xFDE
 47422                           postdec2	equ	0xFDD
 47423                           plusw2	equ	0xFDB
 47424                           fsr2h	equ	0xFDA
 47425                           fsr2l	equ	0xFD9
 47426                           status	equ	0xFD8
 47427                           
 47428 ;; *************** function i2__i2c_write *****************
 47429 ;; Defined at:
 47430 ;;		line 84 in file "i2c.c"
 47431 ;; Parameters:    Size  Location     Type
 47432 ;;  slave_addres    1    wreg     unsigned char 
 47433 ;;  data            2    5[COMRAM] PTR unsigned char 
 47434 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 47435 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 47436 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 47437 ;;  length          1    7[COMRAM] unsigned char 
 47438 ;; Auto vars:     Size  Location     Type
 47439 ;;  slave_addres    1    8[COMRAM] unsigned char 
 47440 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 47441 ;; Return value:  Size  Location     Type
 47442 ;;                  1    wreg      void 
 47443 ;; Registers used:
 47444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 47445 ;; Tracked objects:
 47446 ;;		On entry : 0/0
 47447 ;;		On exit  : 0/0
 47448 ;;		Unchanged: 0/0
 47449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47450 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47451 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47453 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47454 ;;Total ram usage:        5 bytes
 47455 ;; Hardware stack levels used:    1
 47456 ;; Hardware stack levels required when called:    1
 47457 ;; This function calls:
 47458 ;;		i2__i2c_send
 47459 ;;		i2__i2c_start
 47460 ;;		i2__i2c_stop
 47461 ;;		i2__i2c_wait_idle
 47462 ;; This function is called by:
 47463 ;;		_i2c_eeprom_write
 47464 ;; This function uses a non-reentrant model
 47465 ;;
 47466                           
 47467                           	psect	text191
 47468  014F5C                     __ptext191:
 47469                           	opt stack 0
 47470  014F5C                     i2__i2c_write:
 47471                           	opt stack 13
 47472                           
 47473                           ;incstack = 0
 47474                           ;i2__i2c_write@slave_address stored from wreg
 47475  014F5C  6E09               	movwf	i2__i2c_write@slave_address,c
 47476                           
 47477                           ;i2c.c: 86: uint8_t cntr;;i2c.c: 88: _i2c_wait_idle();
 47478  014F5E  ECD7  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47479                           
 47480                           ;i2c.c: 89: _i2c_start();
 47481  014F62  EC31  F0AD         	call	i2__i2c_start	;wreg free
 47482                           
 47483                           ;i2c.c: 90: _i2c_wait_idle();
 47484  014F66  ECD7  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47485                           
 47486                           ;i2c.c: 91: _i2c_send(slave_address);
 47487  014F6A  5009               	movf	i2__i2c_write@slave_address,w,c
 47488  014F6C  EC35  F0AD         	call	i2__i2c_send
 47489                           
 47490                           ;i2c.c: 92: _i2c_wait_idle();
 47491  014F70  ECD7  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47492                           
 47493                           ;i2c.c: 94: for(cntr=0; cntr<length; ++cntr)
 47494  014F74  0E00               	movlw	0
 47495  014F76  6E0A               	movwf	i2__i2c_write@cntr,c
 47496  014F78  D00E               	goto	i2l1158
 47497  014F7A                     
 47498                           ;i2c.c: 95: {;i2c.c: 96: _i2c_send(data[cntr]);
 47499  014F7A  500A               	movf	i2__i2c_write@cntr,w,c
 47500  014F7C  0D01               	mullw	1
 47501  014F7E  50F3               	movf	prodl,w,c
 47502  014F80  2406               	addwf	i2__i2c_write@data,w,c
 47503  014F82  6ED9               	movwf	fsr2l,c
 47504  014F84  50F4               	movf	prodh,w,c
 47505  014F86  2007               	addwfc	i2__i2c_write@data+1,w,c
 47506  014F88  6EDA               	movwf	fsr2h,c
 47507  014F8A  50DF               	movf	indf2,w,c
 47508  014F8C  EC35  F0AD         	call	i2__i2c_send
 47509                           
 47510                           ;i2c.c: 97: _i2c_wait_idle();
 47511  014F90  ECD7  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47512  014F94  2A0A               	incf	i2__i2c_write@cntr,f,c
 47513  014F96                     i2l1158:
 47514  014F96  5008               	movf	i2__i2c_write@length,w,c
 47515  014F98  5C0A               	subwf	i2__i2c_write@cntr,w,c
 47516  014F9A  A0D8               	btfss	status,0,c
 47517  014F9C  D7EE               	goto	i2l1159
 47518                           
 47519                           ;i2c.c: 98: };i2c.c: 100: _i2c_stop();
 47520  014F9E  EC2D  F0AD         	call	i2__i2c_stop	;wreg free
 47521  014FA2  0012               	return		;funcret
 47522  014FA4                     __end_ofi2__i2c_write:
 47523                           	opt stack 0
 47524                           tosu	equ	0xFFF
 47525                           tosh	equ	0xFFE
 47526                           tosl	equ	0xFFD
 47527                           pclatu	equ	0xFFB
 47528                           pclath	equ	0xFFA
 47529                           tblptru	equ	0xFF8
 47530                           tblptrh	equ	0xFF7
 47531                           tblptrl	equ	0xFF6
 47532                           tablat	equ	0xFF5
 47533                           prodh	equ	0xFF4
 47534                           prodl	equ	0xFF3
 47535                           intcon	equ	0xFF2
 47536                           indf0	equ	0xFEF
 47537                           postinc0	equ	0xFEE
 47538                           fsr0h	equ	0xFEA
 47539                           fsr0l	equ	0xFE9
 47540                           wreg	equ	0xFE8
 47541                           indf1	equ	0xFE7
 47542                           postinc1	equ	0xFE6
 47543                           postdec1	equ	0xFE5
 47544                           plusw1	equ	0xFE3
 47545                           fsr1h	equ	0xFE2
 47546                           fsr1l	equ	0xFE1
 47547                           indf2	equ	0xFDF
 47548                           postinc2	equ	0xFDE
 47549                           postdec2	equ	0xFDD
 47550                           plusw2	equ	0xFDB
 47551                           fsr2h	equ	0xFDA
 47552                           fsr2l	equ	0xFD9
 47553                           status	equ	0xFD8
 47554                           
 47555 ;; *************** function i2__i2c_eeprom_busy *****************
 47556 ;; Defined at:
 47557 ;;		line 169 in file "i2c.c"
 47558 ;; Parameters:    Size  Location     Type
 47559 ;;		None
 47560 ;; Auto vars:     Size  Location     Type
 47561 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 47562 ;; Return value:  Size  Location     Type
 47563 ;;                  1    wreg      unsigned char 
 47564 ;; Registers used:
 47565 ;;		wreg, status,2, status,0, cstack
 47566 ;; Tracked objects:
 47567 ;;		On entry : 0/0
 47568 ;;		On exit  : 0/0
 47569 ;;		Unchanged: 0/0
 47570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47575 ;;Total ram usage:        1 bytes
 47576 ;; Hardware stack levels used:    1
 47577 ;; Hardware stack levels required when called:    1
 47578 ;; This function calls:
 47579 ;;		i2__i2c_send
 47580 ;;		i2__i2c_start
 47581 ;;		i2__i2c_stop
 47582 ;;		i2__i2c_wait_idle
 47583 ;; This function is called by:
 47584 ;;		_i2c_eeprom_write
 47585 ;; This function uses a non-reentrant model
 47586 ;;
 47587                           
 47588                           	psect	text192
 47589  015756                     __ptext192:
 47590                           	opt stack 0
 47591  015756                     i2__i2c_eeprom_busy:
 47592                           	opt stack 13
 47593                           
 47594                           ;i2c.c: 171: uint8_t busy;;i2c.c: 172: _i2c_wait_idle();
 47595                           
 47596                           ;incstack = 0
 47597  015756  ECD7  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47598                           
 47599                           ;i2c.c: 173: _i2c_start();
 47600  01575A  EC31  F0AD         	call	i2__i2c_start	;wreg free
 47601                           
 47602                           ;i2c.c: 174: _i2c_wait_idle();
 47603  01575E  ECD7  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47604                           
 47605                           ;i2c.c: 175: _i2c_send(0b10100000);
 47606  015762  0EA0               	movlw	160
 47607  015764  EC35  F0AD         	call	i2__i2c_send
 47608                           
 47609                           ;i2c.c: 176: _i2c_wait_idle();
 47610  015768  ECD7  F0A4         	call	i2__i2c_wait_idle	;wreg free
 47611                           
 47612                           ;i2c.c: 180: busy = SSP1CON2bits.ACKSTAT;
 47613  01576C  0E00               	movlw	0
 47614  01576E  BCC5               	btfsc	4037,6,c	;volatile
 47615  015770  0E01               	movlw	1
 47616  015772  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 47617                           
 47618                           ;i2c.c: 181: _i2c_stop();
 47619  015774  EC2D  F0AD         	call	i2__i2c_stop	;wreg free
 47620                           
 47621                           ;i2c.c: 183: return 0;
 47622  015778  0E00               	movlw	0
 47623  01577A  0012               	return	
 47624  01577C                     __end_ofi2__i2c_eeprom_busy:
 47625                           	opt stack 0
 47626                           tosu	equ	0xFFF
 47627                           tosh	equ	0xFFE
 47628                           tosl	equ	0xFFD
 47629                           pclatu	equ	0xFFB
 47630                           pclath	equ	0xFFA
 47631                           tblptru	equ	0xFF8
 47632                           tblptrh	equ	0xFF7
 47633                           tblptrl	equ	0xFF6
 47634                           tablat	equ	0xFF5
 47635                           prodh	equ	0xFF4
 47636                           prodl	equ	0xFF3
 47637                           intcon	equ	0xFF2
 47638                           indf0	equ	0xFEF
 47639                           postinc0	equ	0xFEE
 47640                           fsr0h	equ	0xFEA
 47641                           fsr0l	equ	0xFE9
 47642                           wreg	equ	0xFE8
 47643                           indf1	equ	0xFE7
 47644                           postinc1	equ	0xFE6
 47645                           postdec1	equ	0xFE5
 47646                           plusw1	equ	0xFE3
 47647                           fsr1h	equ	0xFE2
 47648                           fsr1l	equ	0xFE1
 47649                           indf2	equ	0xFDF
 47650                           postinc2	equ	0xFDE
 47651                           postdec2	equ	0xFDD
 47652                           plusw2	equ	0xFDB
 47653                           fsr2h	equ	0xFDA
 47654                           fsr2l	equ	0xFD9
 47655                           status	equ	0xFD8
 47656                           
 47657 ;; *************** function i2__i2c_wait_idle *****************
 47658 ;; Defined at:
 47659 ;;		line 40 in file "i2c.c"
 47660 ;; Parameters:    Size  Location     Type
 47661 ;;		None
 47662 ;; Auto vars:     Size  Location     Type
 47663 ;;		None
 47664 ;; Return value:  Size  Location     Type
 47665 ;;                  1    wreg      void 
 47666 ;; Registers used:
 47667 ;;		wreg, status,2, status,0
 47668 ;; Tracked objects:
 47669 ;;		On entry : 0/0
 47670 ;;		On exit  : 0/0
 47671 ;;		Unchanged: 0/0
 47672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47675 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47676 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47677 ;;Total ram usage:        5 bytes
 47678 ;; Hardware stack levels used:    1
 47679 ;; This function calls:
 47680 ;;		Nothing
 47681 ;; This function is called by:
 47682 ;;		i2__i2c_write
 47683 ;;		i2__i2c_eeprom_busy
 47684 ;; This function uses a non-reentrant model
 47685 ;;
 47686                           
 47687                           	psect	text193
 47688  0149AE                     __ptext193:
 47689                           	opt stack 0
 47690  0149AE                     i2__i2c_wait_idle:
 47691                           	opt stack 13
 47692                           
 47693                           ;i2c.c: 42: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 47694                           
 47695                           ;incstack = 0
 47696  0149AE  A4C7               	btfss	4039,2,c	;volatile
 47697  0149B0  D003               	goto	i2u1291_40
 47698  0149B2  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47699  0149B4  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 47700  0149B6  D001               	goto	i2u1291_48
 47701  0149B8                     i2u1291_40:
 47702  0149B8  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 47703  0149BA                     i2u1291_48:
 47704  0149BA  A0C5               	btfss	4037,0,c	;volatile
 47705  0149BC  D003               	goto	i2u1292_40
 47706  0149BE  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47707  0149C0  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 47708  0149C2  D001               	goto	i2u1292_48
 47709  0149C4                     i2u1292_40:
 47710  0149C4  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 47711  0149C6                     i2u1292_48:
 47712  0149C6  A2C5               	btfss	4037,1,c	;volatile
 47713  0149C8  D003               	goto	i2u1293_40
 47714  0149CA  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47715  0149CC  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 47716  0149CE  D001               	goto	i2u1293_48
 47717  0149D0                     i2u1293_40:
 47718  0149D0  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 47719  0149D2                     i2u1293_48:
 47720  0149D2  A4C5               	btfss	4037,2,c	;volatile
 47721  0149D4  D003               	goto	i2u1294_40
 47722  0149D6  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47723  0149D8  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 47724  0149DA  D001               	goto	i2u1294_48
 47725  0149DC                     i2u1294_40:
 47726  0149DC  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 47727  0149DE                     i2u1294_48:
 47728  0149DE  A6C5               	btfss	4037,3,c	;volatile
 47729  0149E0  D003               	goto	i2u1295_40
 47730  0149E2  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47731  0149E4  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 47732  0149E6  D001               	goto	i2u1295_48
 47733  0149E8                     i2u1295_40:
 47734  0149E8  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 47735  0149EA                     i2u1295_48:
 47736  0149EA  A8C5               	btfss	4037,4,c	;volatile
 47737  0149EC  D002               	goto	i2u1296_40
 47738  0149EE  0E01               	movlw	1
 47739  0149F0  D001               	goto	i2u1296_46
 47740  0149F2                     i2u1296_40:
 47741  0149F2  0E00               	movlw	0
 47742  0149F4                     i2u1296_46:
 47743  0149F4  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 47744  0149F6  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 47745  0149F8  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 47746  0149FA  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 47747  0149FC  1001               	iorwf	??i2__i2c_wait_idle,w,c
 47748  0149FE  0900               	iorlw	0
 47749  014A00  B4D8               	btfsc	status,2,c
 47750  014A02  0012               	return	
 47751  014A04  D7D4               	goto	i2__i2c_wait_idle
 47752  014A06                     __end_ofi2__i2c_wait_idle:
 47753                           	opt stack 0
 47754                           tosu	equ	0xFFF
 47755                           tosh	equ	0xFFE
 47756                           tosl	equ	0xFFD
 47757                           pclatu	equ	0xFFB
 47758                           pclath	equ	0xFFA
 47759                           tblptru	equ	0xFF8
 47760                           tblptrh	equ	0xFF7
 47761                           tblptrl	equ	0xFF6
 47762                           tablat	equ	0xFF5
 47763                           prodh	equ	0xFF4
 47764                           prodl	equ	0xFF3
 47765                           intcon	equ	0xFF2
 47766                           indf0	equ	0xFEF
 47767                           postinc0	equ	0xFEE
 47768                           fsr0h	equ	0xFEA
 47769                           fsr0l	equ	0xFE9
 47770                           wreg	equ	0xFE8
 47771                           indf1	equ	0xFE7
 47772                           postinc1	equ	0xFE6
 47773                           postdec1	equ	0xFE5
 47774                           plusw1	equ	0xFE3
 47775                           fsr1h	equ	0xFE2
 47776                           fsr1l	equ	0xFE1
 47777                           indf2	equ	0xFDF
 47778                           postinc2	equ	0xFDE
 47779                           postdec2	equ	0xFDD
 47780                           plusw2	equ	0xFDB
 47781                           fsr2h	equ	0xFDA
 47782                           fsr2l	equ	0xFD9
 47783                           status	equ	0xFD8
 47784                           
 47785 ;; *************** function i2__i2c_stop *****************
 47786 ;; Defined at:
 47787 ;;		line 63 in file "i2c.c"
 47788 ;; Parameters:    Size  Location     Type
 47789 ;;		None
 47790 ;; Auto vars:     Size  Location     Type
 47791 ;;		None
 47792 ;; Return value:  Size  Location     Type
 47793 ;;                  1    wreg      void 
 47794 ;; Registers used:
 47795 ;;		None
 47796 ;; Tracked objects:
 47797 ;;		On entry : 0/0
 47798 ;;		On exit  : 0/0
 47799 ;;		Unchanged: 0/0
 47800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47805 ;;Total ram usage:        0 bytes
 47806 ;; Hardware stack levels used:    1
 47807 ;; This function calls:
 47808 ;;		Nothing
 47809 ;; This function is called by:
 47810 ;;		i2__i2c_write
 47811 ;;		i2__i2c_eeprom_busy
 47812 ;; This function uses a non-reentrant model
 47813 ;;
 47814                           
 47815                           	psect	text194
 47816  015A5A                     __ptext194:
 47817                           	opt stack 0
 47818  015A5A                     i2__i2c_stop:
 47819                           	opt stack 13
 47820                           
 47821                           ;i2c.c: 65: SSP1CON2bits.PEN = 1;
 47822                           
 47823                           ;incstack = 0
 47824  015A5A  84C5               	bsf	4037,2,c	;volatile
 47825  015A5C  A4C5               	btfss	4037,2,c	;volatile
 47826  015A5E  0012               	return	
 47827  015A60  D7FD               	goto	i2l1141
 47828  015A62                     __end_ofi2__i2c_stop:
 47829                           	opt stack 0
 47830                           tosu	equ	0xFFF
 47831                           tosh	equ	0xFFE
 47832                           tosl	equ	0xFFD
 47833                           pclatu	equ	0xFFB
 47834                           pclath	equ	0xFFA
 47835                           tblptru	equ	0xFF8
 47836                           tblptrh	equ	0xFF7
 47837                           tblptrl	equ	0xFF6
 47838                           tablat	equ	0xFF5
 47839                           prodh	equ	0xFF4
 47840                           prodl	equ	0xFF3
 47841                           intcon	equ	0xFF2
 47842                           indf0	equ	0xFEF
 47843                           postinc0	equ	0xFEE
 47844                           fsr0h	equ	0xFEA
 47845                           fsr0l	equ	0xFE9
 47846                           wreg	equ	0xFE8
 47847                           indf1	equ	0xFE7
 47848                           postinc1	equ	0xFE6
 47849                           postdec1	equ	0xFE5
 47850                           plusw1	equ	0xFE3
 47851                           fsr1h	equ	0xFE2
 47852                           fsr1l	equ	0xFE1
 47853                           indf2	equ	0xFDF
 47854                           postinc2	equ	0xFDE
 47855                           postdec2	equ	0xFDD
 47856                           plusw2	equ	0xFDB
 47857                           fsr2h	equ	0xFDA
 47858                           fsr2l	equ	0xFD9
 47859                           status	equ	0xFD8
 47860                           
 47861 ;; *************** function i2__i2c_start *****************
 47862 ;; Defined at:
 47863 ;;		line 45 in file "i2c.c"
 47864 ;; Parameters:    Size  Location     Type
 47865 ;;		None
 47866 ;; Auto vars:     Size  Location     Type
 47867 ;;		None
 47868 ;; Return value:  Size  Location     Type
 47869 ;;                  1    wreg      void 
 47870 ;; Registers used:
 47871 ;;		None
 47872 ;; Tracked objects:
 47873 ;;		On entry : 0/0
 47874 ;;		On exit  : 0/0
 47875 ;;		Unchanged: 0/0
 47876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47879 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47880 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47881 ;;Total ram usage:        0 bytes
 47882 ;; Hardware stack levels used:    1
 47883 ;; This function calls:
 47884 ;;		Nothing
 47885 ;; This function is called by:
 47886 ;;		i2__i2c_write
 47887 ;;		i2__i2c_eeprom_busy
 47888 ;; This function uses a non-reentrant model
 47889 ;;
 47890                           
 47891                           	psect	text195
 47892  015A62                     __ptext195:
 47893                           	opt stack 0
 47894  015A62                     i2__i2c_start:
 47895                           	opt stack 13
 47896                           
 47897                           ;i2c.c: 47: SSP1CON2bits.SEN=1;
 47898                           
 47899                           ;incstack = 0
 47900  015A62  80C5               	bsf	4037,0,c	;volatile
 47901  015A64  A0C5               	btfss	4037,0,c	;volatile
 47902  015A66  0012               	return	
 47903  015A68  D7FD               	goto	i2l1126
 47904  015A6A                     __end_ofi2__i2c_start:
 47905                           	opt stack 0
 47906                           tosu	equ	0xFFF
 47907                           tosh	equ	0xFFE
 47908                           tosl	equ	0xFFD
 47909                           pclatu	equ	0xFFB
 47910                           pclath	equ	0xFFA
 47911                           tblptru	equ	0xFF8
 47912                           tblptrh	equ	0xFF7
 47913                           tblptrl	equ	0xFF6
 47914                           tablat	equ	0xFF5
 47915                           prodh	equ	0xFF4
 47916                           prodl	equ	0xFF3
 47917                           intcon	equ	0xFF2
 47918                           indf0	equ	0xFEF
 47919                           postinc0	equ	0xFEE
 47920                           fsr0h	equ	0xFEA
 47921                           fsr0l	equ	0xFE9
 47922                           wreg	equ	0xFE8
 47923                           indf1	equ	0xFE7
 47924                           postinc1	equ	0xFE6
 47925                           postdec1	equ	0xFE5
 47926                           plusw1	equ	0xFE3
 47927                           fsr1h	equ	0xFE2
 47928                           fsr1l	equ	0xFE1
 47929                           indf2	equ	0xFDF
 47930                           postinc2	equ	0xFDE
 47931                           postdec2	equ	0xFDD
 47932                           plusw2	equ	0xFDB
 47933                           fsr2h	equ	0xFDA
 47934                           fsr2l	equ	0xFD9
 47935                           status	equ	0xFD8
 47936                           
 47937 ;; *************** function i2__i2c_send *****************
 47938 ;; Defined at:
 47939 ;;		line 51 in file "i2c.c"
 47940 ;; Parameters:    Size  Location     Type
 47941 ;;  dat             1    wreg     unsigned char 
 47942 ;; Auto vars:     Size  Location     Type
 47943 ;;  dat             1    0[COMRAM] unsigned char 
 47944 ;; Return value:  Size  Location     Type
 47945 ;;                  1    wreg      void 
 47946 ;; Registers used:
 47947 ;;		wreg
 47948 ;; Tracked objects:
 47949 ;;		On entry : 0/0
 47950 ;;		On exit  : 0/0
 47951 ;;		Unchanged: 0/0
 47952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47956 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47957 ;;Total ram usage:        1 bytes
 47958 ;; Hardware stack levels used:    1
 47959 ;; This function calls:
 47960 ;;		Nothing
 47961 ;; This function is called by:
 47962 ;;		i2__i2c_write
 47963 ;;		i2__i2c_eeprom_busy
 47964 ;; This function uses a non-reentrant model
 47965 ;;
 47966                           
 47967                           	psect	text196
 47968  015A6A                     __ptext196:
 47969                           	opt stack 0
 47970  015A6A                     i2__i2c_send:
 47971                           	opt stack 13
 47972                           
 47973                           ;incstack = 0
 47974                           ;i2__i2c_send@dat stored from wreg
 47975  015A6A  6E01               	movwf	i2__i2c_send@dat,c
 47976                           
 47977                           ;i2c.c: 53: SSP1BUF = dat;
 47978  015A6C  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 47979  015A70  0012               	return		;funcret
 47980  015A72                     __end_ofi2__i2c_send:
 47981                           	opt stack 0
 47982                           tosu	equ	0xFFF
 47983                           tosh	equ	0xFFE
 47984                           tosl	equ	0xFFD
 47985                           pclatu	equ	0xFFB
 47986                           pclath	equ	0xFFA
 47987                           tblptru	equ	0xFF8
 47988                           tblptrh	equ	0xFF7
 47989                           tblptrl	equ	0xFF6
 47990                           tablat	equ	0xFF5
 47991                           prodh	equ	0xFF4
 47992                           prodl	equ	0xFF3
 47993                           intcon	equ	0xFF2
 47994                           indf0	equ	0xFEF
 47995                           postinc0	equ	0xFEE
 47996                           fsr0h	equ	0xFEA
 47997                           fsr0l	equ	0xFE9
 47998                           wreg	equ	0xFE8
 47999                           indf1	equ	0xFE7
 48000                           postinc1	equ	0xFE6
 48001                           postdec1	equ	0xFE5
 48002                           plusw1	equ	0xFE3
 48003                           fsr1h	equ	0xFE2
 48004                           fsr1l	equ	0xFE1
 48005                           indf2	equ	0xFDF
 48006                           postinc2	equ	0xFDE
 48007                           postdec2	equ	0xFDD
 48008                           plusw2	equ	0xFDB
 48009                           fsr2h	equ	0xFDA
 48010                           fsr2l	equ	0xFD9
 48011                           status	equ	0xFD8
 48012                           
 48013 ;; *************** function _USBDeviceTasks *****************
 48014 ;; Defined at:
 48015 ;;		line 477 in file "usb_device.c"
 48016 ;; Parameters:    Size  Location     Type
 48017 ;;		None
 48018 ;; Auto vars:     Size  Location     Type
 48019 ;;  i               1   30[COMRAM] unsigned char 
 48020 ;; Return value:  Size  Location     Type
 48021 ;;                  1    wreg      void 
 48022 ;; Registers used:
 48023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 48024 ;; Tracked objects:
 48025 ;;		On entry : 0/0
 48026 ;;		On exit  : 0/0
 48027 ;;		Unchanged: 0/0
 48028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48033 ;;Total ram usage:        1 bytes
 48034 ;; Hardware stack levels used:    1
 48035 ;; Hardware stack levels required when called:    8
 48036 ;; This function calls:
 48037 ;;		_USBCtrlEPAllowStatusStage
 48038 ;;		_USBCtrlEPService
 48039 ;;		_USBIncrement1msInternalTimers
 48040 ;;		_USBStallHandler
 48041 ;;		_USBSuspend
 48042 ;;		_USBWakeFromSuspend
 48043 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48044 ;;		i2_USBDeviceInit
 48045 ;; This function is called by:
 48046 ;;		_SYS_InterruptHigh
 48047 ;; This function uses a non-reentrant model
 48048 ;;
 48049                           
 48050                           	psect	text197
 48051  010038                     __ptext197:
 48052                           	opt stack 0
 48053  010038                     _USBDeviceTasks:
 48054                           	opt stack 9
 48055                           
 48056                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 48057                           
 48058                           ;incstack = 0
 48059  010038  045E               	decf	_USBDeviceState,w,c	;volatile
 48060  01003A  B4D8               	btfsc	status,2,c
 48061                           
 48062                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 48063  01003C  BA65               	btfsc	3941,5,c	;volatile
 48064  01003E  D007               	goto	i2l155
 48065                           
 48066                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 48067  010040  0E00               	movlw	0
 48068  010042  6E62               	movwf	3938,c	;volatile
 48069                           
 48070                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 48071  010044  010F               	movlb	15	; () banked
 48072  010046  8136               	bsf	54,0,b	;volatile
 48073                           
 48074                           ; BSR set to: 15
 48075                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 48076  010048  8936               	bsf	54,4,b	;volatile
 48077                           
 48078                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 48079  01004A  0E02               	movlw	2
 48080  01004C  6E5E               	movwf	_USBDeviceState,c	;volatile
 48081  01004E                     i2l155:
 48082                           
 48083                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 48084                           
 48085                           ; BSR set to: 15
 48086                           
 48087                           ; BSR set to: 15
 48088  01004E  A462               	btfss	3938,2,c	;volatile
 48089  010050  D006               	goto	i2l156
 48090  010052  010F               	movlb	15	; () banked
 48091  010054  A536               	btfss	54,2,b	;volatile
 48092  010056  D003               	goto	i2l156
 48093                           
 48094                           ; BSR set to: 15
 48095                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 48096  010058  9462               	bcf	3938,2,c	;volatile
 48097                           
 48098                           ; BSR set to: 15
 48099                           ;usb_device.c: 640: USBWakeFromSuspend();
 48100  01005A  EC6C  F0A9         	call	_USBWakeFromSuspend	;wreg free
 48101  01005E                     i2l156:
 48102                           
 48103                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 48104  01005E  A265               	btfss	3941,1,c	;volatile
 48105  010060  D002               	goto	i2l157
 48106                           
 48107                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 48108  010062  98A1               	bcf	4001,4,c	;volatile
 48109                           
 48110                           ;usb_device.c: 650: return;
 48111  010064  0012               	return	
 48112  010066                     i2l157:
 48113                           
 48114                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 48115  010066  A062               	btfss	3938,0,c	;volatile
 48116  010068  D009               	goto	i2l159
 48117  01006A  010F               	movlb	15	; () banked
 48118  01006C  A136               	btfss	54,0,b	;volatile
 48119  01006E  D006               	goto	i2l159
 48120                           
 48121                           ; BSR set to: 15
 48122                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 48123  010070  ECBF  F080         	call	i2_USBDeviceInit	;wreg free
 48124                           
 48125                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 48126  010074  88A0               	bsf	4000,4,c	;volatile
 48127                           
 48128                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 48129  010076  0E04               	movlw	4
 48130  010078  6E5E               	movwf	_USBDeviceState,c	;volatile
 48131                           
 48132                           ;usb_device.c: 681: (UIR &= 0xFE);
 48133  01007A  9062               	bcf	3938,0,c	;volatile
 48134  01007C                     i2l159:
 48135                           
 48136                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 48137  01007C  A862               	btfss	3938,4,c	;volatile
 48138  01007E  D004               	goto	i2l160
 48139  010080  010F               	movlb	15	; () banked
 48140  010082  B936               	btfsc	54,4,b	;volatile
 48141                           
 48142                           ; BSR set to: 15
 48143                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 48144  010084  EC6C  F0AA         	call	_USBSuspend	;wreg free
 48145  010088                     i2l160:
 48146                           
 48147                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 48148  010088  AC62               	btfss	3938,6,c	;volatile
 48149  01008A  D01C               	goto	i2l164
 48150                           
 48151                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 48152  01008C  010F               	movlb	15	; () banked
 48153  01008E  AD36               	btfss	54,6,b	;volatile
 48154  010090  D00E               	goto	i2l162
 48155                           
 48156                           ; BSR set to: 15
 48157                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 48158  010092  0E00               	movlw	0
 48159  010094  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48160  010096  0E73               	movlw	115
 48161  010098  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48162  01009A  0E00               	movlw	0
 48163  01009C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48164  01009E  0E00               	movlw	0
 48165  0100A0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48166  0100A2  0E00               	movlw	0
 48167  0100A4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48168  0100A6  0E01               	movlw	1
 48169  0100A8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48170  0100AA  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48171  0100AE                     i2l162:
 48172                           
 48173                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 48174  0100AE  9C62               	bcf	3938,6,c	;volatile
 48175                           
 48176                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 48177  0100B0  EC38  F0AC         	call	_USBIncrement1msInternalTimers	;wreg free
 48178                           
 48179                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 48180  0100B4  0101               	movlb	1	; () banked
 48181  0100B6  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 48182  0100B8  A4D8               	btfss	status,2,c
 48183                           
 48184                           ; BSR set to: 1
 48185                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 48186  0100BA  076A               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 48187                           
 48188                           ; BSR set to: 1
 48189                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 48190                           
 48191                           ; BSR set to: 1
 48192  0100BC  516A               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 48193  0100BE  B4D8               	btfsc	status,2,c
 48194                           
 48195                           ; BSR set to: 1
 48196                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 48197  0100C0  ECE0  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 48198  0100C4                     i2l164:
 48199                           
 48200                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 48201  0100C4  AA62               	btfss	3938,5,c	;volatile
 48202  0100C6  D004               	goto	i2l165
 48203  0100C8  010F               	movlb	15	; () banked
 48204  0100CA  BB36               	btfsc	54,5,b	;volatile
 48205                           
 48206                           ; BSR set to: 15
 48207                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 48208  0100CC  EC5B  F0A8         	call	_USBStallHandler	;wreg free
 48209  0100D0                     i2l165:
 48210                           
 48211                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 48212  0100D0  A262               	btfss	3938,1,c	;volatile
 48213  0100D2  D012               	goto	i2l166
 48214  0100D4  010F               	movlb	15	; () banked
 48215  0100D6  A336               	btfss	54,1,b	;volatile
 48216  0100D8  D00F               	goto	i2l166
 48217                           
 48218                           ; BSR set to: 15
 48219                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 48220  0100DA  0E7F               	movlw	127
 48221  0100DC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48222  0100DE  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48223  0100E0  0E00               	movlw	0
 48224  0100E2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48225  0100E4  0E00               	movlw	0
 48226  0100E6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48227  0100E8  0E00               	movlw	0
 48228  0100EA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48229  0100EC  0E01               	movlw	1
 48230  0100EE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48231  0100F0  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48232                           
 48233                           ;usb_device.c: 759: {UEIR = 0;};
 48234  0100F4  0E00               	movlw	0
 48235  0100F6  6E63               	movwf	3939,c	;volatile
 48236  0100F8                     i2l166:
 48237                           
 48238                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 48239  0100F8  0E04               	movlw	4
 48240  0100FA  605E               	cpfslt	_USBDeviceState,c	;volatile
 48241  0100FC  D002               	goto	i2l167
 48242                           
 48243                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 48244  0100FE  98A1               	bcf	4001,4,c	;volatile
 48245                           
 48246                           ;usb_device.c: 777: return;
 48247  010100  0012               	return	
 48248  010102                     i2l167:
 48249                           
 48250                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 48251  010102  010F               	movlb	15	; () banked
 48252  010104  A736               	btfss	54,3,b	;volatile
 48253  010106  D039               	goto	i2u1708_40
 48254                           
 48255                           ; BSR set to: 15
 48256                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 48257  010108  0E00               	movlw	0
 48258  01010A  6E1F               	movwf	USBDeviceTasks@i,c
 48259  01010C                     i2l17615:
 48260                           
 48261                           ; BSR set to: 15
 48262  01010C  0E03               	movlw	3
 48263  01010E  641F               	cpfsgt	USBDeviceTasks@i,c
 48264  010110  D001               	goto	i2l169
 48265  010112  D033               	goto	i2u1708_40
 48266  010114                     i2l169:
 48267                           
 48268                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 48269  010114  A662               	btfss	3938,3,c	;volatile
 48270  010116  D031               	goto	i2u1708_40
 48271                           
 48272                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 48273  010118  CF64 F1C1          	movff	3940,_USTATcopy	;volatile
 48274                           
 48275                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 48276  01011C  0101               	movlb	1	; () banked
 48277  01011E  31C1               	rrcf	_USTATcopy& (0+255),w,b	;volatile
 48278  010120  32E8               	rrcf	wreg,f,c
 48279  010122  32E8               	rrcf	wreg,f,c
 48280  010124  0B0F               	andlw	15
 48281  010126  6F6C               	movwf	_endpoint_number& (0+255),b	;volatile
 48282                           
 48283                           ; BSR set to: 1
 48284                           ;usb_device.c: 793: (UIR &= 0xF7);
 48285  010128  9662               	bcf	3938,3,c	;volatile
 48286                           
 48287                           ; BSR set to: 1
 48288                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 48289  01012A  B5C1               	btfsc	_USTATcopy& (0+255),2,b	;volatile
 48290  01012C  D007               	goto	i2l172
 48291                           
 48292                           ; BSR set to: 1
 48293                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 48294  01012E  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48295  010130  0D01               	mullw	1
 48296  010132  0E39               	movlw	low _ep_data_out
 48297  010134  24F3               	addwf	prodl,w,c
 48298  010136  6ED9               	movwf	fsr2l,c
 48299  010138  0E01               	movlw	high _ep_data_out
 48300  01013A  D006               	goto	L76
 48301  01013C                     i2l172:
 48302                           
 48303                           ; BSR set to: 1
 48304                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 48305                           
 48306                           ; BSR set to: 1
 48307  01013C  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48308  01013E  0D01               	mullw	1
 48309  010140  0E3C               	movlw	low _ep_data_in
 48310  010142  24F3               	addwf	prodl,w,c
 48311  010144  6ED9               	movwf	fsr2l,c
 48312  010146  0E01               	movlw	high _ep_data_in
 48313  010148                     L76:
 48314  010148  20F4               	addwfc	prodh,w,c
 48315  01014A  6EDA               	movwf	fsr2h,c
 48316  01014C  70DF               	btg	indf2,0,c
 48317                           
 48318                           ; BSR set to: 1
 48319                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 48320                           
 48321                           ; BSR set to: 1
 48322  01014E  516C               	movf	_endpoint_number& (0+255),w,b	;volatile
 48323  010150  A4D8               	btfss	status,2,c
 48324  010152  D003               	goto	i2l174
 48325                           
 48326                           ; BSR set to: 1
 48327                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 48328  010154  EC1D  F09A         	call	_USBCtrlEPService	;wreg free
 48329                           
 48330                           ;usb_device.c: 813: }
 48331  010158  D00E               	goto	i2l176
 48332  01015A                     i2l174:
 48333                           
 48334                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 48335  01015A  0E00               	movlw	0
 48336  01015C  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48337  01015E  0E72               	movlw	114
 48338  010160  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48339  010162  0EC1               	movlw	low _USTATcopy
 48340  010164  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48341  010166  0E01               	movlw	high _USTATcopy
 48342  010168  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48343  01016A  0E00               	movlw	0
 48344  01016C  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48345  01016E  0E00               	movlw	0
 48346  010170  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48347  010172  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48348  010176                     i2l176:
 48349  010176  2A1F               	incf	USBDeviceTasks@i,f,c
 48350  010178  D7C9               	goto	i2l17615
 48351  01017A                     i2u1708_40:
 48352                           
 48353                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 48354  01017A  98A1               	bcf	4001,4,c	;volatile
 48355  01017C  0012               	return		;funcret
 48356  01017E                     __end_of_USBDeviceTasks:
 48357                           	opt stack 0
 48358                           tosu	equ	0xFFF
 48359                           tosh	equ	0xFFE
 48360                           tosl	equ	0xFFD
 48361                           pclatu	equ	0xFFB
 48362                           pclath	equ	0xFFA
 48363                           tblptru	equ	0xFF8
 48364                           tblptrh	equ	0xFF7
 48365                           tblptrl	equ	0xFF6
 48366                           tablat	equ	0xFF5
 48367                           prodh	equ	0xFF4
 48368                           prodl	equ	0xFF3
 48369                           intcon	equ	0xFF2
 48370                           indf0	equ	0xFEF
 48371                           postinc0	equ	0xFEE
 48372                           fsr0h	equ	0xFEA
 48373                           fsr0l	equ	0xFE9
 48374                           wreg	equ	0xFE8
 48375                           indf1	equ	0xFE7
 48376                           postinc1	equ	0xFE6
 48377                           postdec1	equ	0xFE5
 48378                           plusw1	equ	0xFE3
 48379                           fsr1h	equ	0xFE2
 48380                           fsr1l	equ	0xFE1
 48381                           indf2	equ	0xFDF
 48382                           postinc2	equ	0xFDE
 48383                           postdec2	equ	0xFDD
 48384                           plusw2	equ	0xFDB
 48385                           fsr2h	equ	0xFDA
 48386                           fsr2l	equ	0xFD9
 48387                           status	equ	0xFD8
 48388                           
 48389 ;; *************** function i2_USBDeviceInit *****************
 48390 ;; Defined at:
 48391 ;;		line 277 in file "usb_device.c"
 48392 ;; Parameters:    Size  Location     Type
 48393 ;;		None
 48394 ;; Auto vars:     Size  Location     Type
 48395 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 48396 ;; Return value:  Size  Location     Type
 48397 ;;                  1    wreg      void 
 48398 ;; Registers used:
 48399 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48400 ;; Tracked objects:
 48401 ;;		On entry : 0/0
 48402 ;;		On exit  : 0/0
 48403 ;;		Unchanged: 0/0
 48404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48405 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48406 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48408 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48409 ;;Total ram usage:        1 bytes
 48410 ;; Hardware stack levels used:    1
 48411 ;; Hardware stack levels required when called:    1
 48412 ;; This function calls:
 48413 ;;		i2_memset
 48414 ;; This function is called by:
 48415 ;;		_USBDeviceTasks
 48416 ;; This function uses a non-reentrant model
 48417 ;;
 48418                           
 48419                           	psect	text198
 48420  01017E                     __ptext198:
 48421                           	opt stack 0
 48422  01017E                     i2_USBDeviceInit:
 48423                           	opt stack 15
 48424                           
 48425                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 48426                           
 48427                           ;incstack = 0
 48428  01017E  98A0               	bcf	4000,4,c	;volatile
 48429                           
 48430                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 48431  010180  0E00               	movlw	0
 48432  010182  6E63               	movwf	3939,c	;volatile
 48433                           
 48434                           ;usb_device.c: 291: {UIR = 0;};
 48435  010184  0E00               	movlw	0
 48436  010186  6E62               	movwf	3938,c	;volatile
 48437                           
 48438                           ;usb_device.c: 294: UEP0 = 0;
 48439  010188  0E00               	movlw	0
 48440  01018A  010F               	movlb	15	; () banked
 48441  01018C  6F26               	movwf	38,b	;volatile
 48442                           
 48443                           ; BSR set to: 15
 48444                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 48445  01018E  0E27               	movlw	39
 48446  010190  6E01               	movwf	i2memset@p1,c
 48447  010192  0E0F               	movlw	15
 48448  010194  6E02               	movwf	i2memset@p1+1,c
 48449  010196  0E00               	movlw	0
 48450  010198  6E04               	movwf	i2memset@c+1,c
 48451  01019A  0E00               	movlw	0
 48452  01019C  6E03               	movwf	i2memset@c,c
 48453  01019E  0E00               	movlw	0
 48454  0101A0  6E06               	movwf	i2memset@n+1,c
 48455  0101A2  0E02               	movlw	2
 48456  0101A4  6E05               	movwf	i2memset@n,c
 48457  0101A6  ECDE  F0AA         	call	i2_memset	;wreg free
 48458                           
 48459                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 48460  0101AA  0E16               	movlw	22
 48461  0101AC  010F               	movlb	15	; () banked
 48462  0101AE  6F39               	movwf	57,b	;volatile
 48463                           
 48464                           ; BSR set to: 15
 48465  0101B0  0E9F               	movlw	159
 48466  0101B2  6F37               	movwf	55,b	;volatile
 48467                           
 48468                           ; BSR set to: 15
 48469  0101B4  0E7B               	movlw	123
 48470  0101B6  6F36               	movwf	54,b	;volatile
 48471                           
 48472                           ; BSR set to: 15
 48473                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 48474  0101B8  0E00               	movlw	0
 48475  0101BA  6E09               	movwf	i2USBDeviceInit@i,c
 48476  0101BC                     i2l17409:
 48477                           
 48478                           ; BSR set to: 15
 48479  0101BC  0E0B               	movlw	11
 48480  0101BE  6409               	cpfsgt	i2USBDeviceInit@i,c
 48481  0101C0  D001               	goto	i2l145
 48482  0101C2  D00E               	goto	i2u1676_40
 48483  0101C4                     i2l145:
 48484                           
 48485                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 48486                           
 48487                           ; BSR set to: 15
 48488  0101C4  5009               	movf	i2USBDeviceInit@i,w,c
 48489  0101C6  0D04               	mullw	4
 48490  0101C8  0E00               	movlw	0
 48491  0101CA  24F3               	addwf	prodl,w,c
 48492  0101CC  6ED9               	movwf	fsr2l,c
 48493  0101CE  0E0D               	movlw	13
 48494  0101D0  20F4               	addwfc	prodh,w,c
 48495  0101D2  6EDA               	movwf	fsr2h,c
 48496  0101D4  6ADE               	clrf	postinc2,c
 48497  0101D6  6ADE               	clrf	postinc2,c
 48498  0101D8  6ADE               	clrf	postinc2,c
 48499  0101DA  6ADD               	clrf	postdec2,c
 48500  0101DC  2A09               	incf	i2USBDeviceInit@i,f,c
 48501  0101DE  D7EE               	goto	i2l17409
 48502  0101E0                     i2u1676_40:
 48503                           
 48504                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 48505  0101E0  8C65               	bsf	3941,6,c	;volatile
 48506                           
 48507                           ;usb_device.c: 316: UADDR = 0x00;
 48508  0101E2  0E00               	movlw	0
 48509  0101E4  010F               	movlb	15	; () banked
 48510  0101E6  6F38               	movwf	56,b	;volatile
 48511                           
 48512                           ; BSR set to: 15
 48513                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 48514  0101E8  9865               	bcf	3941,4,c	;volatile
 48515                           
 48516                           ; BSR set to: 15
 48517                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 48518  0101EA  9C65               	bcf	3941,6,c	;volatile
 48519  0101EC                     
 48520                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 48521                           
 48522                           ; BSR set to: 15
 48523  0101EC  9662               	bcf	3938,3,c	;volatile
 48524                           
 48525                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 48526  0101EE  0E00               	movlw	0
 48527  0101F0  6E55               	movwf	_inPipes+3,c	;volatile
 48528                           
 48529                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 48530  0101F2  0E00               	movlw	0
 48531  0101F4  0101               	movlb	1	; () banked
 48532  0101F6  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 48533                           
 48534                           ; BSR set to: 1
 48535                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 48536  0101F8  0E00               	movlw	0
 48537  0101FA  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 48538  0101FC  0E00               	movlw	0
 48539  0101FE  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 48540                           
 48541                           ; BSR set to: 1
 48542                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 48543  010200  B662               	btfsc	3938,3,c	;volatile
 48544  010202  D7F4               	goto	i2l147
 48545                           
 48546                           ; BSR set to: 1
 48547                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 48548                           
 48549                           ; BSR set to: 1
 48550  010204  0E01               	movlw	1
 48551  010206  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 48552                           
 48553                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 48554  010208  0E01               	movlw	1
 48555  01020A  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 48556                           
 48557                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 48558  01020C  0E00               	movlw	0
 48559  01020E  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 48560                           
 48561                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 48562  010210  0E00               	movlw	0
 48563  010212  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 48564                           
 48565                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 48566  010214  0E00               	movlw	0
 48567  010216  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48568                           
 48569                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 48570  010218  0E00               	movlw	0
 48571  01021A  6E09               	movwf	i2USBDeviceInit@i,c
 48572  01021C                     i2l17437:
 48573                           
 48574                           ; BSR set to: 1
 48575  01021C  0E02               	movlw	2
 48576  01021E  6409               	cpfsgt	i2USBDeviceInit@i,c
 48577  010220  D001               	goto	i2l149
 48578  010222  D02E               	goto	i2u1679_40
 48579  010224                     i2l149:
 48580                           
 48581                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 48582                           
 48583                           ; BSR set to: 1
 48584  010224  5009               	movf	i2USBDeviceInit@i,w,c
 48585  010226  0D02               	mullw	2
 48586  010228  0E1B               	movlw	low _pBDTEntryIn
 48587  01022A  24F3               	addwf	prodl,w,c
 48588  01022C  6ED9               	movwf	fsr2l,c
 48589  01022E  0E01               	movlw	high _pBDTEntryIn
 48590  010230  20F4               	addwfc	prodh,w,c
 48591  010232  6EDA               	movwf	fsr2h,c
 48592  010234  0E00               	movlw	0
 48593  010236  6EDE               	movwf	postinc2,c
 48594  010238  0E00               	movlw	0
 48595  01023A  6EDD               	movwf	postdec2,c
 48596                           
 48597                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 48598  01023C  5009               	movf	i2USBDeviceInit@i,w,c
 48599  01023E  0D02               	mullw	2
 48600  010240  0E21               	movlw	low _pBDTEntryOut
 48601  010242  24F3               	addwf	prodl,w,c
 48602  010244  6ED9               	movwf	fsr2l,c
 48603  010246  0E01               	movlw	high _pBDTEntryOut
 48604  010248  20F4               	addwfc	prodh,w,c
 48605  01024A  6EDA               	movwf	fsr2h,c
 48606  01024C  0E00               	movlw	0
 48607  01024E  6EDE               	movwf	postinc2,c
 48608  010250  0E00               	movlw	0
 48609  010252  6EDD               	movwf	postdec2,c
 48610                           
 48611                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 48612  010254  5009               	movf	i2USBDeviceInit@i,w,c
 48613  010256  0D01               	mullw	1
 48614  010258  0E3C               	movlw	low _ep_data_in
 48615  01025A  24F3               	addwf	prodl,w,c
 48616  01025C  6ED9               	movwf	fsr2l,c
 48617  01025E  0E01               	movlw	high _ep_data_in
 48618  010260  20F4               	addwfc	prodh,w,c
 48619  010262  6EDA               	movwf	fsr2h,c
 48620  010264  0E00               	movlw	0
 48621  010266  6EDF               	movwf	indf2,c
 48622                           
 48623                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 48624  010268  5009               	movf	i2USBDeviceInit@i,w,c
 48625  01026A  0D01               	mullw	1
 48626  01026C  0E39               	movlw	low _ep_data_out
 48627  01026E  24F3               	addwf	prodl,w,c
 48628  010270  6ED9               	movwf	fsr2l,c
 48629  010272  0E01               	movlw	high _ep_data_out
 48630  010274  20F4               	addwfc	prodh,w,c
 48631  010276  6EDA               	movwf	fsr2h,c
 48632  010278  0E00               	movlw	0
 48633  01027A  6EDF               	movwf	indf2,c
 48634  01027C  2A09               	incf	i2USBDeviceInit@i,f,c
 48635  01027E  D7CE               	goto	i2l17437
 48636  010280                     i2u1679_40:
 48637                           
 48638                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 48639  010280  0E08               	movlw	8
 48640  010282  0101               	movlb	1	; () banked
 48641  010284  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 48642  010286  0E0D               	movlw	13
 48643  010288  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 48644                           
 48645                           ; BSR set to: 1
 48646                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 48647  01028A  0E16               	movlw	22
 48648  01028C  010F               	movlb	15	; () banked
 48649  01028E  6F26               	movwf	38,b	;volatile
 48650                           
 48651                           ; BSR set to: 15
 48652                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 48653  010290  0E0D               	movlw	13
 48654  010292  010D               	movlb	13	; () banked
 48655  010294  6F03               	movwf	3,b	;volatile
 48656  010296  0E30               	movlw	48
 48657  010298  6F02               	movwf	2,b	;volatile
 48658                           
 48659                           ; BSR set to: 13
 48660                           ;usb_device.c: 359: BDT[0].CNT = 8;
 48661  01029A  0E08               	movlw	8
 48662  01029C  6F01               	movwf	1,b	;volatile
 48663                           
 48664                           ; BSR set to: 13
 48665                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 48666  01029E  0E04               	movlw	4
 48667  0102A0  6F00               	movwf	0,b	;volatile
 48668                           
 48669                           ; BSR set to: 13
 48670                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 48671  0102A2  8F00               	bsf	0,7,b	;volatile
 48672                           
 48673                           ; BSR set to: 13
 48674                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 48675  0102A4  0E00               	movlw	0
 48676  0102A6  0101               	movlb	1	; () banked
 48677  0102A8  6FC2               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 48678                           
 48679                           ; BSR set to: 1
 48680                           ;usb_device.c: 366: USB1msTickCount = 0;
 48681  0102AA  0E00               	movlw	0
 48682  0102AC  6F2F               	movwf	_USB1msTickCount& (0+255),b	;volatile
 48683  0102AE  0E00               	movlw	0
 48684  0102B0  6F30               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 48685  0102B2  0E00               	movlw	0
 48686  0102B4  6F31               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 48687  0102B6  0E00               	movlw	0
 48688  0102B8  6F32               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 48689                           
 48690                           ; BSR set to: 1
 48691                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 48692  0102BA  0E00               	movlw	0
 48693  0102BC  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48694                           
 48695                           ; BSR set to: 1
 48696                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 48697  0102BE  0E00               	movlw	0
 48698  0102C0  6E5E               	movwf	_USBDeviceState,c	;volatile
 48699                           
 48700                           ; BSR set to: 1
 48701  0102C2  0012               	return		;funcret
 48702  0102C4                     __end_ofi2_USBDeviceInit:
 48703                           	opt stack 0
 48704                           tosu	equ	0xFFF
 48705                           tosh	equ	0xFFE
 48706                           tosl	equ	0xFFD
 48707                           pclatu	equ	0xFFB
 48708                           pclath	equ	0xFFA
 48709                           tblptru	equ	0xFF8
 48710                           tblptrh	equ	0xFF7
 48711                           tblptrl	equ	0xFF6
 48712                           tablat	equ	0xFF5
 48713                           prodh	equ	0xFF4
 48714                           prodl	equ	0xFF3
 48715                           intcon	equ	0xFF2
 48716                           indf0	equ	0xFEF
 48717                           postinc0	equ	0xFEE
 48718                           fsr0h	equ	0xFEA
 48719                           fsr0l	equ	0xFE9
 48720                           wreg	equ	0xFE8
 48721                           indf1	equ	0xFE7
 48722                           postinc1	equ	0xFE6
 48723                           postdec1	equ	0xFE5
 48724                           plusw1	equ	0xFE3
 48725                           fsr1h	equ	0xFE2
 48726                           fsr1l	equ	0xFE1
 48727                           indf2	equ	0xFDF
 48728                           postinc2	equ	0xFDE
 48729                           postdec2	equ	0xFDD
 48730                           plusw2	equ	0xFDB
 48731                           fsr2h	equ	0xFDA
 48732                           fsr2l	equ	0xFD9
 48733                           status	equ	0xFD8
 48734                           
 48735 ;; *************** function _USBWakeFromSuspend *****************
 48736 ;; Defined at:
 48737 ;;		line 2305 in file "usb_device.c"
 48738 ;; Parameters:    Size  Location     Type
 48739 ;;		None
 48740 ;; Auto vars:     Size  Location     Type
 48741 ;;		None
 48742 ;; Return value:  Size  Location     Type
 48743 ;;                  1    wreg      void 
 48744 ;; Registers used:
 48745 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48746 ;; Tracked objects:
 48747 ;;		On entry : 0/0
 48748 ;;		On exit  : 0/0
 48749 ;;		Unchanged: 0/0
 48750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48751 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48752 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48754 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48755 ;;Total ram usage:        0 bytes
 48756 ;; Hardware stack levels used:    1
 48757 ;; Hardware stack levels required when called:    4
 48758 ;; This function calls:
 48759 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48760 ;; This function is called by:
 48761 ;;		_USBDeviceTasks
 48762 ;; This function uses a non-reentrant model
 48763 ;;
 48764                           
 48765                           	psect	text199
 48766  0152D8                     __ptext199:
 48767                           	opt stack 0
 48768  0152D8                     _USBWakeFromSuspend:
 48769                           	opt stack 12
 48770                           
 48771                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 48772                           
 48773                           ; BSR set to: 1
 48774                           ;incstack = 0
 48775  0152D8  0E00               	movlw	0
 48776  0152DA  0101               	movlb	1	; () banked
 48777  0152DC  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48778                           
 48779                           ; BSR set to: 1
 48780                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 48781  0152DE  0E00               	movlw	0
 48782  0152E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48783  0152E2  0E74               	movlw	116
 48784  0152E4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48785  0152E6  0E00               	movlw	0
 48786  0152E8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48787  0152EA  0E00               	movlw	0
 48788  0152EC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48789  0152EE  0E00               	movlw	0
 48790  0152F0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48791  0152F2  0E00               	movlw	0
 48792  0152F4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48793  0152F6  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48794                           
 48795                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 48796  0152FA  9265               	bcf	3941,1,c	;volatile
 48797                           
 48798                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 48799  0152FC  010F               	movlb	15	; () banked
 48800  0152FE  9536               	bcf	54,2,b	;volatile
 48801                           
 48802                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 48803  015300  D001               	goto	i2l315
 48804  015302                     
 48805                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 48806                           
 48807                           ; BSR set to: 15
 48808  015302  9462               	bcf	3938,2,c	;volatile
 48809  015304                     i2l315:
 48810  015304  B462               	btfsc	3938,2,c	;volatile
 48811  015306  D7FD               	goto	i2l316
 48812                           
 48813                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 48814  015308  0E00               	movlw	0
 48815  01530A  0101               	movlb	1	; () banked
 48816  01530C  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48817                           
 48818                           ; BSR set to: 1
 48819  01530E  0012               	return		;funcret
 48820  015310                     __end_of_USBWakeFromSuspend:
 48821                           	opt stack 0
 48822                           tosu	equ	0xFFF
 48823                           tosh	equ	0xFFE
 48824                           tosl	equ	0xFFD
 48825                           pclatu	equ	0xFFB
 48826                           pclath	equ	0xFFA
 48827                           tblptru	equ	0xFF8
 48828                           tblptrh	equ	0xFF7
 48829                           tblptrl	equ	0xFF6
 48830                           tablat	equ	0xFF5
 48831                           prodh	equ	0xFF4
 48832                           prodl	equ	0xFF3
 48833                           intcon	equ	0xFF2
 48834                           indf0	equ	0xFEF
 48835                           postinc0	equ	0xFEE
 48836                           fsr0h	equ	0xFEA
 48837                           fsr0l	equ	0xFE9
 48838                           wreg	equ	0xFE8
 48839                           indf1	equ	0xFE7
 48840                           postinc1	equ	0xFE6
 48841                           postdec1	equ	0xFE5
 48842                           plusw1	equ	0xFE3
 48843                           fsr1h	equ	0xFE2
 48844                           fsr1l	equ	0xFE1
 48845                           indf2	equ	0xFDF
 48846                           postinc2	equ	0xFDE
 48847                           postdec2	equ	0xFDD
 48848                           plusw2	equ	0xFDB
 48849                           fsr2h	equ	0xFDA
 48850                           fsr2l	equ	0xFD9
 48851                           status	equ	0xFD8
 48852                           
 48853 ;; *************** function _USBSuspend *****************
 48854 ;; Defined at:
 48855 ;;		line 2247 in file "usb_device.c"
 48856 ;; Parameters:    Size  Location     Type
 48857 ;;		None
 48858 ;; Auto vars:     Size  Location     Type
 48859 ;;		None
 48860 ;; Return value:  Size  Location     Type
 48861 ;;                  1    wreg      void 
 48862 ;; Registers used:
 48863 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 48864 ;; Tracked objects:
 48865 ;;		On entry : 0/0
 48866 ;;		On exit  : 0/0
 48867 ;;		Unchanged: 0/0
 48868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48873 ;;Total ram usage:        0 bytes
 48874 ;; Hardware stack levels used:    1
 48875 ;; Hardware stack levels required when called:    4
 48876 ;; This function calls:
 48877 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48878 ;; This function is called by:
 48879 ;;		_USBDeviceTasks
 48880 ;; This function uses a non-reentrant model
 48881 ;;
 48882                           
 48883                           	psect	text200
 48884  0154D8                     __ptext200:
 48885                           	opt stack 0
 48886  0154D8                     _USBSuspend:
 48887                           	opt stack 12
 48888                           
 48889                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 48890                           
 48891                           ; BSR set to: 1
 48892                           ;incstack = 0
 48893  0154D8  010F               	movlb	15	; () banked
 48894  0154DA  8536               	bsf	54,2,b	;volatile
 48895                           
 48896                           ; BSR set to: 15
 48897                           ;usb_device.c: 2273: (UIR &= 0xEF);
 48898  0154DC  9862               	bcf	3938,4,c	;volatile
 48899                           
 48900                           ; BSR set to: 15
 48901                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 48902  0154DE  8265               	bsf	3941,1,c	;volatile
 48903                           
 48904                           ; BSR set to: 15
 48905                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 48906  0154E0  0E01               	movlw	1
 48907  0154E2  0101               	movlb	1	; () banked
 48908  0154E4  6F6D               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 48909                           
 48910                           ; BSR set to: 1
 48911                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 48912  0154E6  0E00               	movlw	0
 48913  0154E8  6F64               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 48914                           
 48915                           ; BSR set to: 1
 48916                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 48917  0154EA  0E00               	movlw	0
 48918  0154EC  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48919  0154EE  0E75               	movlw	117
 48920  0154F0  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48921  0154F2  0E00               	movlw	0
 48922  0154F4  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48923  0154F6  0E00               	movlw	0
 48924  0154F8  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48925  0154FA  0E00               	movlw	0
 48926  0154FC  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48927  0154FE  0E00               	movlw	0
 48928  015500  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 48929  015502  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 48930  015506  0012               	return		;funcret
 48931  015508                     __end_of_USBSuspend:
 48932                           	opt stack 0
 48933                           tosu	equ	0xFFF
 48934                           tosh	equ	0xFFE
 48935                           tosl	equ	0xFFD
 48936                           pclatu	equ	0xFFB
 48937                           pclath	equ	0xFFA
 48938                           tblptru	equ	0xFF8
 48939                           tblptrh	equ	0xFF7
 48940                           tblptrl	equ	0xFF6
 48941                           tablat	equ	0xFF5
 48942                           prodh	equ	0xFF4
 48943                           prodl	equ	0xFF3
 48944                           intcon	equ	0xFF2
 48945                           indf0	equ	0xFEF
 48946                           postinc0	equ	0xFEE
 48947                           fsr0h	equ	0xFEA
 48948                           fsr0l	equ	0xFE9
 48949                           wreg	equ	0xFE8
 48950                           indf1	equ	0xFE7
 48951                           postinc1	equ	0xFE6
 48952                           postdec1	equ	0xFE5
 48953                           plusw1	equ	0xFE3
 48954                           fsr1h	equ	0xFE2
 48955                           fsr1l	equ	0xFE1
 48956                           indf2	equ	0xFDF
 48957                           postinc2	equ	0xFDE
 48958                           postdec2	equ	0xFDD
 48959                           plusw2	equ	0xFDB
 48960                           fsr2h	equ	0xFDA
 48961                           fsr2l	equ	0xFD9
 48962                           status	equ	0xFD8
 48963                           
 48964 ;; *************** function _USBStallHandler *****************
 48965 ;; Defined at:
 48966 ;;		line 2204 in file "usb_device.c"
 48967 ;; Parameters:    Size  Location     Type
 48968 ;;		None
 48969 ;; Auto vars:     Size  Location     Type
 48970 ;;		None
 48971 ;; Return value:  Size  Location     Type
 48972 ;;                  1    wreg      void 
 48973 ;; Registers used:
 48974 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 48975 ;; Tracked objects:
 48976 ;;		On entry : 0/0
 48977 ;;		On exit  : 0/0
 48978 ;;		Unchanged: 0/0
 48979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48980 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48981 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48982 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48983 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48984 ;;Total ram usage:        1 bytes
 48985 ;; Hardware stack levels used:    1
 48986 ;; This function calls:
 48987 ;;		Nothing
 48988 ;; This function is called by:
 48989 ;;		_USBDeviceTasks
 48990 ;; This function uses a non-reentrant model
 48991 ;;
 48992                           
 48993                           	psect	text201
 48994  0150B6                     __ptext201:
 48995                           	opt stack 0
 48996  0150B6                     _USBStallHandler:
 48997                           	opt stack 16
 48998                           
 48999                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 49000                           
 49001                           ;incstack = 0
 49002  0150B6  010F               	movlb	15	; () banked
 49003  0150B8  A126               	btfss	38,0,b	;volatile
 49004  0150BA  D01D               	goto	i2l307
 49005                           
 49006                           ; BSR set to: 15
 49007                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 49008  0150BC  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49009  0150C0  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49010  0150C4  0E80               	movlw	128
 49011  0150C6  18DE               	xorwf	postinc2,w,c
 49012  0150C8  A4D8               	btfss	status,2,c
 49013  0150CA  D014               	goto	i2l308
 49014                           
 49015                           ; BSR set to: 15
 49016  0150CC  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49017  0150D0  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49018  0150D4  0E84               	movlw	132
 49019  0150D6  18DE               	xorwf	postinc2,w,c
 49020  0150D8  A4D8               	btfss	status,2,c
 49021  0150DA  D00C               	goto	i2l308
 49022                           
 49023                           ; BSR set to: 15
 49024                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 49025  0150DC  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49026  0150E0  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49027  0150E4  0E0C               	movlw	12
 49028  0150E6  6EDF               	movwf	indf2,c
 49029                           
 49030                           ; BSR set to: 15
 49031                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 49032  0150E8  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49033  0150EC  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49034  0150F0  0E00               	movlw	0
 49035  0150F2  8EDB               	bsf	plusw2,7,c
 49036  0150F4                     i2l308:
 49037                           
 49038                           ; BSR set to: 15
 49039                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 49040                           
 49041                           ; BSR set to: 15
 49042  0150F4  9126               	bcf	38,0,b	;volatile
 49043  0150F6                     i2l307:
 49044                           
 49045                           ; BSR set to: 15
 49046                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 49047  0150F6  9A62               	bcf	3938,5,c	;volatile
 49048                           
 49049                           ; BSR set to: 15
 49050  0150F8  0012               	return		;funcret
 49051  0150FA                     __end_of_USBStallHandler:
 49052                           	opt stack 0
 49053                           tosu	equ	0xFFF
 49054                           tosh	equ	0xFFE
 49055                           tosl	equ	0xFFD
 49056                           pclatu	equ	0xFFB
 49057                           pclath	equ	0xFFA
 49058                           tblptru	equ	0xFF8
 49059                           tblptrh	equ	0xFF7
 49060                           tblptrl	equ	0xFF6
 49061                           tablat	equ	0xFF5
 49062                           prodh	equ	0xFF4
 49063                           prodl	equ	0xFF3
 49064                           intcon	equ	0xFF2
 49065                           indf0	equ	0xFEF
 49066                           postinc0	equ	0xFEE
 49067                           fsr0h	equ	0xFEA
 49068                           fsr0l	equ	0xFE9
 49069                           wreg	equ	0xFE8
 49070                           indf1	equ	0xFE7
 49071                           postinc1	equ	0xFE6
 49072                           postdec1	equ	0xFE5
 49073                           plusw1	equ	0xFE3
 49074                           fsr1h	equ	0xFE2
 49075                           fsr1l	equ	0xFE1
 49076                           indf2	equ	0xFDF
 49077                           postinc2	equ	0xFDE
 49078                           postdec2	equ	0xFDD
 49079                           plusw2	equ	0xFDB
 49080                           fsr2h	equ	0xFDA
 49081                           fsr2l	equ	0xFD9
 49082                           status	equ	0xFD8
 49083                           
 49084 ;; *************** function _USBIncrement1msInternalTimers *****************
 49085 ;; Defined at:
 49086 ;;		line 3027 in file "usb_device.c"
 49087 ;; Parameters:    Size  Location     Type
 49088 ;;		None
 49089 ;; Auto vars:     Size  Location     Type
 49090 ;;		None
 49091 ;; Return value:  Size  Location     Type
 49092 ;;                  1    wreg      void 
 49093 ;; Registers used:
 49094 ;;		wreg, status,2, status,0
 49095 ;; Tracked objects:
 49096 ;;		On entry : 0/0
 49097 ;;		On exit  : 0/0
 49098 ;;		Unchanged: 0/0
 49099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49104 ;;Total ram usage:        0 bytes
 49105 ;; Hardware stack levels used:    1
 49106 ;; This function calls:
 49107 ;;		Nothing
 49108 ;; This function is called by:
 49109 ;;		_USBDeviceTasks
 49110 ;; This function uses a non-reentrant model
 49111 ;;
 49112                           
 49113                           	psect	text202
 49114  015870                     __ptext202:
 49115                           	opt stack 0
 49116  015870                     _USBIncrement1msInternalTimers:
 49117                           	opt stack 16
 49118                           
 49119                           ;usb_device.c: 3035: USB1msTickCount++;
 49120                           
 49121                           ; BSR set to: 15
 49122                           ;incstack = 0
 49123  015870  0E01               	movlw	1
 49124  015872  0101               	movlb	1	; () banked
 49125  015874  272F               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 49126  015876  0E00               	movlw	0
 49127  015878  2330               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 49128  01587A  2331               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 49129  01587C  2332               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 49130                           
 49131                           ; BSR set to: 1
 49132                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 49133  01587E  516D               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 49134  015880  A4D8               	btfss	status,2,c
 49135  015882  0012               	return	
 49136                           
 49137                           ; BSR set to: 1
 49138                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 49139  015884  2B64               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 49140                           
 49141                           ; BSR set to: 1
 49142                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 49143  015886  5164               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 49144  015888  A4D8               	btfss	status,2,c
 49145  01588A  0012               	return	
 49146                           
 49147                           ; BSR set to: 1
 49148                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 49149  01588C  6964               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49150                           
 49151                           ; BSR set to: 1
 49152  01588E  0012               	return	
 49153  015890                     __end_of_USBIncrement1msInternalTimers:
 49154                           	opt stack 0
 49155                           tosu	equ	0xFFF
 49156                           tosh	equ	0xFFE
 49157                           tosl	equ	0xFFD
 49158                           pclatu	equ	0xFFB
 49159                           pclath	equ	0xFFA
 49160                           tblptru	equ	0xFF8
 49161                           tblptrh	equ	0xFF7
 49162                           tblptrl	equ	0xFF6
 49163                           tablat	equ	0xFF5
 49164                           prodh	equ	0xFF4
 49165                           prodl	equ	0xFF3
 49166                           intcon	equ	0xFF2
 49167                           indf0	equ	0xFEF
 49168                           postinc0	equ	0xFEE
 49169                           fsr0h	equ	0xFEA
 49170                           fsr0l	equ	0xFE9
 49171                           wreg	equ	0xFE8
 49172                           indf1	equ	0xFE7
 49173                           postinc1	equ	0xFE6
 49174                           postdec1	equ	0xFE5
 49175                           plusw1	equ	0xFE3
 49176                           fsr1h	equ	0xFE2
 49177                           fsr1l	equ	0xFE1
 49178                           indf2	equ	0xFDF
 49179                           postinc2	equ	0xFDE
 49180                           postdec2	equ	0xFDD
 49181                           plusw2	equ	0xFDB
 49182                           fsr2h	equ	0xFDA
 49183                           fsr2l	equ	0xFD9
 49184                           status	equ	0xFD8
 49185                           
 49186 ;; *************** function _USBCtrlEPService *****************
 49187 ;; Defined at:
 49188 ;;		line 2374 in file "usb_device.c"
 49189 ;; Parameters:    Size  Location     Type
 49190 ;;		None
 49191 ;; Auto vars:     Size  Location     Type
 49192 ;;		None
 49193 ;; Return value:  Size  Location     Type
 49194 ;;                  1    wreg      void 
 49195 ;; Registers used:
 49196 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 49197 ;; Tracked objects:
 49198 ;;		On entry : 0/0
 49199 ;;		On exit  : 0/0
 49200 ;;		Unchanged: 0/0
 49201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49202 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49203 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49204 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49205 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49206 ;;Total ram usage:        1 bytes
 49207 ;; Hardware stack levels used:    1
 49208 ;; Hardware stack levels required when called:    7
 49209 ;; This function calls:
 49210 ;;		_USBCtrlTrfInHandler
 49211 ;;		_USBCtrlTrfOutHandler
 49212 ;;		_USBCtrlTrfSetupHandler
 49213 ;;		i2_memcpy
 49214 ;; This function is called by:
 49215 ;;		_USBDeviceTasks
 49216 ;; This function uses a non-reentrant model
 49217 ;;
 49218                           
 49219                           	psect	text203
 49220  01343A                     __ptext203:
 49221                           	opt stack 0
 49222  01343A                     _USBCtrlEPService:
 49223                           	opt stack 9
 49224                           
 49225                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 49226                           
 49227                           ; BSR set to: 1
 49228                           ;incstack = 0
 49229  01343A  0E2D               	movlw	45
 49230  01343C  0101               	movlb	1	; () banked
 49231  01343E  6F6A               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 49232                           
 49233                           ; BSR set to: 1
 49234                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 49235  013440  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 49236  013444  0EFD               	movlw	253
 49237  013446  161E               	andwf	??_USBCtrlEPService,f,c
 49238  013448  A4D8               	btfss	status,2,c
 49239  01344A  D03B               	goto	i2l321
 49240                           
 49241                           ; BSR set to: 1
 49242                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 49243  01344C  C1C1  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 49244  013450  90D8               	bcf	status,0,c
 49245  013452  321E               	rrcf	??_USBCtrlEPService,f,c
 49246  013454  0E3F               	movlw	63
 49247  013456  161E               	andwf	??_USBCtrlEPService,f,c
 49248  013458  501E               	movf	??_USBCtrlEPService,w,c
 49249  01345A  0D04               	mullw	4
 49250  01345C  0E00               	movlw	0
 49251  01345E  24F3               	addwf	prodl,w,c
 49252  013460  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 49253  013462  0E0D               	movlw	13
 49254  013464  20F4               	addwfc	prodh,w,c
 49255  013466  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 49256                           
 49257                           ; BSR set to: 1
 49258                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 49259  013468  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 49260  01346C  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 49261                           
 49262                           ; BSR set to: 1
 49263                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 49264  013470  0E04               	movlw	4
 49265  013472  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 49266  013474  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 49267  013476  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49268  013478  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 49269                           
 49270                           ; BSR set to: 1
 49271                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 49272  01347A  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49273  01347E  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49274  013482  30DF               	rrcf	223,w,c
 49275  013484  32E8               	rrcf	wreg,f,c
 49276  013486  0B0F               	andlw	15
 49277  013488  0A0D               	xorlw	13
 49278  01348A  A4D8               	btfss	status,2,c
 49279  01348C  D017               	goto	i2l322
 49280                           
 49281                           ; BSR set to: 1
 49282                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 49283  01348E  0E30               	movlw	48
 49284  013490  6E01               	movwf	i2memcpy@d1,c
 49285  013492  0E0D               	movlw	13
 49286  013494  6E02               	movwf	i2memcpy@d1+1,c
 49287  013496  EE20 F002          	lfsr	2,2
 49288  01349A  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 49289  01349C  26D9               	addwf	fsr2l,f,c
 49290  01349E  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 49291  0134A0  22DA               	addwfc	fsr2h,f,c
 49292  0134A2  CFDE F003          	movff	postinc2,i2memcpy@s1
 49293  0134A6  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 49294  0134AA  0E00               	movlw	0
 49295  0134AC  6E06               	movwf	i2memcpy@n+1,c
 49296  0134AE  0E08               	movlw	8
 49297  0134B0  6E05               	movwf	i2memcpy@n,c
 49298  0134B2  ECEC  F0A2         	call	i2_memcpy	;wreg free
 49299                           
 49300                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 49301  0134B6  ECBF  F09C         	call	_USBCtrlTrfSetupHandler	;wreg free
 49302                           
 49303                           ;usb_device.c: 2411: }
 49304  0134BA  0012               	return	
 49305  0134BC                     i2l322:
 49306                           
 49307                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 49308  0134BC  EC8D  F0A2         	call	_USBCtrlTrfOutHandler	;wreg free
 49309                           
 49310                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 49311  0134C0  0012               	return	
 49312  0134C2                     i2l321:
 49313                           
 49314                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 49315  0134C2  0101               	movlb	1	; () banked
 49316  0134C4  51C1               	movf	_USTATcopy& (0+255),w,b	;volatile
 49317  0134C6  0BFD               	andlw	253
 49318  0134C8  0A04               	xorlw	4
 49319  0134CA  A4D8               	btfss	status,2,c
 49320  0134CC  0012               	return	
 49321                           
 49322                           ; BSR set to: 1
 49323                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 49324  0134CE  EC42  F095         	call	_USBCtrlTrfInHandler	;wreg free
 49325  0134D2  0012               	return	
 49326  0134D4                     __end_of_USBCtrlEPService:
 49327                           	opt stack 0
 49328                           tosu	equ	0xFFF
 49329                           tosh	equ	0xFFE
 49330                           tosl	equ	0xFFD
 49331                           pclatu	equ	0xFFB
 49332                           pclath	equ	0xFFA
 49333                           tblptru	equ	0xFF8
 49334                           tblptrh	equ	0xFF7
 49335                           tblptrl	equ	0xFF6
 49336                           tablat	equ	0xFF5
 49337                           prodh	equ	0xFF4
 49338                           prodl	equ	0xFF3
 49339                           intcon	equ	0xFF2
 49340                           indf0	equ	0xFEF
 49341                           postinc0	equ	0xFEE
 49342                           fsr0h	equ	0xFEA
 49343                           fsr0l	equ	0xFE9
 49344                           wreg	equ	0xFE8
 49345                           indf1	equ	0xFE7
 49346                           postinc1	equ	0xFE6
 49347                           postdec1	equ	0xFE5
 49348                           plusw1	equ	0xFE3
 49349                           fsr1h	equ	0xFE2
 49350                           fsr1l	equ	0xFE1
 49351                           indf2	equ	0xFDF
 49352                           postinc2	equ	0xFDE
 49353                           postdec2	equ	0xFDD
 49354                           plusw2	equ	0xFDB
 49355                           fsr2h	equ	0xFDA
 49356                           fsr2l	equ	0xFD9
 49357                           status	equ	0xFD8
 49358                           
 49359 ;; *************** function i2_memcpy *****************
 49360 ;; Defined at:
 49361 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 49362 ;; Parameters:    Size  Location     Type
 49363 ;;  d1              2    0[COMRAM] PTR void 
 49364 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 49365 ;;		 -> msd_buffer(512), SetupPkt(8), 
 49366 ;;  s1              2    2[COMRAM] PTR const void 
 49367 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 49368 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 49369 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 49370 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 49371 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 49372 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 49373 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 49374 ;;  n               2    4[COMRAM] unsigned int 
 49375 ;; Auto vars:     Size  Location     Type
 49376 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 49377 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 49378 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 49379 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 49380 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 49381 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 49382 ;;		 -> config(28), ReceivedDataBuffer(64), os(48), inq_resp(36), 
 49383 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 49384 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 49385 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 49386 ;;		 -> msd_buffer(512), SetupPkt(8), 
 49387 ;;  memcpy          1   10[COMRAM] unsigned char 
 49388 ;; Return value:  Size  Location     Type
 49389 ;;                  2    0[COMRAM] PTR void 
 49390 ;; Registers used:
 49391 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 49392 ;; Tracked objects:
 49393 ;;		On entry : 0/0
 49394 ;;		On exit  : 0/0
 49395 ;;		Unchanged: 0/0
 49396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49397 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49398 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49400 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49401 ;;Total ram usage:       11 bytes
 49402 ;; Hardware stack levels used:    1
 49403 ;; This function calls:
 49404 ;;		Nothing
 49405 ;; This function is called by:
 49406 ;;		_USBCtrlEPService
 49407 ;; This function uses a non-reentrant model
 49408 ;;
 49409                           
 49410                           	psect	text204
 49411  0145D8                     __ptext204:
 49412                           	opt stack 0
 49413  0145D8                     i2_memcpy:
 49414                           	opt stack 15
 49415                           
 49416                           ;incstack = 0
 49417  0145D8  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 49418  0145DC  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 49419  0145E0  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 49420  0145E4  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 49421  0145E8  D01C               	goto	i2l3709
 49422  0145EA                     i2l16601:
 49423  0145EA  C009  FFF6         	movff	i2memcpy@s,tblptrl
 49424  0145EE  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 49425  0145F2  0E00               	movlw	low (__mediumconst shr (0+16))
 49426  0145F4  6EF8               	movwf	tblptru,c
 49427  0145F6  0E0E               	movlw	(high __ramtop+-1)
 49428  0145F8  64F7               	cpfsgt	tblptrh,c
 49429  0145FA  D003               	bra	i2u1574_47
 49430  0145FC  0008               	tblrd		*
 49431  0145FE  50F5               	movf	tablat,w,c
 49432  014600  D005               	bra	i2u1574_40
 49433  014602                     i2u1574_47:
 49434  014602  CFF6 FFE9          	movff	tblptrl,fsr0l
 49435  014606  CFF7 FFEA          	movff	tblptrh,fsr0h
 49436  01460A  50EF               	movf	indf0,w,c
 49437  01460C                     i2u1574_40:
 49438  01460C  6E0B               	movwf	i2memcpy@tmp,c
 49439  01460E  4A09               	infsnz	i2memcpy@s,f,c
 49440  014610  2A0A               	incf	i2memcpy@s+1,f,c
 49441  014612  C007  FFD9         	movff	i2memcpy@d,fsr2l
 49442  014616  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 49443  01461A  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 49444  01461E  4A07               	infsnz	i2memcpy@d,f,c
 49445  014620  2A08               	incf	i2memcpy@d+1,f,c
 49446  014622                     i2l3709:
 49447  014622  0605               	decf	i2memcpy@n,f,c
 49448  014624  A0D8               	btfss	status,0,c
 49449  014626  0606               	decf	i2memcpy@n+1,f,c
 49450  014628  2805               	incf	i2memcpy@n,w,c
 49451  01462A  E1DF               	bnz	i2l16601
 49452  01462C  2806               	incf	i2memcpy@n+1,w,c
 49453  01462E  B4D8               	btfsc	status,2,c
 49454  014630  0012               	return	
 49455  014632  D7DB               	goto	i2l3710
 49456  014634                     __end_ofi2_memcpy:
 49457                           	opt stack 0
 49458                           tosu	equ	0xFFF
 49459                           tosh	equ	0xFFE
 49460                           tosl	equ	0xFFD
 49461                           pclatu	equ	0xFFB
 49462                           pclath	equ	0xFFA
 49463                           tblptru	equ	0xFF8
 49464                           tblptrh	equ	0xFF7
 49465                           tblptrl	equ	0xFF6
 49466                           tablat	equ	0xFF5
 49467                           prodh	equ	0xFF4
 49468                           prodl	equ	0xFF3
 49469                           intcon	equ	0xFF2
 49470                           indf0	equ	0xFEF
 49471                           postinc0	equ	0xFEE
 49472                           fsr0h	equ	0xFEA
 49473                           fsr0l	equ	0xFE9
 49474                           wreg	equ	0xFE8
 49475                           indf1	equ	0xFE7
 49476                           postinc1	equ	0xFE6
 49477                           postdec1	equ	0xFE5
 49478                           plusw1	equ	0xFE3
 49479                           fsr1h	equ	0xFE2
 49480                           fsr1l	equ	0xFE1
 49481                           indf2	equ	0xFDF
 49482                           postinc2	equ	0xFDE
 49483                           postdec2	equ	0xFDD
 49484                           plusw2	equ	0xFDB
 49485                           fsr2h	equ	0xFDA
 49486                           fsr2l	equ	0xFD9
 49487                           status	equ	0xFD8
 49488                           
 49489 ;; *************** function _USBCtrlTrfSetupHandler *****************
 49490 ;; Defined at:
 49491 ;;		line 2467 in file "usb_device.c"
 49492 ;; Parameters:    Size  Location     Type
 49493 ;;		None
 49494 ;; Auto vars:     Size  Location     Type
 49495 ;;		None
 49496 ;; Return value:  Size  Location     Type
 49497 ;;                  1    wreg      void 
 49498 ;; Registers used:
 49499 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 49500 ;; Tracked objects:
 49501 ;;		On entry : 0/0
 49502 ;;		On exit  : 0/0
 49503 ;;		Unchanged: 0/0
 49504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49509 ;;Total ram usage:        0 bytes
 49510 ;; Hardware stack levels used:    1
 49511 ;; Hardware stack levels required when called:    6
 49512 ;; This function calls:
 49513 ;;		_USBCheckStdRequest
 49514 ;;		_USBCtrlEPServiceComplete
 49515 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49516 ;; This function is called by:
 49517 ;;		_USBCtrlEPService
 49518 ;; This function uses a non-reentrant model
 49519 ;;
 49520                           
 49521                           	psect	text205
 49522  01397E                     __ptext205:
 49523                           	opt stack 0
 49524  01397E                     _USBCtrlTrfSetupHandler:
 49525                           	opt stack 9
 49526                           
 49527                           ;usb_device.c: 2472: shortPacketStatus = 0;
 49528                           
 49529                           ;incstack = 0
 49530  01397E  0E00               	movlw	0
 49531  013980  0101               	movlb	1	; () banked
 49532  013982  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 49533                           
 49534                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 49535  013984  0E00               	movlw	0
 49536  013986  6F69               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 49537                           
 49538                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 49539  013988  0E00               	movlw	0
 49540  01398A  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49541                           
 49542                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 49543  01398C  0E00               	movlw	0
 49544  01398E  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49545                           
 49546                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 49547  013990  0E00               	movlw	0
 49548  013992  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 49549                           
 49550                           ;usb_device.c: 2477: controlTransferState = 0;
 49551  013994  0E00               	movlw	0
 49552  013996  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49553                           
 49554                           ; BSR set to: 1
 49555                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49556  013998  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49557  01399C  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49558  0139A0  0E7F               	movlw	127
 49559  0139A2  16DF               	andwf	indf2,f,c
 49560                           
 49561                           ; BSR set to: 1
 49562                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49563  0139A4  0E04               	movlw	4
 49564  0139A6  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49565  0139A8  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49566  0139AA  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49567  0139AC  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49568                           
 49569                           ; BSR set to: 1
 49570                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 49571  0139AE  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49572  0139B2  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49573  0139B6  0E7F               	movlw	127
 49574  0139B8  16DF               	andwf	indf2,f,c
 49575                           
 49576                           ; BSR set to: 1
 49577                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 49578  0139BA  0E04               	movlw	4
 49579  0139BC  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 49580  0139BE  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 49581  0139C0  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 49582  0139C2  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 49583                           
 49584                           ; BSR set to: 1
 49585                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 49586  0139C4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49587  0139C8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49588  0139CC  0E7F               	movlw	127
 49589  0139CE  16DF               	andwf	indf2,f,c
 49590                           
 49591                           ; BSR set to: 1
 49592                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 49593  0139D0  0E00               	movlw	0
 49594  0139D2  6E55               	movwf	_inPipes+3,c	;volatile
 49595                           
 49596                           ; BSR set to: 1
 49597                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 49598  0139D4  0E00               	movlw	0
 49599  0139D6  6E57               	movwf	_inPipes+5,c	;volatile
 49600  0139D8  0E00               	movlw	0
 49601  0139DA  6E56               	movwf	_inPipes+4,c	;volatile
 49602                           
 49603                           ; BSR set to: 1
 49604                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 49605  0139DC  0E00               	movlw	0
 49606  0139DE  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49607                           
 49608                           ; BSR set to: 1
 49609                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 49610  0139E0  0E00               	movlw	0
 49611  0139E2  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49612  0139E4  0E00               	movlw	0
 49613  0139E6  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49614                           
 49615                           ; BSR set to: 1
 49616                           ;usb_device.c: 2502: USBCheckStdRequest();
 49617  0139E8  EC04  F092         	call	_USBCheckStdRequest	;wreg free
 49618                           
 49619                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 49620  0139EC  0E00               	movlw	0
 49621  0139EE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49622  0139F0  0E03               	movlw	3
 49623  0139F2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49624  0139F4  0E00               	movlw	0
 49625  0139F6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49626  0139F8  0E00               	movlw	0
 49627  0139FA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49628  0139FC  0E00               	movlw	0
 49629  0139FE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49630  013A00  0E00               	movlw	0
 49631  013A02  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49632  013A04  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49633                           
 49634                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 49635  013A08  ECB5  F08B         	call	_USBCtrlEPServiceComplete	;wreg free
 49636  013A0C  0012               	return		;funcret
 49637  013A0E                     __end_of_USBCtrlTrfSetupHandler:
 49638                           	opt stack 0
 49639                           tosu	equ	0xFFF
 49640                           tosh	equ	0xFFE
 49641                           tosl	equ	0xFFD
 49642                           pclatu	equ	0xFFB
 49643                           pclath	equ	0xFFA
 49644                           tblptru	equ	0xFF8
 49645                           tblptrh	equ	0xFF7
 49646                           tblptrl	equ	0xFF6
 49647                           tablat	equ	0xFF5
 49648                           prodh	equ	0xFF4
 49649                           prodl	equ	0xFF3
 49650                           intcon	equ	0xFF2
 49651                           indf0	equ	0xFEF
 49652                           postinc0	equ	0xFEE
 49653                           fsr0h	equ	0xFEA
 49654                           fsr0l	equ	0xFE9
 49655                           wreg	equ	0xFE8
 49656                           indf1	equ	0xFE7
 49657                           postinc1	equ	0xFE6
 49658                           postdec1	equ	0xFE5
 49659                           plusw1	equ	0xFE3
 49660                           fsr1h	equ	0xFE2
 49661                           fsr1l	equ	0xFE1
 49662                           indf2	equ	0xFDF
 49663                           postinc2	equ	0xFDE
 49664                           postdec2	equ	0xFDD
 49665                           plusw2	equ	0xFDB
 49666                           fsr2h	equ	0xFDA
 49667                           fsr2l	equ	0xFD9
 49668                           status	equ	0xFD8
 49669                           
 49670 ;; *************** function _USBCtrlEPServiceComplete *****************
 49671 ;; Defined at:
 49672 ;;		line 1618 in file "usb_device.c"
 49673 ;; Parameters:    Size  Location     Type
 49674 ;;		None
 49675 ;; Auto vars:     Size  Location     Type
 49676 ;;		None
 49677 ;; Return value:  Size  Location     Type
 49678 ;;                  1    wreg      void 
 49679 ;; Registers used:
 49680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49681 ;; Tracked objects:
 49682 ;;		On entry : 0/0
 49683 ;;		On exit  : 0/0
 49684 ;;		Unchanged: 0/0
 49685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49690 ;;Total ram usage:        0 bytes
 49691 ;; Hardware stack levels used:    1
 49692 ;; Hardware stack levels required when called:    2
 49693 ;; This function calls:
 49694 ;;		_USBCtrlEPAllowDataStage
 49695 ;;		_USBCtrlEPAllowStatusStage
 49696 ;; This function is called by:
 49697 ;;		_USBCtrlTrfSetupHandler
 49698 ;; This function uses a non-reentrant model
 49699 ;;
 49700                           
 49701                           	psect	text206
 49702  01176A                     __ptext206:
 49703                           	opt stack 0
 49704  01176A                     _USBCtrlEPServiceComplete:
 49705                           	opt stack 12
 49706                           
 49707                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 49708                           
 49709                           ;incstack = 0
 49710  01176A  9865               	bcf	3941,4,c	;volatile
 49711                           
 49712                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 49713  01176C  BE55               	btfsc	_inPipes+3,7,c	;volatile
 49714  01176E  D03A               	goto	i2l231
 49715                           
 49716                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 49717  011770  0101               	movlb	1	; () banked
 49718  011772  AF15               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 49719  011774  D00C               	goto	i2l232
 49720                           
 49721                           ; BSR set to: 1
 49722                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 49723  011776  0E02               	movlw	2
 49724  011778  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49725                           
 49726                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 49727  01177A  5165               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 49728  01177C  B4D8               	btfsc	status,2,c
 49729                           
 49730                           ; BSR set to: 1
 49731                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 49732  01177E  EC6A  F09A         	call	_USBCtrlEPAllowDataStage	;wreg free
 49733                           
 49734                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 49735  011782  0E00               	movlw	0
 49736  011784  0101               	movlb	1	; () banked
 49737  011786  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49738                           
 49739                           ; BSR set to: 1
 49740                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 49741  011788  0E00               	movlw	0
 49742  01178A  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49743                           
 49744                           ;usb_device.c: 1654: }
 49745  01178C  0012               	return	
 49746  01178E                     i2l232:
 49747                           
 49748                           ; BSR set to: 1
 49749                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 49750                           
 49751                           ; BSR set to: 1
 49752  01178E  EE20 F001          	lfsr	2,1
 49753  011792  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49754  011794  26D9               	addwf	fsr2l,f,c
 49755  011796  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49756  011798  22DA               	addwfc	fsr2h,f,c
 49757  01179A  0E08               	movlw	8
 49758  01179C  6EDF               	movwf	indf2,c
 49759                           
 49760                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49761  01179E  EE20 F002          	lfsr	2,2
 49762  0117A2  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49763  0117A4  26D9               	addwf	fsr2l,f,c
 49764  0117A6  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49765  0117A8  22DA               	addwfc	fsr2h,f,c
 49766  0117AA  0E30               	movlw	48
 49767  0117AC  6EDE               	movwf	postinc2,c
 49768  0117AE  0E0D               	movlw	13
 49769  0117B0  6EDD               	movwf	postdec2,c
 49770                           
 49771                           ; BSR set to: 1
 49772                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 49773  0117B2  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49774  0117B6  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49775  0117BA  0E0C               	movlw	12
 49776  0117BC  6EDF               	movwf	indf2,c
 49777                           
 49778                           ; BSR set to: 1
 49779                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49780  0117BE  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49781  0117C2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49782  0117C6  0E00               	movlw	0
 49783  0117C8  8EDB               	bsf	plusw2,7,c
 49784                           
 49785                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 49786  0117CA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49787  0117CE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49788  0117D2  0E04               	movlw	4
 49789  0117D4  6EDF               	movwf	indf2,c
 49790                           
 49791                           ; BSR set to: 1
 49792                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 49793  0117D6  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 49794  0117DA  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49795  0117DE  0E00               	movlw	0
 49796  0117E0  8EDB               	bsf	plusw2,7,c
 49797                           
 49798                           ; BSR set to: 1
 49799                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 49800  0117E2  0012               	return	
 49801  0117E4                     i2l231:
 49802                           
 49803                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 49804  0117E4  010D               	movlb	13	; () banked
 49805  0117E6  AF30               	btfss	48,7,b	;volatile
 49806  0117E8  D012               	goto	i2l236
 49807                           
 49808                           ; BSR set to: 13
 49809                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 49810  0117EA  0E01               	movlw	1
 49811  0117EC  0101               	movlb	1	; () banked
 49812  0117EE  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49813                           
 49814                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 49815  0117F0  5166               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 49816  0117F2  B4D8               	btfsc	status,2,c
 49817                           
 49818                           ; BSR set to: 1
 49819                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 49820  0117F4  EC6A  F09A         	call	_USBCtrlEPAllowDataStage	;wreg free
 49821                           
 49822                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 49823  0117F8  0E00               	movlw	0
 49824  0117FA  0101               	movlb	1	; () banked
 49825  0117FC  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49826                           
 49827                           ; BSR set to: 1
 49828                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 49829  0117FE  0E00               	movlw	0
 49830  011800  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49831                           
 49832                           ; BSR set to: 1
 49833                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 49834  011802  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49835  011804  A4D8               	btfss	status,2,c
 49836  011806  0012               	return	
 49837                           
 49838                           ; BSR set to: 1
 49839                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 49840  011808  ECE0  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49841                           
 49842                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 49843  01180C  0012               	return	
 49844  01180E                     i2l236:
 49845                           
 49846                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 49847  01180E  0E02               	movlw	2
 49848  011810  0101               	movlb	1	; () banked
 49849  011812  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 49850                           
 49851                           ; BSR set to: 1
 49852                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 49853  011814  EE20 F001          	lfsr	2,1
 49854  011818  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49855  01181A  26D9               	addwf	fsr2l,f,c
 49856  01181C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49857  01181E  22DA               	addwfc	fsr2h,f,c
 49858  011820  0E08               	movlw	8
 49859  011822  6EDF               	movwf	indf2,c
 49860                           
 49861                           ; BSR set to: 1
 49862                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 49863  011824  EE20 F002          	lfsr	2,2
 49864  011828  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49865  01182A  26D9               	addwf	fsr2l,f,c
 49866  01182C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 49867  01182E  22DA               	addwfc	fsr2h,f,c
 49868  011830  0E30               	movlw	48
 49869  011832  6EDE               	movwf	postinc2,c
 49870  011834  0E0D               	movlw	13
 49871  011836  6EDD               	movwf	postdec2,c
 49872                           
 49873                           ; BSR set to: 1
 49874                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 49875  011838  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49876  01183C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49877  011840  0E04               	movlw	4
 49878  011842  6EDF               	movwf	indf2,c
 49879                           
 49880                           ; BSR set to: 1
 49881                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 49882  011844  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 49883  011848  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 49884  01184C  0E00               	movlw	0
 49885  01184E  8EDB               	bsf	plusw2,7,c
 49886                           
 49887                           ; BSR set to: 1
 49888                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 49889  011850  0E00               	movlw	0
 49890  011852  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49891                           
 49892                           ; BSR set to: 1
 49893                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 49894  011854  0E00               	movlw	0
 49895  011856  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49896                           
 49897                           ; BSR set to: 1
 49898                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 49899  011858  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 49900  01185A  A4D8               	btfss	status,2,c
 49901  01185C  0012               	return	
 49902                           
 49903                           ; BSR set to: 1
 49904                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 49905  01185E  ECE0  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49906  011862  0012               	return	
 49907  011864                     __end_of_USBCtrlEPServiceComplete:
 49908                           	opt stack 0
 49909                           tosu	equ	0xFFF
 49910                           tosh	equ	0xFFE
 49911                           tosl	equ	0xFFD
 49912                           pclatu	equ	0xFFB
 49913                           pclath	equ	0xFFA
 49914                           tblptru	equ	0xFF8
 49915                           tblptrh	equ	0xFF7
 49916                           tblptrl	equ	0xFF6
 49917                           tablat	equ	0xFF5
 49918                           prodh	equ	0xFF4
 49919                           prodl	equ	0xFF3
 49920                           intcon	equ	0xFF2
 49921                           indf0	equ	0xFEF
 49922                           postinc0	equ	0xFEE
 49923                           fsr0h	equ	0xFEA
 49924                           fsr0l	equ	0xFE9
 49925                           wreg	equ	0xFE8
 49926                           indf1	equ	0xFE7
 49927                           postinc1	equ	0xFE6
 49928                           postdec1	equ	0xFE5
 49929                           plusw1	equ	0xFE3
 49930                           fsr1h	equ	0xFE2
 49931                           fsr1l	equ	0xFE1
 49932                           indf2	equ	0xFDF
 49933                           postinc2	equ	0xFDE
 49934                           postdec2	equ	0xFDD
 49935                           plusw2	equ	0xFDB
 49936                           fsr2h	equ	0xFDA
 49937                           fsr2l	equ	0xFD9
 49938                           status	equ	0xFD8
 49939                           
 49940 ;; *************** function _USBCtrlEPAllowDataStage *****************
 49941 ;; Defined at:
 49942 ;;		line 1490 in file "usb_device.c"
 49943 ;; Parameters:    Size  Location     Type
 49944 ;;		None
 49945 ;; Auto vars:     Size  Location     Type
 49946 ;;		None
 49947 ;; Return value:  Size  Location     Type
 49948 ;;                  1    wreg      void 
 49949 ;; Registers used:
 49950 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 49951 ;; Tracked objects:
 49952 ;;		On entry : 0/0
 49953 ;;		On exit  : 0/0
 49954 ;;		Unchanged: 0/0
 49955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49956 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49957 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49959 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49960 ;;Total ram usage:        0 bytes
 49961 ;; Hardware stack levels used:    1
 49962 ;; Hardware stack levels required when called:    1
 49963 ;; This function calls:
 49964 ;;		_USBCtrlTrfTxService
 49965 ;; This function is called by:
 49966 ;;		_USBCtrlEPServiceComplete
 49967 ;; This function uses a non-reentrant model
 49968 ;;
 49969                           
 49970                           	psect	text207
 49971  0134D4                     __ptext207:
 49972                           	opt stack 0
 49973  0134D4                     _USBCtrlEPAllowDataStage:
 49974                           	opt stack 12
 49975                           
 49976                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 49977                           
 49978                           ;incstack = 0
 49979  0134D4  0E00               	movlw	0
 49980  0134D6  0101               	movlb	1	; () banked
 49981  0134D8  6F66               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49982                           
 49983                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 49984  0134DA  0E00               	movlw	0
 49985  0134DC  6F65               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49986                           
 49987                           ; BSR set to: 1
 49988                           ;usb_device.c: 1495: if(controlTransferState == 2)
 49989  0134DE  0E02               	movlw	2
 49990  0134E0  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 49991  0134E2  A4D8               	btfss	status,2,c
 49992  0134E4  D01F               	goto	i2l220
 49993                           
 49994                           ; BSR set to: 1
 49995                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 49996  0134E6  EE20 F001          	lfsr	2,1
 49997  0134EA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 49998  0134EC  26D9               	addwf	fsr2l,f,c
 49999  0134EE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50000  0134F0  22DA               	addwfc	fsr2h,f,c
 50001  0134F2  0E08               	movlw	8
 50002  0134F4  6EDF               	movwf	indf2,c
 50003                           
 50004                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 50005  0134F6  EE20 F002          	lfsr	2,2
 50006  0134FA  505C               	movf	_pBDTEntryEP0OutNext,w,c
 50007  0134FC  26D9               	addwf	fsr2l,f,c
 50008  0134FE  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50009  013500  22DA               	addwfc	fsr2h,f,c
 50010  013502  0E38               	movlw	56
 50011  013504  6EDE               	movwf	postinc2,c
 50012  013506  0E0D               	movlw	13
 50013  013508  6EDD               	movwf	postdec2,c
 50014                           
 50015                           ; BSR set to: 1
 50016                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 50017  01350A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50018  01350E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50019  013512  0E48               	movlw	72
 50020  013514  6EDF               	movwf	indf2,c
 50021                           
 50022                           ; BSR set to: 1
 50023                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50024  013516  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50025  01351A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50026  01351E  0E00               	movlw	0
 50027  013520  8EDB               	bsf	plusw2,7,c
 50028                           
 50029                           ;usb_device.c: 1502: }
 50030  013522  0012               	return	
 50031  013524                     i2l220:
 50032                           
 50033                           ; BSR set to: 1
 50034                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 50035                           
 50036                           ; BSR set to: 1
 50037  013524  5056               	movf	_inPipes+4,w,c	;volatile
 50038  013526  010D               	movlb	13	; () banked
 50039  013528  5D36               	subwf	54,w,b	;volatile
 50040  01352A  5057               	movf	_inPipes+5,w,c	;volatile
 50041  01352C  5937               	subwfb	55,w,b	;volatile
 50042  01352E  B0D8               	btfsc	status,0,c
 50043  013530  D004               	goto	i2l222
 50044                           
 50045                           ; BSR set to: 13
 50046                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 50047  013532  CD36 F056          	movff	3382,_inPipes+4	;volatile
 50048  013536  CD37 F057          	movff	3383,_inPipes+5	;volatile
 50049  01353A                     i2l222:
 50050                           
 50051                           ; BSR set to: 13
 50052                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 50053                           
 50054                           ; BSR set to: 13
 50055  01353A  ECDB  F092         	call	_USBCtrlTrfTxService	;wreg free
 50056                           
 50057                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 50058  01353E  0101               	movlb	1	; () banked
 50059  013540  EE20 F002          	lfsr	2,2
 50060  013544  511B               	movf	_pBDTEntryIn& (0+255),w,b
 50061  013546  26D9               	addwf	fsr2l,f,c
 50062  013548  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 50063  01354A  22DA               	addwfc	fsr2h,f,c
 50064  01354C  0E38               	movlw	56
 50065  01354E  6EDE               	movwf	postinc2,c
 50066  013550  0E0D               	movlw	13
 50067  013552  6EDD               	movwf	postdec2,c
 50068                           
 50069                           ; BSR set to: 1
 50070                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 50071  013554  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50072  013558  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50073  01355C  0E48               	movlw	72
 50074  01355E  6EDF               	movwf	indf2,c
 50075                           
 50076                           ; BSR set to: 1
 50077                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50078  013560  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 50079  013564  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50080  013568  0E00               	movlw	0
 50081  01356A  8EDB               	bsf	plusw2,7,c
 50082  01356C  0012               	return	
 50083  01356E                     __end_of_USBCtrlEPAllowDataStage:
 50084                           	opt stack 0
 50085                           tosu	equ	0xFFF
 50086                           tosh	equ	0xFFE
 50087                           tosl	equ	0xFFD
 50088                           pclatu	equ	0xFFB
 50089                           pclath	equ	0xFFA
 50090                           tblptru	equ	0xFF8
 50091                           tblptrh	equ	0xFF7
 50092                           tblptrl	equ	0xFF6
 50093                           tablat	equ	0xFF5
 50094                           prodh	equ	0xFF4
 50095                           prodl	equ	0xFF3
 50096                           intcon	equ	0xFF2
 50097                           indf0	equ	0xFEF
 50098                           postinc0	equ	0xFEE
 50099                           fsr0h	equ	0xFEA
 50100                           fsr0l	equ	0xFE9
 50101                           wreg	equ	0xFE8
 50102                           indf1	equ	0xFE7
 50103                           postinc1	equ	0xFE6
 50104                           postdec1	equ	0xFE5
 50105                           plusw1	equ	0xFE3
 50106                           fsr1h	equ	0xFE2
 50107                           fsr1l	equ	0xFE1
 50108                           indf2	equ	0xFDF
 50109                           postinc2	equ	0xFDE
 50110                           postdec2	equ	0xFDD
 50111                           plusw2	equ	0xFDB
 50112                           fsr2h	equ	0xFDA
 50113                           fsr2l	equ	0xFD9
 50114                           status	equ	0xFD8
 50115                           
 50116 ;; *************** function _USBCheckStdRequest *****************
 50117 ;; Defined at:
 50118 ;;		line 2688 in file "usb_device.c"
 50119 ;; Parameters:    Size  Location     Type
 50120 ;;		None
 50121 ;; Auto vars:     Size  Location     Type
 50122 ;;		None
 50123 ;; Return value:  Size  Location     Type
 50124 ;;                  1    wreg      void 
 50125 ;; Registers used:
 50126 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50127 ;; Tracked objects:
 50128 ;;		On entry : 0/0
 50129 ;;		On exit  : 0/0
 50130 ;;		Unchanged: 0/0
 50131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50136 ;;Total ram usage:        0 bytes
 50137 ;; Hardware stack levels used:    1
 50138 ;; Hardware stack levels required when called:    5
 50139 ;; This function calls:
 50140 ;;		_USBStdFeatureReqHandler
 50141 ;;		_USBStdGetDscHandler
 50142 ;;		_USBStdGetStatusHandler
 50143 ;;		_USBStdSetCfgHandler
 50144 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50145 ;; This function is called by:
 50146 ;;		_USBCtrlTrfSetupHandler
 50147 ;; This function uses a non-reentrant model
 50148 ;;
 50149                           
 50150                           	psect	text208
 50151  012408                     __ptext208:
 50152                           	opt stack 0
 50153  012408                     _USBCheckStdRequest:
 50154                           	opt stack 9
 50155                           
 50156                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 50157                           
 50158                           ; BSR set to: 1
 50159                           ;incstack = 0
 50160  012408  010D               	movlb	13	; () banked
 50161  01240A  3930               	swapf	48,w,b	;volatile
 50162  01240C  32E8               	rrcf	wreg,f,c
 50163  01240E  0B03               	andlw	3
 50164  012410  0900               	iorlw	0
 50165  012412  A4D8               	btfss	status,2,c
 50166  012414  0012               	return	
 50167  012416  D042               	goto	i2l355
 50168  012418                     i2l356:
 50169                           
 50170                           ; BSR set to: 13
 50171                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 50172  012418  8E55               	bsf	_inPipes+3,7,c	;volatile
 50173                           
 50174                           ; BSR set to: 13
 50175                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 50176  01241A  0E08               	movlw	8
 50177  01241C  6E5E               	movwf	_USBDeviceState,c	;volatile
 50178                           
 50179                           ;usb_device.c: 2698: break;
 50180  01241E  0012               	return	
 50181  012420                     
 50182                           ; BSR set to: 13
 50183                           ;usb_device.c: 2700: USBStdGetDscHandler();
 50184                           
 50185                           ; BSR set to: 13
 50186  012420  ECD8  F083         	call	_USBStdGetDscHandler	;wreg free
 50187                           
 50188                           ;usb_device.c: 2701: break;
 50189  012424  0012               	return	
 50190  012426                     
 50191                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 50192  012426  EC29  F091         	call	_USBStdSetCfgHandler	;wreg free
 50193                           
 50194                           ;usb_device.c: 2704: break;
 50195  01242A  0012               	return	
 50196  01242C                     
 50197                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 50198  01242C  0EC2               	movlw	low _USBActiveConfiguration
 50199  01242E  6E52               	movwf	_inPipes,c	;volatile
 50200  012430  0E01               	movlw	high _USBActiveConfiguration
 50201  012432  6E53               	movwf	_inPipes+1,c	;volatile
 50202                           
 50203                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50204  012434  8055               	bsf	_inPipes+3,0,c	;volatile
 50205                           
 50206                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 50207  012436  0E01               	movlw	1
 50208  012438  6E56               	movwf	_inPipes+4,c	;volatile
 50209                           
 50210                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 50211  01243A  8E55               	bsf	_inPipes+3,7,c	;volatile
 50212                           
 50213                           ;usb_device.c: 2710: break;
 50214  01243C  0012               	return	
 50215  01243E                     
 50216                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 50217  01243E  ECCD  F099         	call	_USBStdGetStatusHandler	;wreg free
 50218                           
 50219                           ;usb_device.c: 2713: break;
 50220  012442  0012               	return	
 50221  012444                     
 50222                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 50223  012444  EC59  F06F         	call	_USBStdFeatureReqHandler	;wreg free
 50224                           
 50225                           ;usb_device.c: 2717: break;
 50226  012448  0012               	return	
 50227  01244A                     
 50228                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 50229  01244A  010D               	movlb	13	; () banked
 50230  01244C  5134               	movf	52,w,b	;volatile
 50231  01244E  0D01               	mullw	1
 50232  012450  0EBD               	movlw	low _USBAlternateInterface
 50233  012452  24F3               	addwf	prodl,w,c
 50234  012454  6E52               	movwf	_inPipes,c	;volatile
 50235  012456  0E01               	movlw	high _USBAlternateInterface
 50236  012458  20F4               	addwfc	prodh,w,c
 50237  01245A  6E53               	movwf	_inPipes+1,c	;volatile
 50238                           
 50239                           ; BSR set to: 13
 50240                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50241  01245C  8055               	bsf	_inPipes+3,0,c	;volatile
 50242                           
 50243                           ; BSR set to: 13
 50244                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 50245  01245E  0E01               	movlw	1
 50246  012460  6E56               	movwf	_inPipes+4,c	;volatile
 50247                           
 50248                           ; BSR set to: 13
 50249                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 50250  012462  8E55               	bsf	_inPipes+3,7,c	;volatile
 50251                           
 50252                           ;usb_device.c: 2723: break;
 50253  012464  0012               	return	
 50254  012466                     i2l365:
 50255                           
 50256                           ; BSR set to: 13
 50257                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 50258  012466  8E55               	bsf	_inPipes+3,7,c	;volatile
 50259                           
 50260                           ; BSR set to: 13
 50261                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 50262  012468  5134               	movf	52,w,b	;volatile
 50263  01246A  0D01               	mullw	1
 50264  01246C  0EBD               	movlw	low _USBAlternateInterface
 50265  01246E  24F3               	addwf	prodl,w,c
 50266  012470  6ED9               	movwf	fsr2l,c
 50267  012472  0E01               	movlw	high _USBAlternateInterface
 50268  012474  20F4               	addwfc	prodh,w,c
 50269  012476  6EDA               	movwf	fsr2h,c
 50270  012478  CD32 FFDF          	movff	3378,indf2	;volatile
 50271                           
 50272                           ;usb_device.c: 2727: break;
 50273  01247C  0012               	return	
 50274  01247E                     
 50275                           ; BSR set to: 13
 50276                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 50277                           
 50278                           ; BSR set to: 13
 50279  01247E  0E00               	movlw	0
 50280  012480  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50281  012482  0E02               	movlw	2
 50282  012484  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50283  012486  0E00               	movlw	0
 50284  012488  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50285  01248A  0E00               	movlw	0
 50286  01248C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50287  01248E  0E00               	movlw	0
 50288  012490  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50289  012492  0E00               	movlw	0
 50290  012494  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50291  012496  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50292                           
 50293                           ;usb_device.c: 2734: }
 50294                           
 50295                           ;usb_device.c: 2733: break;
 50296                           
 50297                           ;usb_device.c: 2732: default:
 50298                           
 50299                           ;usb_device.c: 2731: case 12:
 50300                           
 50301                           ;usb_device.c: 2730: break;
 50302  01249A  0012               	return	
 50303  01249C                     i2l355:
 50304  01249C  010D               	movlb	13	; () banked
 50305  01249E  5131               	movf	49,w,b	;volatile
 50306                           
 50307                           ; Switch size 1, requested type "space"
 50308                           ; Number of cases is 11, Range of values is 0 to 12
 50309                           ; switch strategies available:
 50310                           ; Name         Instructions Cycles
 50311                           ; simple_byte           34    18 (average)
 50312                           ;	Chosen strategy is simple_byte
 50313  0124A0  0A00               	xorlw	0	; case 0
 50314  0124A2  B4D8               	btfsc	status,2,c
 50315  0124A4  D7CC               	goto	i2l361
 50316  0124A6  0A01               	xorlw	1	; case 1
 50317  0124A8  B4D8               	btfsc	status,2,c
 50318  0124AA  D7CC               	goto	i2l362
 50319  0124AC  0A02               	xorlw	2	; case 3
 50320  0124AE  B4D8               	btfsc	status,2,c
 50321  0124B0  D7C9               	goto	i2l362
 50322  0124B2  0A06               	xorlw	6	; case 5
 50323  0124B4  B4D8               	btfsc	status,2,c
 50324  0124B6  D7B0               	goto	i2l356
 50325  0124B8  0A03               	xorlw	3	; case 6
 50326  0124BA  B4D8               	btfsc	status,2,c
 50327  0124BC  D7B1               	goto	i2l358
 50328  0124BE  0A01               	xorlw	1	; case 7
 50329  0124C0  B4D8               	btfsc	status,2,c
 50330  0124C2  D7DD               	goto	i2l366
 50331  0124C4  0A0F               	xorlw	15	; case 8
 50332  0124C6  B4D8               	btfsc	status,2,c
 50333  0124C8  D7B1               	goto	i2l360
 50334  0124CA  0A01               	xorlw	1	; case 9
 50335  0124CC  B4D8               	btfsc	status,2,c
 50336  0124CE  D7AB               	goto	i2l359
 50337  0124D0  0A03               	xorlw	3	; case 10
 50338  0124D2  B4D8               	btfsc	status,2,c
 50339  0124D4  D7BA               	goto	i2l364
 50340  0124D6  0A01               	xorlw	1	; case 11
 50341  0124D8  B4D8               	btfsc	status,2,c
 50342  0124DA  D7C5               	goto	i2l365
 50343  0124DC  0A07               	xorlw	7	; case 12
 50344  0124DE  0012               	return	
 50345  0124E0                     __end_of_USBCheckStdRequest:
 50346                           	opt stack 0
 50347                           tosu	equ	0xFFF
 50348                           tosh	equ	0xFFE
 50349                           tosl	equ	0xFFD
 50350                           pclatu	equ	0xFFB
 50351                           pclath	equ	0xFFA
 50352                           tblptru	equ	0xFF8
 50353                           tblptrh	equ	0xFF7
 50354                           tblptrl	equ	0xFF6
 50355                           tablat	equ	0xFF5
 50356                           prodh	equ	0xFF4
 50357                           prodl	equ	0xFF3
 50358                           intcon	equ	0xFF2
 50359                           indf0	equ	0xFEF
 50360                           postinc0	equ	0xFEE
 50361                           fsr0h	equ	0xFEA
 50362                           fsr0l	equ	0xFE9
 50363                           wreg	equ	0xFE8
 50364                           indf1	equ	0xFE7
 50365                           postinc1	equ	0xFE6
 50366                           postdec1	equ	0xFE5
 50367                           plusw1	equ	0xFE3
 50368                           fsr1h	equ	0xFE2
 50369                           fsr1l	equ	0xFE1
 50370                           indf2	equ	0xFDF
 50371                           postinc2	equ	0xFDE
 50372                           postdec2	equ	0xFDD
 50373                           plusw2	equ	0xFDB
 50374                           fsr2h	equ	0xFDA
 50375                           fsr2l	equ	0xFD9
 50376                           status	equ	0xFD8
 50377                           
 50378 ;; *************** function _USBStdSetCfgHandler *****************
 50379 ;; Defined at:
 50380 ;;		line 1970 in file "usb_device.c"
 50381 ;; Parameters:    Size  Location     Type
 50382 ;;		None
 50383 ;; Auto vars:     Size  Location     Type
 50384 ;;  i               1   23[COMRAM] unsigned char 
 50385 ;; Return value:  Size  Location     Type
 50386 ;;                  1    wreg      void 
 50387 ;; Registers used:
 50388 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 50389 ;; Tracked objects:
 50390 ;;		On entry : 0/0
 50391 ;;		On exit  : 0/0
 50392 ;;		Unchanged: 0/0
 50393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50394 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50395 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50397 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50398 ;;Total ram usage:        1 bytes
 50399 ;; Hardware stack levels used:    1
 50400 ;; Hardware stack levels required when called:    4
 50401 ;; This function calls:
 50402 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50403 ;;		i2_memset
 50404 ;; This function is called by:
 50405 ;;		_USBCheckStdRequest
 50406 ;; This function uses a non-reentrant model
 50407 ;;
 50408                           
 50409                           	psect	text209
 50410  012252                     __ptext209:
 50411                           	opt stack 0
 50412  012252                     _USBStdSetCfgHandler:
 50413                           	opt stack 9
 50414                           
 50415                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 50416                           
 50417                           ;incstack = 0
 50418  012252  8E55               	bsf	_inPipes+3,7,c	;volatile
 50419                           
 50420                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 50421  012254  0E27               	movlw	39
 50422  012256  6E01               	movwf	i2memset@p1,c
 50423  012258  0E0F               	movlw	15
 50424  01225A  6E02               	movwf	i2memset@p1+1,c
 50425  01225C  0E00               	movlw	0
 50426  01225E  6E04               	movwf	i2memset@c+1,c
 50427  012260  0E00               	movlw	0
 50428  012262  6E03               	movwf	i2memset@c,c
 50429  012264  0E00               	movlw	0
 50430  012266  6E06               	movwf	i2memset@n+1,c
 50431  012268  0E02               	movlw	2
 50432  01226A  6E05               	movwf	i2memset@n,c
 50433  01226C  ECDE  F0AA         	call	i2_memset	;wreg free
 50434                           
 50435                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 50436  012270  0E00               	movlw	0
 50437  012272  6E01               	movwf	i2memset@p1,c
 50438  012274  0E0D               	movlw	13
 50439  012276  6E02               	movwf	i2memset@p1+1,c
 50440  012278  0E00               	movlw	0
 50441  01227A  6E04               	movwf	i2memset@c+1,c
 50442  01227C  0E00               	movlw	0
 50443  01227E  6E03               	movwf	i2memset@c,c
 50444  012280  0E00               	movlw	0
 50445  012282  6E06               	movwf	i2memset@n+1,c
 50446  012284  0E30               	movlw	48
 50447  012286  6E05               	movwf	i2memset@n,c
 50448  012288  ECDE  F0AA         	call	i2_memset	;wreg free
 50449                           
 50450                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 50451  01228C  8C65               	bsf	3941,6,c	;volatile
 50452                           
 50453                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 50454  01228E  0E00               	movlw	0
 50455  012290  6E18               	movwf	USBStdSetCfgHandler@i,c
 50456  012292                     i2l13419:
 50457  012292  0E02               	movlw	2
 50458  012294  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 50459  012296  D001               	goto	i2l272
 50460  012298  D016               	goto	i2u1203_40
 50461  01229A                     i2l272:
 50462                           
 50463                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 50464  01229A  5018               	movf	USBStdSetCfgHandler@i,w,c
 50465  01229C  0D01               	mullw	1
 50466  01229E  0E3C               	movlw	low _ep_data_in
 50467  0122A0  24F3               	addwf	prodl,w,c
 50468  0122A2  6ED9               	movwf	fsr2l,c
 50469  0122A4  0E01               	movlw	high _ep_data_in
 50470  0122A6  20F4               	addwfc	prodh,w,c
 50471  0122A8  6EDA               	movwf	fsr2h,c
 50472  0122AA  0E00               	movlw	0
 50473  0122AC  6EDF               	movwf	indf2,c
 50474                           
 50475                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 50476  0122AE  5018               	movf	USBStdSetCfgHandler@i,w,c
 50477  0122B0  0D01               	mullw	1
 50478  0122B2  0E39               	movlw	low _ep_data_out
 50479  0122B4  24F3               	addwf	prodl,w,c
 50480  0122B6  6ED9               	movwf	fsr2l,c
 50481  0122B8  0E01               	movlw	high _ep_data_out
 50482  0122BA  20F4               	addwfc	prodh,w,c
 50483  0122BC  6EDA               	movwf	fsr2h,c
 50484  0122BE  0E00               	movlw	0
 50485  0122C0  6EDF               	movwf	indf2,c
 50486  0122C2  2A18               	incf	USBStdSetCfgHandler@i,f,c
 50487  0122C4  D7E6               	goto	i2l13419
 50488  0122C6                     i2u1203_40:
 50489                           
 50490                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 50491  0122C6  0EBD               	movlw	low _USBAlternateInterface
 50492  0122C8  6E01               	movwf	i2memset@p1,c
 50493  0122CA  0E01               	movlw	high _USBAlternateInterface
 50494  0122CC  6E02               	movwf	i2memset@p1+1,c
 50495  0122CE  0E00               	movlw	0
 50496  0122D0  6E04               	movwf	i2memset@c+1,c
 50497  0122D2  0E00               	movlw	0
 50498  0122D4  6E03               	movwf	i2memset@c,c
 50499  0122D6  0E00               	movlw	0
 50500  0122D8  6E06               	movwf	i2memset@n+1,c
 50501  0122DA  0E02               	movlw	2
 50502  0122DC  6E05               	movwf	i2memset@n,c
 50503  0122DE  ECDE  F0AA         	call	i2_memset	;wreg free
 50504                           
 50505                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 50506  0122E2  9C65               	bcf	3941,6,c	;volatile
 50507                           
 50508                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 50509  0122E4  0E08               	movlw	8
 50510  0122E6  0101               	movlb	1	; () banked
 50511  0122E8  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 50512  0122EA  0E0D               	movlw	13
 50513  0122EC  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 50514                           
 50515                           ; BSR set to: 1
 50516                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 50517  0122EE  0E00               	movlw	0
 50518  0122F0  6F51               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 50519  0122F2  0E0D               	movlw	13
 50520  0122F4  6F52               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 50521                           
 50522                           ; BSR set to: 1
 50523                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50524  0122F6  C151  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50525  0122FA  C152  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50526                           
 50527                           ; BSR set to: 1
 50528                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 50529  0122FE  CD32 F1C2          	movff	3378,_USBActiveConfiguration	;volatile
 50530                           
 50531                           ; BSR set to: 1
 50532                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 50533  012302  51C2               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 50534  012304  A4D8               	btfss	status,2,c
 50535  012306  D003               	goto	i2l274
 50536                           
 50537                           ; BSR set to: 1
 50538                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 50539  012308  0E10               	movlw	16
 50540  01230A  6E5E               	movwf	_USBDeviceState,c	;volatile
 50541                           
 50542                           ;usb_device.c: 2015: }
 50543  01230C  0012               	return	
 50544  01230E                     i2l274:
 50545                           
 50546                           ; BSR set to: 1
 50547                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 50548                           
 50549                           ; BSR set to: 1
 50550  01230E  0E00               	movlw	0
 50551  012310  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50552  012312  0E01               	movlw	1
 50553  012314  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50554  012316  0EC2               	movlw	low _USBActiveConfiguration
 50555  012318  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50556  01231A  0E01               	movlw	high _USBActiveConfiguration
 50557  01231C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50558  01231E  0E00               	movlw	0
 50559  012320  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50560  012322  0E01               	movlw	1
 50561  012324  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50562  012326  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50563                           
 50564                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 50565  01232A  0E20               	movlw	32
 50566  01232C  6E5E               	movwf	_USBDeviceState,c	;volatile
 50567  01232E  0012               	return	
 50568  012330                     __end_of_USBStdSetCfgHandler:
 50569                           	opt stack 0
 50570                           tosu	equ	0xFFF
 50571                           tosh	equ	0xFFE
 50572                           tosl	equ	0xFFD
 50573                           pclatu	equ	0xFFB
 50574                           pclath	equ	0xFFA
 50575                           tblptru	equ	0xFF8
 50576                           tblptrh	equ	0xFF7
 50577                           tblptrl	equ	0xFF6
 50578                           tablat	equ	0xFF5
 50579                           prodh	equ	0xFF4
 50580                           prodl	equ	0xFF3
 50581                           intcon	equ	0xFF2
 50582                           indf0	equ	0xFEF
 50583                           postinc0	equ	0xFEE
 50584                           fsr0h	equ	0xFEA
 50585                           fsr0l	equ	0xFE9
 50586                           wreg	equ	0xFE8
 50587                           indf1	equ	0xFE7
 50588                           postinc1	equ	0xFE6
 50589                           postdec1	equ	0xFE5
 50590                           plusw1	equ	0xFE3
 50591                           fsr1h	equ	0xFE2
 50592                           fsr1l	equ	0xFE1
 50593                           indf2	equ	0xFDF
 50594                           postinc2	equ	0xFDE
 50595                           postdec2	equ	0xFDD
 50596                           plusw2	equ	0xFDB
 50597                           fsr2h	equ	0xFDA
 50598                           fsr2l	equ	0xFD9
 50599                           status	equ	0xFD8
 50600                           
 50601 ;; *************** function i2_memset *****************
 50602 ;; Defined at:
 50603 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 50604 ;; Parameters:    Size  Location     Type
 50605 ;;  p1              2    0[COMRAM] PTR void 
 50606 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50607 ;;  c               2    2[COMRAM] int 
 50608 ;;  n               2    4[COMRAM] unsigned int 
 50609 ;; Auto vars:     Size  Location     Type
 50610 ;;  memset          2    6[COMRAM] PTR unsigned char 
 50611 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 50612 ;; Return value:  Size  Location     Type
 50613 ;;                  2    0[COMRAM] PTR void 
 50614 ;; Registers used:
 50615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 50616 ;; Tracked objects:
 50617 ;;		On entry : 0/0
 50618 ;;		On exit  : 0/0
 50619 ;;		Unchanged: 0/0
 50620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50621 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50624 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50625 ;;Total ram usage:        8 bytes
 50626 ;; Hardware stack levels used:    1
 50627 ;; This function calls:
 50628 ;;		Nothing
 50629 ;; This function is called by:
 50630 ;;		_USBStdSetCfgHandler
 50631 ;;		i2_USBDeviceInit
 50632 ;; This function uses a non-reentrant model
 50633 ;;
 50634                           
 50635                           	psect	text210
 50636  0155BC                     __ptext210:
 50637                           	opt stack 0
 50638  0155BC                     i2_memset:
 50639                           	opt stack 15
 50640                           
 50641                           ;incstack = 0
 50642  0155BC  C001  F007         	movff	i2memset@p1,i2memset@p
 50643  0155C0  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 50644  0155C4  D008               	goto	i2l3715
 50645  0155C6                     i2l13349:
 50646  0155C6  C007  FFD9         	movff	i2memset@p,fsr2l
 50647  0155CA  C008  FFDA         	movff	i2memset@p+1,fsr2h
 50648  0155CE  C003  FFDF         	movff	i2memset@c,indf2
 50649  0155D2  4A07               	infsnz	i2memset@p,f,c
 50650  0155D4  2A08               	incf	i2memset@p+1,f,c
 50651  0155D6                     i2l3715:
 50652  0155D6  0605               	decf	i2memset@n,f,c
 50653  0155D8  A0D8               	btfss	status,0,c
 50654  0155DA  0606               	decf	i2memset@n+1,f,c
 50655  0155DC  2805               	incf	i2memset@n,w,c
 50656  0155DE  E1F3               	bnz	i2l13349
 50657  0155E0  2806               	incf	i2memset@n+1,w,c
 50658  0155E2  B4D8               	btfsc	status,2,c
 50659  0155E4  0012               	return	
 50660  0155E6  D7EF               	goto	i2l3716
 50661  0155E8                     __end_ofi2_memset:
 50662                           	opt stack 0
 50663                           tosu	equ	0xFFF
 50664                           tosh	equ	0xFFE
 50665                           tosl	equ	0xFFD
 50666                           pclatu	equ	0xFFB
 50667                           pclath	equ	0xFFA
 50668                           tblptru	equ	0xFF8
 50669                           tblptrh	equ	0xFF7
 50670                           tblptrl	equ	0xFF6
 50671                           tablat	equ	0xFF5
 50672                           prodh	equ	0xFF4
 50673                           prodl	equ	0xFF3
 50674                           intcon	equ	0xFF2
 50675                           indf0	equ	0xFEF
 50676                           postinc0	equ	0xFEE
 50677                           fsr0h	equ	0xFEA
 50678                           fsr0l	equ	0xFE9
 50679                           wreg	equ	0xFE8
 50680                           indf1	equ	0xFE7
 50681                           postinc1	equ	0xFE6
 50682                           postdec1	equ	0xFE5
 50683                           plusw1	equ	0xFE3
 50684                           fsr1h	equ	0xFE2
 50685                           fsr1l	equ	0xFE1
 50686                           indf2	equ	0xFDF
 50687                           postinc2	equ	0xFDE
 50688                           postdec2	equ	0xFDD
 50689                           plusw2	equ	0xFDB
 50690                           fsr2h	equ	0xFDA
 50691                           fsr2l	equ	0xFD9
 50692                           status	equ	0xFD8
 50693                           
 50694 ;; *************** function _USBStdGetStatusHandler *****************
 50695 ;; Defined at:
 50696 ;;		line 2131 in file "usb_device.c"
 50697 ;; Parameters:    Size  Location     Type
 50698 ;;		None
 50699 ;; Auto vars:     Size  Location     Type
 50700 ;;  p               2    1[COMRAM] PTR struct __BDT
 50701 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 50702 ;; Return value:  Size  Location     Type
 50703 ;;                  1    wreg      void 
 50704 ;; Registers used:
 50705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 50706 ;; Tracked objects:
 50707 ;;		On entry : 0/0
 50708 ;;		On exit  : 0/0
 50709 ;;		Unchanged: 0/0
 50710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50712 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50713 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50714 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50715 ;;Total ram usage:        3 bytes
 50716 ;; Hardware stack levels used:    1
 50717 ;; This function calls:
 50718 ;;		Nothing
 50719 ;; This function is called by:
 50720 ;;		_USBCheckStdRequest
 50721 ;; This function uses a non-reentrant model
 50722 ;;
 50723                           
 50724                           	psect	text211
 50725  01339A                     __ptext211:
 50726                           	opt stack 0
 50727  01339A                     _USBStdGetStatusHandler:
 50728                           	opt stack 13
 50729                           
 50730                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 50731                           
 50732                           ;incstack = 0
 50733  01339A  0E00               	movlw	0
 50734  01339C  010D               	movlb	13	; () banked
 50735  01339E  6F38               	movwf	56,b	;volatile
 50736                           
 50737                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 50738  0133A0  0E00               	movlw	0
 50739  0133A2  6F39               	movwf	57,b	;volatile
 50740                           
 50741                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 50742  0133A4  D035               	goto	i2l293
 50743  0133A6                     i2l294:
 50744                           
 50745                           ; BSR set to: 13
 50746                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 50747  0133A6  8E55               	bsf	_inPipes+3,7,c	;volatile
 50748                           
 50749                           ; BSR set to: 13
 50750                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 50751                           
 50752                           ; BSR set to: 13
 50753                           
 50754                           ; BSR set to: 13
 50755                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 50756                           
 50757                           ;usb_device.c: 2144: if(0 == 1)
 50758  0133A8  0101               	movlb	1	; () banked
 50759  0133AA  056E               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 50760  0133AC  A4D8               	btfss	status,2,c
 50761  0133AE  D03B               	goto	i2l297
 50762                           
 50763                           ; BSR set to: 1
 50764                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 50765  0133B0  010D               	movlb	13	; () banked
 50766  0133B2  8338               	bsf	56,1,b	;volatile
 50767                           
 50768                           ; BSR set to: 13
 50769                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 50770  0133B4  D038               	goto	i2l297
 50771  0133B6                     i2l298:
 50772                           
 50773                           ; BSR set to: 13
 50774                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 50775  0133B6  8E55               	bsf	_inPipes+3,7,c	;volatile
 50776                           
 50777                           ;usb_device.c: 2156: break;
 50778  0133B8  D036               	goto	i2l297
 50779  0133BA                     i2l299:
 50780                           
 50781                           ; BSR set to: 13
 50782                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 50783  0133BA  8E55               	bsf	_inPipes+3,7,c	;volatile
 50784                           
 50785                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 50786  0133BC  BF34               	btfsc	52,7,b	;volatile
 50787  0133BE  D00A               	goto	i2l300
 50788                           
 50789                           ; BSR set to: 13
 50790                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 50791  0133C0  5134               	movf	52,w,b	;volatile
 50792  0133C2  0B0F               	andlw	15
 50793  0133C4  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50794  0133C6  5001               	movf	??_USBStdGetStatusHandler,w,c
 50795  0133C8  0D02               	mullw	2
 50796  0133CA  0E21               	movlw	low _pBDTEntryOut
 50797  0133CC  24F3               	addwf	prodl,w,c
 50798  0133CE  6ED9               	movwf	fsr2l,c
 50799  0133D0  0E01               	movlw	high _pBDTEntryOut
 50800  0133D2  D009               	goto	L77
 50801  0133D4                     i2l300:
 50802                           
 50803                           ; BSR set to: 13
 50804                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 50805                           
 50806                           ; BSR set to: 13
 50807  0133D4  5134               	movf	52,w,b	;volatile
 50808  0133D6  0B0F               	andlw	15
 50809  0133D8  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 50810  0133DA  5001               	movf	??_USBStdGetStatusHandler,w,c
 50811  0133DC  0D02               	mullw	2
 50812  0133DE  0E1B               	movlw	low _pBDTEntryIn
 50813  0133E0  24F3               	addwf	prodl,w,c
 50814  0133E2  6ED9               	movwf	fsr2l,c
 50815  0133E4  0E01               	movlw	high _pBDTEntryIn
 50816  0133E6                     L77:
 50817  0133E6  20F4               	addwfc	prodh,w,c
 50818  0133E8  6EDA               	movwf	fsr2h,c
 50819  0133EA  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 50820  0133EE  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 50821                           
 50822                           ; BSR set to: 13
 50823                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 50824                           
 50825                           ; BSR set to: 13
 50826  0133F2  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50827  0133F6  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50828  0133FA  AEDF               	btfss	indf2,7,c
 50829  0133FC  D014               	goto	i2l297
 50830                           
 50831                           ; BSR set to: 13
 50832  0133FE  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 50833  013402  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 50834  013406  A4DF               	btfss	indf2,2,c
 50835  013408  D00E               	goto	i2l297
 50836                           
 50837                           ; BSR set to: 13
 50838                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 50839  01340A  0E01               	movlw	1
 50840  01340C  6F38               	movwf	56,b	;volatile
 50841                           
 50842                           ; BSR set to: 13
 50843                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 50844                           
 50845                           ; BSR set to: 13
 50846                           ;usb_device.c: 2176: break;
 50847  01340E  D00B               	goto	i2l297
 50848  013410                     i2l293:
 50849                           
 50850                           ; BSR set to: 13
 50851                           
 50852                           ; BSR set to: 13
 50853  013410  5130               	movf	48,w,b	;volatile
 50854  013412  0B1F               	andlw	31
 50855                           
 50856                           ; Switch size 1, requested type "space"
 50857                           ; Number of cases is 3, Range of values is 0 to 2
 50858                           ; switch strategies available:
 50859                           ; Name         Instructions Cycles
 50860                           ; simple_byte           10     6 (average)
 50861                           ;	Chosen strategy is simple_byte
 50862  013414  0A00               	xorlw	0	; case 0
 50863  013416  B4D8               	btfsc	status,2,c
 50864  013418  D7C6               	goto	i2l294
 50865  01341A  0A01               	xorlw	1	; case 1
 50866  01341C  B4D8               	btfsc	status,2,c
 50867  01341E  D7CB               	goto	i2l298
 50868  013420  0A03               	xorlw	3	; case 2
 50869  013422  B4D8               	btfsc	status,2,c
 50870  013424  D7CA               	goto	i2l299
 50871  013426                     i2l297:
 50872                           
 50873                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 50874  013426  AE55               	btfss	_inPipes+3,7,c	;volatile
 50875  013428  0012               	return	
 50876                           
 50877                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 50878  01342A  0E38               	movlw	56
 50879  01342C  6E52               	movwf	_inPipes,c	;volatile
 50880  01342E  0E0D               	movlw	13
 50881  013430  6E53               	movwf	_inPipes+1,c	;volatile
 50882                           
 50883                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 50884  013432  8055               	bsf	_inPipes+3,0,c	;volatile
 50885                           
 50886                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 50887  013434  0E02               	movlw	2
 50888  013436  6E56               	movwf	_inPipes+4,c	;volatile
 50889  013438  0012               	return	
 50890  01343A                     __end_of_USBStdGetStatusHandler:
 50891                           	opt stack 0
 50892                           tosu	equ	0xFFF
 50893                           tosh	equ	0xFFE
 50894                           tosl	equ	0xFFD
 50895                           pclatu	equ	0xFFB
 50896                           pclath	equ	0xFFA
 50897                           tblptru	equ	0xFF8
 50898                           tblptrh	equ	0xFF7
 50899                           tblptrl	equ	0xFF6
 50900                           tablat	equ	0xFF5
 50901                           prodh	equ	0xFF4
 50902                           prodl	equ	0xFF3
 50903                           intcon	equ	0xFF2
 50904                           indf0	equ	0xFEF
 50905                           postinc0	equ	0xFEE
 50906                           fsr0h	equ	0xFEA
 50907                           fsr0l	equ	0xFE9
 50908                           wreg	equ	0xFE8
 50909                           indf1	equ	0xFE7
 50910                           postinc1	equ	0xFE6
 50911                           postdec1	equ	0xFE5
 50912                           plusw1	equ	0xFE3
 50913                           fsr1h	equ	0xFE2
 50914                           fsr1l	equ	0xFE1
 50915                           indf2	equ	0xFDF
 50916                           postinc2	equ	0xFDE
 50917                           postdec2	equ	0xFDD
 50918                           plusw2	equ	0xFDB
 50919                           fsr2h	equ	0xFDA
 50920                           fsr2l	equ	0xFD9
 50921                           status	equ	0xFD8
 50922                           
 50923 ;; *************** function _USBStdGetDscHandler *****************
 50924 ;; Defined at:
 50925 ;;		line 2045 in file "usb_device.c"
 50926 ;; Parameters:    Size  Location     Type
 50927 ;;		None
 50928 ;; Auto vars:     Size  Location     Type
 50929 ;;		None
 50930 ;; Return value:  Size  Location     Type
 50931 ;;                  1    wreg      void 
 50932 ;; Registers used:
 50933 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 50934 ;; Tracked objects:
 50935 ;;		On entry : 0/0
 50936 ;;		On exit  : 0/0
 50937 ;;		Unchanged: 0/0
 50938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50942 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50943 ;;Total ram usage:        2 bytes
 50944 ;; Hardware stack levels used:    1
 50945 ;; This function calls:
 50946 ;;		Nothing
 50947 ;; This function is called by:
 50948 ;;		_USBCheckStdRequest
 50949 ;; This function uses a non-reentrant model
 50950 ;;
 50951                           
 50952                           	psect	text212
 50953  0107B0                     __ptext212:
 50954                           	opt stack 0
 50955  0107B0                     _USBStdGetDscHandler:
 50956                           	opt stack 13
 50957                           
 50958                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 50959                           
 50960                           ;incstack = 0
 50961  0107B0  0E80               	movlw	128
 50962  0107B2  010D               	movlb	13	; () banked
 50963  0107B4  1930               	xorwf	48,w,b	;volatile
 50964  0107B6  A4D8               	btfss	status,2,c
 50965  0107B8  0012               	return	
 50966                           
 50967                           ; BSR set to: 13
 50968                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 50969  0107BA  0EC0               	movlw	192
 50970  0107BC  6E55               	movwf	_inPipes+3,c	;volatile
 50971                           
 50972                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 50973  0107BE  D082               	goto	i2l280
 50974  0107C0                     
 50975                           ; BSR set to: 13
 50976                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 50977                           
 50978                           ; BSR set to: 13
 50979  0107C0  0E5B               	movlw	low _device_dsc
 50980  0107C2  6E52               	movwf	_inPipes,c	;volatile
 50981  0107C4  0EA2               	movlw	high _device_dsc
 50982  0107C6  6E53               	movwf	_inPipes+1,c	;volatile
 50983                           
 50984                           ; BSR set to: 13
 50985                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 50986  0107C8  0E00               	movlw	0
 50987  0107CA  6E57               	movwf	_inPipes+5,c	;volatile
 50988  0107CC  0E12               	movlw	18
 50989  0107CE  6E56               	movwf	_inPipes+4,c	;volatile
 50990                           
 50991                           ;usb_device.c: 2060: break;
 50992  0107D0  0012               	return	
 50993  0107D2                     
 50994                           ; BSR set to: 13
 50995                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 50996                           
 50997                           ; BSR set to: 13
 50998  0107D2  5132               	movf	50,w,b	;volatile
 50999  0107D4  A4D8               	btfss	status,2,c
 51000  0107D6  D042               	goto	i2l284
 51001                           
 51002                           ; BSR set to: 13
 51003                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 51004  0107D8  5132               	movf	50,w,b	;volatile
 51005  0107DA  0D02               	mullw	2
 51006  0107DC  0EEC               	movlw	low _USB_CD_Ptr
 51007  0107DE  24F3               	addwf	prodl,w,c
 51008  0107E0  6EF6               	movwf	tblptrl,c
 51009  0107E2  0E9D               	movlw	high _USB_CD_Ptr
 51010  0107E4  20F4               	addwfc	prodh,w,c
 51011  0107E6  6EF7               	movwf	tblptrh,c
 51012  0107E8                     	if	1	;There are 3 active tblptr bytes
 51013  0107E8  6AF8               	clrf	tblptru,c
 51014  0107EA  0E00               	movlw	low (__mediumconst shr (0+16))
 51015  0107EC  22F8               	addwfc	tblptru,f,c
 51016  0107EE                     	endif
 51017  0107EE  0009               	tblrd		*+
 51018  0107F0  CFF5 F052          	movff	tablat,_inPipes	;volatile
 51019  0107F4  000A               	tblrd		*-
 51020  0107F6  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 51021                           
 51022                           ; BSR set to: 13
 51023                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 51024  0107FA  0E02               	movlw	2
 51025  0107FC  2452               	addwf	_inPipes,w,c	;volatile
 51026  0107FE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51027  010800  0E00               	movlw	0
 51028  010802  2053               	addwfc	_inPipes+1,w,c	;volatile
 51029  010804  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 51030  010806  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 51031  01080A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 51032  01080E  0E00               	movlw	low (__mediumconst shr (0+16))
 51033  010810  6EF8               	movwf	tblptru,c
 51034  010812  0E0E               	movlw	(high __ramtop+-1)
 51035  010814  64F7               	cpfsgt	tblptrh,c
 51036  010816  D003               	bra	i2u1207_47
 51037  010818  0008               	tblrd		*
 51038  01081A  50F5               	movf	tablat,w,c
 51039  01081C  D005               	bra	i2u1207_40
 51040  01081E                     i2u1207_47:
 51041  01081E  CFF6 FFE9          	movff	tblptrl,fsr0l
 51042  010822  CFF7 FFEA          	movff	tblptrh,fsr0h
 51043  010826  50EF               	movf	indf0,w,c
 51044  010828                     i2u1207_40:
 51045  010828  6E56               	movwf	_inPipes+4,c	;volatile
 51046                           
 51047                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 51048  01082A  0E03               	movlw	3
 51049  01082C  2452               	addwf	_inPipes,w,c	;volatile
 51050  01082E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51051  010830  0E00               	movlw	0
 51052  010832  2053               	addwfc	_inPipes+1,w,c	;volatile
 51053  010834  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 51054  010836  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 51055  01083A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 51056  01083E  0E00               	movlw	low (__mediumconst shr (0+16))
 51057  010840  6EF8               	movwf	tblptru,c
 51058  010842  0E0E               	movlw	(high __ramtop+-1)
 51059  010844  64F7               	cpfsgt	tblptrh,c
 51060  010846  D003               	bra	i2u1208_47
 51061  010848  0008               	tblrd		*
 51062  01084A  50F5               	movf	tablat,w,c
 51063  01084C  D005               	bra	i2u1208_40
 51064  01084E                     i2u1208_47:
 51065  01084E  CFF6 FFE9          	movff	tblptrl,fsr0l
 51066  010852  CFF7 FFEA          	movff	tblptrh,fsr0h
 51067  010856  50EF               	movf	indf0,w,c
 51068  010858                     i2u1208_40:
 51069  010858  6E57               	movwf	_inPipes+5,c	;volatile
 51070                           
 51071                           ;usb_device.c: 2078: }
 51072  01085A  0012               	return	
 51073  01085C                     i2l284:
 51074                           
 51075                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 51076  01085C  0E00               	movlw	0
 51077  01085E  6E55               	movwf	_inPipes+3,c	;volatile
 51078                           
 51079                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 51080  010860  0012               	return	
 51081  010862                     
 51082                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 51083  010862  0E04               	movlw	4
 51084  010864  010D               	movlb	13	; () banked
 51085  010866  6132               	cpfslt	50,b	;volatile
 51086  010868  D027               	goto	i2l287
 51087                           
 51088                           ; BSR set to: 13
 51089                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 51090  01086A  5132               	movf	50,w,b	;volatile
 51091  01086C  0D02               	mullw	2
 51092  01086E  0EE4               	movlw	low _USB_SD_Ptr
 51093  010870  24F3               	addwf	prodl,w,c
 51094  010872  6EF6               	movwf	tblptrl,c
 51095  010874  0E9D               	movlw	high _USB_SD_Ptr
 51096  010876  20F4               	addwfc	prodh,w,c
 51097  010878  6EF7               	movwf	tblptrh,c
 51098  01087A                     	if	1	;There are 3 active tblptr bytes
 51099  01087A  6AF8               	clrf	tblptru,c
 51100  01087C  0E00               	movlw	low (__mediumconst shr (0+16))
 51101  01087E  22F8               	addwfc	tblptru,f,c
 51102  010880                     	endif
 51103  010880  0009               	tblrd		*+
 51104  010882  CFF5 F052          	movff	tablat,_inPipes	;volatile
 51105  010886  000A               	tblrd		*-
 51106  010888  CFF5 F053          	movff	tablat,_inPipes+1	;volatile
 51107                           
 51108                           ; BSR set to: 13
 51109                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 51110  01088C  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 51111  010890  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 51112  010894  0E00               	movlw	low (__mediumconst shr (0+16))
 51113  010896  6EF8               	movwf	tblptru,c
 51114  010898  0E0E               	movlw	(high __ramtop+-1)
 51115  01089A  64F7               	cpfsgt	tblptrh,c
 51116  01089C  D003               	bra	i2u1210_47
 51117  01089E  0008               	tblrd		*
 51118  0108A0  50F5               	movf	tablat,w,c
 51119  0108A2  D005               	bra	i2u1210_40
 51120  0108A4                     i2u1210_47:
 51121  0108A4  CFF6 FFE9          	movff	tblptrl,fsr0l
 51122  0108A8  CFF7 FFEA          	movff	tblptrh,fsr0h
 51123  0108AC  50EF               	movf	indf0,w,c
 51124  0108AE                     i2u1210_40:
 51125  0108AE  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51126  0108B0  5001               	movf	??_USBStdGetDscHandler,w,c
 51127  0108B2  6E56               	movwf	_inPipes+4,c	;volatile
 51128  0108B4  6A57               	clrf	_inPipes+5,c	;volatile
 51129                           
 51130                           ;usb_device.c: 2094: }
 51131  0108B6  0012               	return	
 51132  0108B8                     i2l287:
 51133                           
 51134                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 51135  0108B8  0E00               	movlw	0
 51136  0108BA  6E55               	movwf	_inPipes+3,c	;volatile
 51137                           
 51138                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 51139  0108BC  0012               	return	
 51140  0108BE                     
 51141                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 51142  0108BE  0E00               	movlw	0
 51143  0108C0  6E55               	movwf	_inPipes+3,c	;volatile
 51144                           
 51145                           ;usb_device.c: 2112: }
 51146                           
 51147                           ;usb_device.c: 2111: break;
 51148  0108C2  0012               	return	
 51149  0108C4                     i2l280:
 51150  0108C4  010D               	movlb	13	; () banked
 51151  0108C6  5133               	movf	51,w,b	;volatile
 51152                           
 51153                           ; Switch size 1, requested type "space"
 51154                           ; Number of cases is 3, Range of values is 1 to 3
 51155                           ; switch strategies available:
 51156                           ; Name         Instructions Cycles
 51157                           ; simple_byte           10     6 (average)
 51158                           ;	Chosen strategy is simple_byte
 51159  0108C8  0A01               	xorlw	1	; case 1
 51160  0108CA  B4D8               	btfsc	status,2,c
 51161  0108CC  D779               	goto	i2l281
 51162  0108CE  0A03               	xorlw	3	; case 2
 51163  0108D0  B4D8               	btfsc	status,2,c
 51164  0108D2  D77F               	goto	i2l283
 51165  0108D4  0A01               	xorlw	1	; case 3
 51166  0108D6  B4D8               	btfsc	status,2,c
 51167  0108D8  D7C4               	goto	i2l286
 51168  0108DA  D7F1               	goto	i2l289
 51169  0108DC                     __end_of_USBStdGetDscHandler:
 51170                           	opt stack 0
 51171                           tosu	equ	0xFFF
 51172                           tosh	equ	0xFFE
 51173                           tosl	equ	0xFFD
 51174                           pclatu	equ	0xFFB
 51175                           pclath	equ	0xFFA
 51176                           tblptru	equ	0xFF8
 51177                           tblptrh	equ	0xFF7
 51178                           tblptrl	equ	0xFF6
 51179                           tablat	equ	0xFF5
 51180                           prodh	equ	0xFF4
 51181                           prodl	equ	0xFF3
 51182                           intcon	equ	0xFF2
 51183                           indf0	equ	0xFEF
 51184                           postinc0	equ	0xFEE
 51185                           fsr0h	equ	0xFEA
 51186                           fsr0l	equ	0xFE9
 51187                           wreg	equ	0xFE8
 51188                           indf1	equ	0xFE7
 51189                           postinc1	equ	0xFE6
 51190                           postdec1	equ	0xFE5
 51191                           plusw1	equ	0xFE3
 51192                           fsr1h	equ	0xFE2
 51193                           fsr1l	equ	0xFE1
 51194                           indf2	equ	0xFDF
 51195                           postinc2	equ	0xFDE
 51196                           postdec2	equ	0xFDD
 51197                           plusw2	equ	0xFDB
 51198                           fsr2h	equ	0xFDA
 51199                           fsr2l	equ	0xFD9
 51200                           status	equ	0xFD8
 51201                           
 51202 ;; *************** function _USBStdFeatureReqHandler *****************
 51203 ;; Defined at:
 51204 ;;		line 2756 in file "usb_device.c"
 51205 ;; Parameters:    Size  Location     Type
 51206 ;;		None
 51207 ;; Auto vars:     Size  Location     Type
 51208 ;;  p               2   27[COMRAM] PTR struct __BDT
 51209 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51210 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 51211 ;;		 -> UEP0(1), 
 51212 ;;  current_ep_d    1   26[COMRAM] struct .
 51213 ;; Return value:  Size  Location     Type
 51214 ;;                  1    wreg      void 
 51215 ;; Registers used:
 51216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51217 ;; Tracked objects:
 51218 ;;		On entry : 0/0
 51219 ;;		On exit  : 0/0
 51220 ;;		Unchanged: 0/0
 51221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51223 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51224 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51225 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51226 ;;Total ram usage:        6 bytes
 51227 ;; Hardware stack levels used:    1
 51228 ;; Hardware stack levels required when called:    4
 51229 ;; This function calls:
 51230 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51231 ;; This function is called by:
 51232 ;;		_USBCheckStdRequest
 51233 ;; This function uses a non-reentrant model
 51234 ;;
 51235                           
 51236                           	psect	text213
 51237  00DEB2                     __ptext213:
 51238                           	opt stack 0
 51239  00DEB2                     _USBStdFeatureReqHandler:
 51240                           	opt stack 9
 51241                           
 51242                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 51243                           
 51244                           ;incstack = 0
 51245  00DEB2  010D               	movlb	13	; () banked
 51246  00DEB4  0532               	decf	50,w,b	;volatile
 51247  00DEB6  A4D8               	btfss	status,2,c
 51248  00DEB8  D00F               	goto	i2l373
 51249                           
 51250                           ; BSR set to: 13
 51251  00DEBA  5130               	movf	48,w,b	;volatile
 51252  00DEBC  0B1F               	andlw	31
 51253  00DEBE  0900               	iorlw	0
 51254  00DEC0  A4D8               	btfss	status,2,c
 51255  00DEC2  D00A               	goto	i2l373
 51256                           
 51257                           ; BSR set to: 13
 51258                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 51259  00DEC4  8E55               	bsf	_inPipes+3,7,c	;volatile
 51260                           
 51261                           ; BSR set to: 13
 51262                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 51263  00DEC6  0E03               	movlw	3
 51264  00DEC8  1931               	xorwf	49,w,b	;volatile
 51265  00DECA  A4D8               	btfss	status,2,c
 51266  00DECC  D002               	goto	i2l372
 51267                           
 51268                           ; BSR set to: 13
 51269                           ;usb_device.c: 2806: RemoteWakeup = 1;
 51270  00DECE  0E01               	movlw	1
 51271  00DED0  D001               	goto	L78
 51272  00DED2                     i2l372:
 51273                           
 51274                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 51275                           
 51276                           ; BSR set to: 1
 51277  00DED2  0E00               	movlw	0
 51278  00DED4                     L78:
 51279  00DED4  0101               	movlb	1	; () banked
 51280  00DED6  6F6E               	movwf	_RemoteWakeup& (0+255),b	;volatile
 51281  00DED8                     i2l373:
 51282                           
 51283                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 51284                           
 51285                           ; BSR set to: 1
 51286  00DED8  010D               	movlb	13	; () banked
 51287  00DEDA  5132               	movf	50,w,b	;volatile
 51288  00DEDC  A4D8               	btfss	status,2,c
 51289  00DEDE  0012               	return	
 51290                           
 51291                           ; BSR set to: 13
 51292  00DEE0  5130               	movf	48,w,b	;volatile
 51293  00DEE2  0B1F               	andlw	31
 51294  00DEE4  0A02               	xorlw	2
 51295  00DEE6  A4D8               	btfss	status,2,c
 51296  00DEE8  0012               	return	
 51297                           
 51298                           ; BSR set to: 13
 51299  00DEEA  5134               	movf	52,w,b	;volatile
 51300  00DEEC  0B0F               	andlw	15
 51301  00DEEE  0900               	iorlw	0
 51302  00DEF0  B4D8               	btfsc	status,2,c
 51303  00DEF2  0012               	return	
 51304                           
 51305                           ; BSR set to: 13
 51306  00DEF4  5134               	movf	52,w,b	;volatile
 51307  00DEF6  0B0F               	andlw	15
 51308  00DEF8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51309  00DEFA  0E03               	movlw	3
 51310  00DEFC  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 51311  00DEFE  0012               	return	
 51312                           
 51313                           ; BSR set to: 13
 51314  00DF00  0E20               	movlw	32
 51315  00DF02  185E               	xorwf	_USBDeviceState,w,c	;volatile
 51316  00DF04  A4D8               	btfss	status,2,c
 51317  00DF06  0012               	return	
 51318                           
 51319                           ; BSR set to: 13
 51320                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 51321  00DF08  8E55               	bsf	_inPipes+3,7,c	;volatile
 51322                           
 51323                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 51324  00DF0A  BF34               	btfsc	52,7,b	;volatile
 51325  00DF0C  D019               	goto	i2l375
 51326                           
 51327                           ; BSR set to: 13
 51328                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 51329  00DF0E  5134               	movf	52,w,b	;volatile
 51330  00DF10  0B0F               	andlw	15
 51331  00DF12  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51332  00DF14  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51333  00DF16  0D02               	mullw	2
 51334  00DF18  0E21               	movlw	low _pBDTEntryOut
 51335  00DF1A  24F3               	addwf	prodl,w,c
 51336  00DF1C  6ED9               	movwf	fsr2l,c
 51337  00DF1E  0E01               	movlw	high _pBDTEntryOut
 51338  00DF20  20F4               	addwfc	prodh,w,c
 51339  00DF22  6EDA               	movwf	fsr2h,c
 51340  00DF24  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 51341  00DF28  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 51342                           
 51343                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 51344  00DF2C  5134               	movf	52,w,b	;volatile
 51345  00DF2E  0B0F               	andlw	15
 51346  00DF30  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51347  00DF32  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51348  00DF34  0D01               	mullw	1
 51349  00DF36  0E39               	movlw	low _ep_data_out
 51350  00DF38  24F3               	addwf	prodl,w,c
 51351  00DF3A  6ED9               	movwf	fsr2l,c
 51352  00DF3C  0E01               	movlw	high _ep_data_out
 51353  00DF3E  D018               	goto	L79
 51354  00DF40                     i2l375:
 51355                           
 51356                           ; BSR set to: 13
 51357                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 51358                           
 51359                           ; BSR set to: 13
 51360  00DF40  5134               	movf	52,w,b	;volatile
 51361  00DF42  0B0F               	andlw	15
 51362  00DF44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51363  00DF46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51364  00DF48  0D02               	mullw	2
 51365  00DF4A  0E1B               	movlw	low _pBDTEntryIn
 51366  00DF4C  24F3               	addwf	prodl,w,c
 51367  00DF4E  6ED9               	movwf	fsr2l,c
 51368  00DF50  0E01               	movlw	high _pBDTEntryIn
 51369  00DF52  20F4               	addwfc	prodh,w,c
 51370  00DF54  6EDA               	movwf	fsr2h,c
 51371  00DF56  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 51372  00DF5A  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 51373                           
 51374                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 51375  00DF5E  5134               	movf	52,w,b	;volatile
 51376  00DF60  0B0F               	andlw	15
 51377  00DF62  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51378  00DF64  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51379  00DF66  0D01               	mullw	1
 51380  00DF68  0E3C               	movlw	low _ep_data_in
 51381  00DF6A  24F3               	addwf	prodl,w,c
 51382  00DF6C  6ED9               	movwf	fsr2l,c
 51383  00DF6E  0E01               	movlw	high _ep_data_in
 51384  00DF70                     L79:
 51385  00DF70  20F4               	addwfc	prodh,w,c
 51386  00DF72  6EDA               	movwf	fsr2h,c
 51387  00DF74  50DF               	movf	indf2,w,c
 51388  00DF76  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 51389                           
 51390                           ; BSR set to: 13
 51391                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 51392                           
 51393                           ; BSR set to: 13
 51394  00DF78  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 51395  00DF7A  D006               	goto	i2l377
 51396                           
 51397                           ; BSR set to: 13
 51398                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 51399  00DF7C  0EFB               	movlw	251
 51400  00DF7E  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 51401  00DF80  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51402  00DF82  0EFF               	movlw	255
 51403  00DF84  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 51404  00DF86  D004               	goto	L80
 51405  00DF88                     i2l377:
 51406                           
 51407                           ; BSR set to: 13
 51408                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 51409                           
 51410                           ; BSR set to: 13
 51411  00DF88  0E04               	movlw	4
 51412  00DF8A  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 51413  00DF8C  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51414  00DF8E  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51415  00DF90                     L80:
 51416  00DF90  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51417                           
 51418                           ; BSR set to: 13
 51419                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 51420                           
 51421                           ; BSR set to: 13
 51422  00DF92  BF34               	btfsc	52,7,b	;volatile
 51423  00DF94  D00A               	goto	i2l379
 51424                           
 51425                           ; BSR set to: 13
 51426                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 51427  00DF96  5134               	movf	52,w,b	;volatile
 51428  00DF98  0B0F               	andlw	15
 51429  00DF9A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51430  00DF9C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51431  00DF9E  0D02               	mullw	2
 51432  00DFA0  0E21               	movlw	low _pBDTEntryOut
 51433  00DFA2  24F3               	addwf	prodl,w,c
 51434  00DFA4  6ED9               	movwf	fsr2l,c
 51435  00DFA6  0E01               	movlw	high _pBDTEntryOut
 51436  00DFA8  D009               	goto	L81
 51437  00DFAA                     i2l379:
 51438                           
 51439                           ; BSR set to: 13
 51440                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 51441                           
 51442                           ; BSR set to: 13
 51443  00DFAA  5134               	movf	52,w,b	;volatile
 51444  00DFAC  0B0F               	andlw	15
 51445  00DFAE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51446  00DFB0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51447  00DFB2  0D02               	mullw	2
 51448  00DFB4  0E1B               	movlw	low _pBDTEntryIn
 51449  00DFB6  24F3               	addwf	prodl,w,c
 51450  00DFB8  6ED9               	movwf	fsr2l,c
 51451  00DFBA  0E01               	movlw	high _pBDTEntryIn
 51452  00DFBC                     L81:
 51453  00DFBC  20F4               	addwfc	prodh,w,c
 51454  00DFBE  6EDA               	movwf	fsr2h,c
 51455  00DFC0  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 51456  00DFC4  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 51457                           
 51458                           ; BSR set to: 13
 51459                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 51460                           
 51461                           ; BSR set to: 13
 51462  00DFC8  0E03               	movlw	3
 51463  00DFCA  1931               	xorwf	49,w,b	;volatile
 51464  00DFCC  A4D8               	btfss	status,2,c
 51465  00DFCE  D02D               	goto	i2l381
 51466                           
 51467                           ; BSR set to: 13
 51468                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 51469  00DFD0  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51470  00DFD4  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51471  00DFD8  AEDF               	btfss	indf2,7,c
 51472  00DFDA  D01A               	goto	i2l384
 51473                           
 51474                           ; BSR set to: 13
 51475                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 51476  00DFDC  BF34               	btfsc	52,7,b	;volatile
 51477  00DFDE  D00A               	goto	i2l383
 51478                           
 51479                           ; BSR set to: 13
 51480                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 51481  00DFE0  5134               	movf	52,w,b	;volatile
 51482  00DFE2  0B0F               	andlw	15
 51483  00DFE4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51484  00DFE6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51485  00DFE8  0D01               	mullw	1
 51486  00DFEA  0E39               	movlw	low _ep_data_out
 51487  00DFEC  24F3               	addwf	prodl,w,c
 51488  00DFEE  6ED9               	movwf	fsr2l,c
 51489  00DFF0  0E01               	movlw	high _ep_data_out
 51490  00DFF2  D00A               	goto	L82
 51491  00DFF4                     i2l383:
 51492                           
 51493                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 51494                           
 51495                           ; BSR set to: 1
 51496  00DFF4  010D               	movlb	13	; () banked
 51497  00DFF6  5134               	movf	52,w,b	;volatile
 51498  00DFF8  0B0F               	andlw	15
 51499  00DFFA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51500  00DFFC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51501  00DFFE  0D01               	mullw	1
 51502  00E000  0E3C               	movlw	low _ep_data_in
 51503  00E002  24F3               	addwf	prodl,w,c
 51504  00E004  6ED9               	movwf	fsr2l,c
 51505  00E006  0E01               	movlw	high _ep_data_in
 51506  00E008                     L82:
 51507  00E008  20F4               	addwfc	prodh,w,c
 51508  00E00A  6EDA               	movwf	fsr2h,c
 51509  00E00C  0101               	movlb	1	; () banked
 51510  00E00E  82DF               	bsf	indf2,1,c
 51511  00E010                     i2l384:
 51512                           
 51513                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 51514                           
 51515                           ; BSR set to: 1
 51516                           
 51517                           ; BSR set to: 1
 51518  00E010  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51519  00E014  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51520  00E018  0E00               	movlw	0
 51521  00E01A  84DB               	bsf	plusw2,2,c
 51522                           
 51523                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 51524  00E01C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51525  00E020  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51526  00E024  0E00               	movlw	0
 51527  00E026  8EDB               	bsf	plusw2,7,c
 51528                           
 51529                           ;usb_device.c: 2878: }
 51530  00E028  0012               	return	
 51531  00E02A                     i2l381:
 51532                           
 51533                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 51534  00E02A  0E04               	movlw	4
 51535  00E02C  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51536  00E02E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51537  00E030  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51538  00E032  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51539                           
 51540                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 51541  00E034  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51542  00E038  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51543  00E03C  AEDF               	btfss	indf2,7,c
 51544  00E03E  D01B               	goto	i2l386
 51545                           
 51546                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 51547  00E040  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51548  00E044  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51549  00E048  0E7F               	movlw	127
 51550  00E04A  16DF               	andwf	indf2,f,c
 51551                           
 51552                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 51553  00E04C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51554  00E050  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51555  00E054  0E00               	movlw	0
 51556  00E056  8CDB               	bsf	plusw2,6,c
 51557                           
 51558                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51559  00E058  0E00               	movlw	0
 51560  00E05A  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51561  00E05C  0E05               	movlw	5
 51562  00E05E  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51563  00E060  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51564  00E064  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51565  00E068  0E00               	movlw	0
 51566  00E06A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51567  00E06C  0E02               	movlw	2
 51568  00E06E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51569  00E070  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51570                           
 51571                           ;usb_device.c: 2893: }
 51572  00E074  D006               	goto	i2l387
 51573  00E076                     i2l386:
 51574                           
 51575                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 51576  00E076  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51577  00E07A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51578  00E07E  0E00               	movlw	0
 51579  00E080  8CDB               	bsf	plusw2,6,c
 51580  00E082                     i2l387:
 51581                           
 51582                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 51583  00E082  0E04               	movlw	4
 51584  00E084  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 51585  00E086  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 51586  00E088  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 51587  00E08A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 51588                           
 51589                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 51590  00E08C  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 51591  00E08E  D006               	goto	i2u1232_40
 51592  00E090  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51593  00E094  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51594  00E098  AEDF               	btfss	indf2,7,c
 51595  00E09A  D030               	goto	i2l388
 51596  00E09C                     i2u1232_40:
 51597                           
 51598                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 51599  00E09C  010D               	movlb	13	; () banked
 51600  00E09E  BF34               	btfsc	52,7,b	;volatile
 51601  00E0A0  D00A               	goto	i2l391
 51602                           
 51603                           ; BSR set to: 13
 51604                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 51605  00E0A2  5134               	movf	52,w,b	;volatile
 51606  00E0A4  0B0F               	andlw	15
 51607  00E0A6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51608  00E0A8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51609  00E0AA  0D01               	mullw	1
 51610  00E0AC  0E39               	movlw	low _ep_data_out
 51611  00E0AE  24F3               	addwf	prodl,w,c
 51612  00E0B0  6ED9               	movwf	fsr2l,c
 51613  00E0B2  0E01               	movlw	high _ep_data_out
 51614  00E0B4  D00A               	goto	L83
 51615  00E0B6                     i2l391:
 51616                           
 51617                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 51618                           
 51619                           ; BSR set to: 1
 51620  00E0B6  010D               	movlb	13	; () banked
 51621  00E0B8  5134               	movf	52,w,b	;volatile
 51622  00E0BA  0B0F               	andlw	15
 51623  00E0BC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51624  00E0BE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51625  00E0C0  0D01               	mullw	1
 51626  00E0C2  0E3C               	movlw	low _ep_data_in
 51627  00E0C4  24F3               	addwf	prodl,w,c
 51628  00E0C6  6ED9               	movwf	fsr2l,c
 51629  00E0C8  0E01               	movlw	high _ep_data_in
 51630  00E0CA                     L83:
 51631  00E0CA  20F4               	addwfc	prodh,w,c
 51632  00E0CC  6EDA               	movwf	fsr2h,c
 51633  00E0CE  0101               	movlb	1	; () banked
 51634  00E0D0  92DF               	bcf	indf2,1,c
 51635                           
 51636                           ; BSR set to: 1
 51637                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 51638                           
 51639                           ; BSR set to: 1
 51640  00E0D2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51641  00E0D6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51642  00E0DA  0E3B               	movlw	59
 51643  00E0DC  16DF               	andwf	indf2,f,c
 51644                           
 51645                           ; BSR set to: 1
 51646                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 51647  00E0DE  0E00               	movlw	0
 51648  00E0E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51649  00E0E2  0E05               	movlw	5
 51650  00E0E4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51651  00E0E6  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 51652  00E0EA  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 51653  00E0EE  0E00               	movlw	0
 51654  00E0F0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51655  00E0F2  0E02               	movlw	2
 51656  00E0F4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51657  00E0F6  EC07  F09D         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51658                           
 51659                           ;usb_device.c: 2923: }
 51660  00E0FA  D006               	goto	i2l393
 51661  00E0FC                     i2l388:
 51662                           
 51663                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 51664  00E0FC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 51665  00E100  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 51666  00E104  0E3B               	movlw	59
 51667  00E106  16DF               	andwf	indf2,f,c
 51668  00E108                     i2l393:
 51669                           
 51670                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 51671  00E108  010D               	movlb	13	; () banked
 51672  00E10A  5134               	movf	52,w,b	;volatile
 51673  00E10C  0B0F               	andlw	15
 51674  00E10E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 51675  00E110  5018               	movf	??_USBStdFeatureReqHandler,w,c
 51676  00E112  0D01               	mullw	1
 51677  00E114  0E26               	movlw	38
 51678  00E116  24F3               	addwf	prodl,w,c
 51679  00E118  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 51680  00E11A  0E0F               	movlw	15
 51681  00E11C  20F4               	addwfc	prodh,w,c
 51682  00E11E  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 51683                           
 51684                           ; BSR set to: 13
 51685                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 51686  00E120  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 51687  00E124  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 51688  00E128  0EFE               	movlw	254
 51689  00E12A  16DF               	andwf	indf2,f,c
 51690                           
 51691                           ; BSR set to: 13
 51692  00E12C  0012               	return	
 51693  00E12E                     __end_of_USBStdFeatureReqHandler:
 51694                           	opt stack 0
 51695                           tosu	equ	0xFFF
 51696                           tosh	equ	0xFFE
 51697                           tosl	equ	0xFFD
 51698                           pclatu	equ	0xFFB
 51699                           pclath	equ	0xFFA
 51700                           tblptru	equ	0xFF8
 51701                           tblptrh	equ	0xFF7
 51702                           tblptrl	equ	0xFF6
 51703                           tablat	equ	0xFF5
 51704                           prodh	equ	0xFF4
 51705                           prodl	equ	0xFF3
 51706                           intcon	equ	0xFF2
 51707                           indf0	equ	0xFEF
 51708                           postinc0	equ	0xFEE
 51709                           fsr0h	equ	0xFEA
 51710                           fsr0l	equ	0xFE9
 51711                           wreg	equ	0xFE8
 51712                           indf1	equ	0xFE7
 51713                           postinc1	equ	0xFE6
 51714                           postdec1	equ	0xFE5
 51715                           plusw1	equ	0xFE3
 51716                           fsr1h	equ	0xFE2
 51717                           fsr1l	equ	0xFE1
 51718                           indf2	equ	0xFDF
 51719                           postinc2	equ	0xFDE
 51720                           postdec2	equ	0xFDD
 51721                           plusw2	equ	0xFDB
 51722                           fsr2h	equ	0xFDA
 51723                           fsr2l	equ	0xFD9
 51724                           status	equ	0xFD8
 51725                           
 51726 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 51727 ;; Defined at:
 51728 ;;		line 54 in file "usb_events.c"
 51729 ;; Parameters:    Size  Location     Type
 51730 ;;  event           2   15[COMRAM] enum E6832
 51731 ;;  pdata           2   17[COMRAM] PTR void 
 51732 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 51733 ;;		 -> BDT(48), 
 51734 ;;  size            2   19[COMRAM] unsigned int 
 51735 ;; Auto vars:     Size  Location     Type
 51736 ;;		None
 51737 ;; Return value:  Size  Location     Type
 51738 ;;                  1    wreg      unsigned char 
 51739 ;; Registers used:
 51740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51741 ;; Tracked objects:
 51742 ;;		On entry : 0/0
 51743 ;;		On exit  : 0/0
 51744 ;;		Unchanged: 0/0
 51745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51746 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51747 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51748 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51749 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51750 ;;Total ram usage:        8 bytes
 51751 ;; Hardware stack levels used:    1
 51752 ;; Hardware stack levels required when called:    3
 51753 ;; This function calls:
 51754 ;;		_APP_DeviceCustomHIDInitialize
 51755 ;;		_APP_DeviceMSDInitialize
 51756 ;;		_MSDTransferTerminated
 51757 ;;		_USBCheckHIDRequest
 51758 ;;		_USBCheckMSDRequest
 51759 ;;		i2_SYSTEM_Initialize
 51760 ;; This function is called by:
 51761 ;;		_USBDeviceTasks
 51762 ;;		_USBStdSetCfgHandler
 51763 ;;		_USBSuspend
 51764 ;;		_USBWakeFromSuspend
 51765 ;;		_USBCtrlTrfSetupHandler
 51766 ;;		_USBCheckStdRequest
 51767 ;;		_USBStdFeatureReqHandler
 51768 ;; This function uses a non-reentrant model
 51769 ;;
 51770                           
 51771                           	psect	text214
 51772  013A0E                     __ptext214:
 51773                           	opt stack 0
 51774  013A0E                     _USER_USB_CALLBACK_EVENT_HANDLER:
 51775                           	opt stack 13
 51776                           
 51777                           ;usb_events.c: 56: switch((int)event)
 51778                           
 51779                           ;incstack = 0
 51780  013A0E  D019               	goto	i2l816
 51781  013A10                     
 51782                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 51783  013A10  0E01               	movlw	1
 51784  013A12  ECD7  F0A5         	call	i2_SYSTEM_Initialize
 51785                           
 51786                           ;usb_events.c: 79: break;
 51787  013A16  0012               	return	
 51788  013A18                     
 51789                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 51790  013A18  0E02               	movlw	2
 51791  013A1A  ECD7  F0A5         	call	i2_SYSTEM_Initialize
 51792                           
 51793                           ;usb_events.c: 90: break;
 51794  013A1E  0012               	return	
 51795  013A20                     
 51796                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 51797  013A20  ECF1  F0A9         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 51798                           
 51799                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 51800  013A24  ECE0  F0AC         	call	_APP_DeviceMSDInitialize	;wreg free
 51801                           
 51802                           ;usb_events.c: 100: break;
 51803                           
 51804                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 51805                           
 51806                           ;usb_events.c: 97: break;
 51807  013A28  0012               	return	
 51808  013A2A                     
 51809                           ;usb_events.c: 105: USBCheckHIDRequest();
 51810  013A2A  EC70  F092         	call	_USBCheckHIDRequest	;wreg free
 51811                           
 51812                           ;usb_events.c: 108: USBCheckMSDRequest();
 51813  013A2E  EC04  F096         	call	_USBCheckMSDRequest	;wreg free
 51814                           
 51815                           ;usb_events.c: 112: break;
 51816                           
 51817                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 51818                           
 51819                           ;usb_events.c: 109: break;
 51820  013A32  0012               	return	
 51821  013A34                     
 51822                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 51823  013A34  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 51824  013A38  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 51825  013A3C  EC2E  F0A5         	call	_MSDTransferTerminated	;wreg free
 51826                           
 51827                           ;usb_events.c: 129: }
 51828                           
 51829                           ;usb_events.c: 128: break;
 51830                           
 51831                           ;usb_events.c: 127: default:
 51832                           
 51833                           ;usb_events.c: 125: break;
 51834  013A40  0012               	return	
 51835  013A42                     i2l816:
 51836  013A42  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 51837  013A46  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 51838                           
 51839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 51840                           ; Switch size 1, requested type "space"
 51841                           ; Number of cases is 2, Range of values is 0 to 127
 51842                           ; switch strategies available:
 51843                           ; Name         Instructions Cycles
 51844                           ; simple_byte            7     4 (average)
 51845                           ;	Chosen strategy is simple_byte
 51846  013A4A  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 51847  013A4C  0A00               	xorlw	0	; case 0
 51848  013A4E  B4D8               	btfsc	status,2,c
 51849  013A50  D004               	goto	i2l19463
 51850  013A52  0A7F               	xorlw	127	; case 127
 51851  013A54  A4D8               	btfss	status,2,c
 51852  013A56  0012               	return	
 51853  013A58  D01A               	goto	i2l19465
 51854  013A5A                     i2l19463:
 51855                           
 51856                           ; Switch size 1, requested type "space"
 51857                           ; Number of cases is 8, Range of values is 1 to 117
 51858                           ; switch strategies available:
 51859                           ; Name         Instructions Cycles
 51860                           ; simple_byte           25    13 (average)
 51861                           ;	Chosen strategy is simple_byte
 51862  013A5A  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51863  013A5C  0A01               	xorlw	1	; case 1
 51864  013A5E  B4D8               	btfsc	status,2,c
 51865  013A60  D7DF               	goto	i2l822
 51866  013A62  0A03               	xorlw	3	; case 2
 51867  013A64  B4D8               	btfsc	status,2,c
 51868  013A66  0012               	return	
 51869  013A68  0A01               	xorlw	1	; case 3
 51870  013A6A  B4D8               	btfsc	status,2,c
 51871  013A6C  D7DE               	goto	i2l824
 51872  013A6E  0A06               	xorlw	6	; case 5
 51873  013A70  B4D8               	btfsc	status,2,c
 51874  013A72  D7E0               	goto	i2l826
 51875  013A74  0A77               	xorlw	119	; case 114
 51876  013A76  B4D8               	btfsc	status,2,c
 51877  013A78  0012               	return	
 51878  013A7A  0A01               	xorlw	1	; case 115
 51879  013A7C  B4D8               	btfsc	status,2,c
 51880  013A7E  0012               	return	
 51881  013A80  0A07               	xorlw	7	; case 116
 51882  013A82  B4D8               	btfsc	status,2,c
 51883  013A84  D7C9               	goto	i2l821
 51884  013A86  0A01               	xorlw	1	; case 117
 51885  013A88  A4D8               	btfss	status,2,c
 51886  013A8A  0012               	return	
 51887  013A8C  D7C1               	goto	i2l820
 51888  013A8E                     i2l19465:
 51889                           
 51890                           ; Switch size 1, requested type "space"
 51891                           ; Number of cases is 1, Range of values is 255 to 255
 51892                           ; switch strategies available:
 51893                           ; Name         Instructions Cycles
 51894                           ; simple_byte            4     3 (average)
 51895                           ;	Chosen strategy is simple_byte
 51896  013A8E  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 51897  013A90  0AFF               	xorlw	255	; case 255
 51898  013A92  0012               	return	
 51899  013A94                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 51900                           	opt stack 0
 51901                           tosu	equ	0xFFF
 51902                           tosh	equ	0xFFE
 51903                           tosl	equ	0xFFD
 51904                           pclatu	equ	0xFFB
 51905                           pclath	equ	0xFFA
 51906                           tblptru	equ	0xFF8
 51907                           tblptrh	equ	0xFF7
 51908                           tblptrl	equ	0xFF6
 51909                           tablat	equ	0xFF5
 51910                           prodh	equ	0xFF4
 51911                           prodl	equ	0xFF3
 51912                           intcon	equ	0xFF2
 51913                           indf0	equ	0xFEF
 51914                           postinc0	equ	0xFEE
 51915                           fsr0h	equ	0xFEA
 51916                           fsr0l	equ	0xFE9
 51917                           wreg	equ	0xFE8
 51918                           indf1	equ	0xFE7
 51919                           postinc1	equ	0xFE6
 51920                           postdec1	equ	0xFE5
 51921                           plusw1	equ	0xFE3
 51922                           fsr1h	equ	0xFE2
 51923                           fsr1l	equ	0xFE1
 51924                           indf2	equ	0xFDF
 51925                           postinc2	equ	0xFDE
 51926                           postdec2	equ	0xFDD
 51927                           plusw2	equ	0xFDB
 51928                           fsr2h	equ	0xFDA
 51929                           fsr2l	equ	0xFD9
 51930                           status	equ	0xFD8
 51931                           
 51932 ;; *************** function i2_SYSTEM_Initialize *****************
 51933 ;; Defined at:
 51934 ;;		line 39 in file "system.c"
 51935 ;; Parameters:    Size  Location     Type
 51936 ;;  state           1    wreg     enum E6623
 51937 ;; Auto vars:     Size  Location     Type
 51938 ;;  state           1    4[COMRAM] enum E6623
 51939 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 51940 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 51941 ;; Return value:  Size  Location     Type
 51942 ;;                  1    wreg      void 
 51943 ;; Registers used:
 51944 ;;		wreg, status,2, status,0
 51945 ;; Tracked objects:
 51946 ;;		On entry : 0/0
 51947 ;;		On exit  : 0/0
 51948 ;;		Unchanged: 0/0
 51949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51950 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51951 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51952 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51953 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51954 ;;Total ram usage:        5 bytes
 51955 ;; Hardware stack levels used:    1
 51956 ;; This function calls:
 51957 ;;		Nothing
 51958 ;; This function is called by:
 51959 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51960 ;; This function uses a non-reentrant model
 51961 ;;
 51962                           
 51963                           	psect	text215
 51964  014BAE                     __ptext215:
 51965                           	opt stack 0
 51966  014BAE                     i2_SYSTEM_Initialize:
 51967                           	opt stack 15
 51968                           
 51969                           ;incstack = 0
 51970                           ;i2SYSTEM_Initialize@state stored from wreg
 51971  014BAE  6E05               	movwf	i2SYSTEM_Initialize@state,c
 51972                           
 51973                           ;system.c: 41: switch(state)
 51974  014BB0  D01D               	goto	i2l897
 51975  014BB2                     
 51976                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 51977  014BB2  0E02               	movlw	2
 51978  014BB4  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 51979  014BB6  0E58               	movlw	88
 51980  014BB8  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 51981                           
 51982                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 51983  014BBA  8C9B               	bsf	3995,6,c	;volatile
 51984  014BBC                     i2l12789:
 51985  014BBC  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 51986  014BBE  A0D8               	btfss	status,0,c
 51987  014BC0  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 51988  014BC2  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 51989  014BC4  E1FB               	bnz	i2l12789
 51990  014BC6  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 51991  014BC8  B4D8               	btfsc	status,2,c
 51992  014BCA  0012               	return	
 51993  014BCC  D7F7               	goto	i2l900
 51994  014BCE                     
 51995                           ;system.c: 78: OSCCON = 0x70;
 51996  014BCE  0E70               	movlw	112
 51997  014BD0  6ED3               	movwf	4051,c	;volatile
 51998                           
 51999                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 52000  014BD2  0E03               	movlw	3
 52001  014BD4  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,c
 52002  014BD6  0E20               	movlw	32
 52003  014BD8  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3132,c
 52004  014BDA                     i2l12793:
 52005  014BDA  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132,f,c
 52006  014BDC  A0D8               	btfss	status,0,c
 52007  014BDE  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,f,c
 52008  014BE0  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132,w,c
 52009  014BE2  E1FB               	bnz	i2l12793
 52010  014BE4  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3132+1,w,c
 52011  014BE6  B4D8               	btfsc	status,2,c
 52012  014BE8  0012               	return	
 52013  014BEA  D7F7               	goto	i2l906
 52014  014BEC                     i2l897:
 52015  014BEC  5005               	movf	i2SYSTEM_Initialize@state,w,c
 52016                           
 52017                           ; Switch size 1, requested type "space"
 52018                           ; Number of cases is 3, Range of values is 0 to 2
 52019                           ; switch strategies available:
 52020                           ; Name         Instructions Cycles
 52021                           ; simple_byte           10     6 (average)
 52022                           ;	Chosen strategy is simple_byte
 52023  014BEE  0A00               	xorlw	0	; case 0
 52024  014BF0  B4D8               	btfsc	status,2,c
 52025  014BF2  D7DF               	goto	i2l898
 52026  014BF4  0A01               	xorlw	1	; case 1
 52027  014BF6  B4D8               	btfsc	status,2,c
 52028  014BF8  0012               	return	
 52029  014BFA  0A03               	xorlw	3	; case 2
 52030  014BFC  A4D8               	btfss	status,2,c
 52031  014BFE  0012               	return	
 52032  014C00  D7E6               	goto	i2l904
 52033  014C02                     __end_ofi2_SYSTEM_Initialize:
 52034                           	opt stack 0
 52035                           tosu	equ	0xFFF
 52036                           tosh	equ	0xFFE
 52037                           tosl	equ	0xFFD
 52038                           pclatu	equ	0xFFB
 52039                           pclath	equ	0xFFA
 52040                           tblptru	equ	0xFF8
 52041                           tblptrh	equ	0xFF7
 52042                           tblptrl	equ	0xFF6
 52043                           tablat	equ	0xFF5
 52044                           prodh	equ	0xFF4
 52045                           prodl	equ	0xFF3
 52046                           intcon	equ	0xFF2
 52047                           indf0	equ	0xFEF
 52048                           postinc0	equ	0xFEE
 52049                           fsr0h	equ	0xFEA
 52050                           fsr0l	equ	0xFE9
 52051                           wreg	equ	0xFE8
 52052                           indf1	equ	0xFE7
 52053                           postinc1	equ	0xFE6
 52054                           postdec1	equ	0xFE5
 52055                           plusw1	equ	0xFE3
 52056                           fsr1h	equ	0xFE2
 52057                           fsr1l	equ	0xFE1
 52058                           indf2	equ	0xFDF
 52059                           postinc2	equ	0xFDE
 52060                           postdec2	equ	0xFDD
 52061                           plusw2	equ	0xFDB
 52062                           fsr2h	equ	0xFDA
 52063                           fsr2l	equ	0xFD9
 52064                           status	equ	0xFD8
 52065                           
 52066 ;; *************** function _USBCheckMSDRequest *****************
 52067 ;; Defined at:
 52068 ;;		line 218 in file "usb_device_msd.c"
 52069 ;; Parameters:    Size  Location     Type
 52070 ;;		None
 52071 ;; Auto vars:     Size  Location     Type
 52072 ;;		None
 52073 ;; Return value:  Size  Location     Type
 52074 ;;                  1    wreg      void 
 52075 ;; Registers used:
 52076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52077 ;; Tracked objects:
 52078 ;;		On entry : 0/0
 52079 ;;		On exit  : 0/0
 52080 ;;		Unchanged: 0/0
 52081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52083 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52086 ;;Total ram usage:        4 bytes
 52087 ;; Hardware stack levels used:    1
 52088 ;; Hardware stack levels required when called:    1
 52089 ;; This function calls:
 52090 ;;		i2_USBTransferOnePacket
 52091 ;; This function is called by:
 52092 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52093 ;; This function uses a non-reentrant model
 52094 ;;
 52095                           
 52096                           	psect	text216
 52097  012C08                     __ptext216:
 52098                           	opt stack 0
 52099  012C08                     _USBCheckMSDRequest:
 52100                           	opt stack 14
 52101                           
 52102                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 52103                           
 52104                           ;incstack = 0
 52105  012C08  010D               	movlb	13	; () banked
 52106  012C0A  5130               	movf	48,w,b	;volatile
 52107  012C0C  0B1F               	andlw	31
 52108  012C0E  06E8               	decf	wreg,f,c
 52109  012C10  A4D8               	btfss	status,2,c
 52110  012C12  0012               	return	
 52111                           
 52112                           ; BSR set to: 13
 52113                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 52114                           
 52115                           ; BSR set to: 13
 52116                           
 52117                           ; BSR set to: 13
 52118                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 52119  012C14  5134               	movf	52,w,b	;volatile
 52120  012C16  A4D8               	btfss	status,2,c
 52121  012C18  0012               	return	
 52122  012C1A  D04C               	goto	i2l545
 52123  012C1C                     
 52124                           ; BSR set to: 13
 52125                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 52126                           
 52127                           ; BSR set to: 13
 52128  012C1C  5132               	movf	50,w,b	;volatile
 52129  012C1E  1133               	iorwf	51,w,b	;volatile
 52130  012C20  A4D8               	btfss	status,2,c
 52131  012C22  0012               	return	
 52132                           
 52133                           ; BSR set to: 13
 52134  012C24  5136               	movf	54,w,b	;volatile
 52135  012C26  1137               	iorwf	55,w,b	;volatile
 52136  012C28  A4D8               	btfss	status,2,c
 52137  012C2A  0012               	return	
 52138                           
 52139                           ; BSR set to: 13
 52140                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 52141                           
 52142                           ; BSR set to: 13
 52143                           
 52144                           ; BSR set to: 13
 52145                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 52146  012C2C  0E00               	movlw	0
 52147  012C2E  0101               	movlb	1	; () banked
 52148  012C30  6F63               	movwf	_MSD_State& (0+255),b
 52149                           
 52150                           ; BSR set to: 1
 52151                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 52152  012C32  6962               	setf	_MSDCommandState& (0+255),b
 52153                           
 52154                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 52155  012C34  0E00               	movlw	0
 52156  012C36  6F61               	movwf	_MSDReadState& (0+255),b
 52157                           
 52158                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 52159  012C38  0E00               	movlw	0
 52160  012C3A  6F60               	movwf	_MSDWriteState& (0+255),b
 52161                           
 52162                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 52163  012C3C  0E01               	movlw	1
 52164  012C3E  6F5B               	movwf	_MSDCBWValid& (0+255),b
 52165                           
 52166                           ; BSR set to: 1
 52167                           
 52168                           ; BSR set to: 1
 52169                           
 52170                           ; BSR set to: 1
 52171                           
 52172                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 52173  012C40  C125  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 52174  012C44  C126  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 52175                           
 52176                           ; BSR set to: 1
 52177  012C48  500C               	movf	_USBCheckMSDRequest$2534,w,c
 52178  012C4A  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 52179  012C4C  B4D8               	btfsc	status,2,c
 52180  012C4E  D00A               	goto	i2u1075_40
 52181                           
 52182                           ; BSR set to: 1
 52183                           
 52184                           ; BSR set to: 1
 52185                           
 52186                           ; BSR set to: 1
 52187                           
 52188                           ; BSR set to: 1
 52189  012C50  C125  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 52190  012C54  C126  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 52191                           
 52192                           ; BSR set to: 1
 52193                           
 52194                           ; BSR set to: 1
 52195  012C58  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 52196  012C5C  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 52197  012C60  BEDF               	btfsc	indf2,7,c
 52198  012C62  D00F               	goto	i2l550
 52199  012C64                     i2u1075_40:
 52200                           
 52201                           ; BSR set to: 1
 52202                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 52203                           
 52204                           ; BSR set to: 1
 52205  012C64  0E00               	movlw	0
 52206  012C66  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52207  012C68  0E40               	movlw	64
 52208  012C6A  6E02               	movwf	i2USBTransferOnePacket@data,c
 52209  012C6C  0E0D               	movlw	13
 52210  012C6E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52211  012C70  0E40               	movlw	64
 52212  012C72  6E04               	movwf	i2USBTransferOnePacket@len,c
 52213  012C74  0E02               	movlw	2
 52214  012C76  EC3B  F089         	call	i2_USBTransferOnePacket
 52215  012C7A  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52216  012C7E  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52217  012C82                     i2l550:
 52218                           
 52219                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 52220  012C82  0E80               	movlw	128
 52221  012C84  6E55               	movwf	_inPipes+3,c	;volatile
 52222                           
 52223                           ;usb_device_msd.c: 263: break;
 52224  012C86  0012               	return	
 52225  012C88                     
 52226                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 52227  012C88  010D               	movlb	13	; () banked
 52228  012C8A  5132               	movf	50,w,b	;volatile
 52229  012C8C  1133               	iorwf	51,w,b	;volatile
 52230  012C8E  A4D8               	btfss	status,2,c
 52231  012C90  0012               	return	
 52232                           
 52233                           ; BSR set to: 13
 52234  012C92  0536               	decf	54,w,b	;volatile
 52235  012C94  1137               	iorwf	55,w,b	;volatile
 52236  012C96  A4D8               	btfss	status,2,c
 52237  012C98  0012               	return	
 52238                           
 52239                           ; BSR set to: 13
 52240                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 52241                           
 52242                           ; BSR set to: 13
 52243                           
 52244                           ; BSR set to: 13
 52245                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 52246  012C9A  0E00               	movlw	0
 52247  012C9C  6F38               	movwf	56,b	;volatile
 52248                           
 52249                           ; BSR set to: 13
 52250                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 52251  012C9E  0E38               	movlw	56
 52252  012CA0  6E52               	movwf	_inPipes,c	;volatile
 52253  012CA2  0E0D               	movlw	13
 52254  012CA4  6E53               	movwf	_inPipes+1,c	;volatile
 52255                           
 52256                           ; BSR set to: 13
 52257  012CA6  0E00               	movlw	0
 52258  012CA8  6E57               	movwf	_inPipes+5,c	;volatile
 52259  012CAA  0E01               	movlw	1
 52260  012CAC  6E56               	movwf	_inPipes+4,c	;volatile
 52261                           
 52262                           ; BSR set to: 13
 52263  012CAE  0EC1               	movlw	193
 52264  012CB0  6E55               	movwf	_inPipes+3,c	;volatile
 52265                           
 52266                           ; BSR set to: 13
 52267                           ;usb_device_msd.c: 278: }
 52268                           
 52269                           ;usb_device_msd.c: 277: break;
 52270  012CB2  0012               	return	
 52271  012CB4                     i2l545:
 52272                           
 52273                           ; BSR set to: 13
 52274                           
 52275                           ; BSR set to: 13
 52276  012CB4  5131               	movf	49,w,b	;volatile
 52277                           
 52278                           ; Switch size 1, requested type "space"
 52279                           ; Number of cases is 2, Range of values is 254 to 255
 52280                           ; switch strategies available:
 52281                           ; Name         Instructions Cycles
 52282                           ; simple_byte            7     4 (average)
 52283                           ;	Chosen strategy is simple_byte
 52284  012CB6  0AFE               	xorlw	254	; case 254
 52285  012CB8  B4D8               	btfsc	status,2,c
 52286  012CBA  D7E6               	goto	i2l562
 52287  012CBC  0A01               	xorlw	1	; case 255
 52288  012CBE  A4D8               	btfss	status,2,c
 52289  012CC0  0012               	return	
 52290  012CC2  D7AC               	goto	i2l546
 52291  012CC4                     __end_of_USBCheckMSDRequest:
 52292                           	opt stack 0
 52293                           tosu	equ	0xFFF
 52294                           tosh	equ	0xFFE
 52295                           tosl	equ	0xFFD
 52296                           pclatu	equ	0xFFB
 52297                           pclath	equ	0xFFA
 52298                           tblptru	equ	0xFF8
 52299                           tblptrh	equ	0xFF7
 52300                           tblptrl	equ	0xFF6
 52301                           tablat	equ	0xFF5
 52302                           prodh	equ	0xFF4
 52303                           prodl	equ	0xFF3
 52304                           intcon	equ	0xFF2
 52305                           indf0	equ	0xFEF
 52306                           postinc0	equ	0xFEE
 52307                           fsr0h	equ	0xFEA
 52308                           fsr0l	equ	0xFE9
 52309                           wreg	equ	0xFE8
 52310                           indf1	equ	0xFE7
 52311                           postinc1	equ	0xFE6
 52312                           postdec1	equ	0xFE5
 52313                           plusw1	equ	0xFE3
 52314                           fsr1h	equ	0xFE2
 52315                           fsr1l	equ	0xFE1
 52316                           indf2	equ	0xFDF
 52317                           postinc2	equ	0xFDE
 52318                           postdec2	equ	0xFDD
 52319                           plusw2	equ	0xFDB
 52320                           fsr2h	equ	0xFDA
 52321                           fsr2l	equ	0xFD9
 52322                           status	equ	0xFD8
 52323                           
 52324 ;; *************** function _USBCheckHIDRequest *****************
 52325 ;; Defined at:
 52326 ;;		line 153 in file "usb_device_hid.c"
 52327 ;; Parameters:    Size  Location     Type
 52328 ;;		None
 52329 ;; Auto vars:     Size  Location     Type
 52330 ;;		None
 52331 ;; Return value:  Size  Location     Type
 52332 ;;                  1    wreg      void 
 52333 ;; Registers used:
 52334 ;;		wreg, status,2, status,0
 52335 ;; Tracked objects:
 52336 ;;		On entry : 0/0
 52337 ;;		On exit  : 0/0
 52338 ;;		Unchanged: 0/0
 52339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52344 ;;Total ram usage:        0 bytes
 52345 ;; Hardware stack levels used:    1
 52346 ;; This function calls:
 52347 ;;		Nothing
 52348 ;; This function is called by:
 52349 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52350 ;; This function uses a non-reentrant model
 52351 ;;
 52352                           
 52353                           	psect	text217
 52354  0124E0                     __ptext217:
 52355                           	opt stack 0
 52356  0124E0                     _USBCheckHIDRequest:
 52357                           	opt stack 15
 52358                           
 52359                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 52360                           
 52361                           ;incstack = 0
 52362  0124E0  010D               	movlb	13	; () banked
 52363  0124E2  5130               	movf	48,w,b	;volatile
 52364  0124E4  0B1F               	andlw	31
 52365  0124E6  06E8               	decf	wreg,f,c
 52366  0124E8  A4D8               	btfss	status,2,c
 52367  0124EA  0012               	return	
 52368                           
 52369                           ; BSR set to: 13
 52370                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 52371                           
 52372                           ; BSR set to: 13
 52373                           
 52374                           ; BSR set to: 13
 52375  0124EC  5134               	movf	52,w,b	;volatile
 52376  0124EE  A4D8               	btfss	status,2,c
 52377  0124F0  0012               	return	
 52378                           
 52379                           ; BSR set to: 13
 52380                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 52381                           
 52382                           ; BSR set to: 13
 52383                           
 52384                           ; BSR set to: 13
 52385  0124F2  0E06               	movlw	6
 52386  0124F4  1931               	xorwf	49,w,b	;volatile
 52387  0124F6  B4D8               	btfsc	status,2,c
 52388  0124F8  D019               	goto	i2l425
 52389  0124FA  D021               	goto	i2l428
 52390  0124FC                     
 52391                           ; BSR set to: 13
 52392                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 52393                           
 52394                           ; BSR set to: 13
 52395  0124FC  0101               	movlb	1	; () banked
 52396  0124FE  05C2               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 52397  012500  A4D8               	btfss	status,2,c
 52398  012502  D01D               	goto	i2l428
 52399                           
 52400                           ; BSR set to: 1
 52401                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 52402  012504  0ED0               	movlw	low (_configDescriptor1+18)
 52403  012506  6E52               	movwf	_inPipes,c	;volatile
 52404  012508  0EA0               	movlw	high (_configDescriptor1+18)
 52405  01250A  6E53               	movwf	_inPipes+1,c	;volatile
 52406                           
 52407                           ; BSR set to: 1
 52408  01250C  0E00               	movlw	0
 52409  01250E  6E57               	movwf	_inPipes+5,c	;volatile
 52410  012510  0E09               	movlw	9
 52411  012512  D00A               	goto	L84
 52412  012514                     i2l12477:
 52413                           
 52414                           ; BSR set to: 1
 52415  012514  0EC0               	movlw	192
 52416  012516  6E55               	movwf	_inPipes+3,c	;volatile
 52417                           
 52418                           ; BSR set to: 1
 52419                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 52420  012518  D012               	goto	i2l428
 52421  01251A                     
 52422                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 52423                           
 52424                           ; BSR set to: 1
 52425  01251A  0E84               	movlw	low _hid_rpt01
 52426  01251C  6E52               	movwf	_inPipes,c	;volatile
 52427  01251E  0EA1               	movlw	high _hid_rpt01
 52428  012520  6E53               	movwf	_inPipes+1,c	;volatile
 52429  012522  0E00               	movlw	0
 52430  012524  6E57               	movwf	_inPipes+5,c	;volatile
 52431  012526  0E1D               	movlw	29
 52432  012528                     L84:
 52433  012528  6E56               	movwf	_inPipes+4,c	;volatile
 52434  01252A  D7F4               	goto	i2l12477
 52435  01252C                     i2l425:
 52436  01252C  010D               	movlb	13	; () banked
 52437  01252E  5133               	movf	51,w,b	;volatile
 52438                           
 52439                           ; Switch size 1, requested type "space"
 52440                           ; Number of cases is 3, Range of values is 33 to 35
 52441                           ; switch strategies available:
 52442                           ; Name         Instructions Cycles
 52443                           ; simple_byte           10     6 (average)
 52444                           ;	Chosen strategy is simple_byte
 52445  012530  0A21               	xorlw	33	; case 33
 52446  012532  B4D8               	btfsc	status,2,c
 52447  012534  D7E3               	goto	i2l426
 52448  012536  0A03               	xorlw	3	; case 34
 52449  012538  B4D8               	btfsc	status,2,c
 52450  01253A  D7EF               	goto	i2l429
 52451  01253C  0A01               	xorlw	1	; case 35
 52452  01253E                     i2l428:
 52453                           
 52454                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 52455                           
 52456                           ; BSR set to: 13
 52457                           
 52458                           ; BSR set to: 13
 52459  01253E  010D               	movlb	13	; () banked
 52460  012540  3930               	swapf	48,w,b	;volatile
 52461  012542  32E8               	rrcf	wreg,f,c
 52462  012544  0B03               	andlw	3
 52463  012546  06E8               	decf	wreg,f,c
 52464  012548  A4D8               	btfss	status,2,c
 52465  01254A  0012               	return	
 52466  01254C  D020               	goto	i2l432
 52467  01254E                     
 52468                           ; BSR set to: 13
 52469                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 52470                           
 52471                           ; BSR set to: 13
 52472  01254E  0EC0               	movlw	low _idle_rate
 52473  012550  6E52               	movwf	_inPipes,c	;volatile
 52474  012552  0E01               	movlw	high _idle_rate
 52475  012554  6E53               	movwf	_inPipes+1,c	;volatile
 52476                           
 52477                           ; BSR set to: 13
 52478  012556  0E00               	movlw	0
 52479  012558  6E57               	movwf	_inPipes+5,c	;volatile
 52480  01255A  0E01               	movlw	1
 52481  01255C  6E56               	movwf	_inPipes+4,c	;volatile
 52482                           
 52483                           ; BSR set to: 13
 52484  01255E  0EC1               	movlw	193
 52485  012560  6E55               	movwf	_inPipes+3,c	;volatile
 52486                           
 52487                           ;usb_device_hid.c: 223: break;
 52488  012562  0012               	return	
 52489  012564                     
 52490                           ; BSR set to: 13
 52491                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 52492                           
 52493                           ; BSR set to: 13
 52494  012564  0E80               	movlw	128
 52495  012566  6E55               	movwf	_inPipes+3,c	;volatile
 52496                           
 52497                           ; BSR set to: 13
 52498                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 52499  012568  CD33 F1C0          	movff	3379,_idle_rate	;volatile
 52500                           
 52501                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 52502  01256C  0012               	return	
 52503  01256E                     
 52504                           ; BSR set to: 13
 52505                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 52506                           
 52507                           ; BSR set to: 13
 52508  01256E  0EBF               	movlw	low _active_protocol
 52509  012570  6E52               	movwf	_inPipes,c	;volatile
 52510  012572  0E01               	movlw	high _active_protocol
 52511  012574  6E53               	movwf	_inPipes+1,c	;volatile
 52512                           
 52513                           ; BSR set to: 13
 52514  012576  0E00               	movlw	0
 52515  012578  6E57               	movwf	_inPipes+5,c	;volatile
 52516  01257A  0E01               	movlw	1
 52517  01257C  6E56               	movwf	_inPipes+4,c	;volatile
 52518                           
 52519                           ; BSR set to: 13
 52520  01257E  0E81               	movlw	129
 52521  012580  6E55               	movwf	_inPipes+3,c	;volatile
 52522                           
 52523                           ;usb_device_hid.c: 234: break;
 52524  012582  0012               	return	
 52525  012584                     
 52526                           ; BSR set to: 13
 52527                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 52528                           
 52529                           ; BSR set to: 13
 52530  012584  0E80               	movlw	128
 52531  012586  6E55               	movwf	_inPipes+3,c	;volatile
 52532                           
 52533                           ; BSR set to: 13
 52534                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 52535  012588  CD32 F1BF          	movff	3378,_active_protocol	;volatile
 52536                           
 52537                           ; BSR set to: 13
 52538                           ;usb_device_hid.c: 239: }
 52539                           
 52540                           ;usb_device_hid.c: 238: break;
 52541  01258C  0012               	return	
 52542  01258E                     i2l432:
 52543                           
 52544                           ; BSR set to: 13
 52545                           
 52546                           ; BSR set to: 13
 52547  01258E  5131               	movf	49,w,b	;volatile
 52548                           
 52549                           ; Switch size 1, requested type "space"
 52550                           ; Number of cases is 6, Range of values is 1 to 11
 52551                           ; switch strategies available:
 52552                           ; Name         Instructions Cycles
 52553                           ; simple_byte           19    10 (average)
 52554                           ;	Chosen strategy is simple_byte
 52555  012590  0A01               	xorlw	1	; case 1
 52556  012592  B4D8               	btfsc	status,2,c
 52557  012594  0012               	return	
 52558  012596  0A03               	xorlw	3	; case 2
 52559  012598  B4D8               	btfsc	status,2,c
 52560  01259A  D7D9               	goto	i2l436
 52561  01259C  0A01               	xorlw	1	; case 3
 52562  01259E  B4D8               	btfsc	status,2,c
 52563  0125A0  D7E6               	goto	i2l438
 52564  0125A2  0A0A               	xorlw	10	; case 9
 52565  0125A4  B4D8               	btfsc	status,2,c
 52566  0125A6  0012               	return	
 52567  0125A8  0A03               	xorlw	3	; case 10
 52568  0125AA  B4D8               	btfsc	status,2,c
 52569  0125AC  D7DB               	goto	i2l437
 52570  0125AE  0A01               	xorlw	1	; case 11
 52571  0125B0  A4D8               	btfss	status,2,c
 52572  0125B2  0012               	return	
 52573  0125B4  D7E7               	goto	i2l439
 52574  0125B6                     __end_of_USBCheckHIDRequest:
 52575                           	opt stack 0
 52576                           tosu	equ	0xFFF
 52577                           tosh	equ	0xFFE
 52578                           tosl	equ	0xFFD
 52579                           pclatu	equ	0xFFB
 52580                           pclath	equ	0xFFA
 52581                           tblptru	equ	0xFF8
 52582                           tblptrh	equ	0xFF7
 52583                           tblptrl	equ	0xFF6
 52584                           tablat	equ	0xFF5
 52585                           prodh	equ	0xFF4
 52586                           prodl	equ	0xFF3
 52587                           intcon	equ	0xFF2
 52588                           indf0	equ	0xFEF
 52589                           postinc0	equ	0xFEE
 52590                           fsr0h	equ	0xFEA
 52591                           fsr0l	equ	0xFE9
 52592                           wreg	equ	0xFE8
 52593                           indf1	equ	0xFE7
 52594                           postinc1	equ	0xFE6
 52595                           postdec1	equ	0xFE5
 52596                           plusw1	equ	0xFE3
 52597                           fsr1h	equ	0xFE2
 52598                           fsr1l	equ	0xFE1
 52599                           indf2	equ	0xFDF
 52600                           postinc2	equ	0xFDE
 52601                           postdec2	equ	0xFDD
 52602                           plusw2	equ	0xFDB
 52603                           fsr2h	equ	0xFDA
 52604                           fsr2l	equ	0xFD9
 52605                           status	equ	0xFD8
 52606                           
 52607 ;; *************** function _MSDTransferTerminated *****************
 52608 ;; Defined at:
 52609 ;;		line 1674 in file "usb_device_msd.c"
 52610 ;; Parameters:    Size  Location     Type
 52611 ;;  handle          2   11[COMRAM] PTR void 
 52612 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52613 ;;		 -> BDT(48), 
 52614 ;; Auto vars:     Size  Location     Type
 52615 ;;		None
 52616 ;; Return value:  Size  Location     Type
 52617 ;;                  1    wreg      void 
 52618 ;; Registers used:
 52619 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52620 ;; Tracked objects:
 52621 ;;		On entry : 0/0
 52622 ;;		On exit  : 0/0
 52623 ;;		Unchanged: 0/0
 52624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52625 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52626 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52628 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52629 ;;Total ram usage:        4 bytes
 52630 ;; Hardware stack levels used:    1
 52631 ;; Hardware stack levels required when called:    1
 52632 ;; This function calls:
 52633 ;;		i2_USBStallEndpoint
 52634 ;;		i2_USBTransferOnePacket
 52635 ;; This function is called by:
 52636 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52637 ;; This function uses a non-reentrant model
 52638 ;;
 52639                           
 52640                           	psect	text218
 52641  014A5C                     __ptext218:
 52642                           	opt stack 0
 52643  014A5C                     _MSDTransferTerminated:
 52644                           	opt stack 14
 52645                           
 52646                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 52647                           
 52648                           ; BSR set to: 13
 52649                           ;incstack = 0
 52650  014A5C  0101               	movlb	1	; () banked
 52651  014A5E  515B               	movf	_MSDCBWValid& (0+255),w,b
 52652  014A60  A4D8               	btfss	status,2,c
 52653  014A62  D00B               	goto	i2l780
 52654                           
 52655                           ; BSR set to: 1
 52656                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 52657  014A64  0E01               	movlw	1
 52658  014A66  6E01               	movwf	i2USBStallEndpoint@dir,c
 52659  014A68  0E02               	movlw	2
 52660  014A6A  ECB8  F088         	call	i2_USBStallEndpoint
 52661                           
 52662                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 52663  014A6E  0E00               	movlw	0
 52664  014A70  6E01               	movwf	i2USBStallEndpoint@dir,c
 52665  014A72  0E02               	movlw	2
 52666  014A74  ECB8  F088         	call	i2_USBStallEndpoint
 52667                           
 52668                           ;usb_device_msd.c: 1681: }
 52669  014A78  0012               	return	
 52670  014A7A                     i2l780:
 52671  014A7A  C125  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 52672  014A7E  C126  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 52673  014A82  500E               	movf	_MSDTransferTerminated$2623,w,c
 52674  014A84  180C               	xorwf	MSDTransferTerminated@handle,w,c
 52675  014A86  E114               	bnz	i2l783
 52676  014A88  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 52677  014A8A  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 52678  014A8C  A4D8               	btfss	status,2,c
 52679  014A8E  0012               	return	
 52680                           
 52681                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 52682  014A90  0E00               	movlw	0
 52683  014A92  6E01               	movwf	i2USBTransferOnePacket@dir,c
 52684  014A94  0E40               	movlw	64
 52685  014A96  6E02               	movwf	i2USBTransferOnePacket@data,c
 52686  014A98  0E0D               	movlw	13
 52687  014A9A  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 52688  014A9C  0E40               	movlw	64
 52689  014A9E  6E04               	movwf	i2USBTransferOnePacket@len,c
 52690  014AA0  0E02               	movlw	2
 52691  014AA2  EC3B  F089         	call	i2_USBTransferOnePacket
 52692  014AA6  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 52693  014AAA  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 52694  014AAE  0012               	return	
 52695  014AB0                     i2l783:
 52696  014AB0  0012               	return		;funcret
 52697  014AB2                     __end_of_MSDTransferTerminated:
 52698                           	opt stack 0
 52699                           tosu	equ	0xFFF
 52700                           tosh	equ	0xFFE
 52701                           tosl	equ	0xFFD
 52702                           pclatu	equ	0xFFB
 52703                           pclath	equ	0xFFA
 52704                           tblptru	equ	0xFF8
 52705                           tblptrh	equ	0xFF7
 52706                           tblptrl	equ	0xFF6
 52707                           tablat	equ	0xFF5
 52708                           prodh	equ	0xFF4
 52709                           prodl	equ	0xFF3
 52710                           intcon	equ	0xFF2
 52711                           indf0	equ	0xFEF
 52712                           postinc0	equ	0xFEE
 52713                           fsr0h	equ	0xFEA
 52714                           fsr0l	equ	0xFE9
 52715                           wreg	equ	0xFE8
 52716                           indf1	equ	0xFE7
 52717                           postinc1	equ	0xFE6
 52718                           postdec1	equ	0xFE5
 52719                           plusw1	equ	0xFE3
 52720                           fsr1h	equ	0xFE2
 52721                           fsr1l	equ	0xFE1
 52722                           indf2	equ	0xFDF
 52723                           postinc2	equ	0xFDE
 52724                           postdec2	equ	0xFDD
 52725                           plusw2	equ	0xFDB
 52726                           fsr2h	equ	0xFDA
 52727                           fsr2l	equ	0xFD9
 52728                           status	equ	0xFD8
 52729                           
 52730 ;; *************** function i2_USBStallEndpoint *****************
 52731 ;; Defined at:
 52732 ;;		line 1073 in file "usb_device.c"
 52733 ;; Parameters:    Size  Location     Type
 52734 ;;  ep              1    wreg     unsigned char 
 52735 ;;  dir             1    0[COMRAM] unsigned char 
 52736 ;; Auto vars:     Size  Location     Type
 52737 ;;  ep              1    5[COMRAM] unsigned char 
 52738 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 52739 ;;		 -> BDT(48), 
 52740 ;; Return value:  Size  Location     Type
 52741 ;;                  1    wreg      void 
 52742 ;; Registers used:
 52743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 52744 ;; Tracked objects:
 52745 ;;		On entry : 0/0
 52746 ;;		On exit  : 0/0
 52747 ;;		Unchanged: 0/0
 52748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52749 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52750 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52751 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52752 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52753 ;;Total ram usage:        8 bytes
 52754 ;; Hardware stack levels used:    1
 52755 ;; This function calls:
 52756 ;;		Nothing
 52757 ;; This function is called by:
 52758 ;;		_MSDTransferTerminated
 52759 ;; This function uses a non-reentrant model
 52760 ;;
 52761                           
 52762                           	psect	text219
 52763  011170                     __ptext219:
 52764                           	opt stack 0
 52765  011170                     i2_USBStallEndpoint:
 52766                           	opt stack 14
 52767                           
 52768                           ;incstack = 0
 52769                           ;i2USBStallEndpoint@ep stored from wreg
 52770  011170  6E06               	movwf	i2USBStallEndpoint@ep,c
 52771                           
 52772                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 52773  011172  5006               	movf	i2USBStallEndpoint@ep,w,c
 52774  011174  A4D8               	btfss	status,2,c
 52775  011176  D02B               	goto	i2l192
 52776                           
 52777                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 52778  011178  EE20 F001          	lfsr	2,1
 52779  01117C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52780  01117E  26D9               	addwf	fsr2l,f,c
 52781  011180  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52782  011182  22DA               	addwfc	fsr2h,f,c
 52783  011184  0E08               	movlw	8
 52784  011186  6EDF               	movwf	indf2,c
 52785                           
 52786                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 52787  011188  EE20 F002          	lfsr	2,2
 52788  01118C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 52789  01118E  26D9               	addwf	fsr2l,f,c
 52790  011190  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 52791  011192  22DA               	addwfc	fsr2h,f,c
 52792  011194  0E30               	movlw	48
 52793  011196  6EDE               	movwf	postinc2,c
 52794  011198  0E0D               	movlw	13
 52795  01119A  6EDD               	movwf	postdec2,c
 52796                           
 52797                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 52798  01119C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52799  0111A0  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52800  0111A4  0E0C               	movlw	12
 52801  0111A6  6EDF               	movwf	indf2,c
 52802                           
 52803                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 52804  0111A8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 52805  0111AC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 52806  0111B0  0E00               	movlw	0
 52807  0111B2  8EDB               	bsf	plusw2,7,c
 52808                           
 52809                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 52810  0111B4  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52811  0111B8  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52812  0111BC  0E04               	movlw	4
 52813  0111BE  6EDF               	movwf	indf2,c
 52814                           
 52815                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 52816  0111C0  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 52817  0111C4  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 52818  0111C8  0E00               	movlw	0
 52819  0111CA  8EDB               	bsf	plusw2,7,c
 52820                           
 52821                           ;usb_device.c: 1089: }
 52822  0111CC  0012               	return	
 52823  0111CE                     i2l192:
 52824                           
 52825                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 52826  0111CE  5001               	movf	i2USBStallEndpoint@dir,w,c
 52827  0111D0  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 52828  0111D2  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 52829  0111D4  90D8               	bcf	status,0,c
 52830  0111D6  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52831  0111D8  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52832  0111DA  5006               	movf	i2USBStallEndpoint@ep,w,c
 52833  0111DC  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 52834  0111DE  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 52835  0111E0  90D8               	bcf	status,0,c
 52836  0111E2  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52837  0111E4  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52838  0111E6  90D8               	bcf	status,0,c
 52839  0111E8  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52840  0111EA  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52841  0111EC  5002               	movf	??i2_USBStallEndpoint,w,c
 52842  0111EE  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 52843  0111F0  5003               	movf	??i2_USBStallEndpoint+1,w,c
 52844  0111F2  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 52845  0111F4  90D8               	bcf	status,0,c
 52846  0111F6  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52847  0111F8  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52848  0111FA  90D8               	bcf	status,0,c
 52849  0111FC  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 52850  0111FE  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 52851  011200  0E00               	movlw	0
 52852  011202  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 52853  011204  6E07               	movwf	i2USBStallEndpoint@p,c
 52854  011206  0E0D               	movlw	13
 52855  011208  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 52856  01120A  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52857                           
 52858                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 52859  01120C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52860  011210  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52861  011214  0E00               	movlw	0
 52862  011216  84DB               	bsf	plusw2,2,c
 52863                           
 52864                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 52865  011218  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52866  01121C  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52867  011220  0E00               	movlw	0
 52868  011222  8EDB               	bsf	plusw2,7,c
 52869                           
 52870                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 52871  011224  5006               	movf	i2USBStallEndpoint@ep,w,c
 52872  011226  0D04               	mullw	4
 52873  011228  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 52874  01122C  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 52875  011230  5001               	movf	i2USBStallEndpoint@dir,w,c
 52876  011232  0D02               	mullw	2
 52877  011234  50F3               	movf	prodl,w,c
 52878  011236  2602               	addwf	??i2_USBStallEndpoint,f,c
 52879  011238  50F4               	movf	prodh,w,c
 52880  01123A  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52881  01123C  90D8               	bcf	status,0,c
 52882  01123E  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52883  011240  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52884  011242  90D8               	bcf	status,0,c
 52885  011244  3602               	rlcf	??i2_USBStallEndpoint,f,c
 52886  011246  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 52887  011248  0E04               	movlw	4
 52888  01124A  2602               	addwf	??i2_USBStallEndpoint,f,c
 52889  01124C  0E00               	movlw	0
 52890  01124E  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 52891  011250  0E00               	movlw	0
 52892  011252  2402               	addwf	??i2_USBStallEndpoint,w,c
 52893  011254  6E07               	movwf	i2USBStallEndpoint@p,c
 52894  011256  0E0D               	movlw	13
 52895  011258  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 52896  01125A  6E08               	movwf	i2USBStallEndpoint@p+1,c
 52897                           
 52898                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 52899  01125C  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52900  011260  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52901  011264  0E00               	movlw	0
 52902  011266  84DB               	bsf	plusw2,2,c
 52903                           
 52904                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 52905  011268  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 52906  01126C  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 52907  011270  0E00               	movlw	0
 52908  011272  8EDB               	bsf	plusw2,7,c
 52909  011274  0012               	return	
 52910  011276                     __end_ofi2_USBStallEndpoint:
 52911                           	opt stack 0
 52912                           tosu	equ	0xFFF
 52913                           tosh	equ	0xFFE
 52914                           tosl	equ	0xFFD
 52915                           pclatu	equ	0xFFB
 52916                           pclath	equ	0xFFA
 52917                           tblptru	equ	0xFF8
 52918                           tblptrh	equ	0xFF7
 52919                           tblptrl	equ	0xFF6
 52920                           tablat	equ	0xFF5
 52921                           prodh	equ	0xFF4
 52922                           prodl	equ	0xFF3
 52923                           intcon	equ	0xFF2
 52924                           indf0	equ	0xFEF
 52925                           postinc0	equ	0xFEE
 52926                           fsr0h	equ	0xFEA
 52927                           fsr0l	equ	0xFE9
 52928                           wreg	equ	0xFE8
 52929                           indf1	equ	0xFE7
 52930                           postinc1	equ	0xFE6
 52931                           postdec1	equ	0xFE5
 52932                           plusw1	equ	0xFE3
 52933                           fsr1h	equ	0xFE2
 52934                           fsr1l	equ	0xFE1
 52935                           indf2	equ	0xFDF
 52936                           postinc2	equ	0xFDE
 52937                           postdec2	equ	0xFDD
 52938                           plusw2	equ	0xFDB
 52939                           fsr2h	equ	0xFDA
 52940                           fsr2l	equ	0xFD9
 52941                           status	equ	0xFD8
 52942                           
 52943 ;; *************** function _APP_DeviceMSDInitialize *****************
 52944 ;; Defined at:
 52945 ;;		line 84 in file "app_device_msd.c"
 52946 ;; Parameters:    Size  Location     Type
 52947 ;;		None
 52948 ;; Auto vars:     Size  Location     Type
 52949 ;;		None
 52950 ;; Return value:  Size  Location     Type
 52951 ;;                  1    wreg      void 
 52952 ;; Registers used:
 52953 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52954 ;; Tracked objects:
 52955 ;;		On entry : 0/0
 52956 ;;		On exit  : 0/0
 52957 ;;		Unchanged: 0/0
 52958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52959 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52960 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52961 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52962 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52963 ;;Total ram usage:        0 bytes
 52964 ;; Hardware stack levels used:    1
 52965 ;; Hardware stack levels required when called:    2
 52966 ;; This function calls:
 52967 ;;		_USBEnableEndpoint
 52968 ;;		_USBMSDInit
 52969 ;; This function is called by:
 52970 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52971 ;; This function uses a non-reentrant model
 52972 ;;
 52973                           
 52974                           	psect	text220
 52975  0159C0                     __ptext220:
 52976                           	opt stack 0
 52977  0159C0                     _APP_DeviceMSDInitialize:
 52978                           	opt stack 13
 52979                           
 52980                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 52981                           
 52982                           ;incstack = 0
 52983  0159C0  0E1E               	movlw	30
 52984  0159C2  6E09               	movwf	USBEnableEndpoint@options,c
 52985  0159C4  0E02               	movlw	2
 52986  0159C6  ECDC  F0A8         	call	_USBEnableEndpoint
 52987                           
 52988                           ;app_device_msd.c: 93: USBMSDInit();
 52989  0159CA  ECA2  F086         	call	_USBMSDInit	;wreg free
 52990  0159CE  0012               	return		;funcret
 52991  0159D0                     __end_of_APP_DeviceMSDInitialize:
 52992                           	opt stack 0
 52993                           tosu	equ	0xFFF
 52994                           tosh	equ	0xFFE
 52995                           tosl	equ	0xFFD
 52996                           pclatu	equ	0xFFB
 52997                           pclath	equ	0xFFA
 52998                           tblptru	equ	0xFF8
 52999                           tblptrh	equ	0xFF7
 53000                           tblptrl	equ	0xFF6
 53001                           tablat	equ	0xFF5
 53002                           prodh	equ	0xFF4
 53003                           prodl	equ	0xFF3
 53004                           intcon	equ	0xFF2
 53005                           indf0	equ	0xFEF
 53006                           postinc0	equ	0xFEE
 53007                           fsr0h	equ	0xFEA
 53008                           fsr0l	equ	0xFE9
 53009                           wreg	equ	0xFE8
 53010                           indf1	equ	0xFE7
 53011                           postinc1	equ	0xFE6
 53012                           postdec1	equ	0xFE5
 53013                           plusw1	equ	0xFE3
 53014                           fsr1h	equ	0xFE2
 53015                           fsr1l	equ	0xFE1
 53016                           indf2	equ	0xFDF
 53017                           postinc2	equ	0xFDE
 53018                           postdec2	equ	0xFDD
 53019                           plusw2	equ	0xFDB
 53020                           fsr2h	equ	0xFDA
 53021                           fsr2l	equ	0xFD9
 53022                           status	equ	0xFD8
 53023                           
 53024 ;; *************** function _USBMSDInit *****************
 53025 ;; Defined at:
 53026 ;;		line 142 in file "usb_device_msd.c"
 53027 ;; Parameters:    Size  Location     Type
 53028 ;;		None
 53029 ;; Auto vars:     Size  Location     Type
 53030 ;;		None
 53031 ;; Return value:  Size  Location     Type
 53032 ;;                  1    wreg      void 
 53033 ;; Registers used:
 53034 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53035 ;; Tracked objects:
 53036 ;;		On entry : 0/0
 53037 ;;		On exit  : 0/0
 53038 ;;		Unchanged: 0/0
 53039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53040 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53041 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53042 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53043 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53044 ;;Total ram usage:        3 bytes
 53045 ;; Hardware stack levels used:    1
 53046 ;; Hardware stack levels required when called:    1
 53047 ;; This function calls:
 53048 ;;		i2_ExternalFlash_MediaDetect
 53049 ;;		i2_ExternalFlash_MediaInitialize
 53050 ;;		i2_ResetSenseData
 53051 ;;		i2_USBTransferOnePacket
 53052 ;; This function is called by:
 53053 ;;		_APP_DeviceMSDInitialize
 53054 ;; This function uses a non-reentrant model
 53055 ;;
 53056                           
 53057                           	psect	text221
 53058  010D44                     __ptext221:
 53059                           	opt stack 0
 53060  010D44                     _USBMSDInit:
 53061                           	opt stack 13
 53062                           
 53063                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 53064                           
 53065                           ;incstack = 0
 53066  010D44  0E00               	movlw	0
 53067  010D46  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53068  010D48  0E40               	movlw	64
 53069  010D4A  6E02               	movwf	i2USBTransferOnePacket@data,c
 53070  010D4C  0E0D               	movlw	13
 53071  010D4E  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53072  010D50  0E40               	movlw	64
 53073  010D52  6E04               	movwf	i2USBTransferOnePacket@len,c
 53074  010D54  0E02               	movlw	2
 53075  010D56  EC3B  F089         	call	i2_USBTransferOnePacket
 53076  010D5A  C001  F14B         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53077  010D5E  C002  F14C         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53078  010D62  C11F  F149         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 53079  010D66  C120  F14A         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 53080                           
 53081                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 53082  010D6A  0E00               	movlw	0
 53083  010D6C  0101               	movlb	1	; () banked
 53084  010D6E  6F63               	movwf	_MSD_State& (0+255),b
 53085                           
 53086                           ; BSR set to: 1
 53087                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 53088  010D70  6962               	setf	_MSDCommandState& (0+255),b
 53089                           
 53090                           ; BSR set to: 1
 53091                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 53092  010D72  0E00               	movlw	0
 53093  010D74  6F61               	movwf	_MSDReadState& (0+255),b
 53094                           
 53095                           ; BSR set to: 1
 53096                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 53097  010D76  0E00               	movlw	0
 53098  010D78  6F60               	movwf	_MSDWriteState& (0+255),b
 53099                           
 53100                           ; BSR set to: 1
 53101                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 53102  010D7A  0E00               	movlw	0
 53103  010D7C  6F5C               	movwf	_MSDHostNoData& (0+255),b
 53104                           
 53105                           ; BSR set to: 1
 53106                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 53107  010D7E  0E00               	movlw	0
 53108  010D80  0102               	movlb	2	; () banked
 53109  010D82  6F2E               	movwf	_gblNumBLKS& (0+255),b
 53110  010D84  0E00               	movlw	0
 53111  010D86  6F2F               	movwf	(_gblNumBLKS+1)& (0+255),b
 53112  010D88  0E00               	movlw	0
 53113  010D8A  6F30               	movwf	(_gblNumBLKS+2)& (0+255),b
 53114  010D8C  0E00               	movlw	0
 53115  010D8E  6F31               	movwf	(_gblNumBLKS+3)& (0+255),b
 53116                           
 53117                           ; BSR set to: 2
 53118                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 53119  010D90  0E00               	movlw	0
 53120  010D92  6F2A               	movwf	_gblBLKLen& (0+255),b
 53121  010D94  0E00               	movlw	0
 53122  010D96  6F2B               	movwf	(_gblBLKLen+1)& (0+255),b
 53123  010D98  0E00               	movlw	0
 53124  010D9A  6F2C               	movwf	(_gblBLKLen+2)& (0+255),b
 53125  010D9C  0E00               	movlw	0
 53126  010D9E  6F2D               	movwf	(_gblBLKLen+3)& (0+255),b
 53127                           
 53128                           ; BSR set to: 2
 53129                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 53130  010DA0  0E01               	movlw	1
 53131  010DA2  0101               	movlb	1	; () banked
 53132  010DA4  6F5B               	movwf	_MSDCBWValid& (0+255),b
 53133                           
 53134                           ; BSR set to: 1
 53135                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 53136  010DA6  0E00               	movlw	0
 53137  010DA8  6F48               	movwf	(_gblMediaPresent+1)& (0+255),b
 53138  010DAA  0E00               	movlw	0
 53139  010DAC  6F47               	movwf	_gblMediaPresent& (0+255),b
 53140                           
 53141                           ; BSR set to: 1
 53142                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 53143  010DAE  0E00               	movlw	0
 53144  010DB0  0102               	movlb	2	; () banked
 53145  010DB2  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 53146  010DB4  D04A               	goto	i2l534
 53147  010DB6                     
 53148                           ; BSR set to: 2
 53149                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 53150                           
 53151                           ; BSR set to: 2
 53152  010DB6  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53153  010DB8  0D01               	mullw	1
 53154  010DBA  0E5D               	movlw	low _SoftDetach
 53155  010DBC  24F3               	addwf	prodl,w,c
 53156  010DBE  6ED9               	movwf	fsr2l,c
 53157  010DC0  0E01               	movlw	high _SoftDetach
 53158  010DC2  20F4               	addwfc	prodh,w,c
 53159  010DC4  6EDA               	movwf	fsr2h,c
 53160  010DC6  0E00               	movlw	0
 53161  010DC8  6EDF               	movwf	indf2,c
 53162                           
 53163                           ; BSR set to: 2
 53164                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 53165  010DCA  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 53166  010DCE  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 53167  010DD2  EE22  F092         	lfsr	2,_LUN+9
 53168  010DD6  D801               	call	i2u989_48
 53169  010DD8  D00A               	goto	i2u989_49
 53170  010DDA                     i2u989_48:
 53171  010DDA  0005               	push	
 53172  010DDC  6EFA               	movwf	pclath,c
 53173  010DDE  50DE               	movf	postinc2,w,c
 53174  010DE0  6EFD               	movwf	tosl,c
 53175  010DE2  50DE               	movf	postinc2,w,c
 53176  010DE4  6EFE               	movwf	tosh,c
 53177  010DE6  50DE               	movf	postinc2,w,c
 53178  010DE8  6EFF               	movwf	tosu,c
 53179  010DEA  50FA               	movf	pclath,w,c
 53180  010DEC  0012               	return		;indir
 53181  010DEE                     i2u989_49:
 53182  010DEE  0900               	iorlw	0
 53183  010DF0  B4D8               	btfsc	status,2,c
 53184  010DF2  D027               	goto	i2l537
 53185                           
 53186                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 53187  010DF4  C29E  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 53188  010DF8  C29F  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 53189  010DFC  D801               	call	i2u991_48
 53190  010DFE  D00B               	goto	i2u991_49
 53191  010E00                     i2u991_48:
 53192  010E00  0005               	push	
 53193  010E02  6EFA               	movwf	pclath,c
 53194  010E04  0102               	movlb	2	; () banked
 53195  010E06  5189               	movf	_LUN& (0+255),w,b
 53196  010E08  6EFD               	movwf	tosl,c
 53197  010E0A  518A               	movf	(_LUN+1)& (0+255),w,b
 53198  010E0C  6EFE               	movwf	tosh,c
 53199  010E0E  518B               	movf	(_LUN+2)& (0+255),w,b
 53200  010E10  6EFF               	movwf	tosu,c
 53201  010E12  50FA               	movf	pclath,w,c
 53202  010E14  0012               	return		;indir
 53203  010E16                     i2u991_49:
 53204  010E16  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 53205  010E18  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 53206  010E1A  B4D8               	btfsc	status,2,c
 53207  010E1C  D012               	goto	i2l537
 53208                           
 53209                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 53210  010E1E  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 53211  010E22  0E01               	movlw	1
 53212  010E24  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 53213  010E26  0E00               	movlw	0
 53214  010E28  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 53215  010E2A  2A0C               	incf	??_USBMSDInit,f,c
 53216  010E2C  D003               	goto	i2u993_44
 53217  010E2E                     i2u993_45:
 53218  010E2E  90D8               	bcf	status,0,c
 53219  010E30  360D               	rlcf	??_USBMSDInit+1,f,c
 53220  010E32  360E               	rlcf	??_USBMSDInit+2,f,c
 53221  010E34                     i2u993_44:
 53222  010E34  2E0C               	decfsz	??_USBMSDInit,f,c
 53223  010E36  D7FB               	goto	i2u993_45
 53224  010E38  500D               	movf	??_USBMSDInit+1,w,c
 53225  010E3A  0101               	movlb	1	; () banked
 53226  010E3C  1347               	iorwf	_gblMediaPresent& (0+255),f,b
 53227  010E3E  500E               	movf	??_USBMSDInit+2,w,c
 53228  010E40  1348               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 53229  010E42                     i2l537:
 53230                           
 53231                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 53232                           
 53233                           ; BSR set to: 1
 53234                           
 53235                           ; BSR set to: 1
 53236  010E42  EC2C  F0A2         	call	i2_ResetSenseData	;wreg free
 53237  010E46  0102               	movlb	2	; () banked
 53238  010E48  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 53239  010E4A                     i2l534:
 53240                           
 53241                           ; BSR set to: 2
 53242                           
 53243                           ; BSR set to: 2
 53244  010E4A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53245  010E4C  A4D8               	btfss	status,2,c
 53246  010E4E  0012               	return	
 53247  010E50  D7B2               	goto	i2l535
 53248  010E52                     __end_of_USBMSDInit:
 53249                           	opt stack 0
 53250                           tosu	equ	0xFFF
 53251                           tosh	equ	0xFFE
 53252                           tosl	equ	0xFFD
 53253                           pclatu	equ	0xFFB
 53254                           pclath	equ	0xFFA
 53255                           tblptru	equ	0xFF8
 53256                           tblptrh	equ	0xFF7
 53257                           tblptrl	equ	0xFF6
 53258                           tablat	equ	0xFF5
 53259                           prodh	equ	0xFF4
 53260                           prodl	equ	0xFF3
 53261                           intcon	equ	0xFF2
 53262                           indf0	equ	0xFEF
 53263                           postinc0	equ	0xFEE
 53264                           fsr0h	equ	0xFEA
 53265                           fsr0l	equ	0xFE9
 53266                           wreg	equ	0xFE8
 53267                           indf1	equ	0xFE7
 53268                           postinc1	equ	0xFE6
 53269                           postdec1	equ	0xFE5
 53270                           plusw1	equ	0xFE3
 53271                           fsr1h	equ	0xFE2
 53272                           fsr1l	equ	0xFE1
 53273                           indf2	equ	0xFDF
 53274                           postinc2	equ	0xFDE
 53275                           postdec2	equ	0xFDD
 53276                           plusw2	equ	0xFDB
 53277                           fsr2h	equ	0xFDA
 53278                           fsr2l	equ	0xFD9
 53279                           status	equ	0xFD8
 53280                           
 53281 ;; *************** function i2_ResetSenseData *****************
 53282 ;; Defined at:
 53283 ;;		line 1373 in file "usb_device_msd.c"
 53284 ;; Parameters:    Size  Location     Type
 53285 ;;		None
 53286 ;; Auto vars:     Size  Location     Type
 53287 ;;		None
 53288 ;; Return value:  Size  Location     Type
 53289 ;;                  1    wreg      void 
 53290 ;; Registers used:
 53291 ;;		wreg, status,2
 53292 ;; Tracked objects:
 53293 ;;		On entry : 0/0
 53294 ;;		On exit  : 0/0
 53295 ;;		Unchanged: 0/0
 53296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53297 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53300 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53301 ;;Total ram usage:        0 bytes
 53302 ;; Hardware stack levels used:    1
 53303 ;; This function calls:
 53304 ;;		Nothing
 53305 ;; This function is called by:
 53306 ;;		_USBMSDInit
 53307 ;; This function uses a non-reentrant model
 53308 ;;
 53309                           
 53310                           	psect	text222
 53311  014458                     __ptext222:
 53312                           	opt stack 0
 53313  014458                     i2_ResetSenseData:
 53314                           	opt stack 13
 53315                           
 53316                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 53317                           
 53318                           ; BSR set to: 2
 53319                           ;incstack = 0
 53320  014458  0101               	movlb	1	; () banked
 53321  01445A  9100               	bcf	_gblSenseData& (0+255),0,b
 53322  01445C  9300               	bcf	_gblSenseData& (0+255),1,b
 53323  01445E  9500               	bcf	_gblSenseData& (0+255),2,b
 53324  014460  9700               	bcf	_gblSenseData& (0+255),3,b
 53325  014462  8900               	bsf	_gblSenseData& (0+255),4,b
 53326  014464  8B00               	bsf	_gblSenseData& (0+255),5,b
 53327  014466  8D00               	bsf	_gblSenseData& (0+255),6,b
 53328                           
 53329                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 53330  014468  9F00               	bcf	_gblSenseData& (0+255),7,b
 53331                           
 53332                           ; BSR set to: 1
 53333                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 53334  01446A  0E00               	movlw	0
 53335  01446C  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 53336                           
 53337                           ; BSR set to: 1
 53338                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 53339  01446E  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 53340  014470  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 53341  014472  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 53342  014474  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 53343                           
 53344                           ; BSR set to: 1
 53345                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 53346  014476  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 53347                           
 53348                           ; BSR set to: 1
 53349                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 53350  014478  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 53351                           
 53352                           ; BSR set to: 1
 53353                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 53354  01447A  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 53355                           
 53356                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 53357  01447C  0E00               	movlw	0
 53358  01447E  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 53359                           
 53360                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 53361  014480  0E00               	movlw	0
 53362  014482  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 53363                           
 53364                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 53365  014484  0E00               	movlw	0
 53366  014486  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 53367                           
 53368                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 53369  014488  0E00               	movlw	0
 53370  01448A  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 53371                           
 53372                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 53373  01448C  0E0A               	movlw	10
 53374  01448E  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 53375                           
 53376                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 53377  014490  0E00               	movlw	0
 53378  014492  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 53379  014494  0E00               	movlw	0
 53380  014496  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 53381  014498  0E00               	movlw	0
 53382  01449A  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 53383  01449C  0E00               	movlw	0
 53384  01449E  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 53385                           
 53386                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 53387  0144A0  0E00               	movlw	0
 53388  0144A2  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 53389                           
 53390                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 53391  0144A4  0E00               	movlw	0
 53392  0144A6  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 53393                           
 53394                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 53395  0144A8  0E00               	movlw	0
 53396  0144AA  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 53397                           
 53398                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 53399  0144AC  0E00               	movlw	0
 53400  0144AE  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 53401                           
 53402                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 53403  0144B0  0E00               	movlw	0
 53404  0144B2  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 53405                           
 53406                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 53407  0144B4  0E00               	movlw	0
 53408  0144B6  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 53409                           
 53410                           ; BSR set to: 1
 53411  0144B8  0012               	return		;funcret
 53412  0144BA                     __end_ofi2_ResetSenseData:
 53413                           	opt stack 0
 53414                           tosu	equ	0xFFF
 53415                           tosh	equ	0xFFE
 53416                           tosl	equ	0xFFD
 53417                           pclatu	equ	0xFFB
 53418                           pclath	equ	0xFFA
 53419                           tblptru	equ	0xFF8
 53420                           tblptrh	equ	0xFF7
 53421                           tblptrl	equ	0xFF6
 53422                           tablat	equ	0xFF5
 53423                           prodh	equ	0xFF4
 53424                           prodl	equ	0xFF3
 53425                           intcon	equ	0xFF2
 53426                           indf0	equ	0xFEF
 53427                           postinc0	equ	0xFEE
 53428                           fsr0h	equ	0xFEA
 53429                           fsr0l	equ	0xFE9
 53430                           wreg	equ	0xFE8
 53431                           indf1	equ	0xFE7
 53432                           postinc1	equ	0xFE6
 53433                           postdec1	equ	0xFE5
 53434                           plusw1	equ	0xFE3
 53435                           fsr1h	equ	0xFE2
 53436                           fsr1l	equ	0xFE1
 53437                           indf2	equ	0xFDF
 53438                           postinc2	equ	0xFDE
 53439                           postdec2	equ	0xFDD
 53440                           plusw2	equ	0xFDB
 53441                           fsr2h	equ	0xFDA
 53442                           fsr2l	equ	0xFD9
 53443                           status	equ	0xFD8
 53444                           
 53445 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 53446 ;; Defined at:
 53447 ;;		line 10 in file "external_flash.c"
 53448 ;; Parameters:    Size  Location     Type
 53449 ;;  config          2    0[COMRAM] PTR void 
 53450 ;;		 -> NULL(0), 
 53451 ;; Auto vars:     Size  Location     Type
 53452 ;;		None
 53453 ;; Return value:  Size  Location     Type
 53454 ;;                  2    0[COMRAM] PTR struct .
 53455 ;; Registers used:
 53456 ;;		wreg, status,2, status,0
 53457 ;; Tracked objects:
 53458 ;;		On entry : 0/0
 53459 ;;		On exit  : 0/0
 53460 ;;		Unchanged: 0/0
 53461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53462 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53465 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53466 ;;Total ram usage:        2 bytes
 53467 ;; Hardware stack levels used:    1
 53468 ;; This function calls:
 53469 ;;		Nothing
 53470 ;; This function is called by:
 53471 ;;		_USBMSDInit
 53472 ;;		_MSDProcessCommand
 53473 ;; This function uses a non-reentrant model
 53474 ;;
 53475                           
 53476                           	psect	text223
 53477  015932                     __ptext223:
 53478                           	opt stack 0
 53479  015932                     i2_ExternalFlash_MediaInitialize:
 53480                           	opt stack 13
 53481                           
 53482                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 53483                           
 53484                           ; BSR set to: 1
 53485                           ;incstack = 0
 53486  015932  0102               	movlb	2	; () banked
 53487  015934  8185               	bsf	(_mediaInformation+1)& (0+255),0,b
 53488                           
 53489                           ; BSR set to: 2
 53490                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 53491  015936  0E02               	movlw	2
 53492  015938  6F87               	movwf	(_mediaInformation+3)& (0+255),b
 53493  01593A  0E00               	movlw	0
 53494  01593C  6F86               	movwf	(_mediaInformation+2)& (0+255),b
 53495                           
 53496                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 53497  01593E  0E00               	movlw	0
 53498  015940  6F84               	movwf	_mediaInformation& (0+255),b
 53499                           
 53500                           ; BSR set to: 2
 53501                           ;external_flash.c: 15: return &mediaInformation;
 53502  015942  0E84               	movlw	low _mediaInformation
 53503  015944  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 53504  015946  0E02               	movlw	high _mediaInformation
 53505  015948  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 53506  01594A  0012               	return	
 53507  01594C                     __end_ofi2_ExternalFlash_MediaInitialize:
 53508                           	opt stack 0
 53509                           tosu	equ	0xFFF
 53510                           tosh	equ	0xFFE
 53511                           tosl	equ	0xFFD
 53512                           pclatu	equ	0xFFB
 53513                           pclath	equ	0xFFA
 53514                           tblptru	equ	0xFF8
 53515                           tblptrh	equ	0xFF7
 53516                           tblptrl	equ	0xFF6
 53517                           tablat	equ	0xFF5
 53518                           prodh	equ	0xFF4
 53519                           prodl	equ	0xFF3
 53520                           intcon	equ	0xFF2
 53521                           indf0	equ	0xFEF
 53522                           postinc0	equ	0xFEE
 53523                           fsr0h	equ	0xFEA
 53524                           fsr0l	equ	0xFE9
 53525                           wreg	equ	0xFE8
 53526                           indf1	equ	0xFE7
 53527                           postinc1	equ	0xFE6
 53528                           postdec1	equ	0xFE5
 53529                           plusw1	equ	0xFE3
 53530                           fsr1h	equ	0xFE2
 53531                           fsr1l	equ	0xFE1
 53532                           indf2	equ	0xFDF
 53533                           postinc2	equ	0xFDE
 53534                           postdec2	equ	0xFDD
 53535                           plusw2	equ	0xFDB
 53536                           fsr2h	equ	0xFDA
 53537                           fsr2l	equ	0xFD9
 53538                           status	equ	0xFD8
 53539                           
 53540 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 53541 ;; Defined at:
 53542 ;;		line 29 in file "external_flash.c"
 53543 ;; Parameters:    Size  Location     Type
 53544 ;;  config          2    0[COMRAM] PTR void 
 53545 ;;		 -> NULL(0), 
 53546 ;; Auto vars:     Size  Location     Type
 53547 ;;		None
 53548 ;; Return value:  Size  Location     Type
 53549 ;;                  1    wreg      unsigned char 
 53550 ;; Registers used:
 53551 ;;		wreg
 53552 ;; Tracked objects:
 53553 ;;		On entry : 0/0
 53554 ;;		On exit  : 0/0
 53555 ;;		Unchanged: 0/0
 53556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53557 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53561 ;;Total ram usage:        2 bytes
 53562 ;; Hardware stack levels used:    1
 53563 ;; This function calls:
 53564 ;;		Nothing
 53565 ;; This function is called by:
 53566 ;;		_USBMSDInit
 53567 ;;		_MSDProcessCommand
 53568 ;; This function uses a non-reentrant model
 53569 ;;
 53570                           
 53571                           	psect	text224
 53572  015A80                     __ptext224:
 53573                           	opt stack 0
 53574  015A80                     i2_ExternalFlash_MediaDetect:
 53575                           	opt stack 13
 53576                           
 53577                           ;external_flash.c: 31: return 1;
 53578                           
 53579                           ; BSR set to: 2
 53580                           ;incstack = 0
 53581  015A80  0E01               	movlw	1
 53582  015A82  0012               	return	
 53583  015A84                     __end_ofi2_ExternalFlash_MediaDetect:
 53584                           	opt stack 0
 53585                           tosu	equ	0xFFF
 53586                           tosh	equ	0xFFE
 53587                           tosl	equ	0xFFD
 53588                           pclatu	equ	0xFFB
 53589                           pclath	equ	0xFFA
 53590                           tblptru	equ	0xFF8
 53591                           tblptrh	equ	0xFF7
 53592                           tblptrl	equ	0xFF6
 53593                           tablat	equ	0xFF5
 53594                           prodh	equ	0xFF4
 53595                           prodl	equ	0xFF3
 53596                           intcon	equ	0xFF2
 53597                           indf0	equ	0xFEF
 53598                           postinc0	equ	0xFEE
 53599                           fsr0h	equ	0xFEA
 53600                           fsr0l	equ	0xFE9
 53601                           wreg	equ	0xFE8
 53602                           indf1	equ	0xFE7
 53603                           postinc1	equ	0xFE6
 53604                           postdec1	equ	0xFE5
 53605                           plusw1	equ	0xFE3
 53606                           fsr1h	equ	0xFE2
 53607                           fsr1l	equ	0xFE1
 53608                           indf2	equ	0xFDF
 53609                           postinc2	equ	0xFDE
 53610                           postdec2	equ	0xFDD
 53611                           plusw2	equ	0xFDB
 53612                           fsr2h	equ	0xFDA
 53613                           fsr2l	equ	0xFD9
 53614                           status	equ	0xFD8
 53615                           
 53616 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 53617 ;; Defined at:
 53618 ;;		line 46 in file "app_device_custom_hid.c"
 53619 ;; Parameters:    Size  Location     Type
 53620 ;;		None
 53621 ;; Auto vars:     Size  Location     Type
 53622 ;;		None
 53623 ;; Return value:  Size  Location     Type
 53624 ;;                  1    wreg      void 
 53625 ;; Registers used:
 53626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53627 ;; Tracked objects:
 53628 ;;		On entry : 0/0
 53629 ;;		On exit  : 0/0
 53630 ;;		Unchanged: 0/0
 53631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53635 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53636 ;;Total ram usage:        0 bytes
 53637 ;; Hardware stack levels used:    1
 53638 ;; Hardware stack levels required when called:    2
 53639 ;; This function calls:
 53640 ;;		_USBEnableEndpoint
 53641 ;;		i2_USBTransferOnePacket
 53642 ;; This function is called by:
 53643 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53644 ;; This function uses a non-reentrant model
 53645 ;;
 53646                           
 53647                           	psect	text225
 53648  0153E2                     __ptext225:
 53649                           	opt stack 0
 53650  0153E2                     _APP_DeviceCustomHIDInitialize:
 53651                           	opt stack 13
 53652                           
 53653                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 53654                           
 53655                           ;incstack = 0
 53656  0153E2  0E00               	movlw	0
 53657  0153E4  0101               	movlb	1	; () banked
 53658  0153E6  6F41               	movwf	_USBInHandle& (0+255),b
 53659  0153E8  0E00               	movlw	0
 53660  0153EA  6F42               	movwf	(_USBInHandle+1)& (0+255),b
 53661                           
 53662                           ; BSR set to: 1
 53663                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 53664  0153EC  0E1E               	movlw	30
 53665  0153EE  6E09               	movwf	USBEnableEndpoint@options,c
 53666  0153F0  0E01               	movlw	1
 53667  0153F2  ECDC  F0A8         	call	_USBEnableEndpoint
 53668                           
 53669                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 53670  0153F6  0E00               	movlw	0
 53671  0153F8  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53672  0153FA  0E80               	movlw	low _ReceivedDataBuffer
 53673  0153FC  6E02               	movwf	i2USBTransferOnePacket@data,c
 53674  0153FE  0E03               	movlw	high _ReceivedDataBuffer
 53675  015400  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53676  015402  0E40               	movlw	64
 53677  015404  6E04               	movwf	i2USBTransferOnePacket@len,c
 53678  015406  0E01               	movlw	1
 53679  015408  EC3B  F089         	call	i2_USBTransferOnePacket
 53680  01540C  C001  F143         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 53681  015410  C002  F144         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 53682  015414  0012               	return		;funcret
 53683  015416                     __end_of_APP_DeviceCustomHIDInitialize:
 53684                           	opt stack 0
 53685                           tosu	equ	0xFFF
 53686                           tosh	equ	0xFFE
 53687                           tosl	equ	0xFFD
 53688                           pclatu	equ	0xFFB
 53689                           pclath	equ	0xFFA
 53690                           tblptru	equ	0xFF8
 53691                           tblptrh	equ	0xFF7
 53692                           tblptrl	equ	0xFF6
 53693                           tablat	equ	0xFF5
 53694                           prodh	equ	0xFF4
 53695                           prodl	equ	0xFF3
 53696                           intcon	equ	0xFF2
 53697                           indf0	equ	0xFEF
 53698                           postinc0	equ	0xFEE
 53699                           fsr0h	equ	0xFEA
 53700                           fsr0l	equ	0xFE9
 53701                           wreg	equ	0xFE8
 53702                           indf1	equ	0xFE7
 53703                           postinc1	equ	0xFE6
 53704                           postdec1	equ	0xFE5
 53705                           plusw1	equ	0xFE3
 53706                           fsr1h	equ	0xFE2
 53707                           fsr1l	equ	0xFE1
 53708                           indf2	equ	0xFDF
 53709                           postinc2	equ	0xFDE
 53710                           postdec2	equ	0xFDD
 53711                           plusw2	equ	0xFDB
 53712                           fsr2h	equ	0xFDA
 53713                           fsr2l	equ	0xFD9
 53714                           status	equ	0xFD8
 53715                           
 53716 ;; *************** function i2_USBTransferOnePacket *****************
 53717 ;; Defined at:
 53718 ;;		line 995 in file "usb_device.c"
 53719 ;; Parameters:    Size  Location     Type
 53720 ;;  ep              1    wreg     unsigned char 
 53721 ;;  dir             1    0[COMRAM] unsigned char 
 53722 ;;  data            2    1[COMRAM] PTR unsigned char 
 53723 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 53724 ;;		 -> msd_cbw(31), NULL(0), 
 53725 ;;  len             1    3[COMRAM] unsigned char 
 53726 ;; Auto vars:     Size  Location     Type
 53727 ;;  ep              1    8[COMRAM] unsigned char 
 53728 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 53729 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 53730 ;; Return value:  Size  Location     Type
 53731 ;;                  2    0[COMRAM] PTR void 
 53732 ;; Registers used:
 53733 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53734 ;; Tracked objects:
 53735 ;;		On entry : 0/0
 53736 ;;		On exit  : 0/0
 53737 ;;		Unchanged: 0/0
 53738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53740 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53741 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53742 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53743 ;;Total ram usage:       11 bytes
 53744 ;; Hardware stack levels used:    1
 53745 ;; This function calls:
 53746 ;;		Nothing
 53747 ;; This function is called by:
 53748 ;;		_USBMSDInit
 53749 ;;		_USBCheckMSDRequest
 53750 ;;		_MSDTransferTerminated
 53751 ;;		_APP_DeviceCustomHIDInitialize
 53752 ;; This function uses a non-reentrant model
 53753 ;;
 53754                           
 53755                           	psect	text226
 53756  011276                     __ptext226:
 53757                           	opt stack 0
 53758  011276                     i2_USBTransferOnePacket:
 53759                           	opt stack 14
 53760                           
 53761                           ;incstack = 0
 53762                           ;i2USBTransferOnePacket@ep stored from wreg
 53763  011276  6E09               	movwf	i2USBTransferOnePacket@ep,c
 53764                           
 53765                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 53766  011278  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53767  01127A  B4D8               	btfsc	status,2,c
 53768  01127C  D007               	goto	i2l184
 53769                           
 53770                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 53771  01127E  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53772  011280  0D02               	mullw	2
 53773  011282  0E1B               	movlw	low _pBDTEntryIn
 53774  011284  24F3               	addwf	prodl,w,c
 53775  011286  6ED9               	movwf	fsr2l,c
 53776  011288  0E01               	movlw	high _pBDTEntryIn
 53777  01128A  D006               	goto	L85
 53778  01128C                     i2l184:
 53779                           
 53780                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 53781  01128C  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53782  01128E  0D02               	mullw	2
 53783  011290  0E21               	movlw	low _pBDTEntryOut
 53784  011292  24F3               	addwf	prodl,w,c
 53785  011294  6ED9               	movwf	fsr2l,c
 53786  011296  0E01               	movlw	high _pBDTEntryOut
 53787  011298                     L85:
 53788  011298  20F4               	addwfc	prodh,w,c
 53789  01129A  6EDA               	movwf	fsr2h,c
 53790  01129C  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 53791  0112A0  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 53792                           
 53793                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 53794  0112A4  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53795  0112A6  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 53796  0112A8  A4D8               	btfss	status,2,c
 53797  0112AA  D005               	goto	i2l186
 53798                           
 53799                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 53800  0112AC  0E00               	movlw	0
 53801  0112AE  6E01               	movwf	?i2_USBTransferOnePacket,c
 53802  0112B0  0E00               	movlw	0
 53803  0112B2  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 53804  0112B4  0012               	return	
 53805  0112B6                     i2l186:
 53806                           
 53807                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 53808  0112B6  EE20 F002          	lfsr	2,2
 53809  0112BA  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53810  0112BC  26D9               	addwf	fsr2l,f,c
 53811  0112BE  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53812  0112C0  22DA               	addwfc	fsr2h,f,c
 53813  0112C2  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 53814  0112C6  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 53815                           
 53816                           ;usb_device.c: 1030: handle->CNT = len;
 53817  0112CA  EE20 F001          	lfsr	2,1
 53818  0112CE  500A               	movf	i2USBTransferOnePacket@handle,w,c
 53819  0112D0  26D9               	addwf	fsr2l,f,c
 53820  0112D2  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 53821  0112D4  22DA               	addwfc	fsr2h,f,c
 53822  0112D6  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 53823                           
 53824                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 53825  0112DA  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53826  0112DE  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53827  0112E2  0E40               	movlw	64
 53828  0112E4  16DF               	andwf	indf2,f,c
 53829                           
 53830                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 53831  0112E6  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53832  0112EA  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53833  0112EE  0E00               	movlw	0
 53834  0112F0  86DB               	bsf	plusw2,3,c
 53835                           
 53836                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 53837  0112F2  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 53838  0112F6  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 53839  0112FA  0E00               	movlw	0
 53840  0112FC  8EDB               	bsf	plusw2,7,c
 53841                           
 53842                           ;usb_device.c: 1036: if(dir != 0)
 53843  0112FE  5001               	movf	i2USBTransferOnePacket@dir,w,c
 53844  011300  B4D8               	btfsc	status,2,c
 53845  011302  D018               	goto	i2l188
 53846                           
 53847                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 53848  011304  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53849  011306  0D02               	mullw	2
 53850  011308  0E1B               	movlw	low _pBDTEntryIn
 53851  01130A  24F3               	addwf	prodl,w,c
 53852  01130C  6ED9               	movwf	fsr2l,c
 53853  01130E  0E01               	movlw	high _pBDTEntryIn
 53854  011310  20F4               	addwfc	prodh,w,c
 53855  011312  6EDA               	movwf	fsr2h,c
 53856  011314  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53857  011318  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53858  01131C  0E04               	movlw	4
 53859  01131E  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53860  011320  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53861  011322  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53862  011324  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53863  011326  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53864  011328  0D02               	mullw	2
 53865  01132A  0E1B               	movlw	low _pBDTEntryIn
 53866  01132C  24F3               	addwf	prodl,w,c
 53867  01132E  6ED9               	movwf	fsr2l,c
 53868  011330  0E01               	movlw	high _pBDTEntryIn
 53869  011332  D017               	goto	L86
 53870  011334                     i2l188:
 53871                           
 53872                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 53873  011334  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53874  011336  0D02               	mullw	2
 53875  011338  0E21               	movlw	low _pBDTEntryOut
 53876  01133A  24F3               	addwf	prodl,w,c
 53877  01133C  6ED9               	movwf	fsr2l,c
 53878  01133E  0E01               	movlw	high _pBDTEntryOut
 53879  011340  20F4               	addwfc	prodh,w,c
 53880  011342  6EDA               	movwf	fsr2h,c
 53881  011344  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 53882  011348  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 53883  01134C  0E04               	movlw	4
 53884  01134E  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 53885  011350  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 53886  011352  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 53887  011354  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 53888  011356  5009               	movf	i2USBTransferOnePacket@ep,w,c
 53889  011358  0D02               	mullw	2
 53890  01135A  0E21               	movlw	low _pBDTEntryOut
 53891  01135C  24F3               	addwf	prodl,w,c
 53892  01135E  6ED9               	movwf	fsr2l,c
 53893  011360  0E01               	movlw	high _pBDTEntryOut
 53894  011362                     L86:
 53895  011362  20F4               	addwfc	prodh,w,c
 53896  011364  6EDA               	movwf	fsr2h,c
 53897  011366  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 53898  01136A  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 53899                           
 53900                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 53901  01136E  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 53902  011372  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 53903  011376  0012               	return	
 53904  011378                     __end_ofi2_USBTransferOnePacket:
 53905                           	opt stack 0
 53906                           tosu	equ	0xFFF
 53907                           tosh	equ	0xFFE
 53908                           tosl	equ	0xFFD
 53909                           pclatu	equ	0xFFB
 53910                           pclath	equ	0xFFA
 53911                           tblptru	equ	0xFF8
 53912                           tblptrh	equ	0xFF7
 53913                           tblptrl	equ	0xFF6
 53914                           tablat	equ	0xFF5
 53915                           prodh	equ	0xFF4
 53916                           prodl	equ	0xFF3
 53917                           intcon	equ	0xFF2
 53918                           indf0	equ	0xFEF
 53919                           postinc0	equ	0xFEE
 53920                           fsr0h	equ	0xFEA
 53921                           fsr0l	equ	0xFE9
 53922                           wreg	equ	0xFE8
 53923                           indf1	equ	0xFE7
 53924                           postinc1	equ	0xFE6
 53925                           postdec1	equ	0xFE5
 53926                           plusw1	equ	0xFE3
 53927                           fsr1h	equ	0xFE2
 53928                           fsr1l	equ	0xFE1
 53929                           indf2	equ	0xFDF
 53930                           postinc2	equ	0xFDE
 53931                           postdec2	equ	0xFDD
 53932                           plusw2	equ	0xFDB
 53933                           fsr2h	equ	0xFDA
 53934                           fsr2l	equ	0xFD9
 53935                           status	equ	0xFD8
 53936                           
 53937 ;; *************** function _USBEnableEndpoint *****************
 53938 ;; Defined at:
 53939 ;;		line 878 in file "usb_device.c"
 53940 ;; Parameters:    Size  Location     Type
 53941 ;;  ep              1    wreg     unsigned char 
 53942 ;;  options         1    8[COMRAM] unsigned char 
 53943 ;; Auto vars:     Size  Location     Type
 53944 ;;  ep              1   11[COMRAM] unsigned char 
 53945 ;;  p               2    9[COMRAM] PTR unsigned char 
 53946 ;;		 -> UEP0(1), 
 53947 ;; Return value:  Size  Location     Type
 53948 ;;                  1    wreg      void 
 53949 ;; Registers used:
 53950 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53951 ;; Tracked objects:
 53952 ;;		On entry : 0/0
 53953 ;;		On exit  : 0/0
 53954 ;;		Unchanged: 0/0
 53955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53956 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53957 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53958 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53959 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53960 ;;Total ram usage:        4 bytes
 53961 ;; Hardware stack levels used:    1
 53962 ;; Hardware stack levels required when called:    1
 53963 ;; This function calls:
 53964 ;;		_USBConfigureEndpoint
 53965 ;; This function is called by:
 53966 ;;		_APP_DeviceCustomHIDInitialize
 53967 ;;		_APP_DeviceMSDInitialize
 53968 ;; This function uses a non-reentrant model
 53969 ;;
 53970                           
 53971                           	psect	text227
 53972  0151B8                     __ptext227:
 53973                           	opt stack 0
 53974  0151B8                     _USBEnableEndpoint:
 53975                           	opt stack 13
 53976                           
 53977                           ;incstack = 0
 53978                           ;USBEnableEndpoint@ep stored from wreg
 53979  0151B8  6E0C               	movwf	USBEnableEndpoint@ep,c
 53980                           
 53981                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 53982  0151BA  A409               	btfss	USBEnableEndpoint@options,2,c
 53983  0151BC  D005               	goto	i2l179
 53984                           
 53985                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 53986  0151BE  0E00               	movlw	0
 53987  0151C0  6E01               	movwf	USBConfigureEndpoint@direction,c
 53988  0151C2  500C               	movf	USBEnableEndpoint@ep,w,c
 53989  0151C4  EC2D  F09C         	call	_USBConfigureEndpoint
 53990  0151C8                     i2l179:
 53991                           
 53992                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 53993  0151C8  A209               	btfss	USBEnableEndpoint@options,1,c
 53994  0151CA  D005               	goto	i2l180
 53995                           
 53996                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 53997  0151CC  0E01               	movlw	1
 53998  0151CE  6E01               	movwf	USBConfigureEndpoint@direction,c
 53999  0151D0  500C               	movf	USBEnableEndpoint@ep,w,c
 54000  0151D2  EC2D  F09C         	call	_USBConfigureEndpoint
 54001  0151D6                     i2l180:
 54002                           
 54003                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 54004  0151D6  500C               	movf	USBEnableEndpoint@ep,w,c
 54005  0151D8  0D01               	mullw	1
 54006  0151DA  0E26               	movlw	38
 54007  0151DC  24F3               	addwf	prodl,w,c
 54008  0151DE  6E0A               	movwf	USBEnableEndpoint@p,c
 54009  0151E0  0E0F               	movlw	15
 54010  0151E2  20F4               	addwfc	prodh,w,c
 54011  0151E4  6E0B               	movwf	USBEnableEndpoint@p+1,c
 54012                           
 54013                           ;usb_device.c: 901: *p = options;
 54014  0151E6  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 54015  0151EA  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 54016  0151EE  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 54017  0151F2  0012               	return		;funcret
 54018  0151F4                     __end_of_USBEnableEndpoint:
 54019                           	opt stack 0
 54020                           tosu	equ	0xFFF
 54021                           tosh	equ	0xFFE
 54022                           tosl	equ	0xFFD
 54023                           pclatu	equ	0xFFB
 54024                           pclath	equ	0xFFA
 54025                           tblptru	equ	0xFF8
 54026                           tblptrh	equ	0xFF7
 54027                           tblptrl	equ	0xFF6
 54028                           tablat	equ	0xFF5
 54029                           prodh	equ	0xFF4
 54030                           prodl	equ	0xFF3
 54031                           intcon	equ	0xFF2
 54032                           indf0	equ	0xFEF
 54033                           postinc0	equ	0xFEE
 54034                           fsr0h	equ	0xFEA
 54035                           fsr0l	equ	0xFE9
 54036                           wreg	equ	0xFE8
 54037                           indf1	equ	0xFE7
 54038                           postinc1	equ	0xFE6
 54039                           postdec1	equ	0xFE5
 54040                           plusw1	equ	0xFE3
 54041                           fsr1h	equ	0xFE2
 54042                           fsr1l	equ	0xFE1
 54043                           indf2	equ	0xFDF
 54044                           postinc2	equ	0xFDE
 54045                           postdec2	equ	0xFDD
 54046                           plusw2	equ	0xFDB
 54047                           fsr2h	equ	0xFDA
 54048                           fsr2l	equ	0xFD9
 54049                           status	equ	0xFD8
 54050                           
 54051 ;; *************** function _USBConfigureEndpoint *****************
 54052 ;; Defined at:
 54053 ;;		line 1545 in file "usb_device.c"
 54054 ;; Parameters:    Size  Location     Type
 54055 ;;  EPNum           1    wreg     unsigned char 
 54056 ;;  direction       1    0[COMRAM] unsigned char 
 54057 ;; Auto vars:     Size  Location     Type
 54058 ;;  EPNum           1    5[COMRAM] unsigned char 
 54059 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 54060 ;;		 -> BDT(48), 
 54061 ;; Return value:  Size  Location     Type
 54062 ;;                  1    wreg      void 
 54063 ;; Registers used:
 54064 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54065 ;; Tracked objects:
 54066 ;;		On entry : 0/0
 54067 ;;		On exit  : 0/0
 54068 ;;		Unchanged: 0/0
 54069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54070 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54071 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54072 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54073 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54074 ;;Total ram usage:        8 bytes
 54075 ;; Hardware stack levels used:    1
 54076 ;; This function calls:
 54077 ;;		Nothing
 54078 ;; This function is called by:
 54079 ;;		_USBEnableEndpoint
 54080 ;; This function uses a non-reentrant model
 54081 ;;
 54082                           
 54083                           	psect	text228
 54084  01385A                     __ptext228:
 54085                           	opt stack 0
 54086  01385A                     _USBConfigureEndpoint:
 54087                           	opt stack 13
 54088                           
 54089                           ;incstack = 0
 54090                           ;USBConfigureEndpoint@EPNum stored from wreg
 54091  01385A  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 54092                           
 54093                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 54094  01385C  0E00               	movlw	0
 54095  01385E  6E07               	movwf	USBConfigureEndpoint@handle,c
 54096  013860  0E0D               	movlw	13
 54097  013862  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 54098                           
 54099                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 54100  013864  5001               	movf	USBConfigureEndpoint@direction,w,c
 54101  013866  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 54102  013868  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 54103  01386A  90D8               	bcf	status,0,c
 54104  01386C  3602               	rlcf	??_USBConfigureEndpoint,f,c
 54105  01386E  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 54106  013870  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54107  013872  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 54108  013874  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 54109  013876  90D8               	bcf	status,0,c
 54110  013878  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54111  01387A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54112  01387C  90D8               	bcf	status,0,c
 54113  01387E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54114  013880  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54115  013882  5002               	movf	??_USBConfigureEndpoint,w,c
 54116  013884  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 54117  013886  5003               	movf	??_USBConfigureEndpoint+1,w,c
 54118  013888  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 54119  01388A  90D8               	bcf	status,0,c
 54120  01388C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54121  01388E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54122  013890  90D8               	bcf	status,0,c
 54123  013892  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54124  013894  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54125  013896  5004               	movf	??_USBConfigureEndpoint+2,w,c
 54126  013898  2607               	addwf	USBConfigureEndpoint@handle,f,c
 54127  01389A  5005               	movf	??_USBConfigureEndpoint+3,w,c
 54128  01389C  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 54129                           
 54130                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 54131  01389E  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54132  0138A2  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54133  0138A6  9EDF               	bcf	indf2,7,c
 54134                           
 54135                           ;usb_device.c: 1559: if(direction == 0)
 54136  0138A8  5001               	movf	USBConfigureEndpoint@direction,w,c
 54137  0138AA  A4D8               	btfss	status,2,c
 54138  0138AC  D007               	goto	i2l226
 54139                           
 54140                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 54141  0138AE  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54142  0138B0  0D02               	mullw	2
 54143  0138B2  0E21               	movlw	low _pBDTEntryOut
 54144  0138B4  24F3               	addwf	prodl,w,c
 54145  0138B6  6ED9               	movwf	fsr2l,c
 54146  0138B8  0E01               	movlw	high _pBDTEntryOut
 54147  0138BA  D006               	goto	L87
 54148  0138BC                     i2l226:
 54149                           
 54150                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 54151  0138BC  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54152  0138BE  0D02               	mullw	2
 54153  0138C0  0E1B               	movlw	low _pBDTEntryIn
 54154  0138C2  24F3               	addwf	prodl,w,c
 54155  0138C4  6ED9               	movwf	fsr2l,c
 54156  0138C6  0E01               	movlw	high _pBDTEntryIn
 54157  0138C8                     L87:
 54158  0138C8  20F4               	addwfc	prodh,w,c
 54159  0138CA  6EDA               	movwf	fsr2h,c
 54160  0138CC  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 54161  0138D0  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 54162                           
 54163                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 54164  0138D4  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54165  0138D8  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54166  0138DC  9CDF               	bcf	indf2,6,c
 54167                           
 54168                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 54169  0138DE  EE20 F004          	lfsr	2,4
 54170  0138E2  5007               	movf	USBConfigureEndpoint@handle,w,c
 54171  0138E4  26D9               	addwf	fsr2l,f,c
 54172  0138E6  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 54173  0138E8  22DA               	addwfc	fsr2h,f,c
 54174  0138EA  8CDF               	bsf	indf2,6,c
 54175  0138EC  0012               	return		;funcret
 54176  0138EE                     __end_of_USBConfigureEndpoint:
 54177                           	opt stack 0
 54178                           tosu	equ	0xFFF
 54179                           tosh	equ	0xFFE
 54180                           tosl	equ	0xFFD
 54181                           pclatu	equ	0xFFB
 54182                           pclath	equ	0xFFA
 54183                           tblptru	equ	0xFF8
 54184                           tblptrh	equ	0xFF7
 54185                           tblptrl	equ	0xFF6
 54186                           tablat	equ	0xFF5
 54187                           prodh	equ	0xFF4
 54188                           prodl	equ	0xFF3
 54189                           intcon	equ	0xFF2
 54190                           indf0	equ	0xFEF
 54191                           postinc0	equ	0xFEE
 54192                           fsr0h	equ	0xFEA
 54193                           fsr0l	equ	0xFE9
 54194                           wreg	equ	0xFE8
 54195                           indf1	equ	0xFE7
 54196                           postinc1	equ	0xFE6
 54197                           postdec1	equ	0xFE5
 54198                           plusw1	equ	0xFE3
 54199                           fsr1h	equ	0xFE2
 54200                           fsr1l	equ	0xFE1
 54201                           indf2	equ	0xFDF
 54202                           postinc2	equ	0xFDE
 54203                           postdec2	equ	0xFDD
 54204                           plusw2	equ	0xFDB
 54205                           fsr2h	equ	0xFDA
 54206                           fsr2l	equ	0xFD9
 54207                           status	equ	0xFD8
 54208                           
 54209 ;; *************** function _USBCtrlTrfOutHandler *****************
 54210 ;; Defined at:
 54211 ;;		line 2540 in file "usb_device.c"
 54212 ;; Parameters:    Size  Location     Type
 54213 ;;		None
 54214 ;; Auto vars:     Size  Location     Type
 54215 ;;		None
 54216 ;; Return value:  Size  Location     Type
 54217 ;;                  1    wreg      void 
 54218 ;; Registers used:
 54219 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54220 ;; Tracked objects:
 54221 ;;		On entry : 0/0
 54222 ;;		On exit  : 0/0
 54223 ;;		Unchanged: 0/0
 54224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54229 ;;Total ram usage:        0 bytes
 54230 ;; Hardware stack levels used:    1
 54231 ;; Hardware stack levels required when called:    2
 54232 ;; This function calls:
 54233 ;;		_USBCtrlTrfRxService
 54234 ;; This function is called by:
 54235 ;;		_USBCtrlEPService
 54236 ;; This function uses a non-reentrant model
 54237 ;;
 54238                           
 54239                           	psect	text229
 54240  01451A                     __ptext229:
 54241                           	opt stack 0
 54242  01451A                     _USBCtrlTrfOutHandler:
 54243                           	opt stack 13
 54244                           
 54245                           ;usb_device.c: 2542: if(controlTransferState == 2)
 54246                           
 54247                           ;incstack = 0
 54248  01451A  0E02               	movlw	2
 54249  01451C  0101               	movlb	1	; () banked
 54250  01451E  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54251  014520  A4D8               	btfss	status,2,c
 54252  014522  D003               	goto	i2l332
 54253                           
 54254                           ; BSR set to: 1
 54255                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 54256  014524  EC29  F087         	call	_USBCtrlTrfRxService	;wreg free
 54257                           
 54258                           ;usb_device.c: 2545: }
 54259  014528  0012               	return	
 54260  01452A                     i2l332:
 54261                           
 54262                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 54263  01452A  0E00               	movlw	0
 54264  01452C  0101               	movlb	1	; () banked
 54265  01452E  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 54266                           
 54267                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 54268  014530  516B               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 54269  014532  A4D8               	btfss	status,2,c
 54270  014534  D01F               	goto	i2l334
 54271                           
 54272                           ; BSR set to: 1
 54273                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 54274  014536  EE20 F001          	lfsr	2,1
 54275  01453A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54276  01453C  26D9               	addwf	fsr2l,f,c
 54277  01453E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54278  014540  22DA               	addwfc	fsr2h,f,c
 54279  014542  0E08               	movlw	8
 54280  014544  6EDF               	movwf	indf2,c
 54281                           
 54282                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54283  014546  EE20 F002          	lfsr	2,2
 54284  01454A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54285  01454C  26D9               	addwf	fsr2l,f,c
 54286  01454E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54287  014550  22DA               	addwfc	fsr2h,f,c
 54288  014552  0E30               	movlw	48
 54289  014554  6EDE               	movwf	postinc2,c
 54290  014556  0E0D               	movlw	13
 54291  014558  6EDD               	movwf	postdec2,c
 54292                           
 54293                           ; BSR set to: 1
 54294                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 54295  01455A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54296  01455E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54297  014562  0E0C               	movlw	12
 54298  014564  6EDF               	movwf	indf2,c
 54299                           
 54300                           ; BSR set to: 1
 54301                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54302  014566  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54303  01456A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54304  01456E  0E00               	movlw	0
 54305  014570  8EDB               	bsf	plusw2,7,c
 54306                           
 54307                           ;usb_device.c: 2563: }
 54308  014572  0012               	return	
 54309  014574                     i2l334:
 54310                           
 54311                           ; BSR set to: 1
 54312                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 54313                           
 54314                           ; BSR set to: 1
 54315  014574  0E00               	movlw	0
 54316  014576  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54317                           
 54318                           ; BSR set to: 1
 54319  014578  0012               	return	
 54320  01457A                     __end_of_USBCtrlTrfOutHandler:
 54321                           	opt stack 0
 54322                           tosu	equ	0xFFF
 54323                           tosh	equ	0xFFE
 54324                           tosl	equ	0xFFD
 54325                           pclatu	equ	0xFFB
 54326                           pclath	equ	0xFFA
 54327                           tblptru	equ	0xFF8
 54328                           tblptrh	equ	0xFF7
 54329                           tblptrl	equ	0xFF6
 54330                           tablat	equ	0xFF5
 54331                           prodh	equ	0xFF4
 54332                           prodl	equ	0xFF3
 54333                           intcon	equ	0xFF2
 54334                           indf0	equ	0xFEF
 54335                           postinc0	equ	0xFEE
 54336                           fsr0h	equ	0xFEA
 54337                           fsr0l	equ	0xFE9
 54338                           wreg	equ	0xFE8
 54339                           indf1	equ	0xFE7
 54340                           postinc1	equ	0xFE6
 54341                           postdec1	equ	0xFE5
 54342                           plusw1	equ	0xFE3
 54343                           fsr1h	equ	0xFE2
 54344                           fsr1l	equ	0xFE1
 54345                           indf2	equ	0xFDF
 54346                           postinc2	equ	0xFDE
 54347                           postdec2	equ	0xFDD
 54348                           plusw2	equ	0xFDB
 54349                           fsr2h	equ	0xFDA
 54350                           fsr2l	equ	0xFD9
 54351                           status	equ	0xFD8
 54352                           
 54353 ;; *************** function _USBCtrlTrfRxService *****************
 54354 ;; Defined at:
 54355 ;;		line 1854 in file "usb_device.c"
 54356 ;; Parameters:    Size  Location     Type
 54357 ;;		None
 54358 ;; Auto vars:     Size  Location     Type
 54359 ;;  byteToRead      1    1[COMRAM] unsigned char 
 54360 ;;  i               1    0[COMRAM] unsigned char 
 54361 ;; Return value:  Size  Location     Type
 54362 ;;                  1    wreg      void 
 54363 ;; Registers used:
 54364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54365 ;; Tracked objects:
 54366 ;;		On entry : 0/0
 54367 ;;		On exit  : 0/0
 54368 ;;		Unchanged: 0/0
 54369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54371 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54374 ;;Total ram usage:        2 bytes
 54375 ;; Hardware stack levels used:    1
 54376 ;; Hardware stack levels required when called:    1
 54377 ;; This function calls:
 54378 ;;		_USBCtrlEPAllowStatusStage
 54379 ;; This function is called by:
 54380 ;;		_USBCtrlTrfOutHandler
 54381 ;; This function uses a non-reentrant model
 54382 ;;
 54383                           
 54384                           	psect	text230
 54385  010E52                     __ptext230:
 54386                           	opt stack 0
 54387  010E52                     _USBCtrlTrfRxService:
 54388                           	opt stack 13
 54389                           
 54390                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 54391                           
 54392                           ;incstack = 0
 54393  010E52  0101               	movlb	1	; () banked
 54394  010E54  EE20 F001          	lfsr	2,1
 54395  010E58  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54396  010E5A  26D9               	addwf	fsr2l,f,c
 54397  010E5C  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54398  010E5E  22DA               	addwfc	fsr2h,f,c
 54399  010E60  50DF               	movf	indf2,w,c
 54400  010E62  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 54401                           
 54402                           ; BSR set to: 1
 54403                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 54404  010E64  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54405  010E66  5D16               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 54406  010E68  0E00               	movlw	0
 54407  010E6A  5917               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 54408  010E6C  A0D8               	btfss	status,0,c
 54409                           
 54410                           ; BSR set to: 1
 54411                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 54412  010E6E  C116  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 54413                           
 54414                           ; BSR set to: 1
 54415                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 54416                           
 54417                           ; BSR set to: 1
 54418  010E72  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54419  010E74  5F16               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 54420  010E76  0E00               	movlw	0
 54421  010E78  5B17               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 54422                           
 54423                           ; BSR set to: 1
 54424                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 54425  010E7A  0E00               	movlw	0
 54426  010E7C  6E01               	movwf	USBCtrlTrfRxService@i,c
 54427  010E7E  D011               	goto	i2l260
 54428  010E80                     
 54429                           ; BSR set to: 1
 54430                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 54431                           
 54432                           ; BSR set to: 1
 54433  010E80  5001               	movf	USBCtrlTrfRxService@i,w,c
 54434  010E82  0D01               	mullw	1
 54435  010E84  0E38               	movlw	56
 54436  010E86  24F3               	addwf	prodl,w,c
 54437  010E88  6ED9               	movwf	fsr2l,c
 54438  010E8A  0E0D               	movlw	13
 54439  010E8C  20F4               	addwfc	prodh,w,c
 54440  010E8E  6EDA               	movwf	fsr2h,c
 54441  010E90  C112  FFE1         	movff	_outPipes,fsr1l	;volatile
 54442  010E94  C113  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 54443  010E98  CFDF FFE7          	movff	indf2,indf1
 54444                           
 54445                           ; BSR set to: 1
 54446  010E9C  4B12               	infsnz	_outPipes& (0+255),f,b	;volatile
 54447  010E9E  2B13               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 54448                           
 54449                           ; BSR set to: 1
 54450  010EA0  2A01               	incf	USBCtrlTrfRxService@i,f,c
 54451  010EA2                     i2l260:
 54452                           
 54453                           ; BSR set to: 1
 54454                           
 54455                           ; BSR set to: 1
 54456  010EA2  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 54457  010EA4  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 54458  010EA6  A0D8               	btfss	status,0,c
 54459  010EA8  D7EB               	goto	i2l261
 54460                           
 54461                           ; BSR set to: 1
 54462                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 54463                           
 54464                           ; BSR set to: 1
 54465  010EAA  5116               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 54466  010EAC  1117               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 54467  010EAE  B4D8               	btfsc	status,2,c
 54468  010EB0  D032               	goto	i2l263
 54469                           
 54470                           ; BSR set to: 1
 54471                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 54472  010EB2  EE20 F001          	lfsr	2,1
 54473  010EB6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54474  010EB8  26D9               	addwf	fsr2l,f,c
 54475  010EBA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54476  010EBC  22DA               	addwfc	fsr2h,f,c
 54477  010EBE  0E08               	movlw	8
 54478  010EC0  6EDF               	movwf	indf2,c
 54479                           
 54480                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 54481  010EC2  EE20 F002          	lfsr	2,2
 54482  010EC6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54483  010EC8  26D9               	addwf	fsr2l,f,c
 54484  010ECA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54485  010ECC  22DA               	addwfc	fsr2h,f,c
 54486  010ECE  0E38               	movlw	56
 54487  010ED0  6EDE               	movwf	postinc2,c
 54488  010ED2  0E0D               	movlw	13
 54489  010ED4  6EDD               	movwf	postdec2,c
 54490                           
 54491                           ; BSR set to: 1
 54492                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 54493  010ED6  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54494  010EDA  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54495  010EDE  BCDF               	btfsc	indf2,6,c
 54496  010EE0  D00D               	goto	i2l264
 54497                           
 54498                           ; BSR set to: 1
 54499                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 54500  010EE2  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54501  010EE6  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54502  010EEA  0E48               	movlw	72
 54503  010EEC  6EDF               	movwf	indf2,c
 54504                           
 54505                           ; BSR set to: 1
 54506                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54507  010EEE  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54508  010EF2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54509  010EF6  0E00               	movlw	0
 54510  010EF8  8EDB               	bsf	plusw2,7,c
 54511                           
 54512                           ;usb_device.c: 1891: }
 54513  010EFA  0012               	return	
 54514  010EFC                     i2l264:
 54515                           
 54516                           ; BSR set to: 1
 54517                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 54518                           
 54519                           ; BSR set to: 1
 54520  010EFC  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54521  010F00  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54522  010F04  0E08               	movlw	8
 54523  010F06  6EDF               	movwf	indf2,c
 54524                           
 54525                           ; BSR set to: 1
 54526                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54527  010F08  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54528  010F0C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54529  010F10  0E00               	movlw	0
 54530  010F12  8EDB               	bsf	plusw2,7,c
 54531                           
 54532                           ; BSR set to: 1
 54533                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 54534  010F14  0012               	return	
 54535  010F16                     i2l263:
 54536                           
 54537                           ; BSR set to: 1
 54538                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 54539                           
 54540                           ; BSR set to: 1
 54541  010F16  EE20 F001          	lfsr	2,1
 54542  010F1A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54543  010F1C  26D9               	addwf	fsr2l,f,c
 54544  010F1E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54545  010F20  22DA               	addwfc	fsr2h,f,c
 54546  010F22  0E08               	movlw	8
 54547  010F24  6EDF               	movwf	indf2,c
 54548                           
 54549                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54550  010F26  EE20 F002          	lfsr	2,2
 54551  010F2A  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54552  010F2C  26D9               	addwf	fsr2l,f,c
 54553  010F2E  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54554  010F30  22DA               	addwfc	fsr2h,f,c
 54555  010F32  0E30               	movlw	48
 54556  010F34  6EDE               	movwf	postinc2,c
 54557  010F36  0E0D               	movlw	13
 54558  010F38  6EDD               	movwf	postdec2,c
 54559                           
 54560                           ; BSR set to: 1
 54561                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 54562  010F3A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54563  010F3E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54564  010F42  0E04               	movlw	4
 54565  010F44  6EDF               	movwf	indf2,c
 54566                           
 54567                           ; BSR set to: 1
 54568                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 54569  010F46  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54570  010F4A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54571  010F4E  0E00               	movlw	0
 54572  010F50  8EDB               	bsf	plusw2,7,c
 54573                           
 54574                           ; BSR set to: 1
 54575                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 54576                           
 54577                           ; BSR set to: 1
 54578                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 54579  010F52  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 54580                           
 54581                           ; BSR set to: 1
 54582                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 54583  010F54  5169               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 54584  010F56  A4D8               	btfss	status,2,c
 54585  010F58  0012               	return	
 54586                           
 54587                           ; BSR set to: 1
 54588                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 54589  010F5A  ECE0  F094         	call	_USBCtrlEPAllowStatusStage	;wreg free
 54590  010F5E  0012               	return	
 54591  010F60                     __end_of_USBCtrlTrfRxService:
 54592                           	opt stack 0
 54593                           tosu	equ	0xFFF
 54594                           tosh	equ	0xFFE
 54595                           tosl	equ	0xFFD
 54596                           pclatu	equ	0xFFB
 54597                           pclath	equ	0xFFA
 54598                           tblptru	equ	0xFF8
 54599                           tblptrh	equ	0xFF7
 54600                           tblptrl	equ	0xFF6
 54601                           tablat	equ	0xFF5
 54602                           prodh	equ	0xFF4
 54603                           prodl	equ	0xFF3
 54604                           intcon	equ	0xFF2
 54605                           indf0	equ	0xFEF
 54606                           postinc0	equ	0xFEE
 54607                           fsr0h	equ	0xFEA
 54608                           fsr0l	equ	0xFE9
 54609                           wreg	equ	0xFE8
 54610                           indf1	equ	0xFE7
 54611                           postinc1	equ	0xFE6
 54612                           postdec1	equ	0xFE5
 54613                           plusw1	equ	0xFE3
 54614                           fsr1h	equ	0xFE2
 54615                           fsr1l	equ	0xFE1
 54616                           indf2	equ	0xFDF
 54617                           postinc2	equ	0xFDE
 54618                           postdec2	equ	0xFDD
 54619                           plusw2	equ	0xFDB
 54620                           fsr2h	equ	0xFDA
 54621                           fsr2l	equ	0xFD9
 54622                           status	equ	0xFD8
 54623                           
 54624 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 54625 ;; Defined at:
 54626 ;;		line 1418 in file "usb_device.c"
 54627 ;; Parameters:    Size  Location     Type
 54628 ;;		None
 54629 ;; Auto vars:     Size  Location     Type
 54630 ;;		None
 54631 ;; Return value:  Size  Location     Type
 54632 ;;                  1    wreg      void 
 54633 ;; Registers used:
 54634 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 54635 ;; Tracked objects:
 54636 ;;		On entry : 0/0
 54637 ;;		On exit  : 0/0
 54638 ;;		Unchanged: 0/0
 54639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54640 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54643 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54644 ;;Total ram usage:        0 bytes
 54645 ;; Hardware stack levels used:    1
 54646 ;; This function calls:
 54647 ;;		Nothing
 54648 ;; This function is called by:
 54649 ;;		_USBDeviceTasks
 54650 ;;		_USBCtrlEPServiceComplete
 54651 ;;		_USBCtrlTrfRxService
 54652 ;; This function uses a non-reentrant model
 54653 ;;
 54654                           
 54655                           	psect	text231
 54656  0129C0                     __ptext231:
 54657                           	opt stack 0
 54658  0129C0                     _USBCtrlEPAllowStatusStage:
 54659                           	opt stack 13
 54660                           
 54661                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 54662                           
 54663                           ;incstack = 0
 54664  0129C0  0101               	movlb	1	; () banked
 54665  0129C2  5168               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 54666  0129C4  A4D8               	btfss	status,2,c
 54667  0129C6  0012               	return	
 54668                           
 54669                           ; BSR set to: 1
 54670                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 54671  0129C8  0E01               	movlw	1
 54672  0129CA  6F68               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 54673                           
 54674                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 54675  0129CC  5167               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 54676  0129CE  A4D8               	btfss	status,2,c
 54677  0129D0  0012               	return	
 54678                           
 54679                           ; BSR set to: 1
 54680                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 54681  0129D2  0E01               	movlw	1
 54682  0129D4  6F67               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 54683                           
 54684                           ; BSR set to: 1
 54685                           ;usb_device.c: 1434: if(controlTransferState == 2)
 54686  0129D6  0E02               	movlw	2
 54687  0129D8  196F               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 54688  0129DA  A4D8               	btfss	status,2,c
 54689  0129DC  D015               	goto	i2l214
 54690                           
 54691                           ; BSR set to: 1
 54692                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 54693  0129DE  EE20 F001          	lfsr	2,1
 54694  0129E2  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54695  0129E4  26D9               	addwf	fsr2l,f,c
 54696  0129E6  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54697  0129E8  22DA               	addwfc	fsr2h,f,c
 54698  0129EA  0E00               	movlw	0
 54699  0129EC  6EDF               	movwf	indf2,c
 54700                           
 54701                           ; BSR set to: 1
 54702                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 54703  0129EE  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54704  0129F2  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54705  0129F6  0E48               	movlw	72
 54706  0129F8  6EDF               	movwf	indf2,c
 54707                           
 54708                           ; BSR set to: 1
 54709                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54710  0129FA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54711  0129FE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54712  012A02  0E00               	movlw	0
 54713  012A04  8EDB               	bsf	plusw2,7,c
 54714                           
 54715                           ;usb_device.c: 1439: }
 54716  012A06  0012               	return	
 54717  012A08                     i2l214:
 54718                           
 54719                           ; BSR set to: 1
 54720                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 54721                           
 54722                           ; BSR set to: 1
 54723  012A08  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54724  012A0A  A4D8               	btfss	status,2,c
 54725  012A0C  0012               	return	
 54726                           
 54727                           ; BSR set to: 1
 54728                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 54729  012A0E  0E00               	movlw	0
 54730  012A10  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54731                           
 54732                           ; BSR set to: 1
 54733                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 54734  012A12  EE20 F001          	lfsr	2,1
 54735  012A16  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54736  012A18  26D9               	addwf	fsr2l,f,c
 54737  012A1A  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54738  012A1C  22DA               	addwfc	fsr2h,f,c
 54739  012A1E  0E08               	movlw	8
 54740  012A20  6EDF               	movwf	indf2,c
 54741                           
 54742                           ; BSR set to: 1
 54743                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 54744  012A22  EE20 F002          	lfsr	2,2
 54745  012A26  5151               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 54746  012A28  26D9               	addwf	fsr2l,f,c
 54747  012A2A  5152               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 54748  012A2C  22DA               	addwfc	fsr2h,f,c
 54749  012A2E  0E30               	movlw	48
 54750  012A30  6EDE               	movwf	postinc2,c
 54751  012A32  0E0D               	movlw	13
 54752  012A34  6EDD               	movwf	postdec2,c
 54753                           
 54754                           ; BSR set to: 1
 54755                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 54756  012A36  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54757  012A3A  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54758  012A3E  0E04               	movlw	4
 54759  012A40  6EDF               	movwf	indf2,c
 54760                           
 54761                           ; BSR set to: 1
 54762                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 54763  012A42  C151  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 54764  012A46  C152  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 54765  012A4A  0E00               	movlw	0
 54766  012A4C  8EDB               	bsf	plusw2,7,c
 54767                           
 54768                           ; BSR set to: 1
 54769                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 54770  012A4E  0E01               	movlw	1
 54771  012A50  6F6B               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 54772                           
 54773                           ; BSR set to: 1
 54774                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 54775  012A52  EE20 F001          	lfsr	2,1
 54776  012A56  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54777  012A58  26D9               	addwf	fsr2l,f,c
 54778  012A5A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54779  012A5C  22DA               	addwfc	fsr2h,f,c
 54780  012A5E  0E08               	movlw	8
 54781  012A60  6EDF               	movwf	indf2,c
 54782                           
 54783                           ; BSR set to: 1
 54784                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 54785  012A62  EE20 F002          	lfsr	2,2
 54786  012A66  505C               	movf	_pBDTEntryEP0OutNext,w,c
 54787  012A68  26D9               	addwf	fsr2l,f,c
 54788  012A6A  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 54789  012A6C  22DA               	addwfc	fsr2h,f,c
 54790  012A6E  0E30               	movlw	48
 54791  012A70  6EDE               	movwf	postinc2,c
 54792  012A72  0E0D               	movlw	13
 54793  012A74  6EDD               	movwf	postdec2,c
 54794                           
 54795                           ; BSR set to: 1
 54796                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 54797  012A76  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 54798  012A7A  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 54799  012A7E  0E80               	movlw	128
 54800  012A80  6EDF               	movwf	indf2,c
 54801                           
 54802                           ; BSR set to: 1
 54803                           
 54804                           ; BSR set to: 1
 54805                           
 54806                           ; BSR set to: 1
 54807  012A82  0012               	return	
 54808  012A84                     __end_of_USBCtrlEPAllowStatusStage:
 54809                           	opt stack 0
 54810                           tosu	equ	0xFFF
 54811                           tosh	equ	0xFFE
 54812                           tosl	equ	0xFFD
 54813                           pclatu	equ	0xFFB
 54814                           pclath	equ	0xFFA
 54815                           tblptru	equ	0xFF8
 54816                           tblptrh	equ	0xFF7
 54817                           tblptrl	equ	0xFF6
 54818                           tablat	equ	0xFF5
 54819                           prodh	equ	0xFF4
 54820                           prodl	equ	0xFF3
 54821                           intcon	equ	0xFF2
 54822                           indf0	equ	0xFEF
 54823                           postinc0	equ	0xFEE
 54824                           fsr0h	equ	0xFEA
 54825                           fsr0l	equ	0xFE9
 54826                           wreg	equ	0xFE8
 54827                           indf1	equ	0xFE7
 54828                           postinc1	equ	0xFE6
 54829                           postdec1	equ	0xFE5
 54830                           plusw1	equ	0xFE3
 54831                           fsr1h	equ	0xFE2
 54832                           fsr1l	equ	0xFE1
 54833                           indf2	equ	0xFDF
 54834                           postinc2	equ	0xFDE
 54835                           postdec2	equ	0xFDD
 54836                           plusw2	equ	0xFDB
 54837                           fsr2h	equ	0xFDA
 54838                           fsr2l	equ	0xFD9
 54839                           status	equ	0xFD8
 54840                           
 54841 ;; *************** function _USBCtrlTrfInHandler *****************
 54842 ;; Defined at:
 54843 ;;		line 2594 in file "usb_device.c"
 54844 ;; Parameters:    Size  Location     Type
 54845 ;;		None
 54846 ;; Auto vars:     Size  Location     Type
 54847 ;;  lastDTS         1    1[COMRAM] unsigned char 
 54848 ;; Return value:  Size  Location     Type
 54849 ;;                  1    wreg      void 
 54850 ;; Registers used:
 54851 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 54852 ;; Tracked objects:
 54853 ;;		On entry : 0/0
 54854 ;;		On exit  : 0/0
 54855 ;;		Unchanged: 0/0
 54856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54858 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54860 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54861 ;;Total ram usage:        1 bytes
 54862 ;; Hardware stack levels used:    1
 54863 ;; Hardware stack levels required when called:    1
 54864 ;; This function calls:
 54865 ;;		_USBCtrlTrfTxService
 54866 ;; This function is called by:
 54867 ;;		_USBCtrlEPService
 54868 ;; This function uses a non-reentrant model
 54869 ;;
 54870                           
 54871                           	psect	text232
 54872  012A84                     __ptext232:
 54873                           	opt stack 0
 54874  012A84                     _USBCtrlTrfInHandler:
 54875                           	opt stack 14
 54876                           
 54877                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 54878                           
 54879                           ; BSR set to: 1
 54880                           ;incstack = 0
 54881  012A84  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54882  012A88  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54883  012A8C  0101               	movlb	1	; () banked
 54884  012A8E  0E00               	movlw	0
 54885  012A90  BCDF               	btfsc	indf2,6,c
 54886  012A92  0E01               	movlw	1
 54887  012A94  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 54888                           
 54889                           ; BSR set to: 1
 54890                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 54891  012A96  0E04               	movlw	4
 54892  012A98  191B               	xorwf	_pBDTEntryIn& (0+255),w,b
 54893  012A9A  6F1B               	movwf	_pBDTEntryIn& (0+255),b
 54894  012A9C  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54895  012A9E  6F1C               	movwf	(_pBDTEntryIn+1)& (0+255),b
 54896                           
 54897                           ; BSR set to: 1
 54898                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 54899  012AA0  0E08               	movlw	8
 54900  012AA2  185E               	xorwf	_USBDeviceState,w,c	;volatile
 54901  012AA4  A4D8               	btfss	status,2,c
 54902  012AA6  D00C               	goto	i2l341
 54903                           
 54904                           ; BSR set to: 1
 54905                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 54906  012AA8  010D               	movlb	13	; () banked
 54907  012AAA  5132               	movf	50,w,b	;volatile
 54908  012AAC  0B7F               	andlw	127
 54909  012AAE  010F               	movlb	15	; () banked
 54910  012AB0  6F38               	movwf	56,b	;volatile
 54911                           
 54912                           ; BSR set to: 15
 54913                           ;usb_device.c: 2609: if(UADDR != 0u)
 54914  012AB2  5138               	movf	56,w,b	;volatile
 54915  012AB4  B4D8               	btfsc	status,2,c
 54916  012AB6  D002               	goto	i2l340
 54917                           
 54918                           ; BSR set to: 15
 54919                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 54920  012AB8  0E10               	movlw	16
 54921  012ABA  D001               	goto	L88
 54922  012ABC                     i2l340:
 54923                           
 54924                           ; BSR set to: 15
 54925                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 54926                           
 54927                           ; BSR set to: 15
 54928  012ABC  0E04               	movlw	4
 54929  012ABE                     L88:
 54930  012ABE  6E5E               	movwf	_USBDeviceState,c	;volatile
 54931  012AC0                     i2l341:
 54932                           
 54933                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 54934                           
 54935                           ; BSR set to: 15
 54936                           
 54937                           ; BSR set to: 15
 54938  012AC0  0101               	movlb	1	; () banked
 54939  012AC2  056F               	decf	_controlTransferState& (0+255),w,b	;volatile
 54940  012AC4  A4D8               	btfss	status,2,c
 54941  012AC6  D03B               	goto	i2l342
 54942                           
 54943                           ; BSR set to: 1
 54944                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 54945  012AC8  EE20 F002          	lfsr	2,2
 54946  012ACC  511B               	movf	_pBDTEntryIn& (0+255),w,b
 54947  012ACE  26D9               	addwf	fsr2l,f,c
 54948  012AD0  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 54949  012AD2  22DA               	addwfc	fsr2h,f,c
 54950  012AD4  0E38               	movlw	56
 54951  012AD6  6EDE               	movwf	postinc2,c
 54952  012AD8  0E0D               	movlw	13
 54953  012ADA  6EDD               	movwf	postdec2,c
 54954                           
 54955                           ; BSR set to: 1
 54956                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 54957  012ADC  ECDB  F092         	call	_USBCtrlTrfTxService	;wreg free
 54958                           
 54959                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 54960  012AE0  0E02               	movlw	2
 54961  012AE2  0101               	movlb	1	; () banked
 54962  012AE4  1970               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 54963  012AE6  A4D8               	btfss	status,2,c
 54964  012AE8  D00D               	goto	i2l343
 54965                           
 54966                           ; BSR set to: 1
 54967                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 54968  012AEA  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54969  012AEE  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54970  012AF2  0E04               	movlw	4
 54971  012AF4  6EDF               	movwf	indf2,c
 54972                           
 54973                           ; BSR set to: 1
 54974                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 54975  012AF6  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54976  012AFA  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54977  012AFE  0E00               	movlw	0
 54978  012B00  8EDB               	bsf	plusw2,7,c
 54979                           
 54980                           ;usb_device.c: 2635: }
 54981  012B02  0012               	return	
 54982  012B04                     i2l343:
 54983                           
 54984                           ; BSR set to: 1
 54985                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 54986                           
 54987                           ; BSR set to: 1
 54988  012B04  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 54989  012B06  A4D8               	btfss	status,2,c
 54990  012B08  D00D               	goto	i2l345
 54991                           
 54992                           ; BSR set to: 1
 54993                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 54994  012B0A  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 54995  012B0E  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 54996  012B12  0E48               	movlw	72
 54997  012B14  6EDF               	movwf	indf2,c
 54998                           
 54999                           ; BSR set to: 1
 55000                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55001  012B16  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 55002  012B1A  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55003  012B1E  0E00               	movlw	0
 55004  012B20  8EDB               	bsf	plusw2,7,c
 55005                           
 55006                           ;usb_device.c: 2642: }
 55007  012B22  0012               	return	
 55008  012B24                     i2l345:
 55009                           
 55010                           ; BSR set to: 1
 55011                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 55012                           
 55013                           ; BSR set to: 1
 55014  012B24  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 55015  012B28  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55016  012B2C  0E08               	movlw	8
 55017  012B2E  6EDF               	movwf	indf2,c
 55018                           
 55019                           ; BSR set to: 1
 55020                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55021  012B30  C11B  FFD9         	movff	_pBDTEntryIn,fsr2l
 55022  012B34  C11C  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55023  012B38  0E00               	movlw	0
 55024  012B3A  8EDB               	bsf	plusw2,7,c
 55025                           
 55026                           ; BSR set to: 1
 55027                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 55028                           
 55029                           ; BSR set to: 1
 55030  012B3C  0012               	return	
 55031  012B3E                     i2l342:
 55032                           
 55033                           ; BSR set to: 1
 55034                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 55035  012B3E  BF15               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 55036                           
 55037                           ; BSR set to: 1
 55038                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 55039                           
 55040                           ; BSR set to: 1
 55041                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 55042  012B40  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 55043                           
 55044                           ; BSR set to: 1
 55045                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 55046                           
 55047                           ; BSR set to: 1
 55048  012B42  0E00               	movlw	0
 55049  012B44  6F6F               	movwf	_controlTransferState& (0+255),b	;volatile
 55050  012B46  0012               	return	
 55051  012B48                     __end_of_USBCtrlTrfInHandler:
 55052                           	opt stack 0
 55053                           tosu	equ	0xFFF
 55054                           tosh	equ	0xFFE
 55055                           tosl	equ	0xFFD
 55056                           pclatu	equ	0xFFB
 55057                           pclath	equ	0xFFA
 55058                           tblptru	equ	0xFF8
 55059                           tblptrh	equ	0xFF7
 55060                           tblptrl	equ	0xFF6
 55061                           tablat	equ	0xFF5
 55062                           prodh	equ	0xFF4
 55063                           prodl	equ	0xFF3
 55064                           intcon	equ	0xFF2
 55065                           indf0	equ	0xFEF
 55066                           postinc0	equ	0xFEE
 55067                           fsr0h	equ	0xFEA
 55068                           fsr0l	equ	0xFE9
 55069                           wreg	equ	0xFE8
 55070                           indf1	equ	0xFE7
 55071                           postinc1	equ	0xFE6
 55072                           postdec1	equ	0xFE5
 55073                           plusw1	equ	0xFE3
 55074                           fsr1h	equ	0xFE2
 55075                           fsr1l	equ	0xFE1
 55076                           indf2	equ	0xFDF
 55077                           postinc2	equ	0xFDE
 55078                           postdec2	equ	0xFDD
 55079                           plusw2	equ	0xFDB
 55080                           fsr2h	equ	0xFDA
 55081                           fsr2l	equ	0xFD9
 55082                           status	equ	0xFD8
 55083                           
 55084 ;; *************** function _USBCtrlTrfTxService *****************
 55085 ;; Defined at:
 55086 ;;		line 1773 in file "usb_device.c"
 55087 ;; Parameters:    Size  Location     Type
 55088 ;;		None
 55089 ;; Auto vars:     Size  Location     Type
 55090 ;;  byteToSend      1    0[COMRAM] unsigned char 
 55091 ;; Return value:  Size  Location     Type
 55092 ;;                  1    wreg      void 
 55093 ;; Registers used:
 55094 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 55095 ;; Tracked objects:
 55096 ;;		On entry : 0/0
 55097 ;;		On exit  : 0/0
 55098 ;;		Unchanged: 0/0
 55099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55101 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55103 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55104 ;;Total ram usage:        1 bytes
 55105 ;; Hardware stack levels used:    1
 55106 ;; This function calls:
 55107 ;;		Nothing
 55108 ;; This function is called by:
 55109 ;;		_USBCtrlEPAllowDataStage
 55110 ;;		_USBCtrlTrfInHandler
 55111 ;; This function uses a non-reentrant model
 55112 ;;
 55113                           
 55114                           	psect	text233
 55115  0125B6                     __ptext233:
 55116                           	opt stack 0
 55117  0125B6                     _USBCtrlTrfTxService:
 55118                           	opt stack 12
 55119                           
 55120                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 55121                           
 55122                           ; BSR set to: 1
 55123                           ;incstack = 0
 55124  0125B6  0E08               	movlw	8
 55125  0125B8  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 55126                           
 55127                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 55128  0125BA  5057               	movf	_inPipes+5,w,c	;volatile
 55129  0125BC  E111               	bnz	i2l12841
 55130  0125BE  0E08               	movlw	8
 55131  0125C0  5C56               	subwf	_inPipes+4,w,c	;volatile
 55132  0125C2  B0D8               	btfsc	status,0,c
 55133  0125C4  D00D               	goto	i2l247
 55134                           
 55135                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 55136  0125C6  C056  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 55137                           
 55138                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 55139  0125CA  0101               	movlb	1	; () banked
 55140  0125CC  5170               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 55141  0125CE  A4D8               	btfss	status,2,c
 55142  0125D0  D002               	goto	i2l245
 55143                           
 55144                           ; BSR set to: 1
 55145                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 55146  0125D2  0E01               	movlw	1
 55147  0125D4  D004               	goto	L89
 55148  0125D6                     i2l245:
 55149                           
 55150                           ; BSR set to: 1
 55151                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 55152                           
 55153                           ; BSR set to: 1
 55154  0125D6  0570               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 55155  0125D8  A4D8               	btfss	status,2,c
 55156  0125DA  D002               	goto	i2l247
 55157                           
 55158                           ; BSR set to: 1
 55159                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 55160  0125DC  0E02               	movlw	2
 55161  0125DE                     L89:
 55162  0125DE  6F70               	movwf	_shortPacketStatus& (0+255),b	;volatile
 55163  0125E0                     i2l247:
 55164  0125E0                     i2l12841:
 55165                           
 55166                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 55167  0125E0  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55168  0125E2  5E56               	subwf	_inPipes+4,f,c	;volatile
 55169  0125E4  0E00               	movlw	0
 55170  0125E6  5A57               	subwfb	_inPipes+5,f,c	;volatile
 55171                           
 55172                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 55173  0125E8  0101               	movlb	1	; () banked
 55174  0125EA  EE20 F001          	lfsr	2,1
 55175  0125EE  511B               	movf	_pBDTEntryIn& (0+255),w,b
 55176  0125F0  26D9               	addwf	fsr2l,f,c
 55177  0125F2  511C               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 55178  0125F4  22DA               	addwfc	fsr2h,f,c
 55179  0125F6  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 55180                           
 55181                           ; BSR set to: 1
 55182                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 55183  0125FA  0E38               	movlw	56
 55184  0125FC  6F4F               	movwf	_pDst& (0+255),b
 55185  0125FE  0E0D               	movlw	13
 55186  012600  6F50               	movwf	(_pDst+1)& (0+255),b
 55187                           
 55188                           ; BSR set to: 1
 55189                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 55190  012602  A055               	btfss	_inPipes+3,0,c	;volatile
 55191  012604  D01D               	goto	i2l249
 55192  012606  D03C               	goto	i2l253
 55193  012608                     
 55194                           ; BSR set to: 1
 55195                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 55196                           
 55197                           ; BSR set to: 1
 55198  012608  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 55199  01260C  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 55200  012610  0E00               	movlw	low (__mediumconst shr (0+16))
 55201  012612  6EF8               	movwf	tblptru,c
 55202  012614  C14F  FFD9         	movff	_pDst,fsr2l
 55203  012618  C150  FFDA         	movff	_pDst+1,fsr2h
 55204  01261C  0E0E               	movlw	(high __ramtop+-1)
 55205  01261E  64F7               	cpfsgt	tblptrh,c
 55206  012620  D003               	bra	i2u1114_47
 55207  012622  0008               	tblrd		*
 55208  012624  50F5               	movf	tablat,w,c
 55209  012626  D005               	bra	i2u1114_40
 55210  012628                     i2u1114_47:
 55211  012628  CFF6 FFE9          	movff	tblptrl,fsr0l
 55212  01262C  CFF7 FFEA          	movff	tblptrh,fsr0h
 55213  012630  50EF               	movf	indf0,w,c
 55214  012632                     i2u1114_40:
 55215  012632  6EDF               	movwf	indf2,c
 55216  012634  4A52               	infsnz	_inPipes,f,c	;volatile
 55217  012636  2A53               	incf	_inPipes+1,f,c	;volatile
 55218  012638  0101               	movlb	1	; () banked
 55219  01263A  4B4F               	infsnz	_pDst& (0+255),f,b
 55220  01263C  2B50               	incf	(_pDst+1)& (0+255),f,b
 55221                           
 55222                           ; BSR set to: 1
 55223                           ;usb_device.c: 1816: byteToSend--;
 55224  01263E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 55225  012640                     i2l249:
 55226                           
 55227                           ; BSR set to: 1
 55228                           
 55229                           ; BSR set to: 1
 55230  012640  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55231  012642  B4D8               	btfsc	status,2,c
 55232  012644  0012               	return	
 55233  012646  D7E0               	goto	i2l250
 55234  012648                     
 55235                           ; BSR set to: 1
 55236                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 55237                           
 55238                           ; BSR set to: 1
 55239  012648  C052  FFF6         	movff	_inPipes,tblptrl	;volatile
 55240  01264C  C053  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 55241  012650  0E00               	movlw	low (__mediumconst shr (0+16))
 55242  012652  6EF8               	movwf	tblptru,c
 55243  012654  C14F  FFD9         	movff	_pDst,fsr2l
 55244  012658  C150  FFDA         	movff	_pDst+1,fsr2h
 55245  01265C  0E0E               	movlw	(high __ramtop+-1)
 55246  01265E  64F7               	cpfsgt	tblptrh,c
 55247  012660  D003               	bra	i2u1116_47
 55248  012662  0008               	tblrd		*
 55249  012664  50F5               	movf	tablat,w,c
 55250  012666  D005               	bra	i2u1116_40
 55251  012668                     i2u1116_47:
 55252  012668  CFF6 FFE9          	movff	tblptrl,fsr0l
 55253  01266C  CFF7 FFEA          	movff	tblptrh,fsr0h
 55254  012670  50EF               	movf	indf0,w,c
 55255  012672                     i2u1116_40:
 55256  012672  6EDF               	movwf	indf2,c
 55257  012674  4A52               	infsnz	_inPipes,f,c	;volatile
 55258  012676  2A53               	incf	_inPipes+1,f,c	;volatile
 55259  012678  0101               	movlb	1	; () banked
 55260  01267A  4B4F               	infsnz	_pDst& (0+255),f,b
 55261  01267C  2B50               	incf	(_pDst+1)& (0+255),f,b
 55262                           
 55263                           ; BSR set to: 1
 55264                           ;usb_device.c: 1824: byteToSend--;
 55265  01267E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 55266  012680                     i2l253:
 55267                           
 55268                           ; BSR set to: 1
 55269                           
 55270                           ; BSR set to: 1
 55271  012680  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55272  012682  B4D8               	btfsc	status,2,c
 55273  012684  0012               	return	
 55274  012686  D7E0               	goto	i2l254
 55275  012688                     __end_of_USBCtrlTrfTxService:
 55276                           	opt stack 0
 55277                           tosu	equ	0xFFF
 55278                           tosh	equ	0xFFE
 55279                           tosl	equ	0xFFD
 55280                           pclatu	equ	0xFFB
 55281                           pclath	equ	0xFFA
 55282                           tblptru	equ	0xFF8
 55283                           tblptrh	equ	0xFF7
 55284                           tblptrl	equ	0xFF6
 55285                           tablat	equ	0xFF5
 55286                           prodh	equ	0xFF4
 55287                           prodl	equ	0xFF3
 55288                           intcon	equ	0xFF2
 55289                           indf0	equ	0xFEF
 55290                           postinc0	equ	0xFEE
 55291                           fsr0h	equ	0xFEA
 55292                           fsr0l	equ	0xFE9
 55293                           wreg	equ	0xFE8
 55294                           indf1	equ	0xFE7
 55295                           postinc1	equ	0xFE6
 55296                           postdec1	equ	0xFE5
 55297                           plusw1	equ	0xFE3
 55298                           fsr1h	equ	0xFE2
 55299                           fsr1l	equ	0xFE1
 55300                           indf2	equ	0xFDF
 55301                           postinc2	equ	0xFDE
 55302                           postdec2	equ	0xFDD
 55303                           plusw2	equ	0xFDB
 55304                           fsr2h	equ	0xFDA
 55305                           fsr2l	equ	0xFD9
 55306                           status	equ	0xFD8
 55307                           tosu	equ	0xFFF
 55308                           tosh	equ	0xFFE
 55309                           tosl	equ	0xFFD
 55310                           pclatu	equ	0xFFB
 55311                           pclath	equ	0xFFA
 55312                           tblptru	equ	0xFF8
 55313                           tblptrh	equ	0xFF7
 55314                           tblptrl	equ	0xFF6
 55315                           tablat	equ	0xFF5
 55316                           prodh	equ	0xFF4
 55317                           prodl	equ	0xFF3
 55318                           intcon	equ	0xFF2
 55319                           indf0	equ	0xFEF
 55320                           postinc0	equ	0xFEE
 55321                           fsr0h	equ	0xFEA
 55322                           fsr0l	equ	0xFE9
 55323                           wreg	equ	0xFE8
 55324                           indf1	equ	0xFE7
 55325                           postinc1	equ	0xFE6
 55326                           postdec1	equ	0xFE5
 55327                           plusw1	equ	0xFE3
 55328                           fsr1h	equ	0xFE2
 55329                           fsr1l	equ	0xFE1
 55330                           indf2	equ	0xFDF
 55331                           postinc2	equ	0xFDE
 55332                           postdec2	equ	0xFDD
 55333                           plusw2	equ	0xFDB
 55334                           fsr2h	equ	0xFDA
 55335                           fsr2l	equ	0xFD9
 55336                           status	equ	0xFD8
 55337                           
 55338                           	psect	text234
 55339  000000                     __ptext234:
 55340                           	opt stack 0
 55341                           tosu	equ	0xFFF
 55342                           tosh	equ	0xFFE
 55343                           tosl	equ	0xFFD
 55344                           pclatu	equ	0xFFB
 55345                           pclath	equ	0xFFA
 55346                           tblptru	equ	0xFF8
 55347                           tblptrh	equ	0xFF7
 55348                           tblptrl	equ	0xFF6
 55349                           tablat	equ	0xFF5
 55350                           prodh	equ	0xFF4
 55351                           prodl	equ	0xFF3
 55352                           intcon	equ	0xFF2
 55353                           indf0	equ	0xFEF
 55354                           postinc0	equ	0xFEE
 55355                           fsr0h	equ	0xFEA
 55356                           fsr0l	equ	0xFE9
 55357                           wreg	equ	0xFE8
 55358                           indf1	equ	0xFE7
 55359                           postinc1	equ	0xFE6
 55360                           postdec1	equ	0xFE5
 55361                           plusw1	equ	0xFE3
 55362                           fsr1h	equ	0xFE2
 55363                           fsr1l	equ	0xFE1
 55364                           indf2	equ	0xFDF
 55365                           postinc2	equ	0xFDE
 55366                           postdec2	equ	0xFDD
 55367                           plusw2	equ	0xFDB
 55368                           fsr2h	equ	0xFDA
 55369                           fsr2l	equ	0xFD9
 55370                           status	equ	0xFD8
 55371                           
 55372                           	psect	rparam
 55373  0000                     tosu	equ	0xFFF
 55374                           tosh	equ	0xFFE
 55375                           tosl	equ	0xFFD
 55376                           pclatu	equ	0xFFB
 55377                           pclath	equ	0xFFA
 55378                           tblptru	equ	0xFF8
 55379                           tblptrh	equ	0xFF7
 55380                           tblptrl	equ	0xFF6
 55381                           tablat	equ	0xFF5
 55382                           prodh	equ	0xFF4
 55383                           prodl	equ	0xFF3
 55384                           intcon	equ	0xFF2
 55385                           indf0	equ	0xFEF
 55386                           postinc0	equ	0xFEE
 55387                           fsr0h	equ	0xFEA
 55388                           fsr0l	equ	0xFE9
 55389                           wreg	equ	0xFE8
 55390                           indf1	equ	0xFE7
 55391                           postinc1	equ	0xFE6
 55392                           postdec1	equ	0xFE5
 55393                           plusw1	equ	0xFE3
 55394                           fsr1h	equ	0xFE2
 55395                           fsr1l	equ	0xFE1
 55396                           indf2	equ	0xFDF
 55397                           postinc2	equ	0xFDE
 55398                           postdec2	equ	0xFDD
 55399                           plusw2	equ	0xFDB
 55400                           fsr2h	equ	0xFDA
 55401                           fsr2l	equ	0xFD9
 55402                           status	equ	0xFD8
 55403                           
 55404                           	psect	temp
 55405  00005F                     btemp:
 55406                           	opt stack 0
 55407  00005F                     	ds	1
 55408  0000                     int$flags	set	btemp
 55409  0000                     wtemp8	set	btemp+1
 55410  0000                     ttemp5	set	btemp+1
 55411  0000                     ttemp6	set	btemp+4
 55412  0000                     ttemp7	set	btemp+8
 55413                           tosu	equ	0xFFF
 55414                           tosh	equ	0xFFE
 55415                           tosl	equ	0xFFD
 55416                           pclatu	equ	0xFFB
 55417                           pclath	equ	0xFFA
 55418                           tblptru	equ	0xFF8
 55419                           tblptrh	equ	0xFF7
 55420                           tblptrl	equ	0xFF6
 55421                           tablat	equ	0xFF5
 55422                           prodh	equ	0xFF4
 55423                           prodl	equ	0xFF3
 55424                           intcon	equ	0xFF2
 55425                           indf0	equ	0xFEF
 55426                           postinc0	equ	0xFEE
 55427                           fsr0h	equ	0xFEA
 55428                           fsr0l	equ	0xFE9
 55429                           wreg	equ	0xFE8
 55430                           indf1	equ	0xFE7
 55431                           postinc1	equ	0xFE6
 55432                           postdec1	equ	0xFE5
 55433                           plusw1	equ	0xFE3
 55434                           fsr1h	equ	0xFE2
 55435                           fsr1l	equ	0xFE1
 55436                           indf2	equ	0xFDF
 55437                           postinc2	equ	0xFDE
 55438                           postdec2	equ	0xFDD
 55439                           plusw2	equ	0xFDB
 55440                           fsr2h	equ	0xFDA
 55441                           fsr2l	equ	0xFD9
 55442                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1563
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      94
    BANK0           160    158     160
    BANK1           256     60     255
    BANK2           256      0     214
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), os.current_position_in_degrees(BANK1[2]), dc_divide2(CODE[80]), 
		 -> dc_divide1(CODE[80]), dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), 
		 -> dc_startup(BANK4[80]), os.current_position_in_steps(BANK1[4]), config(BANK1[28]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[48]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 4
		 -> i2c_eeprom_readUint32@data(BANK0[4]), i2c_eeprom_readUint16@data(COMRAM[2]), i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _motor_isr->_i2c_eeprom_writeUint32
    _i2c_eeprom_writeUint32->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _i2c_eeprom_readUint32->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    _fat_format->_flash_sector_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->_atol
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_nonzero_steps_from_degrees->_motor_steps_from_degrees
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_go_to_steps_position
    _motor_divide_jump->_motor_go_to_steps_position
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_schedule_command
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___flneg->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_short
    __parse_command_short->_motor_go_to_steps_position
    _motor_set_zero->_motor_schedule_command
    _motor_go_to_steps_position->_motor_schedule_command
    __parse_command_long->__parse_jump_steps
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps->_motor_schedule_command
    _motor_schedule_command->__motor_run
    __motor_run->_motor_steps_from_degrees
    _motor_steps_from_degrees->___fldiv
    _motor_steps_from_degrees->___flmul
    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    ___flmul->___xxtofl
    ___fldiv->___xxtofl

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  879645
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  378508
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
              _i2c_eeprom_readUint32
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readUint32                                8     4      4    3272
                                             25 BANK0      8     4      4
                    _i2c_eeprom_read
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3113
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   11368
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11146
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25475
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6769
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18706
                                             36 BANK0      2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   16444
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   10287
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  231174
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75530
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   83178
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35708
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6260
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   80164
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   13915
                                             26 BANK0      4     0      4
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1700
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0   17416
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  189437
                                            111 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
         _motor_go_to_steps_position
        _motor_increase_manual_speed
   _motor_nonzero_steps_from_degrees
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_nonzero_steps_from_degrees                     8     4      4    8696
                                             47 BANK0      8     4      4
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   43422
                                            101 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   32663
                                            101 BANK0      7     7      0
__step_position_from_divide_position
         _motor_go_to_steps_position
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    8339
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       9     9      0   31650
                                             73 BANK0      9     9      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   43870
                                             92 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    6589
                                             51 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    6389
                                             39 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     778
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             77 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             53 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0    8400
                                             39 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     134
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2644
                                             18 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  113120
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  113120
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  108320
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   54911
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53205
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24547
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17375
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17030
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0  117059
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   16518
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    7690
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7007
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   97540
                                            102 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   71207
                                            101 BANK0      1     1      0
            _motor_clear_command_cue
         _motor_go_to_steps_position
             _motor_schedule_command
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0   23510
                                             73 BANK0      1     1      0
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (2) _motor_go_to_steps_position                          28    24      4   24209
                                             73 BANK0     28    24      4
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   25587
                                             85 BANK0      7     1      6
                  __parse_jump_steps
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6   24073
                                             73 BANK0     12     6      6
             _motor_schedule_command
 ---------------------------------------------------------------------------------
 (3) _motor_schedule_command                               8     1      7   23466
                                             65 BANK0      8     1      7
                         __motor_run
                 _motor_items_in_cue
   _motor_nonzero_steps_from_degrees (ARG)
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          18    11      7   17416
                                             47 BANK0     18    11      7
_motor_calculate_position_in_degrees
           _motor_steps_from_degrees
 ---------------------------------------------------------------------------------
 (3) _motor_steps_from_degrees                             8     4      4    8450
                                             39 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    8139
                                             39 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    1746
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     941
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    2864
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2519
                                             14 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   55930
                                             67 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    1308
                                             43 COMRAM    24    24      0
             _i2c_eeprom_writeUint32
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_writeUint32                              6     0      6    1217
                                             37 COMRAM     6     0      6
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5     994
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_go_to_steps_position
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
         _motor_set_zero
           _motor_schedule_command
             __motor_run
               _motor_calculate_position_in_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
             _motor_items_in_cue
             _motor_nonzero_steps_from_degrees (ARG)
               _motor_steps_from_degrees
                 ___fldiv
                   ___xxtofl (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                 ___fltol
                 ___xxtofl
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___flneg
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___fltol
           ___lmul
           ___xxtofl
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___fltol
             ___lmul
             ___xxtofl
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___fltol
         ___lmul
         ___xxtofl
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_go_to_steps_position
         _motor_schedule_command
           __motor_run
             _motor_calculate_position_in_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
           _motor_items_in_cue
           _motor_nonzero_steps_from_degrees (ARG)
             _motor_steps_from_degrees
               ___fldiv
                 ___xxtofl (ARG)
               ___flmul
                 ___xxtofl (ARG)
               ___fltol
               ___xxtofl
     _motor_go_to_steps_position
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_nonzero_steps_from_degrees
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_schedule_command
       __motor_run
         _motor_calculate_position_in_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
       _motor_items_in_cue
       _motor_nonzero_steps_from_degrees (ARG)
         _motor_steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
           ___flmul
             ___xxtofl (ARG)
           ___fltol
           ___xxtofl
     _motor_set_zero
       _motor_schedule_command
         __motor_run
           _motor_calculate_position_in_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
         _motor_items_in_cue
         _motor_nonzero_steps_from_degrees (ARG)
           _motor_steps_from_degrees
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___xxtofl (ARG)
             ___fltol
             ___xxtofl
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
     ___flmul
       ___xxtofl (ARG)
     ___fltol
     ___xxtofl
   _motor_process_cue
     __motor_run
       _motor_calculate_position_in_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
       _motor_steps_from_degrees
         ___fldiv
           ___xxtofl (ARG)
         ___flmul
           ___xxtofl (ARG)
         ___fltol
         ___xxtofl
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_readUint32
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___xxtofl (ARG)
       ___fltol
       ___xxtofl
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_writeUint32
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C      FF       7       99.6%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3E3      31        0.0%
DATA                 0      0     7E3       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Jan 01 23:47:33 2020

                           __end_of_fat_read_from_file 1DF2  
                               _motor_next_speed_check 0226  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0086  
                                         ___fldiv@bexp 0085  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 007E  
               motor_calculate_position_in_degrees@tmp 0087  
                                  __system_timer0_init 5590  
                      __size_of_configFile_readDefault 0064  
                            __end_of_motor_divide_jump 31A2  
                              configFile_read@position 01FB  
                                                   _os 0171  
                                        _USBDeviceInit FEEC  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 24E0  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 5536  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 5508  
                                     __i2c_eeprom_busy 5690  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 1B38  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 1378  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                  l206 543E  
                                                  l207 543C  
                                                  l145 FF36  
                                                  l147 FF5E  
                                                  l149 FF98  
                          __end_of_USBStdGetDscHandler 08DC  
                                                  l184 1084  
                                                  l192 0FC2  
                                                  l186 10AE  
                                                  l602 E5CA  
                                                  l188 112C  
                                                  l700 D8F8  
                                                  l620 4334  
                                                  l612 07A6  
                                                  l701 D638  
                                                  l613 07A0  
                                                  l605 E5D2  
                                                  l710 D738  
                                                  l630 C15E  
                                                  l622 4350  
                                                  l703 D91C  
                                                  l711 D7A6  
                                                  l631 BDBE  
                                                  l615 07AA  
                                                  l720 D8DE  
                                                  l712 D7A2  
                                                  l704 D6E4  
                                                  l640 BF02  
                                                  l624 435C  
                                                  l608 06FA  
                                                  l641 BF0C  
                                                  l625 4362  
                                                  l714 D7BA  
                                                  l706 D6EA  
                                                  l650 C004  
                                                  l642 BF30  
                                                  l634 BDCE  
                                                  l626 4368  
                                                  l570 E5EA  
                                                  l731 0B88  
                                                  l715 D83E  
                                                  l707 D6F6  
                                                  l619 4370  
                                                  l571 E3AE  
                                                  l708 D714  
                                                  l660 C0AA  
                                                  l652 C03A  
                                                  l644 BF60  
                                                  l636 BDDE  
                                                  l580 E4C0  
                                                  l900 46FA  
                                                  l709 D760  
                                                  l661 C0BE  
                                                  l637 BDE8  
                                                  l734 0B94  
                                                  l726 0B32  
                                                  l718 D8AE  
                                                  l670 C156  
                                                  l662 C0E6  
                                                  l654 C056  
                                                  l646 BFA0  
                                                  l582 E4D8  
                                                  l735 0BBC  
                                                  l719 D8C6  
                                                  l639 BE3C  
                                                  l591 E54C  
                                                  l575 E3D2  
                                                  l728 0B4A  
                                                  l664 C11A  
                                                  l656 C06E  
                                                  l592 E550  
                                                  l904 470C  
                                                  l753 0C26  
                                                  l737 0BF8  
                                                  l681 F250  
                                                  l665 C0EE  
                                                  l649 BFD8  
                                                  l593 E576  
                                                  l577 E4FE  
                                                  l770 0AAC  
                                                  l738 0BDE  
                                                  l690 F166  
                                                  l682 F092  
                                                  l666 C100  
                                                  l578 E4E4  
                                                  l586 E608  
                                                  l906 4718  
                                                  l675 2B94  
                                                  l763 0AF6  
                                                  l771 0AE8  
                                                  l747 0C06  
                                                  l691 F190  
                                                  l667 C116  
                                                  l587 E51E  
                                                  l579 E4B6  
                                                  l764 0A60  
                                                  l684 F274  
                                                  l692 F1BE  
                                                  _BDT 000D00  
                                                  l677 2BB0  
                                                  l757 0A34  
                                                  l749 0C14  
                                                  l693 F1D0  
                                                  l685 F0EC  
                                                  l589 E52A  
                                                  l950 32B8  
                                                  l766 0A68  
                                                  l694 F1D6  
                                                  l686 F0F8  
                                                  l862 3620  
                                                  l767 0A76  
                                                  l695 F1EA  
                                                  l687 F102  
                                                  l871 3662  
                                                  l863 363A  
                                                  l944 3254  
                                                  l768 0A8A  
                                                  l696 F238  
                                                  l688 F116  
                                                  l872 3666  
                                                  l769 0A98  
                                                  l873 366C  
                                                  l867 3672  
                                                  l869 3694  
                                                  l897 472A  
                                                  l986 5996  
                                                  l898 46EE  
                                                  _LBA 012B  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0289  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 00A9  
                                   api_prepare@command 0074  
                                           _USBSuspend 54D8  
                               __end_of_display_update 52D8  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks 0038  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005E  
                                         ___flmul@aexp 007F  
                                         ___flmul@bexp 0080  
                                         ?__write_root 0088  
                              __parse_item@item_string 007A  
                                         ___flmul@sign 007A  
                                         ___flmul@temp 0085  
                                         ___flmul@prod 0081  
                            __size_of_i2c_display_init 0050  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0146  
                             USBEnableEndpoint@options 0009  
                                    __find_nth_cluster 32F4  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 4800  
                                                 l2001 4804  
                                                 l2002 4808  
                                                 l2003 480C  
                                                 l2011 F7EA  
                                                 l2004 4810  
                                                 l2020 F86E  
                                                 l1141 5A4C  
                                                 l2021 F872  
                                                 l2013 F822  
                                                 l1213 4A28  
                                                 l1310 4ED8  
                                                 l1126 5A54  
                                                 l2030 F896  
                                                 l2022 F876  
                                                 l2015 F8B2  
                                                 l2031 F89A  
                                                 l2023 F87A  
                                                 l1135 5A1A  
                                                 l1312 4EE4  
                                                 l1320 1F82  
                                                 l1400 A460  
                                                 l2040 560E  
                                                 l2032 F89E  
                                                 l2024 F87E  
                                                 l2016 F85E  
                                                 l1321 1F52  
                                                 l1401 A47E  
                                                 l2033 F8A2  
                                                 l2025 F882  
                                                 l2017 F862  
                                                 l2009 F7DC  
                                                 l1153 5A12  
                                                 l1410 A560  
                                                 l1402 A4C2  
                                                 l2034 F8A6  
                                                 l2026 F886  
                                                 l2018 F866  
                                                 l2050 3040  
                                                 l1082 1B2E  
                                                 l1331 EB44  
                                                 l1411 A5D0  
                                                 l1243 4AF8  
                                                 l2035 F8AA  
                                                 l2027 F88A  
                                                 l2019 F86A  
                                                 l1147 5A26  
                                                 l2300 FAFA  
                                                 l1420 A740  
                                                 l1412 A5A0  
                                                 l1404 A510  
                                                 l1244 4ADA  
                                                 l2036 F8AE  
                                                 l2028 F88E  
                                                 l1164 380A  
                                                 l2301 FB02  
                                                 l1341 EBB4  
                                                 l1317 1F24  
                                                 l3013 3AC4  
                                                 l2037 F93E  
                                                 l2029 F892  
                                                 l1165 37EC  
                                                 l2310 FB5A  
                                                 l2302 FB0A  
                                                 l1342 EBC8  
                                                 l1318 1F0E  
                                                 l1326 5004  
                                                 l1430 A8C6  
                                                 l1422 A816  
                                                 l1414 A654  
                                                 l1406 A54C  
                                                 l3014 3AB8  
                                                 l1158 4D36  
                                                 l2046 2FEC  
                                                 l2303 FB12  
                                                 l1343 EC28  
                                                 l1335 EB1C  
                                                 l1431 A896  
                                                 l1423 A7E6  
                                                 l1407 A538  
                                                 l1159 4D18  
                                                 l2320 43FE  
                                                 l2312 FB8C  
                                                 l2304 FB36  
                                                 l2240 1FF8  
                                                 l1344 EBE2  
                                                 l1336 EB3A  
                                                 l1440 A9B2  
                                                 l1416 A6E2  
                                                 l2080 3E0C  
                                                 l2321 4454  
                                                 l2305 FB3C  
                                                 l2241 200C  
                                                 l1345 EC26  
                                                 l1353 0C86  
                                                 l1441 AA0C  
                                                 l1433 A924  
                                                 l1425 A82E  
                                                 l1417 A6B2  
                                                 l1409 A542  
                                                 l3017 3AF8  
                                                 l1249 3CC0  
                                                 l2322 441C  
                                                 l2314 FBBE  
                                                 l2306 FB42  
                                                 l2242 2020  
                                                 l1530 499C  
                                                 l1338 EBD0  
                                                 l1450 AB50  
                                                 l1442 A9BE  
                                                 l1426 A85C  
                                                 l3018 3B06  
                                                 l1362 2E96  
                                                 l1522 4016  
                                                 l2411 1E0E  
                                                 l2307 FB48  
                                                 l2251 0948  
                                                 l2243 202E  
                                                 l1531 4958  
                                                 l1347 EC62  
                                                 l1443 AA66  
                                                 l1435 A960  
                                                 l1427 A84C  
                                                 l1419 A770  
                                                 l1523 403A  
                                                 l2420 2172  
                                                 l2308 FB4E  
                                                 l2236 206E  
                                                 l2244 204E  
                                                 l2172 47EE  
                                                 l1348 EC32  
                                                 l1460 AC62  
                                                 l1452 AB98  
                                                 l1444 AA36  
                                                 l1436 A930  
                                                 l1428 A86C  
                                                 l1540 464A  
                                                 l1364 2EB6  
                                                 l2164 5124  
                                                 l2309 FB54  
                                                 l2253 094E  
                                                 l1533 4982  
                                                 l2181 3976  
                                                 l3061 28BE  
                                                 l1461 ACA0  
                                                 l1453 AC0A  
                                                 l1429 A854  
                                                 l1381 A35E  
                                                 l1541 4654  
                                                 l2165 5100  
                                                 l2326 FD00  
                                                 l2190 35FE  
                                                 l3062 28CC  
                                                 l3054 2844  
                                                 l3070 309A  
                                                 l1462 AD68  
                                                 l1454 ABDA  
                                                 l1446 AB0C  
                                                 l1438 A994  
                                                 l1390 A3E8  
                                                 l2078 3DA6  
                                                 l1366 2ED6  
                                                 l2166 5134  
                                                 l2319 443E  
                                                 l2255 09C6  
                                                 l2271 2E0C  
                                                 l2239 1FEA  
                                                 l1551 3D72  
                                                 l3063 28E2  
                                                 l3055 285C  
                                                 l3071 308E  
                                                 l1471 AE86  
                                                 l1463 AD30  
                                                 l1447 AAD4  
                                                 l1439 A9FC  
                                                 l1383 A368  
                                                 l2415 4EB8  
                                                 l1359 2E76  
                                                 l2167 5112  
                                                 l2328 FD9A  
                                                 l2256 0968  
                                                 l2248 08FA  
                                                 l2272 2DD6  
                                                 l1376 AF1C  
                                                 l1456 AC38  
                                                 l2441 2932  
                                                 l2257 09FC  
                                                 l2273 2DE2  
                                                 l1553 3D92  
                                                 l3057 288A  
                                                 l1473 AEB0  
                                                 l1465 ADDC  
                                                 l1457 ACDE  
                                                 l1449 AB80  
                                                 l1385 AF78  
                                                 l1377 A334  
                                                 l2522 4DB2  
                                                 l2338 3B98  
                                                 l2258 0980  
                                                 l2282 F498  
                                                 l2178 3940  
                                                 l3250 5496  
                                                 l3058 287E  
                                                 l3074 30C2  
                                                 l1466 ADAC  
                                                 l1458 AC56  
                                                 l1386 A392  
                                                 l1378 A372  
                                                 l2443 2940  
                                                 l2259 099C  
                                                 l2267 2D92  
                                                 l2187 35C0  
                                                 l3075 30D0  
                                                 l3067 3068  
                                                 l1475 AEDC  
                                                 l1459 ACF4  
                                                 l1387 A3DC  
                                                 l1379 A354  
                                                 l2460 C584  
                                                 l2524 4DCE  
                                                 l2540 D568  
                                                 l2284 F4AA  
                                                 l1548 3D30  
                                                 l3076 30E6  
                                                 l3068 307C  
                                                 l1468 AE4E  
                                                 l1396 A436  
                                                 l2620 3F1C  
                                                 l1900 1388  
                           USBConfigureEndpoint@handle 0007  
                                                 l2461 C594  
                                                 l2525 4DD6  
                                                 l2293 FBD6  
                                                 l2269 2DCC  
                                                 l1581 57E4  
                                                 l1549 3D3A  
                                                 l1477 AEEA  
                                                 l1469 AE78  
                                                 l1397 A46A  
                                                 l1389 A418  
                                                 l2621 3F26  
                                                 l2701 B086  
                                                 l1741 4588  
                                                 l1485 52AE  
                                                 l2470 C748  
                                                 l2294 FAD2  
                                                 l2286 F528  
                                                 l3502 D114  
                                                 l1398 A456  
                                                 l2630 5516  
                                                 l2622 3F30  
                                                 l2702 B096  
                                                 l1806 413C  
                                                 l1814 564A  
                                                 l1910 E686  
                                                 l1902 1398  
                                                 l2463 C5DC  
                                                 l2535 D3BC  
                                                 l2279 F5B8  
                                                 l1575 4758  
                                                 l1567 4C18  
                                                 l3503 D0F2  
                                                 l1479 AF14  
                                                 l2631 551A  
                                                 l2711 B130  
                                                 l1743 45C2  
                                                 l1911 E81E  
                                                 l1903 1454  
                                                 l2480 C7DA  
                                                 l2544 D5E6  
                                                 l2536 D40A  
                                                 l2296 FADA  
                                                 l1576 4762  
                                                 l1568 4C22  
                                                 l3512 D15A  
                                                 l3504 D100  
                                                 l2640 3F96  
                                                 l2616 3F3A  
                                                 l2552 3144  
                                                 l2720 B7FC  
                                                 l1808 4194  
                                                 l1816 565C  
                                                 l1760 280C  
                                                 l1912 E70C  
                                                 l1904 144C  
                                                 l3601 CF4C  
                                                 l3281 2224  
                                                 l3273 2194  
                                                 l2481 C842  
                                                 l2473 C76A  
                                                 l2465 C64A  
                                                 l2537 D4A6  
                                                 l2297 FAE2  
                                                 l2289 F582  
                                                 l1681 5362  
                                                 l3521 D22C  
                                                 l3513 D15E  
                                                 l3505 D104  
                                                 l2641 3FA0  
                                                 l2617 3F06  
                                                 l2801 B63E  
                                                 l2713 B156  
                                                 l2705 B0C8  
                                                 l1833 1D08  
                                                 l1913 E734  
                                                 l1921 268E  
                                                 l3602 CF6A  
                                                 l3282 2218  
                                                 l2482 C86C  
                                                 l2474 C772  
                                                 l2466 C67E  
                                                 l2538 D4F4  
                                                 l2298 FAEA  
                                                 l3530 D26C  
                                                 l2650 4066  
                                                 l2626 551E  
                                                 l2810 B6C6  
                                                 l2802 B652  
                                                 l2722 B23E  
                                                 l2730 B234  
                                                 l2714 B166  
                                                 l1842 1CF2  
                                                 l1762 2816  
                                                 l1914 E7DC  
                                                 l1930 26B2  
                                                 l1922 2692  
                                                 l3275 2200  
                                                 l2475 C7CC  
                                                 l2539 D5B8  
                                                 l2299 FAF2  
                                                 l3523 D242  
                                                 l2635 3FAA  
                                                 l2627 550E  
                                                 l2619 3F12  
                                                 l2555 3168  
                                                 l2723 B1E4  
                                                 l2707 B0EE  
                                                 l1851 0438  
                                                 l1931 26B6  
                                                 l1923 2696  
                                                 l3604 CF8E  
                                                 l3284 2240  
                                                 l3276 21F0  
                                                 l2468 C6C6  
                                                 l3516 D1F8  
                                                 l3508 D170  
                                                 l2636 3F76  
                                                 l2820 B72A  
                                                 l2812 B6D0  
                                                 l2804 B660  
                                                 l2740 B2FC  
                                                 l2732 B268  
                                                 l2724 B206  
                                                 l2708 B0FE  
                                                 l1836 1C7A  
                                                 l1780 DB08  
                                                 l1852 0496  
                                                 l1932 26BA  
                                                 l1924 269A  
                                                 l3605 CFAC  
                                                 l1677 5396  
                                                 l3533 D2B2  
                                                 l3525 D24C  
                                                 l3509 D138  
                                                 l2645 5150  
                                                 l2629 5512  
                                                 l2821 B734  
                                                 l2725 B214  
                                                 l2717 B198  
                                                 l1845 3E2E  
                                                 l3701 1486  
                                                 l1757 27B2  
                                                 l1933 26BE  
                                                 l1925 269E  
                                                 l3630 0334  
                                                 l2566 2D1A  
                                                 l3710 44CC  
                                                 l3518 D208  
                                                 l3470 4BA4  
                                                 l2638 3F82  
                                                 l2822 B742  
                                                 l2806 B668  
                                                 l2750 B398  
                                                 l2734 B2AA  
                                                 l1790 DB58  
                                                 l1774 D990  
                                                 l1942 E260  
                                                 l1950 E172  
                                                 l1918 26D6  
                                                 l1934 26C2  
                                                 l1926 26A2  
                                                 l3551 DC6A  
                                                 l2479 C7D8  
                                                 l2567 2D5A  
                                                 l2639 3F8C  
                                                 l2815 B794  
                                                 l2807 B67A  
                                                 l2743 B32E  
                                                 l2727 B24E  
                                                 l1767 3386  
                                                 l3703 14E2  
                                                 l1791 DBA0  
                                                 l1951 E184  
                                                 l1943 E130  
                                                 l1935 26C6  
                                                 l1927 26A6  
                                                 l1919 268A  
                                                 l3552 DC66  
                                                 l3632 0346  
                                                 l3480 50AC  
                                                 l2824 B74A  
                                                 l2816 B6EA  
                                                 l2760 B400  
                                                 l2728 B21C  
                                                 l1768 331C  
                                                 l1880 E884  
                                                 l3704 1550  
                                                 l1784 DAD4  
                                                 l1960 E1E0  
                                                 l1952 E196  
                                                 l1936 26CA  
                                                 l1928 26AA  
                                                 l3561 DD88  
                                                 l3633 033A  
                                                 l3537 D2D8  
                                                 l3465 4B7A  
                                                 l2825 B778  
                                                 l2817 B71C  
                                                 l2809 B69A  
                                                 l2753 B418  
                                                 l2761 B40E  
                                                 l2729 B226  
                                                 l1769 3368  
                                                 l1777 D99A  
                                                 l1849 0426  
                                                 l1961 E1E4  
                                                 l1953 E1A8  
                                                 l1945 E134  
                                                 l1937 26CE  
                                                 l1929 26AE  
                                                 l3554 DCB4  
                                                 l3538 D2E0  
                                                 l3490 CFF4  
                                                 l3466 4B72  
                                                 l2754 B3D0  
                                                 l2738 B3BE  
                                                 l2746 B354  
                                                 l3650 2332  
                                                 l1882 EA4E  
                                                 l3394 4222  
                                                 l2930 171E  
                                                 l1786 DAE2  
                                                 l1778 DA40  
                                                 l1970 E208  
                                                 l1962 E1E8  
                                                 l1954 E1BA  
                                                 l1946 E138  
                                                 l1938 26D2  
                                                 l3571 DDF6  
                                                 l3547 DC2A  
                                                 l3635 0384  
                                                 l3715 54C4  
                                                 l3539 D2E2  
                                                 l3491 CFF0  
                                                 l2851 F40E  
                                                 l3475 508A  
                                                 l3731 518A  
                                                 l2827 B782  
                                                 l2763 B438  
                                                 l2755 B3E0  
                                                 l2747 B366  
                                                 l2739 B2E8  
                                                 l3723 469A  
                                                 l1883 E93C  
                                                 l3395 4216  
                                                 l1795 DBDA  
                                                 l1787 DAEA  
                                                 l1779 D9EC  
                                                 l1971 E20C  
                                                 l1963 E1EC  
                                                 l1955 E1CC  
                                                 l1947 E13C  
                                                 l3564 DDBE  
                                                 l3556 DCDC  
                                                 l3548 DC26  
                                                 l3644 03F6  
                                                 l3636 036C  
                                                 l3628 0306  
                                                 l3716 54B2  
                                                 l3476 5082  
                                                 l3732 5184  
                                                 l2780 B4DA  
                                                 l2764 B44A  
                                                 l2756 B3EE  
                                                 l2692 AFF8  
                                                 l3652 237A  
                                                 l3724 4690  
                                                 l1884 E964  
                                                 l1796 DBEE  
                                                 l1980 E230  
                                                 l1972 E210  
                                                 l1964 E1F0  
                                                 l1956 E1D0  
                                                 l1948 E14E  
                                                 l3573 DE3A  
                                                 l3565 DDA0  
                                                 l3557 DD8A  
                                                 l3581 CCA2  
                                                 l3629 0316  
                                                 l3709 4506  
                                                 l3469 4B9A  
                                                 l2685 B7B2  
                                                 l2781 B4E4  
                                                 l1885 EA0C  
                                                 l1877 1DA4  
                                                 l1789 DB60  
                                                 l1973 E214  
                                                 l1965 E1F4  
                                                 l1957 E1D4  
                                                 l1949 E160  
                                                 l3574 DE5E  
                                                 l3558 DD3A  
                                                 l3582 CC9E  
                                                 l3638 03B6  
                                                 l2854 F434  
                                                 l2774 B4FC  
                                                 l2782 B4F2  
                                                 l2766 B47E  
                                                 l2758 B428  
                                                 l3670 15C0  
                                                 l3398 424A  
                                                 l2926 16B0  
                                                 l1990 E254  
                                                 l1982 E234  
                                                 l1974 E218  
                                                 l1966 E1F8  
                                                 l1958 E1D8  
                                                 l3575 DE88  
                                                 l3559 DD62  
                                                 l3583 CCB2  
                                                 l3639 03AA  
                                                 l3495 D03C  
                                                 l3479 50A2  
                                                 l2791 B5DE  
                                                 l2775 B4B8  
                                                 l2759 B3F6  
                                                 l2687 B1BE  
                                                 l2695 B01E  
                                                 l2935 F950  
                                                 l3655 23CA  
                                                 l2951 C97C  
                                                 l3399 4258  
                                                 l2927 1678  
                                                 l1991 E258  
                                                 l1983 E238  
                                                 l1975 E21C  
                                                 l1967 E1FC  
                                                 l1959 E1DC  
                                                 l3576 DE94  
                                                 l3592 CED0  
                                                 l3496 D038  
                                                 l2792 B5F0  
                                                 l2784 B526  
                                                 l2776 B4C4  
                                                 l2768 B48A  
                                                 l2696 B02E  
                                                 l2688 AFB6  
                                                 l3656 238C  
                                                 l3672 165E  
                                                 l2960 CB62  
                                                 l2952 C9B2  
                                                 l1992 E25C  
                                                 l1984 E23C  
                                                 l1976 E220  
                                                 l1968 E200  
                                                 l3577 DE96  
                                                 l3593 CEB2  
                                                 l3585 CCE2  
                                                 l2857 F44A  
                                                 l2777 B4D2  
                                                 l2769 B496  
                                                 l2689 AFC6  
                                                 l3649 2338  
                                                 l2961 CB98  
                                                 l2953 C9E8  
                                                 l3737 3C82  
                                                 l2929 1722  
                                                 l1985 E240  
                                                 l1977 E224  
                                                 l1969 E204  
                                                 l3586 CCDE  
                                                 l3498 D098  
                                                 l3690 3228  
                                                 l2794 B608  
                                                 l2786 B56A  
                                                 l2938 F9B2  
                                                 l3658 23FE  
                                                 l3666 15B6  
                                                 l3746 5960  
                                                 l2962 CBCE  
                                                 l2954 CA1E  
                                                 l3738 3C20  
                                                 l1986 E244  
                                                 l1978 E228  
                                                 l3587 CCF2  
                                                 l3499 D05C  
                                                 l3683 5054  
                                                 l2779 B50C  
                                                 l2699 B060  
                                                 l2963 CC04  
                                                 l2955 CA54  
                                                 l3739 3C78  
                                                 l1987 E248  
                                                 l1979 E22C  
                                                 l3588 CD10  
                                                 l2796 B682  
                                                 l2964 CC3A  
                                                 l2956 CA8A  
                                                 l2980 C51A  
                                                 l1996 4814  
                                                 l1988 E24C  
                                                 l2797 B61C  
                                                 l2789 B5C2  
                                                 l3677 5824  
                                                 l3669 1618  
                                                 l2957 CAC0  
                                                 l2949 C946  
                                                 l2973 F75C  
                                                 l2981 C530  
                                                 l1997 47F8  
                                                 l1989 E250  
                            ?__offset_from_file_number 0060  
                                                 l2798 B630  
                                                 l2958 CAF6  
                                                 l2974 F650  
                                                 l3599 CF08  
                                                 l3687 31AA  
                                                 l2959 CB2C  
                                                 l2975 F6E6  
                                                 l1999 47FC  
                                                 l2976 F718  
                                                 l3689 31E6  
                                                 l3697 4B34  
                                                 l2994 4910  
                                                 l2995 4924  
                  __end_of__encoder_next_arc_step_size 3FE4  
                          __encoder_next_arc_step_size 3F74  
                        __size_of_encoder_statemachine 087C  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02D3  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 u9725 3D46  
                                                 u9815 476E  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 u9835 3EA4  
                                                 u9960 0A20  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                 __motor_run@maximum_distance_in_steps 009D  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00CD  
                                       _ResetSenseData 4394  
                                                 _enc1 0154  
                                                 _enc2 0153  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 014F  
                                                 _atoi 2330  
                                                 _atol 1574  
                                                 _main 3606  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 502E  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 4B06  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 5416  
                                                 btemp 005F  
                                                 _utoa 31A2  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                      __size_of_motor_schedule_command 00CC  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 5A36  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 59D0  
                         ?__motor_get_speed_in_degrees 0087  
                                      ___fldiv@new_exp 007F  
                                _display_get_character 5536  
                        motor_steps_from_degrees@steps 008B  
                                 ??_USBCheckHIDRequest 0001  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E840  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 24E0  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0143  
                     __end_of__fat_sector_from_cluster 58E4  
                               __get_available_cluster 2758  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 577C  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 3B9C  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 53AE  
                 __make_cluster_chain@sector_in_buffer 00A6  
                           i2c_eeprom_writeUint32@data 0028  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 0093  
                             _motor_steps_from_degrees 1DF2  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02C0  
                           __end_of_motor_speed_lookup 9461  
                        i2c_display_write_fixed@length 0067  
                                                l12171 DE88  
                                                l13243 C86C  
                                                l13239 C842  
                                                l15009 560E  
                                                l15053 D330  
                                                l14413 5642  
                                                l12595 0B94  
                                                l13651 BF28  
                                                l15227 23C6  
                                                l14443 1C5C  
                                                l16205 FA3C  
                                                l12951 F24A  
                                                l12873 44CC  
                                                l13817 277C  
                                                l13841 281C  
                                                l14477 1D08  
                                                l15519 EB5E  
                                                l16169 F948  
                                                l15633 0496  
                                         spi_tx@length 0062  
                                                l17155 4EDC  
                                                l15459 3CB8  
                                                l16613 54B2  
                                                l17149 4ED0  
                                                l16189 F9AA  
                                                l15805 EC94  
                                                l13887 3C20  
                                                l15575 3FE8  
                                                l17185 0C86  
                                                l15833 ED24  
                                                l15499 EAB4  
                                                l14891 F7EA  
                                                l15907 EE58  
                                                l15819 ECDC  
                                                l17509 FF90  
                                                l14885 F7DC  
                                                l15909 EE60  
                                                l14991 F8B2  
                                                l15871 EDC2  
                                                l15847 ED6C  
                                                l15767 2FBC  
                                                l17481 FF2E  
                                                l15785 3010  
                                                l18283 A4BA  
                                                l14899 F822  
                                                l15859 ED92  
                                                l17661 46FA  
                                                l15885 EE0A  
                                                l15869 EDBA  
                                                l16865 0996  
                                                l17665 4718  
                                                l18297 A508  
                                                l19441 E27A  
                                                l15897 EE30  
                                                l16699 E3CA  
                                                l19451 3F6A  
                                                l16795 52A6  
                                                l19443 E392  
                                                l19453 3FC4  
                                                l15999 2DDA  
                                                l19455 3FDA  
                                                l19449 3F54  
                                        ___fltol@sign1 0068  
                                      __end_of___aldiv 28F4  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                ?_atoi 0066  
                                      __end_of___almod 30F8  
                                                ?_atol 006C  
                                      __end_of___fladd D2FE  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv DEB2  
                                                ?_itoa 0070  
                                      __end_of___flneg 54A8  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul CFC2  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 2252  
                                      __end_of___lldiv 3B18  
                                                ?_utoa 0067  
                                                u11000 535E  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u10220 DE48  
                                                u10230 DE6C  
                                                u11030 4B7E  
                                                u10320 CCFE  
                                                u10410 CF5A  
                                                u10330 CE74  
                                                u10420 CF78  
                                                u11060 508E  
                                                u11205 F0BE  
                                                u10190 DDF2  
                                                u10335 CE6A  
                                                u10450 21B2  
                                                u11315 D664  
                                                u10380 CF04  
                                                u11180 44EE  
                                                u11510 4276  
                                                u10455 21A8  
                                                u11440 D87A  
                                                u11520 4284  
                                      __end_of___llmod 426A  
                               __end_of_USBDeviceTasks 017E  
                                                u10490 222A  
                                                u10570 03C0  
                                                u11258 F140  
                                                u11450 D87C  
                                                u11338 D69C  
                                                u11530 4292  
                                                u11187 44E4  
                                                u11259 F154  
                                                u11339 D6B0  
                                                u12500 C094  
                                                u12420 BF58  
                                                u13300 DB38  
                                                u13220 D9D2  
                                                u11540 42A0  
                                                u10910 0BF4  
                                                u11550 42AE  
                                                u11518 427A  
                                                u13320 DBB4  
                                                u13240 DA4C  
                                                u11560 42BA  
                                                u11528 4288  
                                                u10930 0C0E  
                                                u12530 C122  
                                                u13330 DBC0  
                                                u13250 DA76  
                                                u13170 2EA2  
                                                u11538 4296  
                                                u11635 4660  
                                                u11468 D888  
                                                u15020 FA28  
                                                u13500 E860  
                                                u11900 4226  
                                                u13260 DA82  
                                                u13180 2EC2  
                                                u11548 42A4  
                                                u14220 3D06  
                                                u11469 D89C  
                                                u11645 567C  
                                                u11830 C7D4  
                                                u10950 0C22  
                                                u11398 D770  
                                                u12438 BF7C  
                                                u14134 0770  
                                                u14118 073A  
                                                u14070 06C0  
                                                u13270 DAAE  
                                                u11566 42BC  
                                                u11558 42B2  
                                                u11399 D784  
                                                u12439 BF90  
                                                u14135 076A  
                                                u14119 0750  
                                                u10880 0BDA  
                                                u14320 EB72  
                                                u13505 E854  
                                                u12490 C082  
                                                u14058 068E  
                                                u14330 EBCC  
                                                u13450 1CFE  
                                                u12730 4190  
                                                u12650 27DC  
                                                u14059 06A2  
                                                u12388 BE4C  
                                                u14084 06D8  
                                                u13460 1D08  
                                                u13380 5662  
                                                u12389 BE60  
                                                u14085 06D2  
                                                u13525 E8F8  
                                                u10990 5392  
                                                u12398 BE80  
                                                u14094 0712  
                                                u12750 3C46  
                                                u11870 3AC8  
                                                u12670 281C  
                                                u14430 045E  
                                                u12399 BE94  
                                                u14095 070C  
                                                u14191 4CAE  
                                                u14175 4A18  
                                                u15320 309E  
                                                u14280 EAC8  
                                                u14290 EB3E  
                                                u13490 3E08  
                                                u12690 3354  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u14435 0454  
                                                u15260 288E  
                                                u14540 E6AC  
                                                u14700 ED06  
                                                u16070 E5AA  
                                                u13830 46DC  
                                                u14470 13D4  
                                                u14630 2FF2  
                                                u13591 F7F4  
                                                u13760 FCDC  
                                                u15440 D0C8  
                                                u14480 1406  
                                                u14800 EE28  
                                                u14720 ED4E  
                                                u14545 E6A2  
                                                u17210 3282  
                                                u15450 D0D8  
                                                u14490 1420  
                                                u14475 13CA  
                                                u15700 D2BE  
                                                u15620 D250  
                                                u15460 D0DA  
                                                u14820 EE58  
                                                u14740 ED8A  
                                                u14660 3046  
                                                u14485 13FC  
                                                u17310 B02A  
                                                u18200 F3F8  
                                                u17400 B12A  
                                                u17320 B05A  
                                                u14840 EE8A  
                                                u14760 EDBA  
                                                u14680 ECBE  
                                                u15650 D268  
                                                u15490 D11C  
                                                u18210 F408  
                                                u16531 F7A8  
                                                u15900 E3FA  
                                                u18220 F41E  
                                                u14780 EDEC  
                                                u17190 326E  
                                                u18230 F42E  
                                                u17430 B162  
                                                u17350 B092  
                                                u17270 AFC2  
                                                u14935 0578  
                                                u14880 2E0A  
                                                u17440 B192  
                                                u17360 B0C2  
                                                u17280 AFF2  
                                                u16810 FF52  
                                                u16570 4F10  
                                                u17620 B360  
                                                u14980 F990  
                                                u16670 3108  
                                                u17630 B392  
                                                u17390 B0FA  
                                                u19207 4CD4  
                                                u15880 E3C4  
                                                u16840 FFF4  
                                                u18280 A4EA  
                                                u19217 4974  
                                                u19227 4986  
                                      __end_of___lwdiv 4BAE  
                                                u17580 B2F6  
                                                u19237 4990  
                                                u17590 B328  
                         __flash_write_to_buffer@start 0073  
                                                u19197 4CC0  
                                                u17870 B55A  
                                                u17890 B5B0  
                                                u17891 B5AE  
                                                u18780 3642  
                          __size_of_motor_change_speed 000A  
                                      __end_of___lwmod 50B6  
                                                i2l300 33D4  
                                                i2l220 3524  
                                                i2l214 2A08  
                                                i2l222 353A  
                                                i2l231 17E4  
                                                i2l232 178E  
                                                i2l160 0088  
                                                i2l321 34C2  
                                                i2l145 01C4  
                                                i2l250 2608  
                                                i2l226 38BC  
                                                i2l322 34BC  
                                                i2l162 00AE  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 50F6  
                                                i2l315 5304  
                                                i2l147 01EC  
                                                i2l155 004E  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2ABC  
                                                i2l260 0EA2  
                                                i2l332 452A  
                                                i2l180 51D6  
                                                i2l236 180E  
                                                i2l308 50F4  
                                                i2l316 5302  
                                                i2l172 013C  
                                                i2l164 00C4  
                                                i2l156 005E  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2680  
                                                i2l245 25D6  
                                                i2l341 2AC0  
                                                i2l261 0E80  
                                                i2l149 0224  
                                                i2l165 00D0  
                                                i2l157 0066  
                                                i2l254 2648  
                                                i2l342 2B3E  
                                                i2l334 4574  
                                                i2l174 015A  
                                                i2l166 00F8  
                                                i2l247 25E0  
                                                i2l343 2B04  
                                                i2l263 0F16  
                                                i2l167 0102  
                                                i2l159 007C  
                                                i2l264 0EFC  
                                                i2l184 128C  
                                                i2l192 11CE  
                                                i2l432 258E  
                                                i2l280 08C4  
                                                i2l272 229A  
                                                i2l360 242C  
                                                i2l176 0176  
                                                i2l249 2640  
                                                i2l345 2B24  
                                                i2l425 252C  
                                                i2l281 07C0  
                                                i2l361 243E  
                                                i2l169 0114  
                                                i2l186 12B6  
                                                i2l426 24FC  
                                                i2l274 230E  
                                                i2l362 2444  
                                                i2l179 51C8  
                                                i2l283 07D2  
                                                i2l355 249C  
                                                i2l188 1334  
                                                i2l436 254E  
                                                i2l428 253E  
                                                i2l372 DED2  
                                                i2l284 085C  
                                                i2l364 244A  
                                                i2l356 2418  
                                                i2l437 2564  
                                                i2l429 251A  
                                                i2l381 E02A  
                                                i2l373 DED8  
                                                i2l293 3410  
                                                i2l365 2466  
                                                i2l534 0E4A  
                                                i2l438 256E  
                                                i2l550 2C82  
                                                i2l286 0862  
                                                i2l294 33A6  
                                                i2l366 247E  
                                                i2l358 2420  
                                                i2l535 0DB6  
                                                i2l439 2584  
                                                i2l391 E0B6  
                                                i2l383 DFF4  
                                                i2l375 DF40  
                                                i2l287 08B8  
                                                i2l359 2426  
                                                i2l384 E010  
                                                i2l537 0E42  
                                                i2l545 2CB4  
                                                i2l393 E108  
                                                i2l377 DF88  
                                                i2l289 08BE  
                                                i2l297 3426  
                                                i2l562 2C88  
                                                i2l546 2C1C  
                                                i2l386 E076  
                                                i2l298 33B6  
                                                i2l387 E082  
                                                i2l379 DFAA  
                                                i2l299 33BA  
                                                i2l900 4BBC  
                                                i2l820 3A10  
                                                i2l388 E0FC  
                                                i2l821 3A18  
                                                i2l822 3A20  
                                                i2l904 4BCE  
                                                i2l816 3A42  
                                                i2l824 3A2A  
                                                i2l906 4BDA  
                                                i2l826 3A34  
                                                i2l780 4A7A  
                                                i2l783 4AB0  
                                                _UADDR 000F38  
                                                i2l897 4BEC  
                                                i2l898 4BB2  
          __end_of_motor_calculate_position_in_degrees 2174  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0087  
                  _motor_calculate_position_in_degrees 2096  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 4A06  
                                  ___lmul@multiplicand 0064  
                            __end_of__find_nth_cluster 339A  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks E60C  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2C08  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 356E  
            motor_divide_jump@target_position_in_steps 00C6  
                                                _sd000 A2E5  
                               __write_value_to_offset 5310  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                        __end_of_MSDTransferTerminated 4AB2  
                                         _gblCBWLength 015E  
                __i2c_display_send_init_sequence@F6948 02AF  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 42CE  
                                      __end_of_isdigit 582C  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 43F6  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 5A7C  
                                      __motor_run@type 0095  
                                                _ultoa 1476  
                             __parse_command_long@data 00B5  
                            __data_sector_from_cluster 59B0  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0D44  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0162  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 44BA  
                motor_go_to_steps_position@overhead_cw 00B5  
                                      __end_of_stricmp 46E8  
                                      __end_of_strncmp 3C9E  
                                      __end_of_toupper 5964  
                                     __end_ofi2_memcpy 4634  
                                     __end_ofi2_memset 55E8  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 0368  
                                       _MSDReadHandler F090  
          i2c_display_program_custom_character@address 007F  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain DBF8  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3732  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 53E2  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 594C  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5870  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5932  
                        _ExternalFlash_MediaInitialize 584E  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 1A4C  
                              __end_of_fat_resize_file 1476  
                                         __end_of_atoi 2408  
                                         __end_of_atol 1670  
                                         __end_of_main 369C  
                                         __end_of_itoa 5072  
               __end_of__ic2_display_set_ddram_address 57C4  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 57A0  
                                         __end_of_ltoa 4B5A  
                      __end_of_i2c_display_write_fixed 4B06  
                                         __end_of_utoa 324C  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 00C5  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 58CA  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 5A2C  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00AA  
                         __motor_run@distance_in_steps 008F  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature F27A  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 009A  
                 __end_of_motor_divide_jump_to_nearest FEEC  
                __size_of_motor_divide_jump_to_nearest 014E  
                         _motor_divide_jump_to_nearest FD9E  
                                         __get_fat@idx 0060  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 5A22  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                               _motor_schedule_command 28F4  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
                             _fat_get_file_information 3D96  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 5A80  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 5A7C  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0127  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 5A02  
                        i2c_eeprom_writeUint32@address 0026  
                        __get_available_cluster@sector 0093  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 5448  
                               __flash_write_to_buffer 4C02  
               __end_of__ic2_display_set_cgram_address 563C  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 5612  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 58FE  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 5A52  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 4CF4  
                                     __end_of_adc_init 48FE  
                                               i2l1203 3BF8  
                                               i2l1204 3BC8  
                                               i2l1141 5A5C  
                                               i2l1126 5A64  
                            fat_read_from_file@cluster 00D9  
                                  ?_motor_items_in_cue 0001  
                                               i2l1066 525E  
                                               i2l1158 4F96  
                                               i2l1159 4F7A  
                                               i2l2501 BBCA  
                                               i2l2504 BD30  
                                               i2l2505 BC86  
                                               i2l2507 BD8E  
                                               i2l2490 B8BC  
                                               i2l2491 B8E6  
                                               i2l2493 BB90  
                                               i2l2661 1984  
                                               i2l3710 45EA  
                                               i2l2486 B864  
                                               i2l2671 19F4  
                                               i2l2496 B9DA  
                                               i2l2488 BDBA  
                                               i2l2664 19A6  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2497 BA2E  
                                               i2l2489 B866  
                                               i2l2498 BB50  
                                               i2l2674 1A16  
                                               i2l2666 19BC  
                                               i2l2658 19CA  
                                               i2l3715 55D6  
                                               i2l2667 19C4  
                                               i2l3716 55C6  
                                               i2l2668 1A3A  
                                               i2l2676 1A2C  
                                               i2l3709 4622  
                                               i2l2677 1A34  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fat 484E  
                                     __end_of__get_fbr E3A2  
                                     __end_of__get_mbr 2758  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                         ??_motor_go_to_steps_position 00AD  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00AB  
                               __end_of_MSDReadHandler F27A  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 0408  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 0093  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                                     _configFile_write C1A8  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 59B0  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0170  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 3B9C  
                                     ?_fat_modify_file 00A1  
                                _i2c_eeprom_readUint32 5564  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
                                    _motor_process_cue 369C  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 4052  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 48FE  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 3E10  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 007A  
                                               ___wmul 56E0  
                                   __size_of__i2c_send 000A  
                           motor_schedule_command@type 00A7  
                                            ??___fldiv 0076  
                                            ??___flneg 0072  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0076  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3132 0003  
            SYSTEM_Initialize@pll_startup_counter_3132 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 015D  
                                            ??___lwmod 0064  
                                               _config 01A1  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 51B8  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02D0  
                            i2c_eeprom_readUint32@data 007D  
                                               _memcpy 44BA  
                                   ?_fat_get_file_size 0095  
                                               _memset 54A8  
                     __end_of__sector_from_file_number 5478  
                              __end_of_i2c_eeprom_read 4A5C  
                                               _params 021F  
                                               clear_0 377A  
                                               clear_1 378C  
                                               clear_2 3798  
                                               clear_3 37A4  
                                               clear_4 37B6  
                            _ExternalFlash_SectorWrite 5346  
                                    api_parse@inBuffer 00C6  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0093  
                                 __end_of_encoder_init 57A0  
                                               _spi_tx 479C  
                                   ?_USBEnableEndpoint 0009  
                                   _flash_partial_read 5730  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02B8  
                                i2c_display_init@F6951 02A6  
                                               _strlen 517A  
                              _motor_current_stepcount 0058  
                           __parse_command_long@length 00BB  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 00A9  
                                     __end_of_tmr0_isr 5268  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 00A1  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1D0C  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00B7  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 017C  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                  __size_of_motor_go_to_steps_position 0338  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 513A  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0155  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 4CA4  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 4198  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 4198  
                                            ??_strncmp 0066  
               motor_go_to_steps_position@overhead_ccw 00B9  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 016F  
                           ??_APP_DeviceCustomHIDTasks 00D1  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 006A  
                                         ___xxtofl@exp 0069  
                                    _SYSTEM_Initialize 46E8  
                                         ___xxtofl@val 0060  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 56B8  
                                           __accesstop 0060  
                              __end_of__initialization 37BC  
                       __end_of_motor_speed_from_index 597A  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 006E  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 522E  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 003E  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5A18  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 3732  
                          __end_of__parse_command_long 4458  
                                   __size_of__get_data 002A  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 3E8A  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                   __size_of__get_root 0198  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 013F  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5918  
                          _motor_increase_manual_speed 58FE  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 51F4  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 4DE4  
                                         __pidataBANK4 4C54  
                             __parse_item@value_string 007C  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 563C  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 009A  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01BF  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2B48  
                                        __end_of_ultoa 1574  
                                  display_prepare@cntr 00C9  
                                  display_prepare@temp 00BE  
                                         _gblSenseData 0100  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0A06  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 1276  
                       __end_of_motor_set_manual_speed 4DE4  
                                   __size_of_api_parse 012A  
                                   _flash_sector_write 4D44  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1D0C  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C1A8  
               __size_of_MSDProcessCommandMediaPresent 03EC  
                        _MSDProcessCommandMediaPresent BDBC  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 4202  
                               flash_partial_read@page 0087  
                                        __get_data@idx 0060  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0164  
                motor_nonzero_steps_from_degrees@steps 0093  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                            __end_of_SYSTEM_Initialize 4742  
                                    __end_of__i2c_read 385A  
                                    __end_of__i2c_send 5A36  
                               _USBStdGetStatusHandler 339A  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 5A52  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 0F60  
                                           _gblNumBLKS 022E  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0284  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 304A  
                                        __flash_wakeup 4956  
                             __fill_buffer_get_display 2D7E  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                           ??_motor_steps_from_degrees 008B  
                                          _pBDTEntryIn 011B  
                               ?_i2c_eeprom_readUint32 0079  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1864  
                __end_of_APP_DeviceCustomHIDInitialize 5416  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 53E2  
                          MSDTransferTerminated@handle 000C  
                   __size_of__data_sector_from_cluster 0010  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 0097  
                         __parse_jump_steps@out_buffer 00AB  
                               ??_adc_read_temperature 0087  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B810  
                                           _fat_format EC8A  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 176A  
                                            MSDTasks@i 00B1  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run C55A  
                                       ___lmul@product 0068  
               __motor_run@maximum_distance_in_degrees 009B  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                        __get_root@idx 0060  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 343A  
                                    ??_configFile_read 01C3  
                                           _ep_data_in 013C  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fat 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 0F60  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa EA66  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 2408  
                                   __size_of_motor_isr 05AC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l13419 2292  
                                              i2l12477 2514  
                                              i2l13349 55C6  
                                              i2l12841 25E0  
                                              i2l12793 4BDA  
                                              i2l12789 4BBC  
                                              i2l16601 45EA  
                                              i2l17409 01BC  
                                              i2l17437 021C  
                                              i2l17615 010C  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l19463 3A5A  
                                              i2l19465 3A8E  
                                              i2l18665 BD8E  
                                              i2l18585 B8BC  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 0060  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 4C02  
                                           ??i2_memcpy 0007  
                                           ??i2_memset 0007  
                                           _flash_init 59D0  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 2688  
                                    __end_of__get_data 5612  
                                    __end_of__get_date 59F6  
                                  _USBStdSetCfgHandler 2252  
                                    __end_of__get_item FACC  
                                   i2__i2c_eeprom_busy 5756  
                                    __end_of__get_time 59EA  
                     __end_of_maximum_speed_arc_string A237  
                                    __end_of__get_root F942  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 1FB8  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 1276  
                       ??_motor_divide_jump_to_nearest 00C5  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 3FE4  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
              motor_nonzero_steps_from_degrees@degrees 008F  
                   __end_of_motor_go_to_steps_position D636  
                           _motor_go_to_steps_position D2FE  
             __end_of_motor_nonzero_steps_from_degrees 4ECA  
            __size_of_motor_nonzero_steps_from_degrees 004C  
                   ??_motor_nonzero_steps_from_degrees 0093  
                    ?_motor_nonzero_steps_from_degrees 008F  
                     _motor_nonzero_steps_from_degrees 4E7E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 59A0  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 48A6  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 3D96  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 3D1A  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2826  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0A06  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 067E  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 0096  
                             fat_find_file@file_number 0091  
                                        __i2c_send@dat 0060  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 45D8  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 457A  
                                    __end_of__spi_init 52A0  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 0098  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0B20  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                             _inverse_direction_string A249  
                      motor_steps_from_degrees@degrees 0087  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2826  
                                              ___almod 304A  
                                            ?_spi_init 0001  
                                              ___fladd CFC2  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0C36  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv DBF8  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 5478  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 59C0  
                                              ___flmul CC70  
                                              ___fltol 2174  
                                              ___lldiv 3A94  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 4202  
                                              ___lwdiv 4B5A  
                              ?_motor_schedule_command 00A1  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 5072  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
                          motor_schedule_command@speed 00A5  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 5A4A  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00F4  
                                              __pcinit 3732  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 5346  
                                  ??_MSDProcessCommand 00A7  
                                              __ramtop 0F00  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3606  
                                              __ptext1 1A4C  
                                              __ptext2 5890  
                                              __ptext3 58AE  
                                              __ptext4 5564  
                                              __ptext5 4A06  
                                              __ptext6 37C6  
                                              __ptext7 5A0E  
                                              __ptext8 5A18  
                                              __ptext9 5A22  
                                       ?__display_itoa 0095  
                                              _inPipes 0052  
                                       fat_format@cntr 0084  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0165  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fat 0062  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 4332  
                                  ?__display_itoa_long 00AD  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00CA  
                                 __motor_run@direction 009A  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 55BC  
                              __read_value_from_offset 4F14  
                              _fat_read_from_file_fast E840  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 0E52  
                                              _isdigit 580A  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C55A  
                                           ??___xxtofl 0064  
                              _APP_DeviceMSDInitialize 59C0  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 5A0E  
                             __offset_from_file_number 5666  
                             __end_of_i2c_eeprom_write 3C1E  
                          __display_itoa_long@decimals 00B1  
                                      i2_USBDeviceInit 017E  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                             ??_i2c_eeprom_writeUint32 002C  
                   __size_of_ExternalFlash_SectorWrite 0034  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                              _stricmp 468E  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 3C1E  
                                              _toupper 594C  
                                  _flash_partial_write 40C0  
                                 end_of_initialization 37BC  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 4A5C  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 00BA  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 007E  
              __motor_get_speed_in_degrees@speed_index 0087  
                                  _pBDTEntryEP0OutNext 005C  
                            __end_of_MSDProcessCommand 07B0  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 577C  
                                      _USB1msTickCount 012F  
                                 ??__display_itoa_long 00B4  
                             __flash_partial_read@data 0079  
                                            i2u1114_40 2632  
                                            i2u1210_40 08AE  
                                            i2u1114_47 2628  
                                            i2u1210_47 08A4  
                                            i2u1203_40 22C6  
                                            i2u1116_40 2672  
                                            i2u1116_47 2668  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1207_40 0828  
                                            i2u1207_47 081E  
                                            i2u1232_40 E09C  
                                            i2u1208_40 0858  
                             __flash_partial_read@page 0073  
                                            i2u1208_47 084E  
                                            i2u1075_40 2C64  
                        i2c_eeprom_write@slave_address 0024  
                                            i2u1414_45 3BA8  
                                            i2u1415_40 3C00  
                                              ltoa@buf 007A  
                                            i2u1291_40 49B8  
                                            i2u1292_40 49C4  
                                            i2u1291_48 49BA  
                                            i2u1293_40 49D0  
                                            i2u1292_48 49C6  
                                              ltoa@val 007C  
                                            i2u1294_40 49DC  
                                            i2u1293_48 49D2  
                                            i2u1295_40 49E8  
                                            i2u1294_48 49DE  
                                            i2u1296_40 49F2  
                                            i2u1295_48 49EA  
                                            i2u1296_46 49F4  
                                    __end_of_motor_isr BDBC  
                                            i2u1708_40 017A  
                                            i2u1574_40 460C  
                                            i2u1574_47 4602  
                                            i2u1676_40 01E0  
                                            i2u1854_41 B838  
                                ??_USBStdSetCfgHandler 0018  
                                            i2u1679_40 0280  
                                            i2u1864_40 BBA6  
                                            i2u1865_40 BBC6  
                                            i2u1857_41 B900  
                      __parse_command_long@out_idx_ptr 00B9  
                                      ___lldiv@divisor 0064  
                                            i2u1859_40 B9CA  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
                                 __size_ofi2__i2c_stop 0008  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 5508  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 34D4  
                         i2c_eeprom_readUint32@address 0079  
                                    __end_of_spi_tx_rx 3606  
                       __end_of_motor_schedule_command 29C0  
                                    __end_of_spi_tx_tx 397E  
                             __end_of_i2c_display_init 4CF4  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 5A02  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 59F6  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                          ?_fat_format 0001  
                                 ?_flash_partial_write 007F  
                     __size_of__fill_buffer_get_status 01F0  
                                              utoa@buf 0067  
                                           _motor_init 5890  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0156  
                             _USBCtrlEPServiceComplete 176A  
                                              utoa@val 0069  
                                            _MSD_State 0163  
                                           _motor_stop 4FA4  
              __end_of__cluster_from_sector_and_offset 56E0  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 56B8  
                                          ?__motor_run 008F  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                           _USBStatusStageEnabledFlag1 0168  
                           _USBStatusStageEnabledFlag2 0167  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 4C54  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 51F4  
motor_divide_jump_to_nearest@nearest_position_in_steps 00C5  
                                          ___fladd@grs 0085  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 008B  
                                        ___xxtofl@sign 0068  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00C9  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 0006  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 016B  
                                          ___fldiv@grs 0081  
                                          ___fldiv@rem 007A  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 4AB2  
                           motor_arc_move@arc_in_steps 00AE  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 01C1  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0087  
                 __end_of__encoder_next_setup_stepsize 3F74  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 3F04  
                                          ___flmul@grs 007B  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 1170  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 5A84  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 5A80  
                    __parse_jump_steps@number_of_steps 00B1  
                         __end_of__display_signed_itoa 502E  
                     __end_of_motor_steps_from_degrees 1ED6  
                  __end_of__motor_get_speed_in_degrees 067E  
                          __motor_get_speed_in_degrees 0544  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FC48  
                                   ??__i2c_eeprom_busy 0065  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 412C  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item CC70  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 397E  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 1ED6  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                        ??__motor_get_speed_in_degrees 0089  
                                __end_of_USBDeviceInit 0038  
                __end_of_USBIncrement1msInternalTimers 5890  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5870  
                                       __end_of___lmul 4956  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 009A  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5708  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 026A  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 106A  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0089  
                              __end_ofi2_USBDeviceInit 02C4  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 451A  
                                      _MSDRetryAttempt 015F  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 54D8  
                                     __CFG_DSWDTEN$OFF 000000  
                                  _motor_arc_move$8817 00A9  
                                    _USBBusIsSuspended 016D  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 47F6  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 51B8  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3732  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00C8  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 2096  
                    __end_of__get_available_root_entry 5666  
                            __display_itoa_long@length 00B8  
  __step_position_from_divide_position@target_position 008B  
                           ??__fill_buffer_get_display 0067  
                      __size_of_i2c_eeprom_writeUint32 001A  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 014B  
                         __end_of_USBConfigureEndpoint 38EE  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler E12E  
                                  __flash_partial_read 3E8A  
                                    USBStallEndpoint@p 0066  
                                  __size_of_fat_format 0216  
                                        _MSDHostNoData 015C  
                                 ??__root_is_available 008F  
                    __end_of_USBCtrlEPAllowStatusStage 2A84  
                         ?__encoder_next_arc_step_size 0060  
                              ??_i2c_eeprom_readUint32 007D  
                             __end_of_USBCtrlEPService 34D4  
                           __size_of_MSDProcessCommand 0132  
                                  __size_of__motor_run 03AE  
                                            __i2c_read 37C6  
                                            __i2c_send 5A2C  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 5A4A  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5854  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FA  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 0157  
                                      _configFile_name 02C8  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F606  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 584E  
                          _motor_decrease_manual_speed 582C  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 0151  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 3E10  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 1378  
                          __size_of_flash_partial_read 0026  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 07B0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1A4C  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0289  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 0040  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 1864  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 00EC  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
                         __size_of__parse_command_long 0062  
                                   __end_of__i2c_start 5A5A  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 4D44  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0076  
                                            ___fladd@b 0072  
  motor_divide_jump_to_nearest@nearest_divide_position 00C9  
                                            __add_item 1670  
                               _USBActiveConfiguration 01C2  
                       __end_of_USBStdGetStatusHandler 343A  
                                            ___fldiv@a 0072  
                                            ___fldiv@b 006E  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 58CA  
                          api_parse@receivedDataLength 00C8  
                                     api_parse@out_idx 00CF  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 0072  
                                            ___flmul@b 006E  
                                          __pbssCOMRAM 0052  
                                    __size_of__get_fat 0058  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C3  
                         __size_of_USBCtrlTrfInHandler 00C4  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0C36  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 022A  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 57C4  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8210 0061  
         __end_of_i2c_display_program_custom_character 3D1A  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 3C9E  
                                            __get_data 55E8  
                                            __get_date 59EA  
                                    _flash_sector_read 5708  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 4F5C  
                                            __get_item F942  
                      __end_of_fat_read_from_file_fast EA66  
                                       _motor_set_zero 2CC4  
                          ?_motor_go_to_steps_position 00A9  
                                            __get_time 59DE  
                                            __get_root F7AA  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 49AE  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 4E7E  
                                            _dc_manual 9DEE  
                           __end_of_USBWakeFromSuspend 5310  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 580A  
                                          __parse_item C908  
                  __end_of__divide_jump_size_decrement 40C0  
                          __divide_jump_size_decrement 4052  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 50B6  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 0121  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                                            __read_fat 484E  
                          configFile_read@value_string 01EA  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 53AE  
          __end_of__step_position_from_divide_position 1C24  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 008B  
                 ?__step_position_from_divide_position 0087  
                  __step_position_from_divide_position 1B38  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 1170  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 0158  
                                _fat_get_format_status 2F9C  
                    fat_read_from_file_fast@start_byte 00A1  
            motor_go_to_steps_position@target_position 00A9  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                  ??_flash_sector_read 008B  
                               _i2c_eeprom_writeUint32 5918  
                                            _api_parse 08DC  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 1958  
                              __fill_buffer_get_status EEA0  
                                   _APP_DeviceMSDTasks 598E  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 0072  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 00A9  
                                             ?___fldiv 006E  
                                            __ptext100 3F74  
                                            __ptext101 513A  
                                            __ptext110 EA66  
                                            __ptext102 4052  
                                             ?___flneg 006E  
                                            __ptext111 517A  
                                            __ptext103 A330  
                                            __ptext200 54D8  
                                            __ptext120 5478  
                                            __ptext112 502E  
                                            __ptext104 5964  
                                            __ptext201 50B6  
                                            __ptext121 CFC2  
                                            __ptext113 31A2  
                                            __ptext105 0544  
                                            __ptext210 55BC  
                                            __ptext202 5870  
                                            __ptext130 BDBC  
                                            __ptext122 FEEC  
                                            __ptext114 5072  
                                            __ptext106 48FE  
                                            __ptext211 339A  
                                            __ptext203 343A  
                                            __ptext131 D636  
                                            __ptext123 54A8  
                                            __ptext115 4B5A  
                                            __ptext107 4FEA  
                                            __ptext220 59C0  
                                            __ptext212 07B0  
                                            __ptext204 45D8  
                                            __ptext140 0B20  
                                            __ptext132 5A7C  
                                            __ptext124 5416  
                                            __ptext116 304A  
                                            __ptext108 1ED6  
                                            __ptext221 0D44  
                                            __ptext213 DEB2  
                                            __ptext205 397E  
                                            __ptext141 0A06  
                                            __ptext133 5346  
                                            __ptext125 46E8  
                                            __ptext117 2826  
                                            __ptext109 0C36  
                                            __ptext230 0E52  
                                            __ptext222 4458  
                                            __ptext214 3A0E  
                                            __ptext206 176A  
                                            __ptext150 53AE  
                                            __ptext142 0F60  
                                            __ptext134 4D44  
                                            __ptext126 598E  
                                            __ptext118 4ECA  
                                            __ptext231 29C0  
                                            __ptext223 5932  
                                            __ptext215 4BAE  
                                            __ptext207 34D4  
                                            __ptext151 356E  
                                            __ptext143 4394  
                                            __ptext135 4C02  
                                            __ptext127 E3A2  
                                            __ptext119 F27A  
                                            __ptext232 2A84  
                                            __ptext224 5A80  
                                            __ptext216 2C08  
                                            __ptext208 2408  
                                            __ptext160 44BA  
                                            __ptext152 2B48  
                                            __ptext144 537A  
                                            __ptext136 38EE  
                                            __ptext128 067E  
                                            __ptext233 25B6  
                                            __ptext225 53E2  
                                            __ptext217 24E0  
                                            __ptext209 2252  
                                            __ptext161 F458  
                                            __ptext153 59F6  
                                            __ptext145 5708  
                                            __ptext137 4742  
                                            __ptext129 4332  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext234 0000  
                                            __ptext226 1276  
                                            __ptext218 4A5C  
                                            __ptext170 43F6  
                                            __ptext162 2D7E  
                                            __ptext154 597A  
                                            __ptext146 3E8A  
                                            __ptext138 3D1A  
                                            __ptext227 51B8  
                                            __ptext219 1170  
                                            __ptext171 3B18  
                                            __ptext163 5536  
                                            __ptext155 584E  
                                            __ptext147 57C4  
                                            __ptext139 F090  
                                            __ptext228 385A  
                                            __ptext180 02C4  
                                            __ptext172 4D94  
                                            __ptext164 08DC  
                                            __ptext156 5A36  
                                            __ptext148 4956  
                                            __ptext229 451A  
                                            __ptext181 2174  
                                            __ptext173 5A40  
                                            __ptext165 FACC  
                                            __ptext157 324C  
                                            __ptext149 479C  
                                            __ptext190 3B9C  
                                            __ptext182 CC70  
                                            __ptext174 FC48  
                                            __ptext166 4FA4  
                                            __ptext158 1FB8  
                                            __ptext191 4F5C  
                                            __ptext183 DBF8  
                                            __ptext175 28F4  
                                            __ptext167 2CC4  
                                            __ptext159 EEA0  
                                            __ptext192 5756  
                                            __ptext184 106A  
                                            __ptext176 5A02  
                                            __ptext168 D2FE  
                                            __ptext193 49AE  
                                            __ptext177 C55A  
                                            __ptext169 5A72  
                                            __ptext194 5A5A  
                                            __ptext186 522E  
                                            __ptext178 1DF2  
                                            __ptext195 5A62  
                                            __ptext187 1958  
                                            __ptext179 2096  
                                            __ptext196 5A6A  
                                            __ptext188 B810  
                                            __ptext197 0038  
                                            __ptext189 5918  
                                            __ptext198 017E  
                                            __ptext199 52D8  
                                             ?___flmul 006E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 5268  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 00AD  
                                            _idle_rate 01C0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 1FB8  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 106A  
                    __size_of_motor_steps_from_degrees 00E4  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                            ?_motor_steps_from_degrees 0087  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 4FEA  
                  __end_of__divide_jump_size_increment 517A  
                          __divide_jump_size_increment 513A  
                                    ??_display_prepare 00BC  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 5A72  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short FACC  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 57E8  
                                        _fat_find_file 1C24  
                                    __display_itoa@len 00AA  
                                    __display_itoa@pos 00AC  
                                    __display_itoa@tmp 00A0  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2E36  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 457A  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00CF  
                             ??_motor_speed_from_index 0095  
                            __end_of_flash_sector_read 5730  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 0139  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 2D7E  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 5A40  
                                        _MSDWriteState 0160  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 4ECA  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_data 0060  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F7AA  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 0136  
                                           ?__get_time 0060  
                                           ?__get_root 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0133  
                                       __display_start 2EEA  
                                  __size_of_motor_stop 0046  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D922  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 5564  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 25B6  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 003C  
                           configFile_read@item_string 01CB  
                                          _encoder_run 1958  
                             __fat_offset_from_cluster 58E4  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                             i2u991_48 0E00  
                                             i2u991_49 0E16  
                                             i2u993_44 0E34  
                                             i2u993_45 0E2E  
                                           ?_api_parse 00C6  
                                             i2u989_48 0DDA  
                                             i2u989_49 0DEE  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks E3A2  
                                            _motor_isr B810  
                           _USBDeferINDataStagePackets 0166  
                                         ??_fat_format 0084  
                                 _active_configuration 0159  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F606  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F458  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 5A6A  
                                 __end_ofi2__i2c_write 4FA4  
                                 _USBConfigureEndpoint 385A  
                                         ??__motor_run 0096  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 356E  
                                            _spi_tx_tx 38EE  
                          __size_ofi2__i2c_eeprom_busy 0026  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 0149  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 5A3C  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 2EEA  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 016E  
                    __end_of_ExternalFlash_MediaDetect 5A40  
                                             i2_memcpy 45D8  
                                             i2_memset 55BC  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2E36  
                                          __write_root 4E32  
                                   ?_SYS_InterruptHigh 0001  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 4F14  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 50FA  
                      motor_schedule_command@direction 00A8  
                             __sector_from_file_number 5448  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
               motor_go_to_steps_position@distance_ccw 00C1  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 2F9C  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 3746  
                                            copy_data1 3766  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 2330  
                                   __end_of_fat_format EEA0  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 58AE  
                                  ??_SYS_InterruptHigh 0044  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0161  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run C908  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5A18  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 0408  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 0095  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FC48  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 59DE  
                                       _TransferLength 0145  
                                           ?_motor_isr 0001  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2CC4  
                                      api_parse@in_idx 00D0  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 537A  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 00A9  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 426A  
                                      _MSDWriteHandler D636  
                                     __size_of___fldiv 02BA  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00B9  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 015B  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00BB  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 48A6  
                                             __get_fat 47F6  
                                             __get_fbr E12E  
                                             __get_mbr 2688  
                                          ??__add_item 008C  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 00AF  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 598E  
                           _ExternalFlash_CapacityRead 597A  
                                             ___xxtofl 02C4  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 59A0  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5690  
                                             __ptext11 59D0  
                                             __ptext20 E12E  
                                             __ptext12 50FA  
                                             __ptext21 47F6  
                                             __ptext13 5268  
                                             __ptext30 5612  
                                             __ptext22 55E8  
                                             __ptext14 3FE4  
                                             __ptext31 4CA4  
                                             __ptext23 577C  
                                             __ptext15 59A0  
                                             __ptext40 1378  
                                             __ptext32 4CF4  
                                             __ptext24 52A0  
                                             __ptext16 2F9C  
                                             __ptext41 E60C  
                                             __ptext33 426A  
                                             __ptext25 4AB2  
                                             __ptext17 EC8A  
                                             __ptext50 56B8  
                                             __ptext42 0408  
                                             __ptext34 5A4A  
                                             __ptext26 57E8  
                                             __ptext18 F7AA  
                                             __ptext51 59DE  
                                             __ptext43 4E32  
                                             __ptext35 5A52  
                                             __ptext27 57A0  
                                             __ptext19 2688  
                                             __ptext60 F606  
                                             __ptext52 59EA  
                                             __ptext44 40C0  
                                             __ptext36 5A2C  
                                             __ptext28 51F4  
                                             __ptext61 1D0C  
                                             __ptext53 563C  
                                             __ptext45 4634  
                                             __ptext37 2EEA  
                                             __ptext29 3C9E  
                                             __ptext70 3E10  
                                             __ptext62 E840  
                                             __ptext54 1670  
                                             __ptext46 D922  
                                             __ptext38 2E36  
                                             __ptext71 412C  
                                             __ptext63 32F4  
                                             __ptext55 4B06  
                                             __ptext47 5310  
                                             __ptext39 C1A8  
                                             __ptext80 1574  
                                             __ptext72 5730  
                                             __ptext64 4F14  
                                             __ptext56 1476  
                                             __ptext48 2758  
                                             __ptext81 2330  
                                             __ptext73 5448  
                                             __ptext65 484E  
                                             __ptext57 4202  
                                             __ptext49 457A  
                                             __ptext90 AF94  
                                             __ptext82 580A  
                                             __ptext74 5666  
                                             __ptext66 58CA  
                                             __ptext58 3A94  
                                             __ptext91 4E7E  
                                             __ptext83 56E0  
                                             __ptext75 1C24  
                                             __ptext67 58E4  
                                             __ptext59 42CE  
                                             __ptext92 58FE  
                                             __ptext84 F942  
                                             __ptext76 3C1E  
                                             __ptext68 59B0  
                                             __ptext93 FD9E  
                                             __ptext85 48A6  
                                             __ptext77 C908  
                                             __ptext69 3D96  
                                             __ptext94 30F8  
                                             __ptext86 5590  
                                             __ptext78 468E  
                                             __ptext95 1B38  
                                             __ptext87 4198  
                                             __ptext79 594C  
                                             __ptext96 582C  
                                             __ptext88 5A78  
                                             __ptext97 1864  
                                             __ptext89 369C  
                                             __ptext98 3F04  
                                             __ptext99 5508  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4394  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 4332  
                                      ___almod@divisor 0064  
                                          ??__get_data 0062  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                          ??__get_root 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 43F6  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 468E  
                           __flash_copy_page_to_buffer 4634  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 32F4  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 49AE  
                              __parse_set_manual_speed 3B18  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3A0E  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                       __size_of_i2c_eeprom_readUint32 002C  
                                        __size_of_utoa 00AA  
                        __end_of_i2c_eeprom_readUint32 5590  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 412C  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FD9E  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 522E  
                                  _USBCtrlTrfInHandler 2A84  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00CB  
                               __end_of__i2c_wait_idle 42CE  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 5A72  
                           __end_of_motor_items_in_cue 5A0E  
                                             _outPipes 0112  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 5A62  
                                             _spi_init 50FA  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 451A  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 5690  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 29C0  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00B5  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4A06  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa EC8A  
                motor_go_to_steps_position@distance_cw 00BD  
                                     i2_ResetSenseData 4458  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 00C5  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 0169  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status F090  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __parse_jump_steps@return_value 00B0  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 008F  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2C08  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2B48  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 5A22  
                              __end_of_fat_create_file 0544  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                               __size_of_USBDeviceInit 014C  
                      __end_of_motor_clear_command_cue 5A78  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3A94  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 3A0E  
              motor_schedule_command@distance_in_steps 00A1  
                                   __end_of_motor_init 58AE  
                                         ?__parse_item 007A  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 537A  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 4FEA  
                __end_of__flash_write_page_from_buffer 479C  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4742  
                             ??_motor_schedule_command 00A8  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                              ?_i2c_eeprom_writeUint32 0026  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0234  
                           __end_of_flash_partial_read 5756  
                              __end_of_MSDWriteHandler D922  
                                            strncmp@s1 0060  
                                            strncmp@s2 0062  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 5964  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                                      _display_prepare A330  
                                          ??_motor_isr 002C  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 0E52  
                                   _USBWakeFromSuspend 52D8  
                                ??__parse_command_long 00BB  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 57E8  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler DEB2  
                                      _fat_modify_file E60C  
                                  i2_SYSTEM_Initialize 4BAE  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 25B6  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 008B  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 30F8  
                                             ultoa@val 006F  
                                      _gblMediaPresent 0147  
                             configFile_read@file_size 01F6  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BD  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 014D  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 016C  
                                       _display_update 52A0  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 4D94  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 0082  
                         __end_of_adc_read_temperature F458  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 0B20  
                                  ??_motor_divide_jump 00C5  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 5A62  
                              motor_arc_move@direction 00AD  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 4F5C  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0232  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                       __end_of_i2c_eeprom_writeUint32 5932  
                                         ___fladd@aexp 0083  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 0084  
                                           _USBMSDInit 0D44  
                         _USBStatusStageTimeoutCounter 016A  
                                          i2__i2c_send 5A6A  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 5A5A  
                                     ??_motor_arc_move 00A9  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00AD  
                          __end_of__flash_partial_read 3F04  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 5A78  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00CB  
                           __size_of__parse_jump_steps 0156  
                            __size_of_configFile_write 03B2  
                              __display_itoa_long@text 00B2  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 015A  
                                          _USBInHandle 0141  
                             _APP_DeviceCustomHIDTasks 324C  
                           __end_of_flash_sector_write 4D94  
