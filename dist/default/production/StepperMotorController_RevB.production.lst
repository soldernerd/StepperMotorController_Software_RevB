

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Jan 04 23:02:18 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK4,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    19                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	text0,global,reloc=2,class=CODE,delta=1
    21                           	psect	text1,global,reloc=2,class=CODE,delta=1
    22                           	psect	text2,global,reloc=2,class=CODE,delta=1
    23                           	psect	text3,global,reloc=2,class=CODE,delta=1
    24                           	psect	text4,global,reloc=2,class=CODE,delta=1
    25                           	psect	text5,global,reloc=2,class=CODE,delta=1
    26                           	psect	text6,global,reloc=2,class=CODE,delta=1
    27                           	psect	text7,global,reloc=2,class=CODE,delta=1
    28                           	psect	text8,global,reloc=2,class=CODE,delta=1
    29                           	psect	text9,global,reloc=2,class=CODE,delta=1
    30                           	psect	text10,global,reloc=2,class=CODE,delta=1
    31                           	psect	text11,global,reloc=2,class=CODE,delta=1
    32                           	psect	text12,global,reloc=2,class=CODE,delta=1
    33                           	psect	text13,global,reloc=2,class=CODE,delta=1
    34                           	psect	text14,global,reloc=2,class=CODE,delta=1
    35                           	psect	text15,global,reloc=2,class=CODE,delta=1
    36                           	psect	text16,global,reloc=2,class=CODE,delta=1
    37                           	psect	text17,global,reloc=2,class=CODE,delta=1
    38                           	psect	text18,global,reloc=2,class=CODE,delta=1
    39                           	psect	text19,global,reloc=2,class=CODE,delta=1
    40                           	psect	text20,global,reloc=2,class=CODE,delta=1
    41                           	psect	text21,global,reloc=2,class=CODE,delta=1
    42                           	psect	text22,global,reloc=2,class=CODE,delta=1
    43                           	psect	text23,global,reloc=2,class=CODE,delta=1
    44                           	psect	text24,global,reloc=2,class=CODE,delta=1
    45                           	psect	text25,global,reloc=2,class=CODE,delta=1
    46                           	psect	text26,global,reloc=2,class=CODE,delta=1
    47                           	psect	text27,global,reloc=2,class=CODE,delta=1
    48                           	psect	text28,global,reloc=2,class=CODE,delta=1
    49                           	psect	text29,global,reloc=2,class=CODE,delta=1
    50                           	psect	text30,global,reloc=2,class=CODE,delta=1
    51                           	psect	text31,global,reloc=2,class=CODE,delta=1
    52                           	psect	text32,global,reloc=2,class=CODE,delta=1
    53                           	psect	text33,global,reloc=2,class=CODE,delta=1
    54                           	psect	text34,global,reloc=2,class=CODE,delta=1
    55                           	psect	text35,global,reloc=2,class=CODE,delta=1
    56                           	psect	text36,global,reloc=2,class=CODE,delta=1
    57                           	psect	text37,global,reloc=2,class=CODE,delta=1
    58                           	psect	text38,global,reloc=2,class=CODE,delta=1
    59                           	psect	text39,global,reloc=2,class=CODE,delta=1
    60                           	psect	text40,global,reloc=2,class=CODE,delta=1
    61                           	psect	text41,global,reloc=2,class=CODE,delta=1
    62                           	psect	text42,global,reloc=2,class=CODE,delta=1
    63                           	psect	text43,global,reloc=2,class=CODE,delta=1
    64                           	psect	text44,global,reloc=2,class=CODE,delta=1
    65                           	psect	text45,global,reloc=2,class=CODE,delta=1
    66                           	psect	text46,global,reloc=2,class=CODE,delta=1
    67                           	psect	text47,global,reloc=2,class=CODE,delta=1
    68                           	psect	text48,global,reloc=2,class=CODE,delta=1
    69                           	psect	text49,global,reloc=2,class=CODE,delta=1
    70                           	psect	text50,global,reloc=2,class=CODE,delta=1
    71                           	psect	text51,global,reloc=2,class=CODE,delta=1
    72                           	psect	text52,global,reloc=2,class=CODE,delta=1
    73                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=1
    76                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=1
    77                           	psect	text57,global,reloc=2,class=CODE,delta=1
    78                           	psect	text58,global,reloc=2,class=CODE,delta=1
    79                           	psect	text59,global,reloc=2,class=CODE,delta=1
    80                           	psect	text60,global,reloc=2,class=CODE,delta=1
    81                           	psect	text61,global,reloc=2,class=CODE,delta=1
    82                           	psect	text62,global,reloc=2,class=CODE,delta=1
    83                           	psect	text63,global,reloc=2,class=CODE,delta=1
    84                           	psect	text64,global,reloc=2,class=CODE,delta=1
    85                           	psect	text65,global,reloc=2,class=CODE,delta=1
    86                           	psect	text66,global,reloc=2,class=CODE,delta=1
    87                           	psect	text67,global,reloc=2,class=CODE,delta=1
    88                           	psect	text68,global,reloc=2,class=CODE,delta=1
    89                           	psect	text69,global,reloc=2,class=CODE,delta=1
    90                           	psect	text70,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	text72,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1,group=2
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1,group=2
    98                           	psect	text78,global,reloc=2,class=CODE,delta=1,group=2
    99                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=2
   100                           	psect	text80,global,reloc=2,class=CODE,delta=1,group=2
   101                           	psect	text81,global,reloc=2,class=CODE,delta=1,group=1
   102                           	psect	text82,global,reloc=2,class=CODE,delta=1
   103                           	psect	text83,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text84,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	text88,global,reloc=2,class=CODE,delta=1
   109                           	psect	text89,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	text94,global,reloc=2,class=CODE,delta=1
   115                           	psect	text95,global,reloc=2,class=CODE,delta=1
   116                           	psect	text96,global,reloc=2,class=CODE,delta=1
   117                           	psect	text97,global,reloc=2,class=CODE,delta=1
   118                           	psect	text98,global,reloc=2,class=CODE,delta=1
   119                           	psect	text99,global,reloc=2,class=CODE,delta=1
   120                           	psect	text100,global,reloc=2,class=CODE,delta=1
   121                           	psect	text101,global,reloc=2,class=CODE,delta=1
   122                           	psect	text102,global,reloc=2,class=CODE,delta=1
   123                           	psect	text103,global,reloc=2,class=CODE,delta=1
   124                           	psect	text104,global,reloc=2,class=CODE,delta=1
   125                           	psect	text105,global,reloc=2,class=CODE,delta=1
   126                           	psect	text106,global,reloc=2,class=CODE,delta=1
   127                           	psect	text107,global,reloc=2,class=CODE,delta=1
   128                           	psect	text108,global,reloc=2,class=CODE,delta=1,group=1
   129                           	psect	text109,global,reloc=2,class=CODE,delta=1
   130                           	psect	text110,global,reloc=2,class=CODE,delta=1
   131                           	psect	text111,global,reloc=2,class=CODE,delta=1
   132                           	psect	text112,global,reloc=2,class=CODE,delta=1
   133                           	psect	text113,global,reloc=2,class=CODE,delta=1,group=2
   134                           	psect	text114,global,reloc=2,class=CODE,delta=1,group=2
   135                           	psect	text115,global,reloc=2,class=CODE,delta=1,group=2
   136                           	psect	text116,global,reloc=2,class=CODE,delta=1,group=1
   137                           	psect	text117,global,reloc=2,class=CODE,delta=1,group=1
   138                           	psect	text118,global,reloc=2,class=CODE,delta=1,group=1
   139                           	psect	text119,global,reloc=2,class=CODE,delta=1,group=1
   140                           	psect	text120,global,reloc=2,class=CODE,delta=1
   141                           	psect	text121,global,reloc=2,class=CODE,delta=1
   142                           	psect	text122,global,reloc=2,class=CODE,delta=1,group=1
   143                           	psect	text123,global,reloc=2,class=CODE,delta=1,group=1
   144                           	psect	text124,global,reloc=2,class=CODE,delta=1,group=1
   145                           	psect	text125,global,reloc=2,class=CODE,delta=1,group=1
   146                           	psect	text126,global,reloc=2,class=CODE,delta=1,group=1
   147                           	psect	text127,global,reloc=2,class=CODE,delta=1
   148                           	psect	text128,global,reloc=2,class=CODE,delta=1,group=2
   149                           	psect	text129,global,reloc=2,class=CODE,delta=1
   150                           	psect	text130,global,reloc=2,class=CODE,delta=1
   151                           	psect	text131,global,reloc=2,class=CODE,delta=1
   152                           	psect	text132,global,reloc=2,class=CODE,delta=1
   153                           	psect	text133,global,reloc=2,class=CODE,delta=1
   154                           	psect	text134,global,reloc=2,class=CODE,delta=1
   155                           	psect	text135,global,reloc=2,class=CODE,delta=1
   156                           	psect	text136,global,reloc=2,class=CODE,delta=1
   157                           	psect	text137,global,reloc=2,class=CODE,delta=1
   158                           	psect	text138,global,reloc=2,class=CODE,delta=1
   159                           	psect	text139,global,reloc=2,class=CODE,delta=1
   160                           	psect	text140,global,reloc=2,class=CODE,delta=1
   161                           	psect	text141,global,reloc=2,class=CODE,delta=1
   162                           	psect	text142,global,reloc=2,class=CODE,delta=1
   163                           	psect	text143,global,reloc=2,class=CODE,delta=1
   164                           	psect	text144,global,reloc=2,class=CODE,delta=1
   165                           	psect	text145,global,reloc=2,class=CODE,delta=1
   166                           	psect	text146,global,reloc=2,class=CODE,delta=1
   167                           	psect	text147,global,reloc=2,class=CODE,delta=1
   168                           	psect	text148,global,reloc=2,class=CODE,delta=1
   169                           	psect	text149,global,reloc=2,class=CODE,delta=1
   170                           	psect	text150,global,reloc=2,class=CODE,delta=1
   171                           	psect	text151,global,reloc=2,class=CODE,delta=1
   172                           	psect	text152,global,reloc=2,class=CODE,delta=1
   173                           	psect	text153,global,reloc=2,class=CODE,delta=1
   174                           	psect	text154,global,reloc=2,class=CODE,delta=1
   175                           	psect	text155,global,reloc=2,class=CODE,delta=1
   176                           	psect	text156,global,reloc=2,class=CODE,delta=1
   177                           	psect	text157,global,reloc=2,class=CODE,delta=1
   178                           	psect	text158,global,reloc=2,class=CODE,delta=1
   179                           	psect	text159,global,reloc=2,class=CODE,delta=1
   180                           	psect	text160,global,reloc=2,class=CODE,delta=1
   181                           	psect	text161,global,reloc=2,class=CODE,delta=1
   182                           	psect	text162,global,reloc=2,class=CODE,delta=1
   183                           	psect	text163,global,reloc=2,class=CODE,delta=1
   184                           	psect	text164,global,reloc=2,class=CODE,delta=1
   185                           	psect	text165,global,reloc=2,class=CODE,delta=1,group=2
   186                           	psect	text166,global,reloc=2,class=CODE,delta=1
   187                           	psect	text167,global,reloc=2,class=CODE,delta=1
   188                           	psect	text168,global,reloc=2,class=CODE,delta=1
   189                           	psect	text169,global,reloc=2,class=CODE,delta=1
   190                           	psect	text170,global,reloc=2,class=CODE,delta=1
   191                           	psect	text171,global,reloc=2,class=CODE,delta=1
   192                           	psect	text172,global,reloc=2,class=CODE,delta=1
   193                           	psect	text173,global,reloc=2,class=CODE,delta=1
   194                           	psect	text174,global,reloc=2,class=CODE,delta=1
   195                           	psect	text175,global,reloc=2,class=CODE,delta=1
   196                           	psect	text176,global,reloc=2,class=CODE,delta=1
   197                           	psect	text177,global,reloc=2,class=CODE,delta=1
   198                           	psect	text178,global,reloc=2,class=CODE,delta=1
   199                           	psect	text179,global,reloc=2,class=CODE,delta=1
   200                           	psect	text180,global,reloc=2,class=CODE,delta=1
   201                           	psect	text181,global,reloc=2,class=CODE,delta=1
   202                           	psect	text182,global,reloc=2,class=CODE,delta=1
   203                           	psect	text183,global,reloc=2,class=CODE,delta=1
   204                           	psect	text184,global,reloc=2,class=CODE,delta=1
   205                           	psect	text185,global,reloc=2,class=CODE,delta=1
   206                           	psect	text186,global,reloc=2,class=CODE,delta=1
   207                           	psect	text187,global,reloc=2,class=CODE,delta=1
   208                           	psect	text188,global,reloc=2,class=CODE,delta=1
   209                           	psect	text189,global,reloc=2,class=CODE,delta=1
   210                           	psect	text190,global,reloc=2,class=CODE,delta=1,group=1
   211                           	psect	text191,global,reloc=2,class=CODE,delta=1
   212                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   213                           	psect	text193,global,reloc=2,class=CODE,delta=1
   214                           	psect	text194,global,reloc=2,class=CODE,delta=1
   215                           	psect	text195,global,reloc=2,class=CODE,delta=1
   216                           	psect	text196,global,reloc=2,class=CODE,delta=1
   217                           	psect	text197,global,reloc=2,class=CODE,delta=1
   218                           	psect	text198,global,reloc=2,class=CODE,delta=1
   219                           	psect	text199,global,reloc=2,class=CODE,delta=1
   220                           	psect	text200,global,reloc=2,class=CODE,delta=1
   221                           	psect	text201,global,reloc=2,class=CODE,delta=1
   222                           	psect	text202,global,reloc=2,class=CODE,delta=1
   223                           	psect	text203,global,reloc=2,class=CODE,delta=1
   224                           	psect	text204,global,reloc=2,class=CODE,delta=1
   225                           	psect	text205,global,reloc=2,class=CODE,delta=1
   226                           	psect	text206,global,reloc=2,class=CODE,delta=1
   227                           	psect	text207,global,reloc=2,class=CODE,delta=1
   228                           	psect	text208,global,reloc=2,class=CODE,delta=1
   229                           	psect	text209,global,reloc=2,class=CODE,delta=1
   230                           	psect	text210,global,reloc=2,class=CODE,delta=1
   231                           	psect	text211,global,reloc=2,class=CODE,delta=1
   232                           	psect	text212,global,reloc=2,class=CODE,delta=1
   233                           	psect	text213,global,reloc=2,class=CODE,delta=1
   234                           	psect	text214,global,reloc=2,class=CODE,delta=1
   235                           	psect	text215,global,reloc=2,class=CODE,delta=1
   236                           	psect	text216,global,reloc=2,class=CODE,delta=1
   237                           	psect	text217,global,reloc=2,class=CODE,delta=1
   238                           	psect	text218,global,reloc=2,class=CODE,delta=1
   239                           	psect	text219,global,reloc=2,class=CODE,delta=1
   240                           	psect	text220,global,reloc=2,class=CODE,delta=1
   241                           	psect	text221,global,reloc=2,class=CODE,delta=1
   242                           	psect	text222,global,reloc=2,class=CODE,delta=1
   243                           	psect	text223,global,reloc=2,class=CODE,delta=1
   244                           	psect	text224,global,reloc=2,class=CODE,delta=1
   245                           	psect	text225,global,reloc=2,class=CODE,delta=1
   246                           	psect	text226,global,reloc=2,class=CODE,delta=1
   247                           	psect	text227,global,reloc=2,class=CODE,delta=1
   248                           	psect	text228,global,reloc=2,class=CODE,delta=1
   249                           	psect	text229,global,reloc=2,class=CODE,delta=1
   250                           	psect	text230,global,reloc=2,class=CODE,delta=1
   251                           	psect	text231,global,reloc=2,class=CODE,delta=1
   252                           	psect	text232,global,reloc=2,class=CODE,delta=1
   253                           	psect	text233,global,reloc=2,class=CODE,delta=1
   254                           	psect	text234,global,reloc=2,class=CODE,delta=1
   255                           	psect	text235,global,reloc=2,class=CODE,delta=1
   256                           	psect	text236,global,reloc=2,class=CODE,delta=1
   257                           	psect	text237,global,reloc=2,class=CODE,delta=1
   258                           	psect	text238,global,reloc=2,class=CODE,delta=1
   259                           	psect	text239,global,reloc=2,class=CODE,delta=1
   260                           	psect	text240,global,reloc=2,class=CODE,delta=1
   261                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   262                           	psect	text241,global,reloc=2,class=CODE,delta=1
   263                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   264                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   265                           	dabs	1,0x600,512,_msd_buffer
   266                           	dabs	1,0xD00,48,_BDT
   267                           	dabs	1,0xD40,31,_msd_cbw
   268                           	dabs	1,0xD80,13,_msd_csw
   269                           	dabs	1,0xD38,8,_CtrlTrfData
   270                           	dabs	1,0xD30,8,_SetupPkt
   271  0000                     
   272                           ; Version 2.00
   273                           ; Generated 27/05/2018 GMT
   274                           ; 
   275                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   276                           ; All rights reserved.
   277                           ; 
   278                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   279                           ; 
   280                           ; Redistribution and use in source and binary forms, with or without modification, are
   281                           ; permitted provided that the following conditions are met:
   282                           ; 
   283                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   284                           ;        conditions and the following disclaimer.
   285                           ; 
   286                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   287                           ;        of conditions and the following disclaimer in the documentation and/or other
   288                           ;        materials provided with the distribution.
   289                           ; 
   290                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   291                           ;        software without specific prior written permission.
   292                           ; 
   293                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   294                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   295                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   296                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   297                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   298                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   299                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   300                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   301                           ; 
   302                           ; 
   303                           ; Code-generator required, PIC18F47J53 Definitions
   304                           ; 
   305                           ; SFR Addresses
   306  0000                     
   307                           	psect	idataBANK2
   308  015106                     __pidataBANK2:
   309                           	opt stack 0
   310                           
   311                           ;initializer for _LUN
   312  015106  6A                 	db	low _ExternalFlash_MediaInitialize
   313  015107  5B                 	db	high _ExternalFlash_MediaInitialize
   314  015108  01                 	db	low (_ExternalFlash_MediaInitialize shr (0+16))
   315  015109  B2                 	db	low _ExternalFlash_CapacityRead
   316  01510A  5C                 	db	high _ExternalFlash_CapacityRead
   317  01510B  01                 	db	low (_ExternalFlash_CapacityRead shr (0+16))
   318  01510C  2E                 	db	low _ExternalFlash_SectorSizeRead
   319  01510D  5D                 	db	high _ExternalFlash_SectorSizeRead
   320  01510E  01                 	db	low (_ExternalFlash_SectorSizeRead shr (0+16))
   321  01510F  7A                 	db	low _ExternalFlash_MediaDetect
   322  015110  5D                 	db	high _ExternalFlash_MediaDetect
   323  015111  01                 	db	low (_ExternalFlash_MediaDetect shr (0+16))
   324  015112  90                 	db	low _ExternalFlash_SectorRead
   325  015113  56                 	db	high _ExternalFlash_SectorRead
   326  015114  01                 	db	low (_ExternalFlash_SectorRead shr (0+16))
   327  015115  BA                 	db	low _ExternalFlash_WriteProtectStateGet
   328  015116  5D                 	db	high _ExternalFlash_WriteProtectStateGet
   329  015117  01                 	db	low (_ExternalFlash_WriteProtectStateGet shr (0+16))
   330  015118  5C                 	db	low _ExternalFlash_SectorWrite
   331  015119  56                 	db	high _ExternalFlash_SectorWrite
   332  01511A  01                 	db	low (_ExternalFlash_SectorWrite shr (0+16))
   333  01511B  00                 	db	0
   334  01511C  00                 	db	0
   335  01511D  00                 	db	0
   336  01511E  00                 	db	0
   337  01511F  00                 	db	0
   338  015120  00                 	db	0
   339  015121  00                 	db	0
   340  015122  00                 	db	0
   341                           
   342                           ;initializer for i2c_display_init@F7092
   343  015123  3A                 	db	58
   344  015124  1E                 	db	30
   345  015125  39                 	db	57
   346  015126  0C                 	db	12
   347  015127  74                 	db	116
   348  015128  5C                 	db	92
   349  015129  6D                 	db	109
   350  01512A  0C                 	db	12
   351  01512B  01                 	db	1
   352                           
   353                           ;initializer for __i2c_display_send_init_sequence@F7089
   354  01512C  3A                 	db	58
   355  01512D  1E                 	db	30
   356  01512E  39                 	db	57
   357  01512F  0C                 	db	12
   358  015130  74                 	db	116
   359  015131  5C                 	db	92
   360  015132  6D                 	db	109
   361  015133  0C                 	db	12
   362  015134  01                 	db	1
   363                           
   364                           ;initializer for _tx_buf
   365  015135  01                 	db	1
   366  015136  02                 	db	2
   367  015137  03                 	db	3
   368  015138  04                 	db	4
   369  015139  05                 	db	5
   370  01513A  06                 	db	6
   371  01513B  07                 	db	7
   372  01513C  08                 	db	8
   373                           
   374                           ;initializer for _configFile_used_name
   375  01513D  55                 	db	85
   376  01513E  53                 	db	83
   377  01513F  45                 	db	69
   378  015140  44                 	db	68
   379  015141  43                 	db	67
   380  015142  4F                 	db	79
   381  015143  4E                 	db	78
   382  015144  46                 	db	70
   383                           
   384                           ;initializer for _configFile_name
   385  015145  43                 	db	67
   386  015146  4F                 	db	79
   387  015147  4E                 	db	78
   388  015148  46                 	db	70
   389  015149  49                 	db	73
   390  01514A  47                 	db	71
   391  01514B  20                 	db	32
   392  01514C  20                 	db	32
   393                           
   394                           ;initializer for _configFile_used_extention
   395  01514D  54                 	db	84
   396  01514E  58                 	db	88
   397  01514F  54                 	db	84
   398                           
   399                           ;initializer for _configFile_extention
   400  015150  54                 	db	84
   401  015151  58                 	db	88
   402  015152  54                 	db	84
   403                           
   404                           	psect	idataBANK4
   405  014F26                     __pidataBANK4:
   406                           	opt stack 0
   407                           
   408                           ;initializer for _dc_startup
   409  014F26  2A                 	db	42
   410  014F27  20                 	db	32
   411  014F28  20                 	db	32
   412  014F29  53                 	db	83
   413  014F2A  74                 	db	116
   414  014F2B  65                 	db	101
   415  014F2C  70                 	db	112
   416  014F2D  70                 	db	112
   417  014F2E  65                 	db	101
   418  014F2F  72                 	db	114
   419  014F30  20                 	db	32
   420  014F31  4D                 	db	77
   421  014F32  6F                 	db	111
   422  014F33  74                 	db	116
   423  014F34  6F                 	db	111
   424  014F35  72                 	db	114
   425  014F36  20                 	db	32
   426  014F37  20                 	db	32
   427  014F38  20                 	db	32
   428  014F39  2A                 	db	42
   429  014F3A  2A                 	db	42
   430  014F3B  20                 	db	32
   431  014F3C  20                 	db	32
   432  014F3D  20                 	db	32
   433  014F3E  20                 	db	32
   434  014F3F  43                 	db	67
   435  014F40  6F                 	db	111
   436  014F41  6E                 	db	110
   437  014F42  74                 	db	116
   438  014F43  72                 	db	114
   439  014F44  6F                 	db	111
   440  014F45  6C                 	db	108
   441  014F46  6C                 	db	108
   442  014F47  65                 	db	101
   443  014F48  72                 	db	114
   444  014F49  20                 	db	32
   445  014F4A  20                 	db	32
   446  014F4B  20                 	db	32
   447  014F4C  20                 	db	32
   448  014F4D  2A                 	db	42
   449  014F4E  2A                 	db	42
   450  014F4F  20                 	db	32
   451  014F50  20                 	db	32
   452  014F51  20                 	db	32
   453  014F52  20                 	db	32
   454  014F53  76                 	db	118
   455  014F54  20                 	db	32
   456  014F55  20                 	db	32
   457  014F56  20                 	db	32
   458  014F57  20                 	db	32
   459  014F58  20                 	db	32
   460  014F59  20                 	db	32
   461  014F5A  20                 	db	32
   462  014F5B  20                 	db	32
   463  014F5C  20                 	db	32
   464  014F5D  20                 	db	32
   465  014F5E  20                 	db	32
   466  014F5F  20                 	db	32
   467  014F60  20                 	db	32
   468  014F61  2A                 	db	42
   469  014F62  2A                 	db	42
   470  014F63  20                 	db	32
   471  014F64  20                 	db	32
   472  014F65  73                 	db	115
   473  014F66  6F                 	db	111
   474  014F67  6C                 	db	108
   475  014F68  64                 	db	100
   476  014F69  65                 	db	101
   477  014F6A  72                 	db	114
   478  014F6B  6E                 	db	110
   479  014F6C  65                 	db	101
   480  014F6D  72                 	db	114
   481  014F6E  64                 	db	100
   482  014F6F  2E                 	db	46
   483  014F70  63                 	db	99
   484  014F71  6F                 	db	111
   485  014F72  6D                 	db	109
   486  014F73  20                 	db	32
   487  014F74  20                 	db	32
   488  014F75  2A                 	db	42
   489                           
   490                           	psect	mediumconst
   491  009092                     __pmediumconst:
   492                           	opt stack 0
   493  009092  00                 	db	0
   494  009093                     _motor_speed_lookup:
   495                           	opt stack 0
   496  009093  0008               	dw	8
   497  009095  000C               	dw	12
   498  009097  0010               	dw	16
   499  009099  0013               	dw	19
   500  00909B  0016               	dw	22
   501  00909D  0019               	dw	25
   502  00909F  001C               	dw	28
   503  0090A1  001E               	dw	30
   504  0090A3  0021               	dw	33
   505  0090A5  0023               	dw	35
   506  0090A7  0026               	dw	38
   507  0090A9  0028               	dw	40
   508  0090AB  002A               	dw	42
   509  0090AD  002C               	dw	44
   510  0090AF  002E               	dw	46
   511  0090B1  0030               	dw	48
   512  0090B3  0032               	dw	50
   513  0090B5  0034               	dw	52
   514  0090B7  0036               	dw	54
   515  0090B9  0038               	dw	56
   516  0090BB  003A               	dw	58
   517  0090BD  003C               	dw	60
   518  0090BF  003D               	dw	61
   519  0090C1  003F               	dw	63
   520  0090C3  0041               	dw	65
   521  0090C5  0043               	dw	67
   522  0090C7  0045               	dw	69
   523  0090C9  0046               	dw	70
   524  0090CB  0048               	dw	72
   525  0090CD  0049               	dw	73
   526  0090CF  004B               	dw	75
   527  0090D1  004D               	dw	77
   528  0090D3  004E               	dw	78
   529  0090D5  0050               	dw	80
   530  0090D7  0051               	dw	81
   531  0090D9  0053               	dw	83
   532  0090DB  0054               	dw	84
   533  0090DD  0056               	dw	86
   534  0090DF  0057               	dw	87
   535  0090E1  0059               	dw	89
   536  0090E3  005A               	dw	90
   537  0090E5  005C               	dw	92
   538  0090E7  005D               	dw	93
   539  0090E9  005F               	dw	95
   540  0090EB  0060               	dw	96
   541  0090ED  0062               	dw	98
   542  0090EF  0063               	dw	99
   543  0090F1  0064               	dw	100
   544  0090F3  0066               	dw	102
   545  0090F5  0067               	dw	103
   546  0090F7  0069               	dw	105
   547  0090F9  006A               	dw	106
   548  0090FB  006C               	dw	108
   549  0090FD  006D               	dw	109
   550  0090FF  006E               	dw	110
   551  009101  0070               	dw	112
   552  009103  0071               	dw	113
   553  009105  0072               	dw	114
   554  009107  0073               	dw	115
   555  009109  0074               	dw	116
   556  00910B  0076               	dw	118
   557  00910D  0078               	dw	120
   558  00910F  0079               	dw	121
   559  009111  007A               	dw	122
   560  009113  007B               	dw	123
   561  009115  007D               	dw	125
   562  009117  007E               	dw	126
   563  009119  007F               	dw	127
   564  00911B  0082               	dw	130
   565  00911D  0085               	dw	133
   566  00911F  0087               	dw	135
   567  009121  008A               	dw	138
   568  009123  008C               	dw	140
   569  009125  008F               	dw	143
   570  009127  0091               	dw	145
   571  009129  0092               	dw	146
   572  00912B  0094               	dw	148
   573  00912D  0098               	dw	152
   574  00912F  009A               	dw	154
   575  009131  009C               	dw	156
   576  009133  009E               	dw	158
   577  009135  00A1               	dw	161
   578  009137  00A3               	dw	163
   579  009139  00A5               	dw	165
   580  00913B  00A7               	dw	167
   581  00913D  00AA               	dw	170
   582  00913F  00AC               	dw	172
   583  009141  00AF               	dw	175
   584  009143  00B2               	dw	178
   585  009145  00B4               	dw	180
   586  009147  00B7               	dw	183
   587  009149  00B8               	dw	184
   588  00914B  00BA               	dw	186
   589  00914D  00BC               	dw	188
   590  00914F  00BE               	dw	190
   591  009151  00C0               	dw	192
   592  009153  00C3               	dw	195
   593  009155  00C4               	dw	196
   594  009157  00C6               	dw	198
   595  009159  00C8               	dw	200
   596  00915B  00CA               	dw	202
   597  00915D  00CC               	dw	204
   598  00915F  00CE               	dw	206
   599  009161  00D0               	dw	208
   600  009163  00D2               	dw	210
   601  009165  00D4               	dw	212
   602  009167  00D6               	dw	214
   603  009169  00D8               	dw	216
   604  00916B  00D9               	dw	217
   605  00916D  00DB               	dw	219
   606  00916F  00DD               	dw	221
   607  009171  00DF               	dw	223
   608  009173  00E1               	dw	225
   609  009175  00E2               	dw	226
   610  009177  00E5               	dw	229
   611  009179  00E7               	dw	231
   612  00917B  00E8               	dw	232
   613  00917D  00EA               	dw	234
   614  00917F  00EC               	dw	236
   615  009181  00EE               	dw	238
   616  009183  00EF               	dw	239
   617  009185  00F2               	dw	242
   618  009187  00F3               	dw	243
   619  009189  00F5               	dw	245
   620  00918B  00F7               	dw	247
   621  00918D  00F8               	dw	248
   622  00918F  00FB               	dw	251
   623  009191  00FD               	dw	253
   624  009193  0100               	dw	256
   625  009195  0103               	dw	259
   626  009197  0104               	dw	260
   627  009199  0107               	dw	263
   628  00919B  010A               	dw	266
   629  00919D  010C               	dw	268
   630  00919F  010F               	dw	271
   631  0091A1  0112               	dw	274
   632  0091A3  0114               	dw	276
   633  0091A5  0117               	dw	279
   634  0091A7  0119               	dw	281
   635  0091A9  011C               	dw	284
   636  0091AB  011E               	dw	286
   637  0091AD  0121               	dw	289
   638  0091AF  0123               	dw	291
   639  0091B1  0125               	dw	293
   640  0091B3  0129               	dw	297
   641  0091B5  012B               	dw	299
   642  0091B7  012C               	dw	300
   643  0091B9  012E               	dw	302
   644  0091BB  0132               	dw	306
   645  0091BD  0134               	dw	308
   646  0091BF  0136               	dw	310
   647  0091C1  0138               	dw	312
   648  0091C3  013B               	dw	315
   649  0091C5  013D               	dw	317
   650  0091C7  013F               	dw	319
   651  0091C9  0143               	dw	323
   652  0091CB  0146               	dw	326
   653  0091CD  0148               	dw	328
   654  0091CF  014A               	dw	330
   655  0091D1  014C               	dw	332
   656  0091D3  014F               	dw	335
   657  0091D5  0151               	dw	337
   658  0091D7  0154               	dw	340
   659  0091D9  0156               	dw	342
   660  0091DB  0159               	dw	345
   661  0091DD  015B               	dw	347
   662  0091DF  015E               	dw	350
   663  0091E1  0160               	dw	352
   664  0091E3  0163               	dw	355
   665  0091E5  0166               	dw	358
   666  0091E7  0169               	dw	361
   667  0091E9  016B               	dw	363
   668  0091EB  016E               	dw	366
   669  0091ED  0171               	dw	369
   670  0091EF  0174               	dw	372
   671  0091F1  0177               	dw	375
   672  0091F3  017A               	dw	378
   673  0091F5  017D               	dw	381
   674  0091F7  0180               	dw	384
   675  0091F9  0183               	dw	387
   676  0091FB  0187               	dw	391
   677  0091FD  018A               	dw	394
   678  0091FF  018D               	dw	397
   679  009201  0191               	dw	401
   680  009203  0194               	dw	404
   681  009205  0198               	dw	408
   682  009207  019B               	dw	411
   683  009209  019F               	dw	415
   684  00920B  01A3               	dw	419
   685  00920D  01A6               	dw	422
   686  00920F  01AA               	dw	426
   687  009211  01AE               	dw	430
   688  009213  01B2               	dw	434
   689  009215  01B6               	dw	438
   690  009217  01BA               	dw	442
   691  009219  01BE               	dw	446
   692  00921B  01C3               	dw	451
   693  00921D  01C7               	dw	455
   694  00921F  01CC               	dw	460
   695  009221  01D0               	dw	464
   696  009223  01D5               	dw	469
   697  009225  01D9               	dw	473
   698  009227  01DE               	dw	478
   699  009229  01E3               	dw	483
   700  00922B  01E8               	dw	488
   701  00922D  01ED               	dw	493
   702  00922F  01F3               	dw	499
   703  009231  01F8               	dw	504
   704  009233  01FE               	dw	510
   705  009235  0203               	dw	515
   706  009237  0209               	dw	521
   707  009239  020F               	dw	527
   708  00923B  0215               	dw	533
   709  00923D  021B               	dw	539
   710  00923F  0221               	dw	545
   711  009241  0227               	dw	551
   712  009243  022E               	dw	558
   713  009245  0235               	dw	565
   714  009247  023C               	dw	572
   715  009249  0243               	dw	579
   716  00924B  024A               	dw	586
   717  00924D  0251               	dw	593
   718  00924F  0259               	dw	601
   719  009251  0261               	dw	609
   720  009253  0269               	dw	617
   721  009255  0271               	dw	625
   722  009257  0279               	dw	633
   723  009259  0282               	dw	642
   724  00925B  028B               	dw	651
   725  00925D  0294               	dw	660
   726  00925F  029E               	dw	670
   727  009261  02A7               	dw	679
   728  009263  02B1               	dw	689
   729  009265  02BC               	dw	700
   730  009267  02C6               	dw	710
   731  009269  02D1               	dw	721
   732  00926B  02DC               	dw	732
   733  00926D  02DC               	dw	732
   734  00926F  02DF               	dw	735
   735  009271  02E2               	dw	738
   736  009273  02E5               	dw	741
   737  009275  02E8               	dw	744
   738  009277  02EB               	dw	747
   739  009279  02EE               	dw	750
   740  00927B  02F1               	dw	753
   741  00927D  02F4               	dw	756
   742  00927F  02F7               	dw	759
   743  009281  02FA               	dw	762
   744  009283  02FD               	dw	765
   745  009285  0300               	dw	768
   746  009287  0304               	dw	772
   747  009289  0307               	dw	775
   748  00928B  030A               	dw	778
   749  00928D  030D               	dw	781
   750  00928F  0311               	dw	785
   751  009291  0314               	dw	788
   752  009293  0317               	dw	791
   753  009295  031A               	dw	794
   754  009297  031E               	dw	798
   755  009299  0321               	dw	801
   756  00929B  0325               	dw	805
   757  00929D  0328               	dw	808
   758  00929F  032C               	dw	812
   759  0092A1  032F               	dw	815
   760  0092A3  0333               	dw	819
   761  0092A5  0336               	dw	822
   762  0092A7  033A               	dw	826
   763  0092A9  033E               	dw	830
   764  0092AB  0341               	dw	833
   765  0092AD  0345               	dw	837
   766  0092AF  0349               	dw	841
   767  0092B1  034D               	dw	845
   768  0092B3  0350               	dw	848
   769  0092B5  0354               	dw	852
   770  0092B7  0358               	dw	856
   771  0092B9  035C               	dw	860
   772  0092BB  0360               	dw	864
   773  0092BD  0364               	dw	868
   774  0092BF  0368               	dw	872
   775  0092C1  036C               	dw	876
   776  0092C3  0370               	dw	880
   777  0092C5  0374               	dw	884
   778  0092C7  0379               	dw	889
   779  0092C9  037D               	dw	893
   780  0092CB  0381               	dw	897
   781  0092CD  0385               	dw	901
   782  0092CF  038A               	dw	906
   783  0092D1  038E               	dw	910
   784  0092D3  0393               	dw	915
   785  0092D5  0397               	dw	919
   786  0092D7  039C               	dw	924
   787  0092D9  03A0               	dw	928
   788  0092DB  03A5               	dw	933
   789  0092DD  03AA               	dw	938
   790  0092DF  03AE               	dw	942
   791  0092E1  03B3               	dw	947
   792  0092E3  03B8               	dw	952
   793  0092E5  03BD               	dw	957
   794  0092E7  03C2               	dw	962
   795  0092E9  03C6               	dw	966
   796  0092EB  03CC               	dw	972
   797  0092ED  03D1               	dw	977
   798  0092EF  03D6               	dw	982
   799  0092F1  03DB               	dw	987
   800  0092F3  03E0               	dw	992
   801  0092F5  03E5               	dw	997
   802  0092F7  03EB               	dw	1003
   803  0092F9  03F0               	dw	1008
   804  0092FB  03F6               	dw	1014
   805  0092FD  03FB               	dw	1019
   806  0092FF  0401               	dw	1025
   807  009301  0406               	dw	1030
   808  009303  040C               	dw	1036
   809  009305  0412               	dw	1042
   810  009307  0417               	dw	1047
   811  009309  041D               	dw	1053
   812  00930B  0423               	dw	1059
   813  00930D  0429               	dw	1065
   814  00930F  042F               	dw	1071
   815  009311  0436               	dw	1078
   816  009313  043C               	dw	1084
   817  009315  0442               	dw	1090
   818  009317  0448               	dw	1096
   819  009319  044F               	dw	1103
   820  00931B  0455               	dw	1109
   821  00931D  045C               	dw	1116
   822  00931F  0463               	dw	1123
   823  009321  046A               	dw	1130
   824  009323  0470               	dw	1136
   825  009325  0477               	dw	1143
   826  009327  047E               	dw	1150
   827  009329  0485               	dw	1157
   828  00932B  048D               	dw	1165
   829  00932D  0494               	dw	1172
   830  00932F  049B               	dw	1179
   831  009331  04A3               	dw	1187
   832  009333  04AA               	dw	1194
   833  009335  04B2               	dw	1202
   834  009337  04BA               	dw	1210
   835  009339  04C2               	dw	1218
   836  00933B  04C9               	dw	1225
   837  00933D  04D2               	dw	1234
   838  00933F  04DA               	dw	1242
   839  009341  04E2               	dw	1250
   840  009343  04EA               	dw	1258
   841  009345  04F3               	dw	1267
   842  009347  04FC               	dw	1276
   843  009349  0504               	dw	1284
   844  00934B  050D               	dw	1293
   845  00934D  0516               	dw	1302
   846  00934F  051F               	dw	1311
   847  009351  0528               	dw	1320
   848  009353  0532               	dw	1330
   849  009355  053B               	dw	1339
   850  009357  0545               	dw	1349
   851  009359  054F               	dw	1359
   852  00935B  0559               	dw	1369
   853  00935D  0563               	dw	1379
   854  00935F  056D               	dw	1389
   855  009361  0577               	dw	1399
   856  009363  0582               	dw	1410
   857  009365  058C               	dw	1420
   858  009367  0597               	dw	1431
   859  009369  05A2               	dw	1442
   860  00936B  05AD               	dw	1453
   861  00936D  05B9               	dw	1465
   862  00936F  05C4               	dw	1476
   863  009371  05D0               	dw	1488
   864  009373  05DC               	dw	1500
   865  009375  05E8               	dw	1512
   866  009377  05F4               	dw	1524
   867  009379  0601               	dw	1537
   868  00937B  060E               	dw	1550
   869  00937D  061A               	dw	1562
   870  00937F  0628               	dw	1576
   871  009381  0635               	dw	1589
   872  009383  0643               	dw	1603
   873  009385  0650               	dw	1616
   874  009387  065E               	dw	1630
   875  009389  066D               	dw	1645
   876  00938B  067B               	dw	1659
   877  00938D  068A               	dw	1674
   878  00938F  0699               	dw	1689
   879  009391  06A9               	dw	1705
   880  009393  06B8               	dw	1720
   881  009395  06C8               	dw	1736
   882  009397  06D8               	dw	1752
   883  009399  06E9               	dw	1769
   884  00939B  06FA               	dw	1786
   885  00939D  070B               	dw	1803
   886  00939F  071C               	dw	1820
   887  0093A1  072E               	dw	1838
   888  0093A3  0740               	dw	1856
   889  0093A5  0753               	dw	1875
   890  0093A7  0766               	dw	1894
   891  0093A9  0779               	dw	1913
   892  0093AB  078D               	dw	1933
   893  0093AD  07A1               	dw	1953
   894  0093AF  07B6               	dw	1974
   895  0093B1  07CB               	dw	1995
   896  0093B3  07E0               	dw	2016
   897  0093B5  07F6               	dw	2038
   898  0093B7  080C               	dw	2060
   899  0093B9  0823               	dw	2083
   900  0093BB  083B               	dw	2107
   901  0093BD  0853               	dw	2131
   902  0093BF  086B               	dw	2155
   903  0093C1  0884               	dw	2180
   904  0093C3  089E               	dw	2206
   905  0093C5  08B8               	dw	2232
   906  0093C7  08D3               	dw	2259
   907  0093C9  08EF               	dw	2287
   908  0093CB  090B               	dw	2315
   909  0093CD  0928               	dw	2344
   910  0093CF  0945               	dw	2373
   911  0093D1  0964               	dw	2404
   912  0093D3  0983               	dw	2435
   913  0093D5  09A3               	dw	2467
   914  0093D7  09C4               	dw	2500
   915  0093D9  09E6               	dw	2534
   916  0093DB  0A08               	dw	2568
   917  0093DD  0A2C               	dw	2604
   918  0093DF  0A51               	dw	2641
   919  0093E1  0A77               	dw	2679
   920  0093E3  0A9D               	dw	2717
   921  0093E5  0AC5               	dw	2757
   922  0093E7  0AEF               	dw	2799
   923  0093E9  0B19               	dw	2841
   924  0093EB  0B45               	dw	2885
   925  0093ED  0B72               	dw	2930
   926  0093EF  0B72               	dw	2930
   927  0093F1  0B7D               	dw	2941
   928  0093F3  0B89               	dw	2953
   929  0093F5  0B94               	dw	2964
   930  0093F7  0BA0               	dw	2976
   931  0093F9  0BAC               	dw	2988
   932  0093FB  0BB8               	dw	3000
   933  0093FD  0BC4               	dw	3012
   934  0093FF  0BD0               	dw	3024
   935  009401  0BDC               	dw	3036
   936  009403  0BE9               	dw	3049
   937  009405  0BF5               	dw	3061
   938  009407  0C02               	dw	3074
   939  009409  0C0E               	dw	3086
   940  00940B  0C1B               	dw	3099
   941  00940D  0C28               	dw	3112
   942  00940F  0C35               	dw	3125
   943  009411  0C42               	dw	3138
   944  009413  0C4F               	dw	3151
   945  009415  0C5D               	dw	3165
   946  009417  0C6A               	dw	3178
   947  009419  0C77               	dw	3191
   948  00941B  0C85               	dw	3205
   949  00941D  0C93               	dw	3219
   950  00941F  0CA1               	dw	3233
   951  009421  0CAF               	dw	3247
   952  009423  0CBD               	dw	3261
   953  009425  0CCB               	dw	3275
   954  009427  0CD9               	dw	3289
   955  009429  0CE8               	dw	3304
   956  00942B  0CF7               	dw	3319
   957  00942D  0D05               	dw	3333
   958  00942F  0D14               	dw	3348
   959  009431  0D23               	dw	3363
   960  009433  0D32               	dw	3378
   961  009435  0D42               	dw	3394
   962  009437  0D51               	dw	3409
   963  009439  0D61               	dw	3425
   964  00943B  0D70               	dw	3440
   965  00943D  0D80               	dw	3456
   966  00943F  0D90               	dw	3472
   967  009441  0DA0               	dw	3488
   968  009443  0DB1               	dw	3505
   969  009445  0DC1               	dw	3521
   970  009447  0DD2               	dw	3538
   971  009449  0DE3               	dw	3555
   972  00944B  0DF3               	dw	3571
   973  00944D  0E05               	dw	3589
   974  00944F  0E16               	dw	3606
   975  009451  0E27               	dw	3623
   976  009453  0E39               	dw	3641
   977  009455  0E4B               	dw	3659
   978  009457  0E5C               	dw	3676
   979  009459  0E6F               	dw	3695
   980  00945B  0E81               	dw	3713
   981  00945D  0E93               	dw	3731
   982  00945F  0EA6               	dw	3750
   983  009461                     __end_of_motor_speed_lookup:
   984                           	opt stack 0
   985  009461                     _motor_steps_lookup:
   986                           	opt stack 0
   987  009461  0001               	dw	1
   988  009463  0002               	dw	2
   989  009465  0003               	dw	3
   990  009467  0004               	dw	4
   991  009469  0005               	dw	5
   992  00946B  0006               	dw	6
   993  00946D  0007               	dw	7
   994  00946F  0008               	dw	8
   995  009471  0009               	dw	9
   996  009473  000A               	dw	10
   997  009475  000B               	dw	11
   998  009477  000C               	dw	12
   999  009479  000D               	dw	13
  1000  00947B  000E               	dw	14
  1001  00947D  000F               	dw	15
  1002  00947F  0010               	dw	16
  1003  009481  0011               	dw	17
  1004  009483  0012               	dw	18
  1005  009485  0013               	dw	19
  1006  009487  0014               	dw	20
  1007  009489  0015               	dw	21
  1008  00948B  0016               	dw	22
  1009  00948D  0017               	dw	23
  1010  00948F  0018               	dw	24
  1011  009491  0019               	dw	25
  1012  009493  001A               	dw	26
  1013  009495  001B               	dw	27
  1014  009497  001C               	dw	28
  1015  009499  001D               	dw	29
  1016  00949B  001E               	dw	30
  1017  00949D  001F               	dw	31
  1018  00949F  0020               	dw	32
  1019  0094A1  0021               	dw	33
  1020  0094A3  0022               	dw	34
  1021  0094A5  0023               	dw	35
  1022  0094A7  0024               	dw	36
  1023  0094A9  0025               	dw	37
  1024  0094AB  0026               	dw	38
  1025  0094AD  0027               	dw	39
  1026  0094AF  0028               	dw	40
  1027  0094B1  0029               	dw	41
  1028  0094B3  002A               	dw	42
  1029  0094B5  002B               	dw	43
  1030  0094B7  002C               	dw	44
  1031  0094B9  002D               	dw	45
  1032  0094BB  002E               	dw	46
  1033  0094BD  002F               	dw	47
  1034  0094BF  0030               	dw	48
  1035  0094C1  0031               	dw	49
  1036  0094C3  0032               	dw	50
  1037  0094C5  0033               	dw	51
  1038  0094C7  0034               	dw	52
  1039  0094C9  0035               	dw	53
  1040  0094CB  0036               	dw	54
  1041  0094CD  0037               	dw	55
  1042  0094CF  0038               	dw	56
  1043  0094D1  0039               	dw	57
  1044  0094D3  003A               	dw	58
  1045  0094D5  003B               	dw	59
  1046  0094D7  003C               	dw	60
  1047  0094D9  003D               	dw	61
  1048  0094DB  003E               	dw	62
  1049  0094DD  003F               	dw	63
  1050  0094DF  0040               	dw	64
  1051  0094E1  0041               	dw	65
  1052  0094E3  0042               	dw	66
  1053  0094E5  0043               	dw	67
  1054  0094E7  0045               	dw	69
  1055  0094E9  0047               	dw	71
  1056  0094EB  0049               	dw	73
  1057  0094ED  004B               	dw	75
  1058  0094EF  004D               	dw	77
  1059  0094F1  004F               	dw	79
  1060  0094F3  0051               	dw	81
  1061  0094F5  0053               	dw	83
  1062  0094F7  0055               	dw	85
  1063  0094F9  0057               	dw	87
  1064  0094FB  0059               	dw	89
  1065  0094FD  005B               	dw	91
  1066  0094FF  005D               	dw	93
  1067  009501  005F               	dw	95
  1068  009503  0061               	dw	97
  1069  009505  0063               	dw	99
  1070  009507  0065               	dw	101
  1071  009509  0067               	dw	103
  1072  00950B  0069               	dw	105
  1073  00950D  006B               	dw	107
  1074  00950F  006E               	dw	110
  1075  009511  0070               	dw	112
  1076  009513  0073               	dw	115
  1077  009515  0075               	dw	117
  1078  009517  0077               	dw	119
  1079  009519  0079               	dw	121
  1080  00951B  007B               	dw	123
  1081  00951D  007D               	dw	125
  1082  00951F  007F               	dw	127
  1083  009521  0081               	dw	129
  1084  009523  0083               	dw	131
  1085  009525  0085               	dw	133
  1086  009527  0087               	dw	135
  1087  009529  0089               	dw	137
  1088  00952B  008B               	dw	139
  1089  00952D  008D               	dw	141
  1090  00952F  008F               	dw	143
  1091  009531  0091               	dw	145
  1092  009533  0093               	dw	147
  1093  009535  0095               	dw	149
  1094  009537  0097               	dw	151
  1095  009539  0099               	dw	153
  1096  00953B  009B               	dw	155
  1097  00953D  009D               	dw	157
  1098  00953F  009F               	dw	159
  1099  009541  00A1               	dw	161
  1100  009543  00A3               	dw	163
  1101  009545  00A5               	dw	165
  1102  009547  00A7               	dw	167
  1103  009549  00A9               	dw	169
  1104  00954B  00AB               	dw	171
  1105  00954D  00AD               	dw	173
  1106  00954F  00AF               	dw	175
  1107  009551  00B1               	dw	177
  1108  009553  00B3               	dw	179
  1109  009555  00B5               	dw	181
  1110  009557  00B7               	dw	183
  1111  009559  00B9               	dw	185
  1112  00955B  00BB               	dw	187
  1113  00955D  00BD               	dw	189
  1114  00955F  00C0               	dw	192
  1115  009561  00C3               	dw	195
  1116  009563  00C6               	dw	198
  1117  009565  00C9               	dw	201
  1118  009567  00CC               	dw	204
  1119  009569  00CF               	dw	207
  1120  00956B  00D2               	dw	210
  1121  00956D  00D5               	dw	213
  1122  00956F  00D8               	dw	216
  1123  009571  00DB               	dw	219
  1124  009573  00DE               	dw	222
  1125  009575  00E1               	dw	225
  1126  009577  00E4               	dw	228
  1127  009579  00E7               	dw	231
  1128  00957B  00EA               	dw	234
  1129  00957D  00ED               	dw	237
  1130  00957F  00F0               	dw	240
  1131  009581  00F3               	dw	243
  1132  009583  00F6               	dw	246
  1133  009585  00F9               	dw	249
  1134  009587  00FC               	dw	252
  1135  009589  00FF               	dw	255
  1136  00958B  0102               	dw	258
  1137  00958D  0105               	dw	261
  1138  00958F  0108               	dw	264
  1139  009591  010B               	dw	267
  1140  009593  010E               	dw	270
  1141  009595  0111               	dw	273
  1142  009597  0114               	dw	276
  1143  009599  0117               	dw	279
  1144  00959B  011A               	dw	282
  1145  00959D  011D               	dw	285
  1146  00959F  0120               	dw	288
  1147  0095A1  0123               	dw	291
  1148  0095A3  0126               	dw	294
  1149  0095A5  012A               	dw	298
  1150  0095A7  012D               	dw	301
  1151  0095A9  0130               	dw	304
  1152  0095AB  0133               	dw	307
  1153  0095AD  0137               	dw	311
  1154  0095AF  013A               	dw	314
  1155  0095B1  013E               	dw	318
  1156  0095B3  0142               	dw	322
  1157  0095B5  0145               	dw	325
  1158  0095B7  0149               	dw	329
  1159  0095B9  014D               	dw	333
  1160  0095BB  0151               	dw	337
  1161  0095BD  0155               	dw	341
  1162  0095BF  0159               	dw	345
  1163  0095C1  015D               	dw	349
  1164  0095C3  0161               	dw	353
  1165  0095C5  0166               	dw	358
  1166  0095C7  016A               	dw	362
  1167  0095C9  016E               	dw	366
  1168  0095CB  0173               	dw	371
  1169  0095CD  0178               	dw	376
  1170  0095CF  017D               	dw	381
  1171  0095D1  0182               	dw	386
  1172  0095D3  0187               	dw	391
  1173  0095D5  018C               	dw	396
  1174  0095D7  0191               	dw	401
  1175  0095D9  0196               	dw	406
  1176  0095DB  019C               	dw	412
  1177  0095DD  01A1               	dw	417
  1178  0095DF  01A7               	dw	423
  1179  0095E1  01AD               	dw	429
  1180  0095E3  01B3               	dw	435
  1181  0095E5  01B9               	dw	441
  1182  0095E7  01BF               	dw	447
  1183  0095E9  01C6               	dw	454
  1184  0095EB  01CC               	dw	460
  1185  0095ED  01D3               	dw	467
  1186  0095EF  01DA               	dw	474
  1187  0095F1  01E1               	dw	481
  1188  0095F3  01E8               	dw	488
  1189  0095F5  01F0               	dw	496
  1190  0095F7  01F7               	dw	503
  1191  0095F9  01FF               	dw	511
  1192  0095FB  0207               	dw	519
  1193  0095FD  020F               	dw	527
  1194  0095FF  0218               	dw	536
  1195  009601  0221               	dw	545
  1196  009603  022A               	dw	554
  1197  009605  0233               	dw	563
  1198  009607  023D               	dw	573
  1199  009609  0247               	dw	583
  1200  00960B  0251               	dw	593
  1201  00960D  025C               	dw	604
  1202  00960F  0267               	dw	615
  1203  009611  0272               	dw	626
  1204  009613  027E               	dw	638
  1205  009615  028A               	dw	650
  1206  009617  0297               	dw	663
  1207  009619  02A4               	dw	676
  1208  00961B  02B2               	dw	690
  1209  00961D  02C0               	dw	704
  1210  00961F  02CF               	dw	719
  1211  009621  02DF               	dw	735
  1212  009623  02EF               	dw	751
  1213  009625  02FF               	dw	767
  1214  009627  0311               	dw	785
  1215  009629  0323               	dw	803
  1216  00962B  0336               	dw	822
  1217  00962D  0349               	dw	841
  1218  00962F  035E               	dw	862
  1219  009631  0373               	dw	883
  1220  009633  0389               	dw	905
  1221  009635  03A1               	dw	929
  1222  009637  03B9               	dw	953
  1223  009639  03D3               	dw	979
  1224  00963B  03DD               	dw	989
  1225  00963D  03E4               	dw	996
  1226  00963F  03EA               	dw	1002
  1227  009641  03F1               	dw	1009
  1228  009643  03F8               	dw	1016
  1229  009645  03FF               	dw	1023
  1230  009647  0406               	dw	1030
  1231  009649  040D               	dw	1037
  1232  00964B  0415               	dw	1045
  1233  00964D  041C               	dw	1052
  1234  00964F  0424               	dw	1060
  1235  009651  042B               	dw	1067
  1236  009653  0433               	dw	1075
  1237  009655  043B               	dw	1083
  1238  009657  0442               	dw	1090
  1239  009659  044A               	dw	1098
  1240  00965B  0452               	dw	1106
  1241  00965D  045A               	dw	1114
  1242  00965F  0463               	dw	1123
  1243  009661  046B               	dw	1131
  1244  009663  0474               	dw	1140
  1245  009665  047C               	dw	1148
  1246  009667  0485               	dw	1157
  1247  009669  048E               	dw	1166
  1248  00966B  0496               	dw	1174
  1249  00966D  049F               	dw	1183
  1250  00966F  04A9               	dw	1193
  1251  009671  04B2               	dw	1202
  1252  009673  04BB               	dw	1211
  1253  009675  04C5               	dw	1221
  1254  009677  04CE               	dw	1230
  1255  009679  04D8               	dw	1240
  1256  00967B  04E2               	dw	1250
  1257  00967D  04EC               	dw	1260
  1258  00967F  04F6               	dw	1270
  1259  009681  0500               	dw	1280
  1260  009683  050B               	dw	1291
  1261  009685  0515               	dw	1301
  1262  009687  0520               	dw	1312
  1263  009689  052B               	dw	1323
  1264  00968B  0536               	dw	1334
  1265  00968D  0541               	dw	1345
  1266  00968F  054C               	dw	1356
  1267  009691  0558               	dw	1368
  1268  009693  0564               	dw	1380
  1269  009695  056F               	dw	1391
  1270  009697  057B               	dw	1403
  1271  009699  0587               	dw	1415
  1272  00969B  0594               	dw	1428
  1273  00969D  05A0               	dw	1440
  1274  00969F  05AD               	dw	1453
  1275  0096A1  05BA               	dw	1466
  1276  0096A3  05C7               	dw	1479
  1277  0096A5  05D4               	dw	1492
  1278  0096A7  05E2               	dw	1506
  1279  0096A9  05EF               	dw	1519
  1280  0096AB  05FD               	dw	1533
  1281  0096AD  060B               	dw	1547
  1282  0096AF  0619               	dw	1561
  1283  0096B1  0628               	dw	1576
  1284  0096B3  0637               	dw	1591
  1285  0096B5  0646               	dw	1606
  1286  0096B7  0655               	dw	1621
  1287  0096B9  0664               	dw	1636
  1288  0096BB  0674               	dw	1652
  1289  0096BD  0684               	dw	1668
  1290  0096BF  0694               	dw	1684
  1291  0096C1  06A4               	dw	1700
  1292  0096C3  06B5               	dw	1717
  1293  0096C5  06C6               	dw	1734
  1294  0096C7  06D7               	dw	1751
  1295  0096C9  06E9               	dw	1769
  1296  0096CB  06FA               	dw	1786
  1297  0096CD  070C               	dw	1804
  1298  0096CF  071F               	dw	1823
  1299  0096D1  0731               	dw	1841
  1300  0096D3  0744               	dw	1860
  1301  0096D5  0758               	dw	1880
  1302  0096D7  076B               	dw	1899
  1303  0096D9  077F               	dw	1919
  1304  0096DB  0793               	dw	1939
  1305  0096DD  07A8               	dw	1960
  1306  0096DF  07BD               	dw	1981
  1307  0096E1  07D2               	dw	2002
  1308  0096E3  07E8               	dw	2024
  1309  0096E5  07FE               	dw	2046
  1310  0096E7  0815               	dw	2069
  1311  0096E9  082C               	dw	2092
  1312  0096EB  0843               	dw	2115
  1313  0096ED  085B               	dw	2139
  1314  0096EF  0873               	dw	2163
  1315  0096F1  088B               	dw	2187
  1316  0096F3  08A5               	dw	2213
  1317  0096F5  08BE               	dw	2238
  1318  0096F7  08D8               	dw	2264
  1319  0096F9  08F2               	dw	2290
  1320  0096FB  090D               	dw	2317
  1321  0096FD  0929               	dw	2345
  1322  0096FF  0945               	dw	2373
  1323  009701  0961               	dw	2401
  1324  009703  097E               	dw	2430
  1325  009705  099C               	dw	2460
  1326  009707  09BA               	dw	2490
  1327  009709  09D9               	dw	2521
  1328  00970B  09F9               	dw	2553
  1329  00970D  0A19               	dw	2585
  1330  00970F  0A39               	dw	2617
  1331  009711  0A5B               	dw	2651
  1332  009713  0A7D               	dw	2685
  1333  009715  0A9F               	dw	2719
  1334  009717  0AC3               	dw	2755
  1335  009719  0AE7               	dw	2791
  1336  00971B  0B0C               	dw	2828
  1337  00971D  0B31               	dw	2865
  1338  00971F  0B58               	dw	2904
  1339  009721  0B7F               	dw	2943
  1340  009723  0BA7               	dw	2983
  1341  009725  0BD0               	dw	3024
  1342  009727  0BFA               	dw	3066
  1343  009729  0C25               	dw	3109
  1344  00972B  0C51               	dw	3153
  1345  00972D  0C7E               	dw	3198
  1346  00972F  0CAB               	dw	3243
  1347  009731  0CDA               	dw	3290
  1348  009733  0D0A               	dw	3338
  1349  009735  0D3B               	dw	3387
  1350  009737  0D6D               	dw	3437
  1351  009739  0DA0               	dw	3488
  1352  00973B  0DD4               	dw	3540
  1353  00973D  0E0A               	dw	3594
  1354  00973F  0E41               	dw	3649
  1355  009741  0E79               	dw	3705
  1356  009743  0EB3               	dw	3763
  1357  009745  0EEE               	dw	3822
  1358  009747  0F2A               	dw	3882
  1359  009749  0F68               	dw	3944
  1360  00974B  0FA8               	dw	4008
  1361  00974D  0FE9               	dw	4073
  1362  00974F  102C               	dw	4140
  1363  009751  1070               	dw	4208
  1364  009753  10B6               	dw	4278
  1365  009755  10FE               	dw	4350
  1366  009757  1148               	dw	4424
  1367  009759  1194               	dw	4500
  1368  00975B  11E2               	dw	4578
  1369  00975D  1232               	dw	4658
  1370  00975F  1285               	dw	4741
  1371  009761  12D9               	dw	4825
  1372  009763  1330               	dw	4912
  1373  009765  1389               	dw	5001
  1374  009767  13E5               	dw	5093
  1375  009769  1444               	dw	5188
  1376  00976B  14A5               	dw	5285
  1377  00976D  1509               	dw	5385
  1378  00976F  1570               	dw	5488
  1379  009771  15DA               	dw	5594
  1380  009773  1647               	dw	5703
  1381  009775  16B8               	dw	5816
  1382  009777  172B               	dw	5931
  1383  009779  17A3               	dw	6051
  1384  00977B  181E               	dw	6174
  1385  00977D  189D               	dw	6301
  1386  00977F  1921               	dw	6433
  1387  009781  19A8               	dw	6568
  1388  009783  1A34               	dw	6708
  1389  009785  1AC4               	dw	6852
  1390  009787  1B5A               	dw	7002
  1391  009789  1BF4               	dw	7156
  1392  00978B  1C94               	dw	7316
  1393  00978D  1D39               	dw	7481
  1394  00978F  1DE4               	dw	7652
  1395  009791  1E95               	dw	7829
  1396  009793  1F4C               	dw	8012
  1397  009795  200A               	dw	8202
  1398  009797  20CE               	dw	8398
  1399  009799  219A               	dw	8602
  1400  00979B  226E               	dw	8814
  1401  00979D  234A               	dw	9034
  1402  00979F  242E               	dw	9262
  1403  0097A1  251B               	dw	9499
  1404  0097A3  2612               	dw	9746
  1405  0097A5  2712               	dw	10002
  1406  0097A7  281D               	dw	10269
  1407  0097A9  2932               	dw	10546
  1408  0097AB  2A53               	dw	10835
  1409  0097AD  2B81               	dw	11137
  1410  0097AF  2CBB               	dw	11451
  1411  0097B1  2E03               	dw	11779
  1412  0097B3  2F5A               	dw	12122
  1413  0097B5  30C0               	dw	12480
  1414  0097B7  3236               	dw	12854
  1415  0097B9  33BD               	dw	13245
  1416  0097BB  3557               	dw	13655
  1417  0097BD  35F5               	dw	13813
  1418  0097BF  3661               	dw	13921
  1419  0097C1  36CD               	dw	14029
  1420  0097C3  373B               	dw	14139
  1421  0097C5  37AA               	dw	14250
  1422  0097C7  381B               	dw	14363
  1423  0097C9  388C               	dw	14476
  1424  0097CB  3900               	dw	14592
  1425  0097CD  3974               	dw	14708
  1426  0097CF  39EA               	dw	14826
  1427  0097D1  3A62               	dw	14946
  1428  0097D3  3ADB               	dw	15067
  1429  0097D5  3B55               	dw	15189
  1430  0097D7  3BD1               	dw	15313
  1431  0097D9  3C4E               	dw	15438
  1432  0097DB  3CCD               	dw	15565
  1433  0097DD  3D4E               	dw	15694
  1434  0097DF  3DD0               	dw	15824
  1435  0097E1  3E54               	dw	15956
  1436  0097E3  3EDA               	dw	16090
  1437  0097E5  3F61               	dw	16225
  1438  0097E7  3FEA               	dw	16362
  1439  0097E9  4074               	dw	16500
  1440  0097EB  4101               	dw	16641
  1441  0097ED  418F               	dw	16783
  1442  0097EF  421F               	dw	16927
  1443  0097F1  42B1               	dw	17073
  1444  0097F3  4345               	dw	17221
  1445  0097F5  43DB               	dw	17371
  1446  0097F7  4473               	dw	17523
  1447  0097F9  450D               	dw	17677
  1448  0097FB  45A9               	dw	17833
  1449  0097FD  4647               	dw	17991
  1450  0097FF  46E7               	dw	18151
  1451  009801  4789               	dw	18313
  1452  009803  482E               	dw	18478
  1453  009805  48D5               	dw	18645
  1454  009807  497E               	dw	18814
  1455  009809  4A29               	dw	18985
  1456  00980B  4AD7               	dw	19159
  1457  00980D  4B87               	dw	19335
  1458  00980F  4C3A               	dw	19514
  1459  009811  4CEF               	dw	19695
  1460  009813  4DA6               	dw	19878
  1461  009815  4E61               	dw	20065
  1462  009817  4F1E               	dw	20254
  1463  009819  4FDD               	dw	20445
  1464  00981B  50A0               	dw	20640
  1465  00981D  5165               	dw	20837
  1466  00981F  522D               	dw	21037
  1467  009821  52F8               	dw	21240
  1468  009823  53C6               	dw	21446
  1469  009825  5497               	dw	21655
  1470  009827  556B               	dw	21867
  1471  009829  5642               	dw	22082
  1472  00982B  571C               	dw	22300
  1473  00982D  57FA               	dw	22522
  1474  00982F                     __end_of_motor_steps_lookup:
  1475                           	opt stack 0
  1476  00982F                     _motor_postscaler_lookup:
  1477                           	opt stack 0
  1478  00982F  0C                 	db	12
  1479  009830  07                 	db	7
  1480  009831  05                 	db	5
  1481  009832  04                 	db	4
  1482  009833  04                 	db	4
  1483  009834  03                 	db	3
  1484  009835  03                 	db	3
  1485  009836  03                 	db	3
  1486  009837  02                 	db	2
  1487  009838  02                 	db	2
  1488  009839  02                 	db	2
  1489  00983A  02                 	db	2
  1490  00983B  02                 	db	2
  1491  00983C  02                 	db	2
  1492  00983D  01                 	db	1
  1493  00983E  01                 	db	1
  1494  00983F  01                 	db	1
  1495  009840  01                 	db	1
  1496  009841  01                 	db	1
  1497  009842  01                 	db	1
  1498  009843  01                 	db	1
  1499  009844  01                 	db	1
  1500  009845  01                 	db	1
  1501  009846  01                 	db	1
  1502  009847  01                 	db	1
  1503  009848  01                 	db	1
  1504  009849  01                 	db	1
  1505  00984A  01                 	db	1
  1506  00984B  01                 	db	1
  1507  00984C  01                 	db	1
  1508  00984D  01                 	db	1
  1509  00984E  01                 	db	1
  1510  00984F  01                 	db	1
  1511  009850  01                 	db	1
  1512  009851  01                 	db	1
  1513  009852  01                 	db	1
  1514  009853  01                 	db	1
  1515  009854  01                 	db	1
  1516  009855  01                 	db	1
  1517  009856  01                 	db	1
  1518  009857  01                 	db	1
  1519  009858  01                 	db	1
  1520  009859  01                 	db	1
  1521  00985A  01                 	db	1
  1522  00985B  01                 	db	1
  1523  00985C  01                 	db	1
  1524  00985D  01                 	db	1
  1525  00985E  01                 	db	1
  1526  00985F  01                 	db	1
  1527  009860  01                 	db	1
  1528  009861  01                 	db	1
  1529  009862  01                 	db	1
  1530  009863  01                 	db	1
  1531  009864  01                 	db	1
  1532  009865  01                 	db	1
  1533  009866  01                 	db	1
  1534  009867  01                 	db	1
  1535  009868  01                 	db	1
  1536  009869  01                 	db	1
  1537  00986A  01                 	db	1
  1538  00986B  01                 	db	1
  1539  00986C  01                 	db	1
  1540  00986D  01                 	db	1
  1541  00986E  01                 	db	1
  1542  00986F  01                 	db	1
  1543  009870  01                 	db	1
  1544  009871  01                 	db	1
  1545  009872  01                 	db	1
  1546  009873  01                 	db	1
  1547  009874  01                 	db	1
  1548  009875  01                 	db	1
  1549  009876  01                 	db	1
  1550  009877  01                 	db	1
  1551  009878  01                 	db	1
  1552  009879  01                 	db	1
  1553  00987A  01                 	db	1
  1554  00987B  01                 	db	1
  1555  00987C  01                 	db	1
  1556  00987D  01                 	db	1
  1557  00987E  01                 	db	1
  1558  00987F  01                 	db	1
  1559  009880  01                 	db	1
  1560  009881  01                 	db	1
  1561  009882  01                 	db	1
  1562  009883  01                 	db	1
  1563  009884  01                 	db	1
  1564  009885  01                 	db	1
  1565  009886  01                 	db	1
  1566  009887  01                 	db	1
  1567  009888  01                 	db	1
  1568  009889  01                 	db	1
  1569  00988A  00                 	db	0
  1570  00988B  00                 	db	0
  1571  00988C  00                 	db	0
  1572  00988D  00                 	db	0
  1573  00988E  00                 	db	0
  1574  00988F  00                 	db	0
  1575  009890  00                 	db	0
  1576  009891  00                 	db	0
  1577  009892  00                 	db	0
  1578  009893  00                 	db	0
  1579  009894  00                 	db	0
  1580  009895  00                 	db	0
  1581  009896  00                 	db	0
  1582  009897  00                 	db	0
  1583  009898  00                 	db	0
  1584  009899  00                 	db	0
  1585  00989A  00                 	db	0
  1586  00989B  00                 	db	0
  1587  00989C  00                 	db	0
  1588  00989D  00                 	db	0
  1589  00989E  00                 	db	0
  1590  00989F  00                 	db	0
  1591  0098A0  00                 	db	0
  1592  0098A1  00                 	db	0
  1593  0098A2  00                 	db	0
  1594  0098A3  00                 	db	0
  1595  0098A4  00                 	db	0
  1596  0098A5  00                 	db	0
  1597  0098A6  00                 	db	0
  1598  0098A7  00                 	db	0
  1599  0098A8  00                 	db	0
  1600  0098A9  00                 	db	0
  1601  0098AA  00                 	db	0
  1602  0098AB  00                 	db	0
  1603  0098AC  00                 	db	0
  1604  0098AD  00                 	db	0
  1605  0098AE  00                 	db	0
  1606  0098AF  00                 	db	0
  1607  0098B0  00                 	db	0
  1608  0098B1  00                 	db	0
  1609  0098B2  00                 	db	0
  1610  0098B3  00                 	db	0
  1611  0098B4  00                 	db	0
  1612  0098B5  00                 	db	0
  1613  0098B6  00                 	db	0
  1614  0098B7  00                 	db	0
  1615  0098B8  00                 	db	0
  1616  0098B9  00                 	db	0
  1617  0098BA  00                 	db	0
  1618  0098BB  00                 	db	0
  1619  0098BC  00                 	db	0
  1620  0098BD  00                 	db	0
  1621  0098BE  00                 	db	0
  1622  0098BF  00                 	db	0
  1623  0098C0  00                 	db	0
  1624  0098C1  00                 	db	0
  1625  0098C2  00                 	db	0
  1626  0098C3  00                 	db	0
  1627  0098C4  00                 	db	0
  1628  0098C5  00                 	db	0
  1629  0098C6  00                 	db	0
  1630  0098C7  00                 	db	0
  1631  0098C8  00                 	db	0
  1632  0098C9  00                 	db	0
  1633  0098CA  00                 	db	0
  1634  0098CB  00                 	db	0
  1635  0098CC  00                 	db	0
  1636  0098CD  00                 	db	0
  1637  0098CE  00                 	db	0
  1638  0098CF  00                 	db	0
  1639  0098D0  00                 	db	0
  1640  0098D1  00                 	db	0
  1641  0098D2  00                 	db	0
  1642  0098D3  00                 	db	0
  1643  0098D4  00                 	db	0
  1644  0098D5  00                 	db	0
  1645  0098D6  00                 	db	0
  1646  0098D7  00                 	db	0
  1647  0098D8  00                 	db	0
  1648  0098D9  00                 	db	0
  1649  0098DA  00                 	db	0
  1650  0098DB  00                 	db	0
  1651  0098DC  00                 	db	0
  1652  0098DD  00                 	db	0
  1653  0098DE  00                 	db	0
  1654  0098DF  00                 	db	0
  1655  0098E0  00                 	db	0
  1656  0098E1  00                 	db	0
  1657  0098E2  00                 	db	0
  1658  0098E3  00                 	db	0
  1659  0098E4  00                 	db	0
  1660  0098E5  00                 	db	0
  1661  0098E6  00                 	db	0
  1662  0098E7  00                 	db	0
  1663  0098E8  00                 	db	0
  1664  0098E9  00                 	db	0
  1665  0098EA  00                 	db	0
  1666  0098EB  00                 	db	0
  1667  0098EC  00                 	db	0
  1668  0098ED  00                 	db	0
  1669  0098EE  00                 	db	0
  1670  0098EF  00                 	db	0
  1671  0098F0  00                 	db	0
  1672  0098F1  00                 	db	0
  1673  0098F2  00                 	db	0
  1674  0098F3  00                 	db	0
  1675  0098F4  00                 	db	0
  1676  0098F5  00                 	db	0
  1677  0098F6  00                 	db	0
  1678  0098F7  00                 	db	0
  1679  0098F8  00                 	db	0
  1680  0098F9  00                 	db	0
  1681  0098FA  00                 	db	0
  1682  0098FB  00                 	db	0
  1683  0098FC  00                 	db	0
  1684  0098FD  00                 	db	0
  1685  0098FE  00                 	db	0
  1686  0098FF  00                 	db	0
  1687  009900  00                 	db	0
  1688  009901  00                 	db	0
  1689  009902  00                 	db	0
  1690  009903  00                 	db	0
  1691  009904  00                 	db	0
  1692  009905  00                 	db	0
  1693  009906  00                 	db	0
  1694  009907  00                 	db	0
  1695  009908  00                 	db	0
  1696  009909  00                 	db	0
  1697  00990A  00                 	db	0
  1698  00990B  00                 	db	0
  1699  00990C  00                 	db	0
  1700  00990D  00                 	db	0
  1701  00990E  00                 	db	0
  1702  00990F  00                 	db	0
  1703  009910  00                 	db	0
  1704  009911  00                 	db	0
  1705  009912  00                 	db	0
  1706  009913  00                 	db	0
  1707  009914  00                 	db	0
  1708  009915  00                 	db	0
  1709  009916  00                 	db	0
  1710  009917  00                 	db	0
  1711  009918  00                 	db	0
  1712  009919  00                 	db	0
  1713  00991A  00                 	db	0
  1714  00991B  00                 	db	0
  1715  00991C  00                 	db	0
  1716  00991D  00                 	db	0
  1717  00991E  00                 	db	0
  1718  00991F  00                 	db	0
  1719  009920  00                 	db	0
  1720  009921  00                 	db	0
  1721  009922  00                 	db	0
  1722  009923  00                 	db	0
  1723  009924  00                 	db	0
  1724  009925  00                 	db	0
  1725  009926  00                 	db	0
  1726  009927  00                 	db	0
  1727  009928  00                 	db	0
  1728  009929  00                 	db	0
  1729  00992A  00                 	db	0
  1730  00992B  00                 	db	0
  1731  00992C  00                 	db	0
  1732  00992D  00                 	db	0
  1733  00992E  00                 	db	0
  1734  00992F  00                 	db	0
  1735  009930  00                 	db	0
  1736  009931  00                 	db	0
  1737  009932  00                 	db	0
  1738  009933  00                 	db	0
  1739  009934  00                 	db	0
  1740  009935  00                 	db	0
  1741  009936  00                 	db	0
  1742  009937  00                 	db	0
  1743  009938  00                 	db	0
  1744  009939  00                 	db	0
  1745  00993A  00                 	db	0
  1746  00993B  00                 	db	0
  1747  00993C  00                 	db	0
  1748  00993D  00                 	db	0
  1749  00993E  00                 	db	0
  1750  00993F  00                 	db	0
  1751  009940  00                 	db	0
  1752  009941  00                 	db	0
  1753  009942  00                 	db	0
  1754  009943  00                 	db	0
  1755  009944  00                 	db	0
  1756  009945  00                 	db	0
  1757  009946  00                 	db	0
  1758  009947  00                 	db	0
  1759  009948  00                 	db	0
  1760  009949  00                 	db	0
  1761  00994A  00                 	db	0
  1762  00994B  00                 	db	0
  1763  00994C  00                 	db	0
  1764  00994D  00                 	db	0
  1765  00994E  00                 	db	0
  1766  00994F  00                 	db	0
  1767  009950  00                 	db	0
  1768  009951  00                 	db	0
  1769  009952  00                 	db	0
  1770  009953  00                 	db	0
  1771  009954  00                 	db	0
  1772  009955  00                 	db	0
  1773  009956  00                 	db	0
  1774  009957  00                 	db	0
  1775  009958  00                 	db	0
  1776  009959  00                 	db	0
  1777  00995A  00                 	db	0
  1778  00995B  00                 	db	0
  1779  00995C  00                 	db	0
  1780  00995D  00                 	db	0
  1781  00995E  00                 	db	0
  1782  00995F  00                 	db	0
  1783  009960  00                 	db	0
  1784  009961  00                 	db	0
  1785  009962  00                 	db	0
  1786  009963  00                 	db	0
  1787  009964  00                 	db	0
  1788  009965  00                 	db	0
  1789  009966  00                 	db	0
  1790  009967  00                 	db	0
  1791  009968  00                 	db	0
  1792  009969  00                 	db	0
  1793  00996A  00                 	db	0
  1794  00996B  00                 	db	0
  1795  00996C  00                 	db	0
  1796  00996D  00                 	db	0
  1797  00996E  00                 	db	0
  1798  00996F  00                 	db	0
  1799  009970  00                 	db	0
  1800  009971  00                 	db	0
  1801  009972  00                 	db	0
  1802  009973  00                 	db	0
  1803  009974  00                 	db	0
  1804  009975  00                 	db	0
  1805  009976  00                 	db	0
  1806  009977  00                 	db	0
  1807  009978  00                 	db	0
  1808  009979  00                 	db	0
  1809  00997A  00                 	db	0
  1810  00997B  00                 	db	0
  1811  00997C  00                 	db	0
  1812  00997D  00                 	db	0
  1813  00997E  00                 	db	0
  1814  00997F  00                 	db	0
  1815  009980  00                 	db	0
  1816  009981  00                 	db	0
  1817  009982  00                 	db	0
  1818  009983  00                 	db	0
  1819  009984  00                 	db	0
  1820  009985  00                 	db	0
  1821  009986  00                 	db	0
  1822  009987  00                 	db	0
  1823  009988  00                 	db	0
  1824  009989  00                 	db	0
  1825  00998A  00                 	db	0
  1826  00998B  00                 	db	0
  1827  00998C  00                 	db	0
  1828  00998D  00                 	db	0
  1829  00998E  00                 	db	0
  1830  00998F  00                 	db	0
  1831  009990  00                 	db	0
  1832  009991  00                 	db	0
  1833  009992  00                 	db	0
  1834  009993  00                 	db	0
  1835  009994  00                 	db	0
  1836  009995  00                 	db	0
  1837  009996  00                 	db	0
  1838  009997  00                 	db	0
  1839  009998  00                 	db	0
  1840  009999  00                 	db	0
  1841  00999A  00                 	db	0
  1842  00999B  00                 	db	0
  1843  00999C  00                 	db	0
  1844  00999D  00                 	db	0
  1845  00999E  00                 	db	0
  1846  00999F  00                 	db	0
  1847  0099A0  00                 	db	0
  1848  0099A1  00                 	db	0
  1849  0099A2  00                 	db	0
  1850  0099A3  00                 	db	0
  1851  0099A4  00                 	db	0
  1852  0099A5  00                 	db	0
  1853  0099A6  00                 	db	0
  1854  0099A7  00                 	db	0
  1855  0099A8  00                 	db	0
  1856  0099A9  00                 	db	0
  1857  0099AA  00                 	db	0
  1858  0099AB  00                 	db	0
  1859  0099AC  00                 	db	0
  1860  0099AD  00                 	db	0
  1861  0099AE  00                 	db	0
  1862  0099AF  00                 	db	0
  1863  0099B0  00                 	db	0
  1864  0099B1  00                 	db	0
  1865  0099B2  00                 	db	0
  1866  0099B3  00                 	db	0
  1867  0099B4  00                 	db	0
  1868  0099B5  00                 	db	0
  1869  0099B6  00                 	db	0
  1870  0099B7  00                 	db	0
  1871  0099B8  00                 	db	0
  1872  0099B9  00                 	db	0
  1873  0099BA  00                 	db	0
  1874  0099BB  00                 	db	0
  1875  0099BC  00                 	db	0
  1876  0099BD  00                 	db	0
  1877  0099BE  00                 	db	0
  1878  0099BF  00                 	db	0
  1879  0099C0  00                 	db	0
  1880  0099C1  00                 	db	0
  1881  0099C2  00                 	db	0
  1882  0099C3  00                 	db	0
  1883  0099C4  00                 	db	0
  1884  0099C5  00                 	db	0
  1885  0099C6  00                 	db	0
  1886  0099C7  00                 	db	0
  1887  0099C8  00                 	db	0
  1888  0099C9  00                 	db	0
  1889  0099CA  00                 	db	0
  1890  0099CB  00                 	db	0
  1891  0099CC  00                 	db	0
  1892  0099CD  00                 	db	0
  1893  0099CE  00                 	db	0
  1894  0099CF  00                 	db	0
  1895  0099D0  00                 	db	0
  1896  0099D1  00                 	db	0
  1897  0099D2  00                 	db	0
  1898  0099D3  00                 	db	0
  1899  0099D4  00                 	db	0
  1900  0099D5  00                 	db	0
  1901  0099D6  00                 	db	0
  1902  0099D7  00                 	db	0
  1903  0099D8  00                 	db	0
  1904  0099D9  00                 	db	0
  1905  0099DA  00                 	db	0
  1906  0099DB  00                 	db	0
  1907  0099DC  00                 	db	0
  1908  0099DD  00                 	db	0
  1909  0099DE  00                 	db	0
  1910  0099DF  00                 	db	0
  1911  0099E0  00                 	db	0
  1912  0099E1  00                 	db	0
  1913  0099E2  00                 	db	0
  1914  0099E3  00                 	db	0
  1915  0099E4  00                 	db	0
  1916  0099E5  00                 	db	0
  1917  0099E6  00                 	db	0
  1918  0099E7  00                 	db	0
  1919  0099E8  00                 	db	0
  1920  0099E9  00                 	db	0
  1921  0099EA  00                 	db	0
  1922  0099EB  00                 	db	0
  1923  0099EC  00                 	db	0
  1924  0099ED  00                 	db	0
  1925  0099EE  00                 	db	0
  1926  0099EF  00                 	db	0
  1927  0099F0  00                 	db	0
  1928  0099F1  00                 	db	0
  1929  0099F2  00                 	db	0
  1930  0099F3  00                 	db	0
  1931  0099F4  00                 	db	0
  1932  0099F5  00                 	db	0
  1933  0099F6  00                 	db	0
  1934  0099F7  00                 	db	0
  1935  0099F8  00                 	db	0
  1936  0099F9  00                 	db	0
  1937  0099FA  00                 	db	0
  1938  0099FB  00                 	db	0
  1939  0099FC  00                 	db	0
  1940  0099FD  00                 	db	0
  1941  0099FE  00                 	db	0
  1942  0099FF  00                 	db	0
  1943  009A00  00                 	db	0
  1944  009A01  00                 	db	0
  1945  009A02  00                 	db	0
  1946  009A03  00                 	db	0
  1947  009A04  00                 	db	0
  1948  009A05  00                 	db	0
  1949  009A06  00                 	db	0
  1950  009A07  00                 	db	0
  1951  009A08  00                 	db	0
  1952  009A09  00                 	db	0
  1953  009A0A  00                 	db	0
  1954  009A0B  00                 	db	0
  1955  009A0C  00                 	db	0
  1956  009A0D  00                 	db	0
  1957  009A0E  00                 	db	0
  1958  009A0F  00                 	db	0
  1959  009A10  00                 	db	0
  1960  009A11  00                 	db	0
  1961  009A12  00                 	db	0
  1962  009A13  00                 	db	0
  1963  009A14  00                 	db	0
  1964  009A15  00                 	db	0
  1965  009A16                     __end_of_motor_postscaler_lookup:
  1966                           	opt stack 0
  1967  009A16                     _motor_period_lookup:
  1968                           	opt stack 0
  1969  009A16  EC                 	db	236
  1970  009A17  F2                 	db	242
  1971  009A18  F6                 	db	246
  1972  009A19  F4                 	db	244
  1973  009A1A  D2                 	db	210
  1974  009A1B  E8                 	db	232
  1975  009A1C  D2                 	db	210
  1976  009A1D  C0                 	db	192
  1977  009A1E  EC                 	db	236
  1978  009A1F  DC                 	db	220
  1979  009A20  CF                 	db	207
  1980  009A21  C3                 	db	195
  1981  009A22  B9                 	db	185
  1982  009A23  B0                 	db	176
  1983  009A24  FC                 	db	252
  1984  009A25  F2                 	db	242
  1985  009A26  E8                 	db	232
  1986  009A27  DF                 	db	223
  1987  009A28  D7                 	db	215
  1988  009A29  D0                 	db	208
  1989  009A2A  CA                 	db	202
  1990  009A2B  C3                 	db	195
  1991  009A2C  BE                 	db	190
  1992  009A2D  B8                 	db	184
  1993  009A2E  B3                 	db	179
  1994  009A2F  AF                 	db	175
  1995  009A30  AA                 	db	170
  1996  009A31  A6                 	db	166
  1997  009A32  A2                 	db	162
  1998  009A33  9F                 	db	159
  1999  009A34  9B                 	db	155
  2000  009A35  98                 	db	152
  2001  009A36  95                 	db	149
  2002  009A37  92                 	db	146
  2003  009A38  8F                 	db	143
  2004  009A39  8C                 	db	140
  2005  009A3A  8A                 	db	138
  2006  009A3B  87                 	db	135
  2007  009A3C  85                 	db	133
  2008  009A3D  83                 	db	131
  2009  009A3E  81                 	db	129
  2010  009A3F  7F                 	db	127
  2011  009A40  7D                 	db	125
  2012  009A41  7B                 	db	123
  2013  009A42  79                 	db	121
  2014  009A43  77                 	db	119
  2015  009A44  75                 	db	117
  2016  009A45  74                 	db	116
  2017  009A46  72                 	db	114
  2018  009A47  71                 	db	113
  2019  009A48  6F                 	db	111
  2020  009A49  6E                 	db	110
  2021  009A4A  6C                 	db	108
  2022  009A4B  6B                 	db	107
  2023  009A4C  6A                 	db	106
  2024  009A4D  68                 	db	104
  2025  009A4E  67                 	db	103
  2026  009A4F  66                 	db	102
  2027  009A50  65                 	db	101
  2028  009A51  64                 	db	100
  2029  009A52  62                 	db	98
  2030  009A53  61                 	db	97
  2031  009A54  60                 	db	96
  2032  009A55  5F                 	db	95
  2033  009A56  5E                 	db	94
  2034  009A57  5D                 	db	93
  2035  009A58  5C                 	db	92
  2036  009A59  5B                 	db	91
  2037  009A5A  59                 	db	89
  2038  009A5B  57                 	db	87
  2039  009A5C  56                 	db	86
  2040  009A5D  54                 	db	84
  2041  009A5E  53                 	db	83
  2042  009A5F  51                 	db	81
  2043  009A60  50                 	db	80
  2044  009A61  4F                 	db	79
  2045  009A62  4E                 	db	78
  2046  009A63  4C                 	db	76
  2047  009A64  4B                 	db	75
  2048  009A65  4A                 	db	74
  2049  009A66  49                 	db	73
  2050  009A67  48                 	db	72
  2051  009A68  47                 	db	71
  2052  009A69  46                 	db	70
  2053  009A6A  45                 	db	69
  2054  009A6B  44                 	db	68
  2055  009A6C  43                 	db	67
  2056  009A6D  42                 	db	66
  2057  009A6E  41                 	db	65
  2058  009A6F  40                 	db	64
  2059  009A70  3F                 	db	63
  2060  009A71  FE                 	db	254
  2061  009A72  FB                 	db	251
  2062  009A73  F8                 	db	248
  2063  009A74  F6                 	db	246
  2064  009A75  F3                 	db	243
  2065  009A76  F0                 	db	240
  2066  009A77  EE                 	db	238
  2067  009A78  EC                 	db	236
  2068  009A79  E9                 	db	233
  2069  009A7A  E7                 	db	231
  2070  009A7B  E5                 	db	229
  2071  009A7C  E3                 	db	227
  2072  009A7D  E0                 	db	224
  2073  009A7E  DE                 	db	222
  2074  009A7F  DC                 	db	220
  2075  009A80  DA                 	db	218
  2076  009A81  D8                 	db	216
  2077  009A82  D7                 	db	215
  2078  009A83  D5                 	db	213
  2079  009A84  D3                 	db	211
  2080  009A85  D1                 	db	209
  2081  009A86  CF                 	db	207
  2082  009A87  CE                 	db	206
  2083  009A88  CC                 	db	204
  2084  009A89  CA                 	db	202
  2085  009A8A  C9                 	db	201
  2086  009A8B  C7                 	db	199
  2087  009A8C  C6                 	db	198
  2088  009A8D  C4                 	db	196
  2089  009A8E  C3                 	db	195
  2090  009A8F  C1                 	db	193
  2091  009A90  C0                 	db	192
  2092  009A91  BE                 	db	190
  2093  009A92  BD                 	db	189
  2094  009A93  BC                 	db	188
  2095  009A94  BA                 	db	186
  2096  009A95  B8                 	db	184
  2097  009A96  B6                 	db	182
  2098  009A97  B4                 	db	180
  2099  009A98  B3                 	db	179
  2100  009A99  B1                 	db	177
  2101  009A9A  AF                 	db	175
  2102  009A9B  AE                 	db	174
  2103  009A9C  AC                 	db	172
  2104  009A9D  AA                 	db	170
  2105  009A9E  A9                 	db	169
  2106  009A9F  A7                 	db	167
  2107  009AA0  A6                 	db	166
  2108  009AA1  A4                 	db	164
  2109  009AA2  A3                 	db	163
  2110  009AA3  A1                 	db	161
  2111  009AA4  A0                 	db	160
  2112  009AA5  9F                 	db	159
  2113  009AA6  9D                 	db	157
  2114  009AA7  9C                 	db	156
  2115  009AA8  9B                 	db	155
  2116  009AA9  9A                 	db	154
  2117  009AAA  98                 	db	152
  2118  009AAB  97                 	db	151
  2119  009AAC  96                 	db	150
  2120  009AAD  95                 	db	149
  2121  009AAE  94                 	db	148
  2122  009AAF  93                 	db	147
  2123  009AB0  92                 	db	146
  2124  009AB1  90                 	db	144
  2125  009AB2  8F                 	db	143
  2126  009AB3  8E                 	db	142
  2127  009AB4  8D                 	db	141
  2128  009AB5  8C                 	db	140
  2129  009AB6  8B                 	db	139
  2130  009AB7  8A                 	db	138
  2131  009AB8  89                 	db	137
  2132  009AB9  88                 	db	136
  2133  009ABA  87                 	db	135
  2134  009ABB  86                 	db	134
  2135  009ABC  85                 	db	133
  2136  009ABD  84                 	db	132
  2137  009ABE  83                 	db	131
  2138  009ABF  82                 	db	130
  2139  009AC0  81                 	db	129
  2140  009AC1  80                 	db	128
  2141  009AC2  7F                 	db	127
  2142  009AC3  7E                 	db	126
  2143  009AC4  7D                 	db	125
  2144  009AC5  7C                 	db	124
  2145  009AC6  7B                 	db	123
  2146  009AC7  7A                 	db	122
  2147  009AC8  79                 	db	121
  2148  009AC9  78                 	db	120
  2149  009ACA  77                 	db	119
  2150  009ACB  76                 	db	118
  2151  009ACC  75                 	db	117
  2152  009ACD  74                 	db	116
  2153  009ACE  73                 	db	115
  2154  009ACF  72                 	db	114
  2155  009AD0  71                 	db	113
  2156  009AD1  70                 	db	112
  2157  009AD2  6F                 	db	111
  2158  009AD3  6E                 	db	110
  2159  009AD4  6D                 	db	109
  2160  009AD5  6C                 	db	108
  2161  009AD6  6B                 	db	107
  2162  009AD7  6A                 	db	106
  2163  009AD8  69                 	db	105
  2164  009AD9  68                 	db	104
  2165  009ADA  67                 	db	103
  2166  009ADB  66                 	db	102
  2167  009ADC  65                 	db	101
  2168  009ADD  64                 	db	100
  2169  009ADE  63                 	db	99
  2170  009ADF  62                 	db	98
  2171  009AE0  61                 	db	97
  2172  009AE1  60                 	db	96
  2173  009AE2  5F                 	db	95
  2174  009AE3  5E                 	db	94
  2175  009AE4  5D                 	db	93
  2176  009AE5  5C                 	db	92
  2177  009AE6  5B                 	db	91
  2178  009AE7  5A                 	db	90
  2179  009AE8  59                 	db	89
  2180  009AE9  58                 	db	88
  2181  009AEA  57                 	db	87
  2182  009AEB  56                 	db	86
  2183  009AEC  55                 	db	85
  2184  009AED  54                 	db	84
  2185  009AEE  53                 	db	83
  2186  009AEF  52                 	db	82
  2187  009AF0  51                 	db	81
  2188  009AF1  50                 	db	80
  2189  009AF2  4F                 	db	79
  2190  009AF3  4E                 	db	78
  2191  009AF4  4D                 	db	77
  2192  009AF5  4C                 	db	76
  2193  009AF6  4B                 	db	75
  2194  009AF7  4A                 	db	74
  2195  009AF8  49                 	db	73
  2196  009AF9  48                 	db	72
  2197  009AFA  47                 	db	71
  2198  009AFB  46                 	db	70
  2199  009AFC  45                 	db	69
  2200  009AFD  44                 	db	68
  2201  009AFE  43                 	db	67
  2202  009AFF  42                 	db	66
  2203  009B00  41                 	db	65
  2204  009B01  40                 	db	64
  2205  009B02  3F                 	db	63
  2206  009B03  FF                 	db	255
  2207  009B04  FE                 	db	254
  2208  009B05  FD                 	db	253
  2209  009B06  FC                 	db	252
  2210  009B07  FB                 	db	251
  2211  009B08  FA                 	db	250
  2212  009B09  F9                 	db	249
  2213  009B0A  F8                 	db	248
  2214  009B0B  F7                 	db	247
  2215  009B0C  F6                 	db	246
  2216  009B0D  F5                 	db	245
  2217  009B0E  F4                 	db	244
  2218  009B0F  F3                 	db	243
  2219  009B10  F2                 	db	242
  2220  009B11  F1                 	db	241
  2221  009B12  F0                 	db	240
  2222  009B13  EF                 	db	239
  2223  009B14  EE                 	db	238
  2224  009B15  ED                 	db	237
  2225  009B16  EC                 	db	236
  2226  009B17  EB                 	db	235
  2227  009B18  EA                 	db	234
  2228  009B19  E9                 	db	233
  2229  009B1A  E8                 	db	232
  2230  009B1B  E7                 	db	231
  2231  009B1C  E6                 	db	230
  2232  009B1D  E5                 	db	229
  2233  009B1E  E4                 	db	228
  2234  009B1F  E3                 	db	227
  2235  009B20  E2                 	db	226
  2236  009B21  E1                 	db	225
  2237  009B22  E0                 	db	224
  2238  009B23  DF                 	db	223
  2239  009B24  DE                 	db	222
  2240  009B25  DD                 	db	221
  2241  009B26  DC                 	db	220
  2242  009B27  DB                 	db	219
  2243  009B28  DA                 	db	218
  2244  009B29  D9                 	db	217
  2245  009B2A  D8                 	db	216
  2246  009B2B  D7                 	db	215
  2247  009B2C  D6                 	db	214
  2248  009B2D  D5                 	db	213
  2249  009B2E  D4                 	db	212
  2250  009B2F  D3                 	db	211
  2251  009B30  D2                 	db	210
  2252  009B31  D1                 	db	209
  2253  009B32  D0                 	db	208
  2254  009B33  CF                 	db	207
  2255  009B34  CE                 	db	206
  2256  009B35  CD                 	db	205
  2257  009B36  CC                 	db	204
  2258  009B37  CB                 	db	203
  2259  009B38  CA                 	db	202
  2260  009B39  C9                 	db	201
  2261  009B3A  C8                 	db	200
  2262  009B3B  C7                 	db	199
  2263  009B3C  C6                 	db	198
  2264  009B3D  C5                 	db	197
  2265  009B3E  C4                 	db	196
  2266  009B3F  C3                 	db	195
  2267  009B40  C2                 	db	194
  2268  009B41  C1                 	db	193
  2269  009B42  C0                 	db	192
  2270  009B43  BF                 	db	191
  2271  009B44  BE                 	db	190
  2272  009B45  BD                 	db	189
  2273  009B46  BC                 	db	188
  2274  009B47  BB                 	db	187
  2275  009B48  BA                 	db	186
  2276  009B49  B9                 	db	185
  2277  009B4A  B8                 	db	184
  2278  009B4B  B7                 	db	183
  2279  009B4C  B6                 	db	182
  2280  009B4D  B5                 	db	181
  2281  009B4E  B4                 	db	180
  2282  009B4F  B3                 	db	179
  2283  009B50  B2                 	db	178
  2284  009B51  B1                 	db	177
  2285  009B52  B0                 	db	176
  2286  009B53  AF                 	db	175
  2287  009B54  AE                 	db	174
  2288  009B55  AD                 	db	173
  2289  009B56  AC                 	db	172
  2290  009B57  AB                 	db	171
  2291  009B58  AA                 	db	170
  2292  009B59  A9                 	db	169
  2293  009B5A  A8                 	db	168
  2294  009B5B  A7                 	db	167
  2295  009B5C  A6                 	db	166
  2296  009B5D  A5                 	db	165
  2297  009B5E  A4                 	db	164
  2298  009B5F  A3                 	db	163
  2299  009B60  A2                 	db	162
  2300  009B61  A1                 	db	161
  2301  009B62  A0                 	db	160
  2302  009B63  9F                 	db	159
  2303  009B64  9E                 	db	158
  2304  009B65  9D                 	db	157
  2305  009B66  9C                 	db	156
  2306  009B67  9B                 	db	155
  2307  009B68  9A                 	db	154
  2308  009B69  99                 	db	153
  2309  009B6A  98                 	db	152
  2310  009B6B  97                 	db	151
  2311  009B6C  96                 	db	150
  2312  009B6D  95                 	db	149
  2313  009B6E  94                 	db	148
  2314  009B6F  93                 	db	147
  2315  009B70  92                 	db	146
  2316  009B71  91                 	db	145
  2317  009B72  90                 	db	144
  2318  009B73  8F                 	db	143
  2319  009B74  8E                 	db	142
  2320  009B75  8D                 	db	141
  2321  009B76  8C                 	db	140
  2322  009B77  8B                 	db	139
  2323  009B78  8A                 	db	138
  2324  009B79  89                 	db	137
  2325  009B7A  88                 	db	136
  2326  009B7B  87                 	db	135
  2327  009B7C  86                 	db	134
  2328  009B7D  85                 	db	133
  2329  009B7E  84                 	db	132
  2330  009B7F  83                 	db	131
  2331  009B80  82                 	db	130
  2332  009B81  81                 	db	129
  2333  009B82  80                 	db	128
  2334  009B83  7F                 	db	127
  2335  009B84  7E                 	db	126
  2336  009B85  7D                 	db	125
  2337  009B86  7C                 	db	124
  2338  009B87  7B                 	db	123
  2339  009B88  7A                 	db	122
  2340  009B89  79                 	db	121
  2341  009B8A  78                 	db	120
  2342  009B8B  77                 	db	119
  2343  009B8C  76                 	db	118
  2344  009B8D  75                 	db	117
  2345  009B8E  74                 	db	116
  2346  009B8F  73                 	db	115
  2347  009B90  72                 	db	114
  2348  009B91  71                 	db	113
  2349  009B92  70                 	db	112
  2350  009B93  6F                 	db	111
  2351  009B94  6E                 	db	110
  2352  009B95  6D                 	db	109
  2353  009B96  6C                 	db	108
  2354  009B97  6B                 	db	107
  2355  009B98  6A                 	db	106
  2356  009B99  69                 	db	105
  2357  009B9A  68                 	db	104
  2358  009B9B  67                 	db	103
  2359  009B9C  66                 	db	102
  2360  009B9D  65                 	db	101
  2361  009B9E  64                 	db	100
  2362  009B9F  63                 	db	99
  2363  009BA0  62                 	db	98
  2364  009BA1  61                 	db	97
  2365  009BA2  60                 	db	96
  2366  009BA3  5F                 	db	95
  2367  009BA4  5E                 	db	94
  2368  009BA5  5D                 	db	93
  2369  009BA6  5C                 	db	92
  2370  009BA7  5B                 	db	91
  2371  009BA8  5A                 	db	90
  2372  009BA9  59                 	db	89
  2373  009BAA  58                 	db	88
  2374  009BAB  57                 	db	87
  2375  009BAC  56                 	db	86
  2376  009BAD  55                 	db	85
  2377  009BAE  54                 	db	84
  2378  009BAF  53                 	db	83
  2379  009BB0  52                 	db	82
  2380  009BB1  51                 	db	81
  2381  009BB2  50                 	db	80
  2382  009BB3  4F                 	db	79
  2383  009BB4  4E                 	db	78
  2384  009BB5  4D                 	db	77
  2385  009BB6  4C                 	db	76
  2386  009BB7  4B                 	db	75
  2387  009BB8  4A                 	db	74
  2388  009BB9  49                 	db	73
  2389  009BBA  48                 	db	72
  2390  009BBB  47                 	db	71
  2391  009BBC  46                 	db	70
  2392  009BBD  45                 	db	69
  2393  009BBE  44                 	db	68
  2394  009BBF  43                 	db	67
  2395  009BC0  42                 	db	66
  2396  009BC1  41                 	db	65
  2397  009BC2  40                 	db	64
  2398  009BC3  3F                 	db	63
  2399  009BC4  FF                 	db	255
  2400  009BC5  FE                 	db	254
  2401  009BC6  FD                 	db	253
  2402  009BC7  FC                 	db	252
  2403  009BC8  FB                 	db	251
  2404  009BC9  FA                 	db	250
  2405  009BCA  F9                 	db	249
  2406  009BCB  F8                 	db	248
  2407  009BCC  F7                 	db	247
  2408  009BCD  F6                 	db	246
  2409  009BCE  F5                 	db	245
  2410  009BCF  F4                 	db	244
  2411  009BD0  F3                 	db	243
  2412  009BD1  F2                 	db	242
  2413  009BD2  F1                 	db	241
  2414  009BD3  F0                 	db	240
  2415  009BD4  EF                 	db	239
  2416  009BD5  EE                 	db	238
  2417  009BD6  ED                 	db	237
  2418  009BD7  EC                 	db	236
  2419  009BD8  EB                 	db	235
  2420  009BD9  EA                 	db	234
  2421  009BDA  E9                 	db	233
  2422  009BDB  E8                 	db	232
  2423  009BDC  E7                 	db	231
  2424  009BDD  E6                 	db	230
  2425  009BDE  E5                 	db	229
  2426  009BDF  E4                 	db	228
  2427  009BE0  E3                 	db	227
  2428  009BE1  E2                 	db	226
  2429  009BE2  E1                 	db	225
  2430  009BE3  E0                 	db	224
  2431  009BE4  DF                 	db	223
  2432  009BE5  DE                 	db	222
  2433  009BE6  DD                 	db	221
  2434  009BE7  DC                 	db	220
  2435  009BE8  DB                 	db	219
  2436  009BE9  DA                 	db	218
  2437  009BEA  D9                 	db	217
  2438  009BEB  D8                 	db	216
  2439  009BEC  D7                 	db	215
  2440  009BED  D6                 	db	214
  2441  009BEE  D5                 	db	213
  2442  009BEF  D4                 	db	212
  2443  009BF0  D3                 	db	211
  2444  009BF1  D2                 	db	210
  2445  009BF2  D1                 	db	209
  2446  009BF3  D0                 	db	208
  2447  009BF4  CF                 	db	207
  2448  009BF5  CE                 	db	206
  2449  009BF6  CD                 	db	205
  2450  009BF7  CC                 	db	204
  2451  009BF8  CB                 	db	203
  2452  009BF9  CA                 	db	202
  2453  009BFA  C9                 	db	201
  2454  009BFB  C8                 	db	200
  2455  009BFC  C7                 	db	199
  2456  009BFD                     __end_of_motor_period_lookup:
  2457                           	opt stack 0
  2458  009BFD                     _motor_prescaler_lookup:
  2459                           	opt stack 0
  2460  009BFD  02                 	db	2
  2461  009BFE  02                 	db	2
  2462  009BFF  02                 	db	2
  2463  009C00  02                 	db	2
  2464  009C01  02                 	db	2
  2465  009C02  02                 	db	2
  2466  009C03  02                 	db	2
  2467  009C04  02                 	db	2
  2468  009C05  02                 	db	2
  2469  009C06  02                 	db	2
  2470  009C07  02                 	db	2
  2471  009C08  02                 	db	2
  2472  009C09  02                 	db	2
  2473  009C0A  02                 	db	2
  2474  009C0B  02                 	db	2
  2475  009C0C  02                 	db	2
  2476  009C0D  02                 	db	2
  2477  009C0E  02                 	db	2
  2478  009C0F  02                 	db	2
  2479  009C10  02                 	db	2
  2480  009C11  02                 	db	2
  2481  009C12  02                 	db	2
  2482  009C13  02                 	db	2
  2483  009C14  02                 	db	2
  2484  009C15  02                 	db	2
  2485  009C16  02                 	db	2
  2486  009C17  02                 	db	2
  2487  009C18  02                 	db	2
  2488  009C19  02                 	db	2
  2489  009C1A  02                 	db	2
  2490  009C1B  02                 	db	2
  2491  009C1C  02                 	db	2
  2492  009C1D  02                 	db	2
  2493  009C1E  02                 	db	2
  2494  009C1F  02                 	db	2
  2495  009C20  02                 	db	2
  2496  009C21  02                 	db	2
  2497  009C22  02                 	db	2
  2498  009C23  02                 	db	2
  2499  009C24  02                 	db	2
  2500  009C25  02                 	db	2
  2501  009C26  02                 	db	2
  2502  009C27  02                 	db	2
  2503  009C28  02                 	db	2
  2504  009C29  02                 	db	2
  2505  009C2A  02                 	db	2
  2506  009C2B  02                 	db	2
  2507  009C2C  02                 	db	2
  2508  009C2D  02                 	db	2
  2509  009C2E  02                 	db	2
  2510  009C2F  02                 	db	2
  2511  009C30  02                 	db	2
  2512  009C31  02                 	db	2
  2513  009C32  02                 	db	2
  2514  009C33  02                 	db	2
  2515  009C34  02                 	db	2
  2516  009C35  02                 	db	2
  2517  009C36  02                 	db	2
  2518  009C37  02                 	db	2
  2519  009C38  02                 	db	2
  2520  009C39  02                 	db	2
  2521  009C3A  02                 	db	2
  2522  009C3B  02                 	db	2
  2523  009C3C  02                 	db	2
  2524  009C3D  02                 	db	2
  2525  009C3E  02                 	db	2
  2526  009C3F  02                 	db	2
  2527  009C40  02                 	db	2
  2528  009C41  02                 	db	2
  2529  009C42  02                 	db	2
  2530  009C43  02                 	db	2
  2531  009C44  02                 	db	2
  2532  009C45  02                 	db	2
  2533  009C46  02                 	db	2
  2534  009C47  02                 	db	2
  2535  009C48  02                 	db	2
  2536  009C49  02                 	db	2
  2537  009C4A  02                 	db	2
  2538  009C4B  02                 	db	2
  2539  009C4C  02                 	db	2
  2540  009C4D  02                 	db	2
  2541  009C4E  02                 	db	2
  2542  009C4F  02                 	db	2
  2543  009C50  02                 	db	2
  2544  009C51  02                 	db	2
  2545  009C52  02                 	db	2
  2546  009C53  02                 	db	2
  2547  009C54  02                 	db	2
  2548  009C55  02                 	db	2
  2549  009C56  02                 	db	2
  2550  009C57  02                 	db	2
  2551  009C58  02                 	db	2
  2552  009C59  02                 	db	2
  2553  009C5A  02                 	db	2
  2554  009C5B  02                 	db	2
  2555  009C5C  02                 	db	2
  2556  009C5D  02                 	db	2
  2557  009C5E  02                 	db	2
  2558  009C5F  02                 	db	2
  2559  009C60  02                 	db	2
  2560  009C61  02                 	db	2
  2561  009C62  02                 	db	2
  2562  009C63  02                 	db	2
  2563  009C64  02                 	db	2
  2564  009C65  02                 	db	2
  2565  009C66  02                 	db	2
  2566  009C67  02                 	db	2
  2567  009C68  02                 	db	2
  2568  009C69  02                 	db	2
  2569  009C6A  02                 	db	2
  2570  009C6B  02                 	db	2
  2571  009C6C  02                 	db	2
  2572  009C6D  02                 	db	2
  2573  009C6E  02                 	db	2
  2574  009C6F  02                 	db	2
  2575  009C70  02                 	db	2
  2576  009C71  02                 	db	2
  2577  009C72  02                 	db	2
  2578  009C73  02                 	db	2
  2579  009C74  02                 	db	2
  2580  009C75  02                 	db	2
  2581  009C76  02                 	db	2
  2582  009C77  02                 	db	2
  2583  009C78  02                 	db	2
  2584  009C79  02                 	db	2
  2585  009C7A  02                 	db	2
  2586  009C7B  02                 	db	2
  2587  009C7C  02                 	db	2
  2588  009C7D  02                 	db	2
  2589  009C7E  02                 	db	2
  2590  009C7F  02                 	db	2
  2591  009C80  02                 	db	2
  2592  009C81  02                 	db	2
  2593  009C82  02                 	db	2
  2594  009C83  02                 	db	2
  2595  009C84  02                 	db	2
  2596  009C85  02                 	db	2
  2597  009C86  02                 	db	2
  2598  009C87  02                 	db	2
  2599  009C88  02                 	db	2
  2600  009C89  02                 	db	2
  2601  009C8A  02                 	db	2
  2602  009C8B  02                 	db	2
  2603  009C8C  02                 	db	2
  2604  009C8D  02                 	db	2
  2605  009C8E  02                 	db	2
  2606  009C8F  02                 	db	2
  2607  009C90  02                 	db	2
  2608  009C91  02                 	db	2
  2609  009C92  02                 	db	2
  2610  009C93  02                 	db	2
  2611  009C94  02                 	db	2
  2612  009C95  02                 	db	2
  2613  009C96  02                 	db	2
  2614  009C97  02                 	db	2
  2615  009C98  02                 	db	2
  2616  009C99  02                 	db	2
  2617  009C9A  02                 	db	2
  2618  009C9B  02                 	db	2
  2619  009C9C  02                 	db	2
  2620  009C9D  02                 	db	2
  2621  009C9E  02                 	db	2
  2622  009C9F  02                 	db	2
  2623  009CA0  02                 	db	2
  2624  009CA1  02                 	db	2
  2625  009CA2  02                 	db	2
  2626  009CA3  02                 	db	2
  2627  009CA4  02                 	db	2
  2628  009CA5  02                 	db	2
  2629  009CA6  02                 	db	2
  2630  009CA7  02                 	db	2
  2631  009CA8  02                 	db	2
  2632  009CA9  02                 	db	2
  2633  009CAA  02                 	db	2
  2634  009CAB  02                 	db	2
  2635  009CAC  02                 	db	2
  2636  009CAD  02                 	db	2
  2637  009CAE  02                 	db	2
  2638  009CAF  02                 	db	2
  2639  009CB0  02                 	db	2
  2640  009CB1  02                 	db	2
  2641  009CB2  02                 	db	2
  2642  009CB3  02                 	db	2
  2643  009CB4  02                 	db	2
  2644  009CB5  02                 	db	2
  2645  009CB6  02                 	db	2
  2646  009CB7  02                 	db	2
  2647  009CB8  02                 	db	2
  2648  009CB9  02                 	db	2
  2649  009CBA  02                 	db	2
  2650  009CBB  02                 	db	2
  2651  009CBC  02                 	db	2
  2652  009CBD  02                 	db	2
  2653  009CBE  02                 	db	2
  2654  009CBF  02                 	db	2
  2655  009CC0  02                 	db	2
  2656  009CC1  02                 	db	2
  2657  009CC2  02                 	db	2
  2658  009CC3  02                 	db	2
  2659  009CC4  02                 	db	2
  2660  009CC5  02                 	db	2
  2661  009CC6  02                 	db	2
  2662  009CC7  02                 	db	2
  2663  009CC8  02                 	db	2
  2664  009CC9  02                 	db	2
  2665  009CCA  02                 	db	2
  2666  009CCB  02                 	db	2
  2667  009CCC  02                 	db	2
  2668  009CCD  02                 	db	2
  2669  009CCE  02                 	db	2
  2670  009CCF  02                 	db	2
  2671  009CD0  02                 	db	2
  2672  009CD1  02                 	db	2
  2673  009CD2  02                 	db	2
  2674  009CD3  02                 	db	2
  2675  009CD4  02                 	db	2
  2676  009CD5  02                 	db	2
  2677  009CD6  02                 	db	2
  2678  009CD7  02                 	db	2
  2679  009CD8  02                 	db	2
  2680  009CD9  02                 	db	2
  2681  009CDA  02                 	db	2
  2682  009CDB  02                 	db	2
  2683  009CDC  02                 	db	2
  2684  009CDD  02                 	db	2
  2685  009CDE  02                 	db	2
  2686  009CDF  02                 	db	2
  2687  009CE0  02                 	db	2
  2688  009CE1  02                 	db	2
  2689  009CE2  02                 	db	2
  2690  009CE3  02                 	db	2
  2691  009CE4  02                 	db	2
  2692  009CE5  02                 	db	2
  2693  009CE6  02                 	db	2
  2694  009CE7  02                 	db	2
  2695  009CE8  02                 	db	2
  2696  009CE9  02                 	db	2
  2697  009CEA  01                 	db	1
  2698  009CEB  01                 	db	1
  2699  009CEC  01                 	db	1
  2700  009CED  01                 	db	1
  2701  009CEE  01                 	db	1
  2702  009CEF  01                 	db	1
  2703  009CF0  01                 	db	1
  2704  009CF1  01                 	db	1
  2705  009CF2  01                 	db	1
  2706  009CF3  01                 	db	1
  2707  009CF4  01                 	db	1
  2708  009CF5  01                 	db	1
  2709  009CF6  01                 	db	1
  2710  009CF7  01                 	db	1
  2711  009CF8  01                 	db	1
  2712  009CF9  01                 	db	1
  2713  009CFA  01                 	db	1
  2714  009CFB  01                 	db	1
  2715  009CFC  01                 	db	1
  2716  009CFD  01                 	db	1
  2717  009CFE  01                 	db	1
  2718  009CFF  01                 	db	1
  2719  009D00  01                 	db	1
  2720  009D01  01                 	db	1
  2721  009D02  01                 	db	1
  2722  009D03  01                 	db	1
  2723  009D04  01                 	db	1
  2724  009D05  01                 	db	1
  2725  009D06  01                 	db	1
  2726  009D07  01                 	db	1
  2727  009D08  01                 	db	1
  2728  009D09  01                 	db	1
  2729  009D0A  01                 	db	1
  2730  009D0B  01                 	db	1
  2731  009D0C  01                 	db	1
  2732  009D0D  01                 	db	1
  2733  009D0E  01                 	db	1
  2734  009D0F  01                 	db	1
  2735  009D10  01                 	db	1
  2736  009D11  01                 	db	1
  2737  009D12  01                 	db	1
  2738  009D13  01                 	db	1
  2739  009D14  01                 	db	1
  2740  009D15  01                 	db	1
  2741  009D16  01                 	db	1
  2742  009D17  01                 	db	1
  2743  009D18  01                 	db	1
  2744  009D19  01                 	db	1
  2745  009D1A  01                 	db	1
  2746  009D1B  01                 	db	1
  2747  009D1C  01                 	db	1
  2748  009D1D  01                 	db	1
  2749  009D1E  01                 	db	1
  2750  009D1F  01                 	db	1
  2751  009D20  01                 	db	1
  2752  009D21  01                 	db	1
  2753  009D22  01                 	db	1
  2754  009D23  01                 	db	1
  2755  009D24  01                 	db	1
  2756  009D25  01                 	db	1
  2757  009D26  01                 	db	1
  2758  009D27  01                 	db	1
  2759  009D28  01                 	db	1
  2760  009D29  01                 	db	1
  2761  009D2A  01                 	db	1
  2762  009D2B  01                 	db	1
  2763  009D2C  01                 	db	1
  2764  009D2D  01                 	db	1
  2765  009D2E  01                 	db	1
  2766  009D2F  01                 	db	1
  2767  009D30  01                 	db	1
  2768  009D31  01                 	db	1
  2769  009D32  01                 	db	1
  2770  009D33  01                 	db	1
  2771  009D34  01                 	db	1
  2772  009D35  01                 	db	1
  2773  009D36  01                 	db	1
  2774  009D37  01                 	db	1
  2775  009D38  01                 	db	1
  2776  009D39  01                 	db	1
  2777  009D3A  01                 	db	1
  2778  009D3B  01                 	db	1
  2779  009D3C  01                 	db	1
  2780  009D3D  01                 	db	1
  2781  009D3E  01                 	db	1
  2782  009D3F  01                 	db	1
  2783  009D40  01                 	db	1
  2784  009D41  01                 	db	1
  2785  009D42  01                 	db	1
  2786  009D43  01                 	db	1
  2787  009D44  01                 	db	1
  2788  009D45  01                 	db	1
  2789  009D46  01                 	db	1
  2790  009D47  01                 	db	1
  2791  009D48  01                 	db	1
  2792  009D49  01                 	db	1
  2793  009D4A  01                 	db	1
  2794  009D4B  01                 	db	1
  2795  009D4C  01                 	db	1
  2796  009D4D  01                 	db	1
  2797  009D4E  01                 	db	1
  2798  009D4F  01                 	db	1
  2799  009D50  01                 	db	1
  2800  009D51  01                 	db	1
  2801  009D52  01                 	db	1
  2802  009D53  01                 	db	1
  2803  009D54  01                 	db	1
  2804  009D55  01                 	db	1
  2805  009D56  01                 	db	1
  2806  009D57  01                 	db	1
  2807  009D58  01                 	db	1
  2808  009D59  01                 	db	1
  2809  009D5A  01                 	db	1
  2810  009D5B  01                 	db	1
  2811  009D5C  01                 	db	1
  2812  009D5D  01                 	db	1
  2813  009D5E  01                 	db	1
  2814  009D5F  01                 	db	1
  2815  009D60  01                 	db	1
  2816  009D61  01                 	db	1
  2817  009D62  01                 	db	1
  2818  009D63  01                 	db	1
  2819  009D64  01                 	db	1
  2820  009D65  01                 	db	1
  2821  009D66  01                 	db	1
  2822  009D67  01                 	db	1
  2823  009D68  01                 	db	1
  2824  009D69  01                 	db	1
  2825  009D6A  01                 	db	1
  2826  009D6B  01                 	db	1
  2827  009D6C  01                 	db	1
  2828  009D6D  01                 	db	1
  2829  009D6E  01                 	db	1
  2830  009D6F  01                 	db	1
  2831  009D70  01                 	db	1
  2832  009D71  01                 	db	1
  2833  009D72  01                 	db	1
  2834  009D73  01                 	db	1
  2835  009D74  01                 	db	1
  2836  009D75  01                 	db	1
  2837  009D76  01                 	db	1
  2838  009D77  01                 	db	1
  2839  009D78  01                 	db	1
  2840  009D79  01                 	db	1
  2841  009D7A  01                 	db	1
  2842  009D7B  01                 	db	1
  2843  009D7C  01                 	db	1
  2844  009D7D  01                 	db	1
  2845  009D7E  01                 	db	1
  2846  009D7F  01                 	db	1
  2847  009D80  01                 	db	1
  2848  009D81  01                 	db	1
  2849  009D82  01                 	db	1
  2850  009D83  01                 	db	1
  2851  009D84  01                 	db	1
  2852  009D85  01                 	db	1
  2853  009D86  01                 	db	1
  2854  009D87  01                 	db	1
  2855  009D88  01                 	db	1
  2856  009D89  01                 	db	1
  2857  009D8A  01                 	db	1
  2858  009D8B  01                 	db	1
  2859  009D8C  01                 	db	1
  2860  009D8D  01                 	db	1
  2861  009D8E  01                 	db	1
  2862  009D8F  01                 	db	1
  2863  009D90  01                 	db	1
  2864  009D91  01                 	db	1
  2865  009D92  01                 	db	1
  2866  009D93  01                 	db	1
  2867  009D94  01                 	db	1
  2868  009D95  01                 	db	1
  2869  009D96  01                 	db	1
  2870  009D97  01                 	db	1
  2871  009D98  01                 	db	1
  2872  009D99  01                 	db	1
  2873  009D9A  01                 	db	1
  2874  009D9B  01                 	db	1
  2875  009D9C  01                 	db	1
  2876  009D9D  01                 	db	1
  2877  009D9E  01                 	db	1
  2878  009D9F  01                 	db	1
  2879  009DA0  01                 	db	1
  2880  009DA1  01                 	db	1
  2881  009DA2  01                 	db	1
  2882  009DA3  01                 	db	1
  2883  009DA4  01                 	db	1
  2884  009DA5  01                 	db	1
  2885  009DA6  01                 	db	1
  2886  009DA7  01                 	db	1
  2887  009DA8  01                 	db	1
  2888  009DA9  01                 	db	1
  2889  009DAA  01                 	db	1
  2890  009DAB  00                 	db	0
  2891  009DAC  00                 	db	0
  2892  009DAD  00                 	db	0
  2893  009DAE  00                 	db	0
  2894  009DAF  00                 	db	0
  2895  009DB0  00                 	db	0
  2896  009DB1  00                 	db	0
  2897  009DB2  00                 	db	0
  2898  009DB3  00                 	db	0
  2899  009DB4  00                 	db	0
  2900  009DB5  00                 	db	0
  2901  009DB6  00                 	db	0
  2902  009DB7  00                 	db	0
  2903  009DB8  00                 	db	0
  2904  009DB9  00                 	db	0
  2905  009DBA  00                 	db	0
  2906  009DBB  00                 	db	0
  2907  009DBC  00                 	db	0
  2908  009DBD  00                 	db	0
  2909  009DBE  00                 	db	0
  2910  009DBF  00                 	db	0
  2911  009DC0  00                 	db	0
  2912  009DC1  00                 	db	0
  2913  009DC2  00                 	db	0
  2914  009DC3  00                 	db	0
  2915  009DC4  00                 	db	0
  2916  009DC5  00                 	db	0
  2917  009DC6  00                 	db	0
  2918  009DC7  00                 	db	0
  2919  009DC8  00                 	db	0
  2920  009DC9  00                 	db	0
  2921  009DCA  00                 	db	0
  2922  009DCB  00                 	db	0
  2923  009DCC  00                 	db	0
  2924  009DCD  00                 	db	0
  2925  009DCE  00                 	db	0
  2926  009DCF  00                 	db	0
  2927  009DD0  00                 	db	0
  2928  009DD1  00                 	db	0
  2929  009DD2  00                 	db	0
  2930  009DD3  00                 	db	0
  2931  009DD4  00                 	db	0
  2932  009DD5  00                 	db	0
  2933  009DD6  00                 	db	0
  2934  009DD7  00                 	db	0
  2935  009DD8  00                 	db	0
  2936  009DD9  00                 	db	0
  2937  009DDA  00                 	db	0
  2938  009DDB  00                 	db	0
  2939  009DDC  00                 	db	0
  2940  009DDD  00                 	db	0
  2941  009DDE  00                 	db	0
  2942  009DDF  00                 	db	0
  2943  009DE0  00                 	db	0
  2944  009DE1  00                 	db	0
  2945  009DE2  00                 	db	0
  2946  009DE3  00                 	db	0
  2947  009DE4                     __end_of_motor_prescaler_lookup:
  2948                           	opt stack 0
  2949  009DE4                     _USB_SD_Ptr:
  2950                           	opt stack 0
  2951  009DE4  E5                 	db	low _sd000
  2952  009DE5  A2                 	db	high _sd000
  2953  009DE6  FE                 	db	low _sd001
  2954  009DE7  A0                 	db	high _sd001
  2955  009DE8  32                 	db	low _sd002
  2956  009DE9  A1                 	db	high _sd002
  2957  009DEA  A1                 	db	low _sd003
  2958  009DEB  A1                 	db	high _sd003
  2959  009DEC                     __end_of_USB_SD_Ptr:
  2960                           	opt stack 0
  2961  009DEC                     _USB_CD_Ptr:
  2962                           	opt stack 0
  2963  009DEC  BE                 	db	low _configDescriptor1
  2964  009DED  A0                 	db	high _configDescriptor1
  2965  009DEE                     __end_of_USB_CD_Ptr:
  2966                           	opt stack 0
  2967  009DEE                     _dc_manual:
  2968                           	opt stack 0
  2969  009DEE  4D                 	db	77
  2970  009DEF  61                 	db	97
  2971  009DF0  6E                 	db	110
  2972  009DF1  75                 	db	117
  2973  009DF2  61                 	db	97
  2974  009DF3  6C                 	db	108
  2975  009DF4  20                 	db	32
  2976  009DF5  4D                 	db	77
  2977  009DF6  6F                 	db	111
  2978  009DF7  64                 	db	100
  2979  009DF8  65                 	db	101
  2980  009DF9  20                 	db	32
  2981  009DFA  20                 	db	32
  2982  009DFB  20                 	db	32
  2983  009DFC  20                 	db	32
  2984  009DFD  20                 	db	32
  2985  009DFE  20                 	db	32
  2986  009DFF  20                 	db	32
  2987  009E00  20                 	db	32
  2988  009E01  20                 	db	32
  2989  009E02  43                 	db	67
  2990  009E03  75                 	db	117
  2991  009E04  72                 	db	114
  2992  009E05  72                 	db	114
  2993  009E06  65                 	db	101
  2994  009E07  6E                 	db	110
  2995  009E08  74                 	db	116
  2996  009E09  20                 	db	32
  2997  009E0A  70                 	db	112
  2998  009E0B  6F                 	db	111
  2999  009E0C  73                 	db	115
  3000  009E0D  3A                 	db	58
  3001  009E0E  20                 	db	32
  3002  009E0F  20                 	db	32
  3003  009E10  20                 	db	32
  3004  009E11  20                 	db	32
  3005  009E12  20                 	db	32
  3006  009E13  20                 	db	32
  3007  009E14  20                 	db	32
  3008  009E15  01                 	db	1
  3009  009E16  54                 	db	84
  3010  009E17  75                 	db	117
  3011  009E18  72                 	db	114
  3012  009E19  6E                 	db	110
  3013  009E1A  20                 	db	32
  3014  009E1B  43                 	db	67
  3015  009E1C  43                 	db	67
  3016  009E1D  57                 	db	87
  3017  009E1E  20                 	db	32
  3018  009E1F  00                 	db	0
  3019  009E20  20                 	db	32
  3020  009E21  53                 	db	83
  3021  009E22  70                 	db	112
  3022  009E23  65                 	db	101
  3023  009E24  65                 	db	101
  3024  009E25  64                 	db	100
  3025  009E26  20                 	db	32
  3026  009E27  20                 	db	32
  3027  009E28  20                 	db	32
  3028  009E29  20                 	db	32
  3029  009E2A  53                 	db	83
  3030  009E2B  74                 	db	116
  3031  009E2C  61                 	db	97
  3032  009E2D  72                 	db	114
  3033  009E2E  74                 	db	116
  3034  009E2F  20                 	db	32
  3035  009E30  20                 	db	32
  3036  009E31  20                 	db	32
  3037  009E32  20                 	db	32
  3038  009E33  00                 	db	0
  3039  009E34  20                 	db	32
  3040  009E35  20                 	db	32
  3041  009E36  20                 	db	32
  3042  009E37  20                 	db	32
  3043  009E38  20                 	db	32
  3044  009E39  20                 	db	32
  3045  009E3A  20                 	db	32
  3046  009E3B  20                 	db	32
  3047  009E3C  20                 	db	32
  3048  009E3D  20                 	db	32
  3049  009E3E                     __end_of_dc_manual:
  3050                           	opt stack 0
  3051  009E3E                     _dc_zero:
  3052                           	opt stack 0
  3053  009E3E  52                 	db	82
  3054  009E3F  65                 	db	101
  3055  009E40  74                 	db	116
  3056  009E41  75                 	db	117
  3057  009E42  72                 	db	114
  3058  009E43  6E                 	db	110
  3059  009E44  20                 	db	32
  3060  009E45  74                 	db	116
  3061  009E46  6F                 	db	111
  3062  009E47  20                 	db	32
  3063  009E48  5A                 	db	90
  3064  009E49  65                 	db	101
  3065  009E4A  72                 	db	114
  3066  009E4B  6F                 	db	111
  3067  009E4C  3F                 	db	63
  3068  009E4D  20                 	db	32
  3069  009E4E  20                 	db	32
  3070  009E4F  20                 	db	32
  3071  009E50  20                 	db	32
  3072  009E51  20                 	db	32
  3073  009E52  43                 	db	67
  3074  009E53  75                 	db	117
  3075  009E54  72                 	db	114
  3076  009E55  72                 	db	114
  3077  009E56  65                 	db	101
  3078  009E57  6E                 	db	110
  3079  009E58  74                 	db	116
  3080  009E59  20                 	db	32
  3081  009E5A  70                 	db	112
  3082  009E5B  6F                 	db	111
  3083  009E5C  73                 	db	115
  3084  009E5D  3A                 	db	58
  3085  009E5E  20                 	db	32
  3086  009E5F  20                 	db	32
  3087  009E60  20                 	db	32
  3088  009E61  20                 	db	32
  3089  009E62  20                 	db	32
  3090  009E63  20                 	db	32
  3091  009E64  20                 	db	32
  3092  009E65  20                 	db	32
  3093  009E66  20                 	db	32
  3094  009E67  20                 	db	32
  3095  009E68  20                 	db	32
  3096  009E69  20                 	db	32
  3097  009E6A  20                 	db	32
  3098  009E6B  20                 	db	32
  3099  009E6C  20                 	db	32
  3100  009E6D  20                 	db	32
  3101  009E6E  20                 	db	32
  3102  009E6F  20                 	db	32
  3103  009E70  20                 	db	32
  3104  009E71  20                 	db	32
  3105  009E72  20                 	db	32
  3106  009E73  20                 	db	32
  3107  009E74  20                 	db	32
  3108  009E75  20                 	db	32
  3109  009E76  20                 	db	32
  3110  009E77  20                 	db	32
  3111  009E78  20                 	db	32
  3112  009E79  20                 	db	32
  3113  009E7A  20                 	db	32
  3114  009E7B  59                 	db	89
  3115  009E7C  65                 	db	101
  3116  009E7D  73                 	db	115
  3117  009E7E  20                 	db	32
  3118  009E7F  20                 	db	32
  3119  009E80  20                 	db	32
  3120  009E81  20                 	db	32
  3121  009E82  20                 	db	32
  3122  009E83  20                 	db	32
  3123  009E84  20                 	db	32
  3124  009E85  20                 	db	32
  3125  009E86  20                 	db	32
  3126  009E87  20                 	db	32
  3127  009E88  20                 	db	32
  3128  009E89  20                 	db	32
  3129  009E8A  4E                 	db	78
  3130  009E8B  6F                 	db	111
  3131  009E8C  20                 	db	32
  3132  009E8D  20                 	db	32
  3133  009E8E                     __end_of_dc_zero:
  3134                           	opt stack 0
  3135  009E8E                     _dc_arc2:
  3136                           	opt stack 0
  3137  009E8E  41                 	db	65
  3138  009E8F  72                 	db	114
  3139  009E90  63                 	db	99
  3140  009E91  3A                 	db	58
  3141  009E92  20                 	db	32
  3142  009E93  53                 	db	83
  3143  009E94  69                 	db	105
  3144  009E95  7A                 	db	122
  3145  009E96  65                 	db	101
  3146  009E97  3D                 	db	61
  3147  009E98  20                 	db	32
  3148  009E99  20                 	db	32
  3149  009E9A  20                 	db	32
  3150  009E9B  20                 	db	32
  3151  009E9C  20                 	db	32
  3152  009E9D  20                 	db	32
  3153  009E9E  20                 	db	32
  3154  009E9F  20                 	db	32
  3155  009EA0  20                 	db	32
  3156  009EA1  20                 	db	32
  3157  009EA2  43                 	db	67
  3158  009EA3  75                 	db	117
  3159  009EA4  72                 	db	114
  3160  009EA5  72                 	db	114
  3161  009EA6  65                 	db	101
  3162  009EA7  6E                 	db	110
  3163  009EA8  74                 	db	116
  3164  009EA9  20                 	db	32
  3165  009EAA  70                 	db	112
  3166  009EAB  6F                 	db	111
  3167  009EAC  73                 	db	115
  3168  009EAD  3A                 	db	58
  3169  009EAE  20                 	db	32
  3170  009EAF  20                 	db	32
  3171  009EB0  20                 	db	32
  3172  009EB1  20                 	db	32
  3173  009EB2  20                 	db	32
  3174  009EB3  20                 	db	32
  3175  009EB4  20                 	db	32
  3176  009EB5  01                 	db	1
  3177  009EB6  54                 	db	84
  3178  009EB7  75                 	db	117
  3179  009EB8  72                 	db	114
  3180  009EB9  6E                 	db	110
  3181  009EBA  20                 	db	32
  3182  009EBB  43                 	db	67
  3183  009EBC  43                 	db	67
  3184  009EBD  57                 	db	87
  3185  009EBE  20                 	db	32
  3186  009EBF  00                 	db	0
  3187  009EC0  20                 	db	32
  3188  009EC1  53                 	db	83
  3189  009EC2  70                 	db	112
  3190  009EC3  65                 	db	101
  3191  009EC4  65                 	db	101
  3192  009EC5  64                 	db	100
  3193  009EC6  20                 	db	32
  3194  009EC7  20                 	db	32
  3195  009EC8  20                 	db	32
  3196  009EC9  20                 	db	32
  3197  009ECA  53                 	db	83
  3198  009ECB  74                 	db	116
  3199  009ECC  61                 	db	97
  3200  009ECD  72                 	db	114
  3201  009ECE  74                 	db	116
  3202  009ECF  20                 	db	32
  3203  009ED0  20                 	db	32
  3204  009ED1  20                 	db	32
  3205  009ED2  20                 	db	32
  3206  009ED3  00                 	db	0
  3207  009ED4  20                 	db	32
  3208  009ED5  20                 	db	32
  3209  009ED6  20                 	db	32
  3210  009ED7  20                 	db	32
  3211  009ED8  20                 	db	32
  3212  009ED9  20                 	db	32
  3213  009EDA  20                 	db	32
  3214  009EDB  20                 	db	32
  3215  009EDC  20                 	db	32
  3216  009EDD  20                 	db	32
  3217  009EDE                     __end_of_dc_arc2:
  3218                           	opt stack 0
  3219  009EDE                     _dc_arc1:
  3220                           	opt stack 0
  3221  009EDE  41                 	db	65
  3222  009EDF  72                 	db	114
  3223  009EE0  63                 	db	99
  3224  009EE1  3A                 	db	58
  3225  009EE2  20                 	db	32
  3226  009EE3  53                 	db	83
  3227  009EE4  65                 	db	101
  3228  009EE5  74                 	db	116
  3229  009EE6  20                 	db	32
  3230  009EE7  61                 	db	97
  3231  009EE8  72                 	db	114
  3232  009EE9  63                 	db	99
  3233  009EEA  20                 	db	32
  3234  009EEB  73                 	db	115
  3235  009EEC  69                 	db	105
  3236  009EED  7A                 	db	122
  3237  009EEE  65                 	db	101
  3238  009EEF  20                 	db	32
  3239  009EF0  20                 	db	32
  3240  009EF1  20                 	db	32
  3241  009EF2  41                 	db	65
  3242  009EF3  72                 	db	114
  3243  009EF4  63                 	db	99
  3244  009EF5  20                 	db	32
  3245  009EF6  73                 	db	115
  3246  009EF7  69                 	db	105
  3247  009EF8  7A                 	db	122
  3248  009EF9  65                 	db	101
  3249  009EFA  3A                 	db	58
  3250  009EFB  20                 	db	32
  3251  009EFC  20                 	db	32
  3252  009EFD  20                 	db	32
  3253  009EFE  20                 	db	32
  3254  009EFF  20                 	db	32
  3255  009F00  20                 	db	32
  3256  009F01  20                 	db	32
  3257  009F02  20                 	db	32
  3258  009F03  20                 	db	32
  3259  009F04  20                 	db	32
  3260  009F05  20                 	db	32
  3261  009F06  53                 	db	83
  3262  009F07  74                 	db	116
  3263  009F08  65                 	db	101
  3264  009F09  70                 	db	112
  3265  009F0A  20                 	db	32
  3266  009F0B  73                 	db	115
  3267  009F0C  69                 	db	105
  3268  009F0D  7A                 	db	122
  3269  009F0E  65                 	db	101
  3270  009F0F  20                 	db	32
  3271  009F10  00                 	db	0
  3272  009F11  20                 	db	32
  3273  009F12  20                 	db	32
  3274  009F13  43                 	db	67
  3275  009F14  6F                 	db	111
  3276  009F15  6E                 	db	110
  3277  009F16  66                 	db	102
  3278  009F17  69                 	db	105
  3279  009F18  72                 	db	114
  3280  009F19  6D                 	db	109
  3281  009F1A  20                 	db	32
  3282  009F1B  20                 	db	32
  3283  009F1C  20                 	db	32
  3284  009F1D  20                 	db	32
  3285  009F1E  20                 	db	32
  3286  009F1F  20                 	db	32
  3287  009F20  20                 	db	32
  3288  009F21  20                 	db	32
  3289  009F22  20                 	db	32
  3290  009F23  20                 	db	32
  3291  009F24  00                 	db	0
  3292  009F25  20                 	db	32
  3293  009F26  20                 	db	32
  3294  009F27  43                 	db	67
  3295  009F28  61                 	db	97
  3296  009F29  6E                 	db	110
  3297  009F2A  63                 	db	99
  3298  009F2B  65                 	db	101
  3299  009F2C  6C                 	db	108
  3300  009F2D  20                 	db	32
  3301  009F2E                     __end_of_dc_arc1:
  3302                           	opt stack 0
  3303  009F2E                     _dc_divide2:
  3304                           	opt stack 0
  3305  009F2E  44                 	db	68
  3306  009F2F  69                 	db	105
  3307  009F30  76                 	db	118
  3308  009F31  69                 	db	105
  3309  009F32  64                 	db	100
  3310  009F33  65                 	db	101
  3311  009F34  3A                 	db	58
  3312  009F35  20                 	db	32
  3313  009F36  20                 	db	32
  3314  009F37  20                 	db	32
  3315  009F38  20                 	db	32
  3316  009F39  20                 	db	32
  3317  009F3A  20                 	db	32
  3318  009F3B  20                 	db	32
  3319  009F3C  20                 	db	32
  3320  009F3D  20                 	db	32
  3321  009F3E  20                 	db	32
  3322  009F3F  20                 	db	32
  3323  009F40  20                 	db	32
  3324  009F41  20                 	db	32
  3325  009F42  50                 	db	80
  3326  009F43  6F                 	db	111
  3327  009F44  73                 	db	115
  3328  009F45  3A                 	db	58
  3329  009F46  20                 	db	32
  3330  009F47  20                 	db	32
  3331  009F48  20                 	db	32
  3332  009F49  20                 	db	32
  3333  009F4A  20                 	db	32
  3334  009F4B  20                 	db	32
  3335  009F4C  20                 	db	32
  3336  009F4D  20                 	db	32
  3337  009F4E  20                 	db	32
  3338  009F4F  20                 	db	32
  3339  009F50  20                 	db	32
  3340  009F51  20                 	db	32
  3341  009F52  20                 	db	32
  3342  009F53  20                 	db	32
  3343  009F54  20                 	db	32
  3344  009F55  20                 	db	32
  3345  009F56  4A                 	db	74
  3346  009F57  75                 	db	117
  3347  009F58  6D                 	db	109
  3348  009F59  70                 	db	112
  3349  009F5A  20                 	db	32
  3350  009F5B  73                 	db	115
  3351  009F5C  69                 	db	105
  3352  009F5D  7A                 	db	122
  3353  009F5E  65                 	db	101
  3354  009F5F  3A                 	db	58
  3355  009F60  20                 	db	32
  3356  009F61  20                 	db	32
  3357  009F62  20                 	db	32
  3358  009F63  20                 	db	32
  3359  009F64  20                 	db	32
  3360  009F65  20                 	db	32
  3361  009F66  20                 	db	32
  3362  009F67  20                 	db	32
  3363  009F68  20                 	db	32
  3364  009F69  20                 	db	32
  3365  009F6A  50                 	db	80
  3366  009F6B  72                 	db	114
  3367  009F6C  65                 	db	101
  3368  009F6D  73                 	db	115
  3369  009F6E  73                 	db	115
  3370  009F6F  54                 	db	84
  3371  009F70  6F                 	db	111
  3372  009F71  4A                 	db	74
  3373  009F72  75                 	db	117
  3374  009F73  6D                 	db	109
  3375  009F74  70                 	db	112
  3376  009F75  20                 	db	32
  3377  009F76  00                 	db	0
  3378  009F77  20                 	db	32
  3379  009F78  43                 	db	67
  3380  009F79  61                 	db	97
  3381  009F7A  6E                 	db	110
  3382  009F7B  63                 	db	99
  3383  009F7C  65                 	db	101
  3384  009F7D  6C                 	db	108
  3385  009F7E                     __end_of_dc_divide2:
  3386                           	opt stack 0
  3387  009F7E                     _dc_divide1:
  3388                           	opt stack 0
  3389  009F7E  44                 	db	68
  3390  009F7F  69                 	db	105
  3391  009F80  76                 	db	118
  3392  009F81  69                 	db	105
  3393  009F82  64                 	db	100
  3394  009F83  65                 	db	101
  3395  009F84  3A                 	db	58
  3396  009F85  20                 	db	32
  3397  009F86  53                 	db	83
  3398  009F87  65                 	db	101
  3399  009F88  74                 	db	116
  3400  009F89  20                 	db	32
  3401  009F8A  64                 	db	100
  3402  009F8B  69                 	db	105
  3403  009F8C  76                 	db	118
  3404  009F8D  69                 	db	105
  3405  009F8E  73                 	db	115
  3406  009F8F  69                 	db	105
  3407  009F90  6F                 	db	111
  3408  009F91  6E                 	db	110
  3409  009F92  20                 	db	32
  3410  009F93  20                 	db	32
  3411  009F94  20                 	db	32
  3412  009F95  20                 	db	32
  3413  009F96  20                 	db	32
  3414  009F97  20                 	db	32
  3415  009F98  20                 	db	32
  3416  009F99  20                 	db	32
  3417  009F9A  20                 	db	32
  3418  009F9B  20                 	db	32
  3419  009F9C  20                 	db	32
  3420  009F9D  20                 	db	32
  3421  009F9E  20                 	db	32
  3422  009F9F  20                 	db	32
  3423  009FA0  20                 	db	32
  3424  009FA1  20                 	db	32
  3425  009FA2  20                 	db	32
  3426  009FA3  20                 	db	32
  3427  009FA4  20                 	db	32
  3428  009FA5  20                 	db	32
  3429  009FA6  20                 	db	32
  3430  009FA7  20                 	db	32
  3431  009FA8  20                 	db	32
  3432  009FA9  2F                 	db	47
  3433  009FAA  73                 	db	115
  3434  009FAB  74                 	db	116
  3435  009FAC  65                 	db	101
  3436  009FAD  70                 	db	112
  3437  009FAE  20                 	db	32
  3438  009FAF  20                 	db	32
  3439  009FB0  00                 	db	0
  3440  009FB1  20                 	db	32
  3441  009FB2  20                 	db	32
  3442  009FB3  43                 	db	67
  3443  009FB4  6F                 	db	111
  3444  009FB5  6E                 	db	110
  3445  009FB6  66                 	db	102
  3446  009FB7  69                 	db	105
  3447  009FB8  72                 	db	114
  3448  009FB9  6D                 	db	109
  3449  009FBA  31                 	db	49
  3450  009FBB  32                 	db	50
  3451  009FBC  33                 	db	51
  3452  009FBD  34                 	db	52
  3453  009FBE  20                 	db	32
  3454  009FBF  20                 	db	32
  3455  009FC0  20                 	db	32
  3456  009FC1  20                 	db	32
  3457  009FC2  20                 	db	32
  3458  009FC3  20                 	db	32
  3459  009FC4  00                 	db	0
  3460  009FC5  20                 	db	32
  3461  009FC6  20                 	db	32
  3462  009FC7  43                 	db	67
  3463  009FC8  61                 	db	97
  3464  009FC9  6E                 	db	110
  3465  009FCA  63                 	db	99
  3466  009FCB  65                 	db	101
  3467  009FCC  6C                 	db	108
  3468  009FCD  20                 	db	32
  3469  009FCE                     __end_of_dc_divide1:
  3470                           	opt stack 0
  3471  009FCE                     _dc_setup2:
  3472                           	opt stack 0
  3473  009FCE  53                 	db	83
  3474  009FCF  65                 	db	101
  3475  009FD0  74                 	db	116
  3476  009FD1  75                 	db	117
  3477  009FD2  70                 	db	112
  3478  009FD3  3A                 	db	58
  3479  009FD4  20                 	db	32
  3480  009FD5  53                 	db	83
  3481  009FD6  65                 	db	101
  3482  009FD7  74                 	db	116
  3483  009FD8  20                 	db	32
  3484  009FD9  64                 	db	100
  3485  009FDA  69                 	db	105
  3486  009FDB  72                 	db	114
  3487  009FDC  65                 	db	101
  3488  009FDD  63                 	db	99
  3489  009FDE  74                 	db	116
  3490  009FDF  69                 	db	105
  3491  009FE0  6F                 	db	111
  3492  009FE1  6E                 	db	110
  3493  009FE2  20                 	db	32
  3494  009FE3  20                 	db	32
  3495  009FE4  20                 	db	32
  3496  009FE5  20                 	db	32
  3497  009FE6  20                 	db	32
  3498  009FE7  20                 	db	32
  3499  009FE8  20                 	db	32
  3500  009FE9  20                 	db	32
  3501  009FEA  20                 	db	32
  3502  009FEB  20                 	db	32
  3503  009FEC  20                 	db	32
  3504  009FED  20                 	db	32
  3505  009FEE  20                 	db	32
  3506  009FEF  20                 	db	32
  3507  009FF0  20                 	db	32
  3508  009FF1  20                 	db	32
  3509  009FF2  20                 	db	32
  3510  009FF3  20                 	db	32
  3511  009FF4  20                 	db	32
  3512  009FF5  20                 	db	32
  3513  009FF6  20                 	db	32
  3514  009FF7  43                 	db	67
  3515  009FF8  6F                 	db	111
  3516  009FF9  75                 	db	117
  3517  009FFA  6E                 	db	110
  3518  009FFB  74                 	db	116
  3519  009FFC  65                 	db	101
  3520  009FFD  72                 	db	114
  3521  009FFE  43                 	db	67
  3522  009FFF  6C                 	db	108
  3523  00A000  6F                 	db	111
  3524  00A001  63                 	db	99
  3525  00A002  6B                 	db	107
  3526  00A003  77                 	db	119
  3527  00A004  69                 	db	105
  3528  00A005  73                 	db	115
  3529  00A006  65                 	db	101
  3530  00A007  20                 	db	32
  3531  00A008  20                 	db	32
  3532  00A009  20                 	db	32
  3533  00A00A  20                 	db	32
  3534  00A00B  43                 	db	67
  3535  00A00C  6C                 	db	108
  3536  00A00D  6F                 	db	111
  3537  00A00E  63                 	db	99
  3538  00A00F  6B                 	db	107
  3539  00A010  77                 	db	119
  3540  00A011  69                 	db	105
  3541  00A012  73                 	db	115
  3542  00A013  65                 	db	101
  3543  00A014  20                 	db	32
  3544  00A015  20                 	db	32
  3545  00A016  20                 	db	32
  3546  00A017  20                 	db	32
  3547  00A018  20                 	db	32
  3548  00A019  20                 	db	32
  3549  00A01A  20                 	db	32
  3550  00A01B  20                 	db	32
  3551  00A01C  20                 	db	32
  3552  00A01D  20                 	db	32
  3553  00A01E                     __end_of_dc_setup2:
  3554                           	opt stack 0
  3555  00A01E                     _dc_setup1:
  3556                           	opt stack 0
  3557  00A01E  53                 	db	83
  3558  00A01F  65                 	db	101
  3559  00A020  74                 	db	116
  3560  00A021  75                 	db	117
  3561  00A022  70                 	db	112
  3562  00A023  3A                 	db	58
  3563  00A024  20                 	db	32
  3564  00A025  53                 	db	83
  3565  00A026  65                 	db	101
  3566  00A027  74                 	db	116
  3567  00A028  20                 	db	32
  3568  00A029  7A                 	db	122
  3569  00A02A  65                 	db	101
  3570  00A02B  72                 	db	114
  3571  00A02C  6F                 	db	111
  3572  00A02D  20                 	db	32
  3573  00A02E  70                 	db	112
  3574  00A02F  6F                 	db	111
  3575  00A030  73                 	db	115
  3576  00A031  2E                 	db	46
  3577  00A032  20                 	db	32
  3578  00A033  20                 	db	32
  3579  00A034  20                 	db	32
  3580  00A035  20                 	db	32
  3581  00A036  20                 	db	32
  3582  00A037  20                 	db	32
  3583  00A038  20                 	db	32
  3584  00A039  20                 	db	32
  3585  00A03A  20                 	db	32
  3586  00A03B  20                 	db	32
  3587  00A03C  20                 	db	32
  3588  00A03D  20                 	db	32
  3589  00A03E  20                 	db	32
  3590  00A03F  20                 	db	32
  3591  00A040  20                 	db	32
  3592  00A041  20                 	db	32
  3593  00A042  20                 	db	32
  3594  00A043  20                 	db	32
  3595  00A044  20                 	db	32
  3596  00A045  20                 	db	32
  3597  00A046  53                 	db	83
  3598  00A047  74                 	db	116
  3599  00A048  65                 	db	101
  3600  00A049  70                 	db	112
  3601  00A04A  20                 	db	32
  3602  00A04B  73                 	db	115
  3603  00A04C  69                 	db	105
  3604  00A04D  7A                 	db	122
  3605  00A04E  65                 	db	101
  3606  00A04F  20                 	db	32
  3607  00A050  00                 	db	0
  3608  00A051  20                 	db	32
  3609  00A052  20                 	db	32
  3610  00A053  43                 	db	67
  3611  00A054  6F                 	db	111
  3612  00A055  6E                 	db	110
  3613  00A056  66                 	db	102
  3614  00A057  69                 	db	105
  3615  00A058  72                 	db	114
  3616  00A059  6D                 	db	109
  3617  00A05A  20                 	db	32
  3618  00A05B  78                 	db	120
  3619  00A05C  2E                 	db	46
  3620  00A05D  78                 	db	120
  3621  00A05E  78                 	db	120
  3622  00A05F  01                 	db	1
  3623  00A060  20                 	db	32
  3624  00A061  20                 	db	32
  3625  00A062  20                 	db	32
  3626  00A063  20                 	db	32
  3627  00A064  00                 	db	0
  3628  00A065  20                 	db	32
  3629  00A066  20                 	db	32
  3630  00A067  43                 	db	67
  3631  00A068  61                 	db	97
  3632  00A069  6E                 	db	110
  3633  00A06A  63                 	db	99
  3634  00A06B  65                 	db	101
  3635  00A06C  6C                 	db	108
  3636  00A06D  20                 	db	32
  3637  00A06E                     __end_of_dc_setup1:
  3638                           	opt stack 0
  3639  00A06E                     _dc_main:
  3640                           	opt stack 0
  3641  00A06E  4D                 	db	77
  3642  00A06F  61                 	db	97
  3643  00A070  69                 	db	105
  3644  00A071  6E                 	db	110
  3645  00A072  20                 	db	32
  3646  00A073  4D                 	db	77
  3647  00A074  65                 	db	101
  3648  00A075  6E                 	db	110
  3649  00A076  75                 	db	117
  3650  00A077  3A                 	db	58
  3651  00A078  20                 	db	32
  3652  00A079  20                 	db	32
  3653  00A07A  20                 	db	32
  3654  00A07B  20                 	db	32
  3655  00A07C  20                 	db	32
  3656  00A07D  20                 	db	32
  3657  00A07E  20                 	db	32
  3658  00A07F  20                 	db	32
  3659  00A080  20                 	db	32
  3660  00A081  20                 	db	32
  3661  00A082  20                 	db	32
  3662  00A083  53                 	db	83
  3663  00A084  65                 	db	101
  3664  00A085  74                 	db	116
  3665  00A086  75                 	db	117
  3666  00A087  70                 	db	112
  3667  00A088  20                 	db	32
  3668  00A089  20                 	db	32
  3669  00A08A  20                 	db	32
  3670  00A08B  20                 	db	32
  3671  00A08C  44                 	db	68
  3672  00A08D  69                 	db	105
  3673  00A08E  76                 	db	118
  3674  00A08F  69                 	db	105
  3675  00A090  64                 	db	100
  3676  00A091  65                 	db	101
  3677  00A092  20                 	db	32
  3678  00A093  20                 	db	32
  3679  00A094  20                 	db	32
  3680  00A095  20                 	db	32
  3681  00A096  20                 	db	32
  3682  00A097  41                 	db	65
  3683  00A098  72                 	db	114
  3684  00A099  63                 	db	99
  3685  00A09A  20                 	db	32
  3686  00A09B  20                 	db	32
  3687  00A09C  20                 	db	32
  3688  00A09D  20                 	db	32
  3689  00A09E  20                 	db	32
  3690  00A09F  20                 	db	32
  3691  00A0A0  4D                 	db	77
  3692  00A0A1  61                 	db	97
  3693  00A0A2  6E                 	db	110
  3694  00A0A3  75                 	db	117
  3695  00A0A4  61                 	db	97
  3696  00A0A5  6C                 	db	108
  3697  00A0A6  20                 	db	32
  3698  00A0A7  20                 	db	32
  3699  00A0A8  20                 	db	32
  3700  00A0A9  20                 	db	32
  3701  00A0AA  20                 	db	32
  3702  00A0AB  47                 	db	71
  3703  00A0AC  6F                 	db	111
  3704  00A0AD  32                 	db	50
  3705  00A0AE  5A                 	db	90
  3706  00A0AF  65                 	db	101
  3707  00A0B0  72                 	db	114
  3708  00A0B1  6F                 	db	111
  3709  00A0B2  20                 	db	32
  3710  00A0B3  20                 	db	32
  3711  00A0B4  20                 	db	32
  3712  00A0B5  20                 	db	32
  3713  00A0B6  20                 	db	32
  3714  00A0B7  20                 	db	32
  3715  00A0B8  20                 	db	32
  3716  00A0B9  20                 	db	32
  3717  00A0BA  20                 	db	32
  3718  00A0BB  20                 	db	32
  3719  00A0BC  20                 	db	32
  3720  00A0BD  20                 	db	32
  3721  00A0BE                     __end_of_dc_main:
  3722                           	opt stack 0
  3723  00A0BE                     _configDescriptor1:
  3724                           	opt stack 0
  3725  00A0BE  09                 	db	9
  3726  00A0BF  02                 	db	2
  3727  00A0C0  40                 	db	64
  3728  00A0C1  00                 	db	0
  3729  00A0C2  02                 	db	2
  3730  00A0C3  01                 	db	1
  3731  00A0C4  00                 	db	0
  3732  00A0C5  C0                 	db	192
  3733  00A0C6  32                 	db	50
  3734  00A0C7  09                 	db	9
  3735  00A0C8  04                 	db	4
  3736  00A0C9  00                 	db	0
  3737  00A0CA  00                 	db	0
  3738  00A0CB  02                 	db	2
  3739  00A0CC  03                 	db	3
  3740  00A0CD  00                 	db	0
  3741  00A0CE  00                 	db	0
  3742  00A0CF  00                 	db	0
  3743  00A0D0  09                 	db	9
  3744  00A0D1  21                 	db	33
  3745  00A0D2  11                 	db	17
  3746  00A0D3  01                 	db	1
  3747  00A0D4  00                 	db	0
  3748  00A0D5  01                 	db	1
  3749  00A0D6  22                 	db	34
  3750  00A0D7  1D                 	db	29
  3751  00A0D8  00                 	db	0
  3752  00A0D9  07                 	db	7
  3753  00A0DA  05                 	db	5
  3754  00A0DB  81                 	db	129
  3755  00A0DC  03                 	db	3
  3756  00A0DD  40                 	db	64
  3757  00A0DE  00                 	db	0
  3758  00A0DF  01                 	db	1
  3759  00A0E0  07                 	db	7
  3760  00A0E1  05                 	db	5
  3761  00A0E2  01                 	db	1
  3762  00A0E3  03                 	db	3
  3763  00A0E4  40                 	db	64
  3764  00A0E5  00                 	db	0
  3765  00A0E6  01                 	db	1
  3766  00A0E7  09                 	db	9
  3767  00A0E8  04                 	db	4
  3768  00A0E9  01                 	db	1
  3769  00A0EA  00                 	db	0
  3770  00A0EB  02                 	db	2
  3771  00A0EC  08                 	db	8
  3772  00A0ED  06                 	db	6
  3773  00A0EE  50                 	db	80
  3774  00A0EF  00                 	db	0
  3775  00A0F0  07                 	db	7
  3776  00A0F1  05                 	db	5
  3777  00A0F2  82                 	db	130
  3778  00A0F3  02                 	db	2
  3779  00A0F4  40                 	db	64
  3780  00A0F5  00                 	db	0
  3781  00A0F6  01                 	db	1
  3782  00A0F7  07                 	db	7
  3783  00A0F8  05                 	db	5
  3784  00A0F9  02                 	db	2
  3785  00A0FA  02                 	db	2
  3786  00A0FB  40                 	db	64
  3787  00A0FC  00                 	db	0
  3788  00A0FD  01                 	db	1
  3789  00A0FE                     __end_of_configDescriptor1:
  3790                           	opt stack 0
  3791  00A0FE                     _sd001:
  3792                           	opt stack 0
  3793  00A0FE  34                 	db	52
  3794  00A0FF  03                 	db	3
  3795  00A100  0053               	dw	83
  3796  00A102  006F               	dw	111
  3797  00A104  006C               	dw	108
  3798  00A106  0064               	dw	100
  3799  00A108  0065               	dw	101
  3800  00A10A  0072               	dw	114
  3801  00A10C  006E               	dw	110
  3802  00A10E  0065               	dw	101
  3803  00A110  0072               	dw	114
  3804  00A112  0064               	dw	100
  3805  00A114  002E               	dw	46
  3806  00A116  0063               	dw	99
  3807  00A118  006F               	dw	111
  3808  00A11A  006D               	dw	109
  3809  00A11C  0020               	dw	32
  3810  00A11E  0020               	dw	32
  3811  00A120  0020               	dw	32
  3812  00A122  0020               	dw	32
  3813  00A124  0020               	dw	32
  3814  00A126  0020               	dw	32
  3815  00A128  0020               	dw	32
  3816  00A12A  0020               	dw	32
  3817  00A12C  0020               	dw	32
  3818  00A12E  0020               	dw	32
  3819  00A130  0020               	dw	32
  3820  00A132                     __end_of_sd001:
  3821                           	opt stack 0
  3822  00A132                     _sd002:
  3823                           	opt stack 0
  3824  00A132  2E                 	db	46
  3825  00A133  03                 	db	3
  3826  00A134  0053               	dw	83
  3827  00A136  0074               	dw	116
  3828  00A138  0065               	dw	101
  3829  00A13A  0070               	dw	112
  3830  00A13C  0070               	dw	112
  3831  00A13E  0065               	dw	101
  3832  00A140  0072               	dw	114
  3833  00A142  004D               	dw	77
  3834  00A144  006F               	dw	111
  3835  00A146  0074               	dw	116
  3836  00A148  006F               	dw	111
  3837  00A14A  0072               	dw	114
  3838  00A14C  0043               	dw	67
  3839  00A14E  006F               	dw	111
  3840  00A150  006E               	dw	110
  3841  00A152  0074               	dw	116
  3842  00A154  0072               	dw	114
  3843  00A156  006F               	dw	111
  3844  00A158  006C               	dw	108
  3845  00A15A  006C               	dw	108
  3846  00A15C  0065               	dw	101
  3847  00A15E  0072               	dw	114
  3848  00A160                     __end_of_sd002:
  3849                           	opt stack 0
  3850  00A160                     _inq_resp:
  3851                           	opt stack 0
  3852  00A160  00                 	db	0
  3853  00A161  80                 	db	128
  3854  00A162  04                 	db	4
  3855  00A163  02                 	db	2
  3856  00A164  20                 	db	32
  3857  00A165  00                 	db	0
  3858  00A166  00                 	db	0
  3859  00A167  00                 	db	0
  3860  00A168  4D                 	db	77
  3861  00A169  69                 	db	105
  3862  00A16A  63                 	db	99
  3863  00A16B  72                 	db	114
  3864  00A16C  6F                 	db	111
  3865  00A16D  63                 	db	99
  3866  00A16E  68                 	db	104
  3867  00A16F  70                 	db	112
  3868  00A170  4D                 	db	77
  3869  00A171  61                 	db	97
  3870  00A172  73                 	db	115
  3871  00A173  73                 	db	115
  3872  00A174  20                 	db	32
  3873  00A175  53                 	db	83
  3874  00A176  74                 	db	116
  3875  00A177  6F                 	db	111
  3876  00A178  72                 	db	114
  3877  00A179  61                 	db	97
  3878  00A17A  67                 	db	103
  3879  00A17B  65                 	db	101
  3880  00A17C  20                 	db	32
  3881  00A17D  20                 	db	32
  3882  00A17E  20                 	db	32
  3883  00A17F  20                 	db	32
  3884  00A180  30                 	db	48
  3885  00A181  30                 	db	48
  3886  00A182  30                 	db	48
  3887  00A183  31                 	db	49
  3888  00A184                     __end_of_inq_resp:
  3889                           	opt stack 0
  3890  00A184                     _hid_rpt01:
  3891                           	opt stack 0
  3892  00A184  06                 	db	6
  3893  00A185  00                 	db	0
  3894  00A186  FF                 	db	255
  3895  00A187  09                 	db	9
  3896  00A188  01                 	db	1
  3897  00A189  A1                 	db	161
  3898  00A18A  01                 	db	1
  3899  00A18B  19                 	db	25
  3900  00A18C  01                 	db	1
  3901  00A18D  29                 	db	41
  3902  00A18E  40                 	db	64
  3903  00A18F  15                 	db	21
  3904  00A190  00                 	db	0
  3905  00A191  26                 	db	38
  3906  00A192  FF                 	db	255
  3907  00A193  00                 	db	0
  3908  00A194  75                 	db	117
  3909  00A195  08                 	db	8
  3910  00A196  95                 	db	149
  3911  00A197  40                 	db	64
  3912  00A198  81                 	db	129
  3913  00A199  00                 	db	0
  3914  00A19A  19                 	db	25
  3915  00A19B  01                 	db	1
  3916  00A19C  29                 	db	41
  3917  00A19D  40                 	db	64
  3918  00A19E  91                 	db	145
  3919  00A19F  00                 	db	0
  3920  00A1A0  C0                 	db	192
  3921  00A1A1                     __end_of_hid_rpt01:
  3922                           	opt stack 0
  3923  00A1A1                     _sd003:
  3924                           	opt stack 0
  3925  00A1A1  1A                 	db	26
  3926  00A1A2  03                 	db	3
  3927  00A1A3  0031               	dw	49
  3928  00A1A5  0032               	dw	50
  3929  00A1A7  0033               	dw	51
  3930  00A1A9  0034               	dw	52
  3931  00A1AB  0035               	dw	53
  3932  00A1AD  0036               	dw	54
  3933  00A1AF  0037               	dw	55
  3934  00A1B1  0038               	dw	56
  3935  00A1B3  0039               	dw	57
  3936  00A1B5  0030               	dw	48
  3937  00A1B7  0039               	dw	57
  3938  00A1B9  0039               	dw	57
  3939  00A1BB                     __end_of_sd003:
  3940                           	opt stack 0
  3941  00A1BB                     _overshoot_cost_in_steps_string:
  3942                           	opt stack 0
  3943  00A1BB  4F                 	db	79
  3944  00A1BC  56                 	db	86
  3945  00A1BD  45                 	db	69
  3946  00A1BE  52                 	db	82
  3947  00A1BF  53                 	db	83
  3948  00A1C0  48                 	db	72
  3949  00A1C1  4F                 	db	79
  3950  00A1C2  4F                 	db	79
  3951  00A1C3  54                 	db	84
  3952  00A1C4  5F                 	db	95
  3953  00A1C5  43                 	db	67
  3954  00A1C6  4F                 	db	79
  3955  00A1C7  53                 	db	83
  3956  00A1C8  54                 	db	84
  3957  00A1C9  5F                 	db	95
  3958  00A1CA  49                 	db	73
  3959  00A1CB  4E                 	db	78
  3960  00A1CC  5F                 	db	95
  3961  00A1CD  53                 	db	83
  3962  00A1CE  54                 	db	84
  3963  00A1CF  45                 	db	69
  3964  00A1D0  50                 	db	80
  3965  00A1D1  53                 	db	83
  3966  00A1D2  00                 	db	0
  3967  00A1D3                     __end_of_overshoot_cost_in_steps_string:
  3968                           	opt stack 0
  3969  00A1D3                     _maximum_speed_manual_string:
  3970                           	opt stack 0
  3971  00A1D3  4D                 	db	77
  3972  00A1D4  41                 	db	65
  3973  00A1D5  58                 	db	88
  3974  00A1D6  49                 	db	73
  3975  00A1D7  4D                 	db	77
  3976  00A1D8  55                 	db	85
  3977  00A1D9  4D                 	db	77
  3978  00A1DA  5F                 	db	95
  3979  00A1DB  53                 	db	83
  3980  00A1DC  50                 	db	80
  3981  00A1DD  45                 	db	69
  3982  00A1DE  45                 	db	69
  3983  00A1DF  44                 	db	68
  3984  00A1E0  5F                 	db	95
  3985  00A1E1  4D                 	db	77
  3986  00A1E2  41                 	db	65
  3987  00A1E3  4E                 	db	78
  3988  00A1E4  55                 	db	85
  3989  00A1E5  41                 	db	65
  3990  00A1E6  4C                 	db	76
  3991  00A1E7  00                 	db	0
  3992  00A1E8                     __end_of_maximum_speed_manual_string:
  3993                           	opt stack 0
  3994  00A1E8                     _initial_speed_manual_string:
  3995                           	opt stack 0
  3996  00A1E8  49                 	db	73
  3997  00A1E9  4E                 	db	78
  3998  00A1EA  49                 	db	73
  3999  00A1EB  54                 	db	84
  4000  00A1EC  49                 	db	73
  4001  00A1ED  41                 	db	65
  4002  00A1EE  4C                 	db	76
  4003  00A1EF  5F                 	db	95
  4004  00A1F0  53                 	db	83
  4005  00A1F1  50                 	db	80
  4006  00A1F2  45                 	db	69
  4007  00A1F3  45                 	db	69
  4008  00A1F4  44                 	db	68
  4009  00A1F5  5F                 	db	95
  4010  00A1F6  4D                 	db	77
  4011  00A1F7  41                 	db	65
  4012  00A1F8  4E                 	db	78
  4013  00A1F9  55                 	db	85
  4014  00A1FA  41                 	db	65
  4015  00A1FB  4C                 	db	76
  4016  00A1FC  00                 	db	0
  4017  00A1FD                     __end_of_initial_speed_manual_string:
  4018                           	opt stack 0
  4019  00A1FD                     _full_circle_in_steps_string:
  4020                           	opt stack 0
  4021  00A1FD  46                 	db	70
  4022  00A1FE  55                 	db	85
  4023  00A1FF  4C                 	db	76
  4024  00A200  4C                 	db	76
  4025  00A201  5F                 	db	95
  4026  00A202  43                 	db	67
  4027  00A203  49                 	db	73
  4028  00A204  52                 	db	82
  4029  00A205  43                 	db	67
  4030  00A206  4C                 	db	76
  4031  00A207  45                 	db	69
  4032  00A208  5F                 	db	95
  4033  00A209  49                 	db	73
  4034  00A20A  4E                 	db	78
  4035  00A20B  5F                 	db	95
  4036  00A20C  53                 	db	83
  4037  00A20D  54                 	db	84
  4038  00A20E  45                 	db	69
  4039  00A20F  50                 	db	80
  4040  00A210  53                 	db	83
  4041  00A211  00                 	db	0
  4042  00A212                     __end_of_full_circle_in_steps_string:
  4043                           	opt stack 0
  4044  00A212                     _overshoot_in_steps_string:
  4045                           	opt stack 0
  4046  00A212  4F                 	db	79
  4047  00A213  56                 	db	86
  4048  00A214  45                 	db	69
  4049  00A215  52                 	db	82
  4050  00A216  53                 	db	83
  4051  00A217  48                 	db	72
  4052  00A218  4F                 	db	79
  4053  00A219  4F                 	db	79
  4054  00A21A  54                 	db	84
  4055  00A21B  5F                 	db	95
  4056  00A21C  49                 	db	73
  4057  00A21D  4E                 	db	78
  4058  00A21E  5F                 	db	95
  4059  00A21F  53                 	db	83
  4060  00A220  54                 	db	84
  4061  00A221  45                 	db	69
  4062  00A222  50                 	db	80
  4063  00A223  53                 	db	83
  4064  00A224  00                 	db	0
  4065  00A225                     __end_of_overshoot_in_steps_string:
  4066                           	opt stack 0
  4067  00A225                     _maximum_speed_arc_string:
  4068                           	opt stack 0
  4069  00A225  4D                 	db	77
  4070  00A226  41                 	db	65
  4071  00A227  58                 	db	88
  4072  00A228  49                 	db	73
  4073  00A229  4D                 	db	77
  4074  00A22A  55                 	db	85
  4075  00A22B  4D                 	db	77
  4076  00A22C  5F                 	db	95
  4077  00A22D  53                 	db	83
  4078  00A22E  50                 	db	80
  4079  00A22F  45                 	db	69
  4080  00A230  45                 	db	69
  4081  00A231  44                 	db	68
  4082  00A232  5F                 	db	95
  4083  00A233  41                 	db	65
  4084  00A234  52                 	db	82
  4085  00A235  43                 	db	67
  4086  00A236  00                 	db	0
  4087  00A237                     __end_of_maximum_speed_arc_string:
  4088                           	opt stack 0
  4089  00A237                     _initial_speed_arc_string:
  4090                           	opt stack 0
  4091  00A237  49                 	db	73
  4092  00A238  4E                 	db	78
  4093  00A239  49                 	db	73
  4094  00A23A  54                 	db	84
  4095  00A23B  49                 	db	73
  4096  00A23C  41                 	db	65
  4097  00A23D  4C                 	db	76
  4098  00A23E  5F                 	db	95
  4099  00A23F  53                 	db	83
  4100  00A240  50                 	db	80
  4101  00A241  45                 	db	69
  4102  00A242  45                 	db	69
  4103  00A243  44                 	db	68
  4104  00A244  5F                 	db	95
  4105  00A245  41                 	db	65
  4106  00A246  52                 	db	82
  4107  00A247  43                 	db	67
  4108  00A248  00                 	db	0
  4109  00A249                     __end_of_initial_speed_arc_string:
  4110                           	opt stack 0
  4111  00A249                     _inverse_direction_string:
  4112                           	opt stack 0
  4113  00A249  49                 	db	73
  4114  00A24A  4E                 	db	78
  4115  00A24B  56                 	db	86
  4116  00A24C  45                 	db	69
  4117  00A24D  52                 	db	82
  4118  00A24E  53                 	db	83
  4119  00A24F  45                 	db	69
  4120  00A250  5F                 	db	95
  4121  00A251  44                 	db	68
  4122  00A252  49                 	db	73
  4123  00A253  52                 	db	82
  4124  00A254  45                 	db	69
  4125  00A255  43                 	db	67
  4126  00A256  54                 	db	84
  4127  00A257  49                 	db	73
  4128  00A258  4F                 	db	79
  4129  00A259  4E                 	db	78
  4130  00A25A  00                 	db	0
  4131  00A25B                     __end_of_inverse_direction_string:
  4132                           	opt stack 0
  4133  00A25B                     _device_dsc:
  4134                           	opt stack 0
  4135  00A25B  12                 	db	18
  4136  00A25C  01                 	db	1
  4137  00A25D  0200               	dw	512
  4138  00A25F  00                 	db	0
  4139  00A260  00                 	db	0
  4140  00A261  00                 	db	0
  4141  00A262  08                 	db	8
  4142  00A263  04D8               	dw	1240
  4143  00A265  EDCF               	dw	60879
  4144  00A267  0100               	dw	256
  4145  00A269  01                 	db	1
  4146  00A26A  02                 	db	2
  4147  00A26B  00                 	db	0
  4148  00A26C  01                 	db	1
  4149  00A26D                     __end_of_device_dsc:
  4150                           	opt stack 0
  4151  00A26D                     _use_ccw_limit_string:
  4152                           	opt stack 0
  4153  00A26D  55                 	db	85
  4154  00A26E  53                 	db	83
  4155  00A26F  45                 	db	69
  4156  00A270  5F                 	db	95
  4157  00A271  43                 	db	67
  4158  00A272  43                 	db	67
  4159  00A273  57                 	db	87
  4160  00A274  5F                 	db	95
  4161  00A275  4C                 	db	76
  4162  00A276  49                 	db	73
  4163  00A277  4D                 	db	77
  4164  00A278  49                 	db	73
  4165  00A279  54                 	db	84
  4166  00A27A  00                 	db	0
  4167  00A27B                     __end_of_use_ccw_limit_string:
  4168                           	opt stack 0
  4169  00A27B                     _beep_duration_string:
  4170                           	opt stack 0
  4171  00A27B  42                 	db	66
  4172  00A27C  45                 	db	69
  4173  00A27D  45                 	db	69
  4174  00A27E  50                 	db	80
  4175  00A27F  5F                 	db	95
  4176  00A280  44                 	db	68
  4177  00A281  55                 	db	85
  4178  00A282  52                 	db	82
  4179  00A283  41                 	db	65
  4180  00A284  54                 	db	84
  4181  00A285  49                 	db	73
  4182  00A286  4F                 	db	79
  4183  00A287  4E                 	db	78
  4184  00A288  00                 	db	0
  4185  00A289                     __end_of_beep_duration_string:
  4186                           	opt stack 0
  4187  00A289                     _maximum_speed_string:
  4188                           	opt stack 0
  4189  00A289  4D                 	db	77
  4190  00A28A  41                 	db	65
  4191  00A28B  58                 	db	88
  4192  00A28C  49                 	db	73
  4193  00A28D  4D                 	db	77
  4194  00A28E  55                 	db	85
  4195  00A28F  4D                 	db	77
  4196  00A290  5F                 	db	95
  4197  00A291  53                 	db	83
  4198  00A292  50                 	db	80
  4199  00A293  45                 	db	69
  4200  00A294  45                 	db	69
  4201  00A295  44                 	db	68
  4202  00A296  00                 	db	0
  4203  00A297                     __end_of_maximum_speed_string:
  4204                           	opt stack 0
  4205  00A297                     _minimum_speed_string:
  4206                           	opt stack 0
  4207  00A297  4D                 	db	77
  4208  00A298  49                 	db	73
  4209  00A299  4E                 	db	78
  4210  00A29A  49                 	db	73
  4211  00A29B  4D                 	db	77
  4212  00A29C  55                 	db	85
  4213  00A29D  4D                 	db	77
  4214  00A29E  5F                 	db	95
  4215  00A29F  53                 	db	83
  4216  00A2A0  50                 	db	80
  4217  00A2A1  45                 	db	69
  4218  00A2A2  45                 	db	69
  4219  00A2A3  44                 	db	68
  4220  00A2A4  00                 	db	0
  4221  00A2A5                     __end_of_minimum_speed_string:
  4222                           	opt stack 0
  4223  00A2A5                     _use_cw_limit_string:
  4224                           	opt stack 0
  4225  00A2A5  55                 	db	85
  4226  00A2A6  53                 	db	83
  4227  00A2A7  45                 	db	69
  4228  00A2A8  5F                 	db	95
  4229  00A2A9  43                 	db	67
  4230  00A2AA  57                 	db	87
  4231  00A2AB  5F                 	db	95
  4232  00A2AC  4C                 	db	76
  4233  00A2AD  49                 	db	73
  4234  00A2AE  4D                 	db	77
  4235  00A2AF  49                 	db	73
  4236  00A2B0  54                 	db	84
  4237  00A2B1  00                 	db	0
  4238  00A2B2                     __end_of_use_cw_limit_string:
  4239                           	opt stack 0
  4240  00A2B2                     _ccw_limit_string:
  4241                           	opt stack 0
  4242  00A2B2  43                 	db	67
  4243  00A2B3  43                 	db	67
  4244  00A2B4  57                 	db	87
  4245  00A2B5  5F                 	db	95
  4246  00A2B6  4C                 	db	76
  4247  00A2B7  49                 	db	73
  4248  00A2B8  4D                 	db	77
  4249  00A2B9  49                 	db	73
  4250  00A2BA  54                 	db	84
  4251  00A2BB  00                 	db	0
  4252  00A2BC                     __end_of_ccw_limit_string:
  4253                           	opt stack 0
  4254  00A2BC                     _cw_limit_string:
  4255                           	opt stack 0
  4256  00A2BC  43                 	db	67
  4257  00A2BD  57                 	db	87
  4258  00A2BE  5F                 	db	95
  4259  00A2BF  4C                 	db	76
  4260  00A2C0  49                 	db	73
  4261  00A2C1  4D                 	db	77
  4262  00A2C2  49                 	db	73
  4263  00A2C3  54                 	db	84
  4264  00A2C4  00                 	db	0
  4265  00A2C5                     __end_of_cw_limit_string:
  4266                           	opt stack 0
  4267  00A2C5                     _bit_pattern_ae:
  4268                           	opt stack 0
  4269  00A2C5  0A                 	db	10
  4270  00A2C6  00                 	db	0
  4271  00A2C7  0E                 	db	14
  4272  00A2C8  01                 	db	1
  4273  00A2C9  0F                 	db	15
  4274  00A2CA  11                 	db	17
  4275  00A2CB  0F                 	db	15
  4276  00A2CC  00                 	db	0
  4277  00A2CD                     __end_of_bit_pattern_ae:
  4278                           	opt stack 0
  4279  00A2CD                     _bit_pattern_degree:
  4280                           	opt stack 0
  4281  00A2CD  18                 	db	24
  4282  00A2CE  18                 	db	24
  4283  00A2CF  00                 	db	0
  4284  00A2D0  00                 	db	0
  4285  00A2D1  00                 	db	0
  4286  00A2D2  00                 	db	0
  4287  00A2D3  00                 	db	0
  4288  00A2D4  00                 	db	0
  4289  00A2D5                     __end_of_bit_pattern_degree:
  4290                           	opt stack 0
  4291  00A2D5                     _bit_pattern_verticalbar:
  4292                           	opt stack 0
  4293  00A2D5  04                 	db	4
  4294  00A2D6  04                 	db	4
  4295  00A2D7  04                 	db	4
  4296  00A2D8  04                 	db	4
  4297  00A2D9  04                 	db	4
  4298  00A2DA  04                 	db	4
  4299  00A2DB  04                 	db	4
  4300  00A2DC  04                 	db	4
  4301  00A2DD                     __end_of_bit_pattern_verticalbar:
  4302                           	opt stack 0
  4303  00A2DD                     _flash_command_pagesize_528:
  4304                           	opt stack 0
  4305  00A2DD  3D                 	db	61
  4306  00A2DE  2A                 	db	42
  4307  00A2DF  80                 	db	128
  4308  00A2E0  A7                 	db	167
  4309  00A2E1                     __end_of_flash_command_pagesize_528:
  4310                           	opt stack 0
  4311  00A2E1                     _flash_command_pagesize_512:
  4312                           	opt stack 0
  4313  00A2E1  3D                 	db	61
  4314  00A2E2  2A                 	db	42
  4315  00A2E3  80                 	db	128
  4316  00A2E4  A6                 	db	166
  4317  00A2E5                     __end_of_flash_command_pagesize_512:
  4318                           	opt stack 0
  4319  00A2E5                     _sd000:
  4320                           	opt stack 0
  4321  00A2E5  04                 	db	4
  4322  00A2E6  03                 	db	3
  4323  00A2E7  0409               	dw	1033
  4324  00A2E9                     __end_of_sd000:
  4325                           	opt stack 0
  4326  0000                     _RPINR22	set	3837
  4327  0000                     _RPOR23	set	3799
  4328  0000                     _RPOR21	set	3797
  4329  0000                     _RPINR21	set	3836
  4330  0000                     _RPOR4	set	3780
  4331  0000                     _PPSCONbits	set	3775
  4332  0000                     _CCPTMRS0bits	set	3922
  4333  0000                     _ANCON0bits	set	3912
  4334  0000                     _ANCON1bits	set	3913
  4335  0000                     _UEP0bits	set	3878
  4336  0000                     _UIEbits	set	3894
  4337  0000                     _UADDR	set	3896
  4338  0000                     _UIE	set	3894
  4339  0000                     _UEIE	set	3895
  4340  0000                     _UCFG	set	3897
  4341  0000                     _UEP1	set	3879
  4342  0000                     _UEP0	set	3878
  4343  0000                     _ADRESL	set	4035
  4344  0000                     _ADRESH	set	4036
  4345  0000                     _ADCON1bits	set	4033
  4346  0000                     _ADCON0bits	set	4034
  4347  0000                     _PORTA	set	3968
  4348  0000                     _PORTE	set	3972
  4349  0000                     _TMR2	set	4044
  4350  0000                     _PIE1bits	set	3997
  4351  0000                     _CCPR1L	set	4027
  4352  0000                     _PR2	set	4043
  4353  0000                     _T2CONbits	set	4042
  4354  0000                     _CCP1CONbits	set	4026
  4355  0000                     _RXADDRL	set	3945
  4356  0000                     _RXADDRH	set	3944
  4357  0000                     _DMABCL	set	3943
  4358  0000                     _DMABCH	set	3942
  4359  0000                     _TXADDRL	set	3947
  4360  0000                     _TXADDRH	set	3946
  4361  0000                     _DMACON2bits	set	3974
  4362  0000                     _DMACON1bits	set	3976
  4363  0000                     _SSP2CON1bits	set	3954
  4364  0000                     _SSP2STATbits	set	3955
  4365  0000                     _PORTDbits	set	3971
  4366  0000                     _PORTEbits	set	3972
  4367  0000                     _SSP1BUF	set	4041
  4368  0000                     _SSP1CON2bits	set	4037
  4369  0000                     _SSP1CON1bits	set	4038
  4370  0000                     _SSP1ADD	set	4040
  4371  0000                     _SSP1STATbits	set	4039
  4372  0000                     _PORTAbits	set	3968
  4373  0000                     _T0CONbits	set	4053
  4374  0000                     _TRISEbits	set	3990
  4375  0000                     _EECON2	set	4007
  4376  0000                     _LATBbits	set	3978
  4377  0000                     _LATAbits	set	3977
  4378  0000                     _TRISAbits	set	3986
  4379  0000                     _LATCbits	set	3979
  4380  0000                     _TRISCbits	set	3988
  4381  0000                     _TRISBbits	set	3987
  4382  0000                     _LATDbits	set	3980
  4383  0000                     _TRISDbits	set	3989
  4384  0000                     _TMR0L	set	4054
  4385  0000                     _TMR0H	set	4055
  4386  0000                     _PIR1bits	set	3998
  4387  0000                     _OSCCON	set	4051
  4388  0000                     _OSCTUNEbits	set	3995
  4389  0000                     _INTCONbits	set	4082
  4390  0000                     _IPR2bits	set	4002
  4391  0000                     _RCONbits	set	4048
  4392  0000                     _UCON	set	3941
  4393  0000                     _USTAT	set	3940
  4394  0000                     _PIR2bits	set	4001
  4395  0000                     _UIRbits	set	3938
  4396  0000                     _UCONbits	set	3941
  4397  0000                     _UIR	set	3938
  4398  0000                     _UEIR	set	3939
  4399  0000                     _PIE2bits	set	4000
  4400  00A2E9                     
  4401                           ; BSR set to: 1
  4402  00A2E9  68                 	db	104	;'h'
  4403  00A2EA  65                 	db	101	;'e'
  4404  00A2EB  6C                 	db	108	;'l'
  4405  00A2EC  6C                 	db	108	;'l'
  4406  00A2ED  6F                 	db	111	;'o'
  4407  00A2EE  20                 	db	32
  4408  00A2EF  77                 	db	119	;'w'
  4409  00A2F0  6F                 	db	111	;'o'
  4410  00A2F1  72                 	db	114	;'r'
  4411  00A2F2  6C                 	db	108	;'l'
  4412  00A2F3  64                 	db	100	;'d'
  4413  00A2F4  21                 	db	33
  4414  00A2F5  00                 	db	0
  4415  00A2F6                     
  4416                           ; BSR set to: 1
  4417  00A2F6  53                 	db	83	;'S'
  4418  00A2F7  74                 	db	116	;'t'
  4419  00A2F8  65                 	db	101	;'e'
  4420  00A2F9  70                 	db	112	;'p'
  4421  00A2FA  70                 	db	112	;'p'
  4422  00A2FB  65                 	db	101	;'e'
  4423  00A2FC  72                 	db	114	;'r'
  4424  00A2FD  43                 	db	67	;'C'
  4425  00A2FE  74                 	db	116	;'t'
  4426  00A2FF  72                 	db	114	;'r'
  4427  00A300  6C                 	db	108	;'l'
  4428  00A301  00                 	db	0
  4429  00A302                     
  4430                           ; BSR set to: 1
  4431  00A302  46                 	db	70	;'F'
  4432  00A303  49                 	db	73	;'I'
  4433  00A304  4C                 	db	76	;'L'
  4434  00A305  45                 	db	69	;'E'
  4435  00A306  20                 	db	32
  4436  00A307  20                 	db	32
  4437  00A308  20                 	db	32
  4438  00A309  20                 	db	32
  4439  00A30A  00                 	db	0
  4440  00A30B                     STR_7:
  4441                           
  4442                           ; BSR set to: 1
  4443  00A30B  4D                 	db	77	;'M'
  4444  00A30C  53                 	db	83	;'S'
  4445  00A30D  44                 	db	68	;'D'
  4446  00A30E  4F                 	db	79	;'O'
  4447  00A30F  53                 	db	83	;'S'
  4448  00A310  35                 	db	53	;'5'
  4449  00A311  2E                 	db	46
  4450  00A312  30                 	db	48	;'0'
  4451  00A313  00                 	db	0
  4452  00A314                     STR_1:
  4453                           
  4454                           ; BSR set to: 1
  4455  00A314  20                 	db	32
  4456  00A315  20                 	db	32
  4457  00A316  20                 	db	32
  4458  00A317  20                 	db	32
  4459  00A318  20                 	db	32
  4460  00A319  20                 	db	32
  4461  00A31A  20                 	db	32
  4462  00A31B  20                 	db	32
  4463  00A31C  00                 	db	0
  4464  00A31D                     STR_2:
  4465                           
  4466                           ; BSR set to: 1
  4467  00A31D  43                 	db	67	;'C'
  4468  00A31E  61                 	db	97	;'a'
  4469  00A31F  6E                 	db	110	;'n'
  4470  00A320  63                 	db	99	;'c'
  4471  00A321  65                 	db	101	;'e'
  4472  00A322  6C                 	db	108	;'l'
  4473  00A323  00                 	db	0
  4474  00A324                     STR_6:
  4475                           
  4476                           ; BSR set to: 1
  4477  00A324  53                 	db	83	;'S'
  4478  00A325  74                 	db	116	;'t'
  4479  00A326  6F                 	db	111	;'o'
  4480  00A327  70                 	db	112	;'p'
  4481  00A328  20                 	db	32
  4482  00A329  00                 	db	0
  4483  00A32A                     
  4484                           ; BSR set to: 1
  4485  00A32A  54                 	db	84	;'T'
  4486  00A32B  58                 	db	88	;'X'
  4487  00A32C  54                 	db	84	;'T'
  4488  00A32D  00                 	db	0
  4489  0000                     
  4490                           ; #config settings
  4491  00A32E  00                 	db	0	; dummy byte at the end
  4492  0000                     
  4493                           	psect	cinit
  4494  013996                     __pcinit:
  4495                           	opt stack 0
  4496  013996                     start_initialization:
  4497                           	opt stack 0
  4498  013996                     __initialization:
  4499                           	opt stack 0
  4500                           
  4501                           ; Initialize objects allocated to BANK4 (80 bytes)
  4502                           ; load TBLPTR registers with __pidataBANK4
  4503  013996  0E26               	movlw	low __pidataBANK4
  4504  013998  6EF6               	movwf	tblptrl,c
  4505  01399A  0E4F               	movlw	high __pidataBANK4
  4506  01399C  6EF7               	movwf	tblptrh,c
  4507  01399E  0E01               	movlw	low (__pidataBANK4 shr (0+16))
  4508  0139A0  6EF8               	movwf	tblptru,c
  4509  0139A2  EE04  F000         	lfsr	0,__pdataBANK4
  4510  0139A6  EE10 F050          	lfsr	1,80
  4511  0139AA                     copy_data0:
  4512  0139AA  0009               	tblrd		*+
  4513  0139AC  CFF5 FFEE          	movff	tablat,postinc0
  4514  0139B0  50E5               	movf	postdec1,w,c
  4515  0139B2  50E1               	movf	fsr1l,w,c
  4516  0139B4  E1FA               	bnz	copy_data0
  4517                           
  4518                           ; Initialize objects allocated to BANK2 (77 bytes)
  4519                           ; load TBLPTR registers with __pidataBANK2
  4520  0139B6  0E06               	movlw	low __pidataBANK2
  4521  0139B8  6EF6               	movwf	tblptrl,c
  4522  0139BA  0E51               	movlw	high __pidataBANK2
  4523  0139BC  6EF7               	movwf	tblptrh,c
  4524  0139BE  0E01               	movlw	low (__pidataBANK2 shr (0+16))
  4525  0139C0  6EF8               	movwf	tblptru,c
  4526  0139C2  EE02  F097         	lfsr	0,__pdataBANK2
  4527  0139C6  EE10 F04D          	lfsr	1,77
  4528  0139CA                     copy_data1:
  4529  0139CA  0009               	tblrd		*+
  4530  0139CC  CFF5 FFEE          	movff	tablat,postinc0
  4531  0139D0  50E5               	movf	postdec1,w,c
  4532  0139D2  50E1               	movf	fsr1l,w,c
  4533  0139D4  E1FA               	bnz	copy_data1
  4534                           
  4535                           ; Clear objects allocated to BIGRAMll (1024 bytes)
  4536  0139D6  EE08  F000         	lfsr	0,__pbssBIGRAMll
  4537  0139DA  EE14 F000          	lfsr	1,1024
  4538  0139DE                     clear_0:
  4539  0139DE  6AEE               	clrf	postinc0,c
  4540  0139E0  50E5               	movf	postdec1,w,c
  4541  0139E2  50E1               	movf	fsr1l,w,c
  4542  0139E4  E1FC               	bnz	clear_0
  4543  0139E6  50E2               	movf	fsr1h,w,c
  4544  0139E8  E1FA               	bnz	clear_0
  4545                           
  4546                           ; Clear objects allocated to BANK3 (192 bytes)
  4547  0139EA  EE03  F000         	lfsr	0,__pbssBANK3
  4548  0139EE  0EC0               	movlw	192
  4549  0139F0                     clear_1:
  4550  0139F0  6AEE               	clrf	postinc0,c
  4551  0139F2  06E8               	decf	wreg,f,c
  4552  0139F4  E1FD               	bnz	clear_1
  4553                           
  4554                           ; Clear objects allocated to BANK2 (151 bytes)
  4555  0139F6  EE02  F000         	lfsr	0,__pbssBANK2
  4556  0139FA  0E97               	movlw	151
  4557  0139FC                     clear_2:
  4558  0139FC  6AEE               	clrf	postinc0,c
  4559  0139FE  06E8               	decf	wreg,f,c
  4560  013A00  E1FD               	bnz	clear_2
  4561                           
  4562                           ; Clear objects allocated to BANK1 (196 bytes)
  4563  013A02  EE01  F000         	lfsr	0,__pbssBANK1
  4564  013A06  0EC4               	movlw	196
  4565  013A08                     clear_3:
  4566  013A08  6AEE               	clrf	postinc0,c
  4567  013A0A  06E8               	decf	wreg,f,c
  4568  013A0C  E1FD               	bnz	clear_3
  4569                           
  4570                           ; Clear objects allocated to BANK0 (2 bytes)
  4571  013A0E  0100               	movlb	0
  4572  013A10  6BFF               	clrf	(__pbssBANK0+1)& (0+255),b
  4573  013A12  6BFE               	clrf	__pbssBANK0& (0+255),b
  4574                           
  4575                           ; Clear objects allocated to COMRAM (19 bytes)
  4576  013A14  EE00  F04C         	lfsr	0,__pbssCOMRAM
  4577  013A18  0E13               	movlw	19
  4578  013A1A                     clear_4:
  4579  013A1A  6AEE               	clrf	postinc0,c
  4580  013A1C  06E8               	decf	wreg,f,c
  4581  013A1E  E1FD               	bnz	clear_4
  4582  013A20                     end_of_initialization:
  4583                           	opt stack 0
  4584  013A20                     __end_of__initialization:
  4585                           	opt stack 0
  4586  013A20  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  4587  013A22  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  4588  013A24  0100               	movlb	0
  4589  013A26  EF80  F09C         	goto	_main	;jump to C main() function
  4590                           tblptru	equ	0xFF8
  4591                           tblptrh	equ	0xFF7
  4592                           tblptrl	equ	0xFF6
  4593                           tablat	equ	0xFF5
  4594                           postinc0	equ	0xFEE
  4595                           wreg	equ	0xFE8
  4596                           postdec1	equ	0xFE5
  4597                           fsr1h	equ	0xFE2
  4598                           fsr1l	equ	0xFE1
  4599                           
  4600                           	psect	bssCOMRAM
  4601  00004C                     __pbssCOMRAM:
  4602                           	opt stack 0
  4603  00004C                     _inPipes:
  4604                           	opt stack 0
  4605  00004C                     	ds	6
  4606  000052                     _pBDTEntryIn:
  4607                           	opt stack 0
  4608  000052                     	ds	6
  4609  000058                     _motor_current_stepcount:
  4610                           	opt stack 0
  4611  000058                     	ds	4
  4612  00005C                     _pBDTEntryEP0OutNext:
  4613                           	opt stack 0
  4614  00005C                     	ds	2
  4615  00005E                     _USBDeviceState:
  4616                           	opt stack 0
  4617  00005E                     	ds	1
  4618                           tblptru	equ	0xFF8
  4619                           tblptrh	equ	0xFF7
  4620                           tblptrl	equ	0xFF6
  4621                           tablat	equ	0xFF5
  4622                           postinc0	equ	0xFEE
  4623                           wreg	equ	0xFE8
  4624                           postdec1	equ	0xFE5
  4625                           fsr1h	equ	0xFE2
  4626                           fsr1l	equ	0xFE1
  4627                           
  4628                           	psect	bssBANK0
  4629  0000FE                     __pbssBANK0:
  4630                           	opt stack 0
  4631  0000FE                     _motor_current_speed:
  4632                           	opt stack 0
  4633  0000FE                     	ds	2
  4634                           tblptru	equ	0xFF8
  4635                           tblptrh	equ	0xFF7
  4636                           tblptrl	equ	0xFF6
  4637                           tablat	equ	0xFF5
  4638                           postinc0	equ	0xFEE
  4639                           wreg	equ	0xFE8
  4640                           postdec1	equ	0xFE5
  4641                           fsr1h	equ	0xFE2
  4642                           fsr1l	equ	0xFE1
  4643                           
  4644                           	psect	bssBANK1
  4645  000100                     __pbssBANK1:
  4646                           	opt stack 0
  4647  000100                     _gblSenseData:
  4648                           	opt stack 0
  4649  000100                     	ds	18
  4650  000112                     _outPipes:
  4651                           	opt stack 0
  4652  000112                     	ds	9
  4653  00011B                     _pBDTEntryOut:
  4654                           	opt stack 0
  4655  00011B                     	ds	6
  4656  000121                     _motor_final_stepcount:
  4657                           	opt stack 0
  4658  000121                     	ds	4
  4659  000125                     _LBA:
  4660                           	opt stack 0
  4661  000125                     	ds	4
  4662  000129                     _USB1msTickCount:
  4663                           	opt stack 0
  4664  000129                     	ds	4
  4665  00012D                     _ep_data_out:
  4666                           	opt stack 0
  4667  00012D                     	ds	3
  4668  000130                     _ep_data_in:
  4669                           	opt stack 0
  4670  000130                     	ds	3
  4671  000133                     _motor_maximum_speed:
  4672                           	opt stack 0
  4673  000133                     	ds	2
  4674  000135                     _USBInHandle:
  4675                           	opt stack 0
  4676  000135                     	ds	2
  4677  000137                     _USBOutHandle:
  4678                           	opt stack 0
  4679  000137                     	ds	2
  4680  000139                     _TransferLength:
  4681                           	opt stack 0
  4682  000139                     	ds	2
  4683  00013B                     _USBMSDInHandle:
  4684                           	opt stack 0
  4685  00013B                     	ds	2
  4686  00013D                     _USBMSDOutHandle:
  4687                           	opt stack 0
  4688  00013D                     	ds	2
  4689  00013F                     _ptrNextData:
  4690                           	opt stack 0
  4691  00013F                     	ds	2
  4692  000141                     _pDst:
  4693                           	opt stack 0
  4694  000141                     	ds	2
  4695  000143                     _pBDTEntryEP0OutCurrent:
  4696                           	opt stack 0
  4697  000143                     	ds	2
  4698  000145                     _enc2:
  4699                           	opt stack 0
  4700  000145                     	ds	1
  4701  000146                     _enc1:
  4702                           	opt stack 0
  4703  000146                     	ds	1
  4704  000147                     _motor_mode:
  4705                           	opt stack 0
  4706  000147                     	ds	1
  4707  000148                     _motor_direction:
  4708                           	opt stack 0
  4709  000148                     	ds	1
  4710  000149                     _motor_move_type:
  4711                           	opt stack 0
  4712  000149                     	ds	1
  4713  00014A                     _motor_cue_write_index:
  4714                           	opt stack 0
  4715  00014A                     	ds	1
  4716  00014B                     _motor_cue_read_index:
  4717                           	opt stack 0
  4718  00014B                     	ds	1
  4719  00014C                     _active_configuration:
  4720                           	opt stack 0
  4721  00014C                     	ds	1
  4722  00014D                     _power_state:
  4723                           	opt stack 0
  4724  00014D                     	ds	1
  4725  00014E                     _MSDCBWValid:
  4726                           	opt stack 0
  4727  00014E                     	ds	1
  4728  00014F                     _MSDHostNoData:
  4729                           	opt stack 0
  4730  00014F                     	ds	1
  4731  000150                     _SoftDetach:
  4732                           	opt stack 0
  4733  000150                     	ds	1
  4734  000151                     _gblCBWLength:
  4735                           	opt stack 0
  4736  000151                     	ds	1
  4737  000152                     _MSDRetryAttempt:
  4738                           	opt stack 0
  4739  000152                     	ds	1
  4740  000153                     _MSDWriteState:
  4741                           	opt stack 0
  4742  000153                     	ds	1
  4743  000154                     _MSDReadState:
  4744                           	opt stack 0
  4745  000154                     	ds	1
  4746  000155                     _MSDCommandState:
  4747                           	opt stack 0
  4748  000155                     	ds	1
  4749  000156                     _MSD_State:
  4750                           	opt stack 0
  4751  000156                     	ds	1
  4752  000157                     _USBTicksSinceSuspendEnd:
  4753                           	opt stack 0
  4754  000157                     	ds	1
  4755  000158                     _USBDeferOUTDataStagePackets:
  4756                           	opt stack 0
  4757  000158                     	ds	1
  4758  000159                     _USBDeferINDataStagePackets:
  4759                           	opt stack 0
  4760  000159                     	ds	1
  4761  00015A                     _USBStatusStageEnabledFlag2:
  4762                           	opt stack 0
  4763  00015A                     	ds	1
  4764  00015B                     _USBStatusStageEnabledFlag1:
  4765                           	opt stack 0
  4766  00015B                     	ds	1
  4767  00015C                     _USBDeferStatusStagePacket:
  4768                           	opt stack 0
  4769  00015C                     	ds	1
  4770  00015D                     _USBStatusStageTimeoutCounter:
  4771                           	opt stack 0
  4772  00015D                     	ds	1
  4773  00015E                     _BothEP0OutUOWNsSet:
  4774                           	opt stack 0
  4775  00015E                     	ds	1
  4776  00015F                     _endpoint_number:
  4777                           	opt stack 0
  4778  00015F                     	ds	1
  4779  000160                     _USBBusIsSuspended:
  4780                           	opt stack 0
  4781  000160                     	ds	1
  4782  000161                     _RemoteWakeup:
  4783                           	opt stack 0
  4784  000161                     	ds	1
  4785  000162                     _controlTransferState:
  4786                           	opt stack 0
  4787  000162                     	ds	1
  4788  000163                     _shortPacketStatus:
  4789                           	opt stack 0
  4790  000163                     	ds	1
  4791  000164                     _os:
  4792                           	opt stack 0
  4793  000164                     	ds	50
  4794  000196                     _config:
  4795                           	opt stack 0
  4796  000196                     	ds	40
  4797  0001BE                     _USBAlternateInterface:
  4798                           	opt stack 0
  4799  0001BE                     	ds	2
  4800  0001C0                     _active_protocol:
  4801                           	opt stack 0
  4802  0001C0                     	ds	1
  4803  0001C1                     _idle_rate:
  4804                           	opt stack 0
  4805  0001C1                     	ds	1
  4806  0001C2                     _USTATcopy:
  4807                           	opt stack 0
  4808  0001C2                     	ds	1
  4809  0001C3                     _USBActiveConfiguration:
  4810                           	opt stack 0
  4811  0001C3                     	ds	1
  4812                           tblptru	equ	0xFF8
  4813                           tblptrh	equ	0xFF7
  4814                           tblptrl	equ	0xFF6
  4815                           tablat	equ	0xFF5
  4816                           postinc0	equ	0xFEE
  4817                           wreg	equ	0xFE8
  4818                           postdec1	equ	0xFE5
  4819                           fsr1h	equ	0xFE2
  4820                           fsr1l	equ	0xFE1
  4821                           
  4822                           	psect	bssBANK2
  4823  000200                     __pbssBANK2:
  4824                           	opt stack 0
  4825  000200                     _gblCBW:
  4826                           	opt stack 0
  4827  000200                     	ds	31
  4828  00021F                     _params:
  4829                           	opt stack 0
  4830  00021F                     	ds	7
  4831  000226                     _i2c_buffer:
  4832                           	opt stack 0
  4833  000226                     	ds	6
  4834  00022C                     _motor_next_speed_check:
  4835                           	opt stack 0
  4836  00022C                     	ds	4
  4837  000230                     _gblBLKLen:
  4838                           	opt stack 0
  4839  000230                     	ds	4
  4840  000234                     _gblNumBLKS:
  4841                           	opt stack 0
  4842  000234                     	ds	4
  4843  000238                     _config_external:
  4844                           	opt stack 0
  4845  000238                     	ds	3
  4846  00023B                     _config_internal:
  4847                           	opt stack 0
  4848  00023B                     	ds	3
  4849  00023E                     _gblMediaPresent:
  4850                           	opt stack 0
  4851  00023E                     	ds	2
  4852  000240                     _MSBBufferIndex:
  4853                           	opt stack 0
  4854  000240                     	ds	2
  4855  000242                     _display_content:
  4856                           	opt stack 0
  4857  000242                     	ds	80
  4858  000292                     _mediaInformation:
  4859                           	opt stack 0
  4860  000292                     	ds	5
  4861                           tblptru	equ	0xFF8
  4862                           tblptrh	equ	0xFF7
  4863                           tblptrl	equ	0xFF6
  4864                           tablat	equ	0xFF5
  4865                           postinc0	equ	0xFEE
  4866                           wreg	equ	0xFE8
  4867                           postdec1	equ	0xFE5
  4868                           fsr1h	equ	0xFE2
  4869                           fsr1l	equ	0xFE1
  4870                           
  4871                           	psect	dataBANK2
  4872  000297                     __pdataBANK2:
  4873                           	opt stack 0
  4874  000297                     _LUN:
  4875                           	opt stack 0
  4876  000297                     	ds	29
  4877  0002B4                     i2c_display_init@F7092:
  4878                           	opt stack 0
  4879  0002B4                     	ds	9
  4880  0002BD                     __i2c_display_send_init_sequence@F7089:
  4881                           	opt stack 0
  4882  0002BD                     	ds	9
  4883  0002C6                     	ds	8
  4884  0002CE                     _configFile_used_name:
  4885                           	opt stack 0
  4886  0002CE                     	ds	8
  4887  0002D6                     _configFile_name:
  4888                           	opt stack 0
  4889  0002D6                     	ds	8
  4890  0002DE                     _configFile_used_extention:
  4891                           	opt stack 0
  4892  0002DE                     	ds	3
  4893  0002E1                     _configFile_extention:
  4894                           	opt stack 0
  4895  0002E1                     	ds	3
  4896                           tblptru	equ	0xFF8
  4897                           tblptrh	equ	0xFF7
  4898                           tblptrl	equ	0xFF6
  4899                           tablat	equ	0xFF5
  4900                           postinc0	equ	0xFEE
  4901                           wreg	equ	0xFE8
  4902                           postdec1	equ	0xFE5
  4903                           fsr1h	equ	0xFE2
  4904                           fsr1l	equ	0xFE1
  4905                           
  4906                           	psect	bssBANK3
  4907  000300                     __pbssBANK3:
  4908                           	opt stack 0
  4909  000300                     _motor_command_cue:
  4910                           	opt stack 0
  4911  000300                     	ds	64
  4912  000340                     _ToSendDataBuffer:
  4913                           	opt stack 0
  4914  000340                     	ds	64
  4915  000380                     _ReceivedDataBuffer:
  4916                           	opt stack 0
  4917  000380                     	ds	64
  4918                           tblptru	equ	0xFF8
  4919                           tblptrh	equ	0xFF7
  4920                           tblptrl	equ	0xFF6
  4921                           tablat	equ	0xFF5
  4922                           postinc0	equ	0xFEE
  4923                           wreg	equ	0xFE8
  4924                           postdec1	equ	0xFE5
  4925                           fsr1h	equ	0xFE2
  4926                           fsr1l	equ	0xFE1
  4927                           
  4928                           	psect	dataBANK4
  4929  000400                     __pdataBANK4:
  4930                           	opt stack 0
  4931  000400                     _dc_startup:
  4932                           	opt stack 0
  4933  000400                     	ds	80
  4934                           tblptru	equ	0xFF8
  4935                           tblptrh	equ	0xFF7
  4936                           tblptrl	equ	0xFF6
  4937                           tablat	equ	0xFF5
  4938                           postinc0	equ	0xFEE
  4939                           wreg	equ	0xFE8
  4940                           postdec1	equ	0xFE5
  4941                           fsr1h	equ	0xFE2
  4942                           fsr1l	equ	0xFE1
  4943                           
  4944                           	psect	bssBIGRAMll
  4945  000800                     __pbssBIGRAMll:
  4946                           	opt stack 0
  4947  000800                     _ConfigFile_buffer:
  4948                           	opt stack 0
  4949  000800                     	ds	512
  4950  000A00                     _buffer:
  4951                           	opt stack 0
  4952  000A00                     	ds	512
  4953                           tblptru	equ	0xFF8
  4954                           tblptrh	equ	0xFF7
  4955                           tblptrl	equ	0xFF6
  4956                           tablat	equ	0xFF5
  4957                           postinc0	equ	0xFEE
  4958                           wreg	equ	0xFE8
  4959                           postdec1	equ	0xFE5
  4960                           fsr1h	equ	0xFE2
  4961                           fsr1l	equ	0xFE1
  4962                           
  4963                           	psect	cstackBANK1
  4964  0001C4                     __pcstackBANK1:
  4965                           	opt stack 0
  4966  0001C4                     ??_configFile_read:
  4967                           
  4968                           ; 1 bytes @ 0x0
  4969  0001C4                     	ds	8
  4970  0001CC                     configFile_read@item_string:
  4971                           	opt stack 0
  4972                           
  4973                           ; 31 bytes @ 0x8
  4974  0001CC                     	ds	31
  4975  0001EB                     configFile_read@value_string:
  4976                           	opt stack 0
  4977                           
  4978                           ; 12 bytes @ 0x27
  4979  0001EB                     	ds	12
  4980  0001F7                     configFile_read@file_size:
  4981                           	opt stack 0
  4982                           
  4983                           ; 4 bytes @ 0x33
  4984  0001F7                     	ds	4
  4985  0001FB                     configFile_read@file_number:
  4986                           	opt stack 0
  4987                           
  4988                           ; 1 bytes @ 0x37
  4989  0001FB                     	ds	1
  4990  0001FC                     configFile_read@position:
  4991                           	opt stack 0
  4992                           
  4993                           ; 4 bytes @ 0x38
  4994  0001FC                     	ds	4
  4995                           tblptru	equ	0xFF8
  4996                           tblptrh	equ	0xFF7
  4997                           tblptrl	equ	0xFF6
  4998                           tablat	equ	0xFF5
  4999                           postinc0	equ	0xFEE
  5000                           wreg	equ	0xFE8
  5001                           postdec1	equ	0xFE5
  5002                           fsr1h	equ	0xFE2
  5003                           fsr1l	equ	0xFE1
  5004                           
  5005                           	psect	cstackBANK0
  5006  000060                     __pcstackBANK0:
  5007                           	opt stack 0
  5008  000060                     ??_motor_stop:
  5009  000060                     ??_isdigit:
  5010  000060                     ??__i2c_wait_idle:
  5011  000060                     ??__display_clear:
  5012  000060                     ??__divide_jump_size_increment:
  5013  000060                     ??__divide_jump_size_decrement:
  5014  000060                     ?_USBTransferOnePacket:
  5015                           	opt stack 0
  5016  000060                     ?_ExternalFlash_MediaInitialize:
  5017                           	opt stack 0
  5018  000060                     ?_ExternalFlash_SectorSizeRead:
  5019                           	opt stack 0
  5020  000060                     ?_strlen:
  5021                           	opt stack 0
  5022  000060                     ?_strncmp:
  5023                           	opt stack 0
  5024  000060                     ?__sector_from_file_number:
  5025                           	opt stack 0
  5026  000060                     ?__offset_from_file_number:
  5027                           	opt stack 0
  5028  000060                     ?__data_sector_from_cluster:
  5029                           	opt stack 0
  5030  000060                     ?__fat_sector_from_cluster:
  5031                           	opt stack 0
  5032  000060                     ?__fat_offset_from_cluster:
  5033                           	opt stack 0
  5034  000060                     ?__cluster_from_sector_and_offset:
  5035                           	opt stack 0
  5036  000060                     ?__get_available_offset_from_buffer:
  5037                           	opt stack 0
  5038  000060                     ?__read_value_from_offset:
  5039                           	opt stack 0
  5040  000060                     ?__get_time:
  5041                           	opt stack 0
  5042  000060                     ?__get_date:
  5043                           	opt stack 0
  5044  000060                     ?__encoder_next_setup_stepsize:
  5045                           	opt stack 0
  5046  000060                     ?__encoder_next_arc_step_size:
  5047                           	opt stack 0
  5048  000060                     ?___wmul:
  5049                           	opt stack 0
  5050  000060                     ?___lwdiv:
  5051                           	opt stack 0
  5052  000060                     ?___lwmod:
  5053                           	opt stack 0
  5054  000060                     ?_ExternalFlash_CapacityRead:
  5055                           	opt stack 0
  5056  000060                     ?__motor_calculate_distance:
  5057                           	opt stack 0
  5058  000060                     ?___lmul:
  5059                           	opt stack 0
  5060  000060                     ?___lldiv:
  5061                           	opt stack 0
  5062  000060                     ?___aldiv:
  5063                           	opt stack 0
  5064  000060                     ?___almod:
  5065                           	opt stack 0
  5066  000060                     ?___fltol:
  5067                           	opt stack 0
  5068  000060                     ?___llmod:
  5069                           	opt stack 0
  5070  000060                     USBTransferOnePacket@dir:
  5071                           	opt stack 0
  5072  000060                     USBStallEndpoint@dir:
  5073                           	opt stack 0
  5074  000060                     __i2c_send@dat:
  5075                           	opt stack 0
  5076  000060                     display_get_character@position:
  5077                           	opt stack 0
  5078  000060                     __encoder_next_divide_step_size@old_stepsize:
  5079                           	opt stack 0
  5080  000060                     toupper@c:
  5081                           	opt stack 0
  5082  000060                     MSDComputeDeviceInAndResidue@DiExpected:
  5083                           	opt stack 0
  5084  000060                     SYSTEM_Initialize@pll_startup_counter:
  5085                           	opt stack 0
  5086  000060                     ExternalFlash_MediaInitialize@config:
  5087                           	opt stack 0
  5088  000060                     ExternalFlash_SectorSizeRead@config:
  5089                           	opt stack 0
  5090  000060                     ExternalFlash_CapacityRead@config:
  5091                           	opt stack 0
  5092  000060                     ExternalFlash_MediaDetect@config:
  5093                           	opt stack 0
  5094  000060                     ExternalFlash_WriteProtectStateGet@config:
  5095                           	opt stack 0
  5096  000060                     __data_sector_from_cluster@fat_cluster:
  5097                           	opt stack 0
  5098  000060                     __fat_sector_from_cluster@cluster:
  5099                           	opt stack 0
  5100  000060                     __fat_offset_from_cluster@cluster:
  5101                           	opt stack 0
  5102  000060                     __cluster_from_sector_and_offset@sector:
  5103                           	opt stack 0
  5104  000060                     __get_available_offset_from_buffer@minimum_offset:
  5105                           	opt stack 0
  5106  000060                     __read_value_from_offset@offset:
  5107                           	opt stack 0
  5108  000060                     __write_value_to_offset@offset:
  5109                           	opt stack 0
  5110  000060                     __get_mbr@idx:
  5111                           	opt stack 0
  5112  000060                     __get_fbr@idx:
  5113                           	opt stack 0
  5114  000060                     spi_tx@data:
  5115                           	opt stack 0
  5116  000060                     spi_tx_tx@command:
  5117                           	opt stack 0
  5118  000060                     spi_tx_rx@command:
  5119                           	opt stack 0
  5120  000060                     __fill_buffer_get_mode_details@outBuffer:
  5121                           	opt stack 0
  5122  000060                     motor_change_speed@new_speed:
  5123                           	opt stack 0
  5124  000060                     __encoder_next_setup_stepsize@old_stepsize:
  5125                           	opt stack 0
  5126  000060                     __encoder_next_arc_step_size@old_stepsize:
  5127                           	opt stack 0
  5128  000060                     __get_item@item_string:
  5129                           	opt stack 0
  5130  000060                     ___wmul@multiplier:
  5131                           	opt stack 0
  5132  000060                     ___lwdiv@dividend:
  5133                           	opt stack 0
  5134  000060                     ___lwmod@dividend:
  5135                           	opt stack 0
  5136  000060                     memcpy@d1:
  5137                           	opt stack 0
  5138  000060                     memset@p1:
  5139                           	opt stack 0
  5140  000060                     strlen@s:
  5141                           	opt stack 0
  5142  000060                     strncmp@s1:
  5143                           	opt stack 0
  5144  000060                     __spi_init@details:
  5145                           	opt stack 0
  5146  000060                     __motor_run@distance_in_steps:
  5147                           	opt stack 0
  5148  000060                     __motor_schedule_command@distance_in_steps:
  5149                           	opt stack 0
  5150  000060                     __motor_calculate_distance@target_position:
  5151                           	opt stack 0
  5152  000060                     ___lmul@multiplier:
  5153                           	opt stack 0
  5154  000060                     ___lldiv@dividend:
  5155                           	opt stack 0
  5156  000060                     ___aldiv@dividend:
  5157                           	opt stack 0
  5158  000060                     ___almod@dividend:
  5159                           	opt stack 0
  5160  000060                     ___fltol@f1:
  5161                           	opt stack 0
  5162  000060                     ___llmod@dividend:
  5163                           	opt stack 0
  5164                           
  5165                           ; 4 bytes @ 0x0
  5166  000060                     	ds	1
  5167  000061                     ??_USBStallEndpoint:
  5168  000061                     ??_display_get_character:
  5169  000061                     ?_stricmp:
  5170                           	opt stack 0
  5171  000061                     _isdigit$8435:
  5172                           	opt stack 0
  5173  000061                     USBTransferOnePacket@data:
  5174                           	opt stack 0
  5175  000061                     stricmp@s1:
  5176                           	opt stack 0
  5177                           
  5178                           ; 2 bytes @ 0x1
  5179  000061                     	ds	1
  5180  000062                     ??_MSDComputeDeviceInAndResidue:
  5181  000062                     ??_strlen:
  5182  000062                     ??__fill_buffer_get_mode_details:
  5183  000062                     ??__get_mbr:
  5184  000062                     ??__get_fbr:
  5185  000062                     ??__encoder_next_setup_stepsize:
  5186  000062                     ??__encoder_next_arc_step_size:
  5187  000062                     __display_clear@row:
  5188                           	opt stack 0
  5189  000062                     __sector_from_file_number@file_number:
  5190                           	opt stack 0
  5191  000062                     __offset_from_file_number@file_number:
  5192                           	opt stack 0
  5193  000062                     isdigit@c:
  5194                           	opt stack 0
  5195  000062                     SYSTEM_Initialize@pll_startup_counter_3143:
  5196                           	opt stack 0
  5197  000062                     __cluster_from_sector_and_offset@offset:
  5198                           	opt stack 0
  5199  000062                     __get_available_offset_from_buffer@buffer:
  5200                           	opt stack 0
  5201  000062                     __read_value_from_offset@buffer:
  5202                           	opt stack 0
  5203  000062                     __write_value_to_offset@buffer:
  5204                           	opt stack 0
  5205  000062                     spi_tx@length:
  5206                           	opt stack 0
  5207  000062                     spi_tx_tx@command_length:
  5208                           	opt stack 0
  5209  000062                     spi_tx_rx@command_length:
  5210                           	opt stack 0
  5211  000062                     motor_set_manual_speed@new_speed:
  5212                           	opt stack 0
  5213  000062                     __get_item@value_string:
  5214                           	opt stack 0
  5215  000062                     ___wmul@multiplicand:
  5216                           	opt stack 0
  5217  000062                     ___lwdiv@divisor:
  5218                           	opt stack 0
  5219  000062                     ___lwmod@divisor:
  5220                           	opt stack 0
  5221  000062                     memcpy@s1:
  5222                           	opt stack 0
  5223  000062                     memset@c:
  5224                           	opt stack 0
  5225  000062                     strncmp@s2:
  5226                           	opt stack 0
  5227                           
  5228                           ; 2 bytes @ 0x2
  5229  000062                     	ds	1
  5230  000063                     USBTransferOnePacket@len:
  5231                           	opt stack 0
  5232  000063                     __display_clear@col:
  5233                           	opt stack 0
  5234  000063                     display_get_character@line:
  5235                           	opt stack 0
  5236  000063                     spi_init@configuration:
  5237                           	opt stack 0
  5238  000063                     __sector_from_file_number@sector:
  5239                           	opt stack 0
  5240  000063                     __offset_from_file_number@offset:
  5241                           	opt stack 0
  5242  000063                     stricmp@s2:
  5243                           	opt stack 0
  5244                           
  5245                           ; 2 bytes @ 0x3
  5246  000063                     	ds	1
  5247  000064                     ??_USBTransferOnePacket:
  5248  000064                     ??_spi_tx:
  5249  000064                     ??__motor_calculate_distance:
  5250  000064                     ??__get_available_offset_from_buffer:
  5251  000064                     ??__read_value_from_offset:
  5252  000064                     ??___fltol:
  5253  000064                     SYSTEM_Initialize@state:
  5254                           	opt stack 0
  5255  000064                     ___lwmod@counter:
  5256                           	opt stack 0
  5257  000064                     __write_value_to_offset@value:
  5258                           	opt stack 0
  5259  000064                     spi_tx_tx@data:
  5260                           	opt stack 0
  5261  000064                     spi_tx_rx@data:
  5262                           	opt stack 0
  5263  000064                     __fill_buffer_get_display@outBuffer:
  5264                           	opt stack 0
  5265  000064                     __parse_set_manual_speed@data:
  5266                           	opt stack 0
  5267  000064                     __motor_run@speed:
  5268                           	opt stack 0
  5269  000064                     __motor_schedule_command@speed:
  5270                           	opt stack 0
  5271  000064                     __get_item@buffer:
  5272                           	opt stack 0
  5273  000064                     ___wmul@product:
  5274                           	opt stack 0
  5275  000064                     ___lwdiv@quotient:
  5276                           	opt stack 0
  5277  000064                     memcpy@n:
  5278                           	opt stack 0
  5279  000064                     memset@n:
  5280                           	opt stack 0
  5281  000064                     strlen@cp:
  5282                           	opt stack 0
  5283  000064                     strncmp@len:
  5284                           	opt stack 0
  5285  000064                     ___lmul@multiplicand:
  5286                           	opt stack 0
  5287  000064                     ___lldiv@divisor:
  5288                           	opt stack 0
  5289  000064                     ___aldiv@divisor:
  5290                           	opt stack 0
  5291  000064                     ___almod@divisor:
  5292                           	opt stack 0
  5293  000064                     ___llmod@divisor:
  5294                           	opt stack 0
  5295                           
  5296                           ; 4 bytes @ 0x4
  5297  000064                     	ds	1
  5298  000065                     ??_stricmp:
  5299  000065                     USBStallEndpoint@ep:
  5300                           	opt stack 0
  5301  000065                     __i2c_eeprom_busy@busy:
  5302                           	opt stack 0
  5303  000065                     __i2c_write@data:
  5304                           	opt stack 0
  5305  000065                     __i2c_read@data:
  5306                           	opt stack 0
  5307  000065                     i2c_display_write_fixed@data:
  5308                           	opt stack 0
  5309                           
  5310                           ; 2 bytes @ 0x5
  5311  000065                     	ds	1
  5312  000066                     ??_strncmp:
  5313  000066                     ??__write_value_to_offset:
  5314  000066                     ??__get_item:
  5315  000066                     ?_atoi:
  5316                           	opt stack 0
  5317  000066                     __fill_buffer_get_display@secondHalf:
  5318                           	opt stack 0
  5319  000066                     __motor_run@type:
  5320                           	opt stack 0
  5321  000066                     __motor_schedule_command@type:
  5322                           	opt stack 0
  5323  000066                     ___lwdiv@counter:
  5324                           	opt stack 0
  5325  000066                     stricmp@r:
  5326                           	opt stack 0
  5327  000066                     USBStallEndpoint@p:
  5328                           	opt stack 0
  5329  000066                     __get_available_offset_from_buffer@offset:
  5330                           	opt stack 0
  5331  000066                     spi_tx_tx@data_length:
  5332                           	opt stack 0
  5333  000066                     spi_tx_rx@data_length:
  5334                           	opt stack 0
  5335  000066                     __parse_set_manual_speed@out_buffer:
  5336                           	opt stack 0
  5337  000066                     atoi@s:
  5338                           	opt stack 0
  5339  000066                     memcpy@d:
  5340                           	opt stack 0
  5341  000066                     memset@p:
  5342                           	opt stack 0
  5343                           
  5344                           ; 2 bytes @ 0x6
  5345  000066                     	ds	1
  5346  000067                     ??__fill_buffer_get_display:
  5347  000067                     ??__motor_run:
  5348  000067                     __i2c_write@length:
  5349                           	opt stack 0
  5350  000067                     __i2c_read@length:
  5351                           	opt stack 0
  5352  000067                     i2c_display_write_fixed@length:
  5353                           	opt stack 0
  5354  000067                     __motor_schedule_command@direction:
  5355                           	opt stack 0
  5356  000067                     __read_value_from_offset@value:
  5357                           	opt stack 0
  5358  000067                     utoa@buf:
  5359                           	opt stack 0
  5360                           
  5361                           ; 2 bytes @ 0x7
  5362  000067                     	ds	1
  5363  000068                     ??_spi_tx_rx:
  5364  000068                     ??_spi_tx_tx:
  5365  000068                     ??_atoi:
  5366  000068                     ??__i2c_read:
  5367  000068                     USBDeviceInit@i:
  5368                           	opt stack 0
  5369  000068                     USBTransferOnePacket@ep:
  5370                           	opt stack 0
  5371  000068                     MSDErrorHandler@ErrorCase:
  5372                           	opt stack 0
  5373  000068                     __i2c_write@slave_address:
  5374                           	opt stack 0
  5375  000068                     i2c_display_write_fixed@pos:
  5376                           	opt stack 0
  5377  000068                     __flash_wakeup@command:
  5378                           	opt stack 0
  5379  000068                     __motor_move_back_forth@return_value_1:
  5380                           	opt stack 0
  5381  000068                     __motor_calculate_distance@direction:
  5382                           	opt stack 0
  5383  000068                     ___aldiv@counter:
  5384                           	opt stack 0
  5385  000068                     ___almod@counter:
  5386                           	opt stack 0
  5387  000068                     ___fltol@sign1:
  5388                           	opt stack 0
  5389  000068                     ___llmod@counter:
  5390                           	opt stack 0
  5391  000068                     __parse_set_manual_speed@out_idx_ptr:
  5392                           	opt stack 0
  5393  000068                     memcpy@s:
  5394                           	opt stack 0
  5395  000068                     ___lmul@product:
  5396                           	opt stack 0
  5397  000068                     ___lldiv@quotient:
  5398                           	opt stack 0
  5399                           
  5400                           ; 4 bytes @ 0x8
  5401  000068                     	ds	1
  5402  000069                     MSDErrorHandler@OldMSD_State:
  5403                           	opt stack 0
  5404  000069                     __i2c_write@cntr:
  5405                           	opt stack 0
  5406  000069                     __motor_move_back_forth@return_value_2:
  5407                           	opt stack 0
  5408  000069                     __get_item@value_ctr:
  5409                           	opt stack 0
  5410  000069                     ___aldiv@sign:
  5411                           	opt stack 0
  5412  000069                     ___almod@sign:
  5413                           	opt stack 0
  5414  000069                     ___fltol@exp1:
  5415                           	opt stack 0
  5416  000069                     USBTransferOnePacket@handle:
  5417                           	opt stack 0
  5418  000069                     utoa@val:
  5419                           	opt stack 0
  5420  000069                     __motor_calculate_distance@distance:
  5421                           	opt stack 0
  5422                           
  5423                           ; 4 bytes @ 0x9
  5424  000069                     	ds	1
  5425  00006A                     ??__parse_set_manual_speed:
  5426  00006A                     ??_i2c_display_init:
  5427  00006A                     ?___xxtofl:
  5428                           	opt stack 0
  5429  00006A                     __ic2_display_set_ddram_address@address:
  5430                           	opt stack 0
  5431  00006A                     motor_set_zero@direction:
  5432                           	opt stack 0
  5433  00006A                     __get_item@item_ctr:
  5434                           	opt stack 0
  5435  00006A                     atoi@sign:
  5436                           	opt stack 0
  5437  00006A                     memcpy@tmp:
  5438                           	opt stack 0
  5439  00006A                     __ic2_display_set_cgram_address@data_array:
  5440                           	opt stack 0
  5441  00006A                     MSDCheckForErrorCases@DeviceBytes:
  5442                           	opt stack 0
  5443  00006A                     ___aldiv@quotient:
  5444                           	opt stack 0
  5445  00006A                     ___xxtofl@val:
  5446                           	opt stack 0
  5447                           
  5448                           ; 4 bytes @ 0xA
  5449  00006A                     	ds	1
  5450  00006B                     __motor_run@direction:
  5451                           	opt stack 0
  5452  00006B                     __ic2_display_set_ddram_address@data_array:
  5453                           	opt stack 0
  5454  00006B                     __fill_buffer_get_status@outBuffer:
  5455                           	opt stack 0
  5456  00006B                     __parse_set_manual_speed@new_speed:
  5457                           	opt stack 0
  5458  00006B                     atoi@a:
  5459                           	opt stack 0
  5460  00006B                     utoa@base:
  5461                           	opt stack 0
  5462  00006B                     i2c_display_init@init_sequence:
  5463                           	opt stack 0
  5464                           
  5465                           ; 9 bytes @ 0xB
  5466  00006B                     	ds	1
  5467  00006C                     ?__flash_get_status:
  5468                           	opt stack 0
  5469  00006C                     ?__motor_distance_to_limit:
  5470                           	opt stack 0
  5471  00006C                     ?_atol:
  5472                           	opt stack 0
  5473  00006C                     __fill_buffer_get_display@cntr:
  5474                           	opt stack 0
  5475  00006C                     ___lldiv@counter:
  5476                           	opt stack 0
  5477  00006C                     atol@s:
  5478                           	opt stack 0
  5479                           
  5480                           ; 2 bytes @ 0xC
  5481  00006C                     	ds	1
  5482  00006D                     __ic2_display_set_cgram_address@address:
  5483                           	opt stack 0
  5484  00006D                     i2c_display_cursor@position:
  5485                           	opt stack 0
  5486  00006D                     __fill_buffer_get_display@line:
  5487                           	opt stack 0
  5488  00006D                     utoa@v:
  5489                           	opt stack 0
  5490  00006D                     ultoa@buf:
  5491                           	opt stack 0
  5492                           
  5493                           ; 2 bytes @ 0xD
  5494  00006D                     	ds	1
  5495  00006E                     ??___xxtofl:
  5496  00006E                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  5497                           	opt stack 0
  5498  00006E                     i2c_display_cursor@line:
  5499                           	opt stack 0
  5500  00006E                     __flash_get_status@command:
  5501                           	opt stack 0
  5502  00006E                     __fill_buffer_get_display@start_line:
  5503                           	opt stack 0
  5504  00006E                     i2c_display_program_custom_character@bit_pattern:
  5505                           	opt stack 0
  5506                           
  5507                           ; 2 bytes @ 0xE
  5508  00006E                     	ds	1
  5509  00006F                     MSDCheckForErrorCases@MSDErrorCase:
  5510                           	opt stack 0
  5511  00006F                     __i2c_read@slave_address:
  5512                           	opt stack 0
  5513  00006F                     i2c_display_cursor@address:
  5514                           	opt stack 0
  5515  00006F                     __fill_buffer_get_display@position:
  5516                           	opt stack 0
  5517  00006F                     utoa@c:
  5518                           	opt stack 0
  5519  00006F                     __flash_get_status@status:
  5520                           	opt stack 0
  5521  00006F                     ultoa@val:
  5522                           	opt stack 0
  5523                           
  5524                           ; 4 bytes @ 0xF
  5525  00006F                     	ds	1
  5526  000070                     ??__motor_distance_to_limit:
  5527  000070                     ??_atol:
  5528  000070                     ??_i2c_display_program_custom_character:
  5529  000070                     MSDCheckForErrorCases@DeviceNoData:
  5530                           	opt stack 0
  5531  000070                     __i2c_read@cntr:
  5532                           	opt stack 0
  5533  000070                     display_update@line:
  5534                           	opt stack 0
  5535  000070                     api_prepare@inBuffer:
  5536                           	opt stack 0
  5537  000070                     itoa@buf:
  5538                           	opt stack 0
  5539                           
  5540                           ; 2 bytes @ 0x10
  5541  000070                     	ds	1
  5542  000071                     i2c_eeprom_read@address:
  5543                           	opt stack 0
  5544  000071                     __flash_is_busy@status:
  5545                           	opt stack 0
  5546                           
  5547                           ; 2 bytes @ 0x11
  5548  000071                     	ds	1
  5549  000072                     ___xxtofl@sign:
  5550                           	opt stack 0
  5551  000072                     api_prepare@outBuffer:
  5552                           	opt stack 0
  5553  000072                     itoa@val:
  5554                           	opt stack 0
  5555                           
  5556                           ; 2 bytes @ 0x12
  5557  000072                     	ds	1
  5558  000073                     ___xxtofl@exp:
  5559                           	opt stack 0
  5560  000073                     i2c_eeprom_read@data:
  5561                           	opt stack 0
  5562  000073                     __flash_copy_page_to_buffer@page:
  5563                           	opt stack 0
  5564  000073                     __flash_compare_page_to_buffer@page:
  5565                           	opt stack 0
  5566  000073                     __flash_write_to_buffer@start:
  5567                           	opt stack 0
  5568  000073                     __flash_write_page_from_buffer@page:
  5569                           	opt stack 0
  5570  000073                     __flash_partial_read@page:
  5571                           	opt stack 0
  5572  000073                     ultoa@base:
  5573                           	opt stack 0
  5574  000073                     __flash_set_page_size@command:
  5575                           	opt stack 0
  5576                           
  5577                           ; 4 bytes @ 0x13
  5578  000073                     	ds	1
  5579  000074                     api_prepare@command:
  5580                           	opt stack 0
  5581  000074                     atol@sign:
  5582                           	opt stack 0
  5583  000074                     itoa@base:
  5584                           	opt stack 0
  5585  000074                     __motor_distance_to_limit@distance_to_limit_in_steps:
  5586                           	opt stack 0
  5587  000074                     ___xxtofl@arg:
  5588                           	opt stack 0
  5589  000074                     i2c_display_program_custom_character@data_array:
  5590                           	opt stack 0
  5591                           
  5592                           ; 11 bytes @ 0x14
  5593  000074                     	ds	1
  5594  000075                     i2c_eeprom_read@length:
  5595                           	opt stack 0
  5596  000075                     __flash_copy_page_to_buffer@buffer:
  5597                           	opt stack 0
  5598  000075                     __flash_compare_page_to_buffer@buffer:
  5599                           	opt stack 0
  5600  000075                     __flash_write_page_from_buffer@buffer:
  5601                           	opt stack 0
  5602  000075                     __flash_write_to_buffer@data:
  5603                           	opt stack 0
  5604  000075                     __flash_partial_read@start:
  5605                           	opt stack 0
  5606  000075                     atol@a:
  5607                           	opt stack 0
  5608  000075                     ultoa@v:
  5609                           	opt stack 0
  5610                           
  5611                           ; 4 bytes @ 0x15
  5612  000075                     	ds	1
  5613  000076                     ??_i2c_eeprom_read:
  5614  000076                     ??__flash_copy_page_to_buffer:
  5615  000076                     ??__flash_compare_page_to_buffer:
  5616  000076                     ??__flash_write_page_from_buffer:
  5617  000076                     itoa@cp:
  5618                           	opt stack 0
  5619                           
  5620                           ; 2 bytes @ 0x16
  5621  000076                     	ds	1
  5622  000077                     i2c_eeprom_read@addr:
  5623                           	opt stack 0
  5624  000077                     __flash_set_page_size@size:
  5625                           	opt stack 0
  5626  000077                     __flash_write_to_buffer@data_length:
  5627                           	opt stack 0
  5628  000077                     __flash_partial_read@length:
  5629                           	opt stack 0
  5630                           
  5631                           ; 2 bytes @ 0x17
  5632  000077                     	ds	1
  5633  000078                     ?___fldiv:
  5634                           	opt stack 0
  5635  000078                     ?___flmul:
  5636                           	opt stack 0
  5637  000078                     ?___flneg:
  5638                           	opt stack 0
  5639  000078                     i2c_eeprom_read@slave_address:
  5640                           	opt stack 0
  5641  000078                     __motor_distance_to_limit@direction:
  5642                           	opt stack 0
  5643  000078                     __display_padded_itoa@value:
  5644                           	opt stack 0
  5645  000078                     __display_itoa_u16@value:
  5646                           	opt stack 0
  5647  000078                     ___flge@ff1:
  5648                           	opt stack 0
  5649  000078                     ___flneg@f1:
  5650                           	opt stack 0
  5651  000078                     ___fldiv@b:
  5652                           	opt stack 0
  5653  000078                     ___flmul@b:
  5654                           	opt stack 0
  5655                           
  5656                           ; 4 bytes @ 0x18
  5657  000078                     	ds	1
  5658  000079                     __flash_write_to_buffer@buffer:
  5659                           	opt stack 0
  5660  000079                     atol@c:
  5661                           	opt stack 0
  5662  000079                     ultoa@c:
  5663                           	opt stack 0
  5664  000079                     __flash_compare_page_to_buffer@status:
  5665                           	opt stack 0
  5666  000079                     __flash_partial_read@data:
  5667                           	opt stack 0
  5668  000079                     __flash_copy_page_to_buffer@command:
  5669                           	opt stack 0
  5670  000079                     __flash_write_page_from_buffer@command:
  5671                           	opt stack 0
  5672  000079                     __motor_distance_to_limit@absolute_position_in_steps:
  5673                           	opt stack 0
  5674                           
  5675                           ; 4 bytes @ 0x19
  5676  000079                     	ds	1
  5677  00007A                     __display_padded_itoa@length:
  5678                           	opt stack 0
  5679  00007A                     __display_itoa_u16@text:
  5680                           	opt stack 0
  5681  00007A                     ltoa@buf:
  5682                           	opt stack 0
  5683  00007A                     __flash_write_to_buffer@command:
  5684                           	opt stack 0
  5685                           
  5686                           ; 4 bytes @ 0x1A
  5687  00007A                     	ds	1
  5688  00007B                     ??__flash_partial_read:
  5689  00007B                     __display_padded_itoa@text:
  5690                           	opt stack 0
  5691  00007B                     __flash_compare_page_to_buffer@command:
  5692                           	opt stack 0
  5693                           
  5694                           ; 4 bytes @ 0x1B
  5695  00007B                     	ds	1
  5696  00007C                     ?___fladd:
  5697                           	opt stack 0
  5698  00007C                     __display_start@cntr:
  5699                           	opt stack 0
  5700  00007C                     ___flge@ff2:
  5701                           	opt stack 0
  5702  00007C                     ___fladd@b:
  5703                           	opt stack 0
  5704  00007C                     ___fldiv@a:
  5705                           	opt stack 0
  5706  00007C                     ___flmul@a:
  5707                           	opt stack 0
  5708  00007C                     ltoa@val:
  5709                           	opt stack 0
  5710                           
  5711                           ; 4 bytes @ 0x1C
  5712  00007C                     	ds	1
  5713  00007D                     ??__display_padded_itoa:
  5714  00007D                     __motor_move_steps@distance_in_steps:
  5715                           	opt stack 0
  5716  00007D                     __motor_decide_direction@target_position_in_steps:
  5717                           	opt stack 0
  5718                           
  5719                           ; 4 bytes @ 0x1D
  5720  00007D                     	ds	2
  5721  00007F                     i2c_display_program_custom_character@address:
  5722                           	opt stack 0
  5723  00007F                     flash_sector_write@page:
  5724                           	opt stack 0
  5725  00007F                     flash_partial_write@page:
  5726                           	opt stack 0
  5727  00007F                     __flash_partial_read@command:
  5728                           	opt stack 0
  5729                           
  5730                           ; 4 bytes @ 0x1F
  5731  00007F                     	ds	1
  5732  000080                     ??___fldiv:
  5733  000080                     ??___flmul:
  5734  000080                     ??___flge:
  5735  000080                     i2c_display_program_custom_character@cntr:
  5736                           	opt stack 0
  5737  000080                     ltoa@base:
  5738                           	opt stack 0
  5739  000080                     ___fladd@a:
  5740                           	opt stack 0
  5741                           
  5742                           ; 4 bytes @ 0x20
  5743  000080                     	ds	1
  5744  000081                     __motor_decide_direction@overshoot:
  5745                           	opt stack 0
  5746  000081                     flash_sector_write@data:
  5747                           	opt stack 0
  5748  000081                     flash_partial_write@start:
  5749                           	opt stack 0
  5750  000081                     __motor_move_steps@speed:
  5751                           	opt stack 0
  5752                           
  5753                           ; 2 bytes @ 0x21
  5754  000081                     	ds	1
  5755  000082                     ltoa@cp:
  5756                           	opt stack 0
  5757  000082                     __motor_decide_direction@distance_to_limit_cw:
  5758                           	opt stack 0
  5759  000082                     __display_padded_itoa@tmp:
  5760                           	opt stack 0
  5761                           
  5762                           ; 10 bytes @ 0x22
  5763  000082                     	ds	1
  5764  000083                     flash_sector_write@match:
  5765                           	opt stack 0
  5766  000083                     __motor_move_steps@overshoot:
  5767                           	opt stack 0
  5768  000083                     flash_partial_write@length:
  5769                           	opt stack 0
  5770  000083                     __flash_partial_read@address:
  5771                           	opt stack 0
  5772                           
  5773                           ; 4 bytes @ 0x23
  5774  000083                     	ds	1
  5775  000084                     ??___fladd:
  5776  000084                     __motor_move_steps@type:
  5777                           	opt stack 0
  5778  000084                     ___flmul@sign:
  5779                           	opt stack 0
  5780  000084                     ExternalFlash_SectorWrite@config:
  5781                           	opt stack 0
  5782  000084                     fat_restore_mbr_fbr@cntr:
  5783                           	opt stack 0
  5784  000084                     __add_item@item_string:
  5785                           	opt stack 0
  5786  000084                     ___fldiv@rem:
  5787                           	opt stack 0
  5788                           
  5789                           ; 4 bytes @ 0x24
  5790  000084                     	ds	1
  5791  000085                     __motor_move_steps@return_value_1:
  5792                           	opt stack 0
  5793  000085                     flash_partial_write@data:
  5794                           	opt stack 0
  5795  000085                     ___flmul@grs:
  5796                           	opt stack 0
  5797                           
  5798                           ; 4 bytes @ 0x25
  5799  000085                     	ds	1
  5800  000086                     __motor_move_steps@return_value_2:
  5801                           	opt stack 0
  5802  000086                     ExternalFlash_SectorWrite@sector_addr:
  5803                           	opt stack 0
  5804  000086                     __motor_decide_direction@distance_to_limit_ccw:
  5805                           	opt stack 0
  5806  000086                     __add_item@value:
  5807                           	opt stack 0
  5808                           
  5809                           ; 4 bytes @ 0x26
  5810  000086                     	ds	1
  5811  000087                     flash_partial_write@match:
  5812                           	opt stack 0
  5813  000087                     flash_sector_read@page:
  5814                           	opt stack 0
  5815  000087                     flash_partial_read@page:
  5816                           	opt stack 0
  5817  000087                     __motor_move_steps@distance_to_limit:
  5818                           	opt stack 0
  5819                           
  5820                           ; 4 bytes @ 0x27
  5821  000087                     	ds	1
  5822  000088                     ___fldiv@sign:
  5823                           	opt stack 0
  5824  000088                     __write_root@data:
  5825                           	opt stack 0
  5826                           
  5827                           ; 2 bytes @ 0x28
  5828  000088                     	ds	1
  5829  000089                     ___flmul@aexp:
  5830                           	opt stack 0
  5831  000089                     flash_sector_read@data:
  5832                           	opt stack 0
  5833  000089                     flash_partial_read@start:
  5834                           	opt stack 0
  5835  000089                     ___fldiv@new_exp:
  5836                           	opt stack 0
  5837                           
  5838                           ; 2 bytes @ 0x29
  5839  000089                     	ds	1
  5840  00008A                     ___flmul@bexp:
  5841                           	opt stack 0
  5842  00008A                     ExternalFlash_SectorWrite@buffer:
  5843                           	opt stack 0
  5844  00008A                     __write_root@sector:
  5845                           	opt stack 0
  5846  00008A                     __add_item@buffer:
  5847                           	opt stack 0
  5848  00008A                     __motor_decide_direction@distance_to_target_cw:
  5849                           	opt stack 0
  5850                           
  5851                           ; 4 bytes @ 0x2A
  5852  00008A                     	ds	1
  5853  00008B                     ??_fat_get_format_status:
  5854  00008B                     ?__get_available_cluster:
  5855                           	opt stack 0
  5856  00008B                     __motor_move_steps@direction:
  5857                           	opt stack 0
  5858  00008B                     flash_partial_read@length:
  5859                           	opt stack 0
  5860  00008B                     ExternalFlash_SectorRead@config:
  5861                           	opt stack 0
  5862  00008B                     __get_available_cluster@first_sector:
  5863                           	opt stack 0
  5864  00008B                     fat_find_file@name:
  5865                           	opt stack 0
  5866  00008B                     ___fldiv@grs:
  5867                           	opt stack 0
  5868  00008B                     ___flmul@prod:
  5869                           	opt stack 0
  5870                           
  5871                           ; 4 bytes @ 0x2B
  5872  00008B                     	ds	1
  5873  00008C                     ??__add_item:
  5874  00008C                     __display_padded_itoa@len:
  5875                           	opt stack 0
  5876  00008C                     ExternalFlash_SectorWrite@allowWriteToZero:
  5877                           	opt stack 0
  5878  00008C                     ___fladd@signs:
  5879                           	opt stack 0
  5880  00008C                     __write_root@offset:
  5881                           	opt stack 0
  5882  00008C                     motor_move_endless@speed:
  5883                           	opt stack 0
  5884  00008C                     motor_move_steps@distance:
  5885                           	opt stack 0
  5886                           
  5887                           ; 4 bytes @ 0x2C
  5888  00008C                     	ds	1
  5889  00008D                     __display_padded_itoa@pos:
  5890                           	opt stack 0
  5891  00008D                     ___fladd@aexp:
  5892                           	opt stack 0
  5893  00008D                     flash_partial_read@data:
  5894                           	opt stack 0
  5895  00008D                     ExternalFlash_SectorWrite@page:
  5896                           	opt stack 0
  5897  00008D                     __get_available_cluster@skip_sector:
  5898                           	opt stack 0
  5899  00008D                     fat_find_file@extension:
  5900                           	opt stack 0
  5901  00008D                     fat_get_format_status@cntr:
  5902                           	opt stack 0
  5903  00008D                     ExternalFlash_SectorRead@sector_addr:
  5904                           	opt stack 0
  5905                           
  5906                           ; 4 bytes @ 0x2D
  5907  00008D                     	ds	1
  5908  00008E                     __display_padded_itoa@padding:
  5909                           	opt stack 0
  5910  00008E                     __write_root@file_number:
  5911                           	opt stack 0
  5912  00008E                     motor_move_endless@direction:
  5913                           	opt stack 0
  5914  00008E                     __add_item@length:
  5915                           	opt stack 0
  5916  00008E                     ___fladd@bexp:
  5917                           	opt stack 0
  5918  00008E                     __motor_decide_direction@distance_to_target_ccw:
  5919                           	opt stack 0
  5920                           
  5921                           ; 4 bytes @ 0x2E
  5922  00008E                     	ds	1
  5923  00008F                     ??_MSDWriteHandler:
  5924  00008F                     ??_fat_find_file:
  5925  00008F                     ?__read_fat:
  5926                           	opt stack 0
  5927  00008F                     ___fladd@grs:
  5928                           	opt stack 0
  5929  00008F                     ___fldiv@bexp:
  5930                           	opt stack 0
  5931  00008F                     __display_signed_itoa@value:
  5932                           	opt stack 0
  5933  00008F                     __get_available_cluster@cluster:
  5934                           	opt stack 0
  5935  00008F                     __root_is_available@root_sector:
  5936                           	opt stack 0
  5937  00008F                     __read_fat@cluster:
  5938                           	opt stack 0
  5939  00008F                     fat_get_file_information@data:
  5940                           	opt stack 0
  5941  00008F                     ___flmul@temp:
  5942                           	opt stack 0
  5943                           
  5944                           ; 2 bytes @ 0x2F
  5945  00008F                     	ds	1
  5946  000090                     ___fldiv@aexp:
  5947                           	opt stack 0
  5948  000090                     motor_move_steps@speed:
  5949                           	opt stack 0
  5950                           
  5951                           ; 2 bytes @ 0x30
  5952  000090                     	ds	1
  5953  000091                     ??_adc_read_temperature:
  5954  000091                     ?__motor_get_speed_in_degrees:
  5955                           	opt stack 0
  5956  000091                     ?__steps_from_degrees:
  5957                           	opt stack 0
  5958  000091                     ?__motor_steps_from_degrees_int:
  5959                           	opt stack 0
  5960  000091                     ?__step_position_from_divide_position:
  5961                           	opt stack 0
  5962  000091                     fat_find_file@file_number:
  5963                           	opt stack 0
  5964  000091                     __display_signed_itoa@text:
  5965                           	opt stack 0
  5966  000091                     ExternalFlash_SectorRead@buffer:
  5967                           	opt stack 0
  5968  000091                     __get_available_cluster@offset:
  5969                           	opt stack 0
  5970  000091                     __root_is_available@offset:
  5971                           	opt stack 0
  5972  000091                     __read_fat@sector:
  5973                           	opt stack 0
  5974  000091                     __motor_steps_from_degrees_int@degrees:
  5975                           	opt stack 0
  5976  000091                     __motor_get_speed_in_degrees@speed_index:
  5977                           	opt stack 0
  5978  000091                     __step_position_from_divide_position@divide_position:
  5979                           	opt stack 0
  5980  000091                     motor_calculate_position_in_degrees@tmp:
  5981                           	opt stack 0
  5982  000091                     __steps_from_degrees@degrees:
  5983                           	opt stack 0
  5984                           
  5985                           ; 4 bytes @ 0x31
  5986  000091                     	ds	1
  5987  000092                     motor_move_steps@overshoot:
  5988                           	opt stack 0
  5989  000092                     fat_find_file@sector:
  5990                           	opt stack 0
  5991  000092                     fat_get_file_information@root_sector:
  5992                           	opt stack 0
  5993  000092                     motor_goto_steps@position:
  5994                           	opt stack 0
  5995                           
  5996                           ; 4 bytes @ 0x32
  5997  000092                     	ds	1
  5998  000093                     ??__motor_get_speed_in_degrees:
  5999  000093                     __root_is_available@file_number:
  6000                           	opt stack 0
  6001  000093                     motor_move_steps@direction:
  6002                           	opt stack 0
  6003  000093                     ExternalFlash_SectorRead@page:
  6004                           	opt stack 0
  6005  000093                     __get_available_cluster@sector:
  6006                           	opt stack 0
  6007  000093                     __read_fat@offset:
  6008                           	opt stack 0
  6009  000093                     adc_read_temperature@adc_result:
  6010                           	opt stack 0
  6011                           
  6012                           ; 2 bytes @ 0x33
  6013  000093                     	ds	1
  6014  000094                     __root_is_available@first_byte:
  6015                           	opt stack 0
  6016  000094                     motor_arc_move@direction:
  6017                           	opt stack 0
  6018  000094                     fat_find_file@offset:
  6019                           	opt stack 0
  6020  000094                     fat_get_file_information@offset:
  6021                           	opt stack 0
  6022  000094                     __parse_jump_steps@data:
  6023                           	opt stack 0
  6024  000094                     __parse_jump_steps_with_overshoot@data:
  6025                           	opt stack 0
  6026                           
  6027                           ; 2 bytes @ 0x34
  6028  000094                     	ds	1
  6029  000095                     ??_MSDReadHandler:
  6030  000095                     ?__make_cluster_chain:
  6031                           	opt stack 0
  6032  000095                     ?_fat_get_file_size:
  6033                           	opt stack 0
  6034  000095                     __get_available_root_entry@file_number:
  6035                           	opt stack 0
  6036  000095                     __make_cluster_chain@first_cluster:
  6037                           	opt stack 0
  6038  000095                     __read_fat@value:
  6039                           	opt stack 0
  6040  000095                     __motor_steps_from_degrees_int@temp:
  6041                           	opt stack 0
  6042  000095                     __motor_get_speed_in_degrees@speed:
  6043                           	opt stack 0
  6044  000095                     __step_position_from_divide_position@target_position:
  6045                           	opt stack 0
  6046  000095                     motor_arc_move@arc_in_steps:
  6047                           	opt stack 0
  6048  000095                     adc_read_temperature@temperature:
  6049                           	opt stack 0
  6050  000095                     __steps_from_degrees@temp:
  6051                           	opt stack 0
  6052                           
  6053                           ; 4 bytes @ 0x35
  6054  000095                     	ds	1
  6055  000096                     fat_get_file_information@file_number:
  6056                           	opt stack 0
  6057  000096                     __parse_jump_steps@out_buffer:
  6058                           	opt stack 0
  6059  000096                     __parse_jump_steps_with_overshoot@out_buffer:
  6060                           	opt stack 0
  6061  000096                     motor_goto_steps@speed:
  6062                           	opt stack 0
  6063                           
  6064                           ; 2 bytes @ 0x36
  6065  000096                     	ds	1
  6066  000097                     ?__find_nth_cluster:
  6067                           	opt stack 0
  6068  000097                     __find_nth_cluster@cluster:
  6069                           	opt stack 0
  6070  000097                     __make_cluster_chain@number_of_clusters:
  6071                           	opt stack 0
  6072                           
  6073                           ; 2 bytes @ 0x37
  6074  000097                     	ds	1
  6075  000098                     motor_goto_steps@overshoot:
  6076                           	opt stack 0
  6077  000098                     __parse_jump_steps@out_idx_ptr:
  6078                           	opt stack 0
  6079  000098                     __parse_jump_steps_with_overshoot@out_idx_ptr:
  6080                           	opt stack 0
  6081                           
  6082                           ; 2 bytes @ 0x38
  6083  000098                     	ds	1
  6084  000099                     ??_MSDProcessCommandMediaPresent:
  6085  000099                     ??__make_cluster_chain:
  6086  000099                     __find_nth_cluster@n:
  6087                           	opt stack 0
  6088  000099                     fat_get_file_size@sector:
  6089                           	opt stack 0
  6090  000099                     motor_move_degrees_int@distance:
  6091                           	opt stack 0
  6092  000099                     __parse_item@item_string:
  6093                           	opt stack 0
  6094  000099                     __motor_get_speed_in_degrees@lookup:
  6095                           	opt stack 0
  6096  000099                     motor_goto_steps@distance_in_steps:
  6097                           	opt stack 0
  6098                           
  6099                           ; 4 bytes @ 0x39
  6100  000099                     	ds	1
  6101  00009A                     ??__parse_jump_steps:
  6102  00009A                     ??__parse_jump_steps_with_overshoot:
  6103                           
  6104                           ; 1 bytes @ 0x3A
  6105  00009A                     	ds	1
  6106  00009B                     __parse_jump_steps@return_value:
  6107                           	opt stack 0
  6108  00009B                     __parse_jump_steps_with_overshoot@return_value:
  6109                           	opt stack 0
  6110  00009B                     _MSDProcessCommandMediaPresent$2606:
  6111                           	opt stack 0
  6112  00009B                     __find_nth_cluster@offset:
  6113                           	opt stack 0
  6114  00009B                     __make_cluster_chain@next_offset:
  6115                           	opt stack 0
  6116  00009B                     fat_get_file_size@offset:
  6117                           	opt stack 0
  6118  00009B                     motor_move_degrees_int@speed:
  6119                           	opt stack 0
  6120  00009B                     __parse_item@value_string:
  6121                           	opt stack 0
  6122                           
  6123                           ; 2 bytes @ 0x3B
  6124  00009B                     	ds	1
  6125  00009C                     __parse_jump_steps@number_of_steps:
  6126                           	opt stack 0
  6127  00009C                     __parse_jump_steps_with_overshoot@number_of_steps:
  6128                           	opt stack 0
  6129                           
  6130                           ; 4 bytes @ 0x3C
  6131  00009C                     	ds	1
  6132  00009D                     ?_motor_speed_from_index:
  6133                           	opt stack 0
  6134  00009D                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  6135                           	opt stack 0
  6136  00009D                     motor_move_degrees_int@overshoot:
  6137                           	opt stack 0
  6138  00009D                     motor_goto_steps@direction:
  6139                           	opt stack 0
  6140  00009D                     __find_nth_cluster@sector_in_buffer:
  6141                           	opt stack 0
  6142  00009D                     __make_cluster_chain@minimum_sector:
  6143                           	opt stack 0
  6144  00009D                     motor_speed_from_index@speed_index:
  6145                           	opt stack 0
  6146  00009D                     fat_get_file_size@file_size:
  6147                           	opt stack 0
  6148                           
  6149                           ; 4 bytes @ 0x3D
  6150  00009D                     	ds	1
  6151  00009E                     ??_motor_divide_jump:
  6152  00009E                     __parse_command_short@cmd:
  6153                           	opt stack 0
  6154  00009E                     MSDProcessCommandMediaPresent@sectorSize:
  6155                           	opt stack 0
  6156  00009E                     motor_divide_jump_to_nearest@nearest_position_in_steps:
  6157                           	opt stack 0
  6158  00009E                     motor_move_degrees_int@distance_in_steps:
  6159                           	opt stack 0
  6160                           
  6161                           ; 4 bytes @ 0x3E
  6162  00009E                     	ds	1
  6163  00009F                     __display_itoa@value:
  6164                           	opt stack 0
  6165  00009F                     __find_nth_cluster@sector:
  6166                           	opt stack 0
  6167  00009F                     __make_cluster_chain@different_sector_cluster:
  6168                           	opt stack 0
  6169  00009F                     motor_divide_jump@target_position_in_steps:
  6170                           	opt stack 0
  6171                           
  6172                           ; 4 bytes @ 0x3F
  6173  00009F                     	ds	1
  6174  0000A0                     __parse_command_long@data:
  6175                           	opt stack 0
  6176                           
  6177                           ; 2 bytes @ 0x40
  6178  0000A0                     	ds	1
  6179  0000A1                     __display_itoa@decimals:
  6180                           	opt stack 0
  6181  0000A1                     __make_cluster_chain@data_changed:
  6182                           	opt stack 0
  6183  0000A1                     fat_get_file_size@file_number:
  6184                           	opt stack 0
  6185  0000A1                     fat_read_from_file_fast@start_byte:
  6186                           	opt stack 0
  6187  0000A1                     fat_modify_file@start_byte:
  6188                           	opt stack 0
  6189                           
  6190                           ; 4 bytes @ 0x41
  6191  0000A1                     	ds	1
  6192  0000A2                     motor_move_degrees_int@direction:
  6193                           	opt stack 0
  6194  0000A2                     __display_itoa@text:
  6195                           	opt stack 0
  6196  0000A2                     __make_cluster_chain@remaining_clusters:
  6197                           	opt stack 0
  6198  0000A2                     __parse_command_long@out_buffer:
  6199                           	opt stack 0
  6200  0000A2                     motor_divide_jump_to_nearest@nearest_divide_position:
  6201                           	opt stack 0
  6202  0000A2                     MSDProcessCommandMediaPresent@capacity:
  6203                           	opt stack 0
  6204                           
  6205                           ; 4 bytes @ 0x42
  6206  0000A2                     	ds	1
  6207  0000A3                     motor_divide_jump@target_divide_position:
  6208                           	opt stack 0
  6209                           
  6210                           ; 2 bytes @ 0x43
  6211  0000A3                     	ds	1
  6212  0000A4                     ??__display_itoa:
  6213  0000A4                     __make_cluster_chain@sector:
  6214                           	opt stack 0
  6215  0000A4                     __parse_command_long@out_idx_ptr:
  6216                           	opt stack 0
  6217  0000A4                     motor_divide_jump_to_nearest@divide_position_float:
  6218                           	opt stack 0
  6219                           
  6220                           ; 4 bytes @ 0x44
  6221  0000A4                     	ds	1
  6222  0000A5                     fat_modify_file@length:
  6223                           	opt stack 0
  6224  0000A5                     fat_read_from_file_fast@length:
  6225                           	opt stack 0
  6226                           
  6227                           ; 4 bytes @ 0x45
  6228  0000A5                     	ds	1
  6229  0000A6                     MSDProcessCommandMediaPresent@i:
  6230                           	opt stack 0
  6231  0000A6                     __parse_command_long@length:
  6232                           	opt stack 0
  6233  0000A6                     __make_cluster_chain@sector_in_buffer:
  6234                           	opt stack 0
  6235                           
  6236                           ; 2 bytes @ 0x46
  6237  0000A6                     	ds	1
  6238  0000A7                     ??_MSDProcessCommand:
  6239  0000A7                     fat_modify_file@data:
  6240                           	opt stack 0
  6241  0000A7                     api_parse@inBuffer:
  6242                           	opt stack 0
  6243                           
  6244                           ; 2 bytes @ 0x47
  6245  0000A7                     	ds	1
  6246  0000A8                     ??_encoder_statemachine:
  6247  0000A8                     __make_cluster_chain@offset:
  6248                           	opt stack 0
  6249                           
  6250                           ; 2 bytes @ 0x48
  6251  0000A8                     	ds	1
  6252  0000A9                     ??_fat_modify_file:
  6253  0000A9                     api_parse@receivedDataLength:
  6254                           	opt stack 0
  6255  0000A9                     fat_read_from_file_fast@data:
  6256                           	opt stack 0
  6257                           
  6258                           ; 2 bytes @ 0x49
  6259  0000A9                     	ds	1
  6260  0000AA                     __make_cluster_chain@next_cluster:
  6261                           	opt stack 0
  6262  0000AA                     api_parse@outBuffer:
  6263                           	opt stack 0
  6264  0000AA                     __display_itoa@tmp:
  6265                           	opt stack 0
  6266                           
  6267                           ; 10 bytes @ 0x4A
  6268  0000AA                     	ds	1
  6269  0000AB                     fat_read_from_file_fast@cluster:
  6270                           	opt stack 0
  6271                           
  6272                           ; 2 bytes @ 0x4B
  6273  0000AB                     	ds	1
  6274  0000AC                     ??_api_parse:
  6275  0000AC                     ??_MSDTasks:
  6276  0000AC                     fat_create_file@name:
  6277                           	opt stack 0
  6278  0000AC                     fat_resize_file@new_file_size:
  6279                           	opt stack 0
  6280                           
  6281                           ; 4 bytes @ 0x4C
  6282  0000AC                     	ds	1
  6283  0000AD                     _MSDTasks$2588:
  6284                           	opt stack 0
  6285  0000AD                     fat_read_from_file_fast@cluster_number:
  6286                           	opt stack 0
  6287                           
  6288                           ; 2 bytes @ 0x4D
  6289  0000AD                     	ds	1
  6290  0000AE                     fat_create_file@extension:
  6291                           	opt stack 0
  6292  0000AE                     api_parse@out_idx_ptr:
  6293                           	opt stack 0
  6294                           
  6295                           ; 2 bytes @ 0x4E
  6296  0000AE                     	ds	1
  6297  0000AF                     ??_fat_read_from_file_fast:
  6298  0000AF                     _MSDTasks$2589:
  6299                           	opt stack 0
  6300                           
  6301                           ; 2 bytes @ 0x4F
  6302  0000AF                     	ds	1
  6303  0000B0                     ??_fat_resize_file:
  6304  0000B0                     api_parse@out_idx:
  6305                           	opt stack 0
  6306  0000B0                     fat_create_file@size:
  6307                           	opt stack 0
  6308                           
  6309                           ; 4 bytes @ 0x50
  6310  0000B0                     	ds	1
  6311  0000B1                     MSDTasks@i:
  6312                           	opt stack 0
  6313  0000B1                     api_parse@in_idx:
  6314                           	opt stack 0
  6315                           
  6316                           ; 1 bytes @ 0x51
  6317  0000B1                     	ds	1
  6318  0000B2                     
  6319                           ; 1 bytes @ 0x52
  6320  0000B2                     	ds	2
  6321  0000B4                     ??_fat_create_file:
  6322  0000B4                     __display_itoa@len:
  6323                           	opt stack 0
  6324  0000B4                     fat_resize_file@old_number_of_clusters:
  6325                           	opt stack 0
  6326                           
  6327                           ; 2 bytes @ 0x54
  6328  0000B4                     	ds	1
  6329  0000B5                     __display_itoa@missing:
  6330                           	opt stack 0
  6331  0000B5                     fat_modify_file@sector:
  6332                           	opt stack 0
  6333                           
  6334                           ; 2 bytes @ 0x55
  6335  0000B5                     	ds	1
  6336  0000B6                     __display_itoa@pos:
  6337                           	opt stack 0
  6338  0000B6                     fat_resize_file@new_number_of_clusters:
  6339                           	opt stack 0
  6340                           
  6341                           ; 2 bytes @ 0x56
  6342  0000B6                     	ds	1
  6343  0000B7                     fat_modify_file@file_number:
  6344                           	opt stack 0
  6345  0000B7                     __display_itoa_long@value:
  6346                           	opt stack 0
  6347                           
  6348                           ; 4 bytes @ 0x57
  6349  0000B7                     	ds	1
  6350  0000B8                     fat_modify_file@return_code:
  6351                           	opt stack 0
  6352  0000B8                     fat_create_file@number_of_clusters:
  6353                           	opt stack 0
  6354  0000B8                     fat_resize_file@first_cluster:
  6355                           	opt stack 0
  6356                           
  6357                           ; 2 bytes @ 0x58
  6358  0000B8                     	ds	1
  6359  0000B9                     fat_modify_file@cluster:
  6360                           	opt stack 0
  6361                           
  6362                           ; 2 bytes @ 0x59
  6363  0000B9                     	ds	1
  6364  0000BA                     fat_resize_file@file_number:
  6365                           	opt stack 0
  6366  0000BA                     fat_create_file@first_cluster:
  6367                           	opt stack 0
  6368                           
  6369                           ; 2 bytes @ 0x5A
  6370  0000BA                     	ds	1
  6371  0000BB                     __display_itoa_long@decimals:
  6372                           	opt stack 0
  6373  0000BB                     fat_read_from_file_fast@sector:
  6374                           	opt stack 0
  6375  0000BB                     fat_modify_file@offset:
  6376                           	opt stack 0
  6377  0000BB                     fat_resize_file@root:
  6378                           	opt stack 0
  6379                           
  6380                           ; 32 bytes @ 0x5B
  6381  0000BB                     	ds	1
  6382  0000BC                     fat_create_file@file_number:
  6383                           	opt stack 0
  6384  0000BC                     __display_itoa_long@text:
  6385                           	opt stack 0
  6386                           
  6387                           ; 2 bytes @ 0x5C
  6388  0000BC                     	ds	1
  6389  0000BD                     fat_read_from_file_fast@working_cluster:
  6390                           	opt stack 0
  6391  0000BD                     fat_modify_file@number_of_bytes:
  6392                           	opt stack 0
  6393  0000BD                     fat_create_file@root_entry:
  6394                           	opt stack 0
  6395                           
  6396                           ; 32 bytes @ 0x5D
  6397  0000BD                     	ds	1
  6398  0000BE                     ??__display_itoa_long:
  6399                           
  6400                           ; 1 bytes @ 0x5E
  6401  0000BE                     	ds	1
  6402  0000BF                     fat_read_from_file_fast@offset:
  6403                           	opt stack 0
  6404  0000BF                     fat_modify_file@position:
  6405                           	opt stack 0
  6406                           
  6407                           ; 4 bytes @ 0x5F
  6408  0000BF                     	ds	2
  6409  0000C1                     fat_read_from_file_fast@needed_cluster:
  6410                           	opt stack 0
  6411                           
  6412                           ; 2 bytes @ 0x61
  6413  0000C1                     	ds	1
  6414  0000C2                     __display_itoa_long@length:
  6415                           	opt stack 0
  6416                           
  6417                           ; 1 bytes @ 0x62
  6418  0000C2                     	ds	1
  6419  0000C3                     __display_itoa_long@short_value:
  6420                           	opt stack 0
  6421  0000C3                     fat_read_from_file_fast@read_length:
  6422                           	opt stack 0
  6423  0000C3                     fat_modify_file@root:
  6424                           	opt stack 0
  6425                           
  6426                           ; 32 bytes @ 0x63
  6427  0000C3                     	ds	2
  6428  0000C5                     __display_itoa_long@last_digit:
  6429                           	opt stack 0
  6430  0000C5                     fat_read_from_file_fast@position:
  6431                           	opt stack 0
  6432                           
  6433                           ; 4 bytes @ 0x65
  6434  0000C5                     	ds	1
  6435  0000C6                     ??_display_prepare:
  6436                           
  6437                           ; 1 bytes @ 0x66
  6438  0000C6                     	ds	2
  6439  0000C8                     display_prepare@temp:
  6440                           	opt stack 0
  6441                           
  6442                           ; 10 bytes @ 0x68
  6443  0000C8                     	ds	1
  6444  0000C9                     fat_read_from_file@start_byte:
  6445                           	opt stack 0
  6446                           
  6447                           ; 4 bytes @ 0x69
  6448  0000C9                     	ds	4
  6449  0000CD                     fat_read_from_file@length:
  6450                           	opt stack 0
  6451                           
  6452                           ; 4 bytes @ 0x6D
  6453  0000CD                     	ds	4
  6454  0000D1                     fat_read_from_file@data:
  6455                           	opt stack 0
  6456                           
  6457                           ; 2 bytes @ 0x71
  6458  0000D1                     	ds	1
  6459  0000D2                     display_prepare@space:
  6460                           	opt stack 0
  6461                           
  6462                           ; 1 bytes @ 0x72
  6463  0000D2                     	ds	1
  6464  0000D3                     ??_fat_read_from_file:
  6465  0000D3                     display_prepare@cntr:
  6466                           	opt stack 0
  6467                           
  6468                           ; 1 bytes @ 0x73
  6469  0000D3                     	ds	4
  6470  0000D7                     fat_read_from_file@file_number:
  6471                           	opt stack 0
  6472                           
  6473                           ; 1 bytes @ 0x77
  6474  0000D7                     	ds	1
  6475  0000D8                     fat_read_from_file@return_code:
  6476                           	opt stack 0
  6477                           
  6478                           ; 1 bytes @ 0x78
  6479  0000D8                     	ds	1
  6480  0000D9                     fat_read_from_file@cluster:
  6481                           	opt stack 0
  6482                           
  6483                           ; 2 bytes @ 0x79
  6484  0000D9                     	ds	2
  6485  0000DB                     fat_read_from_file@cluster_number:
  6486                           	opt stack 0
  6487                           
  6488                           ; 2 bytes @ 0x7B
  6489  0000DB                     	ds	2
  6490  0000DD                     fat_read_from_file@root:
  6491                           	opt stack 0
  6492                           
  6493                           ; 32 bytes @ 0x7D
  6494  0000DD                     	ds	6
  6495  0000E3                     ??_configFile_write:
  6496                           
  6497                           ; 1 bytes @ 0x83
  6498  0000E3                     	ds	1
  6499  0000E4                     configFile_write@file_number:
  6500                           	opt stack 0
  6501                           
  6502                           ; 1 bytes @ 0x84
  6503  0000E4                     	ds	1
  6504  0000E5                     configFile_write@file_size:
  6505                           	opt stack 0
  6506                           
  6507                           ; 4 bytes @ 0x85
  6508  0000E5                     	ds	24
  6509  0000FD                     main@startup_timer:
  6510                           	opt stack 0
  6511                           
  6512                           ; 1 bytes @ 0x9D
  6513  0000FD                     	ds	1
  6514                           tblptru	equ	0xFF8
  6515                           tblptrh	equ	0xFF7
  6516                           tblptrl	equ	0xFF6
  6517                           tablat	equ	0xFF5
  6518                           postinc0	equ	0xFEE
  6519                           wreg	equ	0xFE8
  6520                           postdec1	equ	0xFE5
  6521                           fsr1h	equ	0xFE2
  6522                           fsr1l	equ	0xFE1
  6523                           
  6524                           	psect	cstackCOMRAM
  6525  000001                     __pcstackCOMRAM:
  6526                           	opt stack 0
  6527  000001                     ??_USBStdGetDscHandler:
  6528  000001                     ??_USBStdGetStatusHandler:
  6529  000001                     ??i2__i2c_wait_idle:
  6530  000001                     ?i2_USBTransferOnePacket:
  6531                           	opt stack 0
  6532  000001                     ?i2_ExternalFlash_MediaInitialize:
  6533                           	opt stack 0
  6534  000001                     USBConfigureEndpoint@direction:
  6535                           	opt stack 0
  6536  000001                     USBCtrlTrfTxService@byteToSend:
  6537                           	opt stack 0
  6538  000001                     USBCtrlTrfRxService@i:
  6539                           	opt stack 0
  6540  000001                     i2USBTransferOnePacket@dir:
  6541                           	opt stack 0
  6542  000001                     i2USBStallEndpoint@dir:
  6543                           	opt stack 0
  6544  000001                     i2__i2c_send@dat:
  6545                           	opt stack 0
  6546  000001                     i2SYSTEM_Initialize@pll_startup_counter:
  6547                           	opt stack 0
  6548  000001                     i2ExternalFlash_MediaInitialize@config:
  6549                           	opt stack 0
  6550  000001                     i2ExternalFlash_MediaDetect@config:
  6551                           	opt stack 0
  6552  000001                     i2memcpy@d1:
  6553                           	opt stack 0
  6554  000001                     i2memset@p1:
  6555                           	opt stack 0
  6556                           
  6557                           ; 2 bytes @ 0x0
  6558  000001                     	ds	1
  6559  000002                     ??_USBConfigureEndpoint:
  6560  000002                     ??i2_USBStallEndpoint:
  6561  000002                     USBCtrlTrfRxService@byteToRead:
  6562                           	opt stack 0
  6563  000002                     USBCtrlTrfInHandler@lastDTS:
  6564                           	opt stack 0
  6565  000002                     USBStdGetStatusHandler@p:
  6566                           	opt stack 0
  6567  000002                     i2USBTransferOnePacket@data:
  6568                           	opt stack 0
  6569                           
  6570                           ; 2 bytes @ 0x1
  6571  000002                     	ds	1
  6572  000003                     i2SYSTEM_Initialize@pll_startup_counter_3143:
  6573                           	opt stack 0
  6574  000003                     i2memcpy@s1:
  6575                           	opt stack 0
  6576  000003                     i2memset@c:
  6577                           	opt stack 0
  6578                           
  6579                           ; 2 bytes @ 0x2
  6580  000003                     	ds	1
  6581  000004                     i2USBTransferOnePacket@len:
  6582                           	opt stack 0
  6583                           
  6584                           ; 1 bytes @ 0x3
  6585  000004                     	ds	1
  6586  000005                     ??i2_USBTransferOnePacket:
  6587  000005                     i2SYSTEM_Initialize@state:
  6588                           	opt stack 0
  6589  000005                     i2memcpy@n:
  6590                           	opt stack 0
  6591  000005                     i2memset@n:
  6592                           	opt stack 0
  6593                           
  6594                           ; 2 bytes @ 0x4
  6595  000005                     	ds	1
  6596  000006                     USBConfigureEndpoint@EPNum:
  6597                           	opt stack 0
  6598  000006                     i2USBStallEndpoint@ep:
  6599                           	opt stack 0
  6600  000006                     i2__i2c_eeprom_busy@busy:
  6601                           	opt stack 0
  6602  000006                     i2__i2c_write@data:
  6603                           	opt stack 0
  6604                           
  6605                           ; 2 bytes @ 0x5
  6606  000006                     	ds	1
  6607  000007                     USBConfigureEndpoint@handle:
  6608                           	opt stack 0
  6609  000007                     i2USBStallEndpoint@p:
  6610                           	opt stack 0
  6611  000007                     i2memcpy@d:
  6612                           	opt stack 0
  6613  000007                     i2memset@p:
  6614                           	opt stack 0
  6615                           
  6616                           ; 2 bytes @ 0x6
  6617  000007                     	ds	1
  6618  000008                     i2__i2c_write@length:
  6619                           	opt stack 0
  6620                           
  6621                           ; 1 bytes @ 0x7
  6622  000008                     	ds	1
  6623  000009                     USBEnableEndpoint@options:
  6624                           	opt stack 0
  6625  000009                     i2USBDeviceInit@i:
  6626                           	opt stack 0
  6627  000009                     i2USBTransferOnePacket@ep:
  6628                           	opt stack 0
  6629  000009                     i2__i2c_write@slave_address:
  6630                           	opt stack 0
  6631  000009                     i2memcpy@s:
  6632                           	opt stack 0
  6633                           
  6634                           ; 2 bytes @ 0x8
  6635  000009                     	ds	1
  6636  00000A                     i2__i2c_write@cntr:
  6637                           	opt stack 0
  6638  00000A                     USBEnableEndpoint@p:
  6639                           	opt stack 0
  6640  00000A                     i2USBTransferOnePacket@handle:
  6641                           	opt stack 0
  6642                           
  6643                           ; 2 bytes @ 0x9
  6644  00000A                     	ds	1
  6645  00000B                     i2memcpy@tmp:
  6646                           	opt stack 0
  6647  00000B                     i2c_eeprom_write@address:
  6648                           	opt stack 0
  6649                           
  6650                           ; 2 bytes @ 0xA
  6651  00000B                     	ds	1
  6652  00000C                     ??_USBMSDInit:
  6653  00000C                     USBEnableEndpoint@ep:
  6654                           	opt stack 0
  6655  00000C                     _USBCheckMSDRequest$2534:
  6656                           	opt stack 0
  6657  00000C                     MSDTransferTerminated@handle:
  6658                           	opt stack 0
  6659                           
  6660                           ; 2 bytes @ 0xB
  6661  00000C                     	ds	1
  6662  00000D                     i2c_eeprom_write@data:
  6663                           	opt stack 0
  6664                           
  6665                           ; 2 bytes @ 0xC
  6666  00000D                     	ds	1
  6667  00000E                     _USBCheckMSDRequest$2535:
  6668                           	opt stack 0
  6669  00000E                     _MSDTransferTerminated$2623:
  6670                           	opt stack 0
  6671                           
  6672                           ; 2 bytes @ 0xD
  6673  00000E                     	ds	1
  6674  00000F                     i2c_eeprom_write@length:
  6675                           	opt stack 0
  6676                           
  6677                           ; 1 bytes @ 0xE
  6678  00000F                     	ds	1
  6679  000010                     ??_i2c_eeprom_write:
  6680  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  6681                           	opt stack 0
  6682                           
  6683                           ; 2 bytes @ 0xF
  6684  000010                     	ds	2
  6685  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  6686                           	opt stack 0
  6687                           
  6688                           ; 2 bytes @ 0x11
  6689  000012                     	ds	1
  6690  000013                     i2c_eeprom_write@dat:
  6691                           	opt stack 0
  6692                           
  6693                           ; 17 bytes @ 0x12
  6694  000013                     	ds	1
  6695  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  6696                           	opt stack 0
  6697                           
  6698                           ; 2 bytes @ 0x13
  6699  000014                     	ds	2
  6700  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  6701                           
  6702                           ; 1 bytes @ 0x15
  6703  000016                     	ds	2
  6704  000018                     ??_USBStdFeatureReqHandler:
  6705  000018                     USBStdSetCfgHandler@i:
  6706                           	opt stack 0
  6707                           
  6708                           ; 1 bytes @ 0x17
  6709  000018                     	ds	1
  6710  000019                     USBStdFeatureReqHandler@pUEP:
  6711                           	opt stack 0
  6712                           
  6713                           ; 2 bytes @ 0x18
  6714  000019                     	ds	2
  6715  00001B                     USBStdFeatureReqHandler@current_ep_data:
  6716                           	opt stack 0
  6717                           
  6718                           ; 1 bytes @ 0x1A
  6719  00001B                     	ds	1
  6720  00001C                     USBStdFeatureReqHandler@p:
  6721                           	opt stack 0
  6722                           
  6723                           ; 2 bytes @ 0x1B
  6724  00001C                     	ds	2
  6725  00001E                     ??_USBCtrlEPService:
  6726  00001E                     
  6727                           ; 1 bytes @ 0x1D
  6728  00001E                     	ds	1
  6729  00001F                     USBDeviceTasks@i:
  6730                           	opt stack 0
  6731                           
  6732                           ; 1 bytes @ 0x1E
  6733  00001F                     	ds	5
  6734  000024                     i2c_eeprom_write@slave_address:
  6735                           	opt stack 0
  6736                           
  6737                           ; 1 bytes @ 0x23
  6738  000024                     	ds	1
  6739  000025                     i2c_eeprom_write@cntr:
  6740                           	opt stack 0
  6741                           
  6742                           ; 1 bytes @ 0x24
  6743  000025                     	ds	1
  6744  000026                     ??_motor_isr:
  6745  000026                     
  6746                           ; 1 bytes @ 0x25
  6747  000026                     	ds	16
  6748  000036                     motor_isr@steps_until_standstill:
  6749                           	opt stack 0
  6750                           
  6751                           ; 2 bytes @ 0x35
  6752  000036                     	ds	2
  6753  000038                     motor_isr@steps_until_standstill_if_accelerate:
  6754                           	opt stack 0
  6755                           
  6756                           ; 2 bytes @ 0x37
  6757  000038                     	ds	2
  6758  00003A                     motor_isr@steps_remaining:
  6759                           	opt stack 0
  6760                           
  6761                           ; 4 bytes @ 0x39
  6762  00003A                     	ds	4
  6763  00003E                     ??_SYS_InterruptHigh:
  6764                           
  6765                           ; 1 bytes @ 0x3D
  6766  00003E                     	ds	14
  6767                           tblptru	equ	0xFF8
  6768                           tblptrh	equ	0xFF7
  6769                           tblptrl	equ	0xFF6
  6770                           tablat	equ	0xFF5
  6771                           postinc0	equ	0xFEE
  6772                           wreg	equ	0xFE8
  6773                           postdec1	equ	0xFE5
  6774                           fsr1h	equ	0xFE2
  6775                           fsr1l	equ	0xFE1
  6776                           
  6777 ;;
  6778 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  6779 ;;
  6780 ;; *************** function _main *****************
  6781 ;; Defined at:
  6782 ;;		line 49 in file "main.c"
  6783 ;; Parameters:    Size  Location     Type
  6784 ;;		None
  6785 ;; Auto vars:     Size  Location     Type
  6786 ;;  startup_time    1  157[BANK0 ] unsigned char 
  6787 ;; Return value:  Size  Location     Type
  6788 ;;                  1    wreg      void 
  6789 ;; Registers used:
  6790 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  6791 ;; Tracked objects:
  6792 ;;		On entry : 0/0
  6793 ;;		On exit  : 0/0
  6794 ;;		Unchanged: 0/0
  6795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6797 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6799 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6800 ;;Total ram usage:        1 bytes
  6801 ;; Hardware stack levels required when called:   22
  6802 ;; This function calls:
  6803 ;;		_APP_DeviceCustomHIDTasks
  6804 ;;		_APP_DeviceMSDTasks
  6805 ;;		_SYSTEM_Initialize
  6806 ;;		_USBDeviceAttach
  6807 ;;		_USBDeviceInit
  6808 ;;		_adc_read_temperature
  6809 ;;		_display_prepare
  6810 ;;		_display_update
  6811 ;;		_encoder_statemachine
  6812 ;;		_motor_calculate_position_in_degrees
  6813 ;;		_motor_process_cue
  6814 ;;		_system_init
  6815 ;; This function is called by:
  6816 ;;		Startup code after reset
  6817 ;; This function uses a non-reentrant model
  6818 ;;
  6819                           
  6820                           	psect	text0
  6821  013900                     __ptext0:
  6822                           	opt stack 0
  6823  013900                     _main:
  6824                           	opt stack 9
  6825                           
  6826                           ;main.c: 51: uint8_t startup_timer;;main.c: 55: system_init();
  6827                           
  6828                           ;incstack = 0
  6829  013900  EC3C  F082         	call	_system_init	;wreg free
  6830                           
  6831                           ;main.c: 57: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  6832  013904  0E00               	movlw	0
  6833  013906  EC09  F0A5         	call	_SYSTEM_Initialize
  6834                           
  6835                           ;main.c: 59: USBDeviceInit();
  6836  01390A  EC6E  F07E         	call	_USBDeviceInit	;wreg free
  6837                           
  6838                           ;main.c: 60: USBDeviceAttach();
  6839  01390E  EC96  F0AB         	call	_USBDeviceAttach	;wreg free
  6840                           
  6841                           ;main.c: 63: startup_timer = 150;
  6842  013912  0E96               	movlw	150
  6843  013914  0100               	movlb	0	; () banked
  6844  013916  6FFD               	movwf	main@startup_timer& (0+255),b
  6845                           
  6846                           ;main.c: 64: while(startup_timer)
  6847  013918  D00D               	goto	l863
  6848  01391A                     
  6849                           ; BSR set to: 0
  6850                           ;main.c: 65: {;main.c: 67: APP_DeviceMSDTasks();
  6851                           
  6852                           ; BSR set to: 0
  6853  01391A  EC63  F0AE         	call	_APP_DeviceMSDTasks	;wreg free
  6854                           
  6855                           ;main.c: 69: if(!os.done)
  6856  01391E  0101               	movlb	1	; () banked
  6857  013920  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  6858  013922  A4D8               	btfss	status,2,c
  6859  013924  D007               	goto	l863
  6860                           
  6861                           ; BSR set to: 1
  6862                           ;main.c: 70: {;main.c: 72: APP_DeviceCustomHIDTasks();
  6863  013926  EC0A  F09A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6864                           
  6865                           ;main.c: 74: --startup_timer;
  6866  01392A  0100               	movlb	0	; () banked
  6867  01392C  07FD               	decf	main@startup_timer& (0+255),f,b
  6868                           
  6869                           ; BSR set to: 0
  6870                           ;main.c: 75: os.done = 1;
  6871  01392E  0E01               	movlw	1
  6872  013930  0101               	movlb	1	; () banked
  6873  013932  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  6874  013934                     l863:
  6875                           
  6876                           ; BSR set to: 1
  6877                           
  6878                           ; BSR set to: 1
  6879  013934  0100               	movlb	0	; () banked
  6880  013936  51FD               	movf	main@startup_timer& (0+255),w,b
  6881  013938  A4D8               	btfss	status,2,c
  6882  01393A  D7EF               	goto	l862
  6883  01393C                     u19270:
  6884                           
  6885                           ;main.c: 81: {;main.c: 83: APP_DeviceMSDTasks();
  6886                           
  6887                           ; BSR set to: 0
  6888                           
  6889                           ;main.c: 76: };main.c: 78: };main.c: 80: while(1)
  6890                           
  6891                           ; BSR set to: 0
  6892  01393C  EC63  F0AE         	call	_APP_DeviceMSDTasks	;wreg free
  6893                           
  6894                           ;main.c: 85: if(!os.done)
  6895  013940  0101               	movlb	1	; () banked
  6896  013942  5166               	movf	(_os+2)& (0+255),w,b	;volatile
  6897  013944  A4D8               	btfss	status,2,c
  6898  013946  D7FA               	goto	u19270
  6899                           
  6900                           ; BSR set to: 1
  6901  013948  0004               	clrwdt		;# 
  6902                           
  6903                           ;main.c: 91: APP_DeviceCustomHIDTasks();
  6904  01394A  EC0A  F09A         	call	_APP_DeviceCustomHIDTasks	;wreg free
  6905                           
  6906                           ;main.c: 94: encoder_statemachine();
  6907  01394E  ECCA  F057         	call	_encoder_statemachine	;wreg free
  6908                           
  6909                           ;main.c: 97: motor_process_cue();
  6910  013952  EC01  F09B         	call	_motor_process_cue	;wreg free
  6911                           
  6912                           ;main.c: 100: adc_read_temperature();
  6913  013956  ECE8  F074         	call	_adc_read_temperature	;wreg free
  6914                           
  6915                           ;main.c: 103: switch(os.timeSlot)
  6916  01395A  D008               	goto	l867
  6917  01395C                     
  6918                           ;main.c: 114: motor_calculate_position_in_degrees();
  6919  01395C  EC28  F091         	call	_motor_calculate_position_in_degrees	;wreg free
  6920  013960                     
  6921                           ;main.c: 117: display_prepare();
  6922  013960  EC98  F051         	call	_display_prepare	;wreg free
  6923                           
  6924                           ;main.c: 118: break;
  6925  013964  D014               	goto	l869
  6926  013966                     
  6927                           ;main.c: 121: display_update();
  6928  013966  ECDB  F0AA         	call	_display_update	;wreg free
  6929                           
  6930                           ;main.c: 123: }
  6931                           
  6932                           ;main.c: 122: break;
  6933  01396A  D011               	goto	l869
  6934  01396C                     l867:
  6935  01396C  0101               	movlb	1	; () banked
  6936  01396E  5165               	movf	(_os+1)& (0+255),w,b	;volatile
  6937                           
  6938                           ; Switch size 1, requested type "space"
  6939                           ; Number of cases is 5, Range of values is 0 to 7
  6940                           ; switch strategies available:
  6941                           ; Name         Instructions Cycles
  6942                           ; simple_byte           16     9 (average)
  6943                           ;	Chosen strategy is simple_byte
  6944  013970  0A00               	xorlw	0	; case 0
  6945  013972  B4D8               	btfsc	status,2,c
  6946  013974  D00C               	goto	l869
  6947  013976  0A01               	xorlw	1	; case 1
  6948  013978  B4D8               	btfsc	status,2,c
  6949  01397A  D009               	goto	l869
  6950  01397C  0A04               	xorlw	4	; case 5
  6951  01397E  B4D8               	btfsc	status,2,c
  6952  013980  D7ED               	goto	l871
  6953  013982  0A03               	xorlw	3	; case 6
  6954  013984  B4D8               	btfsc	status,2,c
  6955  013986  D7EC               	goto	l872
  6956  013988  0A01               	xorlw	1	; case 7
  6957  01398A  B4D8               	btfsc	status,2,c
  6958  01398C  D7EC               	goto	l873
  6959  01398E                     l869:
  6960                           
  6961                           ;main.c: 125: os.done = 1;
  6962                           
  6963                           ; BSR set to: 1
  6964  01398E  0E01               	movlw	1
  6965  013990  0101               	movlb	1	; () banked
  6966  013992  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  6967                           
  6968                           ; BSR set to: 1
  6969                           
  6970                           ; BSR set to: 1
  6971  013994  D7D3               	goto	u19270
  6972  013996                     __end_of_main:
  6973                           	opt stack 0
  6974                           tblptru	equ	0xFF8
  6975                           tblptrh	equ	0xFF7
  6976                           tblptrl	equ	0xFF6
  6977                           tablat	equ	0xFF5
  6978                           postinc0	equ	0xFEE
  6979                           wreg	equ	0xFE8
  6980                           postdec1	equ	0xFE5
  6981                           fsr1h	equ	0xFE2
  6982                           fsr1l	equ	0xFE1
  6983                           status	equ	0xFD8
  6984                           
  6985 ;; *************** function _system_init *****************
  6986 ;; Defined at:
  6987 ;;		line 177 in file "os.c"
  6988 ;; Parameters:    Size  Location     Type
  6989 ;;		None
  6990 ;; Auto vars:     Size  Location     Type
  6991 ;;		None
  6992 ;; Return value:  Size  Location     Type
  6993 ;;                  1    wreg      void 
  6994 ;; Registers used:
  6995 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6996 ;; Tracked objects:
  6997 ;;		On entry : 0/0
  6998 ;;		On exit  : 0/0
  6999 ;;		Unchanged: 0/0
  7000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7005 ;;Total ram usage:        0 bytes
  7006 ;; Hardware stack levels used:    1
  7007 ;; Hardware stack levels required when called:   20
  7008 ;; This function calls:
  7009 ;;		__backlight_init
  7010 ;;		__system_pin_setup
  7011 ;;		__system_timer0_init
  7012 ;;		_adc_init
  7013 ;;		_configFile_read
  7014 ;;		_configFile_readDefault
  7015 ;;		_configFile_write
  7016 ;;		_display_init
  7017 ;;		_display_update
  7018 ;;		_encoder_init
  7019 ;;		_fat_init
  7020 ;;		_flash_init
  7021 ;;		_i2c_eeprom_recover_position
  7022 ;;		_i2c_init
  7023 ;;		_motor_calculate_position_in_degrees
  7024 ;;		_motor_init
  7025 ;; This function is called by:
  7026 ;;		_main
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           	psect	text1
  7031  010478                     __ptext1:
  7032                           	opt stack 0
  7033  010478                     _system_init:
  7034                           	opt stack 10
  7035                           
  7036                           ;os.c: 180: _system_pin_setup();
  7037                           
  7038                           ; BSR set to: 1
  7039                           ;incstack = 0
  7040  010478  ECC4  F0A2         	call	__system_pin_setup	;wreg free
  7041                           
  7042                           ;os.c: 183: adc_init();
  7043  01047C  ECBC  F0A5         	call	_adc_init	;wreg free
  7044                           
  7045                           ;os.c: 186: flash_init();
  7046  010480  EC84  F0AE         	call	_flash_init	;wreg free
  7047                           
  7048                           ;os.c: 189: fat_init();
  7049  010484  EC6C  F0AE         	call	_fat_init	;wreg free
  7050                           
  7051                           ;os.c: 192: encoder_init();
  7052  010488  EC4C  F0AD         	call	_encoder_init	;wreg free
  7053                           
  7054                           ;os.c: 195: i2c_init();
  7055  01048C  ECE5  F0AD         	call	_i2c_init	;wreg free
  7056                           
  7057                           ;os.c: 198: display_init();
  7058  010490  EC85  F0AA         	call	_display_init	;wreg free
  7059                           
  7060                           ;os.c: 199: display_update();
  7061  010494  ECDB  F0AA         	call	_display_update	;wreg free
  7062                           
  7063                           ;os.c: 200: _backlight_init();
  7064  010498  ECDB  F0AE         	call	__backlight_init	;wreg free
  7065                           
  7066                           ;os.c: 203: motor_init();
  7067  01049C  ECD6  F0AD         	call	_motor_init	;wreg free
  7068                           
  7069                           ;os.c: 206: configFile_readDefault();
  7070  0104A0  EC40  F0A1         	call	_configFile_readDefault	;wreg free
  7071                           
  7072                           ;os.c: 209: configFile_read();
  7073  0104A4  EC5E  F079         	call	_configFile_read	;wreg free
  7074                           
  7075                           ;os.c: 212: configFile_write();
  7076  0104A8  EC9B  F062         	call	_configFile_write	;wreg free
  7077                           
  7078                           ;os.c: 215: os.subTimeSlot = 0;
  7079  0104AC  0E00               	movlw	0
  7080  0104AE  0101               	movlb	1	; () banked
  7081  0104B0  6F64               	movwf	_os& (0+255),b	;volatile
  7082                           
  7083                           ; BSR set to: 1
  7084                           ;os.c: 216: os.timeSlot = 0;
  7085  0104B2  0E00               	movlw	0
  7086  0104B4  6F65               	movwf	(_os+1)& (0+255),b	;volatile
  7087                           
  7088                           ; BSR set to: 1
  7089                           ;os.c: 217: os.done = 0;
  7090  0104B6  0E00               	movlw	0
  7091  0104B8  6F66               	movwf	(_os+2)& (0+255),b	;volatile
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;os.c: 218: os.encoder1Count = 0;
  7095  0104BA  0E00               	movlw	0
  7096  0104BC  6F67               	movwf	(_os+3)& (0+255),b	;volatile
  7097                           
  7098                           ; BSR set to: 1
  7099                           ;os.c: 219: os.button1 = 0;
  7100  0104BE  0E00               	movlw	0
  7101  0104C0  6F68               	movwf	(_os+4)& (0+255),b	;volatile
  7102                           
  7103                           ; BSR set to: 1
  7104                           ;os.c: 220: os.encoder2Count = 0;
  7105  0104C2  0E00               	movlw	0
  7106  0104C4  6F69               	movwf	(_os+5)& (0+255),b	;volatile
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;os.c: 221: os.button2 = 0;
  7110  0104C6  0E00               	movlw	0
  7111  0104C8  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
  7112                           
  7113                           ; BSR set to: 1
  7114                           ;os.c: 222: os.current_position_in_steps = 0;
  7115  0104CA  0E00               	movlw	0
  7116  0104CC  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7117  0104CE  0E00               	movlw	0
  7118  0104D0  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7119  0104D2  0E00               	movlw	0
  7120  0104D4  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7121  0104D6  0E00               	movlw	0
  7122  0104D8  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7123                           
  7124                           ; BSR set to: 1
  7125                           ;os.c: 223: os.absolute_position = 0;
  7126  0104DA  0E00               	movlw	0
  7127  0104DC  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7128  0104DE  0E00               	movlw	0
  7129  0104E0  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7130                           
  7131                           ; BSR set to: 1
  7132                           ;os.c: 224: os.current_position_in_degrees = 0;
  7133  0104E2  0E00               	movlw	0
  7134  0104E4  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7135  0104E6  0E00               	movlw	0
  7136  0104E8  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7137                           
  7138                           ; BSR set to: 1
  7139                           ;os.c: 225: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  7140  0104EA  0E01               	movlw	1
  7141  0104EC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
  7142                           
  7143                           ; BSR set to: 1
  7144                           ;os.c: 226: os.busy = 0;
  7145  0104EE  0E00               	movlw	0
  7146  0104F0  6F74               	movwf	(_os+16)& (0+255),b	;volatile
  7147                           
  7148                           ; BSR set to: 1
  7149                           ;os.c: 227: os.last_approach_direction = MOTOR_DIRECTION_CW;
  7150  0104F2  0E01               	movlw	1
  7151  0104F4  6F75               	movwf	(_os+17)& (0+255),b	;volatile
  7152                           
  7153                           ; BSR set to: 1
  7154                           ;os.c: 228: os.setup_step_size = 0;
  7155  0104F6  0E00               	movlw	0
  7156  0104F8  6F77               	movwf	(_os+19)& (0+255),b	;volatile
  7157  0104FA  0E00               	movlw	0
  7158  0104FC  6F76               	movwf	(_os+18)& (0+255),b	;volatile
  7159                           
  7160                           ; BSR set to: 1
  7161                           ;os.c: 229: os.approach_direction = MOTOR_DIRECTION_CW;
  7162  0104FE  0E01               	movlw	1
  7163  010500  6F78               	movwf	(_os+20)& (0+255),b	;volatile
  7164                           
  7165                           ; BSR set to: 1
  7166                           ;os.c: 230: os.division = 36;
  7167  010502  0E00               	movlw	0
  7168  010504  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
  7169  010506  0E24               	movlw	36
  7170  010508  6F79               	movwf	(_os+21)& (0+255),b	;volatile
  7171                           
  7172                           ; BSR set to: 1
  7173                           ;os.c: 231: os.divide_step_size = 10;
  7174  01050A  0E0A               	movlw	10
  7175  01050C  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
  7176                           
  7177                           ; BSR set to: 1
  7178                           ;os.c: 232: os.divide_position = 0;
  7179  01050E  0E00               	movlw	0
  7180  010510  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
  7181  010512  0E00               	movlw	0
  7182  010514  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
  7183                           
  7184                           ; BSR set to: 1
  7185                           ;os.c: 233: os.divide_jump_size = 1;
  7186  010516  0E00               	movlw	0
  7187  010518  6F7F               	movwf	(_os+27)& (0+255),b	;volatile
  7188  01051A  0E01               	movlw	1
  7189  01051C  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
  7190                           
  7191                           ; BSR set to: 1
  7192                           ;os.c: 234: os.arc_step_size = 1000;
  7193  01051E  0E03               	movlw	3
  7194  010520  6F81               	movwf	(_os+29)& (0+255),b	;volatile
  7195  010522  0EE8               	movlw	232
  7196  010524  6F80               	movwf	(_os+28)& (0+255),b	;volatile
  7197                           
  7198                           ; BSR set to: 1
  7199                           ;os.c: 235: os.arc_size = 1000;
  7200  010526  0EE8               	movlw	232
  7201  010528  6F82               	movwf	(_os+30)& (0+255),b	;volatile
  7202  01052A  0E03               	movlw	3
  7203  01052C  6F83               	movwf	(_os+31)& (0+255),b	;volatile
  7204  01052E  0E00               	movlw	0
  7205  010530  6F84               	movwf	(_os+32)& (0+255),b	;volatile
  7206  010532  0E00               	movlw	0
  7207  010534  6F85               	movwf	(_os+33)& (0+255),b	;volatile
  7208                           
  7209                           ; BSR set to: 1
  7210                           ;os.c: 236: os.arc_speed = config.initial_speed_arc;
  7211  010536  C1A3  F186         	movff	_config+13,_os+34	;volatile
  7212  01053A  C1A4  F187         	movff	_config+14,_os+35	;volatile
  7213                           
  7214                           ; BSR set to: 1
  7215                           ;os.c: 237: os.arc_direction = MOTOR_DIRECTION_CW;
  7216  01053E  0E01               	movlw	1
  7217  010540  6F88               	movwf	(_os+36)& (0+255),b	;volatile
  7218                           
  7219                           ; BSR set to: 1
  7220                           ;os.c: 238: os.manual_speed = config.initial_speed_manual;
  7221  010542  C1A7  F189         	movff	_config+17,_os+37	;volatile
  7222  010546  C1A8  F18A         	movff	_config+18,_os+38	;volatile
  7223                           
  7224                           ; BSR set to: 1
  7225                           ;os.c: 239: os.manual_direction = MOTOR_DIRECTION_CW;
  7226  01054A  0E01               	movlw	1
  7227  01054C  6F8B               	movwf	(_os+39)& (0+255),b	;volatile
  7228                           
  7229                           ; BSR set to: 1
  7230                           ;os.c: 240: os.beep_count = 0;
  7231  01054E  0E00               	movlw	0
  7232  010550  6F8C               	movwf	(_os+40)& (0+255),b	;volatile
  7233                           
  7234                           ; BSR set to: 1
  7235                           ;os.c: 241: os.temperature[0] = 0;
  7236  010552  0E00               	movlw	0
  7237  010554  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
  7238  010556  0E00               	movlw	0
  7239  010558  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
  7240                           
  7241                           ; BSR set to: 1
  7242                           ;os.c: 242: os.temperature[1] = 0;
  7243  01055A  0E00               	movlw	0
  7244  01055C  6F90               	movwf	(_os+44)& (0+255),b	;volatile
  7245  01055E  0E00               	movlw	0
  7246  010560  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
  7247                           
  7248                           ; BSR set to: 1
  7249                           ;os.c: 243: os.external_temperature_adc_sum = 0;
  7250  010562  0E00               	movlw	0
  7251  010564  6F92               	movwf	(_os+46)& (0+255),b	;volatile
  7252  010566  0E00               	movlw	0
  7253  010568  6F91               	movwf	(_os+45)& (0+255),b	;volatile
  7254                           
  7255                           ; BSR set to: 1
  7256                           ;os.c: 244: os.external_temperature_count = 0;
  7257  01056A  0E00               	movlw	0
  7258  01056C  6F93               	movwf	(_os+47)& (0+255),b	;volatile
  7259                           
  7260                           ; BSR set to: 1
  7261                           ;os.c: 245: os.fan_on = 0;
  7262  01056E  0E00               	movlw	0
  7263  010570  6F94               	movwf	(_os+48)& (0+255),b	;volatile
  7264                           
  7265                           ; BSR set to: 1
  7266                           ;os.c: 246: os.brake_on = 0;
  7267  010572  0E00               	movlw	0
  7268  010574  6F95               	movwf	(_os+49)& (0+255),b	;volatile
  7269                           
  7270                           ; BSR set to: 1
  7271                           ;os.c: 249: i2c_eeprom_recover_position();
  7272  010576  ECF3  F0AD         	call	_i2c_eeprom_recover_position	;wreg free
  7273                           
  7274                           ;os.c: 250: if(os.current_position_in_steps>config.full_circle_in_steps)
  7275  01057A  0101               	movlb	1	; () banked
  7276  01057C  516B               	movf	(_os+7)& (0+255),w,b	;volatile
  7277  01057E  5D96               	subwf	_config& (0+255),w,b
  7278  010580  516C               	movf	(_os+8)& (0+255),w,b	;volatile
  7279  010582  5997               	subwfb	(_config+1)& (0+255),w,b
  7280  010584  516D               	movf	(_os+9)& (0+255),w,b	;volatile
  7281  010586  5998               	subwfb	(_config+2)& (0+255),w,b
  7282  010588  516E               	movf	(_os+10)& (0+255),w,b	;volatile
  7283  01058A  5999               	subwfb	(_config+3)& (0+255),w,b
  7284  01058C  B0D8               	btfsc	status,0,c
  7285  01058E  D00C               	goto	l1082
  7286                           
  7287                           ; BSR set to: 1
  7288                           ;os.c: 251: {;os.c: 252: os.current_position_in_steps = 0;
  7289  010590  0E00               	movlw	0
  7290  010592  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
  7291  010594  0E00               	movlw	0
  7292  010596  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
  7293  010598  0E00               	movlw	0
  7294  01059A  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
  7295  01059C  0E00               	movlw	0
  7296  01059E  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
  7297                           
  7298                           ;os.c: 253: os.absolute_position = 0;
  7299  0105A0  0E00               	movlw	0
  7300  0105A2  6F70               	movwf	(_os+12)& (0+255),b	;volatile
  7301  0105A4  0E00               	movlw	0
  7302  0105A6  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
  7303  0105A8                     l1082:
  7304                           
  7305                           ; BSR set to: 1
  7306                           ;os.c: 254: };os.c: 255: motor_calculate_position_in_degrees();
  7307                           
  7308                           ; BSR set to: 1
  7309  0105A8  EC28  F091         	call	_motor_calculate_position_in_degrees	;wreg free
  7310                           
  7311                           ;os.c: 258: _system_timer0_init();
  7312  0105AC  EC6B  F0AC         	call	__system_timer0_init	;wreg free
  7313  0105B0  0012               	return		;funcret
  7314  0105B2                     __end_of_system_init:
  7315                           	opt stack 0
  7316                           tblptru	equ	0xFF8
  7317                           tblptrh	equ	0xFF7
  7318                           tblptrl	equ	0xFF6
  7319                           tablat	equ	0xFF5
  7320                           postinc0	equ	0xFEE
  7321                           wreg	equ	0xFE8
  7322                           postdec1	equ	0xFE5
  7323                           fsr1h	equ	0xFE2
  7324                           fsr1l	equ	0xFE1
  7325                           status	equ	0xFD8
  7326                           
  7327 ;; *************** function _motor_init *****************
  7328 ;; Defined at:
  7329 ;;		line 646 in file "motor.c"
  7330 ;; Parameters:    Size  Location     Type
  7331 ;;		None
  7332 ;; Auto vars:     Size  Location     Type
  7333 ;;		None
  7334 ;; Return value:  Size  Location     Type
  7335 ;;                  1    wreg      void 
  7336 ;; Registers used:
  7337 ;;		wreg, status,2
  7338 ;; Tracked objects:
  7339 ;;		On entry : 0/0
  7340 ;;		On exit  : 0/0
  7341 ;;		Unchanged: 0/0
  7342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7346 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7347 ;;Total ram usage:        0 bytes
  7348 ;; Hardware stack levels used:    1
  7349 ;; Hardware stack levels required when called:   10
  7350 ;; This function calls:
  7351 ;;		Nothing
  7352 ;; This function is called by:
  7353 ;;		_system_init
  7354 ;; This function uses a non-reentrant model
  7355 ;;
  7356                           
  7357                           	psect	text2
  7358  015BAC                     __ptext2:
  7359                           	opt stack 0
  7360  015BAC                     _motor_init:
  7361                           	opt stack 19
  7362                           
  7363                           ;motor.c: 649: motor_cue_read_index = 0;
  7364                           
  7365                           ;incstack = 0
  7366  015BAC  0E00               	movlw	0
  7367  015BAE  0101               	movlb	1	; () banked
  7368  015BB0  6F4B               	movwf	_motor_cue_read_index& (0+255),b
  7369                           
  7370                           ;motor.c: 650: motor_cue_write_index = 0;
  7371  015BB2  0E00               	movlw	0
  7372  015BB4  6F4A               	movwf	_motor_cue_write_index& (0+255),b
  7373                           
  7374                           ; BSR set to: 1
  7375                           ;motor.c: 656: CCPTMRS0bits.C2TSEL = 0b000;
  7376  015BB6  010F               	movlb	15	; () banked
  7377  015BB8  9752               	bcf	82,3,b	;volatile
  7378  015BBA  9952               	bcf	82,4,b	;volatile
  7379  015BBC  9B52               	bcf	82,5,b	;volatile
  7380                           
  7381                           ;motor.c: 661: CCP1CONbits.P1M = 0b00;
  7382  015BBE  0E3F               	movlw	-193
  7383  015BC0  16BA               	andwf	4026,f,c	;volatile
  7384                           
  7385                           ;motor.c: 664: CCP1CONbits.DC1B = 0b00;
  7386  015BC2  0ECF               	movlw	-49
  7387  015BC4  16BA               	andwf	4026,f,c	;volatile
  7388                           
  7389                           ; BSR set to: 15
  7390                           ;motor.c: 667: LATBbits.LB0 = 0;
  7391  015BC6  908A               	bcf	3978,0,c	;volatile
  7392                           
  7393                           ; BSR set to: 15
  7394  015BC8  0012               	return		;funcret
  7395  015BCA                     __end_of_motor_init:
  7396                           	opt stack 0
  7397                           tblptru	equ	0xFF8
  7398                           tblptrh	equ	0xFF7
  7399                           tblptrl	equ	0xFF6
  7400                           tablat	equ	0xFF5
  7401                           postinc0	equ	0xFEE
  7402                           wreg	equ	0xFE8
  7403                           postdec1	equ	0xFE5
  7404                           fsr1h	equ	0xFE2
  7405                           fsr1l	equ	0xFE1
  7406                           status	equ	0xFD8
  7407                           
  7408 ;; *************** function _motor_calculate_position_in_degrees *****************
  7409 ;; Defined at:
  7410 ;;		line 548 in file "motor.c"
  7411 ;; Parameters:    Size  Location     Type
  7412 ;;		None
  7413 ;; Auto vars:     Size  Location     Type
  7414 ;;  tmp             4   49[BANK0 ] float 
  7415 ;; Return value:  Size  Location     Type
  7416 ;;                  1    wreg      void 
  7417 ;; Registers used:
  7418 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7419 ;; Tracked objects:
  7420 ;;		On entry : 0/0
  7421 ;;		On exit  : 0/0
  7422 ;;		Unchanged: 0/0
  7423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7424 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7425 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7427 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7428 ;;Total ram usage:        4 bytes
  7429 ;; Hardware stack levels used:    1
  7430 ;; Hardware stack levels required when called:   11
  7431 ;; This function calls:
  7432 ;;		___fldiv
  7433 ;;		___flmul
  7434 ;;		___fltol
  7435 ;;		___xxtofl
  7436 ;; This function is called by:
  7437 ;;		_main
  7438 ;;		_system_init
  7439 ;; This function uses a non-reentrant model
  7440 ;;
  7441                           
  7442                           	psect	text3
  7443  012250                     __ptext3:
  7444                           	opt stack 0
  7445  012250                     _motor_calculate_position_in_degrees:
  7446                           	opt stack 18
  7447                           
  7448                           ;motor.c: 550: float tmp;;motor.c: 552: tmp = (float) os.current_position_in_steps;
  7449                           
  7450                           ; BSR set to: 15
  7451                           ;incstack = 0
  7452  012250  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
  7453  012254  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
  7454  012258  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
  7455  01225C  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
  7456  012260  0E00               	movlw	0
  7457  012262  EC5A  F080         	call	___xxtofl
  7458  012266  C06A  F091         	movff	?___xxtofl,motor_calculate_position_in_degrees@tmp
  7459  01226A  C06B  F092         	movff	?___xxtofl+1,motor_calculate_position_in_degrees@tmp+1
  7460  01226E  C06C  F093         	movff	?___xxtofl+2,motor_calculate_position_in_degrees@tmp+2
  7461  012272  C06D  F094         	movff	?___xxtofl+3,motor_calculate_position_in_degrees@tmp+3
  7462                           
  7463                           ;motor.c: 553: tmp *= 36000;
  7464  012276  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___flmul@b
  7465  01227A  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___flmul@b+1
  7466  01227E  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___flmul@b+2
  7467  012282  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___flmul@b+3
  7468  012286  0E00               	movlw	0
  7469  012288  0100               	movlb	0	; () banked
  7470  01228A  6F7C               	movwf	___flmul@a& (0+255),b
  7471  01228C  0EA0               	movlw	160
  7472  01228E  6F7D               	movwf	(___flmul@a+1)& (0+255),b
  7473  012290  0E0C               	movlw	12
  7474  012292  6F7E               	movwf	(___flmul@a+2)& (0+255),b
  7475  012294  0E47               	movlw	71
  7476  012296  6F7F               	movwf	(___flmul@a+3)& (0+255),b
  7477  012298  EC78  F064         	call	___flmul	;wreg free
  7478  01229C  C078  F091         	movff	?___flmul,motor_calculate_position_in_degrees@tmp
  7479  0122A0  C079  F092         	movff	?___flmul+1,motor_calculate_position_in_degrees@tmp+1
  7480  0122A4  C07A  F093         	movff	?___flmul+2,motor_calculate_position_in_degrees@tmp+2
  7481  0122A8  C07B  F094         	movff	?___flmul+3,motor_calculate_position_in_degrees@tmp+3
  7482                           
  7483                           ;motor.c: 554: tmp /= config.full_circle_in_steps;
  7484  0122AC  C091  F078         	movff	motor_calculate_position_in_degrees@tmp,___fldiv@b
  7485  0122B0  C092  F079         	movff	motor_calculate_position_in_degrees@tmp+1,___fldiv@b+1
  7486  0122B4  C093  F07A         	movff	motor_calculate_position_in_degrees@tmp+2,___fldiv@b+2
  7487  0122B8  C094  F07B         	movff	motor_calculate_position_in_degrees@tmp+3,___fldiv@b+3
  7488  0122BC  C196  F06A         	movff	_config,___xxtofl@val
  7489  0122C0  C197  F06B         	movff	_config+1,___xxtofl@val+1
  7490  0122C4  C198  F06C         	movff	_config+2,___xxtofl@val+2
  7491  0122C8  C199  F06D         	movff	_config+3,___xxtofl@val+3
  7492  0122CC  0E00               	movlw	0
  7493  0122CE  EC5A  F080         	call	___xxtofl
  7494  0122D2  C06A  F07C         	movff	?___xxtofl,___fldiv@a
  7495  0122D6  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
  7496  0122DA  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
  7497  0122DE  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
  7498  0122E2  ECA0  F06A         	call	___fldiv	;wreg free
  7499  0122E6  C078  F091         	movff	?___fldiv,motor_calculate_position_in_degrees@tmp
  7500  0122EA  C079  F092         	movff	?___fldiv+1,motor_calculate_position_in_degrees@tmp+1
  7501  0122EE  C07A  F093         	movff	?___fldiv+2,motor_calculate_position_in_degrees@tmp+2
  7502  0122F2  C07B  F094         	movff	?___fldiv+3,motor_calculate_position_in_degrees@tmp+3
  7503                           
  7504                           ;motor.c: 556: os.current_position_in_degrees = (uint16_t) tmp;
  7505  0122F6  C091  F060         	movff	motor_calculate_position_in_degrees@tmp,___fltol@f1
  7506  0122FA  C092  F061         	movff	motor_calculate_position_in_degrees@tmp+1,___fltol@f1+1
  7507  0122FE  C093  F062         	movff	motor_calculate_position_in_degrees@tmp+2,___fltol@f1+2
  7508  012302  C094  F063         	movff	motor_calculate_position_in_degrees@tmp+3,___fltol@f1+3
  7509  012306  EC97  F091         	call	___fltol	;wreg free
  7510  01230A  C060  F171         	movff	?___fltol,_os+13	;volatile
  7511  01230E  C061  F172         	movff	?___fltol+1,_os+14	;volatile
  7512                           
  7513                           ;motor.c: 557: if(os.current_position_in_degrees==36000)
  7514  012312  0EA0               	movlw	160
  7515  012314  0101               	movlb	1	; () banked
  7516  012316  1971               	xorwf	(_os+13)& (0+255),w,b	;volatile
  7517  012318  E109               	bnz	l2539
  7518  01231A  0E8C               	movlw	140
  7519  01231C  1972               	xorwf	(_os+14)& (0+255),w,b	;volatile
  7520  01231E  A4D8               	btfss	status,2,c
  7521  012320  0012               	return	
  7522                           
  7523                           ; BSR set to: 1
  7524                           ;motor.c: 558: {;motor.c: 560: os.current_position_in_degrees = 0;
  7525  012322  0E00               	movlw	0
  7526  012324  6F72               	movwf	(_os+14)& (0+255),b	;volatile
  7527  012326  0E00               	movlw	0
  7528  012328  6F71               	movwf	(_os+13)& (0+255),b	;volatile
  7529  01232A  0012               	return	
  7530  01232C                     l2539:
  7531                           
  7532                           ; BSR set to: 1
  7533  01232C  0012               	return		;funcret
  7534  01232E                     __end_of_motor_calculate_position_in_degrees:
  7535                           	opt stack 0
  7536                           tblptru	equ	0xFF8
  7537                           tblptrh	equ	0xFF7
  7538                           tblptrl	equ	0xFF6
  7539                           tablat	equ	0xFF5
  7540                           postinc0	equ	0xFEE
  7541                           wreg	equ	0xFE8
  7542                           postdec1	equ	0xFE5
  7543                           fsr1h	equ	0xFE2
  7544                           fsr1l	equ	0xFE1
  7545                           status	equ	0xFD8
  7546                           
  7547 ;; *************** function _i2c_init *****************
  7548 ;; Defined at:
  7549 ;;		line 28 in file "i2c.c"
  7550 ;; Parameters:    Size  Location     Type
  7551 ;;		None
  7552 ;; Auto vars:     Size  Location     Type
  7553 ;;		None
  7554 ;; Return value:  Size  Location     Type
  7555 ;;                  1    wreg      void 
  7556 ;; Registers used:
  7557 ;;		wreg, status,2
  7558 ;; Tracked objects:
  7559 ;;		On entry : 0/0
  7560 ;;		On exit  : 0/0
  7561 ;;		Unchanged: 0/0
  7562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7567 ;;Total ram usage:        0 bytes
  7568 ;; Hardware stack levels used:    1
  7569 ;; Hardware stack levels required when called:   10
  7570 ;; This function calls:
  7571 ;;		Nothing
  7572 ;; This function is called by:
  7573 ;;		_system_init
  7574 ;; This function uses a non-reentrant model
  7575 ;;
  7576                           
  7577                           	psect	text4
  7578  015BCA                     __ptext4:
  7579                           	opt stack 0
  7580  015BCA                     _i2c_init:
  7581                           	opt stack 19
  7582                           
  7583                           ;i2c.c: 30: TRISBbits.TRISB5 = 1;
  7584                           
  7585                           ; BSR set to: 1
  7586                           ;incstack = 0
  7587  015BCA  8A93               	bsf	3987,5,c	;volatile
  7588                           
  7589                           ;i2c.c: 31: TRISBbits.TRISB4 = 1;
  7590  015BCC  8893               	bsf	3987,4,c	;volatile
  7591                           
  7592                           ;i2c.c: 33: SSP1STATbits.SMP = 1;
  7593  015BCE  8EC7               	bsf	4039,7,c	;volatile
  7594                           
  7595                           ;i2c.c: 34: SSP1STATbits.CKE = 0;
  7596  015BD0  9CC7               	bcf	4039,6,c	;volatile
  7597                           
  7598                           ;i2c.c: 36: SSP1ADD = 119;
  7599  015BD2  0E77               	movlw	119
  7600  015BD4  6EC8               	movwf	4040,c	;volatile
  7601                           
  7602                           ;i2c.c: 38: SSP1CON1bits.WCOL = 0;
  7603  015BD6  9EC6               	bcf	4038,7,c	;volatile
  7604                           
  7605                           ;i2c.c: 39: SSP1CON1bits.SSPOV = 0;
  7606  015BD8  9CC6               	bcf	4038,6,c	;volatile
  7607                           
  7608                           ;i2c.c: 40: SSP1CON1bits.SSPM = 0b1000;
  7609  015BDA  50C6               	movf	4038,w,c	;volatile
  7610  015BDC  0BF0               	andlw	-16
  7611  015BDE  0908               	iorlw	8
  7612  015BE0  6EC6               	movwf	4038,c	;volatile
  7613                           
  7614                           ;i2c.c: 41: SSP1CON1bits.SSPEN = 1;
  7615  015BE2  8AC6               	bsf	4038,5,c	;volatile
  7616  015BE4  0012               	return		;funcret
  7617  015BE6                     __end_of_i2c_init:
  7618                           	opt stack 0
  7619                           tblptru	equ	0xFF8
  7620                           tblptrh	equ	0xFF7
  7621                           tblptrl	equ	0xFF6
  7622                           tablat	equ	0xFF5
  7623                           postinc0	equ	0xFEE
  7624                           wreg	equ	0xFE8
  7625                           postdec1	equ	0xFE5
  7626                           fsr1h	equ	0xFE2
  7627                           fsr1l	equ	0xFE1
  7628                           status	equ	0xFD8
  7629                           
  7630 ;; *************** function _i2c_eeprom_recover_position *****************
  7631 ;; Defined at:
  7632 ;;		line 307 in file "i2c.c"
  7633 ;; Parameters:    Size  Location     Type
  7634 ;;		None
  7635 ;; Auto vars:     Size  Location     Type
  7636 ;;		None
  7637 ;; Return value:  Size  Location     Type
  7638 ;;                  1    wreg      void 
  7639 ;; Registers used:
  7640 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7641 ;; Tracked objects:
  7642 ;;		On entry : 0/0
  7643 ;;		On exit  : 0/0
  7644 ;;		Unchanged: 0/0
  7645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7646 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7648 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7649 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7650 ;;Total ram usage:        0 bytes
  7651 ;; Hardware stack levels used:    1
  7652 ;; Hardware stack levels required when called:   13
  7653 ;; This function calls:
  7654 ;;		_i2c_eeprom_read
  7655 ;; This function is called by:
  7656 ;;		_system_init
  7657 ;; This function uses a non-reentrant model
  7658 ;;
  7659                           
  7660                           	psect	text5
  7661  015BE6                     __ptext5:
  7662                           	opt stack 0
  7663  015BE6                     _i2c_eeprom_recover_position:
  7664                           	opt stack 16
  7665                           
  7666                           ;i2c.c: 316: i2c_eeprom_read(0x200, &os.current_position_in_steps, 6);
  7667                           
  7668                           ;incstack = 0
  7669  015BE6  0E02               	movlw	2
  7670  015BE8  0100               	movlb	0	; () banked
  7671  015BEA  6F72               	movwf	(i2c_eeprom_read@address+1)& (0+255),b
  7672  015BEC  0E00               	movlw	0
  7673  015BEE  6F71               	movwf	i2c_eeprom_read@address& (0+255),b
  7674  015BF0  0E6B               	movlw	low (_os+7)
  7675  015BF2  6F73               	movwf	i2c_eeprom_read@data& (0+255),b
  7676  015BF4  0E01               	movlw	high (_os+7)
  7677  015BF6  6F74               	movwf	(i2c_eeprom_read@data+1)& (0+255),b
  7678  015BF8  0E06               	movlw	6
  7679  015BFA  6F75               	movwf	i2c_eeprom_read@length& (0+255),b
  7680  015BFC  EC6C  F0A6         	call	_i2c_eeprom_read	;wreg free
  7681  015C00  0012               	return		;funcret
  7682  015C02                     __end_of_i2c_eeprom_recover_position:
  7683                           	opt stack 0
  7684                           tblptru	equ	0xFF8
  7685                           tblptrh	equ	0xFF7
  7686                           tblptrl	equ	0xFF6
  7687                           tablat	equ	0xFF5
  7688                           postinc0	equ	0xFEE
  7689                           wreg	equ	0xFE8
  7690                           postdec1	equ	0xFE5
  7691                           fsr1h	equ	0xFE2
  7692                           fsr1l	equ	0xFE1
  7693                           status	equ	0xFD8
  7694                           
  7695 ;; *************** function _i2c_eeprom_read *****************
  7696 ;; Defined at:
  7697 ;;		line 279 in file "i2c.c"
  7698 ;; Parameters:    Size  Location     Type
  7699 ;;  address         2   17[BANK0 ] unsigned int 
  7700 ;;  data            2   19[BANK0 ] PTR unsigned char 
  7701 ;;		 -> i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), os.current_position_
      +in_steps(4), 
  7702 ;;		 -> os(50), 
  7703 ;;  length          1   21[BANK0 ] unsigned char 
  7704 ;; Auto vars:     Size  Location     Type
  7705 ;;  slave_addres    1   24[BANK0 ] unsigned char 
  7706 ;;  addr            1   23[BANK0 ] unsigned char 
  7707 ;; Return value:  Size  Location     Type
  7708 ;;                  1    wreg      void 
  7709 ;; Registers used:
  7710 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7711 ;; Tracked objects:
  7712 ;;		On entry : 0/0
  7713 ;;		On exit  : 0/0
  7714 ;;		Unchanged: 0/0
  7715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7716 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7717 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7718 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7719 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7720 ;;Total ram usage:        8 bytes
  7721 ;; Hardware stack levels used:    1
  7722 ;; Hardware stack levels required when called:   12
  7723 ;; This function calls:
  7724 ;;		__i2c_eeprom_busy
  7725 ;;		__i2c_read
  7726 ;;		__i2c_write
  7727 ;; This function is called by:
  7728 ;;		_i2c_eeprom_recover_position
  7729 ;;		_i2c_eeprom_readUint16
  7730 ;;		_i2c_eeprom_readUint32
  7731 ;;		_i2c_eeprom_readInt16
  7732 ;; This function uses a non-reentrant model
  7733 ;;
  7734                           
  7735                           	psect	text6
  7736  014CD8                     __ptext6:
  7737                           	opt stack 0
  7738  014CD8                     _i2c_eeprom_read:
  7739                           	opt stack 16
  7740                           
  7741                           ;i2c.c: 281: uint8_t slave_address;;i2c.c: 282: uint8_t addr;;i2c.c: 283: addr = address
      +                           & 0xFF;
  7742                           
  7743                           ;incstack = 0
  7744  014CD8  C071  F077         	movff	i2c_eeprom_read@address,i2c_eeprom_read@addr
  7745                           
  7746                           ;i2c.c: 284: address &= 0b0000011100000000;
  7747  014CDC  0100               	movlb	0	; () banked
  7748  014CDE  0E00               	movlw	0
  7749  014CE0  1771               	andwf	i2c_eeprom_read@address& (0+255),f,b
  7750  014CE2  0E07               	movlw	7
  7751  014CE4  1772               	andwf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7752                           
  7753                           ;i2c.c: 285: address >>= 7;
  7754  014CE6  0E07               	movlw	7
  7755  014CE8  6F76               	movwf	??_i2c_eeprom_read& (0+255),b
  7756  014CEA                     u15095:
  7757  014CEA  90D8               	bcf	status,0,c
  7758  014CEC  3372               	rrcf	(i2c_eeprom_read@address+1)& (0+255),f,b
  7759  014CEE  3371               	rrcf	i2c_eeprom_read@address& (0+255),f,b
  7760  014CF0  2F76               	decfsz	??_i2c_eeprom_read& (0+255),f,b
  7761  014CF2  D7FB               	goto	u15095
  7762                           
  7763                           ;i2c.c: 286: slave_address = 0b10100000 | address;
  7764  014CF4  5171               	movf	i2c_eeprom_read@address& (0+255),w,b
  7765  014CF6  09A0               	iorlw	160
  7766  014CF8  6F78               	movwf	i2c_eeprom_read@slave_address& (0+255),b
  7767  014CFA                     
  7768                           ; BSR set to: 0
  7769                           
  7770                           ; BSR set to: 0
  7771  014CFA  ECD6  F0AC         	call	__i2c_eeprom_busy	;wreg free
  7772  014CFE  0900               	iorlw	0
  7773  014D00  A4D8               	btfss	status,2,c
  7774  014D02  D7FB               	goto	l1221
  7775                           
  7776                           ;i2c.c: 291: _i2c_write(slave_address, &addr, 1);
  7777  014D04  0E77               	movlw	low i2c_eeprom_read@addr
  7778  014D06  0100               	movlb	0	; () banked
  7779  014D08  6F65               	movwf	__i2c_write@data& (0+255),b
  7780  014D0A  0E00               	movlw	high i2c_eeprom_read@addr
  7781  014D0C  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
  7782  014D0E  0E01               	movlw	1
  7783  014D10  6F67               	movwf	__i2c_write@length& (0+255),b
  7784  014D12  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7785  014D14  ECE3  F0A7         	call	__i2c_write
  7786                           
  7787                           ;i2c.c: 292: _i2c_read(slave_address, &data[0], length);
  7788  014D18  C073  F065         	movff	i2c_eeprom_read@data,__i2c_read@data
  7789  014D1C  C074  F066         	movff	i2c_eeprom_read@data+1,__i2c_read@data+1
  7790  014D20  C075  F067         	movff	i2c_eeprom_read@length,__i2c_read@length
  7791  014D24  0100               	movlb	0	; () banked
  7792  014D26  5178               	movf	i2c_eeprom_read@slave_address& (0+255),w,b
  7793  014D28  EC15  F09D         	call	__i2c_read
  7794  014D2C  0012               	return		;funcret
  7795  014D2E                     __end_of_i2c_eeprom_read:
  7796                           	opt stack 0
  7797                           tblptru	equ	0xFF8
  7798                           tblptrh	equ	0xFF7
  7799                           tblptrl	equ	0xFF6
  7800                           tablat	equ	0xFF5
  7801                           postinc0	equ	0xFEE
  7802                           wreg	equ	0xFE8
  7803                           postdec1	equ	0xFE5
  7804                           fsr1h	equ	0xFE2
  7805                           fsr1l	equ	0xFE1
  7806                           status	equ	0xFD8
  7807                           
  7808 ;; *************** function __i2c_read *****************
  7809 ;; Defined at:
  7810 ;;		line 107 in file "i2c.c"
  7811 ;; Parameters:    Size  Location     Type
  7812 ;;  slave_addres    1    wreg     unsigned char 
  7813 ;;  data            2    5[BANK0 ] PTR unsigned char 
  7814 ;;		 -> i2c_eeprom_readInt16@data(2), i2c_eeprom_readUint32@data(4), i2c_eeprom_readUint16@data(2), i2c_eeprom_readByte@
      +addr(1), 
  7815 ;;		 -> os.current_position_in_steps(4), os(50), 
  7816 ;;  length          1    7[BANK0 ] unsigned char 
  7817 ;; Auto vars:     Size  Location     Type
  7818 ;;  slave_addres    1   15[BANK0 ] unsigned char 
  7819 ;;  cntr            1   16[BANK0 ] unsigned char 
  7820 ;; Return value:  Size  Location     Type
  7821 ;;                  1    wreg      void 
  7822 ;; Registers used:
  7823 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7824 ;; Tracked objects:
  7825 ;;		On entry : 0/0
  7826 ;;		On exit  : 0/0
  7827 ;;		Unchanged: 0/0
  7828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7829 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7830 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7831 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7832 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7833 ;;Total ram usage:       12 bytes
  7834 ;; Hardware stack levels used:    1
  7835 ;; Hardware stack levels required when called:   11
  7836 ;; This function calls:
  7837 ;;		__i2c_acknowledge
  7838 ;;		__i2c_get
  7839 ;;		__i2c_not_acknowledge
  7840 ;;		__i2c_send
  7841 ;;		__i2c_start
  7842 ;;		__i2c_stop
  7843 ;;		__i2c_wait_idle
  7844 ;; This function is called by:
  7845 ;;		_i2c_eeprom_read
  7846 ;;		_i2c_eeprom_readByte
  7847 ;; This function uses a non-reentrant model
  7848 ;;
  7849                           
  7850                           	psect	text7
  7851  013A2A                     __ptext7:
  7852                           	opt stack 0
  7853  013A2A                     __i2c_read:
  7854                           	opt stack 16
  7855                           
  7856                           ;incstack = 0
  7857                           ;__i2c_read@slave_address stored from wreg
  7858  013A2A  0100               	movlb	0	; () banked
  7859  013A2C  6F6F               	movwf	__i2c_read@slave_address& (0+255),b
  7860                           
  7861                           ;i2c.c: 109: uint8_t cntr;;i2c.c: 111: _i2c_wait_idle();
  7862  013A2E  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
  7863                           
  7864                           ;i2c.c: 112: _i2c_start();
  7865  013A32  ECCB  F0AE         	call	__i2c_start	;wreg free
  7866                           
  7867                           ;i2c.c: 113: _i2c_wait_idle();
  7868  013A36  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
  7869                           
  7870                           ;i2c.c: 114: _i2c_send(slave_address | 0x01);
  7871  013A3A  0100               	movlb	0	; () banked
  7872  013A3C  516F               	movf	__i2c_read@slave_address& (0+255),w,b
  7873  013A3E  0901               	iorlw	1
  7874  013A40  ECB8  F0AE         	call	__i2c_send
  7875                           
  7876                           ;i2c.c: 115: _i2c_wait_idle();
  7877  013A44  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
  7878                           
  7879                           ;i2c.c: 125: for(cntr=0; cntr<length-1; ++cntr)
  7880  013A48  0E00               	movlw	0
  7881  013A4A  0100               	movlb	0	; () banked
  7882  013A4C  6F70               	movwf	__i2c_read@cntr& (0+255),b
  7883  013A4E  D00F               	goto	l1166
  7884  013A50                     
  7885                           ; BSR set to: 0
  7886                           ;i2c.c: 126: {;i2c.c: 127: data[cntr] = _i2c_get();
  7887                           
  7888                           ; BSR set to: 0
  7889  013A50  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7890  013A52  0D01               	mullw	1
  7891  013A54  50F3               	movf	prodl,w,c
  7892  013A56  2565               	addwf	__i2c_read@data& (0+255),w,b
  7893  013A58  6ED9               	movwf	fsr2l,c
  7894  013A5A  50F4               	movf	prodh,w,c
  7895  013A5C  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7896  013A5E  6EDA               	movwf	fsr2h,c
  7897  013A60  ECAE  F0AE         	call	__i2c_get	;wreg free
  7898  013A64  6EDF               	movwf	indf2,c
  7899                           
  7900                           ;i2c.c: 128: _i2c_acknowledge();
  7901  013A66  ECB3  F0AE         	call	__i2c_acknowledge	;wreg free
  7902  013A6A  0100               	movlb	0	; () banked
  7903  013A6C  2B70               	incf	__i2c_read@cntr& (0+255),f,b
  7904  013A6E                     l1166:
  7905                           
  7906                           ; BSR set to: 0
  7907                           
  7908                           ; BSR set to: 0
  7909  013A6E  0EFF               	movlw	255
  7910  013A70  6F68               	movwf	??__i2c_read& (0+255),b
  7911  013A72  0EFF               	movlw	255
  7912  013A74  6F69               	movwf	(??__i2c_read+1)& (0+255),b
  7913  013A76  5167               	movf	__i2c_read@length& (0+255),w,b
  7914  013A78  6F6A               	movwf	(??__i2c_read+2)& (0+255),b
  7915  013A7A  6B6B               	clrf	(??__i2c_read+3)& (0+255),b
  7916  013A7C  5168               	movf	??__i2c_read& (0+255),w,b
  7917  013A7E  276A               	addwf	(??__i2c_read+2)& (0+255),f,b
  7918  013A80  5169               	movf	(??__i2c_read+1)& (0+255),w,b
  7919  013A82  236B               	addwfc	(??__i2c_read+3)& (0+255),f,b
  7920  013A84  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7921  013A86  6F6C               	movwf	(??__i2c_read+4)& (0+255),b
  7922  013A88  6B6D               	clrf	(??__i2c_read+5)& (0+255),b
  7923  013A8A  516A               	movf	(??__i2c_read+2)& (0+255),w,b
  7924  013A8C  5D6C               	subwf	(??__i2c_read+4)& (0+255),w,b
  7925  013A8E  516D               	movf	(??__i2c_read+5)& (0+255),w,b
  7926  013A90  0A80               	xorlw	128
  7927  013A92  6F6E               	movwf	(??__i2c_read+6)& (0+255),b
  7928  013A94  516B               	movf	(??__i2c_read+3)& (0+255),w,b
  7929  013A96  0A80               	xorlw	128
  7930  013A98  596E               	subwfb	(??__i2c_read+6)& (0+255),w,b
  7931  013A9A  A0D8               	btfss	status,0,c
  7932  013A9C  D7D9               	goto	l1167
  7933                           
  7934                           ; BSR set to: 0
  7935                           ;i2c.c: 129: };i2c.c: 130: data[cntr] = _i2c_get();
  7936                           
  7937                           ; BSR set to: 0
  7938  013A9E  5170               	movf	__i2c_read@cntr& (0+255),w,b
  7939  013AA0  0D01               	mullw	1
  7940  013AA2  50F3               	movf	prodl,w,c
  7941  013AA4  2565               	addwf	__i2c_read@data& (0+255),w,b
  7942  013AA6  6ED9               	movwf	fsr2l,c
  7943  013AA8  50F4               	movf	prodh,w,c
  7944  013AAA  2166               	addwfc	(__i2c_read@data+1)& (0+255),w,b
  7945  013AAC  6EDA               	movwf	fsr2h,c
  7946  013AAE  ECAE  F0AE         	call	__i2c_get	;wreg free
  7947  013AB2  6EDF               	movwf	indf2,c
  7948                           
  7949                           ;i2c.c: 131: _i2c_not_acknowledge();
  7950  013AB4  ECA9  F0AE         	call	__i2c_not_acknowledge	;wreg free
  7951                           
  7952                           ;i2c.c: 133: _i2c_stop();
  7953  013AB8  ECC7  F0AE         	call	__i2c_stop	;wreg free
  7954  013ABC  0012               	return		;funcret
  7955  013ABE                     __end_of__i2c_read:
  7956                           	opt stack 0
  7957                           tblptru	equ	0xFF8
  7958                           tblptrh	equ	0xFF7
  7959                           tblptrl	equ	0xFF6
  7960                           tablat	equ	0xFF5
  7961                           prodh	equ	0xFF4
  7962                           prodl	equ	0xFF3
  7963                           postinc0	equ	0xFEE
  7964                           wreg	equ	0xFE8
  7965                           postdec1	equ	0xFE5
  7966                           fsr1h	equ	0xFE2
  7967                           fsr1l	equ	0xFE1
  7968                           indf2	equ	0xFDF
  7969                           fsr2h	equ	0xFDA
  7970                           fsr2l	equ	0xFD9
  7971                           status	equ	0xFD8
  7972                           
  7973 ;; *************** function __i2c_not_acknowledge *****************
  7974 ;; Defined at:
  7975 ;;		line 80 in file "i2c.c"
  7976 ;; Parameters:    Size  Location     Type
  7977 ;;		None
  7978 ;; Auto vars:     Size  Location     Type
  7979 ;;		None
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  1    wreg      void 
  7982 ;; Registers used:
  7983 ;;		None
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7993 ;;Total ram usage:        0 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; Hardware stack levels required when called:   10
  7996 ;; This function calls:
  7997 ;;		Nothing
  7998 ;; This function is called by:
  7999 ;;		__i2c_read
  8000 ;;		_i2c_adc_read
  8001 ;; This function uses a non-reentrant model
  8002 ;;
  8003                           
  8004                           	psect	text8
  8005  015D52                     __ptext8:
  8006                           	opt stack 0
  8007  015D52                     __i2c_not_acknowledge:
  8008                           	opt stack 16
  8009                           
  8010                           ;i2c.c: 82: SSP1CON2bits.ACKDT = 1;
  8011                           
  8012                           ;incstack = 0
  8013  015D52  8AC5               	bsf	4037,5,c	;volatile
  8014                           
  8015                           ;i2c.c: 83: SSP1CON2bits.ACKEN = 1;
  8016  015D54  88C5               	bsf	4037,4,c	;volatile
  8017  015D56  A8C5               	btfss	4037,4,c	;volatile
  8018  015D58  0012               	return	
  8019  015D5A  D7FD               	goto	l1155
  8020  015D5C                     __end_of__i2c_not_acknowledge:
  8021                           	opt stack 0
  8022                           tblptru	equ	0xFF8
  8023                           tblptrh	equ	0xFF7
  8024                           tblptrl	equ	0xFF6
  8025                           tablat	equ	0xFF5
  8026                           prodh	equ	0xFF4
  8027                           prodl	equ	0xFF3
  8028                           postinc0	equ	0xFEE
  8029                           wreg	equ	0xFE8
  8030                           postdec1	equ	0xFE5
  8031                           fsr1h	equ	0xFE2
  8032                           fsr1l	equ	0xFE1
  8033                           indf2	equ	0xFDF
  8034                           fsr2h	equ	0xFDA
  8035                           fsr2l	equ	0xFD9
  8036                           status	equ	0xFD8
  8037                           
  8038 ;; *************** function __i2c_get *****************
  8039 ;; Defined at:
  8040 ;;		line 60 in file "i2c.c"
  8041 ;; Parameters:    Size  Location     Type
  8042 ;;		None
  8043 ;; Auto vars:     Size  Location     Type
  8044 ;;		None
  8045 ;; Return value:  Size  Location     Type
  8046 ;;                  1    wreg      unsigned char 
  8047 ;; Registers used:
  8048 ;;		wreg, status,2
  8049 ;; Tracked objects:
  8050 ;;		On entry : 0/0
  8051 ;;		On exit  : 0/0
  8052 ;;		Unchanged: 0/0
  8053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8058 ;;Total ram usage:        0 bytes
  8059 ;; Hardware stack levels used:    1
  8060 ;; Hardware stack levels required when called:   10
  8061 ;; This function calls:
  8062 ;;		Nothing
  8063 ;; This function is called by:
  8064 ;;		__i2c_read
  8065 ;;		_i2c_adc_read
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           	psect	text9
  8070  015D5C                     __ptext9:
  8071                           	opt stack 0
  8072  015D5C                     __i2c_get:
  8073                           	opt stack 16
  8074                           
  8075                           ;i2c.c: 62: SSP1CON2bits.RCEN = 1 ;
  8076                           
  8077                           ;incstack = 0
  8078  015D5C  86C5               	bsf	4037,3,c	;volatile
  8079  015D5E  B6C5               	btfsc	4037,3,c	;volatile
  8080  015D60  D7FE               	goto	l1137
  8081                           
  8082                           ;i2c.c: 64: return SSP1BUF;
  8083  015D62  50C9               	movf	4041,w,c	;volatile
  8084  015D64  0012               	return	
  8085  015D66                     __end_of__i2c_get:
  8086                           	opt stack 0
  8087                           tblptru	equ	0xFF8
  8088                           tblptrh	equ	0xFF7
  8089                           tblptrl	equ	0xFF6
  8090                           tablat	equ	0xFF5
  8091                           prodh	equ	0xFF4
  8092                           prodl	equ	0xFF3
  8093                           postinc0	equ	0xFEE
  8094                           wreg	equ	0xFE8
  8095                           postdec1	equ	0xFE5
  8096                           fsr1h	equ	0xFE2
  8097                           fsr1l	equ	0xFE1
  8098                           indf2	equ	0xFDF
  8099                           fsr2h	equ	0xFDA
  8100                           fsr2l	equ	0xFD9
  8101                           status	equ	0xFD8
  8102                           
  8103 ;; *************** function __i2c_acknowledge *****************
  8104 ;; Defined at:
  8105 ;;		line 73 in file "i2c.c"
  8106 ;; Parameters:    Size  Location     Type
  8107 ;;		None
  8108 ;; Auto vars:     Size  Location     Type
  8109 ;;		None
  8110 ;; Return value:  Size  Location     Type
  8111 ;;                  1    wreg      void 
  8112 ;; Registers used:
  8113 ;;		None
  8114 ;; Tracked objects:
  8115 ;;		On entry : 0/0
  8116 ;;		On exit  : 0/0
  8117 ;;		Unchanged: 0/0
  8118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8123 ;;Total ram usage:        0 bytes
  8124 ;; Hardware stack levels used:    1
  8125 ;; Hardware stack levels required when called:   10
  8126 ;; This function calls:
  8127 ;;		Nothing
  8128 ;; This function is called by:
  8129 ;;		__i2c_read
  8130 ;;		_i2c_adc_read
  8131 ;; This function uses a non-reentrant model
  8132 ;;
  8133                           
  8134                           	psect	text10
  8135  015D66                     __ptext10:
  8136                           	opt stack 0
  8137  015D66                     __i2c_acknowledge:
  8138                           	opt stack 16
  8139                           
  8140                           ;i2c.c: 75: SSP1CON2bits.ACKDT = 0;
  8141                           
  8142                           ;incstack = 0
  8143  015D66  9AC5               	bcf	4037,5,c	;volatile
  8144                           
  8145                           ;i2c.c: 76: SSP1CON2bits.ACKEN = 1;
  8146  015D68  88C5               	bsf	4037,4,c	;volatile
  8147  015D6A  A8C5               	btfss	4037,4,c	;volatile
  8148  015D6C  0012               	return	
  8149  015D6E  D7FD               	goto	l1149
  8150  015D70                     __end_of__i2c_acknowledge:
  8151                           	opt stack 0
  8152                           tblptru	equ	0xFF8
  8153                           tblptrh	equ	0xFF7
  8154                           tblptrl	equ	0xFF6
  8155                           tablat	equ	0xFF5
  8156                           prodh	equ	0xFF4
  8157                           prodl	equ	0xFF3
  8158                           postinc0	equ	0xFEE
  8159                           wreg	equ	0xFE8
  8160                           postdec1	equ	0xFE5
  8161                           fsr1h	equ	0xFE2
  8162                           fsr1l	equ	0xFE1
  8163                           indf2	equ	0xFDF
  8164                           fsr2h	equ	0xFDA
  8165                           fsr2l	equ	0xFD9
  8166                           status	equ	0xFD8
  8167                           
  8168 ;; *************** function __i2c_eeprom_busy *****************
  8169 ;; Defined at:
  8170 ;;		line 173 in file "i2c.c"
  8171 ;; Parameters:    Size  Location     Type
  8172 ;;		None
  8173 ;; Auto vars:     Size  Location     Type
  8174 ;;  busy            1    5[BANK0 ] unsigned char 
  8175 ;; Return value:  Size  Location     Type
  8176 ;;                  1    wreg      unsigned char 
  8177 ;; Registers used:
  8178 ;;		wreg, status,2, status,0, cstack
  8179 ;; Tracked objects:
  8180 ;;		On entry : 0/0
  8181 ;;		On exit  : 0/0
  8182 ;;		Unchanged: 0/0
  8183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8184 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8187 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8188 ;;Total ram usage:        1 bytes
  8189 ;; Hardware stack levels used:    1
  8190 ;; Hardware stack levels required when called:   11
  8191 ;; This function calls:
  8192 ;;		__i2c_send
  8193 ;;		__i2c_start
  8194 ;;		__i2c_stop
  8195 ;;		__i2c_wait_idle
  8196 ;; This function is called by:
  8197 ;;		_i2c_eeprom_read
  8198 ;;		_i2c_eeprom_writeByte
  8199 ;;		_i2c_eeprom_readByte
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text11
  8204  0159AC                     __ptext11:
  8205                           	opt stack 0
  8206  0159AC                     __i2c_eeprom_busy:
  8207                           	opt stack 16
  8208                           
  8209                           ;i2c.c: 175: uint8_t busy;;i2c.c: 176: _i2c_wait_idle();
  8210                           
  8211                           ;incstack = 0
  8212  0159AC  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
  8213                           
  8214                           ;i2c.c: 177: _i2c_start();
  8215  0159B0  ECCB  F0AE         	call	__i2c_start	;wreg free
  8216                           
  8217                           ;i2c.c: 178: _i2c_wait_idle();
  8218  0159B4  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
  8219                           
  8220                           ;i2c.c: 179: _i2c_send(0b10100000);
  8221  0159B8  0EA0               	movlw	160
  8222  0159BA  ECB8  F0AE         	call	__i2c_send
  8223                           
  8224                           ;i2c.c: 180: _i2c_wait_idle();
  8225  0159BE  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
  8226                           
  8227                           ;i2c.c: 184: busy = SSP1CON2bits.ACKSTAT;
  8228  0159C2  0E00               	movlw	0
  8229  0159C4  BCC5               	btfsc	4037,6,c	;volatile
  8230  0159C6  0E01               	movlw	1
  8231  0159C8  0100               	movlb	0	; () banked
  8232  0159CA  6F65               	movwf	__i2c_eeprom_busy@busy& (0+255),b
  8233                           
  8234                           ; BSR set to: 0
  8235                           ;i2c.c: 185: _i2c_stop();
  8236  0159CC  ECC7  F0AE         	call	__i2c_stop	;wreg free
  8237                           
  8238                           ;i2c.c: 187: return 0;
  8239  0159D0  0E00               	movlw	0
  8240  0159D2  0012               	return	
  8241  0159D4                     __end_of__i2c_eeprom_busy:
  8242                           	opt stack 0
  8243                           tblptru	equ	0xFF8
  8244                           tblptrh	equ	0xFF7
  8245                           tblptrl	equ	0xFF6
  8246                           tablat	equ	0xFF5
  8247                           prodh	equ	0xFF4
  8248                           prodl	equ	0xFF3
  8249                           postinc0	equ	0xFEE
  8250                           wreg	equ	0xFE8
  8251                           postdec1	equ	0xFE5
  8252                           fsr1h	equ	0xFE2
  8253                           fsr1l	equ	0xFE1
  8254                           indf2	equ	0xFDF
  8255                           fsr2h	equ	0xFDA
  8256                           fsr2l	equ	0xFD9
  8257                           status	equ	0xFD8
  8258                           
  8259 ;; *************** function _flash_init *****************
  8260 ;; Defined at:
  8261 ;;		line 361 in file "flash.c"
  8262 ;; Parameters:    Size  Location     Type
  8263 ;;		None
  8264 ;; Auto vars:     Size  Location     Type
  8265 ;;		None
  8266 ;; Return value:  Size  Location     Type
  8267 ;;                  1    wreg      void 
  8268 ;; Registers used:
  8269 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8270 ;; Tracked objects:
  8271 ;;		On entry : 0/0
  8272 ;;		On exit  : 0/0
  8273 ;;		Unchanged: 0/0
  8274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8275 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8276 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8278 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8279 ;;Total ram usage:        0 bytes
  8280 ;; Hardware stack levels used:    1
  8281 ;; Hardware stack levels required when called:   14
  8282 ;; This function calls:
  8283 ;;		__flash_set_page_size
  8284 ;;		_spi_init
  8285 ;; This function is called by:
  8286 ;;		_system_init
  8287 ;; This function uses a non-reentrant model
  8288 ;;
  8289                           
  8290                           	psect	text12
  8291  015D08                     __ptext12:
  8292                           	opt stack 0
  8293  015D08                     _flash_init:
  8294                           	opt stack 15
  8295                           
  8296                           ;flash.c: 364: spi_init(SPI_CONFIGURATION_INTERNAL);
  8297                           
  8298                           ;incstack = 0
  8299  015D08  0E00               	movlw	0
  8300  015D0A  ECEA  F0A9         	call	_spi_init
  8301                           
  8302                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  8303  015D0E  0E00               	movlw	0
  8304  015D10  ECEA  F0A1         	call	__flash_set_page_size
  8305  015D14  0012               	return		;funcret
  8306  015D16                     __end_of_flash_init:
  8307                           	opt stack 0
  8308                           tblptru	equ	0xFF8
  8309                           tblptrh	equ	0xFF7
  8310                           tblptrl	equ	0xFF6
  8311                           tablat	equ	0xFF5
  8312                           prodh	equ	0xFF4
  8313                           prodl	equ	0xFF3
  8314                           postinc0	equ	0xFEE
  8315                           wreg	equ	0xFE8
  8316                           postdec1	equ	0xFE5
  8317                           fsr1h	equ	0xFE2
  8318                           fsr1l	equ	0xFE1
  8319                           indf2	equ	0xFDF
  8320                           fsr2h	equ	0xFDA
  8321                           fsr2l	equ	0xFD9
  8322                           status	equ	0xFD8
  8323                           
  8324 ;; *************** function _spi_init *****************
  8325 ;; Defined at:
  8326 ;;		line 89 in file "spi.c"
  8327 ;; Parameters:    Size  Location     Type
  8328 ;;  configuratio    1    wreg     enum E6878
  8329 ;; Auto vars:     Size  Location     Type
  8330 ;;  configuratio    1    3[BANK0 ] enum E6878
  8331 ;; Return value:  Size  Location     Type
  8332 ;;                  1    wreg      void 
  8333 ;; Registers used:
  8334 ;;		wreg, status,2, status,0, cstack
  8335 ;; Tracked objects:
  8336 ;;		On entry : 0/0
  8337 ;;		On exit  : 0/0
  8338 ;;		Unchanged: 0/0
  8339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8341 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8343 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8344 ;;Total ram usage:        1 bytes
  8345 ;; Hardware stack levels used:    1
  8346 ;; Hardware stack levels required when called:   11
  8347 ;; This function calls:
  8348 ;;		__spi_init
  8349 ;; This function is called by:
  8350 ;;		_flash_init
  8351 ;; This function uses a non-reentrant model
  8352 ;;
  8353                           
  8354                           	psect	text13
  8355  0153D4                     __ptext13:
  8356                           	opt stack 0
  8357  0153D4                     _spi_init:
  8358                           	opt stack 17
  8359                           
  8360                           ;incstack = 0
  8361                           ;spi_init@configuration stored from wreg
  8362  0153D4  0100               	movlb	0	; () banked
  8363  0153D6  6F63               	movwf	spi_init@configuration& (0+255),b
  8364                           
  8365                           ;spi.c: 91: switch(configuration)
  8366  0153D8  D012               	goto	l2183
  8367  0153DA                     
  8368                           ;spi.c: 94: _spi_init(config_internal);
  8369  0153DA  C23B  F060         	movff	_config_internal,__spi_init@details
  8370  0153DE  C23C  F061         	movff	_config_internal+1,__spi_init@details+1
  8371  0153E2  C23D  F062         	movff	_config_internal+2,__spi_init@details+2
  8372  0153E6  ECBF  F0AA         	call	__spi_init	;wreg free
  8373                           
  8374                           ;spi.c: 95: break;
  8375  0153EA  D011               	goto	l2185
  8376  0153EC                     
  8377                           ;spi.c: 98: _spi_init(config_external);
  8378  0153EC  C238  F060         	movff	_config_external,__spi_init@details
  8379  0153F0  C239  F061         	movff	_config_external+1,__spi_init@details+1
  8380  0153F4  C23A  F062         	movff	_config_external+2,__spi_init@details+2
  8381  0153F8  ECBF  F0AA         	call	__spi_init	;wreg free
  8382                           
  8383                           ;spi.c: 100: }
  8384                           
  8385                           ;spi.c: 99: break;
  8386  0153FC  D008               	goto	l2185
  8387  0153FE                     l2183:
  8388  0153FE  0100               	movlb	0	; () banked
  8389  015400  5163               	movf	spi_init@configuration& (0+255),w,b
  8390                           
  8391                           ; Switch size 1, requested type "space"
  8392                           ; Number of cases is 2, Range of values is 0 to 1
  8393                           ; switch strategies available:
  8394                           ; Name         Instructions Cycles
  8395                           ; simple_byte            7     4 (average)
  8396                           ;	Chosen strategy is simple_byte
  8397  015402  0A00               	xorlw	0	; case 0
  8398  015404  B4D8               	btfsc	status,2,c
  8399  015406  D7E9               	goto	l2184
  8400  015408  0A01               	xorlw	1	; case 1
  8401  01540A  B4D8               	btfsc	status,2,c
  8402  01540C  D7EF               	goto	l2186
  8403  01540E                     l2185:
  8404                           
  8405                           ;spi.c: 102: active_configuration = configuration;
  8406  01540E  C063  F14C         	movff	spi_init@configuration,_active_configuration
  8407  015412  0012               	return		;funcret
  8408  015414                     __end_of_spi_init:
  8409                           	opt stack 0
  8410                           tblptru	equ	0xFF8
  8411                           tblptrh	equ	0xFF7
  8412                           tblptrl	equ	0xFF6
  8413                           tablat	equ	0xFF5
  8414                           prodh	equ	0xFF4
  8415                           prodl	equ	0xFF3
  8416                           postinc0	equ	0xFEE
  8417                           wreg	equ	0xFE8
  8418                           postdec1	equ	0xFE5
  8419                           fsr1h	equ	0xFE2
  8420                           fsr1l	equ	0xFE1
  8421                           indf2	equ	0xFDF
  8422                           fsr2h	equ	0xFDA
  8423                           fsr2l	equ	0xFD9
  8424                           status	equ	0xFD8
  8425                           
  8426 ;; *************** function __spi_init *****************
  8427 ;; Defined at:
  8428 ;;		line 24 in file "spi.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  details         3    0[BANK0 ] struct .
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;		None
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  1    wreg      void 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8442 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8443 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8444 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8445 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8446 ;;Total ram usage:        3 bytes
  8447 ;; Hardware stack levels used:    1
  8448 ;; Hardware stack levels required when called:   10
  8449 ;; This function calls:
  8450 ;;		Nothing
  8451 ;; This function is called by:
  8452 ;;		_spi_init
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           
  8456                           	psect	text14
  8457  01557E                     __ptext14:
  8458                           	opt stack 0
  8459  01557E                     __spi_init:
  8460                           	opt stack 17
  8461                           
  8462                           ;spi.c: 30: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  8463                           
  8464                           ;incstack = 0
  8465  01557E  0E55               	movlw	85
  8466  015580  6EA7               	movwf	4007,c	;volsfr
  8467  015582  0EAA               	movlw	170
  8468  015584  6EA7               	movwf	4007,c	;volsfr
  8469  015586  010E               	movlb	14	; () banked
  8470  015588  91BF               	bcf	191,0,b	;volatile
  8471                           
  8472                           ;spi.c: 31: RPINR21 = 22;
  8473  01558A  0E16               	movlw	22
  8474  01558C  6FFC               	movwf	252,b	;volatile
  8475                           
  8476                           ;spi.c: 32: RPOR21 = 10;
  8477  01558E  0E0A               	movlw	10
  8478  015590  6FD5               	movwf	213,b	;volatile
  8479                           
  8480                           ;spi.c: 34: RPOR23 = 11;
  8481  015592  0E0B               	movlw	11
  8482  015594  6FD7               	movwf	215,b	;volatile
  8483                           
  8484                           ;spi.c: 35: RPINR22 = 23;
  8485  015596  0E17               	movlw	23
  8486  015598  6FFD               	movwf	253,b	;volatile
  8487                           
  8488                           ;spi.c: 36: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  8489  01559A  0E55               	movlw	85
  8490  01559C  6EA7               	movwf	4007,c	;volsfr
  8491  01559E  0EAA               	movlw	170
  8492  0155A0  6EA7               	movwf	4007,c	;volsfr
  8493                           
  8494                           ; BSR set to: 14
  8495  0155A2  81BF               	bsf	191,0,b	;volatile
  8496                           
  8497                           ; BSR set to: 14
  8498                           ;spi.c: 39: SSP2STATbits.SMP = 1;
  8499  0155A4  8E73               	bsf	3955,7,c	;volatile
  8500                           
  8501                           ; BSR set to: 14
  8502                           ;spi.c: 40: SSP2STATbits.CKE = 1;
  8503  0155A6  8C73               	bsf	3955,6,c	;volatile
  8504                           
  8505                           ; BSR set to: 14
  8506                           ;spi.c: 41: SSP2CON1bits.CKP = 0;
  8507  0155A8  9872               	bcf	3954,4,c	;volatile
  8508                           
  8509                           ; BSR set to: 14
  8510                           ;spi.c: 42: SSP2CON1bits.SSPM =0b0000;
  8511  0155AA  9072               	bcf	3954,0,c	;volatile
  8512  0155AC  9272               	bcf	3954,1,c	;volatile
  8513  0155AE  9472               	bcf	3954,2,c	;volatile
  8514  0155B0  9672               	bcf	3954,3,c	;volatile
  8515                           
  8516                           ; BSR set to: 14
  8517                           ;spi.c: 43: SSP2CON1bits.SSPEN = 1;
  8518  0155B2  8A72               	bsf	3954,5,c	;volatile
  8519                           
  8520                           ; BSR set to: 14
  8521  0155B4  0012               	return		;funcret
  8522  0155B6                     __end_of__spi_init:
  8523                           	opt stack 0
  8524                           tblptru	equ	0xFF8
  8525                           tblptrh	equ	0xFF7
  8526                           tblptrl	equ	0xFF6
  8527                           tablat	equ	0xFF5
  8528                           prodh	equ	0xFF4
  8529                           prodl	equ	0xFF3
  8530                           postinc0	equ	0xFEE
  8531                           wreg	equ	0xFE8
  8532                           postdec1	equ	0xFE5
  8533                           fsr1h	equ	0xFE2
  8534                           fsr1l	equ	0xFE1
  8535                           indf2	equ	0xFDF
  8536                           fsr2h	equ	0xFDA
  8537                           fsr2l	equ	0xFD9
  8538                           status	equ	0xFD8
  8539                           
  8540 ;; *************** function __flash_set_page_size *****************
  8541 ;; Defined at:
  8542 ;;		line 99 in file "flash.c"
  8543 ;; Parameters:    Size  Location     Type
  8544 ;;  size            1    wreg     enum E7054
  8545 ;; Auto vars:     Size  Location     Type
  8546 ;;  size            1   23[BANK0 ] enum E7054
  8547 ;;  command         4   19[BANK0 ] unsigned char [4]
  8548 ;; Return value:  Size  Location     Type
  8549 ;;                  1    wreg      void 
  8550 ;; Registers used:
  8551 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8552 ;; Tracked objects:
  8553 ;;		On entry : 0/0
  8554 ;;		On exit  : 0/0
  8555 ;;		Unchanged: 0/0
  8556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8558 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8559 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8560 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8561 ;;Total ram usage:        5 bytes
  8562 ;; Hardware stack levels used:    1
  8563 ;; Hardware stack levels required when called:   13
  8564 ;; This function calls:
  8565 ;;		__flash_is_busy
  8566 ;;		_memcpy
  8567 ;;		_spi_tx
  8568 ;; This function is called by:
  8569 ;;		_flash_init
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text15
  8574  0143D4                     __ptext15:
  8575                           	opt stack 0
  8576  0143D4                     __flash_set_page_size:
  8577                           	opt stack 15
  8578                           
  8579                           ; BSR set to: 14
  8580                           ;incstack = 0
  8581                           ;__flash_set_page_size@size stored from wreg
  8582  0143D4  0100               	movlb	0	; () banked
  8583  0143D6  6F77               	movwf	__flash_set_page_size@size& (0+255),b
  8584  0143D8                     
  8585                           ;flash.c: 101: uint8_t command[4];;flash.c: 104: while(_flash_is_busy());
  8586  0143D8  EC70  F0AD         	call	__flash_is_busy	;wreg free
  8587  0143DC  0900               	iorlw	0
  8588  0143DE  A4D8               	btfss	status,2,c
  8589  0143E0  D7FB               	goto	l16166
  8590                           
  8591                           ;flash.c: 107: if(size==FLASH_PAGE_SIZE_512)
  8592  0143E2  0100               	movlb	0	; () banked
  8593  0143E4  5177               	movf	__flash_set_page_size@size& (0+255),w,b
  8594  0143E6  A4D8               	btfss	status,2,c
  8595  0143E8  D00E               	goto	l1536
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;flash.c: 108: memcpy(command, flash_command_pagesize_512, 4);
  8599  0143EA  0E73               	movlw	low __flash_set_page_size@command
  8600  0143EC  6F60               	movwf	memcpy@d1& (0+255),b
  8601  0143EE  0E00               	movlw	high __flash_set_page_size@command
  8602  0143F0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8603  0143F2  0EE1               	movlw	low _flash_command_pagesize_512
  8604  0143F4  6F62               	movwf	memcpy@s1& (0+255),b
  8605  0143F6  0EA2               	movlw	high _flash_command_pagesize_512
  8606  0143F8  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8607  0143FA  0E00               	movlw	0
  8608  0143FC  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8609  0143FE  0E04               	movlw	4
  8610  014400  6F64               	movwf	memcpy@n& (0+255),b
  8611  014402  ECF2  F0A3         	call	_memcpy	;wreg free
  8612  014406                     l1536:
  8613                           
  8614                           ;flash.c: 109: if(size==FLASH_PAGE_SIZE_528)
  8615  014406  0100               	movlb	0	; () banked
  8616  014408  0577               	decf	__flash_set_page_size@size& (0+255),w,b
  8617  01440A  A4D8               	btfss	status,2,c
  8618  01440C  D00E               	goto	l1537
  8619                           
  8620                           ; BSR set to: 0
  8621                           ;flash.c: 110: memcpy(command, flash_command_pagesize_528, 4);
  8622  01440E  0E73               	movlw	low __flash_set_page_size@command
  8623  014410  6F60               	movwf	memcpy@d1& (0+255),b
  8624  014412  0E00               	movlw	high __flash_set_page_size@command
  8625  014414  6F61               	movwf	(memcpy@d1+1)& (0+255),b
  8626  014416  0EDD               	movlw	low _flash_command_pagesize_528
  8627  014418  6F62               	movwf	memcpy@s1& (0+255),b
  8628  01441A  0EA2               	movlw	high _flash_command_pagesize_528
  8629  01441C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
  8630  01441E  0E00               	movlw	0
  8631  014420  6F65               	movwf	(memcpy@n+1)& (0+255),b
  8632  014422  0E04               	movlw	4
  8633  014424  6F64               	movwf	memcpy@n& (0+255),b
  8634  014426  ECF2  F0A3         	call	_memcpy	;wreg free
  8635  01442A                     l1537:
  8636                           
  8637                           ;flash.c: 113: spi_tx(command, 4);
  8638  01442A  0E73               	movlw	low __flash_set_page_size@command
  8639  01442C  0100               	movlb	0	; () banked
  8640  01442E  6F60               	movwf	spi_tx@data& (0+255),b
  8641  014430  0E00               	movlw	high __flash_set_page_size@command
  8642  014432  6F61               	movwf	(spi_tx@data+1)& (0+255),b
  8643  014434  0E00               	movlw	0
  8644  014436  6F63               	movwf	(spi_tx@length+1)& (0+255),b
  8645  014438  0E04               	movlw	4
  8646  01443A  6F62               	movwf	spi_tx@length& (0+255),b
  8647  01443C  EC63  F0A5         	call	_spi_tx	;wreg free
  8648  014440  0012               	return		;funcret
  8649  014442                     __end_of__flash_set_page_size:
  8650                           	opt stack 0
  8651                           tblptru	equ	0xFF8
  8652                           tblptrh	equ	0xFF7
  8653                           tblptrl	equ	0xFF6
  8654                           tablat	equ	0xFF5
  8655                           prodh	equ	0xFF4
  8656                           prodl	equ	0xFF3
  8657                           postinc0	equ	0xFEE
  8658                           wreg	equ	0xFE8
  8659                           postdec1	equ	0xFE5
  8660                           fsr1h	equ	0xFE2
  8661                           fsr1l	equ	0xFE1
  8662                           indf2	equ	0xFDF
  8663                           fsr2h	equ	0xFDA
  8664                           fsr2l	equ	0xFD9
  8665                           status	equ	0xFD8
  8666                           
  8667 ;; *************** function _fat_init *****************
  8668 ;; Defined at:
  8669 ;;		line 1404 in file "fat16.c"
  8670 ;; Parameters:    Size  Location     Type
  8671 ;;		None
  8672 ;; Auto vars:     Size  Location     Type
  8673 ;;		None
  8674 ;; Return value:  Size  Location     Type
  8675 ;;                  1    wreg      void 
  8676 ;; Registers used:
  8677 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8678 ;; Tracked objects:
  8679 ;;		On entry : 0/0
  8680 ;;		On exit  : 0/0
  8681 ;;		Unchanged: 0/0
  8682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8687 ;;Total ram usage:        0 bytes
  8688 ;; Hardware stack levels used:    1
  8689 ;; Hardware stack levels required when called:   16
  8690 ;; This function calls:
  8691 ;;		_fat_get_format_status
  8692 ;;		_fat_restore_mbr_fbr
  8693 ;; This function is called by:
  8694 ;;		_system_init
  8695 ;; This function uses a non-reentrant model
  8696 ;;
  8697                           
  8698                           	psect	text16
  8699  015CD8                     __ptext16:
  8700                           	opt stack 0
  8701  015CD8                     _fat_init:
  8702                           	opt stack 13
  8703                           
  8704                           ;fat16.c: 1407: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  8705                           
  8706                           ;incstack = 0
  8707  015CD8  ECB2  F098         	call	_fat_get_format_status	;wreg free
  8708  015CDC  0900               	iorlw	0
  8709  015CDE  A4D8               	btfss	status,2,c
  8710  015CE0  0012               	return	
  8711                           
  8712                           ;fat16.c: 1408: {;fat16.c: 1416: fat_restore_mbr_fbr();
  8713  015CE2  ECA9  F09D         	call	_fat_restore_mbr_fbr	;wreg free
  8714  015CE6  0012               	return	
  8715  015CE8                     __end_of_fat_init:
  8716                           	opt stack 0
  8717                           tblptru	equ	0xFF8
  8718                           tblptrh	equ	0xFF7
  8719                           tblptrl	equ	0xFF6
  8720                           tablat	equ	0xFF5
  8721                           prodh	equ	0xFF4
  8722                           prodl	equ	0xFF3
  8723                           postinc0	equ	0xFEE
  8724                           wreg	equ	0xFE8
  8725                           postdec1	equ	0xFE5
  8726                           fsr1h	equ	0xFE2
  8727                           fsr1l	equ	0xFE1
  8728                           indf2	equ	0xFDF
  8729                           fsr2h	equ	0xFDA
  8730                           fsr2l	equ	0xFD9
  8731                           status	equ	0xFD8
  8732                           
  8733 ;; *************** function _fat_restore_mbr_fbr *****************
  8734 ;; Defined at:
  8735 ;;		line 1321 in file "fat16.c"
  8736 ;; Parameters:    Size  Location     Type
  8737 ;;		None
  8738 ;; Auto vars:     Size  Location     Type
  8739 ;;  cntr            2   36[BANK0 ] unsigned int 
  8740 ;; Return value:  Size  Location     Type
  8741 ;;                  1    wreg      unsigned char 
  8742 ;; Registers used:
  8743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8744 ;; Tracked objects:
  8745 ;;		On entry : 0/0
  8746 ;;		On exit  : 0/0
  8747 ;;		Unchanged: 0/0
  8748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8750 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8752 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8753 ;;Total ram usage:        2 bytes
  8754 ;; Hardware stack levels used:    1
  8755 ;; Hardware stack levels required when called:   15
  8756 ;; This function calls:
  8757 ;;		__get_fbr
  8758 ;;		__get_mbr
  8759 ;;		_flash_sector_write
  8760 ;; This function is called by:
  8761 ;;		_fat_init
  8762 ;; This function uses a non-reentrant model
  8763 ;;
  8764                           
  8765                           	psect	text17
  8766  013B52                     __ptext17:
  8767                           	opt stack 0
  8768  013B52                     _fat_restore_mbr_fbr:
  8769                           	opt stack 13
  8770                           
  8771                           ;fat16.c: 1323: uint16_t cntr;;fat16.c: 1326: for(cntr=0; cntr<512; ++cntr)
  8772                           
  8773                           ;incstack = 0
  8774  013B52  0E00               	movlw	0
  8775  013B54  0100               	movlb	0	; () banked
  8776  013B56  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8777  013B58  0E00               	movlw	0
  8778  013B5A  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8779  013B5C                     l16396:
  8780                           
  8781                           ; BSR set to: 0
  8782  013B5C  0E02               	movlw	2
  8783  013B5E  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8784  013B60  B0D8               	btfsc	status,0,c
  8785  013B62  D011               	goto	u15600
  8786                           
  8787                           ; BSR set to: 0
  8788                           ;fat16.c: 1327: {;fat16.c: 1328: buffer[cntr] = _get_mbr(cntr);
  8789                           
  8790                           ; BSR set to: 0
  8791                           
  8792                           ; BSR set to: 0
  8793  013B64  0E00               	movlw	low _buffer
  8794  013B66  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8795  013B68  6ED9               	movwf	fsr2l,c
  8796  013B6A  0E0A               	movlw	high _buffer
  8797  013B6C  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8798  013B6E  6EDA               	movwf	fsr2h,c
  8799  013B70  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_mbr@idx
  8800  013B74  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_mbr@idx+1
  8801  013B78  EC90  F094         	call	__get_mbr	;wreg free
  8802  013B7C  6EDF               	movwf	indf2,c
  8803  013B7E  0100               	movlb	0	; () banked
  8804  013B80  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8805  013B82  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8806  013B84  D7EB               	goto	l16396
  8807  013B86                     u15600:
  8808                           
  8809                           ; BSR set to: 0
  8810                           ;fat16.c: 1329: };fat16.c: 1330: flash_sector_write(0, buffer);
  8811                           
  8812                           ; BSR set to: 0
  8813  013B86  0E00               	movlw	0
  8814  013B88  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8815  013B8A  0E00               	movlw	0
  8816  013B8C  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8817  013B8E  0E00               	movlw	low _buffer
  8818  013B90  6F81               	movwf	flash_sector_write@data& (0+255),b
  8819  013B92  0E0A               	movlw	high _buffer
  8820  013B94  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8821  013B96  EC0B  F0A8         	call	_flash_sector_write	;wreg free
  8822                           
  8823                           ;fat16.c: 1333: for(cntr=0; cntr<512; ++cntr)
  8824  013B9A  0E00               	movlw	0
  8825  013B9C  0100               	movlb	0	; () banked
  8826  013B9E  6F85               	movwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),b
  8827  013BA0  0E00               	movlw	0
  8828  013BA2  6F84               	movwf	fat_restore_mbr_fbr@cntr& (0+255),b
  8829  013BA4                     l16410:
  8830                           
  8831                           ; BSR set to: 0
  8832  013BA4  0E02               	movlw	2
  8833  013BA6  5D85               	subwf	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8834  013BA8  B0D8               	btfsc	status,0,c
  8835  013BAA  D011               	goto	u15620
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;fat16.c: 1334: {;fat16.c: 1335: buffer[cntr] = _get_fbr(cntr);
  8839                           
  8840                           ; BSR set to: 0
  8841                           
  8842                           ; BSR set to: 0
  8843  013BAC  0E00               	movlw	low _buffer
  8844  013BAE  2584               	addwf	fat_restore_mbr_fbr@cntr& (0+255),w,b
  8845  013BB0  6ED9               	movwf	fsr2l,c
  8846  013BB2  0E0A               	movlw	high _buffer
  8847  013BB4  2185               	addwfc	(fat_restore_mbr_fbr@cntr+1)& (0+255),w,b
  8848  013BB6  6EDA               	movwf	fsr2h,c
  8849  013BB8  C084  F060         	movff	fat_restore_mbr_fbr@cntr,__get_fbr@idx
  8850  013BBC  C085  F061         	movff	fat_restore_mbr_fbr@cntr+1,__get_fbr@idx+1
  8851  013BC0  EC3B  F06D         	call	__get_fbr	;wreg free
  8852  013BC4  6EDF               	movwf	indf2,c
  8853  013BC6  0100               	movlb	0	; () banked
  8854  013BC8  4B84               	infsnz	fat_restore_mbr_fbr@cntr& (0+255),f,b
  8855  013BCA  2B85               	incf	(fat_restore_mbr_fbr@cntr+1)& (0+255),f,b
  8856  013BCC  D7EB               	goto	l16410
  8857  013BCE                     u15620:
  8858                           
  8859                           ; BSR set to: 0
  8860                           ;fat16.c: 1336: };fat16.c: 1337: flash_sector_write(1, buffer);
  8861                           
  8862                           ; BSR set to: 0
  8863  013BCE  0E00               	movlw	0
  8864  013BD0  6F80               	movwf	(flash_sector_write@page+1)& (0+255),b
  8865  013BD2  0E01               	movlw	1
  8866  013BD4  6F7F               	movwf	flash_sector_write@page& (0+255),b
  8867  013BD6  0E00               	movlw	low _buffer
  8868  013BD8  6F81               	movwf	flash_sector_write@data& (0+255),b
  8869  013BDA  0E0A               	movlw	high _buffer
  8870  013BDC  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
  8871  013BDE  EC0B  F0A8         	call	_flash_sector_write	;wreg free
  8872  013BE2  0012               	return	
  8873  013BE4                     __end_of_fat_restore_mbr_fbr:
  8874                           	opt stack 0
  8875                           tblptru	equ	0xFF8
  8876                           tblptrh	equ	0xFF7
  8877                           tblptrl	equ	0xFF6
  8878                           tablat	equ	0xFF5
  8879                           prodh	equ	0xFF4
  8880                           prodl	equ	0xFF3
  8881                           postinc0	equ	0xFEE
  8882                           wreg	equ	0xFE8
  8883                           postdec1	equ	0xFE5
  8884                           fsr1h	equ	0xFE2
  8885                           fsr1l	equ	0xFE1
  8886                           indf2	equ	0xFDF
  8887                           fsr2h	equ	0xFDA
  8888                           fsr2l	equ	0xFD9
  8889                           status	equ	0xFD8
  8890                           
  8891 ;; *************** function _fat_get_format_status *****************
  8892 ;; Defined at:
  8893 ;;		line 1293 in file "fat16.c"
  8894 ;; Parameters:    Size  Location     Type
  8895 ;;		None
  8896 ;; Auto vars:     Size  Location     Type
  8897 ;;  cntr            2   45[BANK0 ] unsigned int 
  8898 ;; Return value:  Size  Location     Type
  8899 ;;                  1    wreg      enum E7028
  8900 ;; Registers used:
  8901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8902 ;; Tracked objects:
  8903 ;;		On entry : 0/0
  8904 ;;		On exit  : 0/0
  8905 ;;		Unchanged: 0/0
  8906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8907 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8908 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8909 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8910 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8911 ;;Total ram usage:        4 bytes
  8912 ;; Hardware stack levels used:    1
  8913 ;; Hardware stack levels required when called:   15
  8914 ;; This function calls:
  8915 ;;		__get_fbr
  8916 ;;		__get_mbr
  8917 ;;		_flash_sector_read
  8918 ;; This function is called by:
  8919 ;;		_fat_init
  8920 ;; This function uses a non-reentrant model
  8921 ;;
  8922                           
  8923                           	psect	text18
  8924  013164                     __ptext18:
  8925                           	opt stack 0
  8926  013164                     _fat_get_format_status:
  8927                           	opt stack 13
  8928                           
  8929                           ;fat16.c: 1295: uint16_t cntr;;fat16.c: 1298: flash_sector_read(0, buffer);
  8930                           
  8931                           ;incstack = 0
  8932  013164  0E00               	movlw	0
  8933  013166  0100               	movlb	0	; () banked
  8934  013168  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  8935  01316A  0E00               	movlw	0
  8936  01316C  6F87               	movwf	flash_sector_read@page& (0+255),b
  8937  01316E  0E00               	movlw	low _buffer
  8938  013170  6F89               	movwf	flash_sector_read@data& (0+255),b
  8939  013172  0E0A               	movlw	high _buffer
  8940  013174  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  8941  013176  EC12  F0AD         	call	_flash_sector_read	;wreg free
  8942                           
  8943                           ;fat16.c: 1299: for(cntr=0; cntr<512; ++cntr)
  8944  01317A  0E00               	movlw	0
  8945  01317C  0100               	movlb	0	; () banked
  8946  01317E  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  8947  013180  0E00               	movlw	0
  8948  013182  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  8949  013184                     l16358:
  8950                           
  8951                           ; BSR set to: 0
  8952  013184  0E02               	movlw	2
  8953  013186  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  8954  013188  B0D8               	btfsc	status,0,c
  8955  01318A  D017               	goto	u15550
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;fat16.c: 1300: {;fat16.c: 1301: if(buffer[cntr] != _get_mbr(cntr))
  8959                           
  8960                           ; BSR set to: 0
  8961                           
  8962                           ; BSR set to: 0
  8963  01318C  0E00               	movlw	low _buffer
  8964  01318E  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  8965  013190  6ED9               	movwf	fsr2l,c
  8966  013192  0E0A               	movlw	high _buffer
  8967  013194  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  8968  013196  6EDA               	movwf	fsr2h,c
  8969  013198  C08D  F060         	movff	fat_get_format_status@cntr,__get_mbr@idx
  8970  01319C  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  8971  0131A0  EC90  F094         	call	__get_mbr	;wreg free
  8972  0131A4  0100               	movlb	0	; () banked
  8973  0131A6  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  8974  0131A8  50DE               	movf	postinc2,w,c
  8975  0131AA  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  8976  0131AC  B4D8               	btfsc	status,2,c
  8977  0131AE  D002               	goto	l2060
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;fat16.c: 1302: {;fat16.c: 1303: return DRIVE_NOT_FORMATED;
  8981  0131B0  0E00               	movlw	0
  8982                           
  8983                           ; BSR set to: 0
  8984  0131B2  0012               	return	
  8985  0131B4                     l2060:
  8986                           
  8987                           ; BSR set to: 0
  8988                           
  8989                           ; BSR set to: 0
  8990  0131B4  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  8991  0131B6  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  8992  0131B8  D7E5               	goto	l16358
  8993  0131BA                     u15550:
  8994                           
  8995                           ; BSR set to: 0
  8996                           ;fat16.c: 1304: };fat16.c: 1305: };fat16.c: 1308: flash_sector_read(1, buffer);
  8997                           
  8998                           ; BSR set to: 0
  8999  0131BA  0E00               	movlw	0
  9000  0131BC  6F88               	movwf	(flash_sector_read@page+1)& (0+255),b
  9001  0131BE  0E01               	movlw	1
  9002  0131C0  6F87               	movwf	flash_sector_read@page& (0+255),b
  9003  0131C2  0E00               	movlw	low _buffer
  9004  0131C4  6F89               	movwf	flash_sector_read@data& (0+255),b
  9005  0131C6  0E0A               	movlw	high _buffer
  9006  0131C8  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
  9007  0131CA  EC12  F0AD         	call	_flash_sector_read	;wreg free
  9008                           
  9009                           ;fat16.c: 1309: for(cntr=0; cntr<512; ++cntr)
  9010  0131CE  0E00               	movlw	0
  9011  0131D0  0100               	movlb	0	; () banked
  9012  0131D2  6F8E               	movwf	(fat_get_format_status@cntr+1)& (0+255),b
  9013  0131D4  0E00               	movlw	0
  9014  0131D6  6F8D               	movwf	fat_get_format_status@cntr& (0+255),b
  9015  0131D8                     l16376:
  9016                           
  9017                           ; BSR set to: 0
  9018  0131D8  0E02               	movlw	2
  9019  0131DA  5D8E               	subwf	(fat_get_format_status@cntr+1)& (0+255),w,b
  9020  0131DC  B0D8               	btfsc	status,0,c
  9021  0131DE  D017               	goto	u15580
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;fat16.c: 1310: {;fat16.c: 1311: if(buffer[cntr] != _get_fbr(cntr))
  9025                           
  9026                           ; BSR set to: 0
  9027                           
  9028                           ; BSR set to: 0
  9029  0131E0  0E00               	movlw	low _buffer
  9030  0131E2  258D               	addwf	fat_get_format_status@cntr& (0+255),w,b
  9031  0131E4  6ED9               	movwf	fsr2l,c
  9032  0131E6  0E0A               	movlw	high _buffer
  9033  0131E8  218E               	addwfc	(fat_get_format_status@cntr+1)& (0+255),w,b
  9034  0131EA  6EDA               	movwf	fsr2h,c
  9035  0131EC  C08D  F060         	movff	fat_get_format_status@cntr,__get_fbr@idx
  9036  0131F0  C08E  F061         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  9037  0131F4  EC3B  F06D         	call	__get_fbr	;wreg free
  9038  0131F8  0100               	movlb	0	; () banked
  9039  0131FA  6F8C               	movwf	(??_fat_get_format_status+1)& (0+255),b
  9040  0131FC  50DE               	movf	postinc2,w,c
  9041  0131FE  198C               	xorwf	(??_fat_get_format_status+1)& (0+255),w,b
  9042  013200  B4D8               	btfsc	status,2,c
  9043  013202  D002               	goto	l2064
  9044                           
  9045                           ; BSR set to: 0
  9046                           ;fat16.c: 1312: {;fat16.c: 1313: return DRIVE_NOT_FORMATED;
  9047  013204  0E00               	movlw	0
  9048                           
  9049                           ; BSR set to: 0
  9050  013206  0012               	return	
  9051  013208                     l2064:
  9052                           
  9053                           ; BSR set to: 0
  9054                           
  9055                           ; BSR set to: 0
  9056  013208  4B8D               	infsnz	fat_get_format_status@cntr& (0+255),f,b
  9057  01320A  2B8E               	incf	(fat_get_format_status@cntr+1)& (0+255),f,b
  9058  01320C  D7E5               	goto	l16376
  9059  01320E                     u15580:
  9060                           
  9061                           ; BSR set to: 0
  9062                           ;fat16.c: 1314: };fat16.c: 1315: };fat16.c: 1318: return DRIVE_FORMATED;
  9063                           
  9064                           ; BSR set to: 0
  9065  01320E  0E01               	movlw	1
  9066  013210  0012               	return	
  9067  013212                     __end_of_fat_get_format_status:
  9068                           	opt stack 0
  9069                           tblptru	equ	0xFF8
  9070                           tblptrh	equ	0xFF7
  9071                           tblptrl	equ	0xFF6
  9072                           tablat	equ	0xFF5
  9073                           prodh	equ	0xFF4
  9074                           prodl	equ	0xFF3
  9075                           postinc0	equ	0xFEE
  9076                           wreg	equ	0xFE8
  9077                           postdec1	equ	0xFE5
  9078                           fsr1h	equ	0xFE2
  9079                           fsr1l	equ	0xFE1
  9080                           indf2	equ	0xFDF
  9081                           postinc2	equ	0xFDE
  9082                           fsr2h	equ	0xFDA
  9083                           fsr2l	equ	0xFD9
  9084                           status	equ	0xFD8
  9085                           
  9086 ;; *************** function __get_mbr *****************
  9087 ;; Defined at:
  9088 ;;		line 1038 in file "fat16.c"
  9089 ;; Parameters:    Size  Location     Type
  9090 ;;  idx             2    0[BANK0 ] unsigned int 
  9091 ;; Auto vars:     Size  Location     Type
  9092 ;;		None
  9093 ;; Return value:  Size  Location     Type
  9094 ;;                  1    wreg      unsigned char 
  9095 ;; Registers used:
  9096 ;;		wreg, status,2, status,0
  9097 ;; Tracked objects:
  9098 ;;		On entry : 0/0
  9099 ;;		On exit  : 0/0
  9100 ;;		Unchanged: 0/0
  9101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9102 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9104 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9105 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9106 ;;Total ram usage:        4 bytes
  9107 ;; Hardware stack levels used:    1
  9108 ;; Hardware stack levels required when called:   10
  9109 ;; This function calls:
  9110 ;;		Nothing
  9111 ;; This function is called by:
  9112 ;;		_fat_get_format_status
  9113 ;;		_fat_restore_mbr_fbr
  9114 ;;		_fat_format
  9115 ;; This function uses a non-reentrant model
  9116 ;;
  9117                           
  9118                           	psect	text19
  9119  012920                     __ptext19:
  9120                           	opt stack 0
  9121  012920                     __get_mbr:
  9122                           	opt stack 17
  9123                           
  9124                           ;fat16.c: 1040: switch (idx)
  9125                           
  9126                           ; BSR set to: 0
  9127                           ;incstack = 0
  9128  012920  D026               	goto	l1932
  9129  012922                     
  9130                           ;fat16.c: 1043: return 0x80;
  9131  012922  0E80               	movlw	128
  9132  012924  0012               	return	
  9133  012926                     
  9134                           ;fat16.c: 1045: return 0;
  9135  012926  0E00               	movlw	0
  9136  012928  0012               	return	
  9137  01292A                     
  9138                           ;fat16.c: 1047: return 2;
  9139  01292A  0E02               	movlw	2
  9140  01292C  0012               	return	
  9141  01292E                     
  9142                           ;fat16.c: 1049: return 0;
  9143  01292E  0E00               	movlw	0
  9144  012930  0012               	return	
  9145  012932                     
  9146                           ;fat16.c: 1051: return 0x04;
  9147  012932  0E04               	movlw	4
  9148  012934  0012               	return	
  9149  012936                     
  9150                           ;fat16.c: 1053: return 2;
  9151  012936  0E02               	movlw	2
  9152  012938  0012               	return	
  9153  01293A                     
  9154                           ;fat16.c: 1055: return 3;
  9155  01293A  0E03               	movlw	3
  9156  01293C  0012               	return	
  9157  01293E                     
  9158                           ;fat16.c: 1057: return 8;
  9159  01293E  0E08               	movlw	8
  9160  012940  0012               	return	
  9161  012942                     
  9162                           ;fat16.c: 1059: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xF
      +                          F));
  9163  012942  0E01               	movlw	1
  9164  012944  0012               	return	
  9165  012946                     
  9166                           ;fat16.c: 1061: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8
      +                          )&0xFF));
  9167  012946  0E00               	movlw	0
  9168  012948  0012               	return	
  9169  01294A                     
  9170                           ;fat16.c: 1063: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
  9171  01294A  0E00               	movlw	0
  9172  01294C  0012               	return	
  9173  01294E                     
  9174                           ;fat16.c: 1065: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9175  01294E  0E00               	movlw	0
  9176  012950  0012               	return	
  9177  012952                     
  9178                           ;fat16.c: 1067: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
  9179  012952  0EFF               	movlw	255
  9180  012954  0012               	return	
  9181  012956                     
  9182                           ;fat16.c: 1069: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
  9183  012956  0E1F               	movlw	31
  9184  012958  0012               	return	
  9185  01295A                     
  9186                           ;fat16.c: 1071: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
  9187  01295A  0E00               	movlw	0
  9188  01295C  0012               	return	
  9189  01295E                     
  9190                           ;fat16.c: 1073: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
  9191  01295E  0E00               	movlw	0
  9192  012960  0012               	return	
  9193  012962                     
  9194                           ;fat16.c: 1075: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  9195  012962  0E55               	movlw	85
  9196  012964  0012               	return	
  9197  012966                     
  9198                           ;fat16.c: 1077: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  9199  012966  0EAA               	movlw	170
  9200  012968  0012               	return	
  9201  01296A                     
  9202                           ;fat16.c: 1079: return 0X00;
  9203  01296A  0E00               	movlw	0
  9204                           
  9205                           ;fat16.c: 1080: }
  9206  01296C  0012               	return	
  9207  01296E                     l1932:
  9208  01296E  C060  F062         	movff	__get_mbr@idx,??__get_mbr
  9209  012972  C061  F063         	movff	__get_mbr@idx+1,??__get_mbr+1
  9210                           
  9211                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9212                           ; Switch size 1, requested type "space"
  9213                           ; Number of cases is 1, Range of values is 1 to 1
  9214                           ; switch strategies available:
  9215                           ; Name         Instructions Cycles
  9216                           ; simple_byte            4     3 (average)
  9217                           ;	Chosen strategy is simple_byte
  9218  012976  0100               	movlb	0	; () banked
  9219  012978  5163               	movf	(??__get_mbr+1)& (0+255),w,b
  9220  01297A  0A01               	xorlw	1	; case 1
  9221  01297C  A4D8               	btfss	status,2,c
  9222  01297E  D7F5               	goto	l1952
  9223                           
  9224                           ; BSR set to: 0
  9225                           ; Switch size 1, requested type "space"
  9226                           ; Number of cases is 18, Range of values is 190 to 255
  9227                           ; switch strategies available:
  9228                           ; Name         Instructions Cycles
  9229                           ; simple_byte           55    28 (average)
  9230                           ;	Chosen strategy is simple_byte
  9231  012980  5162               	movf	??__get_mbr& (0+255),w,b
  9232  012982  0ABE               	xorlw	190	; case 190
  9233  012984  B4D8               	btfsc	status,2,c
  9234  012986  D7CD               	goto	l1933
  9235  012988  0A01               	xorlw	1	; case 191
  9236  01298A  B4D8               	btfsc	status,2,c
  9237  01298C  D7CC               	goto	l1935
  9238  01298E  0A7F               	xorlw	127	; case 192
  9239  012990  B4D8               	btfsc	status,2,c
  9240  012992  D7CB               	goto	l1936
  9241  012994  0A01               	xorlw	1	; case 193
  9242  012996  B4D8               	btfsc	status,2,c
  9243  012998  D7CA               	goto	l1937
  9244  01299A  0A03               	xorlw	3	; case 194
  9245  01299C  B4D8               	btfsc	status,2,c
  9246  01299E  D7C9               	goto	l1938
  9247  0129A0  0A01               	xorlw	1	; case 195
  9248  0129A2  B4D8               	btfsc	status,2,c
  9249  0129A4  D7C8               	goto	l1939
  9250  0129A6  0A07               	xorlw	7	; case 196
  9251  0129A8  B4D8               	btfsc	status,2,c
  9252  0129AA  D7C7               	goto	l1940
  9253  0129AC  0A01               	xorlw	1	; case 197
  9254  0129AE  B4D8               	btfsc	status,2,c
  9255  0129B0  D7C6               	goto	l1941
  9256  0129B2  0A03               	xorlw	3	; case 198
  9257  0129B4  B4D8               	btfsc	status,2,c
  9258  0129B6  D7C5               	goto	l1942
  9259  0129B8  0A01               	xorlw	1	; case 199
  9260  0129BA  B4D8               	btfsc	status,2,c
  9261  0129BC  D7C4               	goto	l1943
  9262  0129BE  0A0F               	xorlw	15	; case 200
  9263  0129C0  B4D8               	btfsc	status,2,c
  9264  0129C2  D7C3               	goto	l1944
  9265  0129C4  0A01               	xorlw	1	; case 201
  9266  0129C6  B4D8               	btfsc	status,2,c
  9267  0129C8  D7C2               	goto	l1945
  9268  0129CA  0A03               	xorlw	3	; case 202
  9269  0129CC  B4D8               	btfsc	status,2,c
  9270  0129CE  D7C1               	goto	l1946
  9271  0129D0  0A01               	xorlw	1	; case 203
  9272  0129D2  B4D8               	btfsc	status,2,c
  9273  0129D4  D7C0               	goto	l1947
  9274  0129D6  0A07               	xorlw	7	; case 204
  9275  0129D8  B4D8               	btfsc	status,2,c
  9276  0129DA  D7BF               	goto	l1948
  9277  0129DC  0A01               	xorlw	1	; case 205
  9278  0129DE  B4D8               	btfsc	status,2,c
  9279  0129E0  D7BE               	goto	l1949
  9280  0129E2  0A33               	xorlw	51	; case 254
  9281  0129E4  B4D8               	btfsc	status,2,c
  9282  0129E6  D7BD               	goto	l1950
  9283  0129E8  0A01               	xorlw	1	; case 255
  9284  0129EA  B4D8               	btfsc	status,2,c
  9285  0129EC  D7BC               	goto	l1951
  9286  0129EE  D7BD               	goto	l1952
  9287  0129F0                     __end_of__get_mbr:
  9288                           	opt stack 0
  9289                           tblptru	equ	0xFF8
  9290                           tblptrh	equ	0xFF7
  9291                           tblptrl	equ	0xFF6
  9292                           tablat	equ	0xFF5
  9293                           prodh	equ	0xFF4
  9294                           prodl	equ	0xFF3
  9295                           postinc0	equ	0xFEE
  9296                           wreg	equ	0xFE8
  9297                           postdec1	equ	0xFE5
  9298                           fsr1h	equ	0xFE2
  9299                           fsr1l	equ	0xFE1
  9300                           indf2	equ	0xFDF
  9301                           postinc2	equ	0xFDE
  9302                           fsr2h	equ	0xFDA
  9303                           fsr2l	equ	0xFD9
  9304                           status	equ	0xFD8
  9305                           
  9306 ;; *************** function __get_fbr *****************
  9307 ;; Defined at:
  9308 ;;		line 1083 in file "fat16.c"
  9309 ;; Parameters:    Size  Location     Type
  9310 ;;  idx             2    0[BANK0 ] unsigned int 
  9311 ;; Auto vars:     Size  Location     Type
  9312 ;;		None
  9313 ;; Return value:  Size  Location     Type
  9314 ;;                  1    wreg      unsigned char 
  9315 ;; Registers used:
  9316 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  9317 ;; Tracked objects:
  9318 ;;		On entry : 0/0
  9319 ;;		On exit  : 0/0
  9320 ;;		Unchanged: 0/0
  9321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9322 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9324 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9325 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9326 ;;Total ram usage:        4 bytes
  9327 ;; Hardware stack levels used:    1
  9328 ;; Hardware stack levels required when called:   10
  9329 ;; This function calls:
  9330 ;;		Nothing
  9331 ;; This function is called by:
  9332 ;;		_fat_get_format_status
  9333 ;;		_fat_restore_mbr_fbr
  9334 ;;		_fat_format
  9335 ;; This function uses a non-reentrant model
  9336 ;;
  9337                           
  9338                           	psect	text20
  9339  00DA76                     __ptext20:
  9340                           	opt stack 0
  9341  00DA76                     __get_fbr:
  9342                           	opt stack 17
  9343                           
  9344                           ;fat16.c: 1085: switch (idx)
  9345                           
  9346                           ;incstack = 0
  9347  00DA76  D098               	goto	l1956
  9348  00DA78                     
  9349                           ;fat16.c: 1088: return 0xEB;
  9350  00DA78  0EEB               	movlw	235
  9351  00DA7A  0012               	return	
  9352  00DA7C                     
  9353                           ;fat16.c: 1090: return 0x3C;
  9354  00DA7C  0E3C               	movlw	60
  9355  00DA7E  0012               	return	
  9356  00DA80                     
  9357                           ;fat16.c: 1092: return 0x90;
  9358  00DA80  0E90               	movlw	144
  9359  00DA82  0012               	return	
  9360  00DA84                     
  9361                           ;fat16.c: 1094: return "MSDOS5.0"[0];
  9362  00DA84  0E0B               	movlw	low STR_7
  9363  00DA86  6EF6               	movwf	tblptrl,c
  9364  00DA88                     	if	1	;There is more than 1 active tblptr byte
  9365  00DA88  0EA3               	movlw	high STR_7
  9366  00DA8A  6EF7               	movwf	tblptrh,c
  9367  00DA8C                     	endif
  9368  00DA8C                     	if	1	;There are 3 active tblptr bytes
  9369  00DA8C  0E00               	movlw	low (STR_7 shr (0+16))
  9370  00DA8E  6EF8               	movwf	tblptru,c
  9371  00DA90                     	endif
  9372  00DA90  0008               	tblrd		*
  9373  00DA92  50F5               	movf	tablat,w,c
  9374  00DA94  0012               	return	
  9375  00DA96                     
  9376                           ;fat16.c: 1096: return "MSDOS5.0"[1];
  9377  00DA96  0E0C               	movlw	low (STR_7+1)
  9378  00DA98  6EF6               	movwf	tblptrl,c
  9379  00DA9A  0EA3               	movlw	high (STR_7+1)
  9380  00DA9C  6EF7               	movwf	tblptrh,c
  9381  00DA9E                     	if	0	;tblptru may be non-zero
  9382  00DA9E                     	endif
  9383  00DA9E                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9384  00DA9E  0E00               	movlw	low (__mediumconst shr (0+16))
  9385  00DAA0  6EF8               	movwf	tblptru,c
  9386  00DAA2                     	endif
  9387  00DAA2  0008               	tblrd		*
  9388  00DAA4  50F5               	movf	tablat,w,c
  9389  00DAA6  0012               	return	
  9390  00DAA8                     
  9391                           ;fat16.c: 1098: return "MSDOS5.0"[2];
  9392  00DAA8  0E0D               	movlw	low (STR_7+2)
  9393  00DAAA  6EF6               	movwf	tblptrl,c
  9394  00DAAC  0EA3               	movlw	high (STR_7+2)
  9395  00DAAE  6EF7               	movwf	tblptrh,c
  9396  00DAB0                     	if	0	;tblptru may be non-zero
  9397  00DAB0                     	endif
  9398  00DAB0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9399  00DAB0  0E00               	movlw	low (__mediumconst shr (0+16))
  9400  00DAB2  6EF8               	movwf	tblptru,c
  9401  00DAB4                     	endif
  9402  00DAB4  0008               	tblrd		*
  9403  00DAB6  50F5               	movf	tablat,w,c
  9404  00DAB8  0012               	return	
  9405  00DABA                     
  9406                           ;fat16.c: 1100: return "MSDOS5.0"[3];
  9407  00DABA  0E0E               	movlw	low (STR_7+3)
  9408  00DABC  6EF6               	movwf	tblptrl,c
  9409  00DABE  0EA3               	movlw	high (STR_7+3)
  9410  00DAC0  6EF7               	movwf	tblptrh,c
  9411  00DAC2                     	if	0	;tblptru may be non-zero
  9412  00DAC2                     	endif
  9413  00DAC2                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9414  00DAC2  0E00               	movlw	low (__mediumconst shr (0+16))
  9415  00DAC4  6EF8               	movwf	tblptru,c
  9416  00DAC6                     	endif
  9417  00DAC6  0008               	tblrd		*
  9418  00DAC8  50F5               	movf	tablat,w,c
  9419  00DACA  0012               	return	
  9420  00DACC                     
  9421                           ;fat16.c: 1102: return "MSDOS5.0"[4];
  9422  00DACC  0E0F               	movlw	low (STR_7+4)
  9423  00DACE  6EF6               	movwf	tblptrl,c
  9424  00DAD0  0EA3               	movlw	high (STR_7+4)
  9425  00DAD2  6EF7               	movwf	tblptrh,c
  9426  00DAD4                     	if	0	;tblptru may be non-zero
  9427  00DAD4                     	endif
  9428  00DAD4                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9429  00DAD4  0E00               	movlw	low (__mediumconst shr (0+16))
  9430  00DAD6  6EF8               	movwf	tblptru,c
  9431  00DAD8                     	endif
  9432  00DAD8  0008               	tblrd		*
  9433  00DADA  50F5               	movf	tablat,w,c
  9434  00DADC  0012               	return	
  9435  00DADE                     
  9436                           ;fat16.c: 1104: return "MSDOS5.0"[5];
  9437  00DADE  0E10               	movlw	low (STR_7+5)
  9438  00DAE0  6EF6               	movwf	tblptrl,c
  9439  00DAE2  0EA3               	movlw	high (STR_7+5)
  9440  00DAE4  6EF7               	movwf	tblptrh,c
  9441  00DAE6                     	if	0	;tblptru may be non-zero
  9442  00DAE6                     	endif
  9443  00DAE6                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9444  00DAE6  0E00               	movlw	low (__mediumconst shr (0+16))
  9445  00DAE8  6EF8               	movwf	tblptru,c
  9446  00DAEA                     	endif
  9447  00DAEA  0008               	tblrd		*
  9448  00DAEC  50F5               	movf	tablat,w,c
  9449  00DAEE  0012               	return	
  9450  00DAF0                     
  9451                           ;fat16.c: 1106: return "MSDOS5.0"[6];
  9452  00DAF0  0E11               	movlw	low (STR_7+6)
  9453  00DAF2  6EF6               	movwf	tblptrl,c
  9454  00DAF4  0EA3               	movlw	high (STR_7+6)
  9455  00DAF6  6EF7               	movwf	tblptrh,c
  9456  00DAF8                     	if	0	;tblptru may be non-zero
  9457  00DAF8                     	endif
  9458  00DAF8                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9459  00DAF8  0E00               	movlw	low (__mediumconst shr (0+16))
  9460  00DAFA  6EF8               	movwf	tblptru,c
  9461  00DAFC                     	endif
  9462  00DAFC  0008               	tblrd		*
  9463  00DAFE  50F5               	movf	tablat,w,c
  9464  00DB00  0012               	return	
  9465  00DB02                     
  9466                           ;fat16.c: 1108: return "MSDOS5.0"[7];
  9467  00DB02  0E12               	movlw	low (STR_7+7)
  9468  00DB04  6EF6               	movwf	tblptrl,c
  9469  00DB06  0EA3               	movlw	high (STR_7+7)
  9470  00DB08  6EF7               	movwf	tblptrh,c
  9471  00DB0A                     	if	0	;tblptru may be non-zero
  9472  00DB0A                     	endif
  9473  00DB0A                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  9474  00DB0A  0E00               	movlw	low (__mediumconst shr (0+16))
  9475  00DB0C  6EF8               	movwf	tblptru,c
  9476  00DB0E                     	endif
  9477  00DB0E  0008               	tblrd		*
  9478  00DB10  50F5               	movf	tablat,w,c
  9479  00DB12  0012               	return	
  9480  00DB14                     
  9481                           ;fat16.c: 1110: return ((unsigned char)((((uint16_t)512))&0xFF));
  9482  00DB14  0E00               	movlw	0
  9483  00DB16  0012               	return	
  9484  00DB18                     
  9485                           ;fat16.c: 1112: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  9486  00DB18  0E02               	movlw	2
  9487  00DB1A  0012               	return	
  9488  00DB1C                     
  9489                           ;fat16.c: 1114: return 1;
  9490  00DB1C  0E01               	movlw	1
  9491  00DB1E  0012               	return	
  9492  00DB20                     
  9493                           ;fat16.c: 1116: return ((unsigned char)((((uint16_t)1))&0xFF));
  9494  00DB20  0E01               	movlw	1
  9495  00DB22  0012               	return	
  9496  00DB24                     
  9497                           ;fat16.c: 1118: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  9498  00DB24  0E00               	movlw	0
  9499  00DB26  0012               	return	
  9500  00DB28                     
  9501                           ;fat16.c: 1120: return 1;
  9502  00DB28  0E01               	movlw	1
  9503  00DB2A  0012               	return	
  9504  00DB2C                     
  9505                           ;fat16.c: 1122: return ((unsigned char)((((uint16_t)64))&0xFF));
  9506  00DB2C  0E40               	movlw	64
  9507  00DB2E  0012               	return	
  9508  00DB30                     
  9509                           ;fat16.c: 1124: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  9510  00DB30  0E00               	movlw	0
  9511  00DB32  0012               	return	
  9512  00DB34                     
  9513                           ;fat16.c: 1126: return ((unsigned char)((((uint16_t)8191))&0xFF));
  9514  00DB34  0EFF               	movlw	255
  9515  00DB36  0012               	return	
  9516  00DB38                     
  9517                           ;fat16.c: 1128: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  9518  00DB38  0E1F               	movlw	31
  9519  00DB3A  0012               	return	
  9520  00DB3C                     
  9521                           ;fat16.c: 1130: return 0XF8;
  9522  00DB3C  0EF8               	movlw	248
  9523  00DB3E  0012               	return	
  9524  00DB40                     
  9525                           ;fat16.c: 1132: return ((unsigned char)((((uint16_t)32))&0xFF));
  9526  00DB40  0E20               	movlw	32
  9527  00DB42  0012               	return	
  9528  00DB44                     
  9529                           ;fat16.c: 1134: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  9530  00DB44  0E00               	movlw	0
  9531  00DB46  0012               	return	
  9532  00DB48                     
  9533                           ;fat16.c: 1136: return ((unsigned char)((((uint16_t)63))&0xFF));
  9534  00DB48  0E3F               	movlw	63
  9535  00DB4A  0012               	return	
  9536  00DB4C                     
  9537                           ;fat16.c: 1138: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  9538  00DB4C  0E00               	movlw	0
  9539  00DB4E  0012               	return	
  9540  00DB50                     
  9541                           ;fat16.c: 1140: return ((unsigned char)((((uint16_t)16))&0xFF));
  9542  00DB50  0E10               	movlw	16
  9543  00DB52  0012               	return	
  9544  00DB54                     
  9545                           ;fat16.c: 1142: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  9546  00DB54  0E00               	movlw	0
  9547  00DB56  0012               	return	
  9548  00DB58                     
  9549                           ;fat16.c: 1144: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
  9550  00DB58  0E00               	movlw	0
  9551  00DB5A  0012               	return	
  9552  00DB5C                     
  9553                           ;fat16.c: 1146: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
  9554  00DB5C  0E00               	movlw	0
  9555  00DB5E  0012               	return	
  9556  00DB60                     
  9557                           ;fat16.c: 1148: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
  9558  00DB60  0E00               	movlw	0
  9559  00DB62  0012               	return	
  9560  00DB64                     
  9561                           ;fat16.c: 1150: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  9562  00DB64  0E00               	movlw	0
  9563  00DB66  0012               	return	
  9564  00DB68                     
  9565                           ;fat16.c: 1152: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  9566  00DB68  0E01               	movlw	1
  9567  00DB6A  0012               	return	
  9568  00DB6C                     
  9569                           ;fat16.c: 1154: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  9570  00DB6C  0E00               	movlw	0
  9571  00DB6E  0012               	return	
  9572  00DB70                     
  9573                           ;fat16.c: 1156: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
  9574  00DB70  0E22               	movlw	34
  9575  00DB72  0012               	return	
  9576  00DB74                     
  9577                           ;fat16.c: 1158: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
  9578  00DB74  0E00               	movlw	0
  9579  00DB76  0012               	return	
  9580  00DB78                     
  9581                           ;fat16.c: 1162: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
  9582                           
  9583                           ;fat16.c: 1161: case 0x2F:
  9584  00DB78  0E00               	movlw	0
  9585  00DB7A  0012               	return	
  9586  00DB7C                     
  9587                           ;fat16.c: 1164: return 'F';
  9588  00DB7C  0E46               	movlw	70
  9589  00DB7E  0012               	return	
  9590  00DB80                     
  9591                           ;fat16.c: 1166: return 'A';
  9592  00DB80  0E41               	movlw	65
  9593  00DB82  0012               	return	
  9594  00DB84                     
  9595                           ;fat16.c: 1168: return 'T';
  9596  00DB84  0E54               	movlw	84
  9597  00DB86  0012               	return	
  9598  00DB88                     
  9599                           ;fat16.c: 1170: return '1';
  9600  00DB88  0E31               	movlw	49
  9601  00DB8A  0012               	return	
  9602  00DB8C                     
  9603                           ;fat16.c: 1172: return '6';
  9604  00DB8C  0E36               	movlw	54
  9605  00DB8E  0012               	return	
  9606  00DB90                     
  9607                           ;fat16.c: 1174: return ' ';
  9608  00DB90  0E20               	movlw	32
  9609  00DB92  0012               	return	
  9610  00DB94                     
  9611                           ;fat16.c: 1176: return ' ';
  9612  00DB94  0E20               	movlw	32
  9613  00DB96  0012               	return	
  9614  00DB98                     
  9615                           ;fat16.c: 1178: return ' ';
  9616  00DB98  0E20               	movlw	32
  9617  00DB9A  0012               	return	
  9618  00DB9C                     
  9619                           ;fat16.c: 1180: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  9620  00DB9C  0E55               	movlw	85
  9621  00DB9E  0012               	return	
  9622  00DBA0                     
  9623                           ;fat16.c: 1182: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  9624  00DBA0  0EAA               	movlw	170
  9625  00DBA2  0012               	return	
  9626  00DBA4                     
  9627                           ;fat16.c: 1184: return 0X00;
  9628  00DBA4  0E00               	movlw	0
  9629                           
  9630                           ;fat16.c: 1185: }
  9631  00DBA6  0012               	return	
  9632  00DBA8                     l1956:
  9633  00DBA8  C060  F062         	movff	__get_fbr@idx,??__get_fbr
  9634  00DBAC  C061  F063         	movff	__get_fbr@idx+1,??__get_fbr+1
  9635                           
  9636                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  9637                           ; Switch size 1, requested type "space"
  9638                           ; Number of cases is 2, Range of values is 0 to 1
  9639                           ; switch strategies available:
  9640                           ; Name         Instructions Cycles
  9641                           ; simple_byte            7     4 (average)
  9642                           ;	Chosen strategy is simple_byte
  9643  00DBB0  0100               	movlb	0	; () banked
  9644  00DBB2  5163               	movf	(??__get_fbr+1)& (0+255),w,b
  9645  00DBB4  0A00               	xorlw	0	; case 0
  9646  00DBB6  B4D8               	btfsc	status,2,c
  9647  00DBB8  D004               	goto	l19996
  9648  00DBBA  0A01               	xorlw	1	; case 1
  9649  00DBBC  B4D8               	btfsc	status,2,c
  9650  00DBBE  D08D               	goto	l19998
  9651  00DBC0  D7F1               	goto	l2006
  9652  00DBC2                     l19996:
  9653                           
  9654                           ; BSR set to: 0
  9655                           ; Switch size 1, requested type "space"
  9656                           ; Number of cases is 46, Range of values is 0 to 61
  9657                           ; switch strategies available:
  9658                           ; Name         Instructions Cycles
  9659                           ; simple_byte          139    70 (average)
  9660                           ;	Chosen strategy is simple_byte
  9661  00DBC2  5162               	movf	??__get_fbr& (0+255),w,b
  9662  00DBC4  0A00               	xorlw	0	; case 0
  9663  00DBC6  B4D8               	btfsc	status,2,c
  9664  00DBC8  D757               	goto	l1957
  9665  00DBCA  0A01               	xorlw	1	; case 1
  9666  00DBCC  B4D8               	btfsc	status,2,c
  9667  00DBCE  D756               	goto	l1959
  9668  00DBD0  0A03               	xorlw	3	; case 2
  9669  00DBD2  B4D8               	btfsc	status,2,c
  9670  00DBD4  D755               	goto	l1960
  9671  00DBD6  0A01               	xorlw	1	; case 3
  9672  00DBD8  B4D8               	btfsc	status,2,c
  9673  00DBDA  D754               	goto	l1961
  9674  00DBDC  0A07               	xorlw	7	; case 4
  9675  00DBDE  B4D8               	btfsc	status,2,c
  9676  00DBE0  D75A               	goto	l1962
  9677  00DBE2  0A01               	xorlw	1	; case 5
  9678  00DBE4  B4D8               	btfsc	status,2,c
  9679  00DBE6  D760               	goto	l1963
  9680  00DBE8  0A03               	xorlw	3	; case 6
  9681  00DBEA  B4D8               	btfsc	status,2,c
  9682  00DBEC  D766               	goto	l1964
  9683  00DBEE  0A01               	xorlw	1	; case 7
  9684  00DBF0  B4D8               	btfsc	status,2,c
  9685  00DBF2  D76C               	goto	l1965
  9686  00DBF4  0A0F               	xorlw	15	; case 8
  9687  00DBF6  B4D8               	btfsc	status,2,c
  9688  00DBF8  D772               	goto	l1966
  9689  00DBFA  0A01               	xorlw	1	; case 9
  9690  00DBFC  B4D8               	btfsc	status,2,c
  9691  00DBFE  D778               	goto	l1967
  9692  00DC00  0A03               	xorlw	3	; case 10
  9693  00DC02  B4D8               	btfsc	status,2,c
  9694  00DC04  D77E               	goto	l1968
  9695  00DC06  0A01               	xorlw	1	; case 11
  9696  00DC08  B4D8               	btfsc	status,2,c
  9697  00DC0A  D784               	goto	l1969
  9698  00DC0C  0A07               	xorlw	7	; case 12
  9699  00DC0E  B4D8               	btfsc	status,2,c
  9700  00DC10  D783               	goto	l1970
  9701  00DC12  0A01               	xorlw	1	; case 13
  9702  00DC14  B4D8               	btfsc	status,2,c
  9703  00DC16  D782               	goto	l1971
  9704  00DC18  0A03               	xorlw	3	; case 14
  9705  00DC1A  B4D8               	btfsc	status,2,c
  9706  00DC1C  D781               	goto	l1972
  9707  00DC1E  0A01               	xorlw	1	; case 15
  9708  00DC20  B4D8               	btfsc	status,2,c
  9709  00DC22  D780               	goto	l1973
  9710  00DC24  0A1F               	xorlw	31	; case 16
  9711  00DC26  B4D8               	btfsc	status,2,c
  9712  00DC28  D77F               	goto	l1974
  9713  00DC2A  0A01               	xorlw	1	; case 17
  9714  00DC2C  B4D8               	btfsc	status,2,c
  9715  00DC2E  D77E               	goto	l1975
  9716  00DC30  0A03               	xorlw	3	; case 18
  9717  00DC32  B4D8               	btfsc	status,2,c
  9718  00DC34  D77D               	goto	l1976
  9719  00DC36  0A01               	xorlw	1	; case 19
  9720  00DC38  B4D8               	btfsc	status,2,c
  9721  00DC3A  D77C               	goto	l1977
  9722  00DC3C  0A07               	xorlw	7	; case 20
  9723  00DC3E  B4D8               	btfsc	status,2,c
  9724  00DC40  D77B               	goto	l1978
  9725  00DC42  0A01               	xorlw	1	; case 21
  9726  00DC44  B4D8               	btfsc	status,2,c
  9727  00DC46  D77A               	goto	l1979
  9728  00DC48  0A03               	xorlw	3	; case 22
  9729  00DC4A  B4D8               	btfsc	status,2,c
  9730  00DC4C  D779               	goto	l1980
  9731  00DC4E  0A01               	xorlw	1	; case 23
  9732  00DC50  B4D8               	btfsc	status,2,c
  9733  00DC52  D778               	goto	l1981
  9734  00DC54  0A0F               	xorlw	15	; case 24
  9735  00DC56  B4D8               	btfsc	status,2,c
  9736  00DC58  D777               	goto	l1982
  9737  00DC5A  0A01               	xorlw	1	; case 25
  9738  00DC5C  B4D8               	btfsc	status,2,c
  9739  00DC5E  D776               	goto	l1983
  9740  00DC60  0A03               	xorlw	3	; case 26
  9741  00DC62  B4D8               	btfsc	status,2,c
  9742  00DC64  D775               	goto	l1984
  9743  00DC66  0A01               	xorlw	1	; case 27
  9744  00DC68  B4D8               	btfsc	status,2,c
  9745  00DC6A  D774               	goto	l1985
  9746  00DC6C  0A07               	xorlw	7	; case 28
  9747  00DC6E  B4D8               	btfsc	status,2,c
  9748  00DC70  D773               	goto	l1986
  9749  00DC72  0A01               	xorlw	1	; case 29
  9750  00DC74  B4D8               	btfsc	status,2,c
  9751  00DC76  D772               	goto	l1987
  9752  00DC78  0A03               	xorlw	3	; case 30
  9753  00DC7A  B4D8               	btfsc	status,2,c
  9754  00DC7C  D771               	goto	l1988
  9755  00DC7E  0A01               	xorlw	1	; case 31
  9756  00DC80  B4D8               	btfsc	status,2,c
  9757  00DC82  D770               	goto	l1989
  9758  00DC84  0A37               	xorlw	55	; case 40
  9759  00DC86  B4D8               	btfsc	status,2,c
  9760  00DC88  D76F               	goto	l1990
  9761  00DC8A  0A01               	xorlw	1	; case 41
  9762  00DC8C  B4D8               	btfsc	status,2,c
  9763  00DC8E  D76E               	goto	l1991
  9764  00DC90  0A05               	xorlw	5	; case 44
  9765  00DC92  B4D8               	btfsc	status,2,c
  9766  00DC94  D76D               	goto	l1992
  9767  00DC96  0A01               	xorlw	1	; case 45
  9768  00DC98  B4D8               	btfsc	status,2,c
  9769  00DC9A  D76C               	goto	l1993
  9770  00DC9C  0A03               	xorlw	3	; case 46
  9771  00DC9E  B4D8               	btfsc	status,2,c
  9772  00DCA0  D76B               	goto	l1994
  9773  00DCA2  0A01               	xorlw	1	; case 47
  9774  00DCA4  B4D8               	btfsc	status,2,c
  9775  00DCA6  D768               	goto	l1994
  9776  00DCA8  0A19               	xorlw	25	; case 54
  9777  00DCAA  B4D8               	btfsc	status,2,c
  9778  00DCAC  D767               	goto	l1996
  9779  00DCAE  0A01               	xorlw	1	; case 55
  9780  00DCB0  B4D8               	btfsc	status,2,c
  9781  00DCB2  D766               	goto	l1997
  9782  00DCB4  0A0F               	xorlw	15	; case 56
  9783  00DCB6  B4D8               	btfsc	status,2,c
  9784  00DCB8  D765               	goto	l1998
  9785  00DCBA  0A01               	xorlw	1	; case 57
  9786  00DCBC  B4D8               	btfsc	status,2,c
  9787  00DCBE  D764               	goto	l1999
  9788  00DCC0  0A03               	xorlw	3	; case 58
  9789  00DCC2  B4D8               	btfsc	status,2,c
  9790  00DCC4  D763               	goto	l2000
  9791  00DCC6  0A01               	xorlw	1	; case 59
  9792  00DCC8  B4D8               	btfsc	status,2,c
  9793  00DCCA  D762               	goto	l2001
  9794  00DCCC  0A07               	xorlw	7	; case 60
  9795  00DCCE  B4D8               	btfsc	status,2,c
  9796  00DCD0  D761               	goto	l2002
  9797  00DCD2  0A01               	xorlw	1	; case 61
  9798  00DCD4  B4D8               	btfsc	status,2,c
  9799  00DCD6  D760               	goto	l2003
  9800  00DCD8  D765               	goto	l2006
  9801  00DCDA                     l19998:
  9802                           
  9803                           ; BSR set to: 0
  9804                           ; Switch size 1, requested type "space"
  9805                           ; Number of cases is 2, Range of values is 254 to 255
  9806                           ; switch strategies available:
  9807                           ; Name         Instructions Cycles
  9808                           ; simple_byte            7     4 (average)
  9809                           ;	Chosen strategy is simple_byte
  9810  00DCDA  5162               	movf	??__get_fbr& (0+255),w,b
  9811  00DCDC  0AFE               	xorlw	254	; case 254
  9812  00DCDE  B4D8               	btfsc	status,2,c
  9813  00DCE0  D75D               	goto	l2004
  9814  00DCE2  0A01               	xorlw	1	; case 255
  9815  00DCE4  B4D8               	btfsc	status,2,c
  9816  00DCE6  D75C               	goto	l2005
  9817  00DCE8  D75D               	goto	l2006
  9818  00DCEA                     __end_of__get_fbr:
  9819                           	opt stack 0
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodh	equ	0xFF4
  9825                           prodl	equ	0xFF3
  9826                           postinc0	equ	0xFEE
  9827                           wreg	equ	0xFE8
  9828                           postdec1	equ	0xFE5
  9829                           fsr1h	equ	0xFE2
  9830                           fsr1l	equ	0xFE1
  9831                           indf2	equ	0xFDF
  9832                           postinc2	equ	0xFDE
  9833                           fsr2h	equ	0xFDA
  9834                           fsr2l	equ	0xFD9
  9835                           status	equ	0xFD8
  9836                           
  9837 ;; *************** function _encoder_init *****************
  9838 ;; Defined at:
  9839 ;;		line 92 in file "encoder.c"
  9840 ;; Parameters:    Size  Location     Type
  9841 ;;		None
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;		None
  9844 ;; Return value:  Size  Location     Type
  9845 ;;                  1    wreg      void 
  9846 ;; Registers used:
  9847 ;;		wreg, status,2, status,0
  9848 ;; Tracked objects:
  9849 ;;		On entry : 0/0
  9850 ;;		On exit  : 0/0
  9851 ;;		Unchanged: 0/0
  9852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9857 ;;Total ram usage:        0 bytes
  9858 ;; Hardware stack levels used:    1
  9859 ;; Hardware stack levels required when called:   10
  9860 ;; This function calls:
  9861 ;;		Nothing
  9862 ;; This function is called by:
  9863 ;;		_system_init
  9864 ;; This function uses a non-reentrant model
  9865 ;;
  9866                           
  9867                           	psect	text21
  9868  015A98                     __ptext21:
  9869                           	opt stack 0
  9870  015A98                     _encoder_init:
  9871                           	opt stack 19
  9872                           
  9873                           ;encoder.c: 94: enc1 = PORTE & 0b00000111;
  9874                           
  9875                           ;incstack = 0
  9876  015A98  5084               	movf	3972,w,c	;volatile
  9877  015A9A  0B07               	andlw	7
  9878  015A9C  0101               	movlb	1	; () banked
  9879  015A9E  6F46               	movwf	_enc1& (0+255),b
  9880                           
  9881                           ;encoder.c: 95: enc2 = PORTA & 0b00000111;
  9882  015AA0  5080               	movf	3968,w,c	;volatile
  9883  015AA2  0B07               	andlw	7
  9884  015AA4  6F45               	movwf	_enc2& (0+255),b
  9885                           
  9886                           ; BSR set to: 1
  9887                           ;encoder.c: 96: os.encoder1Count = 0;
  9888  015AA6  0E00               	movlw	0
  9889  015AA8  6F67               	movwf	(_os+3)& (0+255),b	;volatile
  9890                           
  9891                           ; BSR set to: 1
  9892                           ;encoder.c: 97: os.encoder2Count = 0;
  9893  015AAA  0E00               	movlw	0
  9894  015AAC  6F69               	movwf	(_os+5)& (0+255),b	;volatile
  9895                           
  9896                           ; BSR set to: 1
  9897                           ;encoder.c: 98: os.button1 = 0;
  9898  015AAE  0E00               	movlw	0
  9899  015AB0  6F68               	movwf	(_os+4)& (0+255),b	;volatile
  9900                           
  9901                           ; BSR set to: 1
  9902                           ;encoder.c: 99: os.button2 = 0;
  9903  015AB2  0E00               	movlw	0
  9904  015AB4  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
  9905                           
  9906                           ; BSR set to: 1
  9907                           ;encoder.c: 100: os.displayState = DISPLAY_STATE_MAIN_SETUP;
  9908  015AB6  0E01               	movlw	1
  9909  015AB8  6F73               	movwf	(_os+15)& (0+255),b	;volatile
  9910                           
  9911                           ; BSR set to: 1
  9912  015ABA  0012               	return		;funcret
  9913  015ABC                     __end_of_encoder_init:
  9914                           	opt stack 0
  9915                           tblptru	equ	0xFF8
  9916                           tblptrh	equ	0xFF7
  9917                           tblptrl	equ	0xFF6
  9918                           tablat	equ	0xFF5
  9919                           prodh	equ	0xFF4
  9920                           prodl	equ	0xFF3
  9921                           postinc0	equ	0xFEE
  9922                           wreg	equ	0xFE8
  9923                           postdec1	equ	0xFE5
  9924                           fsr1h	equ	0xFE2
  9925                           fsr1l	equ	0xFE1
  9926                           indf2	equ	0xFDF
  9927                           postinc2	equ	0xFDE
  9928                           fsr2h	equ	0xFDA
  9929                           fsr2l	equ	0xFD9
  9930                           status	equ	0xFD8
  9931                           
  9932 ;; *************** function _display_update *****************
  9933 ;; Defined at:
  9934 ;;		line 618 in file "display.c"
  9935 ;; Parameters:    Size  Location     Type
  9936 ;;		None
  9937 ;; Auto vars:     Size  Location     Type
  9938 ;;  line            1   16[BANK0 ] unsigned char 
  9939 ;; Return value:  Size  Location     Type
  9940 ;;                  1    wreg      void 
  9941 ;; Registers used:
  9942 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9943 ;; Tracked objects:
  9944 ;;		On entry : 0/0
  9945 ;;		On exit  : 0/0
  9946 ;;		Unchanged: 0/0
  9947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9948 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9949 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9950 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9951 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9952 ;;Total ram usage:        1 bytes
  9953 ;; Hardware stack levels used:    1
  9954 ;; Hardware stack levels required when called:   14
  9955 ;; This function calls:
  9956 ;;		_i2c_display_cursor
  9957 ;;		_i2c_display_write_fixed
  9958 ;; This function is called by:
  9959 ;;		_main
  9960 ;;		_system_init
  9961 ;; This function uses a non-reentrant model
  9962 ;;
  9963                           
  9964                           	psect	text22
  9965  0155B6                     __ptext22:
  9966                           	opt stack 0
  9967  0155B6                     _display_update:
  9968                           	opt stack 15
  9969                           
  9970                           ;display.c: 620: uint8_t line;;display.c: 621: for(line=0; line<4; ++line)
  9971                           
  9972                           ; BSR set to: 1
  9973                           ;incstack = 0
  9974  0155B6  0E00               	movlw	0
  9975  0155B8  0100               	movlb	0	; () banked
  9976  0155BA  6F70               	movwf	display_update@line& (0+255),b
  9977  0155BC                     l17134:
  9978                           
  9979                           ; BSR set to: 0
  9980  0155BC  0E03               	movlw	3
  9981  0155BE  6570               	cpfsgt	display_update@line& (0+255),b
  9982  0155C0  D001               	goto	l1499
  9983  0155C2  0012               	return	
  9984  0155C4                     l1499:
  9985                           
  9986                           ; BSR set to: 0
  9987                           ;display.c: 622: {;display.c: 623: i2c_display_cursor(line, 0);
  9988                           
  9989                           ; BSR set to: 0
  9990  0155C4  0E00               	movlw	0
  9991  0155C6  6F6D               	movwf	i2c_display_cursor@position& (0+255),b
  9992  0155C8  5170               	movf	display_update@line& (0+255),w,b
  9993  0155CA  EC82  F0AD         	call	_i2c_display_cursor
  9994                           
  9995                           ;display.c: 624: i2c_display_write_fixed(display_content[line], 20);
  9996  0155CE  0100               	movlb	0	; () banked
  9997  0155D0  5170               	movf	display_update@line& (0+255),w,b
  9998  0155D2  0D14               	mullw	20
  9999  0155D4  0E42               	movlw	low _display_content
 10000  0155D6  24F3               	addwf	prodl,w,c
 10001  0155D8  6F65               	movwf	i2c_display_write_fixed@data& (0+255),b
 10002  0155DA  0E02               	movlw	high _display_content
 10003  0155DC  20F4               	addwfc	prodh,w,c
 10004  0155DE  6F66               	movwf	(i2c_display_write_fixed@data+1)& (0+255),b
 10005  0155E0  0E14               	movlw	20
 10006  0155E2  6F67               	movwf	i2c_display_write_fixed@length& (0+255),b
 10007  0155E4  ECC2  F0A6         	call	_i2c_display_write_fixed	;wreg free
 10008  0155E8  0100               	movlb	0	; () banked
 10009  0155EA  2B70               	incf	display_update@line& (0+255),f,b
 10010  0155EC  D7E7               	goto	l17134
 10011  0155EE                     __end_of_display_update:
 10012                           	opt stack 0
 10013                           tblptru	equ	0xFF8
 10014                           tblptrh	equ	0xFF7
 10015                           tblptrl	equ	0xFF6
 10016                           tablat	equ	0xFF5
 10017                           prodh	equ	0xFF4
 10018                           prodl	equ	0xFF3
 10019                           postinc0	equ	0xFEE
 10020                           wreg	equ	0xFE8
 10021                           postdec1	equ	0xFE5
 10022                           fsr1h	equ	0xFE2
 10023                           fsr1l	equ	0xFE1
 10024                           indf2	equ	0xFDF
 10025                           postinc2	equ	0xFDE
 10026                           fsr2h	equ	0xFDA
 10027                           fsr2l	equ	0xFD9
 10028                           status	equ	0xFD8
 10029                           
 10030 ;; *************** function _i2c_display_write_fixed *****************
 10031 ;; Defined at:
 10032 ;;		line 459 in file "i2c.c"
 10033 ;; Parameters:    Size  Location     Type
 10034 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10035 ;;		 -> display_content(80), 
 10036 ;;  length          1    7[BANK0 ] unsigned char 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  pos             1    8[BANK0 ] unsigned char 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      void 
 10041 ;; Registers used:
 10042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10048 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10049 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10051 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10052 ;;Total ram usage:        4 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:   11
 10055 ;; This function calls:
 10056 ;;		__i2c_send
 10057 ;;		__i2c_start
 10058 ;;		__i2c_stop
 10059 ;;		__i2c_wait_idle
 10060 ;; This function is called by:
 10061 ;;		_display_update
 10062 ;; This function uses a non-reentrant model
 10063 ;;
 10064                           
 10065                           	psect	text23
 10066  014D84                     __ptext23:
 10067                           	opt stack 0
 10068  014D84                     _i2c_display_write_fixed:
 10069                           	opt stack 17
 10070                           
 10071                           ;i2c.c: 461: uint8_t pos;;i2c.c: 466: _i2c_wait_idle();
 10072                           
 10073                           ; BSR set to: 0
 10074                           ;incstack = 0
 10075  014D84  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10076                           
 10077                           ;i2c.c: 467: _i2c_start();
 10078  014D88  ECCB  F0AE         	call	__i2c_start	;wreg free
 10079                           
 10080                           ;i2c.c: 468: _i2c_wait_idle();
 10081  014D8C  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10082                           
 10083                           ;i2c.c: 469: _i2c_send(0b01111000);
 10084  014D90  0E78               	movlw	120
 10085  014D92  ECB8  F0AE         	call	__i2c_send
 10086                           
 10087                           ;i2c.c: 470: _i2c_wait_idle();
 10088  014D96  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10089                           
 10090                           ;i2c.c: 471: _i2c_send(0b01000000);
 10091  014D9A  0E40               	movlw	64
 10092  014D9C  ECB8  F0AE         	call	__i2c_send
 10093                           
 10094                           ;i2c.c: 472: _i2c_wait_idle();
 10095  014DA0  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10096                           
 10097                           ;i2c.c: 475: for(pos=0; pos<length; ++pos)
 10098  014DA4  0E00               	movlw	0
 10099  014DA6  0100               	movlb	0	; () banked
 10100  014DA8  6F68               	movwf	i2c_display_write_fixed@pos& (0+255),b
 10101  014DAA  D00F               	goto	l1257
 10102  014DAC                     
 10103                           ; BSR set to: 0
 10104                           ;i2c.c: 476: {;i2c.c: 477: _i2c_send(data[pos]);
 10105                           
 10106                           ; BSR set to: 0
 10107  014DAC  5168               	movf	i2c_display_write_fixed@pos& (0+255),w,b
 10108  014DAE  0D01               	mullw	1
 10109  014DB0  50F3               	movf	prodl,w,c
 10110  014DB2  2565               	addwf	i2c_display_write_fixed@data& (0+255),w,b
 10111  014DB4  6ED9               	movwf	fsr2l,c
 10112  014DB6  50F4               	movf	prodh,w,c
 10113  014DB8  2166               	addwfc	(i2c_display_write_fixed@data+1)& (0+255),w,b
 10114  014DBA  6EDA               	movwf	fsr2h,c
 10115  014DBC  50DF               	movf	indf2,w,c
 10116  014DBE  ECB8  F0AE         	call	__i2c_send
 10117                           
 10118                           ;i2c.c: 478: _i2c_wait_idle();
 10119  014DC2  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10120  014DC6  0100               	movlb	0	; () banked
 10121  014DC8  2B68               	incf	i2c_display_write_fixed@pos& (0+255),f,b
 10122  014DCA                     l1257:
 10123                           
 10124                           ; BSR set to: 0
 10125                           
 10126                           ; BSR set to: 0
 10127  014DCA  5167               	movf	i2c_display_write_fixed@length& (0+255),w,b
 10128  014DCC  5D68               	subwf	i2c_display_write_fixed@pos& (0+255),w,b
 10129  014DCE  A0D8               	btfss	status,0,c
 10130  014DD0  D7ED               	goto	l1258
 10131                           
 10132                           ; BSR set to: 0
 10133                           ;i2c.c: 479: };i2c.c: 481: _i2c_stop();
 10134                           
 10135                           ; BSR set to: 0
 10136  014DD2  ECC7  F0AE         	call	__i2c_stop	;wreg free
 10137  014DD6  0012               	return		;funcret
 10138  014DD8                     __end_of_i2c_display_write_fixed:
 10139                           	opt stack 0
 10140                           tblptru	equ	0xFF8
 10141                           tblptrh	equ	0xFF7
 10142                           tblptrl	equ	0xFF6
 10143                           tablat	equ	0xFF5
 10144                           prodh	equ	0xFF4
 10145                           prodl	equ	0xFF3
 10146                           postinc0	equ	0xFEE
 10147                           wreg	equ	0xFE8
 10148                           postdec1	equ	0xFE5
 10149                           fsr1h	equ	0xFE2
 10150                           fsr1l	equ	0xFE1
 10151                           indf2	equ	0xFDF
 10152                           postinc2	equ	0xFDE
 10153                           fsr2h	equ	0xFDA
 10154                           fsr2l	equ	0xFD9
 10155                           status	equ	0xFD8
 10156                           
 10157 ;; *************** function _i2c_display_cursor *****************
 10158 ;; Defined at:
 10159 ;;		line 419 in file "i2c.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;  line            1    wreg     unsigned char 
 10162 ;;  position        1   13[BANK0 ] unsigned char 
 10163 ;; Auto vars:     Size  Location     Type
 10164 ;;  line            1   14[BANK0 ] unsigned char 
 10165 ;;  address         1   15[BANK0 ] unsigned char 
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      void 
 10168 ;; Registers used:
 10169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10175 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10176 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10178 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10179 ;;Total ram usage:        3 bytes
 10180 ;; Hardware stack levels used:    1
 10181 ;; Hardware stack levels required when called:   13
 10182 ;; This function calls:
 10183 ;;		__ic2_display_set_ddram_address
 10184 ;; This function is called by:
 10185 ;;		_display_update
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text24
 10190  015B04                     __ptext24:
 10191                           	opt stack 0
 10192  015B04                     _i2c_display_cursor:
 10193                           	opt stack 15
 10194                           
 10195                           ;incstack = 0
 10196                           ;i2c_display_cursor@line stored from wreg
 10197  015B04  0100               	movlb	0	; () banked
 10198  015B06  6F6E               	movwf	i2c_display_cursor@line& (0+255),b
 10199                           
 10200                           ;i2c.c: 421: uint8_t address;;i2c.c: 424: line &= 0b11;
 10201  015B08  0E03               	movlw	3
 10202  015B0A  0100               	movlb	0	; () banked
 10203  015B0C  176E               	andwf	i2c_display_cursor@line& (0+255),f,b
 10204                           
 10205                           ;i2c.c: 425: address = line<<5;
 10206  015B0E  396E               	swapf	i2c_display_cursor@line& (0+255),w,b
 10207  015B10  46E8               	rlncf	wreg,f,c
 10208  015B12  0BE0               	andlw	224
 10209  015B14  6F6F               	movwf	i2c_display_cursor@address& (0+255),b
 10210                           
 10211                           ;i2c.c: 426: position &= 0b11111;
 10212  015B16  0E1F               	movlw	31
 10213  015B18  176D               	andwf	i2c_display_cursor@position& (0+255),f,b
 10214                           
 10215                           ;i2c.c: 427: address |= position;
 10216  015B1A  516D               	movf	i2c_display_cursor@position& (0+255),w,b
 10217  015B1C  136F               	iorwf	i2c_display_cursor@address& (0+255),f,b
 10218                           
 10219                           ; BSR set to: 0
 10220                           ;i2c.c: 433: _ic2_display_set_ddram_address(address);
 10221  015B1E  516F               	movf	i2c_display_cursor@address& (0+255),w,b
 10222  015B20  EC5E  F0AD         	call	__ic2_display_set_ddram_address
 10223  015B24  0012               	return		;funcret
 10224  015B26                     __end_of_i2c_display_cursor:
 10225                           	opt stack 0
 10226                           tblptru	equ	0xFF8
 10227                           tblptrh	equ	0xFF7
 10228                           tblptrl	equ	0xFF6
 10229                           tablat	equ	0xFF5
 10230                           prodh	equ	0xFF4
 10231                           prodl	equ	0xFF3
 10232                           postinc0	equ	0xFEE
 10233                           wreg	equ	0xFE8
 10234                           postdec1	equ	0xFE5
 10235                           fsr1h	equ	0xFE2
 10236                           fsr1l	equ	0xFE1
 10237                           indf2	equ	0xFDF
 10238                           postinc2	equ	0xFDE
 10239                           fsr2h	equ	0xFDA
 10240                           fsr2l	equ	0xFD9
 10241                           status	equ	0xFD8
 10242                           
 10243 ;; *************** function __ic2_display_set_ddram_address *****************
 10244 ;; Defined at:
 10245 ;;		line 390 in file "i2c.c"
 10246 ;; Parameters:    Size  Location     Type
 10247 ;;  address         1    wreg     unsigned char 
 10248 ;; Auto vars:     Size  Location     Type
 10249 ;;  address         1   10[BANK0 ] unsigned char 
 10250 ;;  data_array      2   11[BANK0 ] unsigned char [2]
 10251 ;; Return value:  Size  Location     Type
 10252 ;;                  1    wreg      void 
 10253 ;; Registers used:
 10254 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10255 ;; Tracked objects:
 10256 ;;		On entry : 0/0
 10257 ;;		On exit  : 0/0
 10258 ;;		Unchanged: 0/0
 10259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10260 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10261 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10263 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10264 ;;Total ram usage:        3 bytes
 10265 ;; Hardware stack levels used:    1
 10266 ;; Hardware stack levels required when called:   12
 10267 ;; This function calls:
 10268 ;;		__i2c_write
 10269 ;; This function is called by:
 10270 ;;		_i2c_display_cursor
 10271 ;; This function uses a non-reentrant model
 10272 ;;
 10273                           
 10274                           	psect	text25
 10275  015ABC                     __ptext25:
 10276                           	opt stack 0
 10277  015ABC                     __ic2_display_set_ddram_address:
 10278                           	opt stack 15
 10279                           
 10280                           ;incstack = 0
 10281                           ;__ic2_display_set_ddram_address@address stored from wreg
 10282  015ABC  0100               	movlb	0	; () banked
 10283  015ABE  6F6A               	movwf	__ic2_display_set_ddram_address@address& (0+255),b
 10284                           
 10285                           ;i2c.c: 392: uint8_t data_array[2];;i2c.c: 393: data_array[0] = 0b00000000;
 10286  015AC0  0E00               	movlw	0
 10287  015AC2  0100               	movlb	0	; () banked
 10288  015AC4  6F6B               	movwf	__ic2_display_set_ddram_address@data_array& (0+255),b
 10289                           
 10290                           ; BSR set to: 0
 10291                           ;i2c.c: 394: data_array[1] = 0b10000000 | address;
 10292  015AC6  516A               	movf	__ic2_display_set_ddram_address@address& (0+255),w,b
 10293  015AC8  0980               	iorlw	128
 10294  015ACA  6F6C               	movwf	(__ic2_display_set_ddram_address@data_array+1)& (0+255),b
 10295                           
 10296                           ; BSR set to: 0
 10297                           ;i2c.c: 400: _i2c_write(0b01111000, &data_array[0], 2);
 10298  015ACC  0E6B               	movlw	low __ic2_display_set_ddram_address@data_array
 10299  015ACE  6F65               	movwf	__i2c_write@data& (0+255),b
 10300  015AD0  0E00               	movlw	high __ic2_display_set_ddram_address@data_array
 10301  015AD2  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10302  015AD4  0E02               	movlw	2
 10303  015AD6  6F67               	movwf	__i2c_write@length& (0+255),b
 10304  015AD8  0E78               	movlw	120
 10305  015ADA  ECE3  F0A7         	call	__i2c_write
 10306  015ADE  0012               	return		;funcret
 10307  015AE0                     __end_of__ic2_display_set_ddram_address:
 10308                           	opt stack 0
 10309                           tblptru	equ	0xFF8
 10310                           tblptrh	equ	0xFF7
 10311                           tblptrl	equ	0xFF6
 10312                           tablat	equ	0xFF5
 10313                           prodh	equ	0xFF4
 10314                           prodl	equ	0xFF3
 10315                           postinc0	equ	0xFEE
 10316                           wreg	equ	0xFE8
 10317                           postdec1	equ	0xFE5
 10318                           fsr1h	equ	0xFE2
 10319                           fsr1l	equ	0xFE1
 10320                           indf2	equ	0xFDF
 10321                           postinc2	equ	0xFDE
 10322                           fsr2h	equ	0xFDA
 10323                           fsr2l	equ	0xFD9
 10324                           status	equ	0xFD8
 10325                           
 10326 ;; *************** function _display_init *****************
 10327 ;; Defined at:
 10328 ;;		line 256 in file "display.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;		None
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;		None
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  1    wreg      void 
 10335 ;; Registers used:
 10336 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10343 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10344 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10345 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10346 ;;Total ram usage:        0 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:   15
 10349 ;; This function calls:
 10350 ;;		__display_start
 10351 ;;		_i2c_display_init
 10352 ;;		_i2c_display_program_custom_character
 10353 ;; This function is called by:
 10354 ;;		_system_init
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           	psect	text26
 10359  01550A                     __ptext26:
 10360                           	opt stack 0
 10361  01550A                     _display_init:
 10362                           	opt stack 14
 10363                           
 10364                           ;display.c: 258: i2c_display_init();
 10365                           
 10366                           ;incstack = 0
 10367  01550A  ECBB  F0A7         	call	_i2c_display_init	;wreg free
 10368                           
 10369                           ;display.c: 259: i2c_display_program_custom_character(0x00, bit_pattern_verticalbar);
 10370  01550E  0ED5               	movlw	low _bit_pattern_verticalbar
 10371  015510  0100               	movlb	0	; () banked
 10372  015512  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10373  015514  0EA2               	movlw	high _bit_pattern_verticalbar
 10374  015516  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10375  015518  0E00               	movlw	0
 10376  01551A  EC0D  F0A0         	call	_i2c_display_program_custom_character
 10377                           
 10378                           ;display.c: 260: i2c_display_program_custom_character(0x01, bit_pattern_degree);
 10379  01551E  0ECD               	movlw	low _bit_pattern_degree
 10380  015520  0100               	movlb	0	; () banked
 10381  015522  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10382  015524  0EA2               	movlw	high _bit_pattern_degree
 10383  015526  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10384  015528  0E01               	movlw	1
 10385  01552A  EC0D  F0A0         	call	_i2c_display_program_custom_character
 10386                           
 10387                           ;display.c: 261: i2c_display_program_custom_character(0x02, bit_pattern_ae);
 10388  01552E  0EC5               	movlw	low _bit_pattern_ae
 10389  015530  0100               	movlb	0	; () banked
 10390  015532  6F6E               	movwf	i2c_display_program_custom_character@bit_pattern& (0+255),b
 10391  015534  0EA2               	movlw	high _bit_pattern_ae
 10392  015536  6F6F               	movwf	(i2c_display_program_custom_character@bit_pattern+1)& (0+255),b
 10393  015538  0E02               	movlw	2
 10394  01553A  EC0D  F0A0         	call	_i2c_display_program_custom_character
 10395                           
 10396                           ;display.c: 263: _display_start();
 10397  01553E  EC59  F098         	call	__display_start	;wreg free
 10398  015542  0012               	return		;funcret
 10399  015544                     __end_of_display_init:
 10400                           	opt stack 0
 10401                           tblptru	equ	0xFF8
 10402                           tblptrh	equ	0xFF7
 10403                           tblptrl	equ	0xFF6
 10404                           tablat	equ	0xFF5
 10405                           prodh	equ	0xFF4
 10406                           prodl	equ	0xFF3
 10407                           postinc0	equ	0xFEE
 10408                           wreg	equ	0xFE8
 10409                           postdec1	equ	0xFE5
 10410                           fsr1h	equ	0xFE2
 10411                           fsr1l	equ	0xFE1
 10412                           indf2	equ	0xFDF
 10413                           postinc2	equ	0xFDE
 10414                           fsr2h	equ	0xFDA
 10415                           fsr2l	equ	0xFD9
 10416                           status	equ	0xFD8
 10417                           
 10418 ;; *************** function _i2c_display_program_custom_character *****************
 10419 ;; Defined at:
 10420 ;;		line 484 in file "i2c.c"
 10421 ;; Parameters:    Size  Location     Type
 10422 ;;  address         1    wreg     unsigned char 
 10423 ;;  bit_pattern     2   14[BANK0 ] PTR unsigned char 
 10424 ;;		 -> bit_pattern_ae(8), bit_pattern_degree(8), bit_pattern_verticalbar(8), 
 10425 ;; Auto vars:     Size  Location     Type
 10426 ;;  address         1   31[BANK0 ] unsigned char 
 10427 ;;  data_array     11   20[BANK0 ] unsigned char [11]
 10428 ;;  cntr            1   32[BANK0 ] unsigned char 
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      void 
 10431 ;; Registers used:
 10432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10438 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10439 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10440 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10441 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10442 ;;Total ram usage:       19 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; Hardware stack levels required when called:   13
 10445 ;; This function calls:
 10446 ;;		__i2c_write
 10447 ;;		__ic2_display_set_cgram_address
 10448 ;; This function is called by:
 10449 ;;		_display_init
 10450 ;; This function uses a non-reentrant model
 10451 ;;
 10452                           
 10453                           	psect	text27
 10454  01401A                     __ptext27:
 10455                           	opt stack 0
 10456  01401A                     _i2c_display_program_custom_character:
 10457                           	opt stack 15
 10458                           
 10459                           ;incstack = 0
 10460                           ;i2c_display_program_custom_character@address stored from wreg
 10461  01401A  0100               	movlb	0	; () banked
 10462  01401C  6F7F               	movwf	i2c_display_program_custom_character@address& (0+255),b
 10463                           
 10464                           ;i2c.c: 486: uint8_t cntr;;i2c.c: 487: uint8_t data_array[11];;i2c.c: 490: _ic2_display_
      +                          set_cgram_address(address<<3);
 10465  01401E  0100               	movlb	0	; () banked
 10466  014020  397F               	swapf	i2c_display_program_custom_character@address& (0+255),w,b
 10467  014022  42E8               	rrncf	wreg,f,c
 10468  014024  0BF8               	andlw	248
 10469  014026  EC97  F0AC         	call	__ic2_display_set_cgram_address
 10470                           
 10471                           ;i2c.c: 493: data_array[0] = 0b01000000;
 10472  01402A  0E40               	movlw	64
 10473  01402C  0100               	movlb	0	; () banked
 10474  01402E  6F74               	movwf	i2c_display_program_custom_character@data_array& (0+255),b
 10475                           
 10476                           ; BSR set to: 0
 10477                           ;i2c.c: 494: for(cntr=0; cntr<8; ++cntr)
 10478  014030  0E00               	movlw	0
 10479  014032  6F80               	movwf	i2c_display_program_custom_character@cntr& (0+255),b
 10480  014034                     l16050:
 10481                           
 10482                           ; BSR set to: 0
 10483  014034  0E07               	movlw	7
 10484  014036  6580               	cpfsgt	i2c_display_program_custom_character@cntr& (0+255),b
 10485  014038  D001               	goto	l1263
 10486  01403A  D023               	goto	u15140
 10487  01403C                     l1263:
 10488                           
 10489                           ; BSR set to: 0
 10490                           ;i2c.c: 495: {;i2c.c: 496: data_array[cntr+1] = bit_pattern[cntr] & 0b00011111;
 10491                           
 10492                           ; BSR set to: 0
 10493  01403C  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10494  01403E  6F70               	movwf	??_i2c_display_program_custom_character& (0+255),b
 10495  014040  6B71               	clrf	(??_i2c_display_program_custom_character+1)& (0+255),b
 10496  014042  0E01               	movlw	1
 10497  014044  2770               	addwf	??_i2c_display_program_custom_character& (0+255),f,b
 10498  014046  0E00               	movlw	0
 10499  014048  2371               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),f,b
 10500  01404A  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10501  01404C  2570               	addwf	??_i2c_display_program_custom_character& (0+255),w,b
 10502  01404E  6ED9               	movwf	fsr2l,c
 10503  014050  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10504  014052  2171               	addwfc	(??_i2c_display_program_custom_character+1)& (0+255),w,b
 10505  014054  6EDA               	movwf	fsr2h,c
 10506  014056  5180               	movf	i2c_display_program_custom_character@cntr& (0+255),w,b
 10507  014058  0D01               	mullw	1
 10508  01405A  C06E  F072         	movff	i2c_display_program_custom_character@bit_pattern,??_i2c_display_program_custom_ch
      +                          aracter+2
 10509  01405E  C06F  F073         	movff	i2c_display_program_custom_character@bit_pattern+1,??_i2c_display_program_custom_
      +                          character+3
 10510  014062  50F3               	movf	prodl,w,c
 10511  014064  2772               	addwf	(??_i2c_display_program_custom_character+2)& (0+255),f,b
 10512  014066  50F4               	movf	prodh,w,c
 10513  014068  2373               	addwfc	(??_i2c_display_program_custom_character+3)& (0+255),f,b
 10514  01406A  C072  FFF6         	movff	??_i2c_display_program_custom_character+2,tblptrl
 10515  01406E  C073  FFF7         	movff	??_i2c_display_program_custom_character+3,tblptrh
 10516  014072                     	if	0	;tblptru may be non-zero
 10517  014072                     	endif
 10518  014072                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 10519  014072  0E00               	movlw	low (__mediumconst shr (0+16))
 10520  014074  6EF8               	movwf	tblptru,c
 10521  014076                     	endif
 10522  014076  0008               	tblrd		*
 10523  014078  50F5               	movf	tablat,w,c
 10524  01407A  0B1F               	andlw	31
 10525  01407C  6EDF               	movwf	indf2,c
 10526                           
 10527                           ; BSR set to: 0
 10528  01407E  2B80               	incf	i2c_display_program_custom_character@cntr& (0+255),f,b
 10529  014080  D7D9               	goto	l16050
 10530  014082                     u15140:
 10531                           
 10532                           ; BSR set to: 0
 10533                           ;i2c.c: 497: };i2c.c: 498: _i2c_write(0b01111000, data_array, 9);
 10534                           
 10535                           ; BSR set to: 0
 10536  014082  0E74               	movlw	low i2c_display_program_custom_character@data_array
 10537  014084  6F65               	movwf	__i2c_write@data& (0+255),b
 10538  014086  0E00               	movlw	high i2c_display_program_custom_character@data_array
 10539  014088  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10540  01408A  0E09               	movlw	9
 10541  01408C  6F67               	movwf	__i2c_write@length& (0+255),b
 10542  01408E  0E78               	movlw	120
 10543  014090  ECE3  F0A7         	call	__i2c_write
 10544  014094  0012               	return		;funcret
 10545  014096                     __end_of_i2c_display_program_custom_character:
 10546                           	opt stack 0
 10547                           tblptru	equ	0xFF8
 10548                           tblptrh	equ	0xFF7
 10549                           tblptrl	equ	0xFF6
 10550                           tablat	equ	0xFF5
 10551                           prodh	equ	0xFF4
 10552                           prodl	equ	0xFF3
 10553                           postinc0	equ	0xFEE
 10554                           wreg	equ	0xFE8
 10555                           postdec1	equ	0xFE5
 10556                           fsr1h	equ	0xFE2
 10557                           fsr1l	equ	0xFE1
 10558                           indf2	equ	0xFDF
 10559                           postinc2	equ	0xFDE
 10560                           fsr2h	equ	0xFDA
 10561                           fsr2l	equ	0xFD9
 10562                           status	equ	0xFD8
 10563                           
 10564 ;; *************** function __ic2_display_set_cgram_address *****************
 10565 ;; Defined at:
 10566 ;;		line 403 in file "i2c.c"
 10567 ;; Parameters:    Size  Location     Type
 10568 ;;  address         1    wreg     unsigned char 
 10569 ;; Auto vars:     Size  Location     Type
 10570 ;;  address         1   13[BANK0 ] unsigned char 
 10571 ;;  data_array      3   10[BANK0 ] unsigned char [3]
 10572 ;; Return value:  Size  Location     Type
 10573 ;;                  1    wreg      void 
 10574 ;; Registers used:
 10575 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10576 ;; Tracked objects:
 10577 ;;		On entry : 0/0
 10578 ;;		On exit  : 0/0
 10579 ;;		Unchanged: 0/0
 10580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10581 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10582 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10584 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10585 ;;Total ram usage:        4 bytes
 10586 ;; Hardware stack levels used:    1
 10587 ;; Hardware stack levels required when called:   12
 10588 ;; This function calls:
 10589 ;;		__i2c_write
 10590 ;; This function is called by:
 10591 ;;		_i2c_display_program_custom_character
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text28
 10596  01592E                     __ptext28:
 10597                           	opt stack 0
 10598  01592E                     __ic2_display_set_cgram_address:
 10599                           	opt stack 15
 10600                           
 10601                           ;incstack = 0
 10602                           ;__ic2_display_set_cgram_address@address stored from wreg
 10603  01592E  0100               	movlb	0	; () banked
 10604  015930  6F6D               	movwf	__ic2_display_set_cgram_address@address& (0+255),b
 10605                           
 10606                           ;i2c.c: 405: uint8_t data_array[3];;i2c.c: 410: address &= 0b001111111;
 10607  015932  0100               	movlb	0	; () banked
 10608  015934  9F6D               	bcf	__ic2_display_set_cgram_address@address& (0+255),7,b
 10609                           
 10610                           ; BSR set to: 0
 10611                           ;i2c.c: 411: data_array[0] = 0b00000000;
 10612  015936  0E00               	movlw	0
 10613  015938  6F6A               	movwf	__ic2_display_set_cgram_address@data_array& (0+255),b
 10614                           
 10615                           ; BSR set to: 0
 10616                           ;i2c.c: 412: data_array[1] = 0b00111000;
 10617  01593A  0E38               	movlw	56
 10618  01593C  6F6B               	movwf	(__ic2_display_set_cgram_address@data_array+1)& (0+255),b
 10619                           
 10620                           ;i2c.c: 413: data_array[2] = 0b01000000 | address;
 10621  01593E  516D               	movf	__ic2_display_set_cgram_address@address& (0+255),w,b
 10622  015940  0940               	iorlw	64
 10623  015942  6F6C               	movwf	(__ic2_display_set_cgram_address@data_array+2)& (0+255),b
 10624                           
 10625                           ; BSR set to: 0
 10626                           ;i2c.c: 416: _i2c_write(0b01111000, data_array, 3);
 10627  015944  0E6A               	movlw	low __ic2_display_set_cgram_address@data_array
 10628  015946  6F65               	movwf	__i2c_write@data& (0+255),b
 10629  015948  0E00               	movlw	high __ic2_display_set_cgram_address@data_array
 10630  01594A  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10631  01594C  0E03               	movlw	3
 10632  01594E  6F67               	movwf	__i2c_write@length& (0+255),b
 10633  015950  0E78               	movlw	120
 10634  015952  ECE3  F0A7         	call	__i2c_write
 10635  015956  0012               	return		;funcret
 10636  015958                     __end_of__ic2_display_set_cgram_address:
 10637                           	opt stack 0
 10638                           tblptru	equ	0xFF8
 10639                           tblptrh	equ	0xFF7
 10640                           tblptrl	equ	0xFF6
 10641                           tablat	equ	0xFF5
 10642                           prodh	equ	0xFF4
 10643                           prodl	equ	0xFF3
 10644                           postinc0	equ	0xFEE
 10645                           wreg	equ	0xFE8
 10646                           postdec1	equ	0xFE5
 10647                           fsr1h	equ	0xFE2
 10648                           fsr1l	equ	0xFE1
 10649                           indf2	equ	0xFDF
 10650                           postinc2	equ	0xFDE
 10651                           fsr2h	equ	0xFDA
 10652                           fsr2l	equ	0xFD9
 10653                           status	equ	0xFD8
 10654                           
 10655 ;; *************** function _i2c_display_init *****************
 10656 ;; Defined at:
 10657 ;;		line 361 in file "i2c.c"
 10658 ;; Parameters:    Size  Location     Type
 10659 ;;		None
 10660 ;; Auto vars:     Size  Location     Type
 10661 ;;  init_sequenc    9   11[BANK0 ] unsigned char [9]
 10662 ;; Return value:  Size  Location     Type
 10663 ;;                  1    wreg      void 
 10664 ;; Registers used:
 10665 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10666 ;; Tracked objects:
 10667 ;;		On entry : 0/0
 10668 ;;		On exit  : 0/0
 10669 ;;		Unchanged: 0/0
 10670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10672 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10673 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10674 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10675 ;;Total ram usage:       10 bytes
 10676 ;; Hardware stack levels used:    1
 10677 ;; Hardware stack levels required when called:   12
 10678 ;; This function calls:
 10679 ;;		__i2c_write
 10680 ;; This function is called by:
 10681 ;;		_display_init
 10682 ;; This function uses a non-reentrant model
 10683 ;;
 10684                           
 10685                           	psect	text29
 10686  014F76                     __ptext29:
 10687                           	opt stack 0
 10688  014F76                     _i2c_display_init:
 10689                           	opt stack 16
 10690                           
 10691                           ;i2c.c: 363: uint8_t init_sequence[9] = {;i2c.c: 364: 0x3A,;i2c.c: 366: 0b00011110,;i2c.
      +                          c: 367: 0x39,;i2c.c: 369: 0b00001100,;i2c.c: 370: 0x74,;i2c.c: 371: 0b1011100,;i2c.c: 37
      +                          2: 0x6d,;i2c.c: 373: 0x0c,;i2c.c: 374: 0x01;i2c.c: 375: };
 10692                           
 10693                           ;incstack = 0
 10694  014F76  EE22  F0B4         	lfsr	2,i2c_display_init@F7092
 10695  014F7A  EE10  F06B         	lfsr	1,i2c_display_init@init_sequence
 10696  014F7E  0E08               	movlw	8
 10697  014F80                     u15111:
 10698  014F80  CFDB FFE3          	movff	plusw2,plusw1
 10699  014F84  06E8               	decf	wreg,f,c
 10700  014F86  E2FC               	bc	u15111
 10701                           
 10702                           ;i2c.c: 378: LATAbits.LA3 = 0;
 10703  014F88  9689               	bcf	3977,3,c	;volatile
 10704                           
 10705                           ;i2c.c: 379: _delay((unsigned long)((10)*(8000000/4000.0)));
 10706  014F8A  0E1A               	movlw	26
 10707  014F8C  0100               	movlb	0	; () banked
 10708  014F8E  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10709  014F90  0EF8               	movlw	248
 10710  014F92                     u19897:
 10711  014F92  2EE8               	decfsz	wreg,f,c
 10712  014F94  D7FE               	bra	u19897
 10713  014F96  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10714  014F98  D7FC               	bra	u19897
 10715  014F9A  F000               	nop	
 10716                           
 10717                           ;i2c.c: 380: LATAbits.LA3 = 1;
 10718  014F9C  8689               	bsf	3977,3,c	;volatile
 10719                           
 10720                           ;i2c.c: 381: _delay((unsigned long)((50)*(8000000/4000.0)));
 10721  014F9E  0E82               	movlw	130
 10722  014FA0  0100               	movlb	0	; () banked
 10723  014FA2  6F6A               	movwf	??_i2c_display_init& (0+255),b
 10724  014FA4  0EDD               	movlw	221
 10725  014FA6                     u19907:
 10726  014FA6  2EE8               	decfsz	wreg,f,c
 10727  014FA8  D7FE               	bra	u19907
 10728  014FAA  2F6A               	decfsz	??_i2c_display_init& (0+255),f,b
 10729  014FAC  D7FC               	bra	u19907
 10730  014FAE  D000               	nop2	
 10731                           
 10732                           ;i2c.c: 387: _i2c_write(0b01111000, &init_sequence[0], 9);
 10733  014FB0  0E6B               	movlw	low i2c_display_init@init_sequence
 10734  014FB2  0100               	movlb	0	; () banked
 10735  014FB4  6F65               	movwf	__i2c_write@data& (0+255),b
 10736  014FB6  0E00               	movlw	high i2c_display_init@init_sequence
 10737  014FB8  6F66               	movwf	(__i2c_write@data+1)& (0+255),b
 10738  014FBA  0E09               	movlw	9
 10739  014FBC  6F67               	movwf	__i2c_write@length& (0+255),b
 10740  014FBE  0E78               	movlw	120
 10741  014FC0  ECE3  F0A7         	call	__i2c_write
 10742  014FC4  0012               	return		;funcret
 10743  014FC6                     __end_of_i2c_display_init:
 10744                           	opt stack 0
 10745                           tblptru	equ	0xFF8
 10746                           tblptrh	equ	0xFF7
 10747                           tblptrl	equ	0xFF6
 10748                           tablat	equ	0xFF5
 10749                           prodh	equ	0xFF4
 10750                           prodl	equ	0xFF3
 10751                           postinc0	equ	0xFEE
 10752                           wreg	equ	0xFE8
 10753                           postdec1	equ	0xFE5
 10754                           plusw1	equ	0xFE3
 10755                           fsr1h	equ	0xFE2
 10756                           fsr1l	equ	0xFE1
 10757                           indf2	equ	0xFDF
 10758                           postinc2	equ	0xFDE
 10759                           plusw2	equ	0xFDB
 10760                           fsr2h	equ	0xFDA
 10761                           fsr2l	equ	0xFD9
 10762                           status	equ	0xFD8
 10763                           
 10764 ;; *************** function __i2c_write *****************
 10765 ;; Defined at:
 10766 ;;		line 88 in file "i2c.c"
 10767 ;; Parameters:    Size  Location     Type
 10768 ;;  slave_addres    1    wreg     unsigned char 
 10769 ;;  data            2    5[BANK0 ] PTR unsigned char 
 10770 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 10771 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 10772 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 10773 ;;  length          1    7[BANK0 ] unsigned char 
 10774 ;; Auto vars:     Size  Location     Type
 10775 ;;  slave_addres    1    8[BANK0 ] unsigned char 
 10776 ;;  cntr            1    9[BANK0 ] unsigned char 
 10777 ;; Return value:  Size  Location     Type
 10778 ;;                  1    wreg      void 
 10779 ;; Registers used:
 10780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10781 ;; Tracked objects:
 10782 ;;		On entry : 0/0
 10783 ;;		On exit  : 0/0
 10784 ;;		Unchanged: 0/0
 10785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10786 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10787 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10789 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10790 ;;Total ram usage:        5 bytes
 10791 ;; Hardware stack levels used:    1
 10792 ;; Hardware stack levels required when called:   11
 10793 ;; This function calls:
 10794 ;;		__i2c_send
 10795 ;;		__i2c_start
 10796 ;;		__i2c_stop
 10797 ;;		__i2c_wait_idle
 10798 ;; This function is called by:
 10799 ;;		_i2c_eeprom_read
 10800 ;;		_i2c_display_init
 10801 ;;		__ic2_display_set_ddram_address
 10802 ;;		__ic2_display_set_cgram_address
 10803 ;;		_i2c_display_program_custom_character
 10804 ;;		_i2c_adc_start
 10805 ;;		_i2c_eeprom_writeByte
 10806 ;;		_i2c_eeprom_readByte
 10807 ;;		__i2c_display_send_init_sequence
 10808 ;; This function uses a non-reentrant model
 10809 ;;
 10810                           
 10811                           	psect	text30
 10812  014FC6                     __ptext30:
 10813                           	opt stack 0
 10814  014FC6                     __i2c_write:
 10815                           	opt stack 16
 10816                           
 10817                           ;incstack = 0
 10818                           ;__i2c_write@slave_address stored from wreg
 10819  014FC6  0100               	movlb	0	; () banked
 10820  014FC8  6F68               	movwf	__i2c_write@slave_address& (0+255),b
 10821                           
 10822                           ;i2c.c: 90: uint8_t cntr;;i2c.c: 92: _i2c_wait_idle();
 10823  014FCA  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10824                           
 10825                           ;i2c.c: 93: _i2c_start();
 10826  014FCE  ECCB  F0AE         	call	__i2c_start	;wreg free
 10827                           
 10828                           ;i2c.c: 94: _i2c_wait_idle();
 10829  014FD2  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10830                           
 10831                           ;i2c.c: 95: _i2c_send(slave_address);
 10832  014FD6  0100               	movlb	0	; () banked
 10833  014FD8  5168               	movf	__i2c_write@slave_address& (0+255),w,b
 10834  014FDA  ECB8  F0AE         	call	__i2c_send
 10835                           
 10836                           ;i2c.c: 96: _i2c_wait_idle();
 10837  014FDE  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10838                           
 10839                           ;i2c.c: 98: for(cntr=0; cntr<length; ++cntr)
 10840  014FE2  0E00               	movlw	0
 10841  014FE4  0100               	movlb	0	; () banked
 10842  014FE6  6F69               	movwf	__i2c_write@cntr& (0+255),b
 10843  014FE8  D00F               	goto	l1160
 10844  014FEA                     
 10845                           ; BSR set to: 0
 10846                           ;i2c.c: 99: {;i2c.c: 100: _i2c_send(data[cntr]);
 10847                           
 10848                           ; BSR set to: 0
 10849  014FEA  5169               	movf	__i2c_write@cntr& (0+255),w,b
 10850  014FEC  0D01               	mullw	1
 10851  014FEE  50F3               	movf	prodl,w,c
 10852  014FF0  2565               	addwf	__i2c_write@data& (0+255),w,b
 10853  014FF2  6ED9               	movwf	fsr2l,c
 10854  014FF4  50F4               	movf	prodh,w,c
 10855  014FF6  2166               	addwfc	(__i2c_write@data+1)& (0+255),w,b
 10856  014FF8  6EDA               	movwf	fsr2h,c
 10857  014FFA  50DF               	movf	indf2,w,c
 10858  014FFC  ECB8  F0AE         	call	__i2c_send
 10859                           
 10860                           ;i2c.c: 101: _i2c_wait_idle();
 10861  015000  EC2D  F0A3         	call	__i2c_wait_idle	;wreg free
 10862  015004  0100               	movlb	0	; () banked
 10863  015006  2B69               	incf	__i2c_write@cntr& (0+255),f,b
 10864  015008                     l1160:
 10865                           
 10866                           ; BSR set to: 0
 10867                           
 10868                           ; BSR set to: 0
 10869  015008  5167               	movf	__i2c_write@length& (0+255),w,b
 10870  01500A  5D69               	subwf	__i2c_write@cntr& (0+255),w,b
 10871  01500C  A0D8               	btfss	status,0,c
 10872  01500E  D7ED               	goto	l1161
 10873                           
 10874                           ; BSR set to: 0
 10875                           ;i2c.c: 102: };i2c.c: 104: _i2c_stop();
 10876                           
 10877                           ; BSR set to: 0
 10878  015010  ECC7  F0AE         	call	__i2c_stop	;wreg free
 10879  015014  0012               	return		;funcret
 10880  015016                     __end_of__i2c_write:
 10881                           	opt stack 0
 10882                           tblptru	equ	0xFF8
 10883                           tblptrh	equ	0xFF7
 10884                           tblptrl	equ	0xFF6
 10885                           tablat	equ	0xFF5
 10886                           prodh	equ	0xFF4
 10887                           prodl	equ	0xFF3
 10888                           postinc0	equ	0xFEE
 10889                           wreg	equ	0xFE8
 10890                           postdec1	equ	0xFE5
 10891                           plusw1	equ	0xFE3
 10892                           fsr1h	equ	0xFE2
 10893                           fsr1l	equ	0xFE1
 10894                           indf2	equ	0xFDF
 10895                           postinc2	equ	0xFDE
 10896                           plusw2	equ	0xFDB
 10897                           fsr2h	equ	0xFDA
 10898                           fsr2l	equ	0xFD9
 10899                           status	equ	0xFD8
 10900                           
 10901 ;; *************** function __i2c_wait_idle *****************
 10902 ;; Defined at:
 10903 ;;		line 44 in file "i2c.c"
 10904 ;; Parameters:    Size  Location     Type
 10905 ;;		None
 10906 ;; Auto vars:     Size  Location     Type
 10907 ;;		None
 10908 ;; Return value:  Size  Location     Type
 10909 ;;                  1    wreg      void 
 10910 ;; Registers used:
 10911 ;;		wreg, status,2, status,0
 10912 ;; Tracked objects:
 10913 ;;		On entry : 0/0
 10914 ;;		On exit  : 0/0
 10915 ;;		Unchanged: 0/0
 10916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10919 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10920 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10921 ;;Total ram usage:        5 bytes
 10922 ;; Hardware stack levels used:    1
 10923 ;; Hardware stack levels required when called:   10
 10924 ;; This function calls:
 10925 ;;		Nothing
 10926 ;; This function is called by:
 10927 ;;		__i2c_write
 10928 ;;		__i2c_read
 10929 ;;		__i2c_eeprom_busy
 10930 ;;		_i2c_display_write_fixed
 10931 ;;		_i2c_adc_read
 10932 ;;		_i2c_display_write
 10933 ;; This function uses a non-reentrant model
 10934 ;;
 10935                           
 10936                           	psect	text31
 10937  01465A                     __ptext31:
 10938                           	opt stack 0
 10939  01465A                     __i2c_wait_idle:
 10940                           	opt stack 16
 10941                           
 10942                           ;i2c.c: 46: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 10943                           
 10944                           ;incstack = 0
 10945  01465A  A4C7               	btfss	4039,2,c	;volatile
 10946  01465C  D004               	goto	u11420
 10947  01465E  0100               	movlb	0	; () banked
 10948  014660  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10949  014662  2B60               	incf	??__i2c_wait_idle& (0+255),f,b
 10950  014664  D002               	goto	u11428
 10951  014666                     u11420:
 10952  014666  0100               	movlb	0	; () banked
 10953  014668  6B60               	clrf	??__i2c_wait_idle& (0+255),b
 10954  01466A                     u11428:
 10955  01466A  A0C5               	btfss	4037,0,c	;volatile
 10956  01466C  D003               	goto	u11430
 10957  01466E  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10958  014670  2B61               	incf	(??__i2c_wait_idle+1)& (0+255),f,b
 10959  014672  D002               	goto	u11438
 10960  014674                     u11430:
 10961  014674  0100               	movlb	0	; () banked
 10962  014676  6B61               	clrf	(??__i2c_wait_idle+1)& (0+255),b
 10963  014678                     u11438:
 10964  014678  A2C5               	btfss	4037,1,c	;volatile
 10965  01467A  D003               	goto	u11440
 10966  01467C  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10967  01467E  2B62               	incf	(??__i2c_wait_idle+2)& (0+255),f,b
 10968  014680  D002               	goto	u11448
 10969  014682                     u11440:
 10970  014682  0100               	movlb	0	; () banked
 10971  014684  6B62               	clrf	(??__i2c_wait_idle+2)& (0+255),b
 10972  014686                     u11448:
 10973  014686  A4C5               	btfss	4037,2,c	;volatile
 10974  014688  D003               	goto	u11450
 10975  01468A  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10976  01468C  2B63               	incf	(??__i2c_wait_idle+3)& (0+255),f,b
 10977  01468E  D002               	goto	u11458
 10978  014690                     u11450:
 10979  014690  0100               	movlb	0	; () banked
 10980  014692  6B63               	clrf	(??__i2c_wait_idle+3)& (0+255),b
 10981  014694                     u11458:
 10982  014694  A6C5               	btfss	4037,3,c	;volatile
 10983  014696  D003               	goto	u11460
 10984  014698  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10985  01469A  2B64               	incf	(??__i2c_wait_idle+4)& (0+255),f,b
 10986  01469C  D002               	goto	u11468
 10987  01469E                     u11460:
 10988  01469E  0100               	movlb	0	; () banked
 10989  0146A0  6B64               	clrf	(??__i2c_wait_idle+4)& (0+255),b
 10990  0146A2                     u11468:
 10991  0146A2  A8C5               	btfss	4037,4,c	;volatile
 10992  0146A4  D002               	goto	u11470
 10993  0146A6  0E01               	movlw	1
 10994  0146A8  D001               	goto	u11476
 10995  0146AA                     u11470:
 10996  0146AA  0E00               	movlw	0
 10997  0146AC                     u11476:
 10998  0146AC  1164               	iorwf	(??__i2c_wait_idle+4)& (0+255),w,b
 10999  0146AE  1163               	iorwf	(??__i2c_wait_idle+3)& (0+255),w,b
 11000  0146B0  1162               	iorwf	(??__i2c_wait_idle+2)& (0+255),w,b
 11001  0146B2  1161               	iorwf	(??__i2c_wait_idle+1)& (0+255),w,b
 11002  0146B4  1160               	iorwf	??__i2c_wait_idle& (0+255),w,b
 11003  0146B6  0900               	iorlw	0
 11004  0146B8  B4D8               	btfsc	status,2,c
 11005  0146BA  0012               	return	
 11006  0146BC  D7CE               	goto	__i2c_wait_idle
 11007  0146BE                     __end_of__i2c_wait_idle:
 11008                           	opt stack 0
 11009                           tblptru	equ	0xFF8
 11010                           tblptrh	equ	0xFF7
 11011                           tblptrl	equ	0xFF6
 11012                           tablat	equ	0xFF5
 11013                           prodh	equ	0xFF4
 11014                           prodl	equ	0xFF3
 11015                           postinc0	equ	0xFEE
 11016                           wreg	equ	0xFE8
 11017                           postdec1	equ	0xFE5
 11018                           plusw1	equ	0xFE3
 11019                           fsr1h	equ	0xFE2
 11020                           fsr1l	equ	0xFE1
 11021                           indf2	equ	0xFDF
 11022                           postinc2	equ	0xFDE
 11023                           plusw2	equ	0xFDB
 11024                           fsr2h	equ	0xFDA
 11025                           fsr2l	equ	0xFD9
 11026                           status	equ	0xFD8
 11027                           
 11028 ;; *************** function __i2c_stop *****************
 11029 ;; Defined at:
 11030 ;;		line 67 in file "i2c.c"
 11031 ;; Parameters:    Size  Location     Type
 11032 ;;		None
 11033 ;; Auto vars:     Size  Location     Type
 11034 ;;		None
 11035 ;; Return value:  Size  Location     Type
 11036 ;;                  1    wreg      void 
 11037 ;; Registers used:
 11038 ;;		None
 11039 ;; Tracked objects:
 11040 ;;		On entry : 0/0
 11041 ;;		On exit  : 0/0
 11042 ;;		Unchanged: 0/0
 11043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11045 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11046 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11047 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11048 ;;Total ram usage:        0 bytes
 11049 ;; Hardware stack levels used:    1
 11050 ;; Hardware stack levels required when called:   10
 11051 ;; This function calls:
 11052 ;;		Nothing
 11053 ;; This function is called by:
 11054 ;;		__i2c_write
 11055 ;;		__i2c_read
 11056 ;;		__i2c_eeprom_busy
 11057 ;;		_i2c_display_write_fixed
 11058 ;;		_i2c_adc_read
 11059 ;;		_i2c_display_write
 11060 ;; This function uses a non-reentrant model
 11061 ;;
 11062                           
 11063                           	psect	text32
 11064  015D8E                     __ptext32:
 11065                           	opt stack 0
 11066  015D8E                     __i2c_stop:
 11067                           	opt stack 16
 11068                           
 11069                           ;i2c.c: 69: SSP1CON2bits.PEN = 1;
 11070                           
 11071                           ; BSR set to: 0
 11072                           ;incstack = 0
 11073  015D8E  84C5               	bsf	4037,2,c	;volatile
 11074  015D90  A4C5               	btfss	4037,2,c	;volatile
 11075  015D92  0012               	return	
 11076  015D94  D7FD               	goto	l1143
 11077  015D96                     __end_of__i2c_stop:
 11078                           	opt stack 0
 11079                           tblptru	equ	0xFF8
 11080                           tblptrh	equ	0xFF7
 11081                           tblptrl	equ	0xFF6
 11082                           tablat	equ	0xFF5
 11083                           prodh	equ	0xFF4
 11084                           prodl	equ	0xFF3
 11085                           postinc0	equ	0xFEE
 11086                           wreg	equ	0xFE8
 11087                           postdec1	equ	0xFE5
 11088                           plusw1	equ	0xFE3
 11089                           fsr1h	equ	0xFE2
 11090                           fsr1l	equ	0xFE1
 11091                           indf2	equ	0xFDF
 11092                           postinc2	equ	0xFDE
 11093                           plusw2	equ	0xFDB
 11094                           fsr2h	equ	0xFDA
 11095                           fsr2l	equ	0xFD9
 11096                           status	equ	0xFD8
 11097                           
 11098 ;; *************** function __i2c_start *****************
 11099 ;; Defined at:
 11100 ;;		line 49 in file "i2c.c"
 11101 ;; Parameters:    Size  Location     Type
 11102 ;;		None
 11103 ;; Auto vars:     Size  Location     Type
 11104 ;;		None
 11105 ;; Return value:  Size  Location     Type
 11106 ;;                  1    wreg      void 
 11107 ;; Registers used:
 11108 ;;		None
 11109 ;; Tracked objects:
 11110 ;;		On entry : 0/0
 11111 ;;		On exit  : 0/0
 11112 ;;		Unchanged: 0/0
 11113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11115 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11117 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11118 ;;Total ram usage:        0 bytes
 11119 ;; Hardware stack levels used:    1
 11120 ;; Hardware stack levels required when called:   10
 11121 ;; This function calls:
 11122 ;;		Nothing
 11123 ;; This function is called by:
 11124 ;;		__i2c_write
 11125 ;;		__i2c_read
 11126 ;;		__i2c_eeprom_busy
 11127 ;;		_i2c_display_write_fixed
 11128 ;;		_i2c_adc_read
 11129 ;;		_i2c_display_write
 11130 ;; This function uses a non-reentrant model
 11131 ;;
 11132                           
 11133                           	psect	text33
 11134  015D96                     __ptext33:
 11135                           	opt stack 0
 11136  015D96                     __i2c_start:
 11137                           	opt stack 16
 11138                           
 11139                           ;i2c.c: 51: SSP1CON2bits.SEN=1;
 11140                           
 11141                           ;incstack = 0
 11142  015D96  80C5               	bsf	4037,0,c	;volatile
 11143  015D98  A0C5               	btfss	4037,0,c	;volatile
 11144  015D9A  0012               	return	
 11145  015D9C  D7FD               	goto	l1128
 11146  015D9E                     __end_of__i2c_start:
 11147                           	opt stack 0
 11148                           tblptru	equ	0xFF8
 11149                           tblptrh	equ	0xFF7
 11150                           tblptrl	equ	0xFF6
 11151                           tablat	equ	0xFF5
 11152                           prodh	equ	0xFF4
 11153                           prodl	equ	0xFF3
 11154                           postinc0	equ	0xFEE
 11155                           wreg	equ	0xFE8
 11156                           postdec1	equ	0xFE5
 11157                           plusw1	equ	0xFE3
 11158                           fsr1h	equ	0xFE2
 11159                           fsr1l	equ	0xFE1
 11160                           indf2	equ	0xFDF
 11161                           postinc2	equ	0xFDE
 11162                           plusw2	equ	0xFDB
 11163                           fsr2h	equ	0xFDA
 11164                           fsr2l	equ	0xFD9
 11165                           status	equ	0xFD8
 11166                           
 11167 ;; *************** function __i2c_send *****************
 11168 ;; Defined at:
 11169 ;;		line 55 in file "i2c.c"
 11170 ;; Parameters:    Size  Location     Type
 11171 ;;  dat             1    wreg     unsigned char 
 11172 ;; Auto vars:     Size  Location     Type
 11173 ;;  dat             1    0[BANK0 ] unsigned char 
 11174 ;; Return value:  Size  Location     Type
 11175 ;;                  1    wreg      void 
 11176 ;; Registers used:
 11177 ;;		wreg
 11178 ;; Tracked objects:
 11179 ;;		On entry : 0/0
 11180 ;;		On exit  : 0/0
 11181 ;;		Unchanged: 0/0
 11182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11184 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11186 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11187 ;;Total ram usage:        1 bytes
 11188 ;; Hardware stack levels used:    1
 11189 ;; Hardware stack levels required when called:   10
 11190 ;; This function calls:
 11191 ;;		Nothing
 11192 ;; This function is called by:
 11193 ;;		__i2c_write
 11194 ;;		__i2c_read
 11195 ;;		__i2c_eeprom_busy
 11196 ;;		_i2c_display_write_fixed
 11197 ;;		_i2c_adc_read
 11198 ;;		_i2c_display_write
 11199 ;; This function uses a non-reentrant model
 11200 ;;
 11201                           
 11202                           	psect	text34
 11203  015D70                     __ptext34:
 11204                           	opt stack 0
 11205  015D70                     __i2c_send:
 11206                           	opt stack 16
 11207                           
 11208                           ;incstack = 0
 11209                           ;__i2c_send@dat stored from wreg
 11210  015D70  0100               	movlb	0	; () banked
 11211  015D72  6F60               	movwf	__i2c_send@dat& (0+255),b
 11212                           
 11213                           ;i2c.c: 57: SSP1BUF = dat;
 11214  015D74  C060  FFC9         	movff	__i2c_send@dat,4041	;volatile
 11215  015D78  0012               	return		;funcret
 11216  015D7A                     __end_of__i2c_send:
 11217                           	opt stack 0
 11218                           tblptru	equ	0xFF8
 11219                           tblptrh	equ	0xFF7
 11220                           tblptrl	equ	0xFF6
 11221                           tablat	equ	0xFF5
 11222                           prodh	equ	0xFF4
 11223                           prodl	equ	0xFF3
 11224                           postinc0	equ	0xFEE
 11225                           wreg	equ	0xFE8
 11226                           postdec1	equ	0xFE5
 11227                           plusw1	equ	0xFE3
 11228                           fsr1h	equ	0xFE2
 11229                           fsr1l	equ	0xFE1
 11230                           indf2	equ	0xFDF
 11231                           postinc2	equ	0xFDE
 11232                           plusw2	equ	0xFDB
 11233                           fsr2h	equ	0xFDA
 11234                           fsr2l	equ	0xFD9
 11235                           status	equ	0xFD8
 11236                           
 11237 ;; *************** function __display_start *****************
 11238 ;; Defined at:
 11239 ;;		line 266 in file "display.c"
 11240 ;; Parameters:    Size  Location     Type
 11241 ;;		None
 11242 ;; Auto vars:     Size  Location     Type
 11243 ;;  cntr            1   28[BANK0 ] unsigned char 
 11244 ;; Return value:  Size  Location     Type
 11245 ;;                  1    wreg      void 
 11246 ;; Registers used:
 11247 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11248 ;; Tracked objects:
 11249 ;;		On entry : 0/0
 11250 ;;		On exit  : 0/0
 11251 ;;		Unchanged: 0/0
 11252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11254 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11256 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11257 ;;Total ram usage:        1 bytes
 11258 ;; Hardware stack levels used:    1
 11259 ;; Hardware stack levels required when called:   14
 11260 ;; This function calls:
 11261 ;;		__display_itoa_u16
 11262 ;;		_memcpy
 11263 ;; This function is called by:
 11264 ;;		_display_init
 11265 ;; This function uses a non-reentrant model
 11266 ;;
 11267                           
 11268                           	psect	text35
 11269  0130B2                     __ptext35:
 11270                           	opt stack 0
 11271  0130B2                     __display_start:
 11272                           	opt stack 14
 11273                           
 11274                           ;display.c: 268: uint8_t cntr;;display.c: 269: memcpy(display_content, dc_startup, sizeo
      +                          f display_content);
 11275                           
 11276                           ;incstack = 0
 11277  0130B2  0E42               	movlw	low _display_content
 11278  0130B4  0100               	movlb	0	; () banked
 11279  0130B6  6F60               	movwf	memcpy@d1& (0+255),b
 11280  0130B8  0E02               	movlw	high _display_content
 11281  0130BA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 11282  0130BC  0E00               	movlw	low _dc_startup
 11283  0130BE  6F62               	movwf	memcpy@s1& (0+255),b
 11284  0130C0  0E04               	movlw	high _dc_startup
 11285  0130C2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 11286  0130C4  0E00               	movlw	0
 11287  0130C6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 11288  0130C8  0E50               	movlw	80
 11289  0130CA  6F64               	movwf	memcpy@n& (0+255),b
 11290  0130CC  ECF2  F0A3         	call	_memcpy	;wreg free
 11291                           
 11292                           ;display.c: 270: cntr = 6;
 11293  0130D0  0E06               	movlw	6
 11294  0130D2  0100               	movlb	0	; () banked
 11295  0130D4  6F7C               	movwf	__display_start@cntr& (0+255),b
 11296                           
 11297                           ; BSR set to: 0
 11298                           ;display.c: 271: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11299  0130D6  0E00               	movlw	0
 11300  0130D8  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11301  0130DA  0E00               	movlw	0
 11302  0130DC  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11303  0130DE  517C               	movf	__display_start@cntr& (0+255),w,b
 11304  0130E0  0D01               	mullw	1
 11305  0130E2  0E6A               	movlw	low (_display_content+40)
 11306  0130E4  24F3               	addwf	prodl,w,c
 11307  0130E6  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11308  0130E8  0E02               	movlw	high (_display_content+40)
 11309  0130EA  20F4               	addwfc	prodh,w,c
 11310  0130EC  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11311  0130EE  ECFF  F097         	call	__display_itoa_u16	;wreg free
 11312  0130F2  0100               	movlb	0	; () banked
 11313  0130F4  277C               	addwf	__display_start@cntr& (0+255),f,b
 11314                           
 11315                           ; BSR set to: 0
 11316                           ;display.c: 272: display_content[2][cntr++] = '.';
 11317  0130F6  517C               	movf	__display_start@cntr& (0+255),w,b
 11318  0130F8  0D01               	mullw	1
 11319  0130FA  0E6A               	movlw	low (_display_content+40)
 11320  0130FC  24F3               	addwf	prodl,w,c
 11321  0130FE  6ED9               	movwf	fsr2l,c
 11322  013100  0E02               	movlw	high (_display_content+40)
 11323  013102  20F4               	addwfc	prodh,w,c
 11324  013104  6EDA               	movwf	fsr2h,c
 11325  013106  0E2E               	movlw	46
 11326  013108  6EDF               	movwf	indf2,c
 11327                           
 11328                           ; BSR set to: 0
 11329  01310A  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11330                           
 11331                           ; BSR set to: 0
 11332                           ;display.c: 273: cntr += _display_itoa_u16(0x06, &display_content[2][cntr]);
 11333  01310C  0E00               	movlw	0
 11334  01310E  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11335  013110  0E06               	movlw	6
 11336  013112  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11337  013114  517C               	movf	__display_start@cntr& (0+255),w,b
 11338  013116  0D01               	mullw	1
 11339  013118  0E6A               	movlw	low (_display_content+40)
 11340  01311A  24F3               	addwf	prodl,w,c
 11341  01311C  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11342  01311E  0E02               	movlw	high (_display_content+40)
 11343  013120  20F4               	addwfc	prodh,w,c
 11344  013122  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11345  013124  ECFF  F097         	call	__display_itoa_u16	;wreg free
 11346  013128  0100               	movlb	0	; () banked
 11347  01312A  277C               	addwf	__display_start@cntr& (0+255),f,b
 11348                           
 11349                           ; BSR set to: 0
 11350                           ;display.c: 274: display_content[2][cntr++] = '.';
 11351  01312C  517C               	movf	__display_start@cntr& (0+255),w,b
 11352  01312E  0D01               	mullw	1
 11353  013130  0E6A               	movlw	low (_display_content+40)
 11354  013132  24F3               	addwf	prodl,w,c
 11355  013134  6ED9               	movwf	fsr2l,c
 11356  013136  0E02               	movlw	high (_display_content+40)
 11357  013138  20F4               	addwfc	prodh,w,c
 11358  01313A  6EDA               	movwf	fsr2h,c
 11359  01313C  0E2E               	movlw	46
 11360  01313E  6EDF               	movwf	indf2,c
 11361                           
 11362                           ; BSR set to: 0
 11363  013140  2B7C               	incf	__display_start@cntr& (0+255),f,b
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;display.c: 275: cntr += _display_itoa_u16(0x00, &display_content[2][cntr]);
 11367  013142  0E00               	movlw	0
 11368  013144  6F79               	movwf	(__display_itoa_u16@value+1)& (0+255),b
 11369  013146  0E00               	movlw	0
 11370  013148  6F78               	movwf	__display_itoa_u16@value& (0+255),b
 11371  01314A  517C               	movf	__display_start@cntr& (0+255),w,b
 11372  01314C  0D01               	mullw	1
 11373  01314E  0E6A               	movlw	low (_display_content+40)
 11374  013150  24F3               	addwf	prodl,w,c
 11375  013152  6F7A               	movwf	__display_itoa_u16@text& (0+255),b
 11376  013154  0E02               	movlw	high (_display_content+40)
 11377  013156  20F4               	addwfc	prodh,w,c
 11378  013158  6F7B               	movwf	(__display_itoa_u16@text+1)& (0+255),b
 11379  01315A  ECFF  F097         	call	__display_itoa_u16	;wreg free
 11380  01315E  0100               	movlb	0	; () banked
 11381  013160  277C               	addwf	__display_start@cntr& (0+255),f,b
 11382                           
 11383                           ; BSR set to: 0
 11384  013162  0012               	return		;funcret
 11385  013164                     __end_of__display_start:
 11386                           	opt stack 0
 11387                           tblptru	equ	0xFF8
 11388                           tblptrh	equ	0xFF7
 11389                           tblptrl	equ	0xFF6
 11390                           tablat	equ	0xFF5
 11391                           prodh	equ	0xFF4
 11392                           prodl	equ	0xFF3
 11393                           postinc0	equ	0xFEE
 11394                           wreg	equ	0xFE8
 11395                           postdec1	equ	0xFE5
 11396                           plusw1	equ	0xFE3
 11397                           fsr1h	equ	0xFE2
 11398                           fsr1l	equ	0xFE1
 11399                           indf2	equ	0xFDF
 11400                           postinc2	equ	0xFDE
 11401                           plusw2	equ	0xFDB
 11402                           fsr2h	equ	0xFDA
 11403                           fsr2l	equ	0xFD9
 11404                           status	equ	0xFD8
 11405                           
 11406 ;; *************** function __display_itoa_u16 *****************
 11407 ;; Defined at:
 11408 ;;		line 226 in file "display.c"
 11409 ;; Parameters:    Size  Location     Type
 11410 ;;  value           2   24[BANK0 ] unsigned int 
 11411 ;;  text            2   26[BANK0 ] PTR unsigned char 
 11412 ;;		 -> display_content(80), 
 11413 ;; Auto vars:     Size  Location     Type
 11414 ;;		None
 11415 ;; Return value:  Size  Location     Type
 11416 ;;                  1    wreg      unsigned char 
 11417 ;; Registers used:
 11418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11419 ;; Tracked objects:
 11420 ;;		On entry : 0/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11424 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11425 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11426 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11427 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11428 ;;Total ram usage:        4 bytes
 11429 ;; Hardware stack levels used:    1
 11430 ;; Hardware stack levels required when called:   13
 11431 ;; This function calls:
 11432 ;;		_itoa
 11433 ;; This function is called by:
 11434 ;;		__display_start
 11435 ;; This function uses a non-reentrant model
 11436 ;;
 11437                           
 11438                           	psect	text36
 11439  012FFE                     __ptext36:
 11440                           	opt stack 0
 11441  012FFE                     __display_itoa_u16:
 11442                           	opt stack 14
 11443                           
 11444                           ;display.c: 228: itoa(text, value, 10);
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;incstack = 0
 11448  012FFE  C07A  F070         	movff	__display_itoa_u16@text,itoa@buf
 11449  013002  C07B  F071         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11450  013006  C078  F072         	movff	__display_itoa_u16@value,itoa@val
 11451  01300A  C079  F073         	movff	__display_itoa_u16@value+1,itoa@val+1
 11452  01300E  0E00               	movlw	0
 11453  013010  0100               	movlb	0	; () banked
 11454  013012  6F75               	movwf	(itoa@base+1)& (0+255),b
 11455  013014  0E0A               	movlw	10
 11456  013016  6F74               	movwf	itoa@base& (0+255),b
 11457  013018  EC84  F0A9         	call	_itoa	;wreg free
 11458                           
 11459                           ;display.c: 229: if(value>9999)
 11460  01301C  0E10               	movlw	16
 11461  01301E  0100               	movlb	0	; () banked
 11462  013020  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11463  013022  0E27               	movlw	39
 11464  013024  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11465  013026  A0D8               	btfss	status,0,c
 11466  013028  D00A               	goto	l1373
 11467                           
 11468                           ; BSR set to: 0
 11469                           ;display.c: 230: {;display.c: 231: *(text+5) = ' ';
 11470  01302A  EE20 F005          	lfsr	2,5
 11471  01302E  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11472  013030  26D9               	addwf	fsr2l,f,c
 11473  013032  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11474  013034  22DA               	addwfc	fsr2h,f,c
 11475  013036  0E20               	movlw	32
 11476  013038  6EDF               	movwf	indf2,c
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;display.c: 232: return 5;
 11480  01303A  0E05               	movlw	5
 11481                           
 11482                           ; BSR set to: 0
 11483                           ;display.c: 233: }
 11484                           
 11485                           ; BSR set to: 0
 11486  01303C  0012               	return	
 11487  01303E                     l1373:
 11488                           
 11489                           ; BSR set to: 0
 11490                           ;display.c: 234: else if (value>999)
 11491                           
 11492                           ; BSR set to: 0
 11493  01303E  0EE8               	movlw	232
 11494  013040  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11495  013042  0E03               	movlw	3
 11496  013044  5979               	subwfb	(__display_itoa_u16@value+1)& (0+255),w,b
 11497  013046  A0D8               	btfss	status,0,c
 11498  013048  D00A               	goto	l1376
 11499                           
 11500                           ; BSR set to: 0
 11501                           ;display.c: 235: {;display.c: 236: *(text+4) = ' ';
 11502  01304A  EE20 F004          	lfsr	2,4
 11503  01304E  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11504  013050  26D9               	addwf	fsr2l,f,c
 11505  013052  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11506  013054  22DA               	addwfc	fsr2h,f,c
 11507  013056  0E20               	movlw	32
 11508  013058  6EDF               	movwf	indf2,c
 11509                           
 11510                           ; BSR set to: 0
 11511                           ;display.c: 237: return 4;
 11512  01305A  0E04               	movlw	4
 11513                           
 11514                           ; BSR set to: 0
 11515                           ;display.c: 238: }
 11516                           
 11517                           ; BSR set to: 0
 11518  01305C  0012               	return	
 11519  01305E                     l1376:
 11520                           
 11521                           ; BSR set to: 0
 11522                           ;display.c: 239: else if (value>99)
 11523                           
 11524                           ; BSR set to: 0
 11525  01305E  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11526  013060  E104               	bnz	u13820
 11527  013062  0E64               	movlw	100
 11528  013064  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11529  013066  A0D8               	btfss	status,0,c
 11530  013068  D00A               	goto	l1378
 11531  01306A                     u13820:
 11532                           
 11533                           ; BSR set to: 0
 11534                           ;display.c: 240: {;display.c: 241: *(text+3) = ' ';
 11535  01306A  EE20 F003          	lfsr	2,3
 11536  01306E  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11537  013070  26D9               	addwf	fsr2l,f,c
 11538  013072  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11539  013074  22DA               	addwfc	fsr2h,f,c
 11540  013076  0E20               	movlw	32
 11541  013078  6EDF               	movwf	indf2,c
 11542                           
 11543                           ; BSR set to: 0
 11544                           ;display.c: 242: return 3;
 11545  01307A  0E03               	movlw	3
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;display.c: 243: }
 11549                           
 11550                           ; BSR set to: 0
 11551  01307C  0012               	return	
 11552  01307E                     l1378:
 11553                           
 11554                           ; BSR set to: 0
 11555                           ;display.c: 244: else if (value>9)
 11556                           
 11557                           ; BSR set to: 0
 11558  01307E  5179               	movf	(__display_itoa_u16@value+1)& (0+255),w,b
 11559  013080  E104               	bnz	u13830
 11560  013082  0E0A               	movlw	10
 11561  013084  5D78               	subwf	__display_itoa_u16@value& (0+255),w,b
 11562  013086  A0D8               	btfss	status,0,c
 11563  013088  D00A               	goto	l1380
 11564  01308A                     u13830:
 11565                           
 11566                           ; BSR set to: 0
 11567                           ;display.c: 245: {;display.c: 246: *(text+2) = ' ';
 11568  01308A  EE20 F002          	lfsr	2,2
 11569  01308E  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11570  013090  26D9               	addwf	fsr2l,f,c
 11571  013092  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11572  013094  22DA               	addwfc	fsr2h,f,c
 11573  013096  0E20               	movlw	32
 11574  013098  6EDF               	movwf	indf2,c
 11575                           
 11576                           ; BSR set to: 0
 11577                           ;display.c: 247: return 2;
 11578  01309A  0E02               	movlw	2
 11579                           
 11580                           ; BSR set to: 0
 11581                           ;display.c: 248: }
 11582                           
 11583                           ; BSR set to: 0
 11584  01309C  0012               	return	
 11585  01309E                     l1380:
 11586                           
 11587                           ; BSR set to: 0
 11588                           ;display.c: 249: else;display.c: 250: {;display.c: 251: *(text+1) = ' ';
 11589                           
 11590                           ; BSR set to: 0
 11591  01309E  EE20 F001          	lfsr	2,1
 11592  0130A2  517A               	movf	__display_itoa_u16@text& (0+255),w,b
 11593  0130A4  26D9               	addwf	fsr2l,f,c
 11594  0130A6  517B               	movf	(__display_itoa_u16@text+1)& (0+255),w,b
 11595  0130A8  22DA               	addwfc	fsr2h,f,c
 11596  0130AA  0E20               	movlw	32
 11597  0130AC  6EDF               	movwf	indf2,c
 11598                           
 11599                           ; BSR set to: 0
 11600                           ;display.c: 252: return 1;
 11601  0130AE  0E01               	movlw	1
 11602                           
 11603                           ; BSR set to: 0
 11604                           
 11605                           ; BSR set to: 0
 11606                           
 11607                           ; BSR set to: 0
 11608                           
 11609                           ; BSR set to: 0
 11610  0130B0  0012               	return	
 11611  0130B2                     __end_of__display_itoa_u16:
 11612                           	opt stack 0
 11613                           tblptru	equ	0xFF8
 11614                           tblptrh	equ	0xFF7
 11615                           tblptrl	equ	0xFF6
 11616                           tablat	equ	0xFF5
 11617                           prodh	equ	0xFF4
 11618                           prodl	equ	0xFF3
 11619                           postinc0	equ	0xFEE
 11620                           wreg	equ	0xFE8
 11621                           postdec1	equ	0xFE5
 11622                           plusw1	equ	0xFE3
 11623                           fsr1h	equ	0xFE2
 11624                           fsr1l	equ	0xFE1
 11625                           indf2	equ	0xFDF
 11626                           postinc2	equ	0xFDE
 11627                           plusw2	equ	0xFDB
 11628                           fsr2h	equ	0xFDA
 11629                           fsr2l	equ	0xFD9
 11630                           status	equ	0xFD8
 11631                           
 11632 ;; *************** function _configFile_write *****************
 11633 ;; Defined at:
 11634 ;;		line 305 in file "config_file.c"
 11635 ;; Parameters:    Size  Location     Type
 11636 ;;		None
 11637 ;; Auto vars:     Size  Location     Type
 11638 ;;  file_size       4  133[BANK0 ] unsigned long 
 11639 ;;  file_number     1  132[BANK0 ] unsigned char 
 11640 ;; Return value:  Size  Location     Type
 11641 ;;                  1    wreg      void 
 11642 ;; Registers used:
 11643 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11644 ;; Tracked objects:
 11645 ;;		On entry : 0/0
 11646 ;;		On exit  : 0/0
 11647 ;;		Unchanged: 0/0
 11648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11650 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11651 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11652 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11653 ;;Total ram usage:        6 bytes
 11654 ;; Hardware stack levels used:    1
 11655 ;; Hardware stack levels required when called:   18
 11656 ;; This function calls:
 11657 ;;		__add_item
 11658 ;;		_fat_create_file
 11659 ;;		_fat_find_file
 11660 ;;		_fat_modify_file
 11661 ;;		_fat_resize_file
 11662 ;; This function is called by:
 11663 ;;		_system_init
 11664 ;; This function uses a non-reentrant model
 11665 ;;
 11666                           
 11667                           	psect	text37
 11668  00C536                     __ptext37:
 11669                           	opt stack 0
 11670  00C536                     _configFile_write:
 11671                           	opt stack 11
 11672                           
 11673                           ;config_file.c: 307: uint8_t file_number;;config_file.c: 308: uint32_t file_size;;config
      +                          _file.c: 310: file_size = 0;
 11674                           
 11675                           ; BSR set to: 0
 11676                           ;incstack = 0
 11677  00C536  0E00               	movlw	0
 11678  00C538  0100               	movlb	0	; () banked
 11679  00C53A  6FE5               	movwf	configFile_write@file_size& (0+255),b
 11680  00C53C  0E00               	movlw	0
 11681  00C53E  6FE6               	movwf	(configFile_write@file_size+1)& (0+255),b
 11682  00C540  0E00               	movlw	0
 11683  00C542  6FE7               	movwf	(configFile_write@file_size+2)& (0+255),b
 11684  00C544  0E00               	movlw	0
 11685  00C546  6FE8               	movwf	(configFile_write@file_size+3)& (0+255),b
 11686                           
 11687                           ; BSR set to: 0
 11688                           ;config_file.c: 311: file_size += _add_item(&full_circle_in_steps_string, (int32_t) conf
      +                          ig.full_circle_in_steps, &ConfigFile_buffer[file_size]);
 11689  00C548  0EFD               	movlw	low _full_circle_in_steps_string
 11690  00C54A  6F84               	movwf	__add_item@item_string& (0+255),b
 11691  00C54C  0EA1               	movlw	high _full_circle_in_steps_string
 11692  00C54E  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11693  00C550  C196  F086         	movff	_config,__add_item@value
 11694  00C554  C197  F087         	movff	_config+1,__add_item@value+1
 11695  00C558  C198  F088         	movff	_config+2,__add_item@value+2
 11696  00C55C  C199  F089         	movff	_config+3,__add_item@value+3
 11697  00C560  0E00               	movlw	low _ConfigFile_buffer
 11698  00C562  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11699  00C564  6F8A               	movwf	__add_item@buffer& (0+255),b
 11700  00C566  0E08               	movlw	high _ConfigFile_buffer
 11701  00C568  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11702  00C56A  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11703  00C56C  EC8E  F08C         	call	__add_item	;wreg free
 11704  00C570  0100               	movlb	0	; () banked
 11705  00C572  6FE3               	movwf	??_configFile_write& (0+255),b
 11706  00C574  51E3               	movf	??_configFile_write& (0+255),w,b
 11707  00C576  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11708  00C578  0E00               	movlw	0
 11709  00C57A  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11710  00C57C  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11711  00C57E  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11712                           
 11713                           ; BSR set to: 0
 11714                           ;config_file.c: 312: file_size += _add_item(&inverse_direction_string, (int32_t) config.
      +                          inverse_direction, &ConfigFile_buffer[file_size]);
 11715  00C580  0E49               	movlw	low _inverse_direction_string
 11716  00C582  6F84               	movwf	__add_item@item_string& (0+255),b
 11717  00C584  0EA2               	movlw	high _inverse_direction_string
 11718  00C586  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11719  00C588  0101               	movlb	1	; () banked
 11720  00C58A  519A               	movf	(_config+4)& (0+255),w,b
 11721  00C58C  0100               	movlb	0	; () banked
 11722  00C58E  6F86               	movwf	__add_item@value& (0+255),b
 11723  00C590  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11724  00C592  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11725  00C594  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11726  00C596  0E00               	movlw	low _ConfigFile_buffer
 11727  00C598  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11728  00C59A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11729  00C59C  0E08               	movlw	high _ConfigFile_buffer
 11730  00C59E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11731  00C5A0  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11732  00C5A2  EC8E  F08C         	call	__add_item	;wreg free
 11733  00C5A6  0100               	movlb	0	; () banked
 11734  00C5A8  6FE3               	movwf	??_configFile_write& (0+255),b
 11735  00C5AA  51E3               	movf	??_configFile_write& (0+255),w,b
 11736  00C5AC  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11737  00C5AE  0E00               	movlw	0
 11738  00C5B0  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11739  00C5B2  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11740  00C5B4  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11741                           
 11742                           ; BSR set to: 0
 11743                           ;config_file.c: 313: file_size += _add_item(&overshoot_in_steps_string, (int32_t) config
      +                          .overshoot_in_steps, &ConfigFile_buffer[file_size]);
 11744  00C5B6  0E12               	movlw	low _overshoot_in_steps_string
 11745  00C5B8  6F84               	movwf	__add_item@item_string& (0+255),b
 11746  00C5BA  0EA2               	movlw	high _overshoot_in_steps_string
 11747  00C5BC  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11748  00C5BE  C19B  F086         	movff	_config+5,__add_item@value
 11749  00C5C2  C19C  F087         	movff	_config+6,__add_item@value+1
 11750  00C5C6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11751  00C5C8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11752  00C5CA  0E00               	movlw	low _ConfigFile_buffer
 11753  00C5CC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11754  00C5CE  6F8A               	movwf	__add_item@buffer& (0+255),b
 11755  00C5D0  0E08               	movlw	high _ConfigFile_buffer
 11756  00C5D2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11757  00C5D4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11758  00C5D6  EC8E  F08C         	call	__add_item	;wreg free
 11759  00C5DA  0100               	movlb	0	; () banked
 11760  00C5DC  6FE3               	movwf	??_configFile_write& (0+255),b
 11761  00C5DE  51E3               	movf	??_configFile_write& (0+255),w,b
 11762  00C5E0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11763  00C5E2  0E00               	movlw	0
 11764  00C5E4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11765  00C5E6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11766  00C5E8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11767                           
 11768                           ; BSR set to: 0
 11769                           ;config_file.c: 314: file_size += _add_item(&overshoot_cost_in_steps_string, (int32_t) c
      +                          onfig.overshoot_cost_in_steps, &ConfigFile_buffer[file_size]);
 11770  00C5EA  0EBB               	movlw	low _overshoot_cost_in_steps_string
 11771  00C5EC  6F84               	movwf	__add_item@item_string& (0+255),b
 11772  00C5EE  0EA1               	movlw	high _overshoot_cost_in_steps_string
 11773  00C5F0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11774  00C5F2  C19D  F086         	movff	_config+7,__add_item@value
 11775  00C5F6  C19E  F087         	movff	_config+8,__add_item@value+1
 11776  00C5FA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11777  00C5FC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11778  00C5FE  0E00               	movlw	low _ConfigFile_buffer
 11779  00C600  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11780  00C602  6F8A               	movwf	__add_item@buffer& (0+255),b
 11781  00C604  0E08               	movlw	high _ConfigFile_buffer
 11782  00C606  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11783  00C608  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11784  00C60A  EC8E  F08C         	call	__add_item	;wreg free
 11785  00C60E  0100               	movlb	0	; () banked
 11786  00C610  6FE3               	movwf	??_configFile_write& (0+255),b
 11787  00C612  51E3               	movf	??_configFile_write& (0+255),w,b
 11788  00C614  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11789  00C616  0E00               	movlw	0
 11790  00C618  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11791  00C61A  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11792  00C61C  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11793                           
 11794                           ; BSR set to: 0
 11795                           ;config_file.c: 315: file_size += _add_item(&minimum_speed_string, (int32_t) config.mini
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11796  00C61E  0E97               	movlw	low _minimum_speed_string
 11797  00C620  6F84               	movwf	__add_item@item_string& (0+255),b
 11798  00C622  0EA2               	movlw	high _minimum_speed_string
 11799  00C624  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11800  00C626  C19F  F086         	movff	_config+9,__add_item@value
 11801  00C62A  C1A0  F087         	movff	_config+10,__add_item@value+1
 11802  00C62E  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11803  00C630  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11804  00C632  0E00               	movlw	low _ConfigFile_buffer
 11805  00C634  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11806  00C636  6F8A               	movwf	__add_item@buffer& (0+255),b
 11807  00C638  0E08               	movlw	high _ConfigFile_buffer
 11808  00C63A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11809  00C63C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11810  00C63E  EC8E  F08C         	call	__add_item	;wreg free
 11811  00C642  0100               	movlb	0	; () banked
 11812  00C644  6FE3               	movwf	??_configFile_write& (0+255),b
 11813  00C646  51E3               	movf	??_configFile_write& (0+255),w,b
 11814  00C648  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11815  00C64A  0E00               	movlw	0
 11816  00C64C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11817  00C64E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11818  00C650  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11819                           
 11820                           ; BSR set to: 0
 11821                           ;config_file.c: 316: file_size += _add_item(&maximum_speed_string, (int32_t) config.maxi
      +                          mum_speed, &ConfigFile_buffer[file_size]);
 11822  00C652  0E89               	movlw	low _maximum_speed_string
 11823  00C654  6F84               	movwf	__add_item@item_string& (0+255),b
 11824  00C656  0EA2               	movlw	high _maximum_speed_string
 11825  00C658  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11826  00C65A  C1A1  F086         	movff	_config+11,__add_item@value
 11827  00C65E  C1A2  F087         	movff	_config+12,__add_item@value+1
 11828  00C662  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11829  00C664  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11830  00C666  0E00               	movlw	low _ConfigFile_buffer
 11831  00C668  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11832  00C66A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11833  00C66C  0E08               	movlw	high _ConfigFile_buffer
 11834  00C66E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11835  00C670  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11836  00C672  EC8E  F08C         	call	__add_item	;wreg free
 11837  00C676  0100               	movlb	0	; () banked
 11838  00C678  6FE3               	movwf	??_configFile_write& (0+255),b
 11839  00C67A  51E3               	movf	??_configFile_write& (0+255),w,b
 11840  00C67C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11841  00C67E  0E00               	movlw	0
 11842  00C680  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11843  00C682  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11844  00C684  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;config_file.c: 317: file_size += _add_item(&initial_speed_arc_string, (int32_t) config.
      +                          initial_speed_arc, &ConfigFile_buffer[file_size]);
 11848  00C686  0E37               	movlw	low _initial_speed_arc_string
 11849  00C688  6F84               	movwf	__add_item@item_string& (0+255),b
 11850  00C68A  0EA2               	movlw	high _initial_speed_arc_string
 11851  00C68C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11852  00C68E  C1A3  F086         	movff	_config+13,__add_item@value
 11853  00C692  C1A4  F087         	movff	_config+14,__add_item@value+1
 11854  00C696  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11855  00C698  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11856  00C69A  0E00               	movlw	low _ConfigFile_buffer
 11857  00C69C  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11858  00C69E  6F8A               	movwf	__add_item@buffer& (0+255),b
 11859  00C6A0  0E08               	movlw	high _ConfigFile_buffer
 11860  00C6A2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11861  00C6A4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11862  00C6A6  EC8E  F08C         	call	__add_item	;wreg free
 11863  00C6AA  0100               	movlb	0	; () banked
 11864  00C6AC  6FE3               	movwf	??_configFile_write& (0+255),b
 11865  00C6AE  51E3               	movf	??_configFile_write& (0+255),w,b
 11866  00C6B0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11867  00C6B2  0E00               	movlw	0
 11868  00C6B4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11869  00C6B6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11870  00C6B8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11871                           
 11872                           ; BSR set to: 0
 11873                           ;config_file.c: 318: file_size += _add_item(&maximum_speed_arc_string, (int32_t) config.
      +                          maximum_speed_arc, &ConfigFile_buffer[file_size]);
 11874  00C6BA  0E25               	movlw	low _maximum_speed_arc_string
 11875  00C6BC  6F84               	movwf	__add_item@item_string& (0+255),b
 11876  00C6BE  0EA2               	movlw	high _maximum_speed_arc_string
 11877  00C6C0  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11878  00C6C2  C1A5  F086         	movff	_config+15,__add_item@value
 11879  00C6C6  C1A6  F087         	movff	_config+16,__add_item@value+1
 11880  00C6CA  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11881  00C6CC  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11882  00C6CE  0E00               	movlw	low _ConfigFile_buffer
 11883  00C6D0  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11884  00C6D2  6F8A               	movwf	__add_item@buffer& (0+255),b
 11885  00C6D4  0E08               	movlw	high _ConfigFile_buffer
 11886  00C6D6  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11887  00C6D8  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11888  00C6DA  EC8E  F08C         	call	__add_item	;wreg free
 11889  00C6DE  0100               	movlb	0	; () banked
 11890  00C6E0  6FE3               	movwf	??_configFile_write& (0+255),b
 11891  00C6E2  51E3               	movf	??_configFile_write& (0+255),w,b
 11892  00C6E4  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11893  00C6E6  0E00               	movlw	0
 11894  00C6E8  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11895  00C6EA  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11896  00C6EC  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11897                           
 11898                           ; BSR set to: 0
 11899                           ;config_file.c: 319: file_size += _add_item(&initial_speed_manual_string, (int32_t) conf
      +                          ig.initial_speed_manual, &ConfigFile_buffer[file_size]);
 11900  00C6EE  0EE8               	movlw	low _initial_speed_manual_string
 11901  00C6F0  6F84               	movwf	__add_item@item_string& (0+255),b
 11902  00C6F2  0EA1               	movlw	high _initial_speed_manual_string
 11903  00C6F4  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11904  00C6F6  C1A7  F086         	movff	_config+17,__add_item@value
 11905  00C6FA  C1A8  F087         	movff	_config+18,__add_item@value+1
 11906  00C6FE  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11907  00C700  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11908  00C702  0E00               	movlw	low _ConfigFile_buffer
 11909  00C704  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11910  00C706  6F8A               	movwf	__add_item@buffer& (0+255),b
 11911  00C708  0E08               	movlw	high _ConfigFile_buffer
 11912  00C70A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11913  00C70C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11914  00C70E  EC8E  F08C         	call	__add_item	;wreg free
 11915  00C712  0100               	movlb	0	; () banked
 11916  00C714  6FE3               	movwf	??_configFile_write& (0+255),b
 11917  00C716  51E3               	movf	??_configFile_write& (0+255),w,b
 11918  00C718  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11919  00C71A  0E00               	movlw	0
 11920  00C71C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11921  00C71E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11922  00C720  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11923                           
 11924                           ; BSR set to: 0
 11925                           ;config_file.c: 320: file_size += _add_item(&maximum_speed_manual_string, (int32_t) conf
      +                          ig.maximum_speed_manual, &ConfigFile_buffer[file_size]);
 11926  00C722  0ED3               	movlw	low _maximum_speed_manual_string
 11927  00C724  6F84               	movwf	__add_item@item_string& (0+255),b
 11928  00C726  0EA1               	movlw	high _maximum_speed_manual_string
 11929  00C728  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11930  00C72A  C1A9  F086         	movff	_config+19,__add_item@value
 11931  00C72E  C1AA  F087         	movff	_config+20,__add_item@value+1
 11932  00C732  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11933  00C734  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11934  00C736  0E00               	movlw	low _ConfigFile_buffer
 11935  00C738  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11936  00C73A  6F8A               	movwf	__add_item@buffer& (0+255),b
 11937  00C73C  0E08               	movlw	high _ConfigFile_buffer
 11938  00C73E  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11939  00C740  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11940  00C742  EC8E  F08C         	call	__add_item	;wreg free
 11941  00C746  0100               	movlb	0	; () banked
 11942  00C748  6FE3               	movwf	??_configFile_write& (0+255),b
 11943  00C74A  51E3               	movf	??_configFile_write& (0+255),w,b
 11944  00C74C  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11945  00C74E  0E00               	movlw	0
 11946  00C750  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11947  00C752  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11948  00C754  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11949                           
 11950                           ; BSR set to: 0
 11951                           ;config_file.c: 321: file_size += _add_item(&use_ccw_limit_string, (int32_t) config.use_
      +                          ccw_limit, &ConfigFile_buffer[file_size]);
 11952  00C756  0E6D               	movlw	low _use_ccw_limit_string
 11953  00C758  6F84               	movwf	__add_item@item_string& (0+255),b
 11954  00C75A  0EA2               	movlw	high _use_ccw_limit_string
 11955  00C75C  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11956  00C75E  0101               	movlb	1	; () banked
 11957  00C760  51B5               	movf	(_config+31)& (0+255),w,b
 11958  00C762  0100               	movlb	0	; () banked
 11959  00C764  6F86               	movwf	__add_item@value& (0+255),b
 11960  00C766  6B87               	clrf	(__add_item@value+1)& (0+255),b
 11961  00C768  6B88               	clrf	(__add_item@value+2)& (0+255),b
 11962  00C76A  6B89               	clrf	(__add_item@value+3)& (0+255),b
 11963  00C76C  0E00               	movlw	low _ConfigFile_buffer
 11964  00C76E  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11965  00C770  6F8A               	movwf	__add_item@buffer& (0+255),b
 11966  00C772  0E08               	movlw	high _ConfigFile_buffer
 11967  00C774  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11968  00C776  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11969  00C778  EC8E  F08C         	call	__add_item	;wreg free
 11970  00C77C  0100               	movlb	0	; () banked
 11971  00C77E  6FE3               	movwf	??_configFile_write& (0+255),b
 11972  00C780  51E3               	movf	??_configFile_write& (0+255),w,b
 11973  00C782  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 11974  00C784  0E00               	movlw	0
 11975  00C786  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 11976  00C788  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 11977  00C78A  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;config_file.c: 322: file_size += _add_item(&ccw_limit_string, (int32_t) config.ccw_limi
      +                          t, &ConfigFile_buffer[file_size]);
 11981  00C78C  0EB2               	movlw	low _ccw_limit_string
 11982  00C78E  6F84               	movwf	__add_item@item_string& (0+255),b
 11983  00C790  0EA2               	movlw	high _ccw_limit_string
 11984  00C792  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 11985  00C794  C1B6  F086         	movff	_config+32,__add_item@value
 11986  00C798  C1B7  F087         	movff	_config+33,__add_item@value+1
 11987  00C79C  C1B8  F088         	movff	_config+34,__add_item@value+2
 11988  00C7A0  C1B9  F089         	movff	_config+35,__add_item@value+3
 11989  00C7A4  0E00               	movlw	low _ConfigFile_buffer
 11990  00C7A6  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 11991  00C7A8  6F8A               	movwf	__add_item@buffer& (0+255),b
 11992  00C7AA  0E08               	movlw	high _ConfigFile_buffer
 11993  00C7AC  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 11994  00C7AE  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 11995  00C7B0  EC8E  F08C         	call	__add_item	;wreg free
 11996  00C7B4  0100               	movlb	0	; () banked
 11997  00C7B6  6FE3               	movwf	??_configFile_write& (0+255),b
 11998  00C7B8  51E3               	movf	??_configFile_write& (0+255),w,b
 11999  00C7BA  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12000  00C7BC  0E00               	movlw	0
 12001  00C7BE  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12002  00C7C0  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12003  00C7C2  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12004                           
 12005                           ; BSR set to: 0
 12006                           ;config_file.c: 323: file_size += _add_item(&use_cw_limit_string, (int32_t) config.use_c
      +                          w_limit, &ConfigFile_buffer[file_size]);
 12007  00C7C4  0EA5               	movlw	low _use_cw_limit_string
 12008  00C7C6  6F84               	movwf	__add_item@item_string& (0+255),b
 12009  00C7C8  0EA2               	movlw	high _use_cw_limit_string
 12010  00C7CA  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12011  00C7CC  0101               	movlb	1	; () banked
 12012  00C7CE  51AC               	movf	(_config+22)& (0+255),w,b
 12013  00C7D0  0100               	movlb	0	; () banked
 12014  00C7D2  6F86               	movwf	__add_item@value& (0+255),b
 12015  00C7D4  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12016  00C7D6  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12017  00C7D8  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12018  00C7DA  0E00               	movlw	low _ConfigFile_buffer
 12019  00C7DC  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12020  00C7DE  6F8A               	movwf	__add_item@buffer& (0+255),b
 12021  00C7E0  0E08               	movlw	high _ConfigFile_buffer
 12022  00C7E2  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12023  00C7E4  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12024  00C7E6  EC8E  F08C         	call	__add_item	;wreg free
 12025  00C7EA  0100               	movlb	0	; () banked
 12026  00C7EC  6FE3               	movwf	??_configFile_write& (0+255),b
 12027  00C7EE  51E3               	movf	??_configFile_write& (0+255),w,b
 12028  00C7F0  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12029  00C7F2  0E00               	movlw	0
 12030  00C7F4  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12031  00C7F6  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12032  00C7F8  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;config_file.c: 324: file_size += _add_item(&cw_limit_string, (int32_t) config.cw_limit,
      +                           &ConfigFile_buffer[file_size]);
 12036  00C7FA  0EBC               	movlw	low _cw_limit_string
 12037  00C7FC  6F84               	movwf	__add_item@item_string& (0+255),b
 12038  00C7FE  0EA2               	movlw	high _cw_limit_string
 12039  00C800  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12040  00C802  C1AD  F086         	movff	_config+23,__add_item@value
 12041  00C806  C1AE  F087         	movff	_config+24,__add_item@value+1
 12042  00C80A  C1AF  F088         	movff	_config+25,__add_item@value+2
 12043  00C80E  C1B0  F089         	movff	_config+26,__add_item@value+3
 12044  00C812  0E00               	movlw	low _ConfigFile_buffer
 12045  00C814  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12046  00C816  6F8A               	movwf	__add_item@buffer& (0+255),b
 12047  00C818  0E08               	movlw	high _ConfigFile_buffer
 12048  00C81A  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12049  00C81C  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12050  00C81E  EC8E  F08C         	call	__add_item	;wreg free
 12051  00C822  0100               	movlb	0	; () banked
 12052  00C824  6FE3               	movwf	??_configFile_write& (0+255),b
 12053  00C826  51E3               	movf	??_configFile_write& (0+255),w,b
 12054  00C828  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12055  00C82A  0E00               	movlw	0
 12056  00C82C  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12057  00C82E  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12058  00C830  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12059                           
 12060                           ; BSR set to: 0
 12061                           ;config_file.c: 325: file_size += _add_item(&beep_duration_string, (int32_t) config.beep
      +                          _duration, &ConfigFile_buffer[file_size]);
 12062  00C832  0E7B               	movlw	low _beep_duration_string
 12063  00C834  6F84               	movwf	__add_item@item_string& (0+255),b
 12064  00C836  0EA2               	movlw	high _beep_duration_string
 12065  00C838  6F85               	movwf	(__add_item@item_string+1)& (0+255),b
 12066  00C83A  0101               	movlb	1	; () banked
 12067  00C83C  51AB               	movf	(_config+21)& (0+255),w,b
 12068  00C83E  0100               	movlb	0	; () banked
 12069  00C840  6F86               	movwf	__add_item@value& (0+255),b
 12070  00C842  6B87               	clrf	(__add_item@value+1)& (0+255),b
 12071  00C844  6B88               	clrf	(__add_item@value+2)& (0+255),b
 12072  00C846  6B89               	clrf	(__add_item@value+3)& (0+255),b
 12073  00C848  0E00               	movlw	low _ConfigFile_buffer
 12074  00C84A  25E5               	addwf	configFile_write@file_size& (0+255),w,b
 12075  00C84C  6F8A               	movwf	__add_item@buffer& (0+255),b
 12076  00C84E  0E08               	movlw	high _ConfigFile_buffer
 12077  00C850  21E6               	addwfc	(configFile_write@file_size+1)& (0+255),w,b
 12078  00C852  6F8B               	movwf	(__add_item@buffer+1)& (0+255),b
 12079  00C854  EC8E  F08C         	call	__add_item	;wreg free
 12080  00C858  0100               	movlb	0	; () banked
 12081  00C85A  6FE3               	movwf	??_configFile_write& (0+255),b
 12082  00C85C  51E3               	movf	??_configFile_write& (0+255),w,b
 12083  00C85E  27E5               	addwf	configFile_write@file_size& (0+255),f,b
 12084  00C860  0E00               	movlw	0
 12085  00C862  23E6               	addwfc	(configFile_write@file_size+1)& (0+255),f,b
 12086  00C864  23E7               	addwfc	(configFile_write@file_size+2)& (0+255),f,b
 12087  00C866  23E8               	addwfc	(configFile_write@file_size+3)& (0+255),f,b
 12088                           
 12089                           ; BSR set to: 0
 12090                           ;config_file.c: 328: file_number = fat_find_file(&configFile_used_name, &configFile_used
      +                          _extention);
 12091  00C868  0ECE               	movlw	low _configFile_used_name
 12092  00C86A  6F8B               	movwf	fat_find_file@name& (0+255),b
 12093  00C86C  0E02               	movlw	high _configFile_used_name
 12094  00C86E  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 12095  00C870  0EDE               	movlw	low _configFile_used_extention
 12096  00C872  6F8D               	movwf	fat_find_file@extension& (0+255),b
 12097  00C874  0E02               	movlw	high _configFile_used_extention
 12098  00C876  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 12099  00C878  ECEE  F08E         	call	_fat_find_file	;wreg free
 12100  00C87C  0100               	movlb	0	; () banked
 12101  00C87E  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12102                           
 12103                           ; BSR set to: 0
 12104                           ;config_file.c: 329: if(file_number==0xFF)
 12105  00C880  29E4               	incf	configFile_write@file_number& (0+255),w,b
 12106  00C882  A4D8               	btfss	status,2,c
 12107  00C884  D015               	goto	l3075
 12108                           
 12109                           ; BSR set to: 0
 12110                           ;config_file.c: 330: {;config_file.c: 331: file_number = fat_create_file(&configFile_use
      +                          d_name, &configFile_used_extention, file_size);
 12111  00C886  0ECE               	movlw	low _configFile_used_name
 12112  00C888  6FAC               	movwf	fat_create_file@name& (0+255),b
 12113  00C88A  0E02               	movlw	high _configFile_used_name
 12114  00C88C  6FAD               	movwf	(fat_create_file@name+1)& (0+255),b
 12115  00C88E  0EDE               	movlw	low _configFile_used_extention
 12116  00C890  6FAE               	movwf	fat_create_file@extension& (0+255),b
 12117  00C892  0E02               	movlw	high _configFile_used_extention
 12118  00C894  6FAF               	movwf	(fat_create_file@extension+1)& (0+255),b
 12119  00C896  C0E5  F0B0         	movff	configFile_write@file_size,fat_create_file@size
 12120  00C89A  C0E6  F0B1         	movff	configFile_write@file_size+1,fat_create_file@size+1
 12121  00C89E  C0E7  F0B2         	movff	configFile_write@file_size+2,fat_create_file@size+2
 12122  00C8A2  C0E8  F0B3         	movff	configFile_write@file_size+3,fat_create_file@size+3
 12123  00C8A6  EC9E  F081         	call	_fat_create_file	;wreg free
 12124  00C8AA  0100               	movlb	0	; () banked
 12125  00C8AC  6FE4               	movwf	configFile_write@file_number& (0+255),b
 12126                           
 12127                           ;config_file.c: 332: }
 12128  00C8AE  D00B               	goto	l3076
 12129  00C8B0                     l3075:
 12130                           
 12131                           ; BSR set to: 0
 12132                           ;config_file.c: 333: else;config_file.c: 334: {;config_file.c: 335: fat_resize_file(file
      +                          _number, file_size);
 12133                           
 12134                           ; BSR set to: 0
 12135  00C8B0  C0E5  F0AC         	movff	configFile_write@file_size,fat_resize_file@new_file_size
 12136  00C8B4  C0E6  F0AD         	movff	configFile_write@file_size+1,fat_resize_file@new_file_size+1
 12137  00C8B8  C0E7  F0AE         	movff	configFile_write@file_size+2,fat_resize_file@new_file_size+2
 12138  00C8BC  C0E8  F0AF         	movff	configFile_write@file_size+3,fat_resize_file@new_file_size+3
 12139  00C8C0  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12140  00C8C2  EC12  F08B         	call	_fat_resize_file
 12141  00C8C6                     l3076:
 12142                           
 12143                           ;config_file.c: 336: };config_file.c: 339: fat_modify_file(file_number, 0, file_size, &C
      +                          onfigFile_buffer[0]);
 12144  00C8C6  0E00               	movlw	0
 12145  00C8C8  0100               	movlb	0	; () banked
 12146  00C8CA  6FA1               	movwf	fat_modify_file@start_byte& (0+255),b
 12147  00C8CC  0E00               	movlw	0
 12148  00C8CE  6FA2               	movwf	(fat_modify_file@start_byte+1)& (0+255),b
 12149  00C8D0  0E00               	movlw	0
 12150  00C8D2  6FA3               	movwf	(fat_modify_file@start_byte+2)& (0+255),b
 12151  00C8D4  0E00               	movlw	0
 12152  00C8D6  6FA4               	movwf	(fat_modify_file@start_byte+3)& (0+255),b
 12153  00C8D8  C0E5  F0A5         	movff	configFile_write@file_size,fat_modify_file@length
 12154  00C8DC  C0E6  F0A6         	movff	configFile_write@file_size+1,fat_modify_file@length+1
 12155  00C8E0  0E00               	movlw	low _ConfigFile_buffer
 12156  00C8E2  6FA7               	movwf	fat_modify_file@data& (0+255),b
 12157  00C8E4  0E08               	movlw	high _ConfigFile_buffer
 12158  00C8E6  6FA8               	movwf	(fat_modify_file@data+1)& (0+255),b
 12159  00C8E8  51E4               	movf	configFile_write@file_number& (0+255),w,b
 12160  00C8EA  ECAA  F06F         	call	_fat_modify_file
 12161  00C8EE  0012               	return		;funcret
 12162  00C8F0                     __end_of_configFile_write:
 12163                           	opt stack 0
 12164                           tblptru	equ	0xFF8
 12165                           tblptrh	equ	0xFF7
 12166                           tblptrl	equ	0xFF6
 12167                           tablat	equ	0xFF5
 12168                           prodh	equ	0xFF4
 12169                           prodl	equ	0xFF3
 12170                           postinc0	equ	0xFEE
 12171                           wreg	equ	0xFE8
 12172                           postdec1	equ	0xFE5
 12173                           plusw1	equ	0xFE3
 12174                           fsr1h	equ	0xFE2
 12175                           fsr1l	equ	0xFE1
 12176                           indf2	equ	0xFDF
 12177                           postinc2	equ	0xFDE
 12178                           plusw2	equ	0xFDB
 12179                           fsr2h	equ	0xFDA
 12180                           fsr2l	equ	0xFD9
 12181                           status	equ	0xFD8
 12182                           
 12183 ;; *************** function _fat_resize_file *****************
 12184 ;; Defined at:
 12185 ;;		line 911 in file "fat16.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;  file_number     1    wreg     unsigned char 
 12188 ;;  new_file_siz    4   76[BANK0 ] unsigned long 
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;  file_number     1   90[BANK0 ] unsigned char 
 12191 ;;  root           32   91[BANK0 ] struct .
 12192 ;;  first_cluste    2   88[BANK0 ] unsigned int 
 12193 ;;  new_number_o    2   86[BANK0 ] unsigned int 
 12194 ;;  old_number_o    2   84[BANK0 ] unsigned int 
 12195 ;; Return value:  Size  Location     Type
 12196 ;;                  1    wreg      unsigned char 
 12197 ;; Registers used:
 12198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12199 ;; Tracked objects:
 12200 ;;		On entry : 0/0
 12201 ;;		On exit  : 0/0
 12202 ;;		Unchanged: 0/0
 12203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12204 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12205 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12206 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12207 ;;      Totals:         0      47       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12208 ;;Total ram usage:       47 bytes
 12209 ;; Hardware stack levels used:    1
 12210 ;; Hardware stack levels required when called:   17
 12211 ;; This function calls:
 12212 ;;		__make_cluster_chain
 12213 ;;		__root_is_available
 12214 ;;		__write_root
 12215 ;;		_fat_get_file_information
 12216 ;; This function is called by:
 12217 ;;		_configFile_write
 12218 ;;		_fat_append_to_file
 12219 ;; This function uses a non-reentrant model
 12220 ;;
 12221                           
 12222                           	psect	text38
 12223  011624                     __ptext38:
 12224                           	opt stack 0
 12225  011624                     _fat_resize_file:
 12226                           	opt stack 11
 12227                           
 12228                           ;incstack = 0
 12229                           ;fat_resize_file@file_number stored from wreg
 12230  011624  0100               	movlb	0	; () banked
 12231  011626  6FBA               	movwf	fat_resize_file@file_number& (0+255),b
 12232                           
 12233                           ;fat16.c: 913: rootEntry_t root;;fat16.c: 914: uint16_t old_number_of_clusters;;fat16.c:
      +                           915: uint16_t new_number_of_clusters;;fat16.c: 916: uint16_t first_cluster;;fat16.c: 91
      +                          9: if(file_number>=64)
 12234  011628  0E3F               	movlw	63
 12235  01162A  0100               	movlb	0	; () banked
 12236  01162C  65BA               	cpfsgt	fat_resize_file@file_number& (0+255),b
 12237  01162E  D002               	goto	l1914
 12238                           
 12239                           ; BSR set to: 0
 12240                           ;fat16.c: 920: {;fat16.c: 922: return 0xFF;
 12241  011630  0EFF               	movlw	255
 12242                           
 12243                           ; BSR set to: 0
 12244  011632  0012               	return	
 12245  011634                     l1914:
 12246                           
 12247                           ; BSR set to: 0
 12248                           ;fat16.c: 923: };fat16.c: 926: if(_root_is_available(file_number))
 12249                           
 12250                           ; BSR set to: 0
 12251  011634  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12252  011636  EC8E  F0A2         	call	__root_is_available
 12253  01163A  0900               	iorlw	0
 12254  01163C  B4D8               	btfsc	status,2,c
 12255  01163E  D002               	goto	l1916
 12256                           
 12257                           ;fat16.c: 927: {;fat16.c: 929: return 0xFE;
 12258  011640  0EFE               	movlw	254
 12259  011642  0012               	return	
 12260  011644                     l1916:
 12261                           
 12262                           ;fat16.c: 930: };fat16.c: 933: fat_get_file_information(file_number, &root);
 12263  011644  0EBB               	movlw	low fat_resize_file@root
 12264  011646  0100               	movlb	0	; () banked
 12265  011648  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12266  01164A  0E00               	movlw	high fat_resize_file@root
 12267  01164C  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12268  01164E  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12269  011650  EC89  F0A0         	call	_fat_get_file_information
 12270                           
 12271                           ;fat16.c: 936: old_number_of_clusters = (root.fileSize+512-1)>>9;
 12272  011654  EE20  F0D7         	lfsr	2,fat_resize_file@root+28
 12273  011658  0EFF               	movlw	255
 12274  01165A  24DE               	addwf	postinc2,w,c
 12275  01165C  0100               	movlb	0	; () banked
 12276  01165E  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12277  011660  0E01               	movlw	1
 12278  011662  20DE               	addwfc	postinc2,w,c
 12279  011664  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12280  011666  0E00               	movlw	0
 12281  011668  20DE               	addwfc	postinc2,w,c
 12282  01166A  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12283  01166C  0E00               	movlw	0
 12284  01166E  20DE               	addwfc	postinc2,w,c
 12285  011670  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12286  011672  0E0A               	movlw	10
 12287  011674  D005               	goto	u15390
 12288  011676                     u15395:
 12289  011676  90D8               	bcf	status,0,c
 12290  011678  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12291  01167A  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12292  01167C  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12293  01167E  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12294  011680                     u15390:
 12295  011680  2EE8               	decfsz	wreg,f,c
 12296  011682  D7F9               	goto	u15395
 12297  011684  C0B0  F0B4         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 12298  011688  C0B1  F0B5         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 12299                           
 12300                           ; BSR set to: 0
 12301                           ;fat16.c: 937: new_number_of_clusters = (new_file_size+512-1)>>9;
 12302  01168C  0EFF               	movlw	255
 12303  01168E  25AC               	addwf	fat_resize_file@new_file_size& (0+255),w,b
 12304  011690  6FB0               	movwf	??_fat_resize_file& (0+255),b
 12305  011692  0E01               	movlw	1
 12306  011694  21AD               	addwfc	(fat_resize_file@new_file_size+1)& (0+255),w,b
 12307  011696  6FB1               	movwf	(??_fat_resize_file+1)& (0+255),b
 12308  011698  0E00               	movlw	0
 12309  01169A  21AE               	addwfc	(fat_resize_file@new_file_size+2)& (0+255),w,b
 12310  01169C  6FB2               	movwf	(??_fat_resize_file+2)& (0+255),b
 12311  01169E  0E00               	movlw	0
 12312  0116A0  21AF               	addwfc	(fat_resize_file@new_file_size+3)& (0+255),w,b
 12313  0116A2  6FB3               	movwf	(??_fat_resize_file+3)& (0+255),b
 12314  0116A4  0E0A               	movlw	10
 12315  0116A6  D005               	goto	u15400
 12316  0116A8                     u15405:
 12317  0116A8  90D8               	bcf	status,0,c
 12318  0116AA  33B3               	rrcf	(??_fat_resize_file+3)& (0+255),f,b
 12319  0116AC  33B2               	rrcf	(??_fat_resize_file+2)& (0+255),f,b
 12320  0116AE  33B1               	rrcf	(??_fat_resize_file+1)& (0+255),f,b
 12321  0116B0  33B0               	rrcf	??_fat_resize_file& (0+255),f,b
 12322  0116B2                     u15400:
 12323  0116B2  2EE8               	decfsz	wreg,f,c
 12324  0116B4  D7F9               	goto	u15405
 12325  0116B6  C0B0  F0B6         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 12326  0116BA  C0B1  F0B7         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 12327                           
 12328                           ; BSR set to: 0
 12329                           ;fat16.c: 940: if(old_number_of_clusters!=new_number_of_clusters)
 12330  0116BE  51B6               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 12331  0116C0  19B4               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 12332  0116C2  E104               	bnz	u15410
 12333  0116C4  51B7               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 12334  0116C6  19B5               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 12335  0116C8  B4D8               	btfsc	status,2,c
 12336  0116CA  D01A               	goto	l1917
 12337  0116CC                     u15410:
 12338                           
 12339                           ; BSR set to: 0
 12340                           ;fat16.c: 941: {;fat16.c: 942: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 12341  0116CC  C0D5  F095         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 12342  0116D0  C0D6  F096         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 12343  0116D4  C0B6  F097         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 12344  0116D8  C0B7  F098         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 12345  0116DC  EC35  F069         	call	__make_cluster_chain	;wreg free
 12346  0116E0  C095  F0B8         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 12347  0116E4  C096  F0B9         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 12348                           
 12349                           ;fat16.c: 943: if(first_cluster==0xFFFF)
 12350  0116E8  0100               	movlb	0	; () banked
 12351  0116EA  29B8               	incf	fat_resize_file@first_cluster& (0+255),w,b
 12352  0116EC  E105               	bnz	l1918
 12353  0116EE  29B9               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 12354  0116F0  A4D8               	btfss	status,2,c
 12355  0116F2  D002               	goto	l1918
 12356                           
 12357                           ; BSR set to: 0
 12358                           ;fat16.c: 944: {;fat16.c: 946: return 0xFD;
 12359  0116F4  0EFD               	movlw	253
 12360                           
 12361                           ; BSR set to: 0
 12362  0116F6  0012               	return	
 12363  0116F8                     l1918:
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;fat16.c: 947: };fat16.c: 950: root.firstCluster = first_cluster;
 12367  0116F8  C0B8  F0D5         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 12368  0116FC  C0B9  F0D6         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 12369  011700                     l1917:
 12370                           
 12371                           ; BSR set to: 0
 12372                           ;fat16.c: 951: };fat16.c: 954: root.fileSize = new_file_size;
 12373  011700  C0AC  F0D7         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 12374  011704  C0AD  F0D8         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 12375  011708  C0AE  F0D9         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 12376  01170C  C0AF  F0DA         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;fat16.c: 957: _write_root(file_number, &root);
 12380  011710  0EBB               	movlw	low fat_resize_file@root
 12381  011712  6F88               	movwf	__write_root@data& (0+255),b
 12382  011714  0E00               	movlw	high fat_resize_file@root
 12383  011716  6F89               	movwf	(__write_root@data+1)& (0+255),b
 12384  011718  51BA               	movf	fat_resize_file@file_number& (0+255),w,b
 12385  01171A  ECAA  F0A8         	call	__write_root
 12386                           
 12387                           ;fat16.c: 960: return 0x00;
 12388  01171E  0E00               	movlw	0
 12389  011720  0012               	return	
 12390  011722                     __end_of_fat_resize_file:
 12391                           	opt stack 0
 12392                           tblptru	equ	0xFF8
 12393                           tblptrh	equ	0xFF7
 12394                           tblptrl	equ	0xFF6
 12395                           tablat	equ	0xFF5
 12396                           prodh	equ	0xFF4
 12397                           prodl	equ	0xFF3
 12398                           postinc0	equ	0xFEE
 12399                           wreg	equ	0xFE8
 12400                           postdec1	equ	0xFE5
 12401                           plusw1	equ	0xFE3
 12402                           fsr1h	equ	0xFE2
 12403                           fsr1l	equ	0xFE1
 12404                           indf2	equ	0xFDF
 12405                           postinc2	equ	0xFDE
 12406                           plusw2	equ	0xFDB
 12407                           fsr2h	equ	0xFDA
 12408                           fsr2l	equ	0xFD9
 12409                           status	equ	0xFD8
 12410                           
 12411 ;; *************** function _fat_modify_file *****************
 12412 ;; Defined at:
 12413 ;;		line 963 in file "fat16.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  file_number     1    wreg     unsigned char 
 12416 ;;  start_byte      4   65[BANK0 ] unsigned long 
 12417 ;;  length          2   69[BANK0 ] unsigned int 
 12418 ;;  data            2   71[BANK0 ] PTR unsigned char 
 12419 ;;		 -> ConfigFile_buffer(512), 
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;  file_number     1   87[BANK0 ] unsigned char 
 12422 ;;  root           32   99[BANK0 ] struct .
 12423 ;;  position        4   95[BANK0 ] unsigned long 
 12424 ;;  number_of_by    2   93[BANK0 ] unsigned int 
 12425 ;;  offset          2   91[BANK0 ] unsigned int 
 12426 ;;  cluster         2   89[BANK0 ] unsigned int 
 12427 ;;  sector          2   85[BANK0 ] unsigned int 
 12428 ;;  return_code     1   88[BANK0 ] unsigned char 
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      unsigned char 
 12431 ;; Registers used:
 12432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12438 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12439 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12440 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12441 ;;      Totals:         0      66       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12442 ;;Total ram usage:       66 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:   17
 12445 ;; This function calls:
 12446 ;;		__data_sector_from_cluster
 12447 ;;		__find_nth_cluster
 12448 ;;		__read_fat
 12449 ;;		_fat_get_file_information
 12450 ;;		_flash_partial_write
 12451 ;; This function is called by:
 12452 ;;		_configFile_write
 12453 ;;		_fat_append_to_file
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           	psect	text39
 12458  00DF54                     __ptext39:
 12459                           	opt stack 0
 12460  00DF54                     _fat_modify_file:
 12461                           	opt stack 11
 12462                           
 12463                           ;incstack = 0
 12464                           ;fat_modify_file@file_number stored from wreg
 12465  00DF54  0100               	movlb	0	; () banked
 12466  00DF56  6FB7               	movwf	fat_modify_file@file_number& (0+255),b
 12467                           
 12468                           ;fat16.c: 965: rootEntry_t root;;fat16.c: 966: uint16_t cluster;;fat16.c: 967: uint32_t 
      +                          position;;fat16.c: 968: uint16_t offset;;fat16.c: 969: uint16_t sector;;fat16.c: 970: ui
      +                          nt16_t number_of_bytes;;fat16.c: 971: uint8_t return_code;;fat16.c: 974: return_code = f
      +                          at_get_file_information(file_number, &root);
 12469  00DF58  0EC3               	movlw	low fat_modify_file@root
 12470  00DF5A  0100               	movlb	0	; () banked
 12471  00DF5C  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 12472  00DF5E  0E00               	movlw	high fat_modify_file@root
 12473  00DF60  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 12474  00DF62  51B7               	movf	fat_modify_file@file_number& (0+255),w,b
 12475  00DF64  EC89  F0A0         	call	_fat_get_file_information
 12476  00DF68  0100               	movlb	0	; () banked
 12477  00DF6A  6FB8               	movwf	fat_modify_file@return_code& (0+255),b
 12478                           
 12479                           ; BSR set to: 0
 12480                           ;fat16.c: 975: if(return_code!=0x00)
 12481  00DF6C  51B8               	movf	fat_modify_file@return_code& (0+255),w,b
 12482  00DF6E  A4D8               	btfss	status,2,c
 12483  00DF70  0012               	return	
 12484                           
 12485                           ; BSR set to: 0
 12486                           ;fat16.c: 979: };fat16.c: 982: if(start_byte>root.fileSize)
 12487                           
 12488                           ; BSR set to: 0
 12489                           
 12490                           ; BSR set to: 0
 12491                           ;fat16.c: 976: {;fat16.c: 978: return return_code;;	Return value of _fat_modify_file is 
      +                          never used
 12492  00DF72  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12493  00DF74  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12494  00DF76  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12495  00DF78  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12496  00DF7A  51A3               	movf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12497  00DF7C  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12498  00DF7E  51A4               	movf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12499  00DF80  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12500  00DF82  A0D8               	btfss	status,0,c
 12501  00DF84  0012               	return	
 12502                           
 12503                           ; BSR set to: 0
 12504                           ;fat16.c: 986: };fat16.c: 988: if((start_byte+length) > root.fileSize)
 12505                           
 12506                           ; BSR set to: 0
 12507                           
 12508                           ; BSR set to: 0
 12509                           ;fat16.c: 983: {;fat16.c: 985: return 0xF0;;	Return value of _fat_modify_file is never u
      +                          sed
 12510  00DF86  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12511  00DF88  25A1               	addwf	fat_modify_file@start_byte& (0+255),w,b
 12512  00DF8A  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12513  00DF8C  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12514  00DF8E  21A2               	addwfc	(fat_modify_file@start_byte+1)& (0+255),w,b
 12515  00DF90  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12516  00DF92  0E00               	movlw	0
 12517  00DF94  21A3               	addwfc	(fat_modify_file@start_byte+2)& (0+255),w,b
 12518  00DF96  6FAB               	movwf	(??_fat_modify_file+2)& (0+255),b
 12519  00DF98  0E00               	movlw	0
 12520  00DF9A  21A4               	addwfc	(fat_modify_file@start_byte+3)& (0+255),w,b
 12521  00DF9C  6FAC               	movwf	(??_fat_modify_file+3)& (0+255),b
 12522  00DF9E  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12523  00DFA0  5DDF               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 12524  00DFA2  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12525  00DFA4  59E0               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 12526  00DFA6  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12527  00DFA8  59E1               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 12528  00DFAA  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12529  00DFAC  59E2               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 12530  00DFAE  B0D8               	btfsc	status,0,c
 12531  00DFB0  D00E               	goto	l1924
 12532                           
 12533                           ; BSR set to: 0
 12534                           ;fat16.c: 989: {;fat16.c: 991: length = root.fileSize - start_byte;
 12535  00DFB2  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12536  00DFB6  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12537  00DFBA  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12538  00DFBC  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12539  00DFBE  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12540  00DFC0  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12541  00DFC2  51DF               	movf	(fat_modify_file@root+28)& (0+255),w,b
 12542  00DFC4  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12543  00DFC6  6FA5               	movwf	fat_modify_file@length& (0+255),b
 12544  00DFC8  51E0               	movf	(fat_modify_file@root+29)& (0+255),w,b
 12545  00DFCA  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12546  00DFCC  6FA6               	movwf	(fat_modify_file@length+1)& (0+255),b
 12547  00DFCE                     l1924:
 12548                           
 12549                           ; BSR set to: 0
 12550                           ;fat16.c: 992: };fat16.c: 995: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 12551                           
 12552                           ; BSR set to: 0
 12553  00DFCE  C0DD  F097         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 12554  00DFD2  C0DE  F098         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 12555  00DFD6  C0A1  F0A9         	movff	fat_modify_file@start_byte,??_fat_modify_file
 12556  00DFDA  C0A2  F0AA         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 12557  00DFDE  C0A3  F0AB         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 12558  00DFE2  C0A4  F0AC         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 12559  00DFE6  0E0A               	movlw	10
 12560  00DFE8  D005               	goto	u15460
 12561  00DFEA                     u15465:
 12562  00DFEA  90D8               	bcf	status,0,c
 12563  00DFEC  33AC               	rrcf	(??_fat_modify_file+3)& (0+255),f,b
 12564  00DFEE  33AB               	rrcf	(??_fat_modify_file+2)& (0+255),f,b
 12565  00DFF0  33AA               	rrcf	(??_fat_modify_file+1)& (0+255),f,b
 12566  00DFF2  33A9               	rrcf	??_fat_modify_file& (0+255),f,b
 12567  00DFF4                     u15460:
 12568  00DFF4  2EE8               	decfsz	wreg,f,c
 12569  00DFF6  D7F9               	goto	u15465
 12570  00DFF8  C0A9  F099         	movff	??_fat_modify_file,__find_nth_cluster@n
 12571  00DFFC  C0AA  F09A         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 12572  00E000  EC5E  F09A         	call	__find_nth_cluster	;wreg free
 12573  00E004  C097  F0B9         	movff	?__find_nth_cluster,fat_modify_file@cluster
 12574  00E008  C098  F0BA         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 12575                           
 12576                           ;fat16.c: 998: position = start_byte & 0xFFFFFE00;
 12577  00E00C  0E00               	movlw	0
 12578  00E00E  0100               	movlb	0	; () banked
 12579  00E010  15A1               	andwf	fat_modify_file@start_byte& (0+255),w,b
 12580  00E012  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12581  00E014  0EFE               	movlw	254
 12582  00E016  15A2               	andwf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12583  00E018  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12584  00E01A  0EFF               	movlw	255
 12585  00E01C  15A3               	andwf	(fat_modify_file@start_byte+2)& (0+255),w,b
 12586  00E01E  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12587  00E020  0EFF               	movlw	255
 12588  00E022  15A4               	andwf	(fat_modify_file@start_byte+3)& (0+255),w,b
 12589  00E024  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;fat16.c: 1001: offset = (uint16_t) (start_byte-position);
 12593  00E026  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12594  00E02A  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12595  00E02E  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12596  00E030  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12597  00E032  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12598  00E034  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12599  00E036  51A1               	movf	fat_modify_file@start_byte& (0+255),w,b
 12600  00E038  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12601  00E03A  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12602  00E03C  51A2               	movf	(fat_modify_file@start_byte+1)& (0+255),w,b
 12603  00E03E  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12604  00E040  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;fat16.c: 1004: position = 0;
 12608  00E042  0E00               	movlw	0
 12609  00E044  6FBF               	movwf	fat_modify_file@position& (0+255),b
 12610  00E046  0E00               	movlw	0
 12611  00E048  6FC0               	movwf	(fat_modify_file@position+1)& (0+255),b
 12612  00E04A  0E00               	movlw	0
 12613  00E04C  6FC1               	movwf	(fat_modify_file@position+2)& (0+255),b
 12614  00E04E  0E00               	movlw	0
 12615  00E050  6FC2               	movwf	(fat_modify_file@position+3)& (0+255),b
 12616                           
 12617                           ;fat16.c: 1005: while(position < length)
 12618  00E052  D089               	goto	l1925
 12619  00E054                     
 12620                           ; BSR set to: 0
 12621                           ;fat16.c: 1006: {;fat16.c: 1008: if(offset==512)
 12622                           
 12623                           ; BSR set to: 0
 12624  00E054  0E02               	movlw	2
 12625  00E056  19BC               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 12626  00E058  11BB               	iorwf	fat_modify_file@offset& (0+255),w,b
 12627  00E05A  A4D8               	btfss	status,2,c
 12628  00E05C  D00F               	goto	l1927
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;fat16.c: 1009: {;fat16.c: 1011: cluster = _read_fat(cluster);
 12632  00E05E  C0B9  F08F         	movff	fat_modify_file@cluster,__read_fat@cluster
 12633  00E062  C0BA  F090         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 12634  00E066  EC90  F0A5         	call	__read_fat	;wreg free
 12635  00E06A  C08F  F0B9         	movff	?__read_fat,fat_modify_file@cluster
 12636  00E06E  C090  F0BA         	movff	?__read_fat+1,fat_modify_file@cluster+1
 12637                           
 12638                           ;fat16.c: 1013: offset = 0;
 12639  00E072  0E00               	movlw	0
 12640  00E074  0100               	movlb	0	; () banked
 12641  00E076  6FBC               	movwf	(fat_modify_file@offset+1)& (0+255),b
 12642  00E078  0E00               	movlw	0
 12643  00E07A  6FBB               	movwf	fat_modify_file@offset& (0+255),b
 12644  00E07C                     l1927:
 12645                           
 12646                           ; BSR set to: 0
 12647                           ;fat16.c: 1014: };fat16.c: 1017: sector = _data_sector_from_cluster(cluster);
 12648                           
 12649                           ; BSR set to: 0
 12650  00E07C  C0B9  F060         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 12651  00E080  C0BA  F061         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 12652  00E084  EC74  F0AE         	call	__data_sector_from_cluster	;wreg free
 12653  00E088  C060  F0B5         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 12654  00E08C  C061  F0B6         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 12655                           
 12656                           ;fat16.c: 1020: number_of_bytes = 512 - offset;
 12657  00E090  C0BB  F0A9         	movff	fat_modify_file@offset,??_fat_modify_file
 12658  00E094  C0BC  F0AA         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 12659  00E098  0100               	movlb	0	; () banked
 12660  00E09A  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12661  00E09C  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12662  00E09E  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12663  00E0A0  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12664  00E0A2  0E00               	movlw	0
 12665  00E0A4  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12666  00E0A6  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12667  00E0A8  0E02               	movlw	2
 12668  00E0AA  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12669  00E0AC  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12670                           
 12671                           ; BSR set to: 0
 12672                           ;fat16.c: 1021: if(number_of_bytes > (length-position))
 12673  00E0AE  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12674  00E0B0  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12675  00E0B2  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12676  00E0B4  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12677  00E0B6  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12678  00E0B8  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12679  00E0BA  C0BF  F0AD         	movff	fat_modify_file@position,??_fat_modify_file+4
 12680  00E0BE  C0C0  F0AE         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 12681  00E0C2  C0C1  F0AF         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 12682  00E0C6  C0C2  F0B0         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 12683  00E0CA  1FAD               	comf	(??_fat_modify_file+4)& (0+255),f,b
 12684  00E0CC  1FAE               	comf	(??_fat_modify_file+5)& (0+255),f,b
 12685  00E0CE  1FAF               	comf	(??_fat_modify_file+6)& (0+255),f,b
 12686  00E0D0  1FB0               	comf	(??_fat_modify_file+7)& (0+255),f,b
 12687  00E0D2  2BAD               	incf	(??_fat_modify_file+4)& (0+255),f,b
 12688  00E0D4  0E00               	movlw	0
 12689  00E0D6  23AE               	addwfc	(??_fat_modify_file+5)& (0+255),f,b
 12690  00E0D8  23AF               	addwfc	(??_fat_modify_file+6)& (0+255),f,b
 12691  00E0DA  23B0               	addwfc	(??_fat_modify_file+7)& (0+255),f,b
 12692  00E0DC  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12693  00E0DE  25AD               	addwf	(??_fat_modify_file+4)& (0+255),w,b
 12694  00E0E0  6FB1               	movwf	(??_fat_modify_file+8)& (0+255),b
 12695  00E0E2  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12696  00E0E4  21AE               	addwfc	(??_fat_modify_file+5)& (0+255),w,b
 12697  00E0E6  6FB2               	movwf	(??_fat_modify_file+9)& (0+255),b
 12698  00E0E8  0E00               	movlw	0
 12699  00E0EA  21AF               	addwfc	(??_fat_modify_file+6)& (0+255),w,b
 12700  00E0EC  6FB3               	movwf	(??_fat_modify_file+10)& (0+255),b
 12701  00E0EE  0E00               	movlw	0
 12702  00E0F0  21B0               	addwfc	(??_fat_modify_file+7)& (0+255),w,b
 12703  00E0F2  6FB4               	movwf	(??_fat_modify_file+11)& (0+255),b
 12704  00E0F4  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12705  00E0F6  5DB1               	subwf	(??_fat_modify_file+8)& (0+255),w,b
 12706  00E0F8  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12707  00E0FA  59B2               	subwfb	(??_fat_modify_file+9)& (0+255),w,b
 12708  00E0FC  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12709  00E0FE  59B3               	subwfb	(??_fat_modify_file+10)& (0+255),w,b
 12710  00E100  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12711  00E102  59B4               	subwfb	(??_fat_modify_file+11)& (0+255),w,b
 12712  00E104  B0D8               	btfsc	status,0,c
 12713  00E106  D00E               	goto	l1928
 12714                           
 12715                           ; BSR set to: 0
 12716                           ;fat16.c: 1022: {;fat16.c: 1023: number_of_bytes = length - position;
 12717  00E108  C0BF  F0A9         	movff	fat_modify_file@position,??_fat_modify_file
 12718  00E10C  C0C0  F0AA         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 12719  00E110  1FA9               	comf	??_fat_modify_file& (0+255),f,b
 12720  00E112  1FAA               	comf	(??_fat_modify_file+1)& (0+255),f,b
 12721  00E114  4BA9               	infsnz	??_fat_modify_file& (0+255),f,b
 12722  00E116  2BAA               	incf	(??_fat_modify_file+1)& (0+255),f,b
 12723  00E118  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12724  00E11A  25A9               	addwf	??_fat_modify_file& (0+255),w,b
 12725  00E11C  6FBD               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 12726  00E11E  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12727  00E120  21AA               	addwfc	(??_fat_modify_file+1)& (0+255),w,b
 12728  00E122  6FBE               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 12729  00E124                     l1928:
 12730                           
 12731                           ; BSR set to: 0
 12732                           ;fat16.c: 1024: };fat16.c: 1027: flash_partial_write(sector, offset, number_of_bytes, &d
      +                          ata[position]);
 12733                           
 12734                           ; BSR set to: 0
 12735  00E124  C0B5  F07F         	movff	fat_modify_file@sector,flash_partial_write@page
 12736  00E128  C0B6  F080         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 12737  00E12C  C0BB  F081         	movff	fat_modify_file@offset,flash_partial_write@start
 12738  00E130  C0BC  F082         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 12739  00E134  C0BD  F083         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 12740  00E138  C0BE  F084         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 12741  00E13C  51BF               	movf	fat_modify_file@position& (0+255),w,b
 12742  00E13E  25A7               	addwf	fat_modify_file@data& (0+255),w,b
 12743  00E140  6F85               	movwf	flash_partial_write@data& (0+255),b
 12744  00E142  51C0               	movf	(fat_modify_file@position+1)& (0+255),w,b
 12745  00E144  21A8               	addwfc	(fat_modify_file@data+1)& (0+255),w,b
 12746  00E146  6F86               	movwf	(flash_partial_write@data+1)& (0+255),b
 12747  00E148  EC58  F0A2         	call	_flash_partial_write	;wreg free
 12748                           
 12749                           ;fat16.c: 1030: position += number_of_bytes;
 12750  00E14C  0100               	movlb	0	; () banked
 12751  00E14E  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12752  00E150  27BF               	addwf	fat_modify_file@position& (0+255),f,b
 12753  00E152  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12754  00E154  23C0               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 12755  00E156  0E00               	movlw	0
 12756  00E158  23C1               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 12757  00E15A  0E00               	movlw	0
 12758  00E15C  23C2               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;fat16.c: 1031: offset += number_of_bytes;
 12762  00E15E  51BD               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 12763  00E160  27BB               	addwf	fat_modify_file@offset& (0+255),f,b
 12764  00E162  51BE               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 12765  00E164  23BC               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 12766  00E166                     l1925:
 12767                           
 12768                           ; BSR set to: 0
 12769                           
 12770                           ; BSR set to: 0
 12771  00E166  51A5               	movf	fat_modify_file@length& (0+255),w,b
 12772  00E168  6FA9               	movwf	??_fat_modify_file& (0+255),b
 12773  00E16A  51A6               	movf	(fat_modify_file@length+1)& (0+255),w,b
 12774  00E16C  6FAA               	movwf	(??_fat_modify_file+1)& (0+255),b
 12775  00E16E  6BAB               	clrf	(??_fat_modify_file+2)& (0+255),b
 12776  00E170  6BAC               	clrf	(??_fat_modify_file+3)& (0+255),b
 12777  00E172  51A9               	movf	??_fat_modify_file& (0+255),w,b
 12778  00E174  5DBF               	subwf	fat_modify_file@position& (0+255),w,b
 12779  00E176  51AA               	movf	(??_fat_modify_file+1)& (0+255),w,b
 12780  00E178  59C0               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 12781  00E17A  51AB               	movf	(??_fat_modify_file+2)& (0+255),w,b
 12782  00E17C  59C1               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 12783  00E17E  51AC               	movf	(??_fat_modify_file+3)& (0+255),w,b
 12784  00E180  59C2               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 12785  00E182  B0D8               	btfsc	status,0,c
 12786  00E184  0012               	return	
 12787  00E186  D766               	goto	l1926
 12788  00E188                     __end_of_fat_modify_file:
 12789                           	opt stack 0
 12790                           tblptru	equ	0xFF8
 12791                           tblptrh	equ	0xFF7
 12792                           tblptrl	equ	0xFF6
 12793                           tablat	equ	0xFF5
 12794                           prodh	equ	0xFF4
 12795                           prodl	equ	0xFF3
 12796                           postinc0	equ	0xFEE
 12797                           wreg	equ	0xFE8
 12798                           postdec1	equ	0xFE5
 12799                           plusw1	equ	0xFE3
 12800                           fsr1h	equ	0xFE2
 12801                           fsr1l	equ	0xFE1
 12802                           indf2	equ	0xFDF
 12803                           postinc2	equ	0xFDE
 12804                           plusw2	equ	0xFDB
 12805                           fsr2h	equ	0xFDA
 12806                           fsr2l	equ	0xFD9
 12807                           status	equ	0xFD8
 12808                           
 12809 ;; *************** function _fat_create_file *****************
 12810 ;; Defined at:
 12811 ;;		line 587 in file "fat16.c"
 12812 ;; Parameters:    Size  Location     Type
 12813 ;;  name            2   76[BANK0 ] PTR unsigned char 
 12814 ;;		 -> configFile_used_name(8), 
 12815 ;;  extension       2   78[BANK0 ] PTR unsigned char 
 12816 ;;		 -> configFile_used_extention(3), 
 12817 ;;  size            4   80[BANK0 ] unsigned long 
 12818 ;; Auto vars:     Size  Location     Type
 12819 ;;  root_entry     32   93[BANK0 ] struct .
 12820 ;;  first_cluste    2   90[BANK0 ] unsigned int 
 12821 ;;  number_of_cl    2   88[BANK0 ] unsigned int 
 12822 ;;  file_number     1   92[BANK0 ] unsigned char 
 12823 ;; Return value:  Size  Location     Type
 12824 ;;                  1    wreg      unsigned char 
 12825 ;; Registers used:
 12826 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12827 ;; Tracked objects:
 12828 ;;		On entry : 0/0
 12829 ;;		On exit  : 0/0
 12830 ;;		Unchanged: 0/0
 12831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12832 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12833 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12834 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12835 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12836 ;;Total ram usage:       49 bytes
 12837 ;; Hardware stack levels used:    1
 12838 ;; Hardware stack levels required when called:   17
 12839 ;; This function calls:
 12840 ;;		__get_available_root_entry
 12841 ;;		__get_date
 12842 ;;		__get_time
 12843 ;;		__make_cluster_chain
 12844 ;;		__write_root
 12845 ;;		_fat_find_file
 12846 ;;		_memcpy
 12847 ;; This function is called by:
 12848 ;;		_configFile_write
 12849 ;;		_fat_copy_file
 12850 ;; This function uses a non-reentrant model
 12851 ;;
 12852                           
 12853                           	psect	text40
 12854  01033C                     __ptext40:
 12855                           	opt stack 0
 12856  01033C                     _fat_create_file:
 12857                           	opt stack 11
 12858                           
 12859                           ;fat16.c: 589: rootEntry_t root_entry;;fat16.c: 590: uint8_t file_number;;fat16.c: 591: 
      +                          uint16_t number_of_clusters;;fat16.c: 592: uint16_t first_cluster;;fat16.c: 596: if(fat_
      +                          find_file(name, extension) != 0xFF)
 12860                           
 12861                           ; BSR set to: 0
 12862                           ;incstack = 0
 12863  01033C  C0AC  F08B         	movff	fat_create_file@name,fat_find_file@name
 12864  010340  C0AD  F08C         	movff	fat_create_file@name+1,fat_find_file@name+1
 12865  010344  C0AE  F08D         	movff	fat_create_file@extension,fat_find_file@extension
 12866  010348  C0AF  F08E         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 12867  01034C  ECEE  F08E         	call	_fat_find_file	;wreg free
 12868  010350  0AFF               	xorlw	255
 12869  010352  B4D8               	btfsc	status,2,c
 12870  010354  D002               	goto	l1863
 12871                           
 12872                           ;fat16.c: 597: {;fat16.c: 600: return 0xFF;
 12873  010356  0EFF               	movlw	255
 12874  010358  0012               	return	
 12875  01035A                     l1863:
 12876                           
 12877                           ;fat16.c: 601: };fat16.c: 605: file_number = _get_available_root_entry();
 12878  01035A  ECAC  F0AC         	call	__get_available_root_entry	;wreg free
 12879  01035E  0100               	movlb	0	; () banked
 12880  010360  6FBC               	movwf	fat_create_file@file_number& (0+255),b
 12881                           
 12882                           ; BSR set to: 0
 12883                           ;fat16.c: 606: if(file_number == 0xFF)
 12884  010362  29BC               	incf	fat_create_file@file_number& (0+255),w,b
 12885  010364  A4D8               	btfss	status,2,c
 12886  010366  D002               	goto	l1865
 12887                           
 12888                           ; BSR set to: 0
 12889                           ;fat16.c: 607: {;fat16.c: 610: return 0xFE;
 12890  010368  0EFE               	movlw	254
 12891                           
 12892                           ; BSR set to: 0
 12893  01036A  0012               	return	
 12894  01036C                     l1865:
 12895                           
 12896                           ; BSR set to: 0
 12897                           ;fat16.c: 611: };fat16.c: 614: number_of_clusters = (size + 512 - 1) >> 9;
 12898                           
 12899                           ; BSR set to: 0
 12900  01036C  0EFF               	movlw	255
 12901  01036E  25B0               	addwf	fat_create_file@size& (0+255),w,b
 12902  010370  6FB4               	movwf	??_fat_create_file& (0+255),b
 12903  010372  0E01               	movlw	1
 12904  010374  21B1               	addwfc	(fat_create_file@size+1)& (0+255),w,b
 12905  010376  6FB5               	movwf	(??_fat_create_file+1)& (0+255),b
 12906  010378  0E00               	movlw	0
 12907  01037A  21B2               	addwfc	(fat_create_file@size+2)& (0+255),w,b
 12908  01037C  6FB6               	movwf	(??_fat_create_file+2)& (0+255),b
 12909  01037E  0E00               	movlw	0
 12910  010380  21B3               	addwfc	(fat_create_file@size+3)& (0+255),w,b
 12911  010382  6FB7               	movwf	(??_fat_create_file+3)& (0+255),b
 12912  010384  0E0A               	movlw	10
 12913  010386  D005               	goto	u15350
 12914  010388                     u15355:
 12915  010388  90D8               	bcf	status,0,c
 12916  01038A  33B7               	rrcf	(??_fat_create_file+3)& (0+255),f,b
 12917  01038C  33B6               	rrcf	(??_fat_create_file+2)& (0+255),f,b
 12918  01038E  33B5               	rrcf	(??_fat_create_file+1)& (0+255),f,b
 12919  010390  33B4               	rrcf	??_fat_create_file& (0+255),f,b
 12920  010392                     u15350:
 12921  010392  2EE8               	decfsz	wreg,f,c
 12922  010394  D7F9               	goto	u15355
 12923  010396  C0B4  F0B8         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 12924  01039A  C0B5  F0B9         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 12925                           
 12926                           ; BSR set to: 0
 12927                           ;fat16.c: 617: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 12928  01039E  0E00               	movlw	0
 12929  0103A0  6F96               	movwf	(__make_cluster_chain@first_cluster+1)& (0+255),b
 12930  0103A2  0E00               	movlw	0
 12931  0103A4  6F95               	movwf	__make_cluster_chain@first_cluster& (0+255),b
 12932  0103A6  C0B8  F097         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 12933  0103AA  C0B9  F098         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 12934  0103AE  EC35  F069         	call	__make_cluster_chain	;wreg free
 12935  0103B2  C095  F0BA         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 12936  0103B6  C096  F0BB         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 12937                           
 12938                           ;fat16.c: 620: if(first_cluster == 0xFFFF)
 12939  0103BA  0100               	movlb	0	; () banked
 12940  0103BC  29BA               	incf	fat_create_file@first_cluster& (0+255),w,b
 12941  0103BE  E105               	bnz	l16224
 12942  0103C0  29BB               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 12943  0103C2  A4D8               	btfss	status,2,c
 12944  0103C4  D002               	goto	l1866
 12945                           
 12946                           ; BSR set to: 0
 12947                           ;fat16.c: 621: {;fat16.c: 624: return 0xFD;
 12948  0103C6  0EFD               	movlw	253
 12949                           
 12950                           ; BSR set to: 0
 12951  0103C8  0012               	return	
 12952  0103CA                     l1866:
 12953  0103CA                     l16224:
 12954                           
 12955                           ; BSR set to: 0
 12956                           ;fat16.c: 625: };fat16.c: 628: memcpy(root_entry.fileName, name, 8);
 12957  0103CA  0EBD               	movlw	low fat_create_file@root_entry
 12958  0103CC  6F60               	movwf	memcpy@d1& (0+255),b
 12959  0103CE  0E00               	movlw	high fat_create_file@root_entry
 12960  0103D0  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12961  0103D2  C0AC  F062         	movff	fat_create_file@name,memcpy@s1
 12962  0103D6  C0AD  F063         	movff	fat_create_file@name+1,memcpy@s1+1
 12963  0103DA  0E00               	movlw	0
 12964  0103DC  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12965  0103DE  0E08               	movlw	8
 12966  0103E0  6F64               	movwf	memcpy@n& (0+255),b
 12967  0103E2  ECF2  F0A3         	call	_memcpy	;wreg free
 12968                           
 12969                           ;fat16.c: 629: memcpy(root_entry.fileExtension, extension, 3);
 12970  0103E6  0EC5               	movlw	low (fat_create_file@root_entry+8)
 12971  0103E8  0100               	movlb	0	; () banked
 12972  0103EA  6F60               	movwf	memcpy@d1& (0+255),b
 12973  0103EC  0E00               	movlw	high (fat_create_file@root_entry+8)
 12974  0103EE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 12975  0103F0  C0AE  F062         	movff	fat_create_file@extension,memcpy@s1
 12976  0103F4  C0AF  F063         	movff	fat_create_file@extension+1,memcpy@s1+1
 12977  0103F8  0E00               	movlw	0
 12978  0103FA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 12979  0103FC  0E03               	movlw	3
 12980  0103FE  6F64               	movwf	memcpy@n& (0+255),b
 12981  010400  ECF2  F0A3         	call	_memcpy	;wreg free
 12982                           
 12983                           ;fat16.c: 630: root_entry.attributes = 0x00;
 12984  010404  0E00               	movlw	0
 12985  010406  0100               	movlb	0	; () banked
 12986  010408  6FC8               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 12987                           
 12988                           ; BSR set to: 0
 12989                           ;fat16.c: 631: root_entry.reserved1 = 0x00;
 12990  01040A  0E00               	movlw	0
 12991  01040C  6FC9               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 12992                           
 12993                           ; BSR set to: 0
 12994                           ;fat16.c: 632: root_entry.secondFractions = 0x00;
 12995  01040E  0E00               	movlw	0
 12996  010410  6FCA               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 12997                           
 12998                           ; BSR set to: 0
 12999                           ;fat16.c: 633: root_entry.createdTime = _get_time();
 13000  010412  EC8B  F0AE         	call	__get_time	;wreg free
 13001  010416  C060  F0CB         	movff	?__get_time,fat_create_file@root_entry+14
 13002  01041A  C061  F0CC         	movff	?__get_time+1,fat_create_file@root_entry+15
 13003                           
 13004                           ;fat16.c: 634: root_entry.createdDate = _get_date();
 13005  01041E  EC91  F0AE         	call	__get_date	;wreg free
 13006  010422  C060  F0CD         	movff	?__get_date,fat_create_file@root_entry+16
 13007  010426  C061  F0CE         	movff	?__get_date+1,fat_create_file@root_entry+17
 13008                           
 13009                           ;fat16.c: 635: root_entry.lastAccessDate = root_entry.createdDate;
 13010  01042A  C0CD  F0CF         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 13011  01042E  C0CE  F0D0         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 13012                           
 13013                           ;fat16.c: 636: root_entry.reserved2 = 0x00;
 13014  010432  0E00               	movlw	0
 13015  010434  0100               	movlb	0	; () banked
 13016  010436  6FD2               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 13017  010438  0E00               	movlw	0
 13018  01043A  6FD1               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 13019                           
 13020                           ; BSR set to: 0
 13021                           ;fat16.c: 637: root_entry.modifiedTime = root_entry.createdTime;
 13022  01043C  C0CB  F0D3         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 13023  010440  C0CC  F0D4         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;fat16.c: 638: root_entry.modifiedDate = root_entry.createdDate;
 13027  010444  C0CD  F0D5         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 13028  010448  C0CE  F0D6         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 13029                           
 13030                           ; BSR set to: 0
 13031                           ;fat16.c: 639: root_entry.firstCluster = first_cluster;
 13032  01044C  C0BA  F0D7         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 13033  010450  C0BB  F0D8         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;fat16.c: 640: root_entry.fileSize = size;
 13037  010454  C0B0  F0D9         	movff	fat_create_file@size,fat_create_file@root_entry+28
 13038  010458  C0B1  F0DA         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 13039  01045C  C0B2  F0DB         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 13040  010460  C0B3  F0DC         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 13041                           
 13042                           ; BSR set to: 0
 13043                           ;fat16.c: 643: _write_root(file_number, &root_entry);
 13044  010464  0EBD               	movlw	low fat_create_file@root_entry
 13045  010466  6F88               	movwf	__write_root@data& (0+255),b
 13046  010468  0E00               	movlw	high fat_create_file@root_entry
 13047  01046A  6F89               	movwf	(__write_root@data+1)& (0+255),b
 13048  01046C  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13049  01046E  ECAA  F0A8         	call	__write_root
 13050                           
 13051                           ;fat16.c: 645: return file_number;
 13052  010472  0100               	movlb	0	; () banked
 13053  010474  51BC               	movf	fat_create_file@file_number& (0+255),w,b
 13054  010476  0012               	return	
 13055  010478                     __end_of_fat_create_file:
 13056                           	opt stack 0
 13057                           tblptru	equ	0xFF8
 13058                           tblptrh	equ	0xFF7
 13059                           tblptrl	equ	0xFF6
 13060                           tablat	equ	0xFF5
 13061                           prodh	equ	0xFF4
 13062                           prodl	equ	0xFF3
 13063                           postinc0	equ	0xFEE
 13064                           wreg	equ	0xFE8
 13065                           postdec1	equ	0xFE5
 13066                           plusw1	equ	0xFE3
 13067                           fsr1h	equ	0xFE2
 13068                           fsr1l	equ	0xFE1
 13069                           indf2	equ	0xFDF
 13070                           postinc2	equ	0xFDE
 13071                           plusw2	equ	0xFDB
 13072                           fsr2h	equ	0xFDA
 13073                           fsr2l	equ	0xFD9
 13074                           status	equ	0xFD8
 13075                           
 13076 ;; *************** function __write_root *****************
 13077 ;; Defined at:
 13078 ;;		line 474 in file "fat16.c"
 13079 ;; Parameters:    Size  Location     Type
 13080 ;;  file_number     1    wreg     unsigned char 
 13081 ;;  data            2   40[BANK0 ] PTR struct .
 13082 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13083 ;; Auto vars:     Size  Location     Type
 13084 ;;  file_number     1   46[BANK0 ] unsigned char 
 13085 ;;  offset          2   44[BANK0 ] unsigned int 
 13086 ;;  sector          2   42[BANK0 ] unsigned int 
 13087 ;; Return value:  Size  Location     Type
 13088 ;;                  1    wreg      void 
 13089 ;; Registers used:
 13090 ;;		wreg, status,2, status,0, cstack
 13091 ;; Tracked objects:
 13092 ;;		On entry : 0/0
 13093 ;;		On exit  : 0/0
 13094 ;;		Unchanged: 0/0
 13095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13096 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13097 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13098 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13099 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13100 ;;Total ram usage:        7 bytes
 13101 ;; Hardware stack levels used:    1
 13102 ;; Hardware stack levels required when called:   15
 13103 ;; This function calls:
 13104 ;;		__offset_from_file_number
 13105 ;;		__sector_from_file_number
 13106 ;;		_flash_partial_write
 13107 ;; This function is called by:
 13108 ;;		_fat_create_file
 13109 ;;		_fat_resize_file
 13110 ;;		_fat_rename_file
 13111 ;; This function uses a non-reentrant model
 13112 ;;
 13113                           
 13114                           	psect	text41
 13115  015154                     __ptext41:
 13116                           	opt stack 0
 13117  015154                     __write_root:
 13118                           	opt stack 12
 13119                           
 13120                           ;incstack = 0
 13121                           ;__write_root@file_number stored from wreg
 13122  015154  0100               	movlb	0	; () banked
 13123  015156  6F8E               	movwf	__write_root@file_number& (0+255),b
 13124                           
 13125                           ;fat16.c: 476: uint16_t sector;;fat16.c: 477: uint16_t offset;;fat16.c: 480: sector = _s
      +                          ector_from_file_number(file_number);
 13126  015158  0100               	movlb	0	; () banked
 13127  01515A  518E               	movf	__write_root@file_number& (0+255),w,b
 13128  01515C  ECAF  F0AB         	call	__sector_from_file_number
 13129  015160  C060  F08A         	movff	?__sector_from_file_number,__write_root@sector
 13130  015164  C061  F08B         	movff	?__sector_from_file_number+1,__write_root@sector+1
 13131                           
 13132                           ;fat16.c: 481: offset = _offset_from_file_number(file_number);
 13133  015168  0100               	movlb	0	; () banked
 13134  01516A  518E               	movf	__write_root@file_number& (0+255),w,b
 13135  01516C  ECC1  F0AC         	call	__offset_from_file_number
 13136  015170  C060  F08C         	movff	?__offset_from_file_number,__write_root@offset
 13137  015174  C061  F08D         	movff	?__offset_from_file_number+1,__write_root@offset+1
 13138                           
 13139                           ;fat16.c: 484: flash_partial_write(sector, offset, 32, data);
 13140  015178  C08A  F07F         	movff	__write_root@sector,flash_partial_write@page
 13141  01517C  C08B  F080         	movff	__write_root@sector+1,flash_partial_write@page+1
 13142  015180  C08C  F081         	movff	__write_root@offset,flash_partial_write@start
 13143  015184  C08D  F082         	movff	__write_root@offset+1,flash_partial_write@start+1
 13144  015188  0E00               	movlw	0
 13145  01518A  0100               	movlb	0	; () banked
 13146  01518C  6F84               	movwf	(flash_partial_write@length+1)& (0+255),b
 13147  01518E  0E20               	movlw	32
 13148  015190  6F83               	movwf	flash_partial_write@length& (0+255),b
 13149  015192  C088  F085         	movff	__write_root@data,flash_partial_write@data
 13150  015196  C089  F086         	movff	__write_root@data+1,flash_partial_write@data+1
 13151  01519A  EC58  F0A2         	call	_flash_partial_write	;wreg free
 13152  01519E  0012               	return		;funcret
 13153  0151A0                     __end_of__write_root:
 13154                           	opt stack 0
 13155                           tblptru	equ	0xFF8
 13156                           tblptrh	equ	0xFF7
 13157                           tblptrl	equ	0xFF6
 13158                           tablat	equ	0xFF5
 13159                           prodh	equ	0xFF4
 13160                           prodl	equ	0xFF3
 13161                           postinc0	equ	0xFEE
 13162                           wreg	equ	0xFE8
 13163                           postdec1	equ	0xFE5
 13164                           plusw1	equ	0xFE3
 13165                           fsr1h	equ	0xFE2
 13166                           fsr1l	equ	0xFE1
 13167                           indf2	equ	0xFDF
 13168                           postinc2	equ	0xFDE
 13169                           plusw2	equ	0xFDB
 13170                           fsr2h	equ	0xFDA
 13171                           fsr2l	equ	0xFD9
 13172                           status	equ	0xFD8
 13173                           
 13174 ;; *************** function _flash_partial_write *****************
 13175 ;; Defined at:
 13176 ;;		line 460 in file "flash.c"
 13177 ;; Parameters:    Size  Location     Type
 13178 ;;  page            2   31[BANK0 ] unsigned int 
 13179 ;;  start           2   33[BANK0 ] unsigned int 
 13180 ;;  length          2   35[BANK0 ] unsigned int 
 13181 ;;  data            2   37[BANK0 ] PTR unsigned char 
 13182 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 13183 ;;		 -> _delete_root@deleted_value(1), 
 13184 ;; Auto vars:     Size  Location     Type
 13185 ;;  match           1   39[BANK0 ] enum E7062
 13186 ;; Return value:  Size  Location     Type
 13187 ;;                  1    wreg      void 
 13188 ;; Registers used:
 13189 ;;		wreg, status,2, status,0, cstack
 13190 ;; Tracked objects:
 13191 ;;		On entry : 0/0
 13192 ;;		On exit  : 0/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13195 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13196 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13198 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13199 ;;Total ram usage:        9 bytes
 13200 ;; Hardware stack levels used:    1
 13201 ;; Hardware stack levels required when called:   14
 13202 ;; This function calls:
 13203 ;;		__flash_compare_page_to_buffer
 13204 ;;		__flash_copy_page_to_buffer
 13205 ;;		__flash_is_busy
 13206 ;;		__flash_write_page_from_buffer
 13207 ;;		__flash_write_to_buffer
 13208 ;; This function is called by:
 13209 ;;		__write_root
 13210 ;;		_fat_modify_file
 13211 ;;		__delete_root
 13212 ;; This function uses a non-reentrant model
 13213 ;;
 13214                           
 13215                           	psect	text42
 13216  0144B0                     __ptext42:
 13217                           	opt stack 0
 13218  0144B0                     _flash_partial_write:
 13219                           	opt stack 12
 13220                           
 13221                           ;flash.c: 462: flashMatchResult_t match;;flash.c: 465: while(_flash_is_busy());
 13222                           
 13223                           ;incstack = 0
 13224  0144B0  EC70  F0AD         	call	__flash_is_busy	;wreg free
 13225  0144B4  0900               	iorlw	0
 13226  0144B6  A4D8               	btfss	status,2,c
 13227  0144B8  D7FB               	goto	_flash_partial_write
 13228                           
 13229                           ;flash.c: 468: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 13230  0144BA  C07F  F073         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 13231  0144BE  C080  F074         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 13232  0144C2  0E00               	movlw	0
 13233  0144C4  0100               	movlb	0	; () banked
 13234  0144C6  6F75               	movwf	__flash_copy_page_to_buffer@buffer& (0+255),b
 13235  0144C8  ECAF  F0A4         	call	__flash_copy_page_to_buffer	;wreg free
 13236                           
 13237                           ;flash.c: 471: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 13238  0144CC  C081  F073         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 13239  0144D0  C082  F074         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 13240  0144D4  C085  F075         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 13241  0144D8  C086  F076         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 13242  0144DC  C083  F077         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 13243  0144E0  C084  F078         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 13244  0144E4  0E00               	movlw	0
 13245  0144E6  0100               	movlb	0	; () banked
 13246  0144E8  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 13247  0144EA  EC6A  F0A7         	call	__flash_write_to_buffer	;wreg free
 13248                           
 13249                           ;flash.c: 474: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 13250  0144EE  C07F  F073         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 13251  0144F2  C080  F074         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 13252  0144F6  0E00               	movlw	0
 13253  0144F8  0100               	movlb	0	; () banked
 13254  0144FA  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 13255  0144FC  EC4B  F0A0         	call	__flash_compare_page_to_buffer	;wreg free
 13256  014500  0100               	movlb	0	; () banked
 13257  014502  6F87               	movwf	flash_partial_write@match& (0+255),b
 13258                           
 13259                           ; BSR set to: 0
 13260                           ;flash.c: 477: if(match==DATA_DOES_NOT_MATCH)
 13261  014504  0587               	decf	flash_partial_write@match& (0+255),w,b
 13262  014506  A4D8               	btfss	status,2,c
 13263  014508  0012               	return	
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;flash.c: 478: {;flash.c: 479: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 13267  01450A  C07F  F073         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 13268  01450E  C080  F074         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 13269  014512  0E00               	movlw	0
 13270  014514  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 13271  014516  EC36  F0A5         	call	__flash_write_page_from_buffer	;wreg free
 13272  01451A  0012               	return	
 13273  01451C                     __end_of_flash_partial_write:
 13274                           	opt stack 0
 13275                           tblptru	equ	0xFF8
 13276                           tblptrh	equ	0xFF7
 13277                           tblptrl	equ	0xFF6
 13278                           tablat	equ	0xFF5
 13279                           prodh	equ	0xFF4
 13280                           prodl	equ	0xFF3
 13281                           postinc0	equ	0xFEE
 13282                           wreg	equ	0xFE8
 13283                           postdec1	equ	0xFE5
 13284                           plusw1	equ	0xFE3
 13285                           fsr1h	equ	0xFE2
 13286                           fsr1l	equ	0xFE1
 13287                           indf2	equ	0xFDF
 13288                           postinc2	equ	0xFDE
 13289                           plusw2	equ	0xFDB
 13290                           fsr2h	equ	0xFDA
 13291                           fsr2l	equ	0xFD9
 13292                           status	equ	0xFD8
 13293                           
 13294 ;; *************** function __flash_copy_page_to_buffer *****************
 13295 ;; Defined at:
 13296 ;;		line 154 in file "flash.c"
 13297 ;; Parameters:    Size  Location     Type
 13298 ;;  page            2   19[BANK0 ] unsigned int 
 13299 ;;  buffer          1   21[BANK0 ] enum E7058
 13300 ;; Auto vars:     Size  Location     Type
 13301 ;;  command         4   25[BANK0 ] unsigned char [4]
 13302 ;; Return value:  Size  Location     Type
 13303 ;;                  1    wreg      void 
 13304 ;; Registers used:
 13305 ;;		wreg, status,2, status,0, cstack
 13306 ;; Tracked objects:
 13307 ;;		On entry : 0/0
 13308 ;;		On exit  : 0/0
 13309 ;;		Unchanged: 0/0
 13310 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13311 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13312 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13313 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13314 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13315 ;;Total ram usage:       10 bytes
 13316 ;; Hardware stack levels used:    1
 13317 ;; Hardware stack levels required when called:   13
 13318 ;; This function calls:
 13319 ;;		__flash_is_busy
 13320 ;;		_spi_tx
 13321 ;; This function is called by:
 13322 ;;		_flash_partial_write
 13323 ;;		_flash_copy_page_to_buffer
 13324 ;; This function uses a non-reentrant model
 13325 ;;
 13326                           
 13327                           	psect	text43
 13328  01495E                     __ptext43:
 13329                           	opt stack 0
 13330  01495E                     __flash_copy_page_to_buffer:
 13331                           	opt stack 12
 13332                           
 13333                           ;flash.c: 156: uint8_t command[4];;flash.c: 159: while(_flash_is_busy());
 13334                           
 13335                           ;incstack = 0
 13336  01495E  EC70  F0AD         	call	__flash_is_busy	;wreg free
 13337  014962  0900               	iorlw	0
 13338  014964  A4D8               	btfss	status,2,c
 13339  014966  D7FB               	goto	__flash_copy_page_to_buffer
 13340                           
 13341                           ;flash.c: 162: if(buffer==FLASH_BUFFER_1)
 13342  014968  0100               	movlb	0	; () banked
 13343  01496A  5175               	movf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13344  01496C  A4D8               	btfss	status,2,c
 13345  01496E  D002               	goto	l1554
 13346                           
 13347                           ; BSR set to: 0
 13348                           ;flash.c: 163: command[0] = 0x53;
 13349  014970  0E53               	movlw	83
 13350  014972  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13351  014974                     l1554:
 13352                           
 13353                           ; BSR set to: 0
 13354                           ;flash.c: 164: if(buffer==FLASH_BUFFER_2)
 13355                           
 13356                           ; BSR set to: 0
 13357  014974  0575               	decf	__flash_copy_page_to_buffer@buffer& (0+255),w,b
 13358  014976  A4D8               	btfss	status,2,c
 13359  014978  D002               	goto	l1555
 13360                           
 13361                           ; BSR set to: 0
 13362                           ;flash.c: 165: command[0] = 0x55;
 13363  01497A  0E55               	movlw	85
 13364  01497C  6F79               	movwf	__flash_copy_page_to_buffer@command& (0+255),b
 13365  01497E                     l1555:
 13366                           
 13367                           ; BSR set to: 0
 13368                           ;flash.c: 167: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 13369                           
 13370                           ; BSR set to: 0
 13371  01497E  C073  F076         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 13372  014982  C074  F077         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 13373  014986  0E07               	movlw	7
 13374  014988  6F78               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),b
 13375  01498A                     u11545:
 13376  01498A  90D8               	bcf	status,0,c
 13377  01498C  3377               	rrcf	(??__flash_copy_page_to_buffer+1)& (0+255),f,b
 13378  01498E  3376               	rrcf	??__flash_copy_page_to_buffer& (0+255),f,b
 13379  014990  2F78               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,b
 13380  014992  D7FB               	goto	u11545
 13381  014994  5176               	movf	??__flash_copy_page_to_buffer& (0+255),w,b
 13382  014996  6F7A               	movwf	(__flash_copy_page_to_buffer@command+1)& (0+255),b
 13383                           
 13384                           ; BSR set to: 0
 13385                           ;flash.c: 168: command[2] = ((unsigned char)((page<<1)&0xFF));
 13386  014998  5173               	movf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13387  01499A  2573               	addwf	__flash_copy_page_to_buffer@page& (0+255),w,b
 13388  01499C  6F7B               	movwf	(__flash_copy_page_to_buffer@command+2)& (0+255),b
 13389                           
 13390                           ;flash.c: 169: command[3] = 0x00;
 13391  01499E  0E00               	movlw	0
 13392  0149A0  6F7C               	movwf	(__flash_copy_page_to_buffer@command+3)& (0+255),b
 13393                           
 13394                           ; BSR set to: 0
 13395                           ;flash.c: 172: spi_tx(command, 4);
 13396  0149A2  0E79               	movlw	low __flash_copy_page_to_buffer@command
 13397  0149A4  6F60               	movwf	spi_tx@data& (0+255),b
 13398  0149A6  0E00               	movlw	high __flash_copy_page_to_buffer@command
 13399  0149A8  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 13400  0149AA  0E00               	movlw	0
 13401  0149AC  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 13402  0149AE  0E04               	movlw	4
 13403  0149B0  6F62               	movwf	spi_tx@length& (0+255),b
 13404  0149B2  EC63  F0A5         	call	_spi_tx	;wreg free
 13405  0149B6  0012               	return		;funcret
 13406  0149B8                     __end_of__flash_copy_page_to_buffer:
 13407                           	opt stack 0
 13408                           tblptru	equ	0xFF8
 13409                           tblptrh	equ	0xFF7
 13410                           tblptrl	equ	0xFF6
 13411                           tablat	equ	0xFF5
 13412                           prodh	equ	0xFF4
 13413                           prodl	equ	0xFF3
 13414                           postinc0	equ	0xFEE
 13415                           wreg	equ	0xFE8
 13416                           postdec1	equ	0xFE5
 13417                           plusw1	equ	0xFE3
 13418                           fsr1h	equ	0xFE2
 13419                           fsr1l	equ	0xFE1
 13420                           indf2	equ	0xFDF
 13421                           postinc2	equ	0xFDE
 13422                           plusw2	equ	0xFDB
 13423                           fsr2h	equ	0xFDA
 13424                           fsr2l	equ	0xFD9
 13425                           status	equ	0xFD8
 13426                           
 13427 ;; *************** function __make_cluster_chain *****************
 13428 ;; Defined at:
 13429 ;;		line 214 in file "fat16.c"
 13430 ;; Parameters:    Size  Location     Type
 13431 ;;  first_cluste    2   53[BANK0 ] unsigned int 
 13432 ;;  number_of_cl    2   55[BANK0 ] unsigned int 
 13433 ;; Auto vars:     Size  Location     Type
 13434 ;;  next_cluster    2   74[BANK0 ] unsigned int 
 13435 ;;  offset          2   72[BANK0 ] unsigned int 
 13436 ;;  sector_in_bu    2   70[BANK0 ] unsigned int 
 13437 ;;  sector          2   68[BANK0 ] unsigned int 
 13438 ;;  remaining_cl    2   66[BANK0 ] unsigned int 
 13439 ;;  different_se    2   63[BANK0 ] unsigned int 
 13440 ;;  minimum_sect    2   61[BANK0 ] unsigned int 
 13441 ;;  next_offset     2   59[BANK0 ] unsigned int 
 13442 ;;  data_changed    1   65[BANK0 ] unsigned char 
 13443 ;; Return value:  Size  Location     Type
 13444 ;;                  2   53[BANK0 ] unsigned int 
 13445 ;; Registers used:
 13446 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13447 ;; Tracked objects:
 13448 ;;		On entry : 0/0
 13449 ;;		On exit  : 0/0
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13452 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13453 ;;      Locals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13454 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13455 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13456 ;;Total ram usage:       23 bytes
 13457 ;; Hardware stack levels used:    1
 13458 ;; Hardware stack levels required when called:   16
 13459 ;; This function calls:
 13460 ;;		__fat_offset_from_cluster
 13461 ;;		__fat_sector_from_cluster
 13462 ;;		__get_available_cluster
 13463 ;;		__get_available_offset_from_buffer
 13464 ;;		__read_value_from_offset
 13465 ;;		__write_value_to_offset
 13466 ;;		_flash_sector_read
 13467 ;;		_flash_sector_write
 13468 ;; This function is called by:
 13469 ;;		_fat_create_file
 13470 ;;		_fat_resize_file
 13471 ;;		_fat_delete_file
 13472 ;; This function uses a non-reentrant model
 13473 ;;
 13474                           
 13475                           	psect	text44
 13476  00D26A                     __ptext44:
 13477                           	opt stack 0
 13478  00D26A                     __make_cluster_chain:
 13479                           	opt stack 11
 13480                           
 13481                           ;fat16.c: 216: uint16_t remaining_clusters;;fat16.c: 217: uint16_t minimum_sector;;fat16
      +                          .c: 218: uint16_t sector;;fat16.c: 219: uint16_t offset;;fat16.c: 220: uint16_t next_off
      +                          set;;fat16.c: 221: uint16_t sector_in_buffer;;fat16.c: 222: uint16_t next_cluster;;fat16
      +                          .c: 223: uint16_t different_sector_cluster;;fat16.c: 224: uint8_t data_changed;;fat16.c:
      +                           227: sector_in_buffer = 0;
 13482                           
 13483                           ;incstack = 0
 13484  00D26A  0E00               	movlw	0
 13485  00D26C  0100               	movlb	0	; () banked
 13486  00D26E  6FA7               	movwf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),b
 13487  00D270  0E00               	movlw	0
 13488  00D272  6FA6               	movwf	__make_cluster_chain@sector_in_buffer& (0+255),b
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;fat16.c: 228: remaining_clusters = number_of_clusters;
 13492  00D274  C097  F0A2         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 13493  00D278  C098  F0A3         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 13494                           
 13495                           ;fat16.c: 229: minimum_sector = 2;
 13496  00D27C  0E00               	movlw	0
 13497  00D27E  6F9E               	movwf	(__make_cluster_chain@minimum_sector+1)& (0+255),b
 13498  00D280  0E02               	movlw	2
 13499  00D282  6F9D               	movwf	__make_cluster_chain@minimum_sector& (0+255),b
 13500                           
 13501                           ;fat16.c: 230: data_changed = 0;
 13502  00D284  0E00               	movlw	0
 13503  00D286  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13504                           
 13505                           ; BSR set to: 0
 13506                           ;fat16.c: 233: if((first_cluster==0) && (number_of_clusters>0))
 13507  00D288  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13508  00D28A  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13509  00D28C  A4D8               	btfss	status,2,c
 13510  00D28E  D024               	goto	l1788
 13511                           
 13512                           ; BSR set to: 0
 13513  00D290  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13514  00D292  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13515  00D294  B4D8               	btfsc	status,2,c
 13516  00D296  D020               	goto	l1788
 13517                           
 13518                           ; BSR set to: 0
 13519                           ;fat16.c: 234: {;fat16.c: 235: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 13520  00D298  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13521  00D29C  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13522  00D2A0  0E00               	movlw	0
 13523  00D2A2  6F8E               	movwf	(__get_available_cluster@skip_sector+1)& (0+255),b
 13524  00D2A4  0E00               	movlw	0
 13525  00D2A6  6F8D               	movwf	__get_available_cluster@skip_sector& (0+255),b
 13526  00D2A8  ECF8  F094         	call	__get_available_cluster	;wreg free
 13527  00D2AC  C08B  F095         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 13528  00D2B0  C08C  F096         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 13529                           
 13530                           ;fat16.c: 237: minimum_sector = _fat_sector_from_cluster(first_cluster);
 13531  00D2B4  C095  F060         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 13532  00D2B8  C096  F061         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 13533  00D2BC  EC01  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13534  00D2C0  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13535  00D2C4  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13536                           
 13537                           ;fat16.c: 238: if(first_cluster == 0)
 13538  00D2C8  0100               	movlb	0	; () banked
 13539  00D2CA  5195               	movf	__make_cluster_chain@first_cluster& (0+255),w,b
 13540  00D2CC  1196               	iorwf	(__make_cluster_chain@first_cluster+1)& (0+255),w,b
 13541  00D2CE  A4D8               	btfss	status,2,c
 13542  00D2D0  D003               	goto	l1788
 13543                           
 13544                           ; BSR set to: 0
 13545                           ;fat16.c: 239: {;fat16.c: 240: return 0xFFFF;
 13546  00D2D2  6995               	setf	?__make_cluster_chain& (0+255),b
 13547  00D2D4  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13548  00D2D6  0012               	return	
 13549  00D2D8                     l1788:
 13550                           
 13551                           ; BSR set to: 0
 13552                           ;fat16.c: 241: };fat16.c: 242: };fat16.c: 243: next_cluster = first_cluster;
 13553                           
 13554                           ; BSR set to: 0
 13555  00D2D8  C095  F0AA         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 13556  00D2DC  C096  F0AB         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 13557                           
 13558                           ;fat16.c: 246: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 13559  00D2E0  D103               	goto	l1805
 13560  00D2E2                     
 13561                           ; BSR set to: 0
 13562                           ;fat16.c: 247: {;fat16.c: 260: sector = _fat_sector_from_cluster(next_cluster);
 13563                           
 13564                           ; BSR set to: 0
 13565  00D2E2  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 13566  00D2E6  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 13567  00D2EA  EC01  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13568  00D2EE  C060  F0A4         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 13569  00D2F2  C061  F0A5         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 13570                           
 13571                           ;fat16.c: 261: offset = _fat_offset_from_cluster(next_cluster);
 13572  00D2F6  C0AA  F060         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 13573  00D2FA  C0AB  F061         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 13574  00D2FE  EC0E  F0AE         	call	__fat_offset_from_cluster	;wreg free
 13575  00D302  C060  F0A8         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 13576  00D306  C061  F0A9         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 13577                           
 13578                           ;fat16.c: 264: if(sector != sector_in_buffer)
 13579  00D30A  0100               	movlb	0	; () banked
 13580  00D30C  51A6               	movf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13581  00D30E  19A4               	xorwf	__make_cluster_chain@sector& (0+255),w,b
 13582  00D310  E104               	bnz	u13870
 13583  00D312  51A7               	movf	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13584  00D314  19A5               	xorwf	(__make_cluster_chain@sector+1)& (0+255),w,b
 13585  00D316  B4D8               	btfsc	status,2,c
 13586  00D318  D037               	goto	l1792
 13587  00D31A                     u13870:
 13588                           
 13589                           ; BSR set to: 0
 13590                           ;fat16.c: 265: {;fat16.c: 267: if(data_changed)
 13591  00D31A  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13592  00D31C  B4D8               	btfsc	status,2,c
 13593  00D31E  D00A               	goto	l1793
 13594                           
 13595                           ; BSR set to: 0
 13596                           ;fat16.c: 268: {;fat16.c: 269: flash_sector_write(sector_in_buffer, buffer);
 13597  00D320  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13598  00D324  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13599  00D328  0E00               	movlw	low _buffer
 13600  00D32A  6F81               	movwf	flash_sector_write@data& (0+255),b
 13601  00D32C  0E0A               	movlw	high _buffer
 13602  00D32E  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13603  00D330  EC0B  F0A8         	call	_flash_sector_write	;wreg free
 13604  00D334                     l1793:
 13605                           
 13606                           ;fat16.c: 270: };fat16.c: 273: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 13607  00D334  C09D  F08B         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 13608  00D338  C09E  F08C         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 13609  00D33C  C0A4  F08D         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 13610  00D340  C0A5  F08E         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 13611  00D344  ECF8  F094         	call	__get_available_cluster	;wreg free
 13612  00D348  C08B  F09F         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 13613  00D34C  C08C  F0A0         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 13614                           
 13615                           ;fat16.c: 276: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 13616  00D350  C09F  F060         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 13617  00D354  C0A0  F061         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 13618  00D358  EC01  F0AE         	call	__fat_sector_from_cluster	;wreg free
 13619  00D35C  C060  F09D         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 13620  00D360  C061  F09E         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 13621                           
 13622                           ;fat16.c: 279: flash_sector_read(sector, buffer);
 13623  00D364  C0A4  F087         	movff	__make_cluster_chain@sector,flash_sector_read@page
 13624  00D368  C0A5  F088         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 13625  00D36C  0E00               	movlw	low _buffer
 13626  00D36E  0100               	movlb	0	; () banked
 13627  00D370  6F89               	movwf	flash_sector_read@data& (0+255),b
 13628  00D372  0E0A               	movlw	high _buffer
 13629  00D374  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 13630  00D376  EC12  F0AD         	call	_flash_sector_read	;wreg free
 13631                           
 13632                           ;fat16.c: 280: sector_in_buffer = sector;
 13633  00D37A  C0A4  F0A6         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 13634  00D37E  C0A5  F0A7         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 13635                           
 13636                           ;fat16.c: 281: data_changed = 0;
 13637  00D382  0E00               	movlw	0
 13638  00D384  0100               	movlb	0	; () banked
 13639  00D386  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13640  00D388                     l1792:
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;fat16.c: 282: };fat16.c: 285: if(remaining_clusters > 1)
 13644                           
 13645                           ; BSR set to: 0
 13646  00D388  51A3               	movf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13647  00D38A  E104               	bnz	u13890
 13648  00D38C  0E02               	movlw	2
 13649  00D38E  5DA2               	subwf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13650  00D390  A0D8               	btfss	status,0,c
 13651  00D392  D05E               	goto	l1794
 13652  00D394                     u13890:
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;fat16.c: 286: {;fat16.c: 288: next_cluster = _read_value_from_offset(offset, buffer);
 13656  00D394  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13657  00D398  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13658  00D39C  0E00               	movlw	low _buffer
 13659  00D39E  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13660  00D3A0  0E0A               	movlw	high _buffer
 13661  00D3A2  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13662  00D3A4  EC1A  F0A9         	call	__read_value_from_offset	;wreg free
 13663  00D3A8  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13664  00D3AC  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13665                           
 13666                           ;fat16.c: 291: if((next_cluster < 2) || (next_cluster > 8153))
 13667  00D3B0  0100               	movlb	0	; () banked
 13668  00D3B2  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13669  00D3B4  E104               	bnz	u13900
 13670  00D3B6  0E02               	movlw	2
 13671  00D3B8  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13672  00D3BA  A0D8               	btfss	status,0,c
 13673  00D3BC  D006               	goto	u13910
 13674  00D3BE                     u13900:
 13675                           
 13676                           ; BSR set to: 0
 13677  00D3BE  0EDA               	movlw	218
 13678  00D3C0  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13679  00D3C2  0E1F               	movlw	31
 13680  00D3C4  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13681  00D3C6  A0D8               	btfss	status,0,c
 13682  00D3C8  D06B               	goto	l1804
 13683  00D3CA                     u13910:
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;fat16.c: 292: {;fat16.c: 294: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 13687                           
 13688                           ; BSR set to: 0
 13689  00D3CA  0E02               	movlw	2
 13690  00D3CC  25A8               	addwf	__make_cluster_chain@offset& (0+255),w,b
 13691  00D3CE  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 13692  00D3D0  0E00               	movlw	0
 13693  00D3D2  21A9               	addwfc	(__make_cluster_chain@offset+1)& (0+255),w,b
 13694  00D3D4  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 13695  00D3D6  0E00               	movlw	low _buffer
 13696  00D3D8  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 13697  00D3DA  0E0A               	movlw	high _buffer
 13698  00D3DC  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 13699  00D3DE  EC52  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 13700  00D3E2  C060  F09B         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 13701  00D3E6  C061  F09C         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 13702                           
 13703                           ;fat16.c: 296: if(next_offset != 0xFFFF)
 13704  00D3EA  0100               	movlb	0	; () banked
 13705  00D3EC  299B               	incf	__make_cluster_chain@next_offset& (0+255),w,b
 13706  00D3EE  E103               	bnz	u13920
 13707  00D3F0  299C               	incf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13708  00D3F2  B4D8               	btfsc	status,2,c
 13709  00D3F4  D013               	goto	l1798
 13710  00D3F6                     u13920:
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;fat16.c: 297: {;fat16.c: 299: next_cluster = sector_in_buffer - 2;
 13714  00D3F6  0EFE               	movlw	254
 13715  00D3F8  25A6               	addwf	__make_cluster_chain@sector_in_buffer& (0+255),w,b
 13716  00D3FA  6FAA               	movwf	__make_cluster_chain@next_cluster& (0+255),b
 13717  00D3FC  0EFF               	movlw	255
 13718  00D3FE  21A7               	addwfc	(__make_cluster_chain@sector_in_buffer+1)& (0+255),w,b
 13719  00D400  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13720                           
 13721                           ; BSR set to: 0
 13722                           ;fat16.c: 300: next_cluster <<= 8;
 13723  00D402  51AA               	movf	__make_cluster_chain@next_cluster& (0+255),w,b
 13724  00D404  6FAB               	movwf	(__make_cluster_chain@next_cluster+1)& (0+255),b
 13725  00D406  6BAA               	clrf	__make_cluster_chain@next_cluster& (0+255),b
 13726                           
 13727                           ; BSR set to: 0
 13728                           ;fat16.c: 301: next_cluster |= (next_offset>>1);
 13729  00D408  90D8               	bcf	status,0,c
 13730  00D40A  319C               	rrcf	(__make_cluster_chain@next_offset+1)& (0+255),w,b
 13731  00D40C  6F9A               	movwf	(??__make_cluster_chain+1)& (0+255),b
 13732  00D40E  319B               	rrcf	__make_cluster_chain@next_offset& (0+255),w,b
 13733  00D410  6F99               	movwf	??__make_cluster_chain& (0+255),b
 13734  00D412  5199               	movf	??__make_cluster_chain& (0+255),w,b
 13735  00D414  13AA               	iorwf	__make_cluster_chain@next_cluster& (0+255),f,b
 13736  00D416  519A               	movf	(??__make_cluster_chain+1)& (0+255),w,b
 13737  00D418  13AB               	iorwf	(__make_cluster_chain@next_cluster+1)& (0+255),f,b
 13738                           
 13739                           ;fat16.c: 302: }
 13740  00D41A  D00B               	goto	l1801
 13741  00D41C                     l1798:
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;fat16.c: 303: else;fat16.c: 304: {;fat16.c: 305: if(different_sector_cluster == 0x0000)
 13745                           
 13746                           ; BSR set to: 0
 13747  00D41C  519F               	movf	__make_cluster_chain@different_sector_cluster& (0+255),w,b
 13748  00D41E  11A0               	iorwf	(__make_cluster_chain@different_sector_cluster+1)& (0+255),w,b
 13749  00D420  A4D8               	btfss	status,2,c
 13750  00D422  D003               	goto	l1800
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;fat16.c: 306: {;fat16.c: 308: return 0xFFFF;
 13754  00D424  6995               	setf	?__make_cluster_chain& (0+255),b
 13755  00D426  6996               	setf	(?__make_cluster_chain+1)& (0+255),b
 13756  00D428  0012               	return	
 13757  00D42A                     l1800:
 13758                           
 13759                           ; BSR set to: 0
 13760                           ;fat16.c: 310: else;fat16.c: 311: {;fat16.c: 313: next_cluster = different_sector_cluste
      +                          r;
 13761  00D42A  C09F  F0AA         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 13762  00D42E  C0A0  F0AB         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 13763  00D432                     l1801:
 13764                           
 13765                           ; BSR set to: 0
 13766                           ;fat16.c: 314: };fat16.c: 315: };fat16.c: 317: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 13767                           
 13768                           ; BSR set to: 0
 13769                           
 13770                           ; BSR set to: 0
 13771  00D432  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13772  00D436  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13773  00D43A  0E00               	movlw	low _buffer
 13774  00D43C  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13775  00D43E  0E0A               	movlw	high _buffer
 13776  00D440  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13777  00D442  C0AA  F064         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 13778  00D446  C0AB  F065         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 13779  00D44A  EC13  F0AB         	call	__write_value_to_offset	;wreg free
 13780  00D44E  D025               	goto	L86
 13781  00D450                     l1794:
 13782                           
 13783                           ; BSR set to: 0
 13784                           ;fat16.c: 327: else if(remaining_clusters == 1)
 13785                           
 13786                           ; BSR set to: 0
 13787  00D450  05A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13788  00D452  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13789  00D454  A4D8               	btfss	status,2,c
 13790  00D456  D028               	goto	l1803
 13791                           
 13792                           ; BSR set to: 0
 13793                           ;fat16.c: 328: {;fat16.c: 330: next_cluster = _read_value_from_offset(offset, buffer);
 13794  00D458  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13795  00D45C  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13796  00D460  0E00               	movlw	low _buffer
 13797  00D462  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13798  00D464  0E0A               	movlw	high _buffer
 13799  00D466  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13800  00D468  EC1A  F0A9         	call	__read_value_from_offset	;wreg free
 13801  00D46C  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13802  00D470  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13803                           
 13804                           ;fat16.c: 332: if(next_cluster != 0xFFFF)
 13805  00D474  0100               	movlb	0	; () banked
 13806  00D476  29AA               	incf	__make_cluster_chain@next_cluster& (0+255),w,b
 13807  00D478  E103               	bnz	u13950
 13808  00D47A  29AB               	incf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13809  00D47C  B4D8               	btfsc	status,2,c
 13810  00D47E  D010               	goto	l1804
 13811  00D480                     u13950:
 13812                           
 13813                           ; BSR set to: 0
 13814                           ;fat16.c: 333: {;fat16.c: 335: _write_value_to_offset(offset, buffer, 0xFFFF);
 13815  00D480  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13816  00D484  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13817  00D488  0E00               	movlw	low _buffer
 13818  00D48A  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13819  00D48C  0E0A               	movlw	high _buffer
 13820  00D48E  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13821  00D490  0EFF               	movlw	255
 13822  00D492  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13823  00D494  6964               	setf	__write_value_to_offset@value& (0+255),b
 13824  00D496  EC13  F0AB         	call	__write_value_to_offset	;wreg free
 13825  00D49A                     L86:
 13826                           
 13827                           ;fat16.c: 337: data_changed = 1;
 13828  00D49A  0E01               	movlw	1
 13829  00D49C  0100               	movlb	0	; () banked
 13830  00D49E  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13831  00D4A0                     l1804:
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;fat16.c: 338: };fat16.c: 341: --remaining_clusters;
 13835                           
 13836                           ; BSR set to: 0
 13837  00D4A0  07A2               	decf	__make_cluster_chain@remaining_clusters& (0+255),f,b
 13838  00D4A2  A0D8               	btfss	status,0,c
 13839  00D4A4  07A3               	decf	(__make_cluster_chain@remaining_clusters+1)& (0+255),f,b
 13840                           
 13841                           ;fat16.c: 342: }
 13842  00D4A6  D020               	goto	l1805
 13843  00D4A8                     l1803:
 13844                           
 13845                           ; BSR set to: 0
 13846                           ;fat16.c: 345: else;fat16.c: 346: {;fat16.c: 348: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 13847                           
 13848                           ; BSR set to: 0
 13849  00D4A8  C0A8  F060         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 13850  00D4AC  C0A9  F061         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 13851  00D4B0  0E00               	movlw	low _buffer
 13852  00D4B2  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 13853  00D4B4  0E0A               	movlw	high _buffer
 13854  00D4B6  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 13855  00D4B8  EC1A  F0A9         	call	__read_value_from_offset	;wreg free
 13856  00D4BC  C060  F0AA         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 13857  00D4C0  C061  F0AB         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 13858                           
 13859                           ;fat16.c: 351: _write_value_to_offset(offset, buffer, 0x0000);
 13860  00D4C4  C0A8  F060         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 13861  00D4C8  C0A9  F061         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 13862  00D4CC  0E00               	movlw	low _buffer
 13863  00D4CE  0100               	movlb	0	; () banked
 13864  00D4D0  6F62               	movwf	__write_value_to_offset@buffer& (0+255),b
 13865  00D4D2  0E0A               	movlw	high _buffer
 13866  00D4D4  6F63               	movwf	(__write_value_to_offset@buffer+1)& (0+255),b
 13867  00D4D6  0E00               	movlw	0
 13868  00D4D8  6F65               	movwf	(__write_value_to_offset@value+1)& (0+255),b
 13869  00D4DA  0E00               	movlw	0
 13870  00D4DC  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 13871  00D4DE  EC13  F0AB         	call	__write_value_to_offset	;wreg free
 13872                           
 13873                           ;fat16.c: 353: data_changed = 1;
 13874  00D4E2  0E01               	movlw	1
 13875  00D4E4  0100               	movlb	0	; () banked
 13876  00D4E6  6FA1               	movwf	__make_cluster_chain@data_changed& (0+255),b
 13877  00D4E8                     l1805:
 13878                           
 13879                           ; BSR set to: 0
 13880                           
 13881                           ; BSR set to: 0
 13882                           
 13883                           ; BSR set to: 0
 13884                           
 13885                           ; BSR set to: 0
 13886  00D4E8  51A2               	movf	__make_cluster_chain@remaining_clusters& (0+255),w,b
 13887  00D4EA  11A3               	iorwf	(__make_cluster_chain@remaining_clusters+1)& (0+255),w,b
 13888  00D4EC  A4D8               	btfss	status,2,c
 13889  00D4EE  D6F9               	goto	l1791
 13890                           
 13891                           ; BSR set to: 0
 13892  00D4F0  51AB               	movf	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13893  00D4F2  E104               	bnz	u13970
 13894  00D4F4  0E02               	movlw	2
 13895  00D4F6  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13896  00D4F8  A0D8               	btfss	status,0,c
 13897  00D4FA  D006               	goto	u13980
 13898  00D4FC                     u13970:
 13899                           
 13900                           ; BSR set to: 0
 13901  00D4FC  0EDA               	movlw	218
 13902  00D4FE  5DAA               	subwf	__make_cluster_chain@next_cluster& (0+255),w,b
 13903  00D500  0E1F               	movlw	31
 13904  00D502  59AB               	subwfb	(__make_cluster_chain@next_cluster+1)& (0+255),w,b
 13905  00D504  A0D8               	btfss	status,0,c
 13906  00D506  D6ED               	goto	l1791
 13907  00D508                     u13980:
 13908                           
 13909                           ; BSR set to: 0
 13910                           ;fat16.c: 354: };fat16.c: 356: };fat16.c: 359: if(data_changed)
 13911                           
 13912                           ; BSR set to: 0
 13913                           
 13914                           ; BSR set to: 0
 13915  00D508  51A1               	movf	__make_cluster_chain@data_changed& (0+255),w,b
 13916  00D50A  B4D8               	btfsc	status,2,c
 13917  00D50C  D00A               	goto	l1809
 13918                           
 13919                           ; BSR set to: 0
 13920                           ;fat16.c: 360: {;fat16.c: 361: flash_sector_write(sector_in_buffer, buffer);
 13921  00D50E  C0A6  F07F         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 13922  00D512  C0A7  F080         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 13923  00D516  0E00               	movlw	low _buffer
 13924  00D518  6F81               	movwf	flash_sector_write@data& (0+255),b
 13925  00D51A  0E0A               	movlw	high _buffer
 13926  00D51C  6F82               	movwf	(flash_sector_write@data+1)& (0+255),b
 13927  00D51E  EC0B  F0A8         	call	_flash_sector_write	;wreg free
 13928  00D522                     l1809:
 13929                           
 13930                           ;fat16.c: 362: };fat16.c: 365: if(number_of_clusters>0)
 13931  00D522  0100               	movlb	0	; () banked
 13932  00D524  5197               	movf	__make_cluster_chain@number_of_clusters& (0+255),w,b
 13933  00D526  1198               	iorwf	(__make_cluster_chain@number_of_clusters+1)& (0+255),w,b
 13934  00D528  B4D8               	btfsc	status,2,c
 13935  00D52A  D005               	goto	l1810
 13936                           
 13937                           ; BSR set to: 0
 13938                           ;fat16.c: 366: {;fat16.c: 367: return first_cluster;
 13939  00D52C  C095  F095         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 13940  00D530  C096  F096         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 13941                           
 13942                           ; BSR set to: 0
 13943                           ;fat16.c: 368: }
 13944  00D534  0012               	return	
 13945  00D536                     l1810:
 13946                           
 13947                           ; BSR set to: 0
 13948                           ;fat16.c: 369: else;fat16.c: 370: {;fat16.c: 371: return 0x0000;
 13949                           
 13950                           ; BSR set to: 0
 13951  00D536  0E00               	movlw	0
 13952  00D538  6F96               	movwf	(?__make_cluster_chain+1)& (0+255),b
 13953  00D53A  0E00               	movlw	0
 13954  00D53C  6F95               	movwf	?__make_cluster_chain& (0+255),b
 13955                           
 13956                           ; BSR set to: 0
 13957  00D53E  0012               	return	
 13958  00D540                     __end_of__make_cluster_chain:
 13959                           	opt stack 0
 13960                           tblptru	equ	0xFF8
 13961                           tblptrh	equ	0xFF7
 13962                           tblptrl	equ	0xFF6
 13963                           tablat	equ	0xFF5
 13964                           prodh	equ	0xFF4
 13965                           prodl	equ	0xFF3
 13966                           postinc0	equ	0xFEE
 13967                           wreg	equ	0xFE8
 13968                           postdec1	equ	0xFE5
 13969                           plusw1	equ	0xFE3
 13970                           fsr1h	equ	0xFE2
 13971                           fsr1l	equ	0xFE1
 13972                           indf2	equ	0xFDF
 13973                           postinc2	equ	0xFDE
 13974                           plusw2	equ	0xFDB
 13975                           fsr2h	equ	0xFDA
 13976                           fsr2l	equ	0xFD9
 13977                           status	equ	0xFD8
 13978                           
 13979 ;; *************** function __write_value_to_offset *****************
 13980 ;; Defined at:
 13981 ;;		line 124 in file "fat16.c"
 13982 ;; Parameters:    Size  Location     Type
 13983 ;;  offset          2    0[BANK0 ] unsigned int 
 13984 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 13985 ;;		 -> buffer(512), 
 13986 ;;  value           2    4[BANK0 ] unsigned int 
 13987 ;; Auto vars:     Size  Location     Type
 13988 ;;		None
 13989 ;; Return value:  Size  Location     Type
 13990 ;;                  1    wreg      void 
 13991 ;; Registers used:
 13992 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13993 ;; Tracked objects:
 13994 ;;		On entry : 0/0
 13995 ;;		On exit  : 0/0
 13996 ;;		Unchanged: 0/0
 13997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13998 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13999 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14000 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14001 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14002 ;;Total ram usage:        8 bytes
 14003 ;; Hardware stack levels used:    1
 14004 ;; Hardware stack levels required when called:   10
 14005 ;; This function calls:
 14006 ;;		Nothing
 14007 ;; This function is called by:
 14008 ;;		__make_cluster_chain
 14009 ;; This function uses a non-reentrant model
 14010 ;;
 14011                           
 14012                           	psect	text45
 14013  015626                     __ptext45:
 14014                           	opt stack 0
 14015  015626                     __write_value_to_offset:
 14016                           	opt stack 16
 14017                           
 14018                           ;fat16.c: 126: buffer[offset] = (uint8_t) (value & 0xFF);
 14019                           
 14020                           ; BSR set to: 0
 14021                           ;incstack = 0
 14022  015626  0100               	movlb	0	; () banked
 14023  015628  5160               	movf	__write_value_to_offset@offset& (0+255),w,b
 14024  01562A  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14025  01562C  6ED9               	movwf	fsr2l,c
 14026  01562E  5161               	movf	(__write_value_to_offset@offset+1)& (0+255),w,b
 14027  015630  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14028  015632  6EDA               	movwf	fsr2h,c
 14029  015634  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14030                           
 14031                           ; BSR set to: 0
 14032                           ;fat16.c: 127: value >>= 8;
 14033  015638  5165               	movf	(__write_value_to_offset@value+1)& (0+255),w,b
 14034  01563A  6F64               	movwf	__write_value_to_offset@value& (0+255),b
 14035  01563C  6B65               	clrf	(__write_value_to_offset@value+1)& (0+255),b
 14036                           
 14037                           ; BSR set to: 0
 14038                           ;fat16.c: 128: buffer[offset+1] = (uint8_t) (value & 0xFF);
 14039  01563E  0E01               	movlw	1
 14040  015640  2560               	addwf	__write_value_to_offset@offset& (0+255),w,b
 14041  015642  6F66               	movwf	??__write_value_to_offset& (0+255),b
 14042  015644  0E00               	movlw	0
 14043  015646  2161               	addwfc	(__write_value_to_offset@offset+1)& (0+255),w,b
 14044  015648  6F67               	movwf	(??__write_value_to_offset+1)& (0+255),b
 14045  01564A  5166               	movf	??__write_value_to_offset& (0+255),w,b
 14046  01564C  2562               	addwf	__write_value_to_offset@buffer& (0+255),w,b
 14047  01564E  6ED9               	movwf	fsr2l,c
 14048  015650  5167               	movf	(??__write_value_to_offset+1)& (0+255),w,b
 14049  015652  2163               	addwfc	(__write_value_to_offset@buffer+1)& (0+255),w,b
 14050  015654  6EDA               	movwf	fsr2h,c
 14051  015656  C064  FFDF         	movff	__write_value_to_offset@value,indf2
 14052                           
 14053                           ; BSR set to: 0
 14054  01565A  0012               	return		;funcret
 14055  01565C                     __end_of__write_value_to_offset:
 14056                           	opt stack 0
 14057                           tblptru	equ	0xFF8
 14058                           tblptrh	equ	0xFF7
 14059                           tblptrl	equ	0xFF6
 14060                           tablat	equ	0xFF5
 14061                           prodh	equ	0xFF4
 14062                           prodl	equ	0xFF3
 14063                           postinc0	equ	0xFEE
 14064                           wreg	equ	0xFE8
 14065                           postdec1	equ	0xFE5
 14066                           plusw1	equ	0xFE3
 14067                           fsr1h	equ	0xFE2
 14068                           fsr1l	equ	0xFE1
 14069                           indf2	equ	0xFDF
 14070                           postinc2	equ	0xFDE
 14071                           plusw2	equ	0xFDB
 14072                           fsr2h	equ	0xFDA
 14073                           fsr2l	equ	0xFD9
 14074                           status	equ	0xFD8
 14075                           
 14076 ;; *************** function __get_available_cluster *****************
 14077 ;; Defined at:
 14078 ;;		line 131 in file "fat16.c"
 14079 ;; Parameters:    Size  Location     Type
 14080 ;;  first_sector    2   43[BANK0 ] unsigned int 
 14081 ;;  skip_sector     2   45[BANK0 ] unsigned int 
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;  sector          2   51[BANK0 ] unsigned int 
 14084 ;;  offset          2   49[BANK0 ] unsigned int 
 14085 ;;  cluster         2   47[BANK0 ] unsigned int 
 14086 ;; Return value:  Size  Location     Type
 14087 ;;                  2   43[BANK0 ] unsigned int 
 14088 ;; Registers used:
 14089 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14090 ;; Tracked objects:
 14091 ;;		On entry : 0/0
 14092 ;;		On exit  : 0/0
 14093 ;;		Unchanged: 0/0
 14094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14095 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14096 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14098 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14099 ;;Total ram usage:       10 bytes
 14100 ;; Hardware stack levels used:    1
 14101 ;; Hardware stack levels required when called:   15
 14102 ;; This function calls:
 14103 ;;		__cluster_from_sector_and_offset
 14104 ;;		__get_available_offset_from_buffer
 14105 ;;		_flash_sector_read
 14106 ;; This function is called by:
 14107 ;;		__make_cluster_chain
 14108 ;; This function uses a non-reentrant model
 14109 ;;
 14110                           
 14111                           	psect	text46
 14112  0129F0                     __ptext46:
 14113                           	opt stack 0
 14114  0129F0                     __get_available_cluster:
 14115                           	opt stack 11
 14116                           
 14117                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t sector;;fat16.c: 135: uint16_t o
      +                          ffset;;fat16.c: 138: for (sector=first_sector; sector<=33; ++sector)
 14118                           
 14119                           ; BSR set to: 0
 14120                           ;incstack = 0
 14121  0129F0  C08B  F093         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 14122  0129F4  C08C  F094         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 14123  0129F8  0100               	movlb	0	; () banked
 14124  0129FA  5194               	movf	(__get_available_cluster@sector+1)& (0+255),w,b
 14125  0129FC  E15B               	bnz	l13960
 14126  0129FE  0E22               	movlw	34
 14127  012A00  5D93               	subwf	__get_available_cluster@sector& (0+255),w,b
 14128  012A02  B0D8               	btfsc	status,0,c
 14129  012A04  D057               	goto	u12610
 14130                           
 14131                           ; BSR set to: 0
 14132                           ;fat16.c: 139: {;fat16.c: 141: if(sector == skip_sector)
 14133                           
 14134                           ; BSR set to: 0
 14135                           
 14136                           ; BSR set to: 0
 14137  012A06  518D               	movf	__get_available_cluster@skip_sector& (0+255),w,b
 14138  012A08  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14139  012A0A  E104               	bnz	l13936
 14140  012A0C  518E               	movf	(__get_available_cluster@skip_sector+1)& (0+255),w,b
 14141  012A0E  1994               	xorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14142  012A10  B4D8               	btfsc	status,2,c
 14143  012A12  D04D               	goto	l1776
 14144  012A14                     l13936:
 14145                           
 14146                           ; BSR set to: 0
 14147                           ;fat16.c: 144: };fat16.c: 147: flash_sector_read(sector, buffer);
 14148  012A14  C093  F087         	movff	__get_available_cluster@sector,flash_sector_read@page
 14149  012A18  C094  F088         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 14150  012A1C  0E00               	movlw	low _buffer
 14151  012A1E  6F89               	movwf	flash_sector_read@data& (0+255),b
 14152  012A20  0E0A               	movlw	high _buffer
 14153  012A22  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 14154  012A24  EC12  F0AD         	call	_flash_sector_read	;wreg free
 14155                           
 14156                           ;fat16.c: 150: if(sector == 2)
 14157  012A28  0E02               	movlw	2
 14158  012A2A  0100               	movlb	0	; () banked
 14159  012A2C  1993               	xorwf	__get_available_cluster@sector& (0+255),w,b
 14160  012A2E  1194               	iorwf	(__get_available_cluster@sector+1)& (0+255),w,b
 14161  012A30  A4D8               	btfss	status,2,c
 14162  012A32  D00B               	goto	l1771
 14163                           
 14164                           ; BSR set to: 0
 14165                           ;fat16.c: 151: {;fat16.c: 153: offset = _get_available_offset_from_buffer(4, buffer);
 14166  012A34  0E00               	movlw	0
 14167  012A36  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14168  012A38  0E04               	movlw	4
 14169  012A3A  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14170  012A3C  0E00               	movlw	low _buffer
 14171  012A3E  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14172  012A40  0E0A               	movlw	high _buffer
 14173  012A42  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14174  012A44  EC52  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 14175  012A48  D00B               	goto	L1
 14176  012A4A                     l1771:
 14177                           
 14178                           ;fat16.c: 155: else;fat16.c: 156: {;fat16.c: 157: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 14179  012A4A  0E00               	movlw	0
 14180  012A4C  0100               	movlb	0	; () banked
 14181  012A4E  6F61               	movwf	(__get_available_offset_from_buffer@minimum_offset+1)& (0+255),b
 14182  012A50  0E00               	movlw	0
 14183  012A52  6F60               	movwf	__get_available_offset_from_buffer@minimum_offset& (0+255),b
 14184  012A54  0E00               	movlw	low _buffer
 14185  012A56  6F62               	movwf	__get_available_offset_from_buffer@buffer& (0+255),b
 14186  012A58  0E0A               	movlw	high _buffer
 14187  012A5A  6F63               	movwf	(__get_available_offset_from_buffer@buffer+1)& (0+255),b
 14188  012A5C  EC52  F0A4         	call	__get_available_offset_from_buffer	;wreg free
 14189  012A60                     L1:
 14190  012A60  C060  F091         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 14191  012A64  C061  F092         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 14192                           
 14193                           ;fat16.c: 158: };fat16.c: 161: if(offset != 0xFFFF)
 14194  012A68  0100               	movlb	0	; () banked
 14195  012A6A  2991               	incf	__get_available_cluster@offset& (0+255),w,b
 14196  012A6C  E103               	bnz	u12590
 14197  012A6E  2992               	incf	(__get_available_cluster@offset+1)& (0+255),w,b
 14198  012A70  B4D8               	btfsc	status,2,c
 14199  012A72  D01D               	goto	l1776
 14200  012A74                     u12590:
 14201                           
 14202                           ; BSR set to: 0
 14203                           ;fat16.c: 162: {;fat16.c: 164: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 14204  012A74  C093  F060         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 14205  012A78  C094  F061         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 14206  012A7C  C091  F062         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 14207  012A80  C092  F063         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 14208  012A84  ECEA  F0AC         	call	__cluster_from_sector_and_offset	;wreg free
 14209  012A88  C060  F08F         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 14210  012A8C  C061  F090         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 14211                           
 14212                           ;fat16.c: 166: if(cluster > 8191)
 14213  012A90  0E20               	movlw	32
 14214  012A92  0100               	movlb	0	; () banked
 14215  012A94  5D90               	subwf	(__get_available_cluster@cluster+1)& (0+255),w,b
 14216  012A96  A0D8               	btfss	status,0,c
 14217  012A98  D005               	goto	l1774
 14218                           
 14219                           ; BSR set to: 0
 14220                           ;fat16.c: 167: {;fat16.c: 169: return 0x0000;
 14221  012A9A  0E00               	movlw	0
 14222  012A9C  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14223  012A9E  0E00               	movlw	0
 14224  012AA0  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14225                           
 14226                           ; BSR set to: 0
 14227  012AA2  0012               	return	
 14228  012AA4                     l1774:
 14229                           
 14230                           ; BSR set to: 0
 14231                           ;fat16.c: 171: else;fat16.c: 172: {;fat16.c: 174: return cluster;
 14232  012AA4  C08F  F08B         	movff	__get_available_cluster@cluster,?__get_available_cluster
 14233  012AA8  C090  F08C         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 14234  012AAC  0012               	return	
 14235  012AAE                     l1776:
 14236                           
 14237                           ; BSR set to: 0
 14238                           
 14239                           ; BSR set to: 0
 14240                           
 14241                           ; BSR set to: 0
 14242                           
 14243                           ; BSR set to: 0
 14244  012AAE  4B93               	infsnz	__get_available_cluster@sector& (0+255),f,b
 14245  012AB0  2B94               	incf	(__get_available_cluster@sector+1)& (0+255),f,b
 14246  012AB2  D7A3               	goto	L2
 14247  012AB4                     u12610:
 14248  012AB4                     l13960:
 14249                           
 14250                           ; BSR set to: 0
 14251                           ;fat16.c: 175: };fat16.c: 176: };fat16.c: 177: };fat16.c: 180: return 0x0000;
 14252  012AB4  0E00               	movlw	0
 14253  012AB6  6F8C               	movwf	(?__get_available_cluster+1)& (0+255),b
 14254  012AB8  0E00               	movlw	0
 14255  012ABA  6F8B               	movwf	?__get_available_cluster& (0+255),b
 14256  012ABC  0012               	return	
 14257  012ABE                     __end_of__get_available_cluster:
 14258                           	opt stack 0
 14259                           tblptru	equ	0xFF8
 14260                           tblptrh	equ	0xFF7
 14261                           tblptrl	equ	0xFF6
 14262                           tablat	equ	0xFF5
 14263                           prodh	equ	0xFF4
 14264                           prodl	equ	0xFF3
 14265                           postinc0	equ	0xFEE
 14266                           wreg	equ	0xFE8
 14267                           postdec1	equ	0xFE5
 14268                           plusw1	equ	0xFE3
 14269                           fsr1h	equ	0xFE2
 14270                           fsr1l	equ	0xFE1
 14271                           indf2	equ	0xFDF
 14272                           postinc2	equ	0xFDE
 14273                           plusw2	equ	0xFDB
 14274                           fsr2h	equ	0xFDA
 14275                           fsr2l	equ	0xFD9
 14276                           status	equ	0xFD8
 14277                           
 14278 ;; *************** function __get_available_offset_from_buffer *****************
 14279 ;; Defined at:
 14280 ;;		line 99 in file "fat16.c"
 14281 ;; Parameters:    Size  Location     Type
 14282 ;;  minimum_offs    2    0[BANK0 ] unsigned int 
 14283 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 14284 ;;		 -> buffer(512), 
 14285 ;; Auto vars:     Size  Location     Type
 14286 ;;  offset          2    6[BANK0 ] unsigned int 
 14287 ;; Return value:  Size  Location     Type
 14288 ;;                  2    0[BANK0 ] unsigned int 
 14289 ;; Registers used:
 14290 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14291 ;; Tracked objects:
 14292 ;;		On entry : 0/0
 14293 ;;		On exit  : 0/0
 14294 ;;		Unchanged: 0/0
 14295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14296 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14297 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14298 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14299 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14300 ;;Total ram usage:        8 bytes
 14301 ;; Hardware stack levels used:    1
 14302 ;; Hardware stack levels required when called:   10
 14303 ;; This function calls:
 14304 ;;		Nothing
 14305 ;; This function is called by:
 14306 ;;		__get_available_cluster
 14307 ;;		__make_cluster_chain
 14308 ;; This function uses a non-reentrant model
 14309 ;;
 14310                           
 14311                           	psect	text47
 14312  0148A4                     __ptext47:
 14313                           	opt stack 0
 14314  0148A4                     __get_available_offset_from_buffer:
 14315                           	opt stack 16
 14316                           
 14317                           ;fat16.c: 101: uint16_t offset;;fat16.c: 103: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 14318                           
 14319                           ; BSR set to: 0
 14320                           ;incstack = 0
 14321  0148A4  C060  F066         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 14322  0148A8  C061  F067         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 14323  0148AC  0E02               	movlw	2
 14324  0148AE  0100               	movlb	0	; () banked
 14325  0148B0  D022               	goto	L3
 14326  0148B2                     
 14327                           ; BSR set to: 0
 14328                           ;fat16.c: 104: {;fat16.c: 105: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 14329                           
 14330                           ; BSR set to: 0
 14331  0148B2  5166               	movf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14332  0148B4  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14333  0148B6  6ED9               	movwf	fsr2l,c
 14334  0148B8  5167               	movf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14335  0148BA  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14336  0148BC  6EDA               	movwf	fsr2h,c
 14337  0148BE  50DF               	movf	indf2,w,c
 14338  0148C0  A4D8               	btfss	status,2,c
 14339  0148C2  D014               	goto	l1757
 14340                           
 14341                           ; BSR set to: 0
 14342  0148C4  0E01               	movlw	1
 14343  0148C6  2566               	addwf	__get_available_offset_from_buffer@offset& (0+255),w,b
 14344  0148C8  6F64               	movwf	??__get_available_offset_from_buffer& (0+255),b
 14345  0148CA  0E00               	movlw	0
 14346  0148CC  2167               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14347  0148CE  6F65               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),b
 14348  0148D0  5164               	movf	??__get_available_offset_from_buffer& (0+255),w,b
 14349  0148D2  2562               	addwf	__get_available_offset_from_buffer@buffer& (0+255),w,b
 14350  0148D4  6ED9               	movwf	fsr2l,c
 14351  0148D6  5165               	movf	(??__get_available_offset_from_buffer+1)& (0+255),w,b
 14352  0148D8  2163               	addwfc	(__get_available_offset_from_buffer@buffer+1)& (0+255),w,b
 14353  0148DA  6EDA               	movwf	fsr2h,c
 14354  0148DC  50DF               	movf	indf2,w,c
 14355  0148DE  A4D8               	btfss	status,2,c
 14356  0148E0  D005               	goto	l1757
 14357                           
 14358                           ; BSR set to: 0
 14359                           ;fat16.c: 106: {;fat16.c: 107: return offset;
 14360  0148E2  C066  F060         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 14361  0148E6  C067  F061         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 14362  0148EA  0012               	return	
 14363  0148EC                     l1757:
 14364                           
 14365                           ; BSR set to: 0
 14366                           
 14367                           ; BSR set to: 0
 14368  0148EC  0E02               	movlw	2
 14369  0148EE  2766               	addwf	__get_available_offset_from_buffer@offset& (0+255),f,b
 14370  0148F0  0E00               	movlw	0
 14371  0148F2  2367               	addwfc	(__get_available_offset_from_buffer@offset+1)& (0+255),f,b
 14372  0148F4  0E02               	movlw	2
 14373  0148F6                     L3:
 14374  0148F6  5D67               	subwf	(__get_available_offset_from_buffer@offset+1)& (0+255),w,b
 14375  0148F8  A0D8               	btfss	status,0,c
 14376  0148FA  D7DB               	goto	l1755
 14377                           
 14378                           ; BSR set to: 0
 14379                           ;fat16.c: 108: };fat16.c: 109: };fat16.c: 112: return 0xFFFF;
 14380  0148FC  6960               	setf	?__get_available_offset_from_buffer& (0+255),b
 14381  0148FE  6961               	setf	(?__get_available_offset_from_buffer+1)& (0+255),b
 14382                           
 14383                           ; BSR set to: 0
 14384  014900  0012               	return		;funcret
 14385  014902                     __end_of__get_available_offset_from_buffer:
 14386                           	opt stack 0
 14387                           tblptru	equ	0xFF8
 14388                           tblptrh	equ	0xFF7
 14389                           tblptrl	equ	0xFF6
 14390                           tablat	equ	0xFF5
 14391                           prodh	equ	0xFF4
 14392                           prodl	equ	0xFF3
 14393                           postinc0	equ	0xFEE
 14394                           wreg	equ	0xFE8
 14395                           postdec1	equ	0xFE5
 14396                           plusw1	equ	0xFE3
 14397                           fsr1h	equ	0xFE2
 14398                           fsr1l	equ	0xFE1
 14399                           indf2	equ	0xFDF
 14400                           postinc2	equ	0xFDE
 14401                           plusw2	equ	0xFDB
 14402                           fsr2h	equ	0xFDA
 14403                           fsr2l	equ	0xFD9
 14404                           status	equ	0xFD8
 14405                           
 14406 ;; *************** function __cluster_from_sector_and_offset *****************
 14407 ;; Defined at:
 14408 ;;		line 90 in file "fat16.c"
 14409 ;; Parameters:    Size  Location     Type
 14410 ;;  sector          2    0[BANK0 ] unsigned int 
 14411 ;;  offset          2    2[BANK0 ] unsigned int 
 14412 ;; Auto vars:     Size  Location     Type
 14413 ;;		None
 14414 ;; Return value:  Size  Location     Type
 14415 ;;                  2    0[BANK0 ] unsigned int 
 14416 ;; Registers used:
 14417 ;;		wreg, status,2, status,0
 14418 ;; Tracked objects:
 14419 ;;		On entry : 0/0
 14420 ;;		On exit  : 0/0
 14421 ;;		Unchanged: 0/0
 14422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14423 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14424 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14425 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14426 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14427 ;;Total ram usage:        4 bytes
 14428 ;; Hardware stack levels used:    1
 14429 ;; Hardware stack levels required when called:   10
 14430 ;; This function calls:
 14431 ;;		Nothing
 14432 ;; This function is called by:
 14433 ;;		__get_available_cluster
 14434 ;; This function uses a non-reentrant model
 14435 ;;
 14436                           
 14437                           	psect	text48
 14438  0159D4                     __ptext48:
 14439                           	opt stack 0
 14440  0159D4                     __cluster_from_sector_and_offset:
 14441                           	opt stack 15
 14442                           
 14443                           ;fat16.c: 92: offset >>= 1;
 14444                           
 14445                           ; BSR set to: 0
 14446                           ;incstack = 0
 14447  0159D4  0100               	movlb	0	; () banked
 14448  0159D6  90D8               	bcf	status,0,c
 14449  0159D8  3363               	rrcf	(__cluster_from_sector_and_offset@offset+1)& (0+255),f,b
 14450  0159DA  3362               	rrcf	__cluster_from_sector_and_offset@offset& (0+255),f,b
 14451                           
 14452                           ; BSR set to: 0
 14453                           ;fat16.c: 93: sector -= 2;
 14454  0159DC  0E02               	movlw	2
 14455  0159DE  5F60               	subwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14456  0159E0  0E00               	movlw	0
 14457  0159E2  5B61               	subwfb	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14458                           
 14459                           ; BSR set to: 0
 14460                           ;fat16.c: 94: sector <<= 8;
 14461  0159E4  5160               	movf	__cluster_from_sector_and_offset@sector& (0+255),w,b
 14462  0159E6  6F61               	movwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),b
 14463  0159E8  6B60               	clrf	__cluster_from_sector_and_offset@sector& (0+255),b
 14464                           
 14465                           ; BSR set to: 0
 14466                           ;fat16.c: 95: sector |= offset;
 14467  0159EA  5162               	movf	__cluster_from_sector_and_offset@offset& (0+255),w,b
 14468  0159EC  1360               	iorwf	__cluster_from_sector_and_offset@sector& (0+255),f,b
 14469  0159EE  5163               	movf	(__cluster_from_sector_and_offset@offset+1)& (0+255),w,b
 14470  0159F0  1361               	iorwf	(__cluster_from_sector_and_offset@sector+1)& (0+255),f,b
 14471                           
 14472                           ; BSR set to: 0
 14473                           ;fat16.c: 96: return sector;
 14474  0159F2  C060  F060         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 14475  0159F6  C061  F061         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 14476  0159FA  0012               	return	
 14477  0159FC                     __end_of__cluster_from_sector_and_offset:
 14478                           	opt stack 0
 14479                           tblptru	equ	0xFF8
 14480                           tblptrh	equ	0xFF7
 14481                           tblptrl	equ	0xFF6
 14482                           tablat	equ	0xFF5
 14483                           prodh	equ	0xFF4
 14484                           prodl	equ	0xFF3
 14485                           postinc0	equ	0xFEE
 14486                           wreg	equ	0xFE8
 14487                           postdec1	equ	0xFE5
 14488                           plusw1	equ	0xFE3
 14489                           fsr1h	equ	0xFE2
 14490                           fsr1l	equ	0xFE1
 14491                           indf2	equ	0xFDF
 14492                           postinc2	equ	0xFDE
 14493                           plusw2	equ	0xFDB
 14494                           fsr2h	equ	0xFDA
 14495                           fsr2l	equ	0xFD9
 14496                           status	equ	0xFD8
 14497                           
 14498 ;; *************** function __get_time *****************
 14499 ;; Defined at:
 14500 ;;		line 377 in file "fat16.c"
 14501 ;; Parameters:    Size  Location     Type
 14502 ;;		None
 14503 ;; Auto vars:     Size  Location     Type
 14504 ;;		None
 14505 ;; Return value:  Size  Location     Type
 14506 ;;                  2    0[BANK0 ] unsigned int 
 14507 ;; Registers used:
 14508 ;;		wreg, status,2
 14509 ;; Tracked objects:
 14510 ;;		On entry : 0/0
 14511 ;;		On exit  : 0/0
 14512 ;;		Unchanged: 0/0
 14513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14514 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14517 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14518 ;;Total ram usage:        2 bytes
 14519 ;; Hardware stack levels used:    1
 14520 ;; Hardware stack levels required when called:   10
 14521 ;; This function calls:
 14522 ;;		Nothing
 14523 ;; This function is called by:
 14524 ;;		_fat_create_file
 14525 ;; This function uses a non-reentrant model
 14526 ;;
 14527                           
 14528                           	psect	text49
 14529  015D16                     __ptext49:
 14530                           	opt stack 0
 14531  015D16                     __get_time:
 14532                           	opt stack 17
 14533                           
 14534                           ;fat16.c: 389: return 0x0000;
 14535                           
 14536                           ; BSR set to: 0
 14537                           ;incstack = 0
 14538  015D16  0E00               	movlw	0
 14539  015D18  0100               	movlb	0	; () banked
 14540  015D1A  6F61               	movwf	(?__get_time+1)& (0+255),b
 14541  015D1C  0E00               	movlw	0
 14542  015D1E  6F60               	movwf	?__get_time& (0+255),b
 14543  015D20  0012               	return	
 14544  015D22                     __end_of__get_time:
 14545                           	opt stack 0
 14546                           tblptru	equ	0xFF8
 14547                           tblptrh	equ	0xFF7
 14548                           tblptrl	equ	0xFF6
 14549                           tablat	equ	0xFF5
 14550                           prodh	equ	0xFF4
 14551                           prodl	equ	0xFF3
 14552                           postinc0	equ	0xFEE
 14553                           wreg	equ	0xFE8
 14554                           postdec1	equ	0xFE5
 14555                           plusw1	equ	0xFE3
 14556                           fsr1h	equ	0xFE2
 14557                           fsr1l	equ	0xFE1
 14558                           indf2	equ	0xFDF
 14559                           postinc2	equ	0xFDE
 14560                           plusw2	equ	0xFDB
 14561                           fsr2h	equ	0xFDA
 14562                           fsr2l	equ	0xFD9
 14563                           status	equ	0xFD8
 14564                           
 14565 ;; *************** function __get_date *****************
 14566 ;; Defined at:
 14567 ;;		line 393 in file "fat16.c"
 14568 ;; Parameters:    Size  Location     Type
 14569 ;;		None
 14570 ;; Auto vars:     Size  Location     Type
 14571 ;;		None
 14572 ;; Return value:  Size  Location     Type
 14573 ;;                  2    0[BANK0 ] unsigned int 
 14574 ;; Registers used:
 14575 ;;		wreg, status,2
 14576 ;; Tracked objects:
 14577 ;;		On entry : 0/0
 14578 ;;		On exit  : 0/0
 14579 ;;		Unchanged: 0/0
 14580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14581 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14582 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14583 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14584 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14585 ;;Total ram usage:        2 bytes
 14586 ;; Hardware stack levels used:    1
 14587 ;; Hardware stack levels required when called:   10
 14588 ;; This function calls:
 14589 ;;		Nothing
 14590 ;; This function is called by:
 14591 ;;		_fat_create_file
 14592 ;; This function uses a non-reentrant model
 14593 ;;
 14594                           
 14595                           	psect	text50
 14596  015D22                     __ptext50:
 14597                           	opt stack 0
 14598  015D22                     __get_date:
 14599                           	opt stack 17
 14600                           
 14601                           ;fat16.c: 405: return 0x0000;
 14602                           
 14603                           ; BSR set to: 0
 14604                           ;incstack = 0
 14605  015D22  0E00               	movlw	0
 14606  015D24  0100               	movlb	0	; () banked
 14607  015D26  6F61               	movwf	(?__get_date+1)& (0+255),b
 14608  015D28  0E00               	movlw	0
 14609  015D2A  6F60               	movwf	?__get_date& (0+255),b
 14610  015D2C  0012               	return	
 14611  015D2E                     __end_of__get_date:
 14612                           	opt stack 0
 14613                           tblptru	equ	0xFF8
 14614                           tblptrh	equ	0xFF7
 14615                           tblptrl	equ	0xFF6
 14616                           tablat	equ	0xFF5
 14617                           prodh	equ	0xFF4
 14618                           prodl	equ	0xFF3
 14619                           postinc0	equ	0xFEE
 14620                           wreg	equ	0xFE8
 14621                           postdec1	equ	0xFE5
 14622                           plusw1	equ	0xFE3
 14623                           fsr1h	equ	0xFE2
 14624                           fsr1l	equ	0xFE1
 14625                           indf2	equ	0xFDF
 14626                           postinc2	equ	0xFDE
 14627                           plusw2	equ	0xFDB
 14628                           fsr2h	equ	0xFDA
 14629                           fsr2l	equ	0xFD9
 14630                           status	equ	0xFD8
 14631                           
 14632 ;; *************** function __get_available_root_entry *****************
 14633 ;; Defined at:
 14634 ;;		line 443 in file "fat16.c"
 14635 ;; Parameters:    Size  Location     Type
 14636 ;;		None
 14637 ;; Auto vars:     Size  Location     Type
 14638 ;;  file_number     1   53[BANK0 ] unsigned char 
 14639 ;; Return value:  Size  Location     Type
 14640 ;;                  1    wreg      unsigned char 
 14641 ;; Registers used:
 14642 ;;		wreg, status,2, status,0, cstack
 14643 ;; Tracked objects:
 14644 ;;		On entry : 0/0
 14645 ;;		On exit  : 0/0
 14646 ;;		Unchanged: 0/0
 14647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14649 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14651 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14652 ;;Total ram usage:        1 bytes
 14653 ;; Hardware stack levels used:    1
 14654 ;; Hardware stack levels required when called:   16
 14655 ;; This function calls:
 14656 ;;		__root_is_available
 14657 ;; This function is called by:
 14658 ;;		_fat_create_file
 14659 ;; This function uses a non-reentrant model
 14660 ;;
 14661                           
 14662                           	psect	text51
 14663  015958                     __ptext51:
 14664                           	opt stack 0
 14665  015958                     __get_available_root_entry:
 14666                           	opt stack 11
 14667                           
 14668                           ;fat16.c: 445: uint8_t file_number;;fat16.c: 447: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;incstack = 0
 14672  015958  0E00               	movlw	0
 14673  01595A  0100               	movlb	0	; () banked
 14674  01595C  6F95               	movwf	__get_available_root_entry@file_number& (0+255),b
 14675  01595E                     l14948:
 14676                           
 14677                           ; BSR set to: 0
 14678  01595E  0E3F               	movlw	63
 14679  015960  6595               	cpfsgt	__get_available_root_entry@file_number& (0+255),b
 14680  015962  D001               	goto	l1828
 14681  015964  D00C               	goto	u14030
 14682  015966                     l1828:
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;fat16.c: 448: {;fat16.c: 449: if(_root_is_available(file_number))
 14686                           
 14687                           ; BSR set to: 0
 14688  015966  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14689  015968  EC8E  F0A2         	call	__root_is_available
 14690  01596C  0900               	iorlw	0
 14691  01596E  B4D8               	btfsc	status,2,c
 14692  015970  D003               	goto	l1830
 14693                           
 14694                           ;fat16.c: 450: {;fat16.c: 451: return file_number;
 14695  015972  0100               	movlb	0	; () banked
 14696  015974  5195               	movf	__get_available_root_entry@file_number& (0+255),w,b
 14697                           
 14698                           ; BSR set to: 0
 14699  015976  0012               	return	
 14700  015978                     l1830:
 14701                           
 14702                           ; BSR set to: 0
 14703  015978  0100               	movlb	0	; () banked
 14704  01597A  2B95               	incf	__get_available_root_entry@file_number& (0+255),f,b
 14705  01597C  D7F0               	goto	l14948
 14706  01597E                     u14030:
 14707                           
 14708                           ; BSR set to: 0
 14709                           ;fat16.c: 452: };fat16.c: 453: };fat16.c: 454: return 0xFF;
 14710                           
 14711                           ; BSR set to: 0
 14712  01597E  0EFF               	movlw	255
 14713  015980  0012               	return	
 14714  015982                     __end_of__get_available_root_entry:
 14715                           	opt stack 0
 14716                           tblptru	equ	0xFF8
 14717                           tblptrh	equ	0xFF7
 14718                           tblptrl	equ	0xFF6
 14719                           tablat	equ	0xFF5
 14720                           prodh	equ	0xFF4
 14721                           prodl	equ	0xFF3
 14722                           postinc0	equ	0xFEE
 14723                           wreg	equ	0xFE8
 14724                           postdec1	equ	0xFE5
 14725                           plusw1	equ	0xFE3
 14726                           fsr1h	equ	0xFE2
 14727                           fsr1l	equ	0xFE1
 14728                           indf2	equ	0xFDF
 14729                           postinc2	equ	0xFDE
 14730                           plusw2	equ	0xFDB
 14731                           fsr2h	equ	0xFDA
 14732                           fsr2l	equ	0xFD9
 14733                           status	equ	0xFD8
 14734                           
 14735 ;; *************** function __add_item *****************
 14736 ;; Defined at:
 14737 ;;		line 41 in file "config_file.c"
 14738 ;; Parameters:    Size  Location     Type
 14739 ;;  item_string     2   36[BANK0 ] PTR unsigned char 
 14740 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 14741 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 14742 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 14743 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 14744 ;;  value           4   38[BANK0 ] long 
 14745 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 14746 ;;		 -> ConfigFile_buffer(512), 
 14747 ;; Auto vars:     Size  Location     Type
 14748 ;;  length          1   46[BANK0 ] unsigned char 
 14749 ;; Return value:  Size  Location     Type
 14750 ;;                  1    wreg      unsigned char 
 14751 ;; Registers used:
 14752 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14753 ;; Tracked objects:
 14754 ;;		On entry : 0/0
 14755 ;;		On exit  : 0/0
 14756 ;;		Unchanged: 0/0
 14757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14758 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14759 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14760 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14761 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14762 ;;Total ram usage:       11 bytes
 14763 ;; Hardware stack levels used:    1
 14764 ;; Hardware stack levels required when called:   13
 14765 ;; This function calls:
 14766 ;;		_ltoa
 14767 ;; This function is called by:
 14768 ;;		_configFile_write
 14769 ;; This function uses a non-reentrant model
 14770 ;;
 14771                           
 14772                           	psect	text52
 14773  01191C                     __ptext52:
 14774                           	opt stack 0
 14775  01191C                     __add_item:
 14776                           	opt stack 15
 14777                           
 14778                           ;config_file.c: 43: uint8_t length = 0;
 14779                           
 14780                           ; BSR set to: 0
 14781                           ;incstack = 0
 14782  01191C  0E00               	movlw	0
 14783  01191E  0100               	movlb	0	; () banked
 14784  011920  6F8E               	movwf	__add_item@length& (0+255),b
 14785                           
 14786                           ;config_file.c: 46: while(item_string[length])
 14787  011922  D01C               	goto	l3015
 14788  011924                     
 14789                           ; BSR set to: 0
 14790                           ;config_file.c: 47: {;config_file.c: 48: buffer[length] = item_string[length];
 14791                           
 14792                           ; BSR set to: 0
 14793  011924  518E               	movf	__add_item@length& (0+255),w,b
 14794  011926  0D01               	mullw	1
 14795  011928  C084  F08C         	movff	__add_item@item_string,??__add_item
 14796  01192C  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14797  011930  50F3               	movf	prodl,w,c
 14798  011932  278C               	addwf	??__add_item& (0+255),f,b
 14799  011934  50F4               	movf	prodh,w,c
 14800  011936  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14801  011938  C08C  FFF6         	movff	??__add_item,tblptrl
 14802  01193C  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14803  011940                     	if	0	;tblptru may be non-zero
 14804  011940                     	endif
 14805  011940                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14806  011940  0E00               	movlw	low (__mediumconst shr (0+16))
 14807  011942  6EF8               	movwf	tblptru,c
 14808  011944                     	endif
 14809  011944  518E               	movf	__add_item@length& (0+255),w,b
 14810  011946  0D01               	mullw	1
 14811  011948  50F3               	movf	prodl,w,c
 14812  01194A  258A               	addwf	__add_item@buffer& (0+255),w,b
 14813  01194C  6ED9               	movwf	fsr2l,c
 14814  01194E  50F4               	movf	prodh,w,c
 14815  011950  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14816  011952  6EDA               	movwf	fsr2h,c
 14817  011954  0008               	tblrd		*
 14818  011956  CFF5 FFDF          	movff	tablat,indf2
 14819                           
 14820                           ; BSR set to: 0
 14821                           ;config_file.c: 49: ++length;
 14822  01195A  2B8E               	incf	__add_item@length& (0+255),f,b
 14823  01195C                     l3015:
 14824                           
 14825                           ; BSR set to: 0
 14826                           
 14827                           ; BSR set to: 0
 14828  01195C  518E               	movf	__add_item@length& (0+255),w,b
 14829  01195E  0D01               	mullw	1
 14830  011960  C084  F08C         	movff	__add_item@item_string,??__add_item
 14831  011964  C085  F08D         	movff	__add_item@item_string+1,??__add_item+1
 14832  011968  50F3               	movf	prodl,w,c
 14833  01196A  278C               	addwf	??__add_item& (0+255),f,b
 14834  01196C  50F4               	movf	prodh,w,c
 14835  01196E  238D               	addwfc	(??__add_item+1)& (0+255),f,b
 14836  011970  C08C  FFF6         	movff	??__add_item,tblptrl
 14837  011974  C08D  FFF7         	movff	??__add_item+1,tblptrh
 14838  011978                     	if	0	;tblptru may be non-zero
 14839  011978                     	endif
 14840  011978                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 14841  011978  0E00               	movlw	low (__mediumconst shr (0+16))
 14842  01197A  6EF8               	movwf	tblptru,c
 14843  01197C                     	endif
 14844  01197C  0008               	tblrd		*
 14845  01197E  50F5               	movf	tablat,w,c
 14846  011980  0900               	iorlw	0
 14847  011982  A4D8               	btfss	status,2,c
 14848  011984  D7CF               	goto	l3016
 14849                           
 14850                           ; BSR set to: 0
 14851                           ;config_file.c: 50: };config_file.c: 53: buffer[length++] = '=';
 14852                           
 14853                           ; BSR set to: 0
 14854  011986  518E               	movf	__add_item@length& (0+255),w,b
 14855  011988  0D01               	mullw	1
 14856  01198A  50F3               	movf	prodl,w,c
 14857  01198C  258A               	addwf	__add_item@buffer& (0+255),w,b
 14858  01198E  6ED9               	movwf	fsr2l,c
 14859  011990  50F4               	movf	prodh,w,c
 14860  011992  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14861  011994  6EDA               	movwf	fsr2h,c
 14862  011996  0E3D               	movlw	61
 14863  011998  6EDF               	movwf	indf2,c
 14864                           
 14865                           ; BSR set to: 0
 14866  01199A  2B8E               	incf	__add_item@length& (0+255),f,b
 14867                           
 14868                           ; BSR set to: 0
 14869                           ;config_file.c: 56: ltoa(&buffer[length], value, 10);
 14870  01199C  518E               	movf	__add_item@length& (0+255),w,b
 14871  01199E  0D01               	mullw	1
 14872  0119A0  50F3               	movf	prodl,w,c
 14873  0119A2  258A               	addwf	__add_item@buffer& (0+255),w,b
 14874  0119A4  6F7A               	movwf	ltoa@buf& (0+255),b
 14875  0119A6  50F4               	movf	prodh,w,c
 14876  0119A8  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14877  0119AA  6F7B               	movwf	(ltoa@buf+1)& (0+255),b
 14878  0119AC  C086  F07C         	movff	__add_item@value,ltoa@val
 14879  0119B0  C087  F07D         	movff	__add_item@value+1,ltoa@val+1
 14880  0119B4  C088  F07E         	movff	__add_item@value+2,ltoa@val+2
 14881  0119B8  C089  F07F         	movff	__add_item@value+3,ltoa@val+3
 14882  0119BC  0E00               	movlw	0
 14883  0119BE  6F81               	movwf	(ltoa@base+1)& (0+255),b
 14884  0119C0  0E0A               	movlw	10
 14885  0119C2  6F80               	movwf	ltoa@base& (0+255),b
 14886  0119C4  ECEC  F0A6         	call	_ltoa	;wreg free
 14887                           
 14888                           ;config_file.c: 57: while(buffer[length])
 14889  0119C8  D002               	goto	l3018
 14890  0119CA                     
 14891                           ;config_file.c: 58: {;config_file.c: 59: ++length;
 14892  0119CA  0100               	movlb	0	; () banked
 14893  0119CC  2B8E               	incf	__add_item@length& (0+255),f,b
 14894  0119CE                     l3018:
 14895                           
 14896                           ; BSR set to: 0
 14897  0119CE  0100               	movlb	0	; () banked
 14898  0119D0  518E               	movf	__add_item@length& (0+255),w,b
 14899  0119D2  0D01               	mullw	1
 14900  0119D4  50F3               	movf	prodl,w,c
 14901  0119D6  258A               	addwf	__add_item@buffer& (0+255),w,b
 14902  0119D8  6ED9               	movwf	fsr2l,c
 14903  0119DA  50F4               	movf	prodh,w,c
 14904  0119DC  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14905  0119DE  6EDA               	movwf	fsr2h,c
 14906  0119E0  50DF               	movf	indf2,w,c
 14907  0119E2  A4D8               	btfss	status,2,c
 14908  0119E4  D7F2               	goto	l3019
 14909                           
 14910                           ; BSR set to: 0
 14911                           ;config_file.c: 60: };config_file.c: 63: buffer[length++] = '\r';
 14912                           
 14913                           ; BSR set to: 0
 14914  0119E6  518E               	movf	__add_item@length& (0+255),w,b
 14915  0119E8  0D01               	mullw	1
 14916  0119EA  50F3               	movf	prodl,w,c
 14917  0119EC  258A               	addwf	__add_item@buffer& (0+255),w,b
 14918  0119EE  6ED9               	movwf	fsr2l,c
 14919  0119F0  50F4               	movf	prodh,w,c
 14920  0119F2  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14921  0119F4  6EDA               	movwf	fsr2h,c
 14922  0119F6  0E0D               	movlw	13
 14923  0119F8  6EDF               	movwf	indf2,c
 14924                           
 14925                           ; BSR set to: 0
 14926  0119FA  2B8E               	incf	__add_item@length& (0+255),f,b
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;config_file.c: 64: buffer[length++] = '\n';
 14930  0119FC  518E               	movf	__add_item@length& (0+255),w,b
 14931  0119FE  0D01               	mullw	1
 14932  011A00  50F3               	movf	prodl,w,c
 14933  011A02  258A               	addwf	__add_item@buffer& (0+255),w,b
 14934  011A04  6ED9               	movwf	fsr2l,c
 14935  011A06  50F4               	movf	prodh,w,c
 14936  011A08  218B               	addwfc	(__add_item@buffer+1)& (0+255),w,b
 14937  011A0A  6EDA               	movwf	fsr2h,c
 14938  011A0C  0E0A               	movlw	10
 14939  011A0E  6EDF               	movwf	indf2,c
 14940  011A10  2B8E               	incf	__add_item@length& (0+255),f,b
 14941                           
 14942                           ; BSR set to: 0
 14943                           ;config_file.c: 67: return length;
 14944  011A12  518E               	movf	__add_item@length& (0+255),w,b
 14945  011A14  0012               	return	
 14946  011A16                     __end_of__add_item:
 14947                           	opt stack 0
 14948                           tblptru	equ	0xFF8
 14949                           tblptrh	equ	0xFF7
 14950                           tblptrl	equ	0xFF6
 14951                           tablat	equ	0xFF5
 14952                           prodh	equ	0xFF4
 14953                           prodl	equ	0xFF3
 14954                           postinc0	equ	0xFEE
 14955                           wreg	equ	0xFE8
 14956                           postdec1	equ	0xFE5
 14957                           plusw1	equ	0xFE3
 14958                           fsr1h	equ	0xFE2
 14959                           fsr1l	equ	0xFE1
 14960                           indf2	equ	0xFDF
 14961                           postinc2	equ	0xFDE
 14962                           plusw2	equ	0xFDB
 14963                           fsr2h	equ	0xFDA
 14964                           fsr2l	equ	0xFD9
 14965                           status	equ	0xFD8
 14966                           
 14967 ;; *************** function _ltoa *****************
 14968 ;; Defined at:
 14969 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 14970 ;; Parameters:    Size  Location     Type
 14971 ;;  buf             2   26[BANK0 ] PTR unsigned char 
 14972 ;;		 -> ConfigFile_buffer(512), 
 14973 ;;  val             4   28[BANK0 ] long 
 14974 ;;  base            2   32[BANK0 ] int 
 14975 ;; Auto vars:     Size  Location     Type
 14976 ;;  cp              2   34[BANK0 ] PTR unsigned char 
 14977 ;;		 -> ConfigFile_buffer(512), 
 14978 ;; Return value:  Size  Location     Type
 14979 ;;                  2   26[BANK0 ] PTR unsigned char 
 14980 ;; Registers used:
 14981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14982 ;; Tracked objects:
 14983 ;;		On entry : 0/0
 14984 ;;		On exit  : 0/0
 14985 ;;		Unchanged: 0/0
 14986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14987 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14988 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14990 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14991 ;;Total ram usage:       10 bytes
 14992 ;; Hardware stack levels used:    1
 14993 ;; Hardware stack levels required when called:   12
 14994 ;; This function calls:
 14995 ;;		_ultoa
 14996 ;; This function is called by:
 14997 ;;		__add_item
 14998 ;; This function uses a non-reentrant model
 14999 ;;
 15000                           
 15001                           	psect	text53
 15002  014DD8                     __ptext53:
 15003                           	opt stack 0
 15004  014DD8                     _ltoa:
 15005                           	opt stack 15
 15006                           
 15007                           ; BSR set to: 0
 15008                           ;incstack = 0
 15009  014DD8  C07A  F082         	movff	ltoa@buf,ltoa@cp
 15010  014DDC  C07B  F083         	movff	ltoa@buf+1,ltoa@cp+1
 15011  014DE0  0100               	movlb	0	; () banked
 15012  014DE2  AF7F               	btfss	(ltoa@val+3)& (0+255),7,b
 15013  014DE4  D010               	goto	l3792
 15014                           
 15015                           ; BSR set to: 0
 15016  014DE6  C07A  FFD9         	movff	ltoa@buf,fsr2l
 15017  014DEA  C07B  FFDA         	movff	ltoa@buf+1,fsr2h
 15018  014DEE  0E2D               	movlw	45
 15019  014DF0  6EDF               	movwf	indf2,c
 15020                           
 15021                           ; BSR set to: 0
 15022  014DF2  4B7A               	infsnz	ltoa@buf& (0+255),f,b
 15023  014DF4  2B7B               	incf	(ltoa@buf+1)& (0+255),f,b
 15024                           
 15025                           ; BSR set to: 0
 15026  014DF6  1F7F               	comf	(ltoa@val+3)& (0+255),f,b
 15027  014DF8  1F7E               	comf	(ltoa@val+2)& (0+255),f,b
 15028  014DFA  1F7D               	comf	(ltoa@val+1)& (0+255),f,b
 15029  014DFC  6D7C               	negf	ltoa@val& (0+255),b
 15030  014DFE  0E00               	movlw	0
 15031  014E00  237D               	addwfc	(ltoa@val+1)& (0+255),f,b
 15032  014E02  237E               	addwfc	(ltoa@val+2)& (0+255),f,b
 15033  014E04  237F               	addwfc	(ltoa@val+3)& (0+255),f,b
 15034  014E06                     l3792:
 15035                           
 15036                           ; BSR set to: 0
 15037                           
 15038                           ; BSR set to: 0
 15039  014E06  C07A  F06D         	movff	ltoa@buf,ultoa@buf
 15040  014E0A  C07B  F06E         	movff	ltoa@buf+1,ultoa@buf+1
 15041  014E0E  C07C  F06F         	movff	ltoa@val,ultoa@val
 15042  014E12  C07D  F070         	movff	ltoa@val+1,ultoa@val+1
 15043  014E16  C07E  F071         	movff	ltoa@val+2,ultoa@val+2
 15044  014E1A  C07F  F072         	movff	ltoa@val+3,ultoa@val+3
 15045  014E1E  C080  F073         	movff	ltoa@base,ultoa@base
 15046  014E22  C081  F074         	movff	ltoa@base+1,ultoa@base+1
 15047  014E26  EC91  F08B         	call	_ultoa	;wreg free
 15048  014E2A  0012               	return	
 15049  014E2C                     __end_of_ltoa:
 15050                           	opt stack 0
 15051                           tblptru	equ	0xFF8
 15052                           tblptrh	equ	0xFF7
 15053                           tblptrl	equ	0xFF6
 15054                           tablat	equ	0xFF5
 15055                           prodh	equ	0xFF4
 15056                           prodl	equ	0xFF3
 15057                           postinc0	equ	0xFEE
 15058                           wreg	equ	0xFE8
 15059                           postdec1	equ	0xFE5
 15060                           plusw1	equ	0xFE3
 15061                           fsr1h	equ	0xFE2
 15062                           fsr1l	equ	0xFE1
 15063                           indf2	equ	0xFDF
 15064                           postinc2	equ	0xFDE
 15065                           plusw2	equ	0xFDB
 15066                           fsr2h	equ	0xFDA
 15067                           fsr2l	equ	0xFD9
 15068                           status	equ	0xFD8
 15069                           
 15070 ;; *************** function _ultoa *****************
 15071 ;; Defined at:
 15072 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\ltoa.c"
 15073 ;; Parameters:    Size  Location     Type
 15074 ;;  buf             2   13[BANK0 ] PTR unsigned char 
 15075 ;;		 -> ConfigFile_buffer(512), 
 15076 ;;  val             4   15[BANK0 ] unsigned long 
 15077 ;;  base            2   19[BANK0 ] int 
 15078 ;; Auto vars:     Size  Location     Type
 15079 ;;  v               4   21[BANK0 ] unsigned long 
 15080 ;;  c               1   25[BANK0 ] unsigned char 
 15081 ;; Return value:  Size  Location     Type
 15082 ;;                  2   13[BANK0 ] PTR unsigned char 
 15083 ;; Registers used:
 15084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15085 ;; Tracked objects:
 15086 ;;		On entry : 0/0
 15087 ;;		On exit  : 0/0
 15088 ;;		Unchanged: 0/0
 15089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15090 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15091 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15093 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15094 ;;Total ram usage:       13 bytes
 15095 ;; Hardware stack levels used:    1
 15096 ;; Hardware stack levels required when called:   11
 15097 ;; This function calls:
 15098 ;;		___lldiv
 15099 ;;		___llmod
 15100 ;; This function is called by:
 15101 ;;		_ltoa
 15102 ;; This function uses a non-reentrant model
 15103 ;;
 15104                           
 15105                           	psect	text54
 15106  011722                     __ptext54:
 15107                           	opt stack 0
 15108  011722                     _ultoa:
 15109                           	opt stack 15
 15110                           
 15111                           ;incstack = 0
 15112  011722  C06F  F075         	movff	ultoa@val,ultoa@v
 15113  011726  C070  F076         	movff	ultoa@val+1,ultoa@v+1
 15114  01172A  C071  F077         	movff	ultoa@val+2,ultoa@v+2
 15115  01172E  C072  F078         	movff	ultoa@val+3,ultoa@v+3
 15116  011732  C075  F060         	movff	ultoa@v,___lldiv@dividend
 15117  011736  C076  F061         	movff	ultoa@v+1,___lldiv@dividend+1
 15118  01173A  C077  F062         	movff	ultoa@v+2,___lldiv@dividend+2
 15119  01173E  C078  F063         	movff	ultoa@v+3,___lldiv@dividend+3
 15120  011742  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15121  011746  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15122  01174A  0100               	movlb	0	; () banked
 15123  01174C  0E00               	movlw	0
 15124  01174E  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15125  011750  0EFF               	movlw	-1
 15126  011752  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15127  011754  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15128  011756  EC08  F09F         	call	___lldiv	;wreg free
 15129  01175A  C060  F075         	movff	?___lldiv,ultoa@v
 15130  01175E  C061  F076         	movff	?___lldiv+1,ultoa@v+1
 15131  011762  C062  F077         	movff	?___lldiv+2,ultoa@v+2
 15132  011766  C063  F078         	movff	?___lldiv+3,ultoa@v+3
 15133  01176A  0100               	movlb	0	; () banked
 15134  01176C  4B6D               	infsnz	ultoa@buf& (0+255),f,b
 15135  01176E  2B6E               	incf	(ultoa@buf+1)& (0+255),f,b
 15136                           
 15137                           ; BSR set to: 0
 15138  011770  5175               	movf	ultoa@v& (0+255),w,b
 15139  011772  1176               	iorwf	(ultoa@v+1)& (0+255),w,b
 15140  011774  1177               	iorwf	(ultoa@v+2)& (0+255),w,b
 15141  011776  1178               	iorwf	(ultoa@v+3)& (0+255),w,b
 15142  011778  A4D8               	btfss	status,2,c
 15143  01177A  D7DB               	goto	l3796
 15144                           
 15145                           ; BSR set to: 0
 15146                           
 15147                           ; BSR set to: 0
 15148  01177C  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15149  011780  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15150  011784  0E00               	movlw	0
 15151  011786  6EDF               	movwf	indf2,c
 15152                           
 15153                           ; BSR set to: 0
 15154  011788  076D               	decf	ultoa@buf& (0+255),f,b
 15155  01178A  A0D8               	btfss	status,0,c
 15156  01178C  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15157  01178E                     
 15158                           ; BSR set to: 0
 15159                           
 15160                           ; BSR set to: 0
 15161  01178E  C06F  F060         	movff	ultoa@val,___llmod@dividend
 15162  011792  C070  F061         	movff	ultoa@val+1,___llmod@dividend+1
 15163  011796  C071  F062         	movff	ultoa@val+2,___llmod@dividend+2
 15164  01179A  C072  F063         	movff	ultoa@val+3,___llmod@dividend+3
 15165  01179E  C073  F064         	movff	ultoa@base,___llmod@divisor
 15166  0117A2  C074  F065         	movff	ultoa@base+1,___llmod@divisor+1
 15167  0117A6  0E00               	movlw	0
 15168  0117A8  BF65               	btfsc	(___llmod@divisor+1)& (0+255),7,b
 15169  0117AA  0EFF               	movlw	-1
 15170  0117AC  6F66               	movwf	(___llmod@divisor+2)& (0+255),b
 15171  0117AE  6F67               	movwf	(___llmod@divisor+3)& (0+255),b
 15172  0117B0  ECF9  F0A2         	call	___llmod	;wreg free
 15173  0117B4  0100               	movlb	0	; () banked
 15174  0117B6  5160               	movf	?___llmod& (0+255),w,b
 15175  0117B8  6F79               	movwf	ultoa@c& (0+255),b
 15176                           
 15177                           ; BSR set to: 0
 15178  0117BA  C06F  F060         	movff	ultoa@val,___lldiv@dividend
 15179  0117BE  C070  F061         	movff	ultoa@val+1,___lldiv@dividend+1
 15180  0117C2  C071  F062         	movff	ultoa@val+2,___lldiv@dividend+2
 15181  0117C6  C072  F063         	movff	ultoa@val+3,___lldiv@dividend+3
 15182  0117CA  C073  F064         	movff	ultoa@base,___lldiv@divisor
 15183  0117CE  C074  F065         	movff	ultoa@base+1,___lldiv@divisor+1
 15184  0117D2  0E00               	movlw	0
 15185  0117D4  BF65               	btfsc	(___lldiv@divisor+1)& (0+255),7,b
 15186  0117D6  0EFF               	movlw	-1
 15187  0117D8  6F66               	movwf	(___lldiv@divisor+2)& (0+255),b
 15188  0117DA  6F67               	movwf	(___lldiv@divisor+3)& (0+255),b
 15189  0117DC  EC08  F09F         	call	___lldiv	;wreg free
 15190  0117E0  C060  F06F         	movff	?___lldiv,ultoa@val
 15191  0117E4  C061  F070         	movff	?___lldiv+1,ultoa@val+1
 15192  0117E8  C062  F071         	movff	?___lldiv+2,ultoa@val+2
 15193  0117EC  C063  F072         	movff	?___lldiv+3,ultoa@val+3
 15194  0117F0  0E09               	movlw	9
 15195  0117F2  0100               	movlb	0	; () banked
 15196  0117F4  6579               	cpfsgt	ultoa@c& (0+255),b
 15197  0117F6  D002               	goto	l3799
 15198                           
 15199                           ; BSR set to: 0
 15200  0117F8  0E07               	movlw	7
 15201  0117FA  2779               	addwf	ultoa@c& (0+255),f,b
 15202  0117FC                     l3799:
 15203                           
 15204                           ; BSR set to: 0
 15205  0117FC  0E30               	movlw	48
 15206  0117FE  2779               	addwf	ultoa@c& (0+255),f,b
 15207                           
 15208                           ; BSR set to: 0
 15209  011800  C06D  FFD9         	movff	ultoa@buf,fsr2l
 15210  011804  C06E  FFDA         	movff	ultoa@buf+1,fsr2h
 15211  011808  C079  FFDF         	movff	ultoa@c,indf2
 15212                           
 15213                           ; BSR set to: 0
 15214  01180C  076D               	decf	ultoa@buf& (0+255),f,b
 15215  01180E  A0D8               	btfss	status,0,c
 15216  011810  076E               	decf	(ultoa@buf+1)& (0+255),f,b
 15217                           
 15218                           ; BSR set to: 0
 15219  011812  516F               	movf	ultoa@val& (0+255),w,b
 15220  011814  1170               	iorwf	(ultoa@val+1)& (0+255),w,b
 15221  011816  1171               	iorwf	(ultoa@val+2)& (0+255),w,b
 15222  011818  1172               	iorwf	(ultoa@val+3)& (0+255),w,b
 15223  01181A  B4D8               	btfsc	status,2,c
 15224  01181C  0012               	return	
 15225  01181E  D7B7               	goto	l3798
 15226  011820                     __end_of_ultoa:
 15227                           	opt stack 0
 15228                           tblptru	equ	0xFF8
 15229                           tblptrh	equ	0xFF7
 15230                           tblptrl	equ	0xFF6
 15231                           tablat	equ	0xFF5
 15232                           prodh	equ	0xFF4
 15233                           prodl	equ	0xFF3
 15234                           postinc0	equ	0xFEE
 15235                           wreg	equ	0xFE8
 15236                           postdec1	equ	0xFE5
 15237                           plusw1	equ	0xFE3
 15238                           fsr1h	equ	0xFE2
 15239                           fsr1l	equ	0xFE1
 15240                           indf2	equ	0xFDF
 15241                           postinc2	equ	0xFDE
 15242                           plusw2	equ	0xFDB
 15243                           fsr2h	equ	0xFDA
 15244                           fsr2l	equ	0xFD9
 15245                           status	equ	0xFD8
 15246                           
 15247 ;; *************** function ___llmod *****************
 15248 ;; Defined at:
 15249 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 15250 ;; Parameters:    Size  Location     Type
 15251 ;;  dividend        4    0[BANK0 ] unsigned long 
 15252 ;;  divisor         4    4[BANK0 ] unsigned long 
 15253 ;; Auto vars:     Size  Location     Type
 15254 ;;  counter         1    8[BANK0 ] unsigned char 
 15255 ;; Return value:  Size  Location     Type
 15256 ;;                  4    0[BANK0 ] unsigned long 
 15257 ;; Registers used:
 15258 ;;		wreg, status,2, status,0
 15259 ;; Tracked objects:
 15260 ;;		On entry : 0/0
 15261 ;;		On exit  : 0/0
 15262 ;;		Unchanged: 0/0
 15263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15264 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15265 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15266 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15267 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15268 ;;Total ram usage:        9 bytes
 15269 ;; Hardware stack levels used:    1
 15270 ;; Hardware stack levels required when called:   10
 15271 ;; This function calls:
 15272 ;;		Nothing
 15273 ;; This function is called by:
 15274 ;;		_ultoa
 15275 ;; This function uses a non-reentrant model
 15276 ;;
 15277                           
 15278                           	psect	text55
 15279  0145F2                     __ptext55:
 15280                           	opt stack 0
 15281  0145F2                     ___llmod:
 15282                           	opt stack 15
 15283                           
 15284                           ; BSR set to: 0
 15285                           ;incstack = 0
 15286  0145F2  0100               	movlb	0	; () banked
 15287  0145F4  5164               	movf	___llmod@divisor& (0+255),w,b
 15288  0145F6  1165               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 15289  0145F8  1166               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 15290  0145FA  1167               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 15291  0145FC  B4D8               	btfsc	status,2,c
 15292  0145FE  D024               	goto	l3494
 15293                           
 15294                           ; BSR set to: 0
 15295  014600  0E01               	movlw	1
 15296  014602  6F68               	movwf	___llmod@counter& (0+255),b
 15297  014604  D006               	goto	l3489
 15298  014606                     
 15299                           ; BSR set to: 0
 15300                           
 15301                           ; BSR set to: 0
 15302  014606  90D8               	bcf	status,0,c
 15303  014608  3764               	rlcf	___llmod@divisor& (0+255),f,b
 15304  01460A  3765               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 15305  01460C  3766               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 15306  01460E  3767               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 15307  014610  2B68               	incf	___llmod@counter& (0+255),f,b
 15308  014612                     l3489:
 15309                           
 15310                           ; BSR set to: 0
 15311                           
 15312                           ; BSR set to: 0
 15313  014612  AF67               	btfss	(___llmod@divisor+3)& (0+255),7,b
 15314  014614  D7F8               	goto	l3490
 15315  014616                     u11840:
 15316                           
 15317                           ; BSR set to: 0
 15318                           
 15319                           ; BSR set to: 0
 15320                           
 15321                           ; BSR set to: 0
 15322  014616  5164               	movf	___llmod@divisor& (0+255),w,b
 15323  014618  5D60               	subwf	___llmod@dividend& (0+255),w,b
 15324  01461A  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15325  01461C  5961               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 15326  01461E  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15327  014620  5962               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 15328  014622  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15329  014624  5963               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 15330  014626  A0D8               	btfss	status,0,c
 15331  014628  D008               	goto	l3493
 15332                           
 15333                           ; BSR set to: 0
 15334  01462A  5164               	movf	___llmod@divisor& (0+255),w,b
 15335  01462C  5F60               	subwf	___llmod@dividend& (0+255),f,b
 15336  01462E  5165               	movf	(___llmod@divisor+1)& (0+255),w,b
 15337  014630  5B61               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 15338  014632  5166               	movf	(___llmod@divisor+2)& (0+255),w,b
 15339  014634  5B62               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 15340  014636  5167               	movf	(___llmod@divisor+3)& (0+255),w,b
 15341  014638  5B63               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 15342  01463A                     l3493:
 15343                           
 15344                           ; BSR set to: 0
 15345                           
 15346                           ; BSR set to: 0
 15347  01463A  90D8               	bcf	status,0,c
 15348  01463C  3367               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 15349  01463E  3366               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 15350  014640  3365               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 15351  014642  3364               	rrcf	___llmod@divisor& (0+255),f,b
 15352                           
 15353                           ; BSR set to: 0
 15354  014644  2F68               	decfsz	___llmod@counter& (0+255),f,b
 15355  014646  D7E7               	goto	u11840
 15356  014648                     l3494:
 15357                           
 15358                           ; BSR set to: 0
 15359                           
 15360                           ; BSR set to: 0
 15361  014648  C060  F060         	movff	___llmod@dividend,?___llmod
 15362  01464C  C061  F061         	movff	___llmod@dividend+1,?___llmod+1
 15363  014650  C062  F062         	movff	___llmod@dividend+2,?___llmod+2
 15364  014654  C063  F063         	movff	___llmod@dividend+3,?___llmod+3
 15365                           
 15366                           ; BSR set to: 0
 15367  014658  0012               	return		;funcret
 15368  01465A                     __end_of___llmod:
 15369                           	opt stack 0
 15370                           tblptru	equ	0xFF8
 15371                           tblptrh	equ	0xFF7
 15372                           tblptrl	equ	0xFF6
 15373                           tablat	equ	0xFF5
 15374                           prodh	equ	0xFF4
 15375                           prodl	equ	0xFF3
 15376                           postinc0	equ	0xFEE
 15377                           wreg	equ	0xFE8
 15378                           postdec1	equ	0xFE5
 15379                           plusw1	equ	0xFE3
 15380                           fsr1h	equ	0xFE2
 15381                           fsr1l	equ	0xFE1
 15382                           indf2	equ	0xFDF
 15383                           postinc2	equ	0xFDE
 15384                           plusw2	equ	0xFDB
 15385                           fsr2h	equ	0xFDA
 15386                           fsr2l	equ	0xFD9
 15387                           status	equ	0xFD8
 15388                           
 15389 ;; *************** function ___lldiv *****************
 15390 ;; Defined at:
 15391 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 15392 ;; Parameters:    Size  Location     Type
 15393 ;;  dividend        4    0[BANK0 ] unsigned long 
 15394 ;;  divisor         4    4[BANK0 ] unsigned long 
 15395 ;; Auto vars:     Size  Location     Type
 15396 ;;  quotient        4    8[BANK0 ] unsigned long 
 15397 ;;  counter         1   12[BANK0 ] unsigned char 
 15398 ;; Return value:  Size  Location     Type
 15399 ;;                  4    0[BANK0 ] unsigned long 
 15400 ;; Registers used:
 15401 ;;		wreg, status,2, status,0
 15402 ;; Tracked objects:
 15403 ;;		On entry : 0/0
 15404 ;;		On exit  : 0/0
 15405 ;;		Unchanged: 0/0
 15406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15407 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15408 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15410 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15411 ;;Total ram usage:       13 bytes
 15412 ;; Hardware stack levels used:    1
 15413 ;; Hardware stack levels required when called:   10
 15414 ;; This function calls:
 15415 ;;		Nothing
 15416 ;; This function is called by:
 15417 ;;		_ultoa
 15418 ;; This function uses a non-reentrant model
 15419 ;;
 15420                           
 15421                           	psect	text56
 15422  013E10                     __ptext56:
 15423                           	opt stack 0
 15424  013E10                     ___lldiv:
 15425                           	opt stack 15
 15426                           
 15427                           ; BSR set to: 0
 15428                           ;incstack = 0
 15429  013E10  0E00               	movlw	0
 15430  013E12  0100               	movlb	0	; () banked
 15431  013E14  6F68               	movwf	___lldiv@quotient& (0+255),b
 15432  013E16  0E00               	movlw	0
 15433  013E18  6F69               	movwf	(___lldiv@quotient+1)& (0+255),b
 15434  013E1A  0E00               	movlw	0
 15435  013E1C  6F6A               	movwf	(___lldiv@quotient+2)& (0+255),b
 15436  013E1E  0E00               	movlw	0
 15437  013E20  6F6B               	movwf	(___lldiv@quotient+3)& (0+255),b
 15438                           
 15439                           ; BSR set to: 0
 15440  013E22  5164               	movf	___lldiv@divisor& (0+255),w,b
 15441  013E24  1165               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 15442  013E26  1166               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 15443  013E28  1167               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 15444  013E2A  B4D8               	btfsc	status,2,c
 15445  013E2C  D02A               	goto	l3113
 15446                           
 15447                           ; BSR set to: 0
 15448  013E2E  0E01               	movlw	1
 15449  013E30  6F6C               	movwf	___lldiv@counter& (0+255),b
 15450  013E32  D006               	goto	l3108
 15451  013E34                     
 15452                           ; BSR set to: 0
 15453                           
 15454                           ; BSR set to: 0
 15455  013E34  90D8               	bcf	status,0,c
 15456  013E36  3764               	rlcf	___lldiv@divisor& (0+255),f,b
 15457  013E38  3765               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 15458  013E3A  3766               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 15459  013E3C  3767               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 15460  013E3E  2B6C               	incf	___lldiv@counter& (0+255),f,b
 15461  013E40                     l3108:
 15462                           
 15463                           ; BSR set to: 0
 15464                           
 15465                           ; BSR set to: 0
 15466  013E40  AF67               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 15467  013E42  D7F8               	goto	l3109
 15468  013E44                     u11810:
 15469                           
 15470                           ; BSR set to: 0
 15471                           
 15472                           ; BSR set to: 0
 15473                           
 15474                           ; BSR set to: 0
 15475  013E44  90D8               	bcf	status,0,c
 15476  013E46  3768               	rlcf	___lldiv@quotient& (0+255),f,b
 15477  013E48  3769               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 15478  013E4A  376A               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 15479  013E4C  376B               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 15480                           
 15481                           ; BSR set to: 0
 15482  013E4E  5164               	movf	___lldiv@divisor& (0+255),w,b
 15483  013E50  5D60               	subwf	___lldiv@dividend& (0+255),w,b
 15484  013E52  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15485  013E54  5961               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 15486  013E56  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15487  013E58  5962               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 15488  013E5A  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15489  013E5C  5963               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 15490  013E5E  A0D8               	btfss	status,0,c
 15491  013E60  D009               	goto	l3112
 15492                           
 15493                           ; BSR set to: 0
 15494  013E62  5164               	movf	___lldiv@divisor& (0+255),w,b
 15495  013E64  5F60               	subwf	___lldiv@dividend& (0+255),f,b
 15496  013E66  5165               	movf	(___lldiv@divisor+1)& (0+255),w,b
 15497  013E68  5B61               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 15498  013E6A  5166               	movf	(___lldiv@divisor+2)& (0+255),w,b
 15499  013E6C  5B62               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 15500  013E6E  5167               	movf	(___lldiv@divisor+3)& (0+255),w,b
 15501  013E70  5B63               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 15502                           
 15503                           ; BSR set to: 0
 15504  013E72  8168               	bsf	___lldiv@quotient& (0+255),0,b
 15505  013E74                     l3112:
 15506                           
 15507                           ; BSR set to: 0
 15508                           
 15509                           ; BSR set to: 0
 15510  013E74  90D8               	bcf	status,0,c
 15511  013E76  3367               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 15512  013E78  3366               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 15513  013E7A  3365               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 15514  013E7C  3364               	rrcf	___lldiv@divisor& (0+255),f,b
 15515                           
 15516                           ; BSR set to: 0
 15517  013E7E  2F6C               	decfsz	___lldiv@counter& (0+255),f,b
 15518  013E80  D7E1               	goto	u11810
 15519  013E82                     l3113:
 15520                           
 15521                           ; BSR set to: 0
 15522                           
 15523                           ; BSR set to: 0
 15524  013E82  C068  F060         	movff	___lldiv@quotient,?___lldiv
 15525  013E86  C069  F061         	movff	___lldiv@quotient+1,?___lldiv+1
 15526  013E8A  C06A  F062         	movff	___lldiv@quotient+2,?___lldiv+2
 15527  013E8E  C06B  F063         	movff	___lldiv@quotient+3,?___lldiv+3
 15528                           
 15529                           ; BSR set to: 0
 15530  013E92  0012               	return		;funcret
 15531  013E94                     __end_of___lldiv:
 15532                           	opt stack 0
 15533                           tblptru	equ	0xFF8
 15534                           tblptrh	equ	0xFF7
 15535                           tblptrl	equ	0xFF6
 15536                           tablat	equ	0xFF5
 15537                           prodh	equ	0xFF4
 15538                           prodl	equ	0xFF3
 15539                           postinc0	equ	0xFEE
 15540                           wreg	equ	0xFE8
 15541                           postdec1	equ	0xFE5
 15542                           plusw1	equ	0xFE3
 15543                           fsr1h	equ	0xFE2
 15544                           fsr1l	equ	0xFE1
 15545                           indf2	equ	0xFDF
 15546                           postinc2	equ	0xFDE
 15547                           plusw2	equ	0xFDB
 15548                           fsr2h	equ	0xFDA
 15549                           fsr2l	equ	0xFD9
 15550                           status	equ	0xFD8
 15551                           
 15552 ;; *************** function _configFile_readDefault *****************
 15553 ;; Defined at:
 15554 ;;		line 244 in file "config_file.c"
 15555 ;; Parameters:    Size  Location     Type
 15556 ;;		None
 15557 ;; Auto vars:     Size  Location     Type
 15558 ;;		None
 15559 ;; Return value:  Size  Location     Type
 15560 ;;                  1    wreg      void 
 15561 ;; Registers used:
 15562 ;;		wreg, status,2
 15563 ;; Tracked objects:
 15564 ;;		On entry : 0/0
 15565 ;;		On exit  : 0/0
 15566 ;;		Unchanged: 0/0
 15567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15572 ;;Total ram usage:        0 bytes
 15573 ;; Hardware stack levels used:    1
 15574 ;; Hardware stack levels required when called:   10
 15575 ;; This function calls:
 15576 ;;		Nothing
 15577 ;; This function is called by:
 15578 ;;		_system_init
 15579 ;; This function uses a non-reentrant model
 15580 ;;
 15581                           
 15582                           	psect	text57
 15583  014280                     __ptext57:
 15584                           	opt stack 0
 15585  014280                     _configFile_readDefault:
 15586                           	opt stack 19
 15587                           
 15588                           ;config_file.c: 246: config.full_circle_in_steps = 576000;
 15589                           
 15590                           ; BSR set to: 0
 15591                           ;incstack = 0
 15592  014280  0E00               	movlw	0
 15593  014282  0101               	movlb	1	; () banked
 15594  014284  6F96               	movwf	_config& (0+255),b
 15595  014286  0ECA               	movlw	202
 15596  014288  6F97               	movwf	(_config+1)& (0+255),b
 15597  01428A  0E08               	movlw	8
 15598  01428C  6F98               	movwf	(_config+2)& (0+255),b
 15599  01428E  0E00               	movlw	0
 15600  014290  6F99               	movwf	(_config+3)& (0+255),b
 15601                           
 15602                           ;config_file.c: 247: config.inverse_direction = 1;
 15603  014292  0E01               	movlw	1
 15604  014294  6F9A               	movwf	(_config+4)& (0+255),b
 15605                           
 15606                           ;config_file.c: 248: config.overshoot_in_steps = 6400;
 15607  014296  0E19               	movlw	25
 15608  014298  6F9C               	movwf	(_config+6)& (0+255),b
 15609  01429A  0E00               	movlw	0
 15610  01429C  6F9B               	movwf	(_config+5)& (0+255),b
 15611                           
 15612                           ;config_file.c: 249: config.overshoot_cost_in_steps = 3000;
 15613  01429E  0E0B               	movlw	11
 15614  0142A0  6F9E               	movwf	(_config+8)& (0+255),b
 15615  0142A2  0EB8               	movlw	184
 15616  0142A4  6F9D               	movwf	(_config+7)& (0+255),b
 15617                           
 15618                           ;config_file.c: 250: config.minimum_speed = 1;
 15619  0142A6  0E00               	movlw	0
 15620  0142A8  6FA0               	movwf	(_config+10)& (0+255),b
 15621  0142AA  0E01               	movlw	1
 15622  0142AC  6F9F               	movwf	(_config+9)& (0+255),b
 15623                           
 15624                           ;config_file.c: 251: config.maximum_speed = 380;
 15625  0142AE  0E01               	movlw	1
 15626  0142B0  6FA2               	movwf	(_config+12)& (0+255),b
 15627  0142B2  0E7C               	movlw	124
 15628  0142B4  6FA1               	movwf	(_config+11)& (0+255),b
 15629                           
 15630                           ;config_file.c: 252: config.maximum_speed_arc = 305;
 15631  0142B6  0E01               	movlw	1
 15632  0142B8  6FA6               	movwf	(_config+16)& (0+255),b
 15633  0142BA  0E31               	movlw	49
 15634  0142BC  6FA5               	movwf	(_config+15)& (0+255),b
 15635                           
 15636                           ;config_file.c: 253: config.maximum_speed_manual = 305;
 15637  0142BE  0E01               	movlw	1
 15638  0142C0  6FAA               	movwf	(_config+20)& (0+255),b
 15639  0142C2  0E31               	movlw	49
 15640  0142C4  6FA9               	movwf	(_config+19)& (0+255),b
 15641                           
 15642                           ;config_file.c: 254: config.use_ccw_limit = 0;
 15643  0142C6  0E00               	movlw	0
 15644  0142C8  6FB5               	movwf	(_config+31)& (0+255),b
 15645                           
 15646                           ;config_file.c: 255: config.ccw_limit = 35500;
 15647  0142CA  0EAC               	movlw	172
 15648  0142CC  6FB6               	movwf	(_config+32)& (0+255),b
 15649  0142CE  0E8A               	movlw	138
 15650  0142D0  6FB7               	movwf	(_config+33)& (0+255),b
 15651  0142D2  0E00               	movlw	0
 15652  0142D4  6FB8               	movwf	(_config+34)& (0+255),b
 15653  0142D6  0E00               	movlw	0
 15654  0142D8  6FB9               	movwf	(_config+35)& (0+255),b
 15655                           
 15656                           ;config_file.c: 256: config.use_cw_limit = 0;
 15657  0142DA  0E00               	movlw	0
 15658  0142DC  6FAC               	movwf	(_config+22)& (0+255),b
 15659                           
 15660                           ;config_file.c: 257: config.cw_limit = 500;
 15661  0142DE  0EF4               	movlw	244
 15662  0142E0  6FAD               	movwf	(_config+23)& (0+255),b
 15663  0142E2  0E01               	movlw	1
 15664  0142E4  6FAE               	movwf	(_config+24)& (0+255),b
 15665  0142E6  0E00               	movlw	0
 15666  0142E8  6FAF               	movwf	(_config+25)& (0+255),b
 15667  0142EA  0E00               	movlw	0
 15668  0142EC  6FB0               	movwf	(_config+26)& (0+255),b
 15669                           
 15670                           ;config_file.c: 258: config.beep_duration = 10;
 15671  0142EE  0E0A               	movlw	10
 15672  0142F0  6FAB               	movwf	(_config+21)& (0+255),b
 15673                           
 15674                           ; BSR set to: 1
 15675  0142F2  0012               	return		;funcret
 15676  0142F4                     __end_of_configFile_readDefault:
 15677                           	opt stack 0
 15678                           tblptru	equ	0xFF8
 15679                           tblptrh	equ	0xFF7
 15680                           tblptrl	equ	0xFF6
 15681                           tablat	equ	0xFF5
 15682                           prodh	equ	0xFF4
 15683                           prodl	equ	0xFF3
 15684                           postinc0	equ	0xFEE
 15685                           wreg	equ	0xFE8
 15686                           postdec1	equ	0xFE5
 15687                           plusw1	equ	0xFE3
 15688                           fsr1h	equ	0xFE2
 15689                           fsr1l	equ	0xFE1
 15690                           indf2	equ	0xFDF
 15691                           postinc2	equ	0xFDE
 15692                           plusw2	equ	0xFDB
 15693                           fsr2h	equ	0xFDA
 15694                           fsr2l	equ	0xFD9
 15695                           status	equ	0xFD8
 15696                           
 15697 ;; *************** function _configFile_read *****************
 15698 ;; Defined at:
 15699 ;;		line 262 in file "config_file.c"
 15700 ;; Parameters:    Size  Location     Type
 15701 ;;		None
 15702 ;; Auto vars:     Size  Location     Type
 15703 ;;  item_string    31    8[BANK1 ] unsigned char [31]
 15704 ;;  value_string   12   39[BANK1 ] unsigned char [12]
 15705 ;;  position        4   56[BANK1 ] unsigned long 
 15706 ;;  file_size       4   51[BANK1 ] unsigned long 
 15707 ;;  file_number     1   55[BANK1 ] unsigned char 
 15708 ;; Return value:  Size  Location     Type
 15709 ;;                  1    wreg      void 
 15710 ;; Registers used:
 15711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15712 ;; Tracked objects:
 15713 ;;		On entry : 0/0
 15714 ;;		On exit  : 0/0
 15715 ;;		Unchanged: 0/0
 15716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15718 ;;      Locals:         0       0      52       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15719 ;;      Temps:          0       0       8       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15720 ;;      Totals:         0       0      60       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15721 ;;Total ram usage:       60 bytes
 15722 ;; Hardware stack levels used:    1
 15723 ;; Hardware stack levels required when called:   19
 15724 ;; This function calls:
 15725 ;;		__get_item
 15726 ;;		__parse_item
 15727 ;;		_fat_find_file
 15728 ;;		_fat_get_file_size
 15729 ;;		_fat_read_from_file
 15730 ;; This function is called by:
 15731 ;;		_system_init
 15732 ;; This function uses a non-reentrant model
 15733 ;;
 15734                           
 15735                           	psect	text58
 15736  00F2BC                     __ptext58:
 15737                           	opt stack 0
 15738  00F2BC                     _configFile_read:
 15739                           	opt stack 10
 15740                           
 15741                           ;config_file.c: 264: uint8_t file_number;;config_file.c: 265: uint32_t file_size;;config
      +                          _file.c: 266: uint32_t position;;config_file.c: 267: char item_string[31];;config_file.c
      +                          : 268: char value_string[12];;config_file.c: 271: file_number = fat_find_file(&configFil
      +                          e_name, &configFile_extention);
 15742                           
 15743                           ; BSR set to: 1
 15744                           ;incstack = 0
 15745  00F2BC  0ED6               	movlw	low _configFile_name
 15746  00F2BE  0100               	movlb	0	; () banked
 15747  00F2C0  6F8B               	movwf	fat_find_file@name& (0+255),b
 15748  00F2C2  0E02               	movlw	high _configFile_name
 15749  00F2C4  6F8C               	movwf	(fat_find_file@name+1)& (0+255),b
 15750  00F2C6  0EE1               	movlw	low _configFile_extention
 15751  00F2C8  6F8D               	movwf	fat_find_file@extension& (0+255),b
 15752  00F2CA  0E02               	movlw	high _configFile_extention
 15753  00F2CC  6F8E               	movwf	(fat_find_file@extension+1)& (0+255),b
 15754  00F2CE  ECEE  F08E         	call	_fat_find_file	;wreg free
 15755  00F2D2  0101               	movlb	1	; () banked
 15756  00F2D4  6FFB               	movwf	configFile_read@file_number& (0+255),b
 15757                           
 15758                           ; BSR set to: 1
 15759                           ;config_file.c: 272: if(file_number==0xFF)
 15760  00F2D6  29FB               	incf	configFile_read@file_number& (0+255),w,b
 15761  00F2D8  B4D8               	btfsc	status,2,c
 15762  00F2DA  0012               	return	
 15763                           
 15764                           ; BSR set to: 1
 15765                           ;config_file.c: 276: };config_file.c: 279: file_size = fat_get_file_size(file_number);
 15766                           
 15767                           ; BSR set to: 1
 15768                           
 15769                           ; BSR set to: 1
 15770                           ;config_file.c: 273: {;config_file.c: 275: return;
 15771  00F2DC  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15772  00F2DE  ECC6  F0A0         	call	_fat_get_file_size
 15773  00F2E2  C095  F1F7         	movff	?_fat_get_file_size,configFile_read@file_size
 15774  00F2E6  C096  F1F8         	movff	?_fat_get_file_size+1,configFile_read@file_size+1
 15775  00F2EA  C097  F1F9         	movff	?_fat_get_file_size+2,configFile_read@file_size+2
 15776  00F2EE  C098  F1FA         	movff	?_fat_get_file_size+3,configFile_read@file_size+3
 15777                           
 15778                           ;config_file.c: 282: position = 0;
 15779  00F2F2  0E00               	movlw	0
 15780  00F2F4  0101               	movlb	1	; () banked
 15781  00F2F6  6FFC               	movwf	configFile_read@position& (0+255),b
 15782  00F2F8  0E00               	movlw	0
 15783  00F2FA  6FFD               	movwf	(configFile_read@position+1)& (0+255),b
 15784  00F2FC  0E00               	movlw	0
 15785  00F2FE  6FFE               	movwf	(configFile_read@position+2)& (0+255),b
 15786  00F300  0E00               	movlw	0
 15787  00F302  6FFF               	movwf	(configFile_read@position+3)& (0+255),b
 15788                           
 15789                           ;config_file.c: 283: while((file_size-position)>3)
 15790  00F304  D086               	goto	l3068
 15791  00F306                     
 15792                           ; BSR set to: 1
 15793                           ;config_file.c: 284: {;config_file.c: 285: if((position+45) > file_size)
 15794                           
 15795                           ; BSR set to: 1
 15796  00F306  0E2D               	movlw	45
 15797  00F308  25FC               	addwf	configFile_read@position& (0+255),w,b
 15798  00F30A  6FC4               	movwf	??_configFile_read& (0+255),b
 15799  00F30C  0E00               	movlw	0
 15800  00F30E  21FD               	addwfc	(configFile_read@position+1)& (0+255),w,b
 15801  00F310  6FC5               	movwf	(??_configFile_read+1)& (0+255),b
 15802  00F312  0E00               	movlw	0
 15803  00F314  21FE               	addwfc	(configFile_read@position+2)& (0+255),w,b
 15804  00F316  6FC6               	movwf	(??_configFile_read+2)& (0+255),b
 15805  00F318  0E00               	movlw	0
 15806  00F31A  21FF               	addwfc	(configFile_read@position+3)& (0+255),w,b
 15807  00F31C  6FC7               	movwf	(??_configFile_read+3)& (0+255),b
 15808  00F31E  51C4               	movf	??_configFile_read& (0+255),w,b
 15809  00F320  5DF7               	subwf	configFile_read@file_size& (0+255),w,b
 15810  00F322  51C5               	movf	(??_configFile_read+1)& (0+255),w,b
 15811  00F324  59F8               	subwfb	(configFile_read@file_size+1)& (0+255),w,b
 15812  00F326  51C6               	movf	(??_configFile_read+2)& (0+255),w,b
 15813  00F328  59F9               	subwfb	(configFile_read@file_size+2)& (0+255),w,b
 15814  00F32A  51C7               	movf	(??_configFile_read+3)& (0+255),w,b
 15815  00F32C  59FA               	subwfb	(configFile_read@file_size+3)& (0+255),w,b
 15816  00F32E  B0D8               	btfsc	status,0,c
 15817  00F330  D035               	goto	l3070
 15818                           
 15819                           ; BSR set to: 1
 15820                           ;config_file.c: 286: {;config_file.c: 288: fat_read_from_file(file_number, position, fil
      +                          e_size-position, &ConfigFile_buffer[0]);
 15821  00F332  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15822  00F336  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15823  00F33A  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15824  00F33E  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15825  00F342  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15826  00F346  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15827  00F34A  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15828  00F34E  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15829  00F352  1FC4               	comf	??_configFile_read& (0+255),f,b
 15830  00F354  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15831  00F356  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15832  00F358  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15833  00F35A  2BC4               	incf	??_configFile_read& (0+255),f,b
 15834  00F35C  0E00               	movlw	0
 15835  00F35E  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15836  00F360  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15837  00F362  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15838  00F364  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15839  00F366  25C4               	addwf	??_configFile_read& (0+255),w,b
 15840  00F368  0100               	movlb	0	; () banked
 15841  00F36A  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15842  00F36C  0101               	movlb	1	; () banked
 15843  00F36E  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15844  00F370  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15845  00F372  0100               	movlb	0	; () banked
 15846  00F374  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15847  00F376  0101               	movlb	1	; () banked
 15848  00F378  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15849  00F37A  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15850  00F37C  0100               	movlb	0	; () banked
 15851  00F37E  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15852  00F380  0101               	movlb	1	; () banked
 15853  00F382  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15854  00F384  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15855  00F386  0100               	movlb	0	; () banked
 15856  00F388  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15857  00F38A  0E00               	movlw	low _ConfigFile_buffer
 15858  00F38C  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15859  00F38E  0E08               	movlw	high _ConfigFile_buffer
 15860  00F390  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15861  00F392  0101               	movlb	1	; () banked
 15862  00F394  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15863  00F396  EC62  F08F         	call	_fat_read_from_file
 15864                           
 15865                           ;config_file.c: 289: }
 15866  00F39A  D019               	goto	l3071
 15867  00F39C                     l3070:
 15868                           
 15869                           ;config_file.c: 290: else;config_file.c: 291: {;config_file.c: 293: fat_read_from_file(f
      +                          ile_number, position, 45, &ConfigFile_buffer[0]);
 15870  00F39C  C1FC  F0C9         	movff	configFile_read@position,fat_read_from_file@start_byte
 15871  00F3A0  C1FD  F0CA         	movff	configFile_read@position+1,fat_read_from_file@start_byte+1
 15872  00F3A4  C1FE  F0CB         	movff	configFile_read@position+2,fat_read_from_file@start_byte+2
 15873  00F3A8  C1FF  F0CC         	movff	configFile_read@position+3,fat_read_from_file@start_byte+3
 15874  00F3AC  0E2D               	movlw	45
 15875  00F3AE  0100               	movlb	0	; () banked
 15876  00F3B0  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 15877  00F3B2  0E00               	movlw	0
 15878  00F3B4  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 15879  00F3B6  0E00               	movlw	0
 15880  00F3B8  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 15881  00F3BA  0E00               	movlw	0
 15882  00F3BC  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 15883  00F3BE  0E00               	movlw	low _ConfigFile_buffer
 15884  00F3C0  6FD1               	movwf	fat_read_from_file@data& (0+255),b
 15885  00F3C2  0E08               	movlw	high _ConfigFile_buffer
 15886  00F3C4  6FD2               	movwf	(fat_read_from_file@data+1)& (0+255),b
 15887  00F3C6  0101               	movlb	1	; () banked
 15888  00F3C8  51FB               	movf	configFile_read@file_number& (0+255),w,b
 15889  00F3CA  EC62  F08F         	call	_fat_read_from_file
 15890  00F3CE                     l3071:
 15891                           
 15892                           ;config_file.c: 294: };config_file.c: 297: position += _get_item(&item_string[0], &value
      +                          _string[0], &ConfigFile_buffer[0]);
 15893  00F3CE  0ECC               	movlw	low configFile_read@item_string
 15894  00F3D0  0100               	movlb	0	; () banked
 15895  00F3D2  6F60               	movwf	__get_item@item_string& (0+255),b
 15896  00F3D4  0E01               	movlw	high configFile_read@item_string
 15897  00F3D6  6F61               	movwf	(__get_item@item_string+1)& (0+255),b
 15898  00F3D8  0EEB               	movlw	low configFile_read@value_string
 15899  00F3DA  6F62               	movwf	__get_item@value_string& (0+255),b
 15900  00F3DC  0E01               	movlw	high configFile_read@value_string
 15901  00F3DE  6F63               	movwf	(__get_item@value_string+1)& (0+255),b
 15902  00F3E0  0E00               	movlw	low _ConfigFile_buffer
 15903  00F3E2  6F64               	movwf	__get_item@buffer& (0+255),b
 15904  00F3E4  0E08               	movlw	high _ConfigFile_buffer
 15905  00F3E6  6F65               	movwf	(__get_item@buffer+1)& (0+255),b
 15906  00F3E8  ECFB  F07A         	call	__get_item	;wreg free
 15907  00F3EC  0101               	movlb	1	; () banked
 15908  00F3EE  6FC4               	movwf	??_configFile_read& (0+255),b
 15909  00F3F0  51C4               	movf	??_configFile_read& (0+255),w,b
 15910  00F3F2  27FC               	addwf	configFile_read@position& (0+255),f,b
 15911  00F3F4  0E00               	movlw	0
 15912  00F3F6  23FD               	addwfc	(configFile_read@position+1)& (0+255),f,b
 15913  00F3F8  23FE               	addwfc	(configFile_read@position+2)& (0+255),f,b
 15914  00F3FA  23FF               	addwfc	(configFile_read@position+3)& (0+255),f,b
 15915                           
 15916                           ; BSR set to: 1
 15917                           ;config_file.c: 300: _parse_item(&item_string[0], &value_string[0]);
 15918  00F3FC  0ECC               	movlw	low configFile_read@item_string
 15919  00F3FE  0100               	movlb	0	; () banked
 15920  00F400  6F99               	movwf	__parse_item@item_string& (0+255),b
 15921  00F402  0E01               	movlw	high configFile_read@item_string
 15922  00F404  6F9A               	movwf	(__parse_item@item_string+1)& (0+255),b
 15923  00F406  0EEB               	movlw	low configFile_read@value_string
 15924  00F408  6F9B               	movwf	__parse_item@value_string& (0+255),b
 15925  00F40A  0E01               	movlw	high configFile_read@value_string
 15926  00F40C  6F9C               	movwf	(__parse_item@value_string+1)& (0+255),b
 15927  00F40E  ECBB  F060         	call	__parse_item	;wreg free
 15928  00F412                     l3068:
 15929  00F412  C1FC  F1C4         	movff	configFile_read@position,??_configFile_read
 15930  00F416  C1FD  F1C5         	movff	configFile_read@position+1,??_configFile_read+1
 15931  00F41A  C1FE  F1C6         	movff	configFile_read@position+2,??_configFile_read+2
 15932  00F41E  C1FF  F1C7         	movff	configFile_read@position+3,??_configFile_read+3
 15933  00F422  0101               	movlb	1	; () banked
 15934  00F424  1FC4               	comf	??_configFile_read& (0+255),f,b
 15935  00F426  1FC5               	comf	(??_configFile_read+1)& (0+255),f,b
 15936  00F428  1FC6               	comf	(??_configFile_read+2)& (0+255),f,b
 15937  00F42A  1FC7               	comf	(??_configFile_read+3)& (0+255),f,b
 15938  00F42C  2BC4               	incf	??_configFile_read& (0+255),f,b
 15939  00F42E  0E00               	movlw	0
 15940  00F430  23C5               	addwfc	(??_configFile_read+1)& (0+255),f,b
 15941  00F432  23C6               	addwfc	(??_configFile_read+2)& (0+255),f,b
 15942  00F434  23C7               	addwfc	(??_configFile_read+3)& (0+255),f,b
 15943  00F436  51F7               	movf	configFile_read@file_size& (0+255),w,b
 15944  00F438  25C4               	addwf	??_configFile_read& (0+255),w,b
 15945  00F43A  6FC8               	movwf	(??_configFile_read+4)& (0+255),b
 15946  00F43C  51F8               	movf	(configFile_read@file_size+1)& (0+255),w,b
 15947  00F43E  21C5               	addwfc	(??_configFile_read+1)& (0+255),w,b
 15948  00F440  6FC9               	movwf	(??_configFile_read+5)& (0+255),b
 15949  00F442  51F9               	movf	(configFile_read@file_size+2)& (0+255),w,b
 15950  00F444  21C6               	addwfc	(??_configFile_read+2)& (0+255),w,b
 15951  00F446  6FCA               	movwf	(??_configFile_read+6)& (0+255),b
 15952  00F448  51FA               	movf	(configFile_read@file_size+3)& (0+255),w,b
 15953  00F44A  21C7               	addwfc	(??_configFile_read+3)& (0+255),w,b
 15954  00F44C  6FCB               	movwf	(??_configFile_read+7)& (0+255),b
 15955  00F44E  51CB               	movf	(??_configFile_read+7)& (0+255),w,b
 15956  00F450  11CA               	iorwf	(??_configFile_read+6)& (0+255),w,b
 15957  00F452  11C9               	iorwf	(??_configFile_read+5)& (0+255),w,b
 15958  00F454  E104               	bnz	u16941
 15959  00F456  0E04               	movlw	4
 15960  00F458  5DC8               	subwf	(??_configFile_read+4)& (0+255),w,b
 15961  00F45A  A0D8               	btfss	status,0,c
 15962  00F45C  0012               	return	
 15963  00F45E                     u16941:
 15964  00F45E  D753               	goto	l3069
 15965  00F460                     __end_of_configFile_read:
 15966                           	opt stack 0
 15967                           tblptru	equ	0xFF8
 15968                           tblptrh	equ	0xFF7
 15969                           tblptrl	equ	0xFF6
 15970                           tablat	equ	0xFF5
 15971                           prodh	equ	0xFF4
 15972                           prodl	equ	0xFF3
 15973                           postinc0	equ	0xFEE
 15974                           wreg	equ	0xFE8
 15975                           postdec1	equ	0xFE5
 15976                           plusw1	equ	0xFE3
 15977                           fsr1h	equ	0xFE2
 15978                           fsr1l	equ	0xFE1
 15979                           indf2	equ	0xFDF
 15980                           postinc2	equ	0xFDE
 15981                           plusw2	equ	0xFDB
 15982                           fsr2h	equ	0xFDA
 15983                           fsr2l	equ	0xFD9
 15984                           status	equ	0xFD8
 15985                           
 15986 ;; *************** function _fat_read_from_file *****************
 15987 ;; Defined at:
 15988 ;;		line 752 in file "fat16.c"
 15989 ;; Parameters:    Size  Location     Type
 15990 ;;  file_number     1    wreg     unsigned char 
 15991 ;;  start_byte      4  105[BANK0 ] unsigned long 
 15992 ;;  length          4  109[BANK0 ] unsigned long 
 15993 ;;  data            2  113[BANK0 ] PTR unsigned char 
 15994 ;;		 -> ConfigFile_buffer(512), 
 15995 ;; Auto vars:     Size  Location     Type
 15996 ;;  file_number     1  119[BANK0 ] unsigned char 
 15997 ;;  root           32  125[BANK0 ] struct .
 15998 ;;  cluster_numb    2  123[BANK0 ] unsigned int 
 15999 ;;  cluster         2  121[BANK0 ] unsigned int 
 16000 ;;  return_code     1  120[BANK0 ] unsigned char 
 16001 ;; Return value:  Size  Location     Type
 16002 ;;                  1    wreg      unsigned char 
 16003 ;; Registers used:
 16004 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16005 ;; Tracked objects:
 16006 ;;		On entry : 0/0
 16007 ;;		On exit  : 0/0
 16008 ;;		Unchanged: 0/0
 16009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16010 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16011 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16012 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16013 ;;      Totals:         0      52       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16014 ;;Total ram usage:       52 bytes
 16015 ;; Hardware stack levels used:    1
 16016 ;; Hardware stack levels required when called:   18
 16017 ;; This function calls:
 16018 ;;		_fat_get_file_information
 16019 ;;		_fat_read_from_file_fast
 16020 ;; This function is called by:
 16021 ;;		_configFile_read
 16022 ;; This function uses a non-reentrant model
 16023 ;;
 16024                           
 16025                           	psect	text59
 16026  011EC4                     __ptext59:
 16027                           	opt stack 0
 16028  011EC4                     _fat_read_from_file:
 16029                           	opt stack 10
 16030                           
 16031                           ; BSR set to: 1
 16032                           ;incstack = 0
 16033                           ;fat_read_from_file@file_number stored from wreg
 16034  011EC4  0100               	movlb	0	; () banked
 16035  011EC6  6FD7               	movwf	fat_read_from_file@file_number& (0+255),b
 16036                           
 16037                           ;fat16.c: 754: rootEntry_t root;;fat16.c: 755: uint16_t cluster;;fat16.c: 756: uint16_t 
      +                          cluster_number;;fat16.c: 757: uint8_t return_code;;fat16.c: 760: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 16038  011EC8  0EDD               	movlw	low fat_read_from_file@root
 16039  011ECA  0100               	movlb	0	; () banked
 16040  011ECC  6F8F               	movwf	fat_get_file_information@data& (0+255),b
 16041  011ECE  0E00               	movlw	high fat_read_from_file@root
 16042  011ED0  6F90               	movwf	(fat_get_file_information@data+1)& (0+255),b
 16043  011ED2  51D7               	movf	fat_read_from_file@file_number& (0+255),w,b
 16044  011ED4  EC89  F0A0         	call	_fat_get_file_information
 16045  011ED8  0100               	movlb	0	; () banked
 16046  011EDA  6FD8               	movwf	fat_read_from_file@return_code& (0+255),b
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;fat16.c: 761: if(return_code!=0x00)
 16050  011EDC  51D8               	movf	fat_read_from_file@return_code& (0+255),w,b
 16051  011EDE  A4D8               	btfss	status,2,c
 16052  011EE0  0012               	return	
 16053                           
 16054                           ; BSR set to: 0
 16055                           ;fat16.c: 765: };fat16.c: 768: if(start_byte > root.fileSize)
 16056                           
 16057                           ; BSR set to: 0
 16058                           
 16059                           ; BSR set to: 0
 16060                           ;fat16.c: 762: {;fat16.c: 764: return return_code;;	Return value of _fat_read_from_file 
      +                          is never used
 16061  011EE2  51C9               	movf	fat_read_from_file@start_byte& (0+255),w,b
 16062  011EE4  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16063  011EE6  51CA               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16064  011EE8  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16065  011EEA  51CB               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16066  011EEC  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16067  011EEE  51CC               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16068  011EF0  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16069  011EF2  A0D8               	btfss	status,0,c
 16070  011EF4  0012               	return	
 16071                           
 16072                           ; BSR set to: 0
 16073                           ;fat16.c: 772: };fat16.c: 774: if(start_byte+length > root.fileSize)
 16074                           
 16075                           ; BSR set to: 0
 16076                           
 16077                           ; BSR set to: 0
 16078                           ;fat16.c: 769: {;fat16.c: 771: return 0xFF;;	Return value of _fat_read_from_file is neve
      +                          r used
 16079  011EF6  51CD               	movf	fat_read_from_file@length& (0+255),w,b
 16080  011EF8  25C9               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 16081  011EFA  6FD3               	movwf	??_fat_read_from_file& (0+255),b
 16082  011EFC  51CE               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 16083  011EFE  21CA               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 16084  011F00  6FD4               	movwf	(??_fat_read_from_file+1)& (0+255),b
 16085  011F02  51CF               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 16086  011F04  21CB               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 16087  011F06  6FD5               	movwf	(??_fat_read_from_file+2)& (0+255),b
 16088  011F08  51D0               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 16089  011F0A  21CC               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 16090  011F0C  6FD6               	movwf	(??_fat_read_from_file+3)& (0+255),b
 16091  011F0E  51D3               	movf	??_fat_read_from_file& (0+255),w,b
 16092  011F10  5DF9               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 16093  011F12  51D4               	movf	(??_fat_read_from_file+1)& (0+255),w,b
 16094  011F14  59FA               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 16095  011F16  51D5               	movf	(??_fat_read_from_file+2)& (0+255),w,b
 16096  011F18  59FB               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 16097  011F1A  51D6               	movf	(??_fat_read_from_file+3)& (0+255),w,b
 16098  011F1C  59FC               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 16099  011F1E  B0D8               	btfsc	status,0,c
 16100  011F20  D01D               	goto	l1891
 16101                           
 16102                           ; BSR set to: 0
 16103                           ;fat16.c: 775: {;fat16.c: 777: length = root.fileSize - start_byte;
 16104  011F22  C0C9  F0D3         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 16105  011F26  C0CA  F0D4         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 16106  011F2A  C0CB  F0D5         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 16107  011F2E  C0CC  F0D6         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 16108  011F32  1FD3               	comf	??_fat_read_from_file& (0+255),f,b
 16109  011F34  1FD4               	comf	(??_fat_read_from_file+1)& (0+255),f,b
 16110  011F36  1FD5               	comf	(??_fat_read_from_file+2)& (0+255),f,b
 16111  011F38  1FD6               	comf	(??_fat_read_from_file+3)& (0+255),f,b
 16112  011F3A  2BD3               	incf	??_fat_read_from_file& (0+255),f,b
 16113  011F3C  0E00               	movlw	0
 16114  011F3E  23D4               	addwfc	(??_fat_read_from_file+1)& (0+255),f,b
 16115  011F40  23D5               	addwfc	(??_fat_read_from_file+2)& (0+255),f,b
 16116  011F42  23D6               	addwfc	(??_fat_read_from_file+3)& (0+255),f,b
 16117  011F44  51F9               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 16118  011F46  25D3               	addwf	??_fat_read_from_file& (0+255),w,b
 16119  011F48  6FCD               	movwf	fat_read_from_file@length& (0+255),b
 16120  011F4A  51FA               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 16121  011F4C  21D4               	addwfc	(??_fat_read_from_file+1)& (0+255),w,b
 16122  011F4E  6FCE               	movwf	(fat_read_from_file@length+1)& (0+255),b
 16123  011F50  51FB               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 16124  011F52  21D5               	addwfc	(??_fat_read_from_file+2)& (0+255),w,b
 16125  011F54  6FCF               	movwf	(fat_read_from_file@length+2)& (0+255),b
 16126  011F56  51FC               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 16127  011F58  21D6               	addwfc	(??_fat_read_from_file+3)& (0+255),w,b
 16128  011F5A  6FD0               	movwf	(fat_read_from_file@length+3)& (0+255),b
 16129  011F5C                     l1891:
 16130                           
 16131                           ; BSR set to: 0
 16132                           ;fat16.c: 778: };fat16.c: 781: cluster = root.firstCluster;
 16133                           
 16134                           ; BSR set to: 0
 16135  011F5C  C0F7  F0D9         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 16136  011F60  C0F8  F0DA         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 16137                           
 16138                           ; BSR set to: 0
 16139                           ;fat16.c: 782: cluster_number = 0;
 16140  011F64  0E00               	movlw	0
 16141  011F66  6FDC               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 16142  011F68  0E00               	movlw	0
 16143  011F6A  6FDB               	movwf	fat_read_from_file@cluster_number& (0+255),b
 16144                           
 16145                           ; BSR set to: 0
 16146                           ;fat16.c: 785: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);;	Return value of _fat_read_from_file is never used
 16147  011F6C  C0C9  F0A1         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 16148  011F70  C0CA  F0A2         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 16149  011F74  C0CB  F0A3         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 16150  011F78  C0CC  F0A4         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 16151  011F7C  C0CD  F0A5         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 16152  011F80  C0CE  F0A6         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 16153  011F84  C0CF  F0A7         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 16154  011F88  C0D0  F0A8         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 16155  011F8C  C0D1  F0A9         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 16156  011F90  C0D2  F0AA         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 16157  011F94  0ED9               	movlw	low fat_read_from_file@cluster
 16158  011F96  6FAB               	movwf	fat_read_from_file_fast@cluster& (0+255),b
 16159  011F98  0E00               	movlw	high fat_read_from_file@cluster
 16160  011F9A  6FAC               	movwf	(fat_read_from_file_fast@cluster+1)& (0+255),b
 16161  011F9C  0EDB               	movlw	low fat_read_from_file@cluster_number
 16162  011F9E  6FAD               	movwf	fat_read_from_file_fast@cluster_number& (0+255),b
 16163  011FA0  0E00               	movlw	high fat_read_from_file@cluster_number
 16164  011FA2  6FAE               	movwf	(fat_read_from_file_fast@cluster_number+1)& (0+255),b
 16165  011FA4  ECC4  F070         	call	_fat_read_from_file_fast	;wreg free
 16166  011FA8  0012               	return	
 16167  011FAA                     __end_of_fat_read_from_file:
 16168                           	opt stack 0
 16169                           tblptru	equ	0xFF8
 16170                           tblptrh	equ	0xFF7
 16171                           tblptrl	equ	0xFF6
 16172                           tablat	equ	0xFF5
 16173                           prodh	equ	0xFF4
 16174                           prodl	equ	0xFF3
 16175                           postinc0	equ	0xFEE
 16176                           wreg	equ	0xFE8
 16177                           postdec1	equ	0xFE5
 16178                           plusw1	equ	0xFE3
 16179                           fsr1h	equ	0xFE2
 16180                           fsr1l	equ	0xFE1
 16181                           indf2	equ	0xFDF
 16182                           postinc2	equ	0xFDE
 16183                           plusw2	equ	0xFDB
 16184                           fsr2h	equ	0xFDA
 16185                           fsr2l	equ	0xFD9
 16186                           status	equ	0xFD8
 16187                           
 16188 ;; *************** function _fat_read_from_file_fast *****************
 16189 ;; Defined at:
 16190 ;;		line 788 in file "fat16.c"
 16191 ;; Parameters:    Size  Location     Type
 16192 ;;  start_byte      4   65[BANK0 ] unsigned long 
 16193 ;;  length          4   69[BANK0 ] unsigned long 
 16194 ;;  data            2   73[BANK0 ] PTR unsigned char 
 16195 ;;		 -> ConfigFile_buffer(512), 
 16196 ;;  cluster         2   75[BANK0 ] PTR unsigned int 
 16197 ;;		 -> fat_read_from_file@cluster(2), 
 16198 ;;  cluster_numb    2   77[BANK0 ] PTR unsigned int 
 16199 ;;		 -> fat_read_from_file@cluster_number(2), 
 16200 ;; Auto vars:     Size  Location     Type
 16201 ;;  position        4  101[BANK0 ] unsigned long 
 16202 ;;  read_length     2   99[BANK0 ] unsigned int 
 16203 ;;  needed_clust    2   97[BANK0 ] unsigned int 
 16204 ;;  offset          2   95[BANK0 ] unsigned int 
 16205 ;;  working_clus    2   93[BANK0 ] unsigned int 
 16206 ;;  sector          2   91[BANK0 ] unsigned int 
 16207 ;; Return value:  Size  Location     Type
 16208 ;;                  1    wreg      unsigned char 
 16209 ;; Registers used:
 16210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16211 ;; Tracked objects:
 16212 ;;		On entry : 0/0
 16213 ;;		On exit  : 0/0
 16214 ;;		Unchanged: 0/0
 16215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16216 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16217 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16218 ;;      Temps:          0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16219 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16220 ;;Total ram usage:       40 bytes
 16221 ;; Hardware stack levels used:    1
 16222 ;; Hardware stack levels required when called:   17
 16223 ;; This function calls:
 16224 ;;		__data_sector_from_cluster
 16225 ;;		__find_nth_cluster
 16226 ;;		__read_fat
 16227 ;;		_flash_partial_read
 16228 ;; This function is called by:
 16229 ;;		_fat_read_from_file
 16230 ;; This function uses a non-reentrant model
 16231 ;;
 16232                           
 16233                           	psect	text60
 16234  00E188                     __ptext60:
 16235                           	opt stack 0
 16236  00E188                     _fat_read_from_file_fast:
 16237                           	opt stack 10
 16238                           
 16239                           ;fat16.c: 790: uint32_t position;;fat16.c: 791: uint16_t offset;;fat16.c: 792: uint16_t 
      +                          sector;;fat16.c: 793: uint16_t read_length;;fat16.c: 794: uint16_t working_cluster;;fat1
      +                          6.c: 795: uint16_t needed_cluster;;fat16.c: 798: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 16240                           
 16241                           ;incstack = 0
 16242  00E188  C0A1  F0AF         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 16243  00E18C  C0A2  F0B0         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 16244  00E190  C0A3  F0B1         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 16245  00E194  C0A4  F0B2         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 16246  00E198  0E0A               	movlw	10
 16247  00E19A  D006               	goto	u14150
 16248  00E19C                     u14155:
 16249  00E19C  0100               	movlb	0	; () banked
 16250  00E19E  90D8               	bcf	status,0,c
 16251  00E1A0  33B2               	rrcf	(??_fat_read_from_file_fast+3)& (0+255),f,b
 16252  00E1A2  33B1               	rrcf	(??_fat_read_from_file_fast+2)& (0+255),f,b
 16253  00E1A4  33B0               	rrcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16254  00E1A6  33AF               	rrcf	??_fat_read_from_file_fast& (0+255),f,b
 16255  00E1A8                     u14150:
 16256  00E1A8  2EE8               	decfsz	wreg,f,c
 16257  00E1AA  D7F8               	goto	u14155
 16258  00E1AC  C0AF  F0C1         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 16259  00E1B0  C0B0  F0C2         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 16260                           
 16261                           ; BSR set to: 0
 16262                           ;fat16.c: 801: if((*cluster_number) > needed_cluster)
 16263  00E1B4  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16264  00E1B8  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16265  00E1BC  50DE               	movf	postinc2,w,c
 16266  00E1BE  5DC1               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16267  00E1C0  50DE               	movf	postinc2,w,c
 16268  00E1C2  59C2               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16269  00E1C4  B0D8               	btfsc	status,0,c
 16270  00E1C6  D002               	goto	l1894
 16271                           
 16272                           ; BSR set to: 0
 16273                           ;fat16.c: 802: {;fat16.c: 803: return 0xFF;
 16274  00E1C8  0EFF               	movlw	255
 16275                           
 16276                           ; BSR set to: 0
 16277  00E1CA  0012               	return	
 16278  00E1CC                     l1894:
 16279                           
 16280                           ; BSR set to: 0
 16281                           ;fat16.c: 804: };fat16.c: 807: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 16282                           
 16283                           ; BSR set to: 0
 16284  00E1CC  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16285  00E1D0  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16286  00E1D4  CFDE F097          	movff	postinc2,__find_nth_cluster@cluster
 16287  00E1D8  CFDD F098          	movff	postdec2,__find_nth_cluster@cluster+1
 16288  00E1DC  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16289  00E1E0  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16290  00E1E4  CFDE F0AF          	movff	postinc2,??_fat_read_from_file_fast
 16291  00E1E8  CFDD F0B0          	movff	postdec2,??_fat_read_from_file_fast+1
 16292  00E1EC  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16293  00E1EE  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16294  00E1F0  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16295  00E1F2  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16296  00E1F4  51C1               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 16297  00E1F6  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16298  00E1F8  6F99               	movwf	__find_nth_cluster@n& (0+255),b
 16299  00E1FA  51C2               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 16300  00E1FC  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16301  00E1FE  6F9A               	movwf	(__find_nth_cluster@n+1)& (0+255),b
 16302  00E200  EC5E  F09A         	call	__find_nth_cluster	;wreg free
 16303  00E204  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16304  00E208  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16305  00E20C  0100               	movlb	0	; () banked
 16306  00E20E  C097  FFDE         	movff	?__find_nth_cluster,postinc2
 16307  00E212  C098  FFDD         	movff	?__find_nth_cluster+1,postdec2
 16308                           
 16309                           ; BSR set to: 0
 16310                           ;fat16.c: 810: (*cluster_number) = needed_cluster;
 16311  00E216  C0AD  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 16312  00E21A  C0AE  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 16313  00E21E  C0C1  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 16314  00E222  C0C2  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 16315                           
 16316                           ; BSR set to: 0
 16317                           ;fat16.c: 814: working_cluster = (*cluster);
 16318  00E226  C0AB  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 16319  00E22A  C0AC  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 16320  00E22E  CFDE F0BD          	movff	postinc2,fat_read_from_file_fast@working_cluster
 16321  00E232  CFDD F0BE          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 16322                           
 16323                           ; BSR set to: 0
 16324                           ;fat16.c: 817: position = (needed_cluster << 9);
 16325  00E236  C0C1  F0AF         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 16326  00E23A  C0C2  F0B0         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 16327  00E23E  0E09               	movlw	9
 16328  00E240                     u14175:
 16329  00E240  90D8               	bcf	status,0,c
 16330  00E242  37AF               	rlcf	??_fat_read_from_file_fast& (0+255),f,b
 16331  00E244  37B0               	rlcf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16332  00E246  2EE8               	decfsz	wreg,f,c
 16333  00E248  D7FB               	goto	u14175
 16334  00E24A  C0AF  F0C5         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 16335  00E24E  C0B0  F0C6         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 16336  00E252  6BC7               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 16337  00E254  6BC8               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 16338                           
 16339                           ; BSR set to: 0
 16340                           ;fat16.c: 818: offset = start_byte - position;
 16341  00E256  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16342  00E25A  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16343  00E25E  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16344  00E260  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16345  00E262  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16346  00E264  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16347  00E266  51A1               	movf	fat_read_from_file_fast@start_byte& (0+255),w,b
 16348  00E268  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16349  00E26A  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16350  00E26C  51A2               	movf	(fat_read_from_file_fast@start_byte+1)& (0+255),w,b
 16351  00E26E  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16352  00E270  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16353                           
 16354                           ; BSR set to: 0
 16355                           ;fat16.c: 821: position = 0;
 16356  00E272  0E00               	movlw	0
 16357  00E274  6FC5               	movwf	fat_read_from_file_fast@position& (0+255),b
 16358  00E276  0E00               	movlw	0
 16359  00E278  6FC6               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 16360  00E27A  0E00               	movlw	0
 16361  00E27C  6FC7               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 16362  00E27E  0E00               	movlw	0
 16363  00E280  6FC8               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 16364                           
 16365                           ;fat16.c: 822: while(position < length)
 16366  00E282  D089               	goto	l1896
 16367  00E284                     
 16368                           ; BSR set to: 0
 16369                           ;fat16.c: 823: {;fat16.c: 825: if(offset==512)
 16370                           
 16371                           ; BSR set to: 0
 16372  00E284  0E02               	movlw	2
 16373  00E286  19C0               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 16374  00E288  11BF               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 16375  00E28A  A4D8               	btfss	status,2,c
 16376  00E28C  D00F               	goto	l1898
 16377                           
 16378                           ; BSR set to: 0
 16379                           ;fat16.c: 826: {;fat16.c: 828: working_cluster = _read_fat(working_cluster);
 16380  00E28E  C0BD  F08F         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 16381  00E292  C0BE  F090         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 16382  00E296  EC90  F0A5         	call	__read_fat	;wreg free
 16383  00E29A  C08F  F0BD         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 16384  00E29E  C090  F0BE         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 16385                           
 16386                           ;fat16.c: 829: offset = 0;
 16387  00E2A2  0E00               	movlw	0
 16388  00E2A4  0100               	movlb	0	; () banked
 16389  00E2A6  6FC0               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 16390  00E2A8  0E00               	movlw	0
 16391  00E2AA  6FBF               	movwf	fat_read_from_file_fast@offset& (0+255),b
 16392  00E2AC                     l1898:
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;fat16.c: 830: };fat16.c: 833: sector = _data_sector_from_cluster(working_cluster);
 16396                           
 16397                           ; BSR set to: 0
 16398  00E2AC  C0BD  F060         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 16399  00E2B0  C0BE  F061         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 16400  00E2B4  EC74  F0AE         	call	__data_sector_from_cluster	;wreg free
 16401  00E2B8  C060  F0BB         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 16402  00E2BC  C061  F0BC         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 16403                           
 16404                           ;fat16.c: 836: read_length = 512 - offset;
 16405  00E2C0  C0BF  F0AF         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 16406  00E2C4  C0C0  F0B0         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 16407  00E2C8  0100               	movlb	0	; () banked
 16408  00E2CA  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16409  00E2CC  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16410  00E2CE  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16411  00E2D0  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16412  00E2D2  0E00               	movlw	0
 16413  00E2D4  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16414  00E2D6  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16415  00E2D8  0E02               	movlw	2
 16416  00E2DA  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16417  00E2DC  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16418                           
 16419                           ; BSR set to: 0
 16420                           ;fat16.c: 837: if(read_length > (length-position))
 16421  00E2DE  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16422  00E2E0  6FAF               	movwf	??_fat_read_from_file_fast& (0+255),b
 16423  00E2E2  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16424  00E2E4  6FB0               	movwf	(??_fat_read_from_file_fast+1)& (0+255),b
 16425  00E2E6  6BB1               	clrf	(??_fat_read_from_file_fast+2)& (0+255),b
 16426  00E2E8  6BB2               	clrf	(??_fat_read_from_file_fast+3)& (0+255),b
 16427  00E2EA  C0C5  F0B3         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 16428  00E2EE  C0C6  F0B4         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 16429  00E2F2  C0C7  F0B5         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 16430  00E2F6  C0C8  F0B6         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 16431  00E2FA  1FB3               	comf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16432  00E2FC  1FB4               	comf	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16433  00E2FE  1FB5               	comf	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16434  00E300  1FB6               	comf	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16435  00E302  2BB3               	incf	(??_fat_read_from_file_fast+4)& (0+255),f,b
 16436  00E304  0E00               	movlw	0
 16437  00E306  23B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),f,b
 16438  00E308  23B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),f,b
 16439  00E30A  23B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),f,b
 16440  00E30C  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16441  00E30E  25B3               	addwf	(??_fat_read_from_file_fast+4)& (0+255),w,b
 16442  00E310  6FB7               	movwf	(??_fat_read_from_file_fast+8)& (0+255),b
 16443  00E312  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16444  00E314  21B4               	addwfc	(??_fat_read_from_file_fast+5)& (0+255),w,b
 16445  00E316  6FB8               	movwf	(??_fat_read_from_file_fast+9)& (0+255),b
 16446  00E318  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16447  00E31A  21B5               	addwfc	(??_fat_read_from_file_fast+6)& (0+255),w,b
 16448  00E31C  6FB9               	movwf	(??_fat_read_from_file_fast+10)& (0+255),b
 16449  00E31E  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16450  00E320  21B6               	addwfc	(??_fat_read_from_file_fast+7)& (0+255),w,b
 16451  00E322  6FBA               	movwf	(??_fat_read_from_file_fast+11)& (0+255),b
 16452  00E324  51AF               	movf	??_fat_read_from_file_fast& (0+255),w,b
 16453  00E326  5DB7               	subwf	(??_fat_read_from_file_fast+8)& (0+255),w,b
 16454  00E328  51B0               	movf	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16455  00E32A  59B8               	subwfb	(??_fat_read_from_file_fast+9)& (0+255),w,b
 16456  00E32C  51B1               	movf	(??_fat_read_from_file_fast+2)& (0+255),w,b
 16457  00E32E  59B9               	subwfb	(??_fat_read_from_file_fast+10)& (0+255),w,b
 16458  00E330  51B2               	movf	(??_fat_read_from_file_fast+3)& (0+255),w,b
 16459  00E332  59BA               	subwfb	(??_fat_read_from_file_fast+11)& (0+255),w,b
 16460  00E334  B0D8               	btfsc	status,0,c
 16461  00E336  D00E               	goto	l1899
 16462                           
 16463                           ; BSR set to: 0
 16464                           ;fat16.c: 838: {;fat16.c: 840: read_length = length - position;
 16465  00E338  C0C5  F0AF         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 16466  00E33C  C0C6  F0B0         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 16467  00E340  1FAF               	comf	??_fat_read_from_file_fast& (0+255),f,b
 16468  00E342  1FB0               	comf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16469  00E344  4BAF               	infsnz	??_fat_read_from_file_fast& (0+255),f,b
 16470  00E346  2BB0               	incf	(??_fat_read_from_file_fast+1)& (0+255),f,b
 16471  00E348  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16472  00E34A  25AF               	addwf	??_fat_read_from_file_fast& (0+255),w,b
 16473  00E34C  6FC3               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 16474  00E34E  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16475  00E350  21B0               	addwfc	(??_fat_read_from_file_fast+1)& (0+255),w,b
 16476  00E352  6FC4               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 16477  00E354                     l1899:
 16478                           
 16479                           ; BSR set to: 0
 16480                           ;fat16.c: 841: };fat16.c: 844: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 16481                           
 16482                           ; BSR set to: 0
 16483  00E354  C0BB  F087         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 16484  00E358  C0BC  F088         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 16485  00E35C  C0BF  F089         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 16486  00E360  C0C0  F08A         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 16487  00E364  C0C3  F08B         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 16488  00E368  C0C4  F08C         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 16489  00E36C  51C5               	movf	fat_read_from_file_fast@position& (0+255),w,b
 16490  00E36E  25A9               	addwf	fat_read_from_file_fast@data& (0+255),w,b
 16491  00E370  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16492  00E372  51C6               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16493  00E374  21AA               	addwfc	(fat_read_from_file_fast@data+1)& (0+255),w,b
 16494  00E376  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16495  00E378  EC26  F0AD         	call	_flash_partial_read	;wreg free
 16496                           
 16497                           ;fat16.c: 847: position += read_length;
 16498  00E37C  0100               	movlb	0	; () banked
 16499  00E37E  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16500  00E380  27C5               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 16501  00E382  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16502  00E384  23C6               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 16503  00E386  0E00               	movlw	0
 16504  00E388  23C7               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 16505  00E38A  0E00               	movlw	0
 16506  00E38C  23C8               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 16507                           
 16508                           ; BSR set to: 0
 16509                           ;fat16.c: 848: offset += read_length;
 16510  00E38E  51C3               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 16511  00E390  27BF               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 16512  00E392  51C4               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 16513  00E394  23C0               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 16514  00E396                     l1896:
 16515                           
 16516                           ; BSR set to: 0
 16517                           
 16518                           ; BSR set to: 0
 16519  00E396  51A5               	movf	fat_read_from_file_fast@length& (0+255),w,b
 16520  00E398  5DC5               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 16521  00E39A  51A6               	movf	(fat_read_from_file_fast@length+1)& (0+255),w,b
 16522  00E39C  59C6               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 16523  00E39E  51A7               	movf	(fat_read_from_file_fast@length+2)& (0+255),w,b
 16524  00E3A0  59C7               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 16525  00E3A2  51A8               	movf	(fat_read_from_file_fast@length+3)& (0+255),w,b
 16526  00E3A4  59C8               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 16527  00E3A6  A0D8               	btfss	status,0,c
 16528  00E3A8  D76D               	goto	l1897
 16529                           
 16530                           ; BSR set to: 0
 16531                           ;fat16.c: 849: };fat16.c: 852: return 0x00;
 16532                           
 16533                           ; BSR set to: 0
 16534  00E3AA  0E00               	movlw	0
 16535  00E3AC  0012               	return	
 16536  00E3AE                     __end_of_fat_read_from_file_fast:
 16537                           	opt stack 0
 16538                           tblptru	equ	0xFF8
 16539                           tblptrh	equ	0xFF7
 16540                           tblptrl	equ	0xFF6
 16541                           tablat	equ	0xFF5
 16542                           prodh	equ	0xFF4
 16543                           prodl	equ	0xFF3
 16544                           postinc0	equ	0xFEE
 16545                           wreg	equ	0xFE8
 16546                           postdec1	equ	0xFE5
 16547                           plusw1	equ	0xFE3
 16548                           fsr1h	equ	0xFE2
 16549                           fsr1l	equ	0xFE1
 16550                           indf2	equ	0xFDF
 16551                           postinc2	equ	0xFDE
 16552                           postdec2	equ	0xFDD
 16553                           plusw2	equ	0xFDB
 16554                           fsr2h	equ	0xFDA
 16555                           fsr2l	equ	0xFD9
 16556                           status	equ	0xFD8
 16557                           
 16558 ;; *************** function __find_nth_cluster *****************
 16559 ;; Defined at:
 16560 ;;		line 183 in file "fat16.c"
 16561 ;; Parameters:    Size  Location     Type
 16562 ;;  cluster         2   55[BANK0 ] unsigned int 
 16563 ;;  n               2   57[BANK0 ] unsigned int 
 16564 ;; Auto vars:     Size  Location     Type
 16565 ;;  sector          2   63[BANK0 ] unsigned int 
 16566 ;;  sector_in_bu    2   61[BANK0 ] unsigned int 
 16567 ;;  offset          2   59[BANK0 ] unsigned int 
 16568 ;; Return value:  Size  Location     Type
 16569 ;;                  2   55[BANK0 ] unsigned int 
 16570 ;; Registers used:
 16571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16572 ;; Tracked objects:
 16573 ;;		On entry : 0/0
 16574 ;;		On exit  : 0/0
 16575 ;;		Unchanged: 0/0
 16576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16577 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16578 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16580 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16581 ;;Total ram usage:       10 bytes
 16582 ;; Hardware stack levels used:    1
 16583 ;; Hardware stack levels required when called:   16
 16584 ;; This function calls:
 16585 ;;		__fat_offset_from_cluster
 16586 ;;		__fat_sector_from_cluster
 16587 ;;		__read_fat
 16588 ;;		__read_value_from_offset
 16589 ;;		_flash_sector_read
 16590 ;; This function is called by:
 16591 ;;		_fat_read_from_file_fast
 16592 ;;		_fat_modify_file
 16593 ;;		_fat_copy_sector_to_buffer
 16594 ;; This function uses a non-reentrant model
 16595 ;;
 16596                           
 16597                           	psect	text61
 16598  0134BC                     __ptext61:
 16599                           	opt stack 0
 16600  0134BC                     __find_nth_cluster:
 16601                           	opt stack 11
 16602                           
 16603                           ;fat16.c: 185: uint16_t sector;;fat16.c: 186: uint16_t offset;;fat16.c: 187: uint16_t se
      +                          ctor_in_buffer = 0;
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;incstack = 0
 16607  0134BC  0E00               	movlw	0
 16608  0134BE  0100               	movlb	0	; () banked
 16609  0134C0  6F9E               	movwf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),b
 16610  0134C2  0E00               	movlw	0
 16611  0134C4  6F9D               	movwf	__find_nth_cluster@sector_in_buffer& (0+255),b
 16612                           
 16613                           ; BSR set to: 0
 16614                           ;fat16.c: 190: if(n==1)
 16615  0134C6  0599               	decf	__find_nth_cluster@n& (0+255),w,b
 16616  0134C8  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16617  0134CA  A4D8               	btfss	status,2,c
 16618  0134CC  D040               	goto	l1781
 16619                           
 16620                           ; BSR set to: 0
 16621                           ;fat16.c: 191: {;fat16.c: 192: return _read_fat(cluster);
 16622  0134CE  C097  F08F         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 16623  0134D2  C098  F090         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 16624  0134D6  EC90  F0A5         	call	__read_fat	;wreg free
 16625  0134DA  C08F  F097         	movff	?__read_fat,?__find_nth_cluster
 16626  0134DE  C090  F098         	movff	?__read_fat+1,?__find_nth_cluster+1
 16627  0134E2  0012               	return	
 16628  0134E4                     
 16629                           ;fat16.c: 196: {;fat16.c: 198: sector = _fat_sector_from_cluster(cluster);
 16630  0134E4  C097  F060         	movff	__find_nth_cluster@cluster,__fat_sector_from_cluster@cluster
 16631  0134E8  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_sector_from_cluster@cluster+1
 16632  0134EC  EC01  F0AE         	call	__fat_sector_from_cluster	;wreg free
 16633  0134F0  C060  F09F         	movff	?__fat_sector_from_cluster,__find_nth_cluster@sector
 16634  0134F4  C061  F0A0         	movff	?__fat_sector_from_cluster+1,__find_nth_cluster@sector+1
 16635                           
 16636                           ;fat16.c: 199: offset = _fat_offset_from_cluster(cluster);
 16637  0134F8  C097  F060         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 16638  0134FC  C098  F061         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 16639  013500  EC0E  F0AE         	call	__fat_offset_from_cluster	;wreg free
 16640  013504  C060  F09B         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 16641  013508  C061  F09C         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 16642                           
 16643                           ;fat16.c: 202: if(sector != sector_in_buffer)
 16644  01350C  0100               	movlb	0	; () banked
 16645  01350E  519D               	movf	__find_nth_cluster@sector_in_buffer& (0+255),w,b
 16646  013510  199F               	xorwf	__find_nth_cluster@sector& (0+255),w,b
 16647  013512  E104               	bnz	u12630
 16648  013514  519E               	movf	(__find_nth_cluster@sector_in_buffer+1)& (0+255),w,b
 16649  013516  19A0               	xorwf	(__find_nth_cluster@sector+1)& (0+255),w,b
 16650  013518  B4D8               	btfsc	status,2,c
 16651  01351A  D00A               	goto	l1783
 16652  01351C                     u12630:
 16653                           
 16654                           ; BSR set to: 0
 16655                           ;fat16.c: 203: {;fat16.c: 204: flash_sector_read(sector, buffer);
 16656  01351C  C09F  F087         	movff	__find_nth_cluster@sector,flash_sector_read@page
 16657  013520  C0A0  F088         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 16658  013524  0E00               	movlw	low _buffer
 16659  013526  6F89               	movwf	flash_sector_read@data& (0+255),b
 16660  013528  0E0A               	movlw	high _buffer
 16661  01352A  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 16662  01352C  EC12  F0AD         	call	_flash_sector_read	;wreg free
 16663  013530                     l1783:
 16664                           
 16665                           ;fat16.c: 205: };fat16.c: 208: cluster = _read_value_from_offset(offset, buffer);
 16666  013530  C09B  F060         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 16667  013534  C09C  F061         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 16668  013538  0E00               	movlw	low _buffer
 16669  01353A  0100               	movlb	0	; () banked
 16670  01353C  6F62               	movwf	__read_value_from_offset@buffer& (0+255),b
 16671  01353E  0E0A               	movlw	high _buffer
 16672  013540  6F63               	movwf	(__read_value_from_offset@buffer+1)& (0+255),b
 16673  013542  EC1A  F0A9         	call	__read_value_from_offset	;wreg free
 16674  013546  C060  F097         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 16675  01354A  C061  F098         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 16676  01354E                     l1781:
 16677  01354E  0100               	movlb	0	; () banked
 16678  013550  5199               	movf	__find_nth_cluster@n& (0+255),w,b
 16679  013552  119A               	iorwf	(__find_nth_cluster@n+1)& (0+255),w,b
 16680  013554  A4D8               	btfss	status,2,c
 16681  013556  D7C6               	goto	l1782
 16682                           
 16683                           ; BSR set to: 0
 16684                           ;fat16.c: 209: };fat16.c: 211: return cluster;
 16685  013558  C097  F097         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 16686  01355C  C098  F098         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 16687  013560  0012               	return		;funcret
 16688  013562                     __end_of__find_nth_cluster:
 16689                           	opt stack 0
 16690                           tblptru	equ	0xFF8
 16691                           tblptrh	equ	0xFF7
 16692                           tblptrl	equ	0xFF6
 16693                           tablat	equ	0xFF5
 16694                           prodh	equ	0xFF4
 16695                           prodl	equ	0xFF3
 16696                           postinc0	equ	0xFEE
 16697                           wreg	equ	0xFE8
 16698                           postdec1	equ	0xFE5
 16699                           plusw1	equ	0xFE3
 16700                           fsr1h	equ	0xFE2
 16701                           fsr1l	equ	0xFE1
 16702                           indf2	equ	0xFDF
 16703                           postinc2	equ	0xFDE
 16704                           postdec2	equ	0xFDD
 16705                           plusw2	equ	0xFDB
 16706                           fsr2h	equ	0xFDA
 16707                           fsr2l	equ	0xFD9
 16708                           status	equ	0xFD8
 16709                           
 16710 ;; *************** function __read_value_from_offset *****************
 16711 ;; Defined at:
 16712 ;;		line 115 in file "fat16.c"
 16713 ;; Parameters:    Size  Location     Type
 16714 ;;  offset          2    0[BANK0 ] unsigned int 
 16715 ;;  buffer          2    2[BANK0 ] PTR unsigned char 
 16716 ;;		 -> buffer(512), 
 16717 ;; Auto vars:     Size  Location     Type
 16718 ;;  value           2    7[BANK0 ] unsigned int 
 16719 ;; Return value:  Size  Location     Type
 16720 ;;                  2    0[BANK0 ] unsigned int 
 16721 ;; Registers used:
 16722 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16723 ;; Tracked objects:
 16724 ;;		On entry : 0/0
 16725 ;;		On exit  : 0/0
 16726 ;;		Unchanged: 0/0
 16727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16728 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16729 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16730 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16731 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16732 ;;Total ram usage:        9 bytes
 16733 ;; Hardware stack levels used:    1
 16734 ;; Hardware stack levels required when called:   10
 16735 ;; This function calls:
 16736 ;;		Nothing
 16737 ;; This function is called by:
 16738 ;;		__find_nth_cluster
 16739 ;;		__make_cluster_chain
 16740 ;; This function uses a non-reentrant model
 16741 ;;
 16742                           
 16743                           	psect	text62
 16744  015234                     __ptext62:
 16745                           	opt stack 0
 16746  015234                     __read_value_from_offset:
 16747                           	opt stack 16
 16748                           
 16749                           ;fat16.c: 117: uint16_t value;;fat16.c: 118: value = buffer[offset+1];
 16750                           
 16751                           ;incstack = 0
 16752  015234  0E01               	movlw	1
 16753  015236  0100               	movlb	0	; () banked
 16754  015238  2560               	addwf	__read_value_from_offset@offset& (0+255),w,b
 16755  01523A  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16756  01523C  0E00               	movlw	0
 16757  01523E  2161               	addwfc	(__read_value_from_offset@offset+1)& (0+255),w,b
 16758  015240  6F65               	movwf	(??__read_value_from_offset+1)& (0+255),b
 16759  015242  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16760  015244  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16761  015246  6ED9               	movwf	fsr2l,c
 16762  015248  5165               	movf	(??__read_value_from_offset+1)& (0+255),w,b
 16763  01524A  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16764  01524C  6EDA               	movwf	fsr2h,c
 16765  01524E  50DF               	movf	indf2,w,c
 16766  015250  6F66               	movwf	(??__read_value_from_offset+2)& (0+255),b
 16767  015252  5166               	movf	(??__read_value_from_offset+2)& (0+255),w,b
 16768  015254  6F67               	movwf	__read_value_from_offset@value& (0+255),b
 16769  015256  6B68               	clrf	(__read_value_from_offset@value+1)& (0+255),b
 16770                           
 16771                           ; BSR set to: 0
 16772                           ;fat16.c: 119: value <<= 8;
 16773  015258  5167               	movf	__read_value_from_offset@value& (0+255),w,b
 16774  01525A  6F68               	movwf	(__read_value_from_offset@value+1)& (0+255),b
 16775  01525C  6B67               	clrf	__read_value_from_offset@value& (0+255),b
 16776                           
 16777                           ; BSR set to: 0
 16778                           ;fat16.c: 120: value |= buffer[offset];
 16779  01525E  5160               	movf	__read_value_from_offset@offset& (0+255),w,b
 16780  015260  2562               	addwf	__read_value_from_offset@buffer& (0+255),w,b
 16781  015262  6ED9               	movwf	fsr2l,c
 16782  015264  5161               	movf	(__read_value_from_offset@offset+1)& (0+255),w,b
 16783  015266  2163               	addwfc	(__read_value_from_offset@buffer+1)& (0+255),w,b
 16784  015268  6EDA               	movwf	fsr2h,c
 16785  01526A  50DF               	movf	indf2,w,c
 16786  01526C  6F64               	movwf	??__read_value_from_offset& (0+255),b
 16787  01526E  5164               	movf	??__read_value_from_offset& (0+255),w,b
 16788  015270  1367               	iorwf	__read_value_from_offset@value& (0+255),f,b
 16789                           
 16790                           ; BSR set to: 0
 16791                           ;fat16.c: 121: return value;
 16792  015272  C067  F060         	movff	__read_value_from_offset@value,?__read_value_from_offset
 16793  015276  C068  F061         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 16794  01527A  0012               	return	
 16795  01527C                     __end_of__read_value_from_offset:
 16796                           	opt stack 0
 16797                           tblptru	equ	0xFF8
 16798                           tblptrh	equ	0xFF7
 16799                           tblptrl	equ	0xFF6
 16800                           tablat	equ	0xFF5
 16801                           prodh	equ	0xFF4
 16802                           prodl	equ	0xFF3
 16803                           postinc0	equ	0xFEE
 16804                           wreg	equ	0xFE8
 16805                           postdec1	equ	0xFE5
 16806                           plusw1	equ	0xFE3
 16807                           fsr1h	equ	0xFE2
 16808                           fsr1l	equ	0xFE1
 16809                           indf2	equ	0xFDF
 16810                           postinc2	equ	0xFDE
 16811                           postdec2	equ	0xFDD
 16812                           plusw2	equ	0xFDB
 16813                           fsr2h	equ	0xFDA
 16814                           fsr2l	equ	0xFD9
 16815                           status	equ	0xFD8
 16816                           
 16817 ;; *************** function __read_fat *****************
 16818 ;; Defined at:
 16819 ;;		line 457 in file "fat16.c"
 16820 ;; Parameters:    Size  Location     Type
 16821 ;;  cluster         2   47[BANK0 ] unsigned int 
 16822 ;; Auto vars:     Size  Location     Type
 16823 ;;  value           2   53[BANK0 ] unsigned int 
 16824 ;;  offset          2   51[BANK0 ] unsigned int 
 16825 ;;  sector          2   49[BANK0 ] unsigned int 
 16826 ;; Return value:  Size  Location     Type
 16827 ;;                  2   47[BANK0 ] unsigned int 
 16828 ;; Registers used:
 16829 ;;		wreg, status,2, status,0, cstack
 16830 ;; Tracked objects:
 16831 ;;		On entry : 0/0
 16832 ;;		On exit  : 0/0
 16833 ;;		Unchanged: 0/0
 16834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16835 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16836 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16838 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16839 ;;Total ram usage:        8 bytes
 16840 ;; Hardware stack levels used:    1
 16841 ;; Hardware stack levels required when called:   15
 16842 ;; This function calls:
 16843 ;;		__fat_offset_from_cluster
 16844 ;;		__fat_sector_from_cluster
 16845 ;;		_flash_partial_read
 16846 ;; This function is called by:
 16847 ;;		__find_nth_cluster
 16848 ;;		_fat_read_from_file_fast
 16849 ;;		_fat_modify_file
 16850 ;; This function uses a non-reentrant model
 16851 ;;
 16852                           
 16853                           	psect	text63
 16854  014B20                     __ptext63:
 16855                           	opt stack 0
 16856  014B20                     __read_fat:
 16857                           	opt stack 12
 16858                           
 16859                           ;fat16.c: 459: uint16_t sector;;fat16.c: 460: uint16_t offset;;fat16.c: 461: uint16_t va
      +                          lue;;fat16.c: 464: sector = _fat_sector_from_cluster(cluster);
 16860                           
 16861                           ; BSR set to: 0
 16862                           ;incstack = 0
 16863  014B20  C08F  F060         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 16864  014B24  C090  F061         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 16865  014B28  EC01  F0AE         	call	__fat_sector_from_cluster	;wreg free
 16866  014B2C  C060  F091         	movff	?__fat_sector_from_cluster,__read_fat@sector
 16867  014B30  C061  F092         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 16868                           
 16869                           ;fat16.c: 465: offset = _fat_offset_from_cluster(cluster);
 16870  014B34  C08F  F060         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 16871  014B38  C090  F061         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 16872  014B3C  EC0E  F0AE         	call	__fat_offset_from_cluster	;wreg free
 16873  014B40  C060  F093         	movff	?__fat_offset_from_cluster,__read_fat@offset
 16874  014B44  C061  F094         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 16875                           
 16876                           ;fat16.c: 468: flash_partial_read(sector, offset, 2, &value);
 16877  014B48  C091  F087         	movff	__read_fat@sector,flash_partial_read@page
 16878  014B4C  C092  F088         	movff	__read_fat@sector+1,flash_partial_read@page+1
 16879  014B50  C093  F089         	movff	__read_fat@offset,flash_partial_read@start
 16880  014B54  C094  F08A         	movff	__read_fat@offset+1,flash_partial_read@start+1
 16881  014B58  0E00               	movlw	0
 16882  014B5A  0100               	movlb	0	; () banked
 16883  014B5C  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 16884  014B5E  0E02               	movlw	2
 16885  014B60  6F8B               	movwf	flash_partial_read@length& (0+255),b
 16886  014B62  0E95               	movlw	low __read_fat@value
 16887  014B64  6F8D               	movwf	flash_partial_read@data& (0+255),b
 16888  014B66  0E00               	movlw	high __read_fat@value
 16889  014B68  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 16890  014B6A  EC26  F0AD         	call	_flash_partial_read	;wreg free
 16891                           
 16892                           ;fat16.c: 471: return value;
 16893  014B6E  C095  F08F         	movff	__read_fat@value,?__read_fat
 16894  014B72  C096  F090         	movff	__read_fat@value+1,?__read_fat+1
 16895  014B76  0012               	return	
 16896  014B78                     __end_of__read_fat:
 16897                           	opt stack 0
 16898                           tblptru	equ	0xFF8
 16899                           tblptrh	equ	0xFF7
 16900                           tblptrl	equ	0xFF6
 16901                           tablat	equ	0xFF5
 16902                           prodh	equ	0xFF4
 16903                           prodl	equ	0xFF3
 16904                           postinc0	equ	0xFEE
 16905                           wreg	equ	0xFE8
 16906                           postdec1	equ	0xFE5
 16907                           plusw1	equ	0xFE3
 16908                           fsr1h	equ	0xFE2
 16909                           fsr1l	equ	0xFE1
 16910                           indf2	equ	0xFDF
 16911                           postinc2	equ	0xFDE
 16912                           postdec2	equ	0xFDD
 16913                           plusw2	equ	0xFDB
 16914                           fsr2h	equ	0xFDA
 16915                           fsr2l	equ	0xFD9
 16916                           status	equ	0xFD8
 16917                           
 16918 ;; *************** function __fat_sector_from_cluster *****************
 16919 ;; Defined at:
 16920 ;;		line 76 in file "fat16.c"
 16921 ;; Parameters:    Size  Location     Type
 16922 ;;  cluster         2    0[BANK0 ] unsigned int 
 16923 ;; Auto vars:     Size  Location     Type
 16924 ;;		None
 16925 ;; Return value:  Size  Location     Type
 16926 ;;                  2    0[BANK0 ] unsigned int 
 16927 ;; Registers used:
 16928 ;;		wreg, status,2, status,0
 16929 ;; Tracked objects:
 16930 ;;		On entry : 0/0
 16931 ;;		On exit  : 0/0
 16932 ;;		Unchanged: 0/0
 16933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16934 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16937 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16938 ;;Total ram usage:        2 bytes
 16939 ;; Hardware stack levels used:    1
 16940 ;; Hardware stack levels required when called:   10
 16941 ;; This function calls:
 16942 ;;		Nothing
 16943 ;; This function is called by:
 16944 ;;		__find_nth_cluster
 16945 ;;		__make_cluster_chain
 16946 ;;		__read_fat
 16947 ;; This function uses a non-reentrant model
 16948 ;;
 16949                           
 16950                           	psect	text64
 16951  015C02                     __ptext64:
 16952                           	opt stack 0
 16953  015C02                     __fat_sector_from_cluster:
 16954                           	opt stack 16
 16955                           
 16956                           ;fat16.c: 78: cluster >>= 8;
 16957                           
 16958                           ;incstack = 0
 16959  015C02  0100               	movlb	0	; () banked
 16960  015C04  5161               	movf	(__fat_sector_from_cluster@cluster+1)& (0+255),w,b
 16961  015C06  6F60               	movwf	__fat_sector_from_cluster@cluster& (0+255),b
 16962  015C08  6B61               	clrf	(__fat_sector_from_cluster@cluster+1)& (0+255),b
 16963                           
 16964                           ; BSR set to: 0
 16965                           ;fat16.c: 79: cluster += 2;
 16966  015C0A  0E02               	movlw	2
 16967  015C0C  2760               	addwf	__fat_sector_from_cluster@cluster& (0+255),f,b
 16968  015C0E  0E00               	movlw	0
 16969  015C10  2361               	addwfc	(__fat_sector_from_cluster@cluster+1)& (0+255),f,b
 16970                           
 16971                           ; BSR set to: 0
 16972                           ;fat16.c: 80: return cluster;
 16973  015C12  C060  F060         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 16974  015C16  C061  F061         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 16975  015C1A  0012               	return	
 16976  015C1C                     __end_of__fat_sector_from_cluster:
 16977                           	opt stack 0
 16978                           tblptru	equ	0xFF8
 16979                           tblptrh	equ	0xFF7
 16980                           tblptrl	equ	0xFF6
 16981                           tablat	equ	0xFF5
 16982                           prodh	equ	0xFF4
 16983                           prodl	equ	0xFF3
 16984                           postinc0	equ	0xFEE
 16985                           wreg	equ	0xFE8
 16986                           postdec1	equ	0xFE5
 16987                           plusw1	equ	0xFE3
 16988                           fsr1h	equ	0xFE2
 16989                           fsr1l	equ	0xFE1
 16990                           indf2	equ	0xFDF
 16991                           postinc2	equ	0xFDE
 16992                           postdec2	equ	0xFDD
 16993                           plusw2	equ	0xFDB
 16994                           fsr2h	equ	0xFDA
 16995                           fsr2l	equ	0xFD9
 16996                           status	equ	0xFD8
 16997                           
 16998 ;; *************** function __fat_offset_from_cluster *****************
 16999 ;; Defined at:
 17000 ;;		line 83 in file "fat16.c"
 17001 ;; Parameters:    Size  Location     Type
 17002 ;;  cluster         2    0[BANK0 ] unsigned int 
 17003 ;; Auto vars:     Size  Location     Type
 17004 ;;		None
 17005 ;; Return value:  Size  Location     Type
 17006 ;;                  2    0[BANK0 ] unsigned int 
 17007 ;; Registers used:
 17008 ;;		wreg, status,2, status,0
 17009 ;; Tracked objects:
 17010 ;;		On entry : 0/0
 17011 ;;		On exit  : 0/0
 17012 ;;		Unchanged: 0/0
 17013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17014 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17017 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17018 ;;Total ram usage:        2 bytes
 17019 ;; Hardware stack levels used:    1
 17020 ;; Hardware stack levels required when called:   10
 17021 ;; This function calls:
 17022 ;;		Nothing
 17023 ;; This function is called by:
 17024 ;;		__find_nth_cluster
 17025 ;;		__make_cluster_chain
 17026 ;;		__read_fat
 17027 ;; This function uses a non-reentrant model
 17028 ;;
 17029                           
 17030                           	psect	text65
 17031  015C1C                     __ptext65:
 17032                           	opt stack 0
 17033  015C1C                     __fat_offset_from_cluster:
 17034                           	opt stack 16
 17035                           
 17036                           ;fat16.c: 85: cluster &= 0xFF;
 17037                           
 17038                           ; BSR set to: 0
 17039                           ;incstack = 0
 17040  015C1C  0EFF               	movlw	255
 17041  015C1E  0100               	movlb	0	; () banked
 17042  015C20  1760               	andwf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17043  015C22  0E00               	movlw	0
 17044  015C24  1761               	andwf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;fat16.c: 86: cluster <<= 1;
 17048  015C26  90D8               	bcf	status,0,c
 17049  015C28  3760               	rlcf	__fat_offset_from_cluster@cluster& (0+255),f,b
 17050  015C2A  3761               	rlcf	(__fat_offset_from_cluster@cluster+1)& (0+255),f,b
 17051                           
 17052                           ; BSR set to: 0
 17053                           ;fat16.c: 87: return cluster;
 17054  015C2C  C060  F060         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 17055  015C30  C061  F061         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 17056  015C34  0012               	return	
 17057  015C36                     __end_of__fat_offset_from_cluster:
 17058                           	opt stack 0
 17059                           tblptru	equ	0xFF8
 17060                           tblptrh	equ	0xFF7
 17061                           tblptrl	equ	0xFF6
 17062                           tablat	equ	0xFF5
 17063                           prodh	equ	0xFF4
 17064                           prodl	equ	0xFF3
 17065                           postinc0	equ	0xFEE
 17066                           wreg	equ	0xFE8
 17067                           postdec1	equ	0xFE5
 17068                           plusw1	equ	0xFE3
 17069                           fsr1h	equ	0xFE2
 17070                           fsr1l	equ	0xFE1
 17071                           indf2	equ	0xFDF
 17072                           postinc2	equ	0xFDE
 17073                           postdec2	equ	0xFDD
 17074                           plusw2	equ	0xFDB
 17075                           fsr2h	equ	0xFDA
 17076                           fsr2l	equ	0xFD9
 17077                           status	equ	0xFD8
 17078                           
 17079 ;; *************** function __data_sector_from_cluster *****************
 17080 ;; Defined at:
 17081 ;;		line 71 in file "fat16.c"
 17082 ;; Parameters:    Size  Location     Type
 17083 ;;  fat_cluster     2    0[BANK0 ] unsigned int 
 17084 ;; Auto vars:     Size  Location     Type
 17085 ;;		None
 17086 ;; Return value:  Size  Location     Type
 17087 ;;                  2    0[BANK0 ] unsigned int 
 17088 ;; Registers used:
 17089 ;;		wreg, status,2, status,0
 17090 ;; Tracked objects:
 17091 ;;		On entry : 0/0
 17092 ;;		On exit  : 0/0
 17093 ;;		Unchanged: 0/0
 17094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17095 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17097 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17098 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17099 ;;Total ram usage:        2 bytes
 17100 ;; Hardware stack levels used:    1
 17101 ;; Hardware stack levels required when called:   10
 17102 ;; This function calls:
 17103 ;;		Nothing
 17104 ;; This function is called by:
 17105 ;;		_fat_read_from_file_fast
 17106 ;;		_fat_modify_file
 17107 ;;		_fat_copy_sector_to_buffer
 17108 ;; This function uses a non-reentrant model
 17109 ;;
 17110                           
 17111                           	psect	text66
 17112  015CE8                     __ptext66:
 17113                           	opt stack 0
 17114  015CE8                     __data_sector_from_cluster:
 17115                           	opt stack 17
 17116                           
 17117                           ;fat16.c: 73: return fat_cluster + 38 - 2;
 17118                           
 17119                           ; BSR set to: 0
 17120                           ;incstack = 0
 17121  015CE8  0E24               	movlw	36
 17122  015CEA  0100               	movlb	0	; () banked
 17123  015CEC  2560               	addwf	__data_sector_from_cluster@fat_cluster& (0+255),w,b
 17124  015CEE  6F60               	movwf	?__data_sector_from_cluster& (0+255),b
 17125  015CF0  0E00               	movlw	0
 17126  015CF2  2161               	addwfc	(__data_sector_from_cluster@fat_cluster+1)& (0+255),w,b
 17127  015CF4  6F61               	movwf	(?__data_sector_from_cluster+1)& (0+255),b
 17128  015CF6  0012               	return	
 17129  015CF8                     __end_of__data_sector_from_cluster:
 17130                           	opt stack 0
 17131                           tblptru	equ	0xFF8
 17132                           tblptrh	equ	0xFF7
 17133                           tblptrl	equ	0xFF6
 17134                           tablat	equ	0xFF5
 17135                           prodh	equ	0xFF4
 17136                           prodl	equ	0xFF3
 17137                           postinc0	equ	0xFEE
 17138                           wreg	equ	0xFE8
 17139                           postdec1	equ	0xFE5
 17140                           plusw1	equ	0xFE3
 17141                           fsr1h	equ	0xFE2
 17142                           fsr1l	equ	0xFE1
 17143                           indf2	equ	0xFDF
 17144                           postinc2	equ	0xFDE
 17145                           postdec2	equ	0xFDD
 17146                           plusw2	equ	0xFDB
 17147                           fsr2h	equ	0xFDA
 17148                           fsr2l	equ	0xFD9
 17149                           status	equ	0xFD8
 17150                           
 17151 ;; *************** function _fat_get_file_information *****************
 17152 ;; Defined at:
 17153 ;;		line 1421 in file "fat16.c"
 17154 ;; Parameters:    Size  Location     Type
 17155 ;;  file_number     1    wreg     unsigned char 
 17156 ;;  data            2   47[BANK0 ] PTR struct .
 17157 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 17158 ;; Auto vars:     Size  Location     Type
 17159 ;;  file_number     1   54[BANK0 ] unsigned char 
 17160 ;;  offset          2   52[BANK0 ] unsigned int 
 17161 ;;  root_sector     2   50[BANK0 ] unsigned int 
 17162 ;; Return value:  Size  Location     Type
 17163 ;;                  1    wreg      unsigned char 
 17164 ;; Registers used:
 17165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 17166 ;; Tracked objects:
 17167 ;;		On entry : 0/0
 17168 ;;		On exit  : 0/0
 17169 ;;		Unchanged: 0/0
 17170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17171 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17172 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17173 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17174 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17175 ;;Total ram usage:        8 bytes
 17176 ;; Hardware stack levels used:    1
 17177 ;; Hardware stack levels required when called:   15
 17178 ;; This function calls:
 17179 ;;		__offset_from_file_number
 17180 ;;		__sector_from_file_number
 17181 ;;		_flash_partial_read
 17182 ;; This function is called by:
 17183 ;;		_fat_read_from_file
 17184 ;;		_fat_resize_file
 17185 ;;		_fat_modify_file
 17186 ;;		_fat_rename_file
 17187 ;; This function uses a non-reentrant model
 17188 ;;
 17189                           
 17190                           	psect	text67
 17191  014112                     __ptext67:
 17192                           	opt stack 0
 17193  014112                     _fat_get_file_information:
 17194                           	opt stack 12
 17195                           
 17196                           ; BSR set to: 0
 17197                           ;incstack = 0
 17198                           ;fat_get_file_information@file_number stored from wreg
 17199  014112  0100               	movlb	0	; () banked
 17200  014114  6F96               	movwf	fat_get_file_information@file_number& (0+255),b
 17201                           
 17202                           ;fat16.c: 1423: uint16_t root_sector;;fat16.c: 1424: uint16_t offset;;fat16.c: 1426: if(
      +                          file_number>=64)
 17203  014116  0E3F               	movlw	63
 17204  014118  0100               	movlb	0	; () banked
 17205  01411A  6596               	cpfsgt	fat_get_file_information@file_number& (0+255),b
 17206  01411C  D002               	goto	l2097
 17207                           
 17208                           ; BSR set to: 0
 17209                           ;fat16.c: 1427: {;fat16.c: 1429: return 0x01;
 17210  01411E  0E01               	movlw	1
 17211                           
 17212                           ; BSR set to: 0
 17213  014120  0012               	return	
 17214  014122                     l2097:
 17215                           
 17216                           ; BSR set to: 0
 17217                           ;fat16.c: 1430: };fat16.c: 1433: root_sector = _sector_from_file_number(file_number);
 17218                           
 17219                           ; BSR set to: 0
 17220  014122  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17221  014124  ECAF  F0AB         	call	__sector_from_file_number
 17222  014128  C060  F092         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 17223  01412C  C061  F093         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 17224                           
 17225                           ;fat16.c: 1434: offset = _offset_from_file_number(file_number);
 17226  014130  0100               	movlb	0	; () banked
 17227  014132  5196               	movf	fat_get_file_information@file_number& (0+255),w,b
 17228  014134  ECC1  F0AC         	call	__offset_from_file_number
 17229  014138  C060  F094         	movff	?__offset_from_file_number,fat_get_file_information@offset
 17230  01413C  C061  F095         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 17231                           
 17232                           ;fat16.c: 1437: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 17233  014140  C092  F087         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 17234  014144  C093  F088         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 17235  014148  C094  F089         	movff	fat_get_file_information@offset,flash_partial_read@start
 17236  01414C  C095  F08A         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 17237  014150  0E00               	movlw	0
 17238  014152  0100               	movlb	0	; () banked
 17239  014154  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17240  014156  0E20               	movlw	32
 17241  014158  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17242  01415A  C08F  F08D         	movff	fat_get_file_information@data,flash_partial_read@data
 17243  01415E  C090  F08E         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 17244  014162  EC26  F0AD         	call	_flash_partial_read	;wreg free
 17245                           
 17246                           ;fat16.c: 1440: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 17247  014166  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17248  01416A  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17249  01416E  50DF               	movf	indf2,w,c
 17250  014170  B4D8               	btfsc	status,2,c
 17251  014172  D008               	goto	u14140
 17252  014174  C08F  FFD9         	movff	fat_get_file_information@data,fsr2l
 17253  014178  C090  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 17254  01417C  0EE5               	movlw	229
 17255  01417E  18DE               	xorwf	postinc2,w,c
 17256  014180  A4D8               	btfss	status,2,c
 17257  014182  D002               	goto	l2099
 17258  014184                     u14140:
 17259                           
 17260                           ;fat16.c: 1441: {;fat16.c: 1443: return 0x02;
 17261  014184  0E02               	movlw	2
 17262  014186  0012               	return	
 17263  014188                     l2099:
 17264                           
 17265                           ;fat16.c: 1444: };fat16.c: 1447: return 0x00;
 17266  014188  0E00               	movlw	0
 17267  01418A  0012               	return	
 17268  01418C                     __end_of_fat_get_file_information:
 17269                           	opt stack 0
 17270                           tblptru	equ	0xFF8
 17271                           tblptrh	equ	0xFF7
 17272                           tblptrl	equ	0xFF6
 17273                           tablat	equ	0xFF5
 17274                           prodh	equ	0xFF4
 17275                           prodl	equ	0xFF3
 17276                           postinc0	equ	0xFEE
 17277                           wreg	equ	0xFE8
 17278                           postdec1	equ	0xFE5
 17279                           plusw1	equ	0xFE3
 17280                           fsr1h	equ	0xFE2
 17281                           fsr1l	equ	0xFE1
 17282                           indf2	equ	0xFDF
 17283                           postinc2	equ	0xFDE
 17284                           postdec2	equ	0xFDD
 17285                           plusw2	equ	0xFDB
 17286                           fsr2h	equ	0xFDA
 17287                           fsr2l	equ	0xFD9
 17288                           status	equ	0xFD8
 17289                           
 17290 ;; *************** function _fat_get_file_size *****************
 17291 ;; Defined at:
 17292 ;;		line 563 in file "fat16.c"
 17293 ;; Parameters:    Size  Location     Type
 17294 ;;  file_number     1    wreg     unsigned char 
 17295 ;; Auto vars:     Size  Location     Type
 17296 ;;  file_number     1   65[BANK0 ] unsigned char 
 17297 ;;  file_size       4   61[BANK0 ] unsigned long 
 17298 ;;  offset          2   59[BANK0 ] unsigned int 
 17299 ;;  sector          2   57[BANK0 ] unsigned int 
 17300 ;; Return value:  Size  Location     Type
 17301 ;;                  4   53[BANK0 ] unsigned long 
 17302 ;; Registers used:
 17303 ;;		wreg, status,2, status,0, cstack
 17304 ;; Tracked objects:
 17305 ;;		On entry : 0/0
 17306 ;;		On exit  : 0/0
 17307 ;;		Unchanged: 0/0
 17308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17309 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17310 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17312 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17313 ;;Total ram usage:       13 bytes
 17314 ;; Hardware stack levels used:    1
 17315 ;; Hardware stack levels required when called:   16
 17316 ;; This function calls:
 17317 ;;		__offset_from_file_number
 17318 ;;		__root_is_available
 17319 ;;		__sector_from_file_number
 17320 ;;		_flash_partial_read
 17321 ;; This function is called by:
 17322 ;;		_configFile_read
 17323 ;;		_fat_append_to_file
 17324 ;;		_fat_copy_file
 17325 ;;		_fat_copy_sector_to_buffer
 17326 ;;		_fat_write_sector_from_buffer
 17327 ;; This function uses a non-reentrant model
 17328 ;;
 17329                           
 17330                           	psect	text68
 17331  01418C                     __ptext68:
 17332                           	opt stack 0
 17333  01418C                     _fat_get_file_size:
 17334                           	opt stack 12
 17335                           
 17336                           ;incstack = 0
 17337                           ;fat_get_file_size@file_number stored from wreg
 17338  01418C  0100               	movlb	0	; () banked
 17339  01418E  6FA1               	movwf	fat_get_file_size@file_number& (0+255),b
 17340                           
 17341                           ;fat16.c: 565: uint32_t file_size;;fat16.c: 566: uint16_t sector;;fat16.c: 567: uint16_t
      +                           offset;;fat16.c: 570: if(_root_is_available(file_number))
 17342  014190  0100               	movlb	0	; () banked
 17343  014192  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17344  014194  EC8E  F0A2         	call	__root_is_available
 17345  014198  0900               	iorlw	0
 17346  01419A  B4D8               	btfsc	status,2,c
 17347  01419C  D006               	goto	l1859
 17348                           
 17349                           ;fat16.c: 571: {;fat16.c: 573: return 0xFFFFFFFF;
 17350  01419E  0100               	movlb	0	; () banked
 17351  0141A0  6995               	setf	?_fat_get_file_size& (0+255),b
 17352  0141A2  6996               	setf	(?_fat_get_file_size+1)& (0+255),b
 17353  0141A4  6997               	setf	(?_fat_get_file_size+2)& (0+255),b
 17354  0141A6  6998               	setf	(?_fat_get_file_size+3)& (0+255),b
 17355  0141A8  0012               	return	
 17356  0141AA                     l1859:
 17357                           
 17358                           ;fat16.c: 574: };fat16.c: 577: sector = _sector_from_file_number(file_number);
 17359                           
 17360                           ; BSR set to: 0
 17361  0141AA  0100               	movlb	0	; () banked
 17362  0141AC  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17363  0141AE  ECAF  F0AB         	call	__sector_from_file_number
 17364  0141B2  C060  F099         	movff	?__sector_from_file_number,fat_get_file_size@sector
 17365  0141B6  C061  F09A         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 17366                           
 17367                           ;fat16.c: 578: offset = _offset_from_file_number(file_number);
 17368  0141BA  0100               	movlb	0	; () banked
 17369  0141BC  51A1               	movf	fat_get_file_size@file_number& (0+255),w,b
 17370  0141BE  ECC1  F0AC         	call	__offset_from_file_number
 17371  0141C2  C060  F09B         	movff	?__offset_from_file_number,fat_get_file_size@offset
 17372  0141C6  C061  F09C         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 17373                           
 17374                           ;fat16.c: 581: flash_partial_read(sector, offset+28, 4, &file_size);
 17375  0141CA  C099  F087         	movff	fat_get_file_size@sector,flash_partial_read@page
 17376  0141CE  C09A  F088         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 17377  0141D2  0E1C               	movlw	28
 17378  0141D4  0100               	movlb	0	; () banked
 17379  0141D6  259B               	addwf	fat_get_file_size@offset& (0+255),w,b
 17380  0141D8  6F89               	movwf	flash_partial_read@start& (0+255),b
 17381  0141DA  0E00               	movlw	0
 17382  0141DC  219C               	addwfc	(fat_get_file_size@offset+1)& (0+255),w,b
 17383  0141DE  6F8A               	movwf	(flash_partial_read@start+1)& (0+255),b
 17384  0141E0  0E00               	movlw	0
 17385  0141E2  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17386  0141E4  0E04               	movlw	4
 17387  0141E6  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17388  0141E8  0E9D               	movlw	low fat_get_file_size@file_size
 17389  0141EA  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17390  0141EC  0E00               	movlw	high fat_get_file_size@file_size
 17391  0141EE  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17392  0141F0  EC26  F0AD         	call	_flash_partial_read	;wreg free
 17393                           
 17394                           ;fat16.c: 584: return file_size;
 17395  0141F4  C09D  F095         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 17396  0141F8  C09E  F096         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 17397  0141FC  C09F  F097         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 17398  014200  C0A0  F098         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 17399  014204  0012               	return	
 17400  014206                     __end_of_fat_get_file_size:
 17401                           	opt stack 0
 17402                           tblptru	equ	0xFF8
 17403                           tblptrh	equ	0xFF7
 17404                           tblptrl	equ	0xFF6
 17405                           tablat	equ	0xFF5
 17406                           prodh	equ	0xFF4
 17407                           prodl	equ	0xFF3
 17408                           postinc0	equ	0xFEE
 17409                           wreg	equ	0xFE8
 17410                           postdec1	equ	0xFE5
 17411                           plusw1	equ	0xFE3
 17412                           fsr1h	equ	0xFE2
 17413                           fsr1l	equ	0xFE1
 17414                           indf2	equ	0xFDF
 17415                           postinc2	equ	0xFDE
 17416                           postdec2	equ	0xFDD
 17417                           plusw2	equ	0xFDB
 17418                           fsr2h	equ	0xFDA
 17419                           fsr2l	equ	0xFD9
 17420                           status	equ	0xFD8
 17421                           
 17422 ;; *************** function __root_is_available *****************
 17423 ;; Defined at:
 17424 ;;		line 409 in file "fat16.c"
 17425 ;; Parameters:    Size  Location     Type
 17426 ;;  file_number     1    wreg     unsigned char 
 17427 ;; Auto vars:     Size  Location     Type
 17428 ;;  file_number     1   51[BANK0 ] unsigned char 
 17429 ;;  offset          2   49[BANK0 ] unsigned int 
 17430 ;;  root_sector     2   47[BANK0 ] unsigned int 
 17431 ;;  first_byte      1   52[BANK0 ] unsigned char 
 17432 ;; Return value:  Size  Location     Type
 17433 ;;                  1    wreg      unsigned char 
 17434 ;; Registers used:
 17435 ;;		wreg, status,2, status,0, cstack
 17436 ;; Tracked objects:
 17437 ;;		On entry : 0/0
 17438 ;;		On exit  : 0/0
 17439 ;;		Unchanged: 0/0
 17440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17442 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17444 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17445 ;;Total ram usage:        6 bytes
 17446 ;; Hardware stack levels used:    1
 17447 ;; Hardware stack levels required when called:   15
 17448 ;; This function calls:
 17449 ;;		__offset_from_file_number
 17450 ;;		__sector_from_file_number
 17451 ;;		_flash_partial_read
 17452 ;; This function is called by:
 17453 ;;		__get_available_root_entry
 17454 ;;		_fat_get_file_size
 17455 ;;		_fat_resize_file
 17456 ;;		_fat_delete_file
 17457 ;;		_fat_append_to_file
 17458 ;;		_fat_copy_file
 17459 ;;		_fat_copy_sector_to_buffer
 17460 ;;		_fat_write_sector_from_buffer
 17461 ;; This function uses a non-reentrant model
 17462 ;;
 17463                           
 17464                           	psect	text69
 17465  01451C                     __ptext69:
 17466                           	opt stack 0
 17467  01451C                     __root_is_available:
 17468                           	opt stack 12
 17469                           
 17470                           ;incstack = 0
 17471                           ;__root_is_available@file_number stored from wreg
 17472  01451C  0100               	movlb	0	; () banked
 17473  01451E  6F93               	movwf	__root_is_available@file_number& (0+255),b
 17474                           
 17475                           ;fat16.c: 411: uint16_t root_sector;;fat16.c: 412: uint16_t offset;;fat16.c: 413: uint8_
      +                          t first_byte;;fat16.c: 417: if(file_number>=64)
 17476  014520  0E3F               	movlw	63
 17477  014522  0100               	movlb	0	; () banked
 17478  014524  6593               	cpfsgt	__root_is_available@file_number& (0+255),b
 17479  014526  D002               	goto	l1820
 17480                           
 17481                           ; BSR set to: 0
 17482                           ;fat16.c: 418: {;fat16.c: 420: return 0;
 17483  014528  0E00               	movlw	0
 17484                           
 17485                           ; BSR set to: 0
 17486  01452A  0012               	return	
 17487  01452C                     l1820:
 17488                           
 17489                           ; BSR set to: 0
 17490                           ;fat16.c: 421: };fat16.c: 424: root_sector = _sector_from_file_number(file_number);
 17491                           
 17492                           ; BSR set to: 0
 17493  01452C  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17494  01452E  ECAF  F0AB         	call	__sector_from_file_number
 17495  014532  C060  F08F         	movff	?__sector_from_file_number,__root_is_available@root_sector
 17496  014536  C061  F090         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 17497                           
 17498                           ;fat16.c: 425: offset = _offset_from_file_number(file_number);
 17499  01453A  0100               	movlb	0	; () banked
 17500  01453C  5193               	movf	__root_is_available@file_number& (0+255),w,b
 17501  01453E  ECC1  F0AC         	call	__offset_from_file_number
 17502  014542  C060  F091         	movff	?__offset_from_file_number,__root_is_available@offset
 17503  014546  C061  F092         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 17504                           
 17505                           ;fat16.c: 428: flash_partial_read(root_sector, offset, 1, &first_byte);
 17506  01454A  C08F  F087         	movff	__root_is_available@root_sector,flash_partial_read@page
 17507  01454E  C090  F088         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 17508  014552  C091  F089         	movff	__root_is_available@offset,flash_partial_read@start
 17509  014556  C092  F08A         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 17510  01455A  0E00               	movlw	0
 17511  01455C  0100               	movlb	0	; () banked
 17512  01455E  6F8C               	movwf	(flash_partial_read@length+1)& (0+255),b
 17513  014560  0E01               	movlw	1
 17514  014562  6F8B               	movwf	flash_partial_read@length& (0+255),b
 17515  014564  0E94               	movlw	low __root_is_available@first_byte
 17516  014566  6F8D               	movwf	flash_partial_read@data& (0+255),b
 17517  014568  0E00               	movlw	high __root_is_available@first_byte
 17518  01456A  6F8E               	movwf	(flash_partial_read@data+1)& (0+255),b
 17519  01456C  EC26  F0AD         	call	_flash_partial_read	;wreg free
 17520                           
 17521                           ;fat16.c: 431: if((first_byte==0x00) || (first_byte==0xE5))
 17522  014570  0100               	movlb	0	; () banked
 17523  014572  5194               	movf	__root_is_available@first_byte& (0+255),w,b
 17524  014574  B4D8               	btfsc	status,2,c
 17525  014576  D004               	goto	u12670
 17526                           
 17527                           ; BSR set to: 0
 17528  014578  0EE5               	movlw	229
 17529  01457A  1994               	xorwf	__root_is_available@first_byte& (0+255),w,b
 17530  01457C  A4D8               	btfss	status,2,c
 17531  01457E  D002               	goto	l1822
 17532  014580                     u12670:
 17533                           
 17534                           ; BSR set to: 0
 17535                           ;fat16.c: 432: {;fat16.c: 434: return 1;
 17536                           
 17537                           ; BSR set to: 0
 17538  014580  0E01               	movlw	1
 17539                           
 17540                           ; BSR set to: 0
 17541                           ;fat16.c: 435: }
 17542                           
 17543                           ; BSR set to: 0
 17544  014582  0012               	return	
 17545  014584                     l1822:
 17546                           
 17547                           ; BSR set to: 0
 17548                           ;fat16.c: 436: else;fat16.c: 437: {;fat16.c: 439: return 0;
 17549                           
 17550                           ; BSR set to: 0
 17551  014584  0E00               	movlw	0
 17552                           
 17553                           ; BSR set to: 0
 17554  014586  0012               	return	
 17555  014588                     __end_of__root_is_available:
 17556                           	opt stack 0
 17557                           tblptru	equ	0xFF8
 17558                           tblptrh	equ	0xFF7
 17559                           tblptrl	equ	0xFF6
 17560                           tablat	equ	0xFF5
 17561                           prodh	equ	0xFF4
 17562                           prodl	equ	0xFF3
 17563                           postinc0	equ	0xFEE
 17564                           wreg	equ	0xFE8
 17565                           postdec1	equ	0xFE5
 17566                           plusw1	equ	0xFE3
 17567                           fsr1h	equ	0xFE2
 17568                           fsr1l	equ	0xFE1
 17569                           indf2	equ	0xFDF
 17570                           postinc2	equ	0xFDE
 17571                           postdec2	equ	0xFDD
 17572                           plusw2	equ	0xFDB
 17573                           fsr2h	equ	0xFDA
 17574                           fsr2l	equ	0xFD9
 17575                           status	equ	0xFD8
 17576                           
 17577 ;; *************** function _flash_partial_read *****************
 17578 ;; Defined at:
 17579 ;;		line 452 in file "flash.c"
 17580 ;; Parameters:    Size  Location     Type
 17581 ;;  page            2   39[BANK0 ] unsigned int 
 17582 ;;  start           2   41[BANK0 ] unsigned int 
 17583 ;;  length          2   43[BANK0 ] unsigned int 
 17584 ;;  data            2   45[BANK0 ] PTR unsigned char 
 17585 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 17586 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 17587 ;;		 -> _root_is_available@first_byte(1), 
 17588 ;; Auto vars:     Size  Location     Type
 17589 ;;		None
 17590 ;; Return value:  Size  Location     Type
 17591 ;;                  1    wreg      void 
 17592 ;; Registers used:
 17593 ;;		wreg, status,2, status,0, cstack
 17594 ;; Tracked objects:
 17595 ;;		On entry : 0/0
 17596 ;;		On exit  : 0/0
 17597 ;;		Unchanged: 0/0
 17598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17599 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17602 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17603 ;;Total ram usage:        8 bytes
 17604 ;; Hardware stack levels used:    1
 17605 ;; Hardware stack levels required when called:   14
 17606 ;; This function calls:
 17607 ;;		__flash_partial_read
 17608 ;; This function is called by:
 17609 ;;		__root_is_available
 17610 ;;		__read_fat
 17611 ;;		_fat_get_file_size
 17612 ;;		_fat_read_from_file_fast
 17613 ;;		_fat_get_file_information
 17614 ;;		__get_first_cluster
 17615 ;; This function uses a non-reentrant model
 17616 ;;
 17617                           
 17618                           	psect	text70
 17619  015A4C                     __ptext70:
 17620                           	opt stack 0
 17621  015A4C                     _flash_partial_read:
 17622                           	opt stack 12
 17623                           
 17624                           ;flash.c: 455: _flash_partial_read(page, start, length, data);
 17625                           
 17626                           ; BSR set to: 0
 17627                           ;incstack = 0
 17628  015A4C  C087  F073         	movff	flash_partial_read@page,__flash_partial_read@page
 17629  015A50  C088  F074         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 17630  015A54  C089  F075         	movff	flash_partial_read@start,__flash_partial_read@start
 17631  015A58  C08A  F076         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 17632  015A5C  C08B  F077         	movff	flash_partial_read@length,__flash_partial_read@length
 17633  015A60  C08C  F078         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 17634  015A64  C08D  F079         	movff	flash_partial_read@data,__flash_partial_read@data
 17635  015A68  C08E  F07A         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 17636  015A6C  EC03  F0A1         	call	__flash_partial_read	;wreg free
 17637  015A70  0012               	return		;funcret
 17638  015A72                     __end_of_flash_partial_read:
 17639                           	opt stack 0
 17640                           tblptru	equ	0xFF8
 17641                           tblptrh	equ	0xFF7
 17642                           tblptrl	equ	0xFF6
 17643                           tablat	equ	0xFF5
 17644                           prodh	equ	0xFF4
 17645                           prodl	equ	0xFF3
 17646                           postinc0	equ	0xFEE
 17647                           wreg	equ	0xFE8
 17648                           postdec1	equ	0xFE5
 17649                           plusw1	equ	0xFE3
 17650                           fsr1h	equ	0xFE2
 17651                           fsr1l	equ	0xFE1
 17652                           indf2	equ	0xFDF
 17653                           postinc2	equ	0xFDE
 17654                           postdec2	equ	0xFDD
 17655                           plusw2	equ	0xFDB
 17656                           fsr2h	equ	0xFDA
 17657                           fsr2l	equ	0xFD9
 17658                           status	equ	0xFD8
 17659                           
 17660 ;; *************** function __sector_from_file_number *****************
 17661 ;; Defined at:
 17662 ;;		line 53 in file "fat16.c"
 17663 ;; Parameters:    Size  Location     Type
 17664 ;;  file_number     1    wreg     unsigned char 
 17665 ;; Auto vars:     Size  Location     Type
 17666 ;;  file_number     1    2[BANK0 ] unsigned char 
 17667 ;;  sector          2    3[BANK0 ] unsigned int 
 17668 ;; Return value:  Size  Location     Type
 17669 ;;                  2    0[BANK0 ] unsigned int 
 17670 ;; Registers used:
 17671 ;;		wreg, status,2, status,0
 17672 ;; Tracked objects:
 17673 ;;		On entry : 0/0
 17674 ;;		On exit  : 0/0
 17675 ;;		Unchanged: 0/0
 17676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17677 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17678 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17680 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17681 ;;Total ram usage:        5 bytes
 17682 ;; Hardware stack levels used:    1
 17683 ;; Hardware stack levels required when called:   10
 17684 ;; This function calls:
 17685 ;;		Nothing
 17686 ;; This function is called by:
 17687 ;;		__root_is_available
 17688 ;;		__write_root
 17689 ;;		_fat_get_file_size
 17690 ;;		_fat_get_file_information
 17691 ;;		__delete_root
 17692 ;;		__get_first_cluster
 17693 ;; This function uses a non-reentrant model
 17694 ;;
 17695                           
 17696                           	psect	text71
 17697  01575E                     __ptext71:
 17698                           	opt stack 0
 17699  01575E                     __sector_from_file_number:
 17700                           	opt stack 16
 17701                           
 17702                           ;incstack = 0
 17703                           ;__sector_from_file_number@file_number stored from wreg
 17704  01575E  0100               	movlb	0	; () banked
 17705  015760  6F62               	movwf	__sector_from_file_number@file_number& (0+255),b
 17706                           
 17707                           ;fat16.c: 55: uint16_t sector;;fat16.c: 56: sector = (uint16_t) file_number;
 17708  015762  C062  F063         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 17709  015766  0100               	movlb	0	; () banked
 17710  015768  6B64               	clrf	(__sector_from_file_number@sector+1)& (0+255),b
 17711                           
 17712                           ; BSR set to: 0
 17713                           ;fat16.c: 57: sector >>= 4;
 17714  01576A  3B63               	swapf	__sector_from_file_number@sector& (0+255),f,b
 17715  01576C  3B64               	swapf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17716  01576E  0E0F               	movlw	15
 17717  015770  1763               	andwf	__sector_from_file_number@sector& (0+255),f,b
 17718  015772  5164               	movf	(__sector_from_file_number@sector+1)& (0+255),w,b
 17719  015774  0BF0               	andlw	240
 17720  015776  1363               	iorwf	__sector_from_file_number@sector& (0+255),f,b
 17721  015778  0E0F               	movlw	15
 17722  01577A  1764               	andwf	(__sector_from_file_number@sector+1)& (0+255),f,b
 17723                           
 17724                           ; BSR set to: 0
 17725                           ;fat16.c: 58: sector += 34;
 17726  01577C  0E22               	movlw	34
 17727  01577E  2763               	addwf	__sector_from_file_number@sector& (0+255),f,b
 17728  015780  0E00               	movlw	0
 17729  015782  2364               	addwfc	(__sector_from_file_number@sector+1)& (0+255),f,b
 17730                           
 17731                           ; BSR set to: 0
 17732                           ;fat16.c: 59: return sector;
 17733  015784  C063  F060         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 17734  015788  C064  F061         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 17735  01578C  0012               	return	
 17736  01578E                     __end_of__sector_from_file_number:
 17737                           	opt stack 0
 17738                           tblptru	equ	0xFF8
 17739                           tblptrh	equ	0xFF7
 17740                           tblptrl	equ	0xFF6
 17741                           tablat	equ	0xFF5
 17742                           prodh	equ	0xFF4
 17743                           prodl	equ	0xFF3
 17744                           postinc0	equ	0xFEE
 17745                           wreg	equ	0xFE8
 17746                           postdec1	equ	0xFE5
 17747                           plusw1	equ	0xFE3
 17748                           fsr1h	equ	0xFE2
 17749                           fsr1l	equ	0xFE1
 17750                           indf2	equ	0xFDF
 17751                           postinc2	equ	0xFDE
 17752                           postdec2	equ	0xFDD
 17753                           plusw2	equ	0xFDB
 17754                           fsr2h	equ	0xFDA
 17755                           fsr2l	equ	0xFD9
 17756                           status	equ	0xFD8
 17757                           
 17758 ;; *************** function __offset_from_file_number *****************
 17759 ;; Defined at:
 17760 ;;		line 62 in file "fat16.c"
 17761 ;; Parameters:    Size  Location     Type
 17762 ;;  file_number     1    wreg     unsigned char 
 17763 ;; Auto vars:     Size  Location     Type
 17764 ;;  file_number     1    2[BANK0 ] unsigned char 
 17765 ;;  offset          2    3[BANK0 ] unsigned int 
 17766 ;; Return value:  Size  Location     Type
 17767 ;;                  2    0[BANK0 ] unsigned int 
 17768 ;; Registers used:
 17769 ;;		wreg, status,2, status,0
 17770 ;; Tracked objects:
 17771 ;;		On entry : 0/0
 17772 ;;		On exit  : 0/0
 17773 ;;		Unchanged: 0/0
 17774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17776 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17778 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17779 ;;Total ram usage:        5 bytes
 17780 ;; Hardware stack levels used:    1
 17781 ;; Hardware stack levels required when called:   10
 17782 ;; This function calls:
 17783 ;;		Nothing
 17784 ;; This function is called by:
 17785 ;;		__root_is_available
 17786 ;;		__write_root
 17787 ;;		_fat_get_file_size
 17788 ;;		_fat_get_file_information
 17789 ;;		__delete_root
 17790 ;;		__get_first_cluster
 17791 ;; This function uses a non-reentrant model
 17792 ;;
 17793                           
 17794                           	psect	text72
 17795  015982                     __ptext72:
 17796                           	opt stack 0
 17797  015982                     __offset_from_file_number:
 17798                           	opt stack 16
 17799                           
 17800                           ; BSR set to: 0
 17801                           ;incstack = 0
 17802                           ;__offset_from_file_number@file_number stored from wreg
 17803  015982  0100               	movlb	0	; () banked
 17804  015984  6F62               	movwf	__offset_from_file_number@file_number& (0+255),b
 17805                           
 17806                           ;fat16.c: 64: uint16_t offset;;fat16.c: 65: offset = file_number;
 17807  015986  C062  F063         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 17808  01598A  0100               	movlb	0	; () banked
 17809  01598C  6B64               	clrf	(__offset_from_file_number@offset+1)& (0+255),b
 17810                           
 17811                           ; BSR set to: 0
 17812                           ;fat16.c: 66: offset &= 0b1111;
 17813  01598E  0E0F               	movlw	15
 17814  015990  1763               	andwf	__offset_from_file_number@offset& (0+255),f,b
 17815  015992  0E00               	movlw	0
 17816  015994  1764               	andwf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17817                           
 17818                           ; BSR set to: 0
 17819                           ;fat16.c: 67: offset <<= 5;
 17820  015996  0E05               	movlw	5
 17821  015998                     u11555:
 17822  015998  90D8               	bcf	status,0,c
 17823  01599A  3763               	rlcf	__offset_from_file_number@offset& (0+255),f,b
 17824  01599C  3764               	rlcf	(__offset_from_file_number@offset+1)& (0+255),f,b
 17825  01599E  2EE8               	decfsz	wreg,f,c
 17826  0159A0  D7FB               	goto	u11555
 17827                           
 17828                           ; BSR set to: 0
 17829                           ;fat16.c: 68: return offset;
 17830  0159A2  C063  F060         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 17831  0159A6  C064  F061         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 17832  0159AA  0012               	return	
 17833  0159AC                     __end_of__offset_from_file_number:
 17834                           	opt stack 0
 17835                           tblptru	equ	0xFF8
 17836                           tblptrh	equ	0xFF7
 17837                           tblptrl	equ	0xFF6
 17838                           tablat	equ	0xFF5
 17839                           prodh	equ	0xFF4
 17840                           prodl	equ	0xFF3
 17841                           postinc0	equ	0xFEE
 17842                           wreg	equ	0xFE8
 17843                           postdec1	equ	0xFE5
 17844                           plusw1	equ	0xFE3
 17845                           fsr1h	equ	0xFE2
 17846                           fsr1l	equ	0xFE1
 17847                           indf2	equ	0xFDF
 17848                           postinc2	equ	0xFDE
 17849                           postdec2	equ	0xFDD
 17850                           plusw2	equ	0xFDB
 17851                           fsr2h	equ	0xFDA
 17852                           fsr2l	equ	0xFD9
 17853                           status	equ	0xFD8
 17854                           
 17855 ;; *************** function _fat_find_file *****************
 17856 ;; Defined at:
 17857 ;;		line 518 in file "fat16.c"
 17858 ;; Parameters:    Size  Location     Type
 17859 ;;  name            2   43[BANK0 ] PTR unsigned char 
 17860 ;;		 -> configFile_used_name(8), configFile_name(8), 
 17861 ;;  extension       2   45[BANK0 ] PTR unsigned char 
 17862 ;;		 -> configFile_used_extention(3), configFile_extention(3), 
 17863 ;; Auto vars:     Size  Location     Type
 17864 ;;  offset          2   52[BANK0 ] unsigned int 
 17865 ;;  sector          2   50[BANK0 ] unsigned int 
 17866 ;;  file_number     1   49[BANK0 ] unsigned char 
 17867 ;; Return value:  Size  Location     Type
 17868 ;;                  1    wreg      unsigned char 
 17869 ;; Registers used:
 17870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 17871 ;; Tracked objects:
 17872 ;;		On entry : 0/0
 17873 ;;		On exit  : 0/0
 17874 ;;		Unchanged: 0/0
 17875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17876 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17877 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17878 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17879 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17880 ;;Total ram usage:       11 bytes
 17881 ;; Hardware stack levels used:    1
 17882 ;; Hardware stack levels required when called:   15
 17883 ;; This function calls:
 17884 ;;		_flash_sector_read
 17885 ;;		_strncmp
 17886 ;; This function is called by:
 17887 ;;		_fat_create_file
 17888 ;;		_configFile_read
 17889 ;;		_configFile_write
 17890 ;; This function uses a non-reentrant model
 17891 ;;
 17892                           
 17893                           	psect	text73
 17894  011DDC                     __ptext73:
 17895                           	opt stack 0
 17896  011DDC                     _fat_find_file:
 17897                           	opt stack 13
 17898                           
 17899                           ;fat16.c: 520: uint8_t file_number = 0;
 17900                           
 17901                           ; BSR set to: 0
 17902                           ;incstack = 0
 17903  011DDC  0E00               	movlw	0
 17904  011DDE  0100               	movlb	0	; () banked
 17905  011DE0  6F91               	movwf	fat_find_file@file_number& (0+255),b
 17906                           
 17907                           ;fat16.c: 521: uint16_t sector;;fat16.c: 522: uint16_t offset;;fat16.c: 524: for(sector 
      +                          = 34; sector <= 37; ++sector)
 17908  011DE2  0E00               	movlw	0
 17909  011DE4  6F93               	movwf	(fat_find_file@sector+1)& (0+255),b
 17910  011DE6  0E22               	movlw	34
 17911  011DE8  6F92               	movwf	fat_find_file@sector& (0+255),b
 17912                           
 17913                           ; BSR set to: 0
 17914  011DEA  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 17915  011DEC  E169               	bnz	l1847
 17916  011DEE  0E26               	movlw	38
 17917  011DF0  5D92               	subwf	fat_find_file@sector& (0+255),w,b
 17918  011DF2  B0D8               	btfsc	status,0,c
 17919  011DF4  D065               	goto	u14110
 17920                           
 17921                           ; BSR set to: 0
 17922                           ;fat16.c: 525: {;fat16.c: 527: flash_sector_read(sector, buffer);
 17923                           
 17924                           ; BSR set to: 0
 17925                           
 17926                           ; BSR set to: 0
 17927  011DF6  C092  F087         	movff	fat_find_file@sector,flash_sector_read@page
 17928  011DFA  C093  F088         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 17929  011DFE  0E00               	movlw	low _buffer
 17930  011E00  6F89               	movwf	flash_sector_read@data& (0+255),b
 17931  011E02  0E0A               	movlw	high _buffer
 17932  011E04  6F8A               	movwf	(flash_sector_read@data+1)& (0+255),b
 17933  011E06  EC12  F0AD         	call	_flash_sector_read	;wreg free
 17934                           
 17935                           ;fat16.c: 529: for(offset = 0; offset<512; offset += 32)
 17936  011E0A  0E00               	movlw	0
 17937  011E0C  0100               	movlb	0	; () banked
 17938  011E0E  6F95               	movwf	(fat_find_file@offset+1)& (0+255),b
 17939  011E10  0E00               	movlw	0
 17940  011E12  6F94               	movwf	fat_find_file@offset& (0+255),b
 17941  011E14                     l14978:
 17942                           
 17943                           ; BSR set to: 0
 17944  011E14  0E02               	movlw	2
 17945  011E16  5D95               	subwf	(fat_find_file@offset+1)& (0+255),w,b
 17946  011E18  B0D8               	btfsc	status,0,c
 17947  011E1A  D04D               	goto	u14100
 17948                           
 17949                           ; BSR set to: 0
 17950                           ;fat16.c: 530: {;fat16.c: 531: if(buffer[offset]==0x00)
 17951                           
 17952                           ; BSR set to: 0
 17953                           
 17954                           ; BSR set to: 0
 17955  011E1C  0E00               	movlw	low _buffer
 17956  011E1E  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17957  011E20  6ED9               	movwf	fsr2l,c
 17958  011E22  0E0A               	movlw	high _buffer
 17959  011E24  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17960  011E26  6EDA               	movwf	fsr2h,c
 17961  011E28  50DF               	movf	indf2,w,c
 17962  011E2A  A4D8               	btfss	status,2,c
 17963  011E2C  D002               	goto	l1850
 17964                           
 17965                           ; BSR set to: 0
 17966                           ;fat16.c: 532: {;fat16.c: 535: return 0xFF;
 17967  011E2E  0EFF               	movlw	255
 17968                           
 17969                           ; BSR set to: 0
 17970  011E30  0012               	return	
 17971  011E32                     l1850:
 17972                           
 17973                           ; BSR set to: 0
 17974                           ;fat16.c: 537: else if(buffer[offset]==0xE5)
 17975                           
 17976                           ; BSR set to: 0
 17977  011E32  0E00               	movlw	low _buffer
 17978  011E34  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17979  011E36  6ED9               	movwf	fsr2l,c
 17980  011E38  0E0A               	movlw	high _buffer
 17981  011E3A  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 17982  011E3C  6EDA               	movwf	fsr2h,c
 17983  011E3E  0EE5               	movlw	229
 17984  011E40  18DE               	xorwf	postinc2,w,c
 17985  011E42  B4D8               	btfsc	status,2,c
 17986  011E44  D032               	goto	l1856
 17987                           
 17988                           ; BSR set to: 0
 17989                           ;fat16.c: 543: else;fat16.c: 544: {;fat16.c: 546: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 17990                           
 17991                           ; BSR set to: 0
 17992                           
 17993                           ; BSR set to: 0
 17994                           ;fat16.c: 538: {;fat16.c: 542: }
 17995  011E46  C08B  F060         	movff	fat_find_file@name,strncmp@s1
 17996  011E4A  C08C  F061         	movff	fat_find_file@name+1,strncmp@s1+1
 17997  011E4E  0E00               	movlw	low _buffer
 17998  011E50  2594               	addwf	fat_find_file@offset& (0+255),w,b
 17999  011E52  6F62               	movwf	strncmp@s2& (0+255),b
 18000  011E54  0E0A               	movlw	high _buffer
 18001  011E56  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18002  011E58  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18003  011E5A  0E00               	movlw	0
 18004  011E5C  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18005  011E5E  0E08               	movlw	8
 18006  011E60  6F64               	movwf	strncmp@len& (0+255),b
 18007  011E62  ECCD  F09F         	call	_strncmp	;wreg free
 18008  011E66  0100               	movlb	0	; () banked
 18009  011E68  5160               	movf	?_strncmp& (0+255),w,b
 18010  011E6A  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18011  011E6C  A4D8               	btfss	status,2,c
 18012  011E6E  D01D               	goto	l1856
 18013                           
 18014                           ; BSR set to: 0
 18015                           ;fat16.c: 547: {;fat16.c: 549: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 18016  011E70  C08D  F060         	movff	fat_find_file@extension,strncmp@s1
 18017  011E74  C08E  F061         	movff	fat_find_file@extension+1,strncmp@s1+1
 18018  011E78  0E08               	movlw	8
 18019  011E7A  2594               	addwf	fat_find_file@offset& (0+255),w,b
 18020  011E7C  6F8F               	movwf	??_fat_find_file& (0+255),b
 18021  011E7E  0E00               	movlw	0
 18022  011E80  2195               	addwfc	(fat_find_file@offset+1)& (0+255),w,b
 18023  011E82  6F90               	movwf	(??_fat_find_file+1)& (0+255),b
 18024  011E84  0E00               	movlw	low _buffer
 18025  011E86  258F               	addwf	??_fat_find_file& (0+255),w,b
 18026  011E88  6F62               	movwf	strncmp@s2& (0+255),b
 18027  011E8A  0E0A               	movlw	high _buffer
 18028  011E8C  2190               	addwfc	(??_fat_find_file+1)& (0+255),w,b
 18029  011E8E  6F63               	movwf	(strncmp@s2+1)& (0+255),b
 18030  011E90  0E00               	movlw	0
 18031  011E92  6F65               	movwf	(strncmp@len+1)& (0+255),b
 18032  011E94  0E03               	movlw	3
 18033  011E96  6F64               	movwf	strncmp@len& (0+255),b
 18034  011E98  ECCD  F09F         	call	_strncmp	;wreg free
 18035  011E9C  0100               	movlb	0	; () banked
 18036  011E9E  5160               	movf	?_strncmp& (0+255),w,b
 18037  011EA0  1161               	iorwf	(?_strncmp+1)& (0+255),w,b
 18038  011EA2  A4D8               	btfss	status,2,c
 18039  011EA4  D002               	goto	l1856
 18040                           
 18041                           ; BSR set to: 0
 18042                           ;fat16.c: 550: {;fat16.c: 553: return file_number;
 18043  011EA6  5191               	movf	fat_find_file@file_number& (0+255),w,b
 18044                           
 18045                           ; BSR set to: 0
 18046  011EA8  0012               	return	
 18047  011EAA                     l1856:
 18048                           
 18049                           ; BSR set to: 0
 18050                           ;fat16.c: 554: };fat16.c: 555: };fat16.c: 556: };fat16.c: 557: ++file_number;
 18051                           
 18052                           ; BSR set to: 0
 18053                           
 18054                           ; BSR set to: 0
 18055                           
 18056                           ; BSR set to: 0
 18057                           
 18058                           ; BSR set to: 0
 18059  011EAA  2B91               	incf	fat_find_file@file_number& (0+255),f,b
 18060                           
 18061                           ; BSR set to: 0
 18062  011EAC  0E20               	movlw	32
 18063  011EAE  2794               	addwf	fat_find_file@offset& (0+255),f,b
 18064  011EB0  0E00               	movlw	0
 18065  011EB2  2395               	addwfc	(fat_find_file@offset+1)& (0+255),f,b
 18066  011EB4  D7AF               	goto	l14978
 18067  011EB6                     u14100:
 18068                           
 18069                           ; BSR set to: 0
 18070                           
 18071                           ; BSR set to: 0
 18072  011EB6  4B92               	infsnz	fat_find_file@sector& (0+255),f,b
 18073  011EB8  2B93               	incf	(fat_find_file@sector+1)& (0+255),f,b
 18074                           
 18075                           ; BSR set to: 0
 18076  011EBA  5193               	movf	(fat_find_file@sector+1)& (0+255),w,b
 18077  011EBC  E101               	bnz	l15012
 18078  011EBE  D797               	goto	L4
 18079  011EC0                     u14110:
 18080  011EC0                     l1847:
 18081  011EC0                     l15012:
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;fat16.c: 558: };fat16.c: 559: };fat16.c: 560: return 0xFF;
 18085  011EC0  0EFF               	movlw	255
 18086  011EC2  0012               	return	
 18087  011EC4                     __end_of_fat_find_file:
 18088                           	opt stack 0
 18089                           tblptru	equ	0xFF8
 18090                           tblptrh	equ	0xFF7
 18091                           tblptrl	equ	0xFF6
 18092                           tablat	equ	0xFF5
 18093                           prodh	equ	0xFF4
 18094                           prodl	equ	0xFF3
 18095                           postinc0	equ	0xFEE
 18096                           wreg	equ	0xFE8
 18097                           postdec1	equ	0xFE5
 18098                           plusw1	equ	0xFE3
 18099                           fsr1h	equ	0xFE2
 18100                           fsr1l	equ	0xFE1
 18101                           indf2	equ	0xFDF
 18102                           postinc2	equ	0xFDE
 18103                           postdec2	equ	0xFDD
 18104                           plusw2	equ	0xFDB
 18105                           fsr2h	equ	0xFDA
 18106                           fsr2l	equ	0xFD9
 18107                           status	equ	0xFD8
 18108                           
 18109 ;; *************** function _strncmp *****************
 18110 ;; Defined at:
 18111 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 18112 ;; Parameters:    Size  Location     Type
 18113 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 18114 ;;		 -> configFile_used_extention(3), configFile_used_name(8), configFile_extention(3), configFile_name(8), 
 18115 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 18116 ;;		 -> buffer(512), 
 18117 ;;  len             2    4[BANK0 ] unsigned int 
 18118 ;; Auto vars:     Size  Location     Type
 18119 ;;		None
 18120 ;; Return value:  Size  Location     Type
 18121 ;;                  2    0[BANK0 ] int 
 18122 ;; Registers used:
 18123 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 18124 ;; Tracked objects:
 18125 ;;		On entry : 0/0
 18126 ;;		On exit  : 0/0
 18127 ;;		Unchanged: 0/0
 18128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18129 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18131 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18132 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18133 ;;Total ram usage:        9 bytes
 18134 ;; Hardware stack levels used:    1
 18135 ;; Hardware stack levels required when called:   10
 18136 ;; This function calls:
 18137 ;;		Nothing
 18138 ;; This function is called by:
 18139 ;;		_fat_find_file
 18140 ;; This function uses a non-reentrant model
 18141 ;;
 18142                           
 18143                           	psect	text74
 18144  013F9A                     __ptext74:
 18145                           	opt stack 0
 18146  013F9A                     _strncmp:
 18147                           	opt stack 17
 18148                           
 18149                           ; BSR set to: 0
 18150                           ;incstack = 0
 18151  013F9A  D031               	goto	l3832
 18152  013F9C                     l14006:
 18153  013F9C  C060  FFD9         	movff	strncmp@s1,fsr2l
 18154  013FA0  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18155  013FA4  50DF               	movf	indf2,w,c
 18156  013FA6  B4D8               	btfsc	status,2,c
 18157  013FA8  D00C               	goto	u12690
 18158  013FAA  C062  FFD9         	movff	strncmp@s2,fsr2l
 18159  013FAE  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18160  013FB2  C060  FFE1         	movff	strncmp@s1,fsr1l
 18161  013FB6  C061  FFE2         	movff	strncmp@s1+1,fsr1h
 18162  013FBA  50DE               	movf	postinc2,w,c
 18163  013FBC  18E6               	xorwf	postinc1,w,c
 18164  013FBE  B4D8               	btfsc	status,2,c
 18165  013FC0  D019               	goto	l3834
 18166  013FC2                     u12690:
 18167  013FC2  C062  FFD9         	movff	strncmp@s2,fsr2l
 18168  013FC6  C063  FFDA         	movff	strncmp@s2+1,fsr2h
 18169  013FCA  50DF               	movf	indf2,w,c
 18170  013FCC  0100               	movlb	0	; () banked
 18171  013FCE  6F66               	movwf	??_strncmp& (0+255),b
 18172  013FD0  6B67               	clrf	(??_strncmp+1)& (0+255),b
 18173  013FD2  1F66               	comf	??_strncmp& (0+255),f,b
 18174  013FD4  1F67               	comf	(??_strncmp+1)& (0+255),f,b
 18175  013FD6  4B66               	infsnz	??_strncmp& (0+255),f,b
 18176  013FD8  2B67               	incf	(??_strncmp+1)& (0+255),f,b
 18177  013FDA  C060  FFD9         	movff	strncmp@s1,fsr2l
 18178  013FDE  C061  FFDA         	movff	strncmp@s1+1,fsr2h
 18179  013FE2  50DF               	movf	indf2,w,c
 18180  013FE4  6F68               	movwf	(??_strncmp+2)& (0+255),b
 18181  013FE6  5168               	movf	(??_strncmp+2)& (0+255),w,b
 18182  013FE8  2566               	addwf	??_strncmp& (0+255),w,b
 18183  013FEA  6F60               	movwf	?_strncmp& (0+255),b
 18184  013FEC  0E00               	movlw	0
 18185  013FEE  2167               	addwfc	(??_strncmp+1)& (0+255),w,b
 18186  013FF0  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18187                           
 18188                           ; BSR set to: 0
 18189  013FF2  0012               	return	
 18190  013FF4                     l3834:
 18191                           
 18192                           ; BSR set to: 0
 18193  013FF4  0100               	movlb	0	; () banked
 18194  013FF6  4B60               	infsnz	strncmp@s1& (0+255),f,b
 18195  013FF8  2B61               	incf	(strncmp@s1+1)& (0+255),f,b
 18196  013FFA  4B62               	infsnz	strncmp@s2& (0+255),f,b
 18197  013FFC  2B63               	incf	(strncmp@s2+1)& (0+255),f,b
 18198  013FFE                     l3832:
 18199                           
 18200                           ; BSR set to: 0
 18201  013FFE  0100               	movlb	0	; () banked
 18202  014000  0764               	decf	strncmp@len& (0+255),f,b
 18203  014002  A0D8               	btfss	status,0,c
 18204  014004  0765               	decf	(strncmp@len+1)& (0+255),f,b
 18205  014006  2964               	incf	strncmp@len& (0+255),w,b
 18206  014008  E1C9               	bnz	l14006
 18207  01400A  2965               	incf	(strncmp@len+1)& (0+255),w,b
 18208  01400C  A4D8               	btfss	status,2,c
 18209  01400E  D7C6               	goto	l3833
 18210                           
 18211                           ; BSR set to: 0
 18212                           
 18213                           ; BSR set to: 0
 18214  014010  0E00               	movlw	0
 18215  014012  6F61               	movwf	(?_strncmp+1)& (0+255),b
 18216  014014  0E00               	movlw	0
 18217  014016  6F60               	movwf	?_strncmp& (0+255),b
 18218  014018  0012               	return	
 18219  01401A                     __end_of_strncmp:
 18220                           	opt stack 0
 18221                           tblptru	equ	0xFF8
 18222                           tblptrh	equ	0xFF7
 18223                           tblptrl	equ	0xFF6
 18224                           tablat	equ	0xFF5
 18225                           prodh	equ	0xFF4
 18226                           prodl	equ	0xFF3
 18227                           postinc0	equ	0xFEE
 18228                           wreg	equ	0xFE8
 18229                           postinc1	equ	0xFE6
 18230                           postdec1	equ	0xFE5
 18231                           plusw1	equ	0xFE3
 18232                           fsr1h	equ	0xFE2
 18233                           fsr1l	equ	0xFE1
 18234                           indf2	equ	0xFDF
 18235                           postinc2	equ	0xFDE
 18236                           postdec2	equ	0xFDD
 18237                           plusw2	equ	0xFDB
 18238                           fsr2h	equ	0xFDA
 18239                           fsr2l	equ	0xFD9
 18240                           status	equ	0xFD8
 18241                           
 18242 ;; *************** function __parse_item *****************
 18243 ;; Defined at:
 18244 ;;		line 110 in file "config_file.c"
 18245 ;; Parameters:    Size  Location     Type
 18246 ;;  item_string     2   57[BANK0 ] PTR unsigned char 
 18247 ;;		 -> configFile_read@item_string(31), 
 18248 ;;  value_string    2   59[BANK0 ] PTR unsigned char 
 18249 ;;		 -> configFile_read@value_string(12), 
 18250 ;; Auto vars:     Size  Location     Type
 18251 ;;		None
 18252 ;; Return value:  Size  Location     Type
 18253 ;;                  1    wreg      unsigned char 
 18254 ;; Registers used:
 18255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18256 ;; Tracked objects:
 18257 ;;		On entry : 0/0
 18258 ;;		On exit  : 0/0
 18259 ;;		Unchanged: 0/0
 18260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18261 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18264 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18265 ;;Total ram usage:        4 bytes
 18266 ;; Hardware stack levels used:    1
 18267 ;; Hardware stack levels required when called:   12
 18268 ;; This function calls:
 18269 ;;		__steps_from_degrees
 18270 ;;		_atoi
 18271 ;;		_atol
 18272 ;;		_stricmp
 18273 ;; This function is called by:
 18274 ;;		_configFile_read
 18275 ;; This function uses a non-reentrant model
 18276 ;;
 18277                           
 18278                           	psect	text75
 18279  00C176                     __ptext75:
 18280                           	opt stack 0
 18281  00C176                     __parse_item:
 18282                           	opt stack 16
 18283                           
 18284                           ;config_file.c: 112: if(stricmp(item_string, full_circle_in_steps_string)==0)
 18285                           
 18286                           ; BSR set to: 0
 18287                           ;incstack = 0
 18288  00C176  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18289  00C17A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18290  00C17E  0EFD               	movlw	low _full_circle_in_steps_string
 18291  00C180  0100               	movlb	0	; () banked
 18292  00C182  6F63               	movwf	stricmp@s2& (0+255),b
 18293  00C184  0EA1               	movlw	high _full_circle_in_steps_string
 18294  00C186  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18295  00C188  ECDC  F0A4         	call	_stricmp	;wreg free
 18296  00C18C  0100               	movlb	0	; () banked
 18297  00C18E  5161               	movf	?_stricmp& (0+255),w,b
 18298  00C190  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18299  00C192  A4D8               	btfss	status,2,c
 18300  00C194  D00F               	goto	l3038
 18301                           
 18302                           ; BSR set to: 0
 18303                           ;config_file.c: 113: {;config_file.c: 114: config.full_circle_in_steps = atol(value_stri
      +                          ng);
 18304  00C196  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18305  00C19A  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18306  00C19E  EC10  F08C         	call	_atol	;wreg free
 18307  00C1A2  C06C  F196         	movff	?_atol,_config
 18308  00C1A6  C06D  F197         	movff	?_atol+1,_config+1
 18309  00C1AA  C06E  F198         	movff	?_atol+2,_config+2
 18310  00C1AE  C06F  F199         	movff	?_atol+3,_config+3
 18311                           
 18312                           ;config_file.c: 115: return 1;;	Return value of __parse_item is never used
 18313  00C1B2  0012               	return	
 18314  00C1B4                     l3038:
 18315                           
 18316                           ;config_file.c: 116: };config_file.c: 118: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18317  00C1B4  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18318  00C1B8  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18319  00C1BC  0E12               	movlw	low _overshoot_in_steps_string
 18320  00C1BE  0100               	movlb	0	; () banked
 18321  00C1C0  6F63               	movwf	stricmp@s2& (0+255),b
 18322  00C1C2  0EA2               	movlw	high _overshoot_in_steps_string
 18323  00C1C4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18324  00C1C6  ECDC  F0A4         	call	_stricmp	;wreg free
 18325  00C1CA  0100               	movlb	0	; () banked
 18326  00C1CC  5161               	movf	?_stricmp& (0+255),w,b
 18327  00C1CE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18328  00C1D0  A4D8               	btfss	status,2,c
 18329  00C1D2  D00B               	goto	l3040
 18330                           
 18331                           ; BSR set to: 0
 18332                           ;config_file.c: 119: {;config_file.c: 120: config.overshoot_in_steps = atoi(value_string
      +                          );
 18333  00C1D4  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18334  00C1D8  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18335  00C1DC  ECE4  F092         	call	_atoi	;wreg free
 18336  00C1E0  C066  F19B         	movff	?_atoi,_config+5
 18337  00C1E4  C067  F19C         	movff	?_atoi+1,_config+6
 18338                           
 18339                           ;config_file.c: 121: return 2;;	Return value of __parse_item is never used
 18340  00C1E8  0012               	return	
 18341  00C1EA                     l3040:
 18342                           
 18343                           ;config_file.c: 122: };config_file.c: 124: if(stricmp(item_string, inverse_direction_str
      +                          ing)==0)
 18344  00C1EA  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18345  00C1EE  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18346  00C1F2  0E49               	movlw	low _inverse_direction_string
 18347  00C1F4  0100               	movlb	0	; () banked
 18348  00C1F6  6F63               	movwf	stricmp@s2& (0+255),b
 18349  00C1F8  0EA2               	movlw	high _inverse_direction_string
 18350  00C1FA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18351  00C1FC  ECDC  F0A4         	call	_stricmp	;wreg free
 18352  00C200  0100               	movlb	0	; () banked
 18353  00C202  5161               	movf	?_stricmp& (0+255),w,b
 18354  00C204  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18355  00C206  A4D8               	btfss	status,2,c
 18356  00C208  D00B               	goto	l3041
 18357                           
 18358                           ; BSR set to: 0
 18359                           ;config_file.c: 125: {;config_file.c: 126: config.inverse_direction = atol(value_string)
      +                          ;
 18360  00C20A  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18361  00C20E  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18362  00C212  EC10  F08C         	call	_atol	;wreg free
 18363  00C216  0100               	movlb	0	; () banked
 18364  00C218  516C               	movf	?_atol& (0+255),w,b
 18365  00C21A  0101               	movlb	1	; () banked
 18366  00C21C  6F9A               	movwf	(_config+4)& (0+255),b
 18367                           
 18368                           ; BSR set to: 1
 18369                           ;config_file.c: 127: return 3;;	Return value of __parse_item is never used
 18370  00C21E  0012               	return	
 18371  00C220                     l3041:
 18372                           
 18373                           ;config_file.c: 128: };config_file.c: 130: if(stricmp(item_string, overshoot_in_steps_st
      +                          ring)==0)
 18374                           
 18375                           ; BSR set to: 1
 18376  00C220  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18377  00C224  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18378  00C228  0E12               	movlw	low _overshoot_in_steps_string
 18379  00C22A  0100               	movlb	0	; () banked
 18380  00C22C  6F63               	movwf	stricmp@s2& (0+255),b
 18381  00C22E  0EA2               	movlw	high _overshoot_in_steps_string
 18382  00C230  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18383  00C232  ECDC  F0A4         	call	_stricmp	;wreg free
 18384  00C236  0100               	movlb	0	; () banked
 18385  00C238  5161               	movf	?_stricmp& (0+255),w,b
 18386  00C23A  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18387  00C23C  A4D8               	btfss	status,2,c
 18388  00C23E  D00B               	goto	l3042
 18389                           
 18390                           ; BSR set to: 0
 18391                           ;config_file.c: 131: {;config_file.c: 132: config.overshoot_in_steps = atoi(value_string
      +                          );
 18392  00C240  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18393  00C244  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18394  00C248  ECE4  F092         	call	_atoi	;wreg free
 18395  00C24C  C066  F19B         	movff	?_atoi,_config+5
 18396  00C250  C067  F19C         	movff	?_atoi+1,_config+6
 18397                           
 18398                           ;config_file.c: 133: return 4;;	Return value of __parse_item is never used
 18399  00C254  0012               	return	
 18400  00C256                     l3042:
 18401                           
 18402                           ;config_file.c: 134: };config_file.c: 136: if(stricmp(item_string, overshoot_cost_in_ste
      +                          ps_string)==0)
 18403  00C256  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18404  00C25A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18405  00C25E  0EBB               	movlw	low _overshoot_cost_in_steps_string
 18406  00C260  0100               	movlb	0	; () banked
 18407  00C262  6F63               	movwf	stricmp@s2& (0+255),b
 18408  00C264  0EA1               	movlw	high _overshoot_cost_in_steps_string
 18409  00C266  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18410  00C268  ECDC  F0A4         	call	_stricmp	;wreg free
 18411  00C26C  0100               	movlb	0	; () banked
 18412  00C26E  5161               	movf	?_stricmp& (0+255),w,b
 18413  00C270  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18414  00C272  A4D8               	btfss	status,2,c
 18415  00C274  D00B               	goto	l3043
 18416                           
 18417                           ; BSR set to: 0
 18418                           ;config_file.c: 137: {;config_file.c: 138: config.overshoot_cost_in_steps = atoi(value_s
      +                          tring);
 18419  00C276  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18420  00C27A  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18421  00C27E  ECE4  F092         	call	_atoi	;wreg free
 18422  00C282  C066  F19D         	movff	?_atoi,_config+7
 18423  00C286  C067  F19E         	movff	?_atoi+1,_config+8
 18424                           
 18425                           ;config_file.c: 139: return 5;;	Return value of __parse_item is never used
 18426  00C28A  0012               	return	
 18427  00C28C                     l3043:
 18428                           
 18429                           ;config_file.c: 140: };config_file.c: 142: if(stricmp(item_string, minimum_speed_string)
      +                          ==0)
 18430  00C28C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18431  00C290  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18432  00C294  0E97               	movlw	low _minimum_speed_string
 18433  00C296  0100               	movlb	0	; () banked
 18434  00C298  6F63               	movwf	stricmp@s2& (0+255),b
 18435  00C29A  0EA2               	movlw	high _minimum_speed_string
 18436  00C29C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18437  00C29E  ECDC  F0A4         	call	_stricmp	;wreg free
 18438  00C2A2  0100               	movlb	0	; () banked
 18439  00C2A4  5161               	movf	?_stricmp& (0+255),w,b
 18440  00C2A6  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18441  00C2A8  A4D8               	btfss	status,2,c
 18442  00C2AA  D00B               	goto	l3044
 18443                           
 18444                           ; BSR set to: 0
 18445                           ;config_file.c: 143: {;config_file.c: 144: config.minimum_speed = atoi(value_string);
 18446  00C2AC  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18447  00C2B0  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18448  00C2B4  ECE4  F092         	call	_atoi	;wreg free
 18449  00C2B8  C066  F19F         	movff	?_atoi,_config+9
 18450  00C2BC  C067  F1A0         	movff	?_atoi+1,_config+10
 18451                           
 18452                           ;config_file.c: 145: return 6;;	Return value of __parse_item is never used
 18453  00C2C0  0012               	return	
 18454  00C2C2                     l3044:
 18455                           
 18456                           ;config_file.c: 146: };config_file.c: 148: if(stricmp(item_string, maximum_speed_string)
      +                          ==0)
 18457  00C2C2  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18458  00C2C6  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18459  00C2CA  0E89               	movlw	low _maximum_speed_string
 18460  00C2CC  0100               	movlb	0	; () banked
 18461  00C2CE  6F63               	movwf	stricmp@s2& (0+255),b
 18462  00C2D0  0EA2               	movlw	high _maximum_speed_string
 18463  00C2D2  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18464  00C2D4  ECDC  F0A4         	call	_stricmp	;wreg free
 18465  00C2D8  0100               	movlb	0	; () banked
 18466  00C2DA  5161               	movf	?_stricmp& (0+255),w,b
 18467  00C2DC  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18468  00C2DE  A4D8               	btfss	status,2,c
 18469  00C2E0  D00B               	goto	l3045
 18470                           
 18471                           ; BSR set to: 0
 18472                           ;config_file.c: 149: {;config_file.c: 150: config.maximum_speed = atoi(value_string);
 18473  00C2E2  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18474  00C2E6  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18475  00C2EA  ECE4  F092         	call	_atoi	;wreg free
 18476  00C2EE  C066  F1A1         	movff	?_atoi,_config+11
 18477  00C2F2  C067  F1A2         	movff	?_atoi+1,_config+12
 18478                           
 18479                           ;config_file.c: 151: return 7;;	Return value of __parse_item is never used
 18480  00C2F6  0012               	return	
 18481  00C2F8                     l3045:
 18482                           
 18483                           ;config_file.c: 152: };config_file.c: 154: if(stricmp(item_string, initial_speed_arc_str
      +                          ing)==0)
 18484  00C2F8  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18485  00C2FC  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18486  00C300  0E37               	movlw	low _initial_speed_arc_string
 18487  00C302  0100               	movlb	0	; () banked
 18488  00C304  6F63               	movwf	stricmp@s2& (0+255),b
 18489  00C306  0EA2               	movlw	high _initial_speed_arc_string
 18490  00C308  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18491  00C30A  ECDC  F0A4         	call	_stricmp	;wreg free
 18492  00C30E  0100               	movlb	0	; () banked
 18493  00C310  5161               	movf	?_stricmp& (0+255),w,b
 18494  00C312  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18495  00C314  A4D8               	btfss	status,2,c
 18496  00C316  D00B               	goto	l3046
 18497                           
 18498                           ; BSR set to: 0
 18499                           ;config_file.c: 155: {;config_file.c: 156: config.initial_speed_arc = atoi(value_string)
      +                          ;
 18500  00C318  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18501  00C31C  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18502  00C320  ECE4  F092         	call	_atoi	;wreg free
 18503  00C324  C066  F1A3         	movff	?_atoi,_config+13
 18504  00C328  C067  F1A4         	movff	?_atoi+1,_config+14
 18505                           
 18506                           ;config_file.c: 157: return 8;;	Return value of __parse_item is never used
 18507  00C32C  0012               	return	
 18508  00C32E                     l3046:
 18509                           
 18510                           ;config_file.c: 158: };config_file.c: 160: if(stricmp(item_string, maximum_speed_arc_str
      +                          ing)==0)
 18511  00C32E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18512  00C332  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18513  00C336  0E25               	movlw	low _maximum_speed_arc_string
 18514  00C338  0100               	movlb	0	; () banked
 18515  00C33A  6F63               	movwf	stricmp@s2& (0+255),b
 18516  00C33C  0EA2               	movlw	high _maximum_speed_arc_string
 18517  00C33E  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18518  00C340  ECDC  F0A4         	call	_stricmp	;wreg free
 18519  00C344  0100               	movlb	0	; () banked
 18520  00C346  5161               	movf	?_stricmp& (0+255),w,b
 18521  00C348  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18522  00C34A  A4D8               	btfss	status,2,c
 18523  00C34C  D00B               	goto	l3047
 18524                           
 18525                           ; BSR set to: 0
 18526                           ;config_file.c: 161: {;config_file.c: 162: config.maximum_speed_arc = atoi(value_string)
      +                          ;
 18527  00C34E  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18528  00C352  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18529  00C356  ECE4  F092         	call	_atoi	;wreg free
 18530  00C35A  C066  F1A5         	movff	?_atoi,_config+15
 18531  00C35E  C067  F1A6         	movff	?_atoi+1,_config+16
 18532                           
 18533                           ;config_file.c: 163: return 9;;	Return value of __parse_item is never used
 18534  00C362  0012               	return	
 18535  00C364                     l3047:
 18536                           
 18537                           ;config_file.c: 164: };config_file.c: 166: if(stricmp(item_string, initial_speed_manual_
      +                          string)==0)
 18538  00C364  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18539  00C368  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18540  00C36C  0EE8               	movlw	low _initial_speed_manual_string
 18541  00C36E  0100               	movlb	0	; () banked
 18542  00C370  6F63               	movwf	stricmp@s2& (0+255),b
 18543  00C372  0EA1               	movlw	high _initial_speed_manual_string
 18544  00C374  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18545  00C376  ECDC  F0A4         	call	_stricmp	;wreg free
 18546  00C37A  0100               	movlb	0	; () banked
 18547  00C37C  5161               	movf	?_stricmp& (0+255),w,b
 18548  00C37E  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18549  00C380  A4D8               	btfss	status,2,c
 18550  00C382  D00B               	goto	l3048
 18551                           
 18552                           ; BSR set to: 0
 18553                           ;config_file.c: 167: {;config_file.c: 168: config.initial_speed_manual = atoi(value_stri
      +                          ng);
 18554  00C384  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18555  00C388  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18556  00C38C  ECE4  F092         	call	_atoi	;wreg free
 18557  00C390  C066  F1A7         	movff	?_atoi,_config+17
 18558  00C394  C067  F1A8         	movff	?_atoi+1,_config+18
 18559                           
 18560                           ;config_file.c: 169: return 10;;	Return value of __parse_item is never used
 18561  00C398  0012               	return	
 18562  00C39A                     l3048:
 18563                           
 18564                           ;config_file.c: 170: };config_file.c: 172: if(stricmp(item_string, maximum_speed_manual_
      +                          string)==0)
 18565  00C39A  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18566  00C39E  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18567  00C3A2  0ED3               	movlw	low _maximum_speed_manual_string
 18568  00C3A4  0100               	movlb	0	; () banked
 18569  00C3A6  6F63               	movwf	stricmp@s2& (0+255),b
 18570  00C3A8  0EA1               	movlw	high _maximum_speed_manual_string
 18571  00C3AA  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18572  00C3AC  ECDC  F0A4         	call	_stricmp	;wreg free
 18573  00C3B0  0100               	movlb	0	; () banked
 18574  00C3B2  5161               	movf	?_stricmp& (0+255),w,b
 18575  00C3B4  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18576  00C3B6  A4D8               	btfss	status,2,c
 18577  00C3B8  D00B               	goto	l3049
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;config_file.c: 173: {;config_file.c: 174: config.maximum_speed_manual = atoi(value_stri
      +                          ng);
 18581  00C3BA  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18582  00C3BE  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18583  00C3C2  ECE4  F092         	call	_atoi	;wreg free
 18584  00C3C6  C066  F1A9         	movff	?_atoi,_config+19
 18585  00C3CA  C067  F1AA         	movff	?_atoi+1,_config+20
 18586                           
 18587                           ;config_file.c: 175: return 11;;	Return value of __parse_item is never used
 18588  00C3CE  0012               	return	
 18589  00C3D0                     l3049:
 18590                           
 18591                           ;config_file.c: 176: };config_file.c: 178: if(stricmp(item_string, beep_duration_string)
      +                          ==0)
 18592  00C3D0  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18593  00C3D4  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18594  00C3D8  0E7B               	movlw	low _beep_duration_string
 18595  00C3DA  0100               	movlb	0	; () banked
 18596  00C3DC  6F63               	movwf	stricmp@s2& (0+255),b
 18597  00C3DE  0EA2               	movlw	high _beep_duration_string
 18598  00C3E0  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18599  00C3E2  ECDC  F0A4         	call	_stricmp	;wreg free
 18600  00C3E6  0100               	movlb	0	; () banked
 18601  00C3E8  5161               	movf	?_stricmp& (0+255),w,b
 18602  00C3EA  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18603  00C3EC  A4D8               	btfss	status,2,c
 18604  00C3EE  D00B               	goto	l3050
 18605                           
 18606                           ; BSR set to: 0
 18607                           ;config_file.c: 179: {;config_file.c: 180: config.beep_duration = atoi(value_string);
 18608  00C3F0  C09B  F066         	movff	__parse_item@value_string,atoi@s
 18609  00C3F4  C09C  F067         	movff	__parse_item@value_string+1,atoi@s+1
 18610  00C3F8  ECE4  F092         	call	_atoi	;wreg free
 18611  00C3FC  0100               	movlb	0	; () banked
 18612  00C3FE  5166               	movf	?_atoi& (0+255),w,b
 18613  00C400  0101               	movlb	1	; () banked
 18614  00C402  6FAB               	movwf	(_config+21)& (0+255),b
 18615                           
 18616                           ; BSR set to: 1
 18617                           ;config_file.c: 181: return 12;;	Return value of __parse_item is never used
 18618  00C404  0012               	return	
 18619  00C406                     l3050:
 18620                           
 18621                           ;config_file.c: 182: };config_file.c: 184: if(stricmp(item_string, use_cw_limit_string)=
      +                          =0)
 18622                           
 18623                           ; BSR set to: 1
 18624  00C406  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18625  00C40A  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18626  00C40E  0EA5               	movlw	low _use_cw_limit_string
 18627  00C410  0100               	movlb	0	; () banked
 18628  00C412  6F63               	movwf	stricmp@s2& (0+255),b
 18629  00C414  0EA2               	movlw	high _use_cw_limit_string
 18630  00C416  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18631  00C418  ECDC  F0A4         	call	_stricmp	;wreg free
 18632  00C41C  0100               	movlb	0	; () banked
 18633  00C41E  5161               	movf	?_stricmp& (0+255),w,b
 18634  00C420  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18635  00C422  A4D8               	btfss	status,2,c
 18636  00C424  D00B               	goto	l3051
 18637                           
 18638                           ; BSR set to: 0
 18639                           ;config_file.c: 185: {;config_file.c: 186: config.use_cw_limit = atol(value_string);
 18640  00C426  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18641  00C42A  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18642  00C42E  EC10  F08C         	call	_atol	;wreg free
 18643  00C432  0100               	movlb	0	; () banked
 18644  00C434  516C               	movf	?_atol& (0+255),w,b
 18645  00C436  0101               	movlb	1	; () banked
 18646  00C438  6FAC               	movwf	(_config+22)& (0+255),b
 18647                           
 18648                           ; BSR set to: 1
 18649                           ;config_file.c: 187: return 13;;	Return value of __parse_item is never used
 18650  00C43A  0012               	return	
 18651  00C43C                     l3051:
 18652                           
 18653                           ;config_file.c: 188: };config_file.c: 190: if(stricmp(item_string, cw_limit_string)==0)
 18654                           
 18655                           ; BSR set to: 1
 18656  00C43C  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18657  00C440  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18658  00C444  0EBC               	movlw	low _cw_limit_string
 18659  00C446  0100               	movlb	0	; () banked
 18660  00C448  6F63               	movwf	stricmp@s2& (0+255),b
 18661  00C44A  0EA2               	movlw	high _cw_limit_string
 18662  00C44C  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18663  00C44E  ECDC  F0A4         	call	_stricmp	;wreg free
 18664  00C452  0100               	movlb	0	; () banked
 18665  00C454  5161               	movf	?_stricmp& (0+255),w,b
 18666  00C456  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18667  00C458  A4D8               	btfss	status,2,c
 18668  00C45A  D021               	goto	l3052
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;config_file.c: 191: {;config_file.c: 192: config.cw_limit = atol(value_string);
 18672  00C45C  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18673  00C460  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18674  00C464  EC10  F08C         	call	_atol	;wreg free
 18675  00C468  C06C  F1AD         	movff	?_atol,_config+23
 18676  00C46C  C06D  F1AE         	movff	?_atol+1,_config+24
 18677  00C470  C06E  F1AF         	movff	?_atol+2,_config+25
 18678  00C474  C06F  F1B0         	movff	?_atol+3,_config+26
 18679                           
 18680                           ;config_file.c: 193: config.cw_limit_in_steps = _steps_from_degrees(config.cw_limit);
 18681  00C478  C1AD  F091         	movff	_config+23,__steps_from_degrees@degrees
 18682  00C47C  C1AE  F092         	movff	_config+24,__steps_from_degrees@degrees+1
 18683  00C480  C1AF  F093         	movff	_config+25,__steps_from_degrees@degrees+2
 18684  00C484  C1B0  F094         	movff	_config+26,__steps_from_degrees@degrees+3
 18685  00C488  ECAA  F077         	call	__steps_from_degrees	;wreg free
 18686  00C48C  C091  F1B1         	movff	?__steps_from_degrees,_config+27
 18687  00C490  C092  F1B2         	movff	?__steps_from_degrees+1,_config+28
 18688  00C494  C093  F1B3         	movff	?__steps_from_degrees+2,_config+29
 18689  00C498  C094  F1B4         	movff	?__steps_from_degrees+3,_config+30
 18690                           
 18691                           ;config_file.c: 194: return 14;;	Return value of __parse_item is never used
 18692  00C49C  0012               	return	
 18693  00C49E                     l3052:
 18694                           
 18695                           ;config_file.c: 195: };config_file.c: 197: if(stricmp(item_string, use_ccw_limit_string)
      +                          ==0)
 18696  00C49E  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18697  00C4A2  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18698  00C4A6  0E6D               	movlw	low _use_ccw_limit_string
 18699  00C4A8  0100               	movlb	0	; () banked
 18700  00C4AA  6F63               	movwf	stricmp@s2& (0+255),b
 18701  00C4AC  0EA2               	movlw	high _use_ccw_limit_string
 18702  00C4AE  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18703  00C4B0  ECDC  F0A4         	call	_stricmp	;wreg free
 18704  00C4B4  0100               	movlb	0	; () banked
 18705  00C4B6  5161               	movf	?_stricmp& (0+255),w,b
 18706  00C4B8  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18707  00C4BA  A4D8               	btfss	status,2,c
 18708  00C4BC  D00B               	goto	l3053
 18709                           
 18710                           ; BSR set to: 0
 18711                           ;config_file.c: 198: {;config_file.c: 199: config.use_ccw_limit = atol(value_string);
 18712  00C4BE  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18713  00C4C2  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18714  00C4C6  EC10  F08C         	call	_atol	;wreg free
 18715  00C4CA  0100               	movlb	0	; () banked
 18716  00C4CC  516C               	movf	?_atol& (0+255),w,b
 18717  00C4CE  0101               	movlb	1	; () banked
 18718  00C4D0  6FB5               	movwf	(_config+31)& (0+255),b
 18719                           
 18720                           ; BSR set to: 1
 18721                           ;config_file.c: 200: return 15;;	Return value of __parse_item is never used
 18722  00C4D2  0012               	return	
 18723  00C4D4                     l3053:
 18724                           
 18725                           ;config_file.c: 201: };config_file.c: 203: if(stricmp(item_string, ccw_limit_string)==0)
 18726                           
 18727                           ; BSR set to: 1
 18728  00C4D4  C099  F061         	movff	__parse_item@item_string,stricmp@s1
 18729  00C4D8  C09A  F062         	movff	__parse_item@item_string+1,stricmp@s1+1
 18730  00C4DC  0EB2               	movlw	low _ccw_limit_string
 18731  00C4DE  0100               	movlb	0	; () banked
 18732  00C4E0  6F63               	movwf	stricmp@s2& (0+255),b
 18733  00C4E2  0EA2               	movlw	high _ccw_limit_string
 18734  00C4E4  6F64               	movwf	(stricmp@s2+1)& (0+255),b
 18735  00C4E6  ECDC  F0A4         	call	_stricmp	;wreg free
 18736  00C4EA  0100               	movlb	0	; () banked
 18737  00C4EC  5161               	movf	?_stricmp& (0+255),w,b
 18738  00C4EE  1162               	iorwf	(?_stricmp+1)& (0+255),w,b
 18739  00C4F0  A4D8               	btfss	status,2,c
 18740  00C4F2  0012               	return	
 18741                           
 18742                           ; BSR set to: 0
 18743                           ;config_file.c: 204: {;config_file.c: 205: config.ccw_limit = atol(value_string);
 18744  00C4F4  C09B  F06C         	movff	__parse_item@value_string,atol@s
 18745  00C4F8  C09C  F06D         	movff	__parse_item@value_string+1,atol@s+1
 18746  00C4FC  EC10  F08C         	call	_atol	;wreg free
 18747  00C500  C06C  F1B6         	movff	?_atol,_config+32
 18748  00C504  C06D  F1B7         	movff	?_atol+1,_config+33
 18749  00C508  C06E  F1B8         	movff	?_atol+2,_config+34
 18750  00C50C  C06F  F1B9         	movff	?_atol+3,_config+35
 18751                           
 18752                           ;config_file.c: 206: config.ccw_limit_in_steps = _steps_from_degrees(config.ccw_limit);
 18753  00C510  C1B6  F091         	movff	_config+32,__steps_from_degrees@degrees
 18754  00C514  C1B7  F092         	movff	_config+33,__steps_from_degrees@degrees+1
 18755  00C518  C1B8  F093         	movff	_config+34,__steps_from_degrees@degrees+2
 18756  00C51C  C1B9  F094         	movff	_config+35,__steps_from_degrees@degrees+3
 18757  00C520  ECAA  F077         	call	__steps_from_degrees	;wreg free
 18758  00C524  C091  F1BA         	movff	?__steps_from_degrees,_config+36
 18759  00C528  C092  F1BB         	movff	?__steps_from_degrees+1,_config+37
 18760  00C52C  C093  F1BC         	movff	?__steps_from_degrees+2,_config+38
 18761  00C530  C094  F1BD         	movff	?__steps_from_degrees+3,_config+39
 18762                           
 18763                           ;config_file.c: 207: return 16;;	Return value of __parse_item is never used
 18764  00C534  0012               	return	
 18765  00C536                     __end_of__parse_item:
 18766                           	opt stack 0
 18767                           tblptru	equ	0xFF8
 18768                           tblptrh	equ	0xFF7
 18769                           tblptrl	equ	0xFF6
 18770                           tablat	equ	0xFF5
 18771                           prodh	equ	0xFF4
 18772                           prodl	equ	0xFF3
 18773                           postinc0	equ	0xFEE
 18774                           wreg	equ	0xFE8
 18775                           postinc1	equ	0xFE6
 18776                           postdec1	equ	0xFE5
 18777                           plusw1	equ	0xFE3
 18778                           fsr1h	equ	0xFE2
 18779                           fsr1l	equ	0xFE1
 18780                           indf2	equ	0xFDF
 18781                           postinc2	equ	0xFDE
 18782                           postdec2	equ	0xFDD
 18783                           plusw2	equ	0xFDB
 18784                           fsr2h	equ	0xFDA
 18785                           fsr2l	equ	0xFD9
 18786                           status	equ	0xFD8
 18787                           
 18788 ;; *************** function _stricmp *****************
 18789 ;; Defined at:
 18790 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\stricmp.c"
 18791 ;; Parameters:    Size  Location     Type
 18792 ;;  s1              2    1[BANK0 ] PTR const unsigned char 
 18793 ;;		 -> configFile_read@item_string(31), 
 18794 ;;  s2              2    3[BANK0 ] PTR const unsigned char 
 18795 ;;		 -> ccw_limit_string(10), use_ccw_limit_string(14), cw_limit_string(9), use_cw_limit_string(13), 
 18796 ;;		 -> beep_duration_string(14), maximum_speed_manual_string(21), initial_speed_manual_string(21), maximum_speed_arc_st
      +ring(18), 
 18797 ;;		 -> initial_speed_arc_string(18), maximum_speed_string(14), minimum_speed_string(14), overshoot_cost_in_steps_string
      +(24), 
 18798 ;;		 -> inverse_direction_string(18), overshoot_in_steps_string(19), full_circle_in_steps_string(21), 
 18799 ;; Auto vars:     Size  Location     Type
 18800 ;;  r               1    6[BANK0 ] char 
 18801 ;; Return value:  Size  Location     Type
 18802 ;;                  2    1[BANK0 ] int 
 18803 ;; Registers used:
 18804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18805 ;; Tracked objects:
 18806 ;;		On entry : 0/0
 18807 ;;		On exit  : 0/0
 18808 ;;		Unchanged: 0/0
 18809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18810 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18811 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18812 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18813 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18814 ;;Total ram usage:        6 bytes
 18815 ;; Hardware stack levels used:    1
 18816 ;; Hardware stack levels required when called:   11
 18817 ;; This function calls:
 18818 ;;		_toupper
 18819 ;; This function is called by:
 18820 ;;		__parse_item
 18821 ;; This function uses a non-reentrant model
 18822 ;;
 18823                           
 18824                           	psect	text76
 18825  0149B8                     __ptext76:
 18826                           	opt stack 0
 18827  0149B8                     _stricmp:
 18828                           	opt stack 16
 18829                           
 18830                           ;incstack = 0
 18831  0149B8  D005               	goto	l3818
 18832  0149BA  0100               	movlb	0	; () banked
 18833  0149BC  4B61               	infsnz	stricmp@s1& (0+255),f,b
 18834  0149BE  2B62               	incf	(stricmp@s1+1)& (0+255),f,b
 18835  0149C0  4B63               	infsnz	stricmp@s2& (0+255),f,b
 18836  0149C2  2B64               	incf	(stricmp@s2+1)& (0+255),f,b
 18837  0149C4                     l3818:
 18838                           
 18839                           ; BSR set to: 0
 18840  0149C4  C063  FFF6         	movff	stricmp@s2,tblptrl
 18841  0149C8  C064  FFF7         	movff	stricmp@s2+1,tblptrh
 18842  0149CC                     	if	0	;tblptru may be non-zero
 18843  0149CC                     	endif
 18844  0149CC                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 18845  0149CC  0E00               	movlw	low (__mediumconst shr (0+16))
 18846  0149CE  6EF8               	movwf	tblptru,c
 18847  0149D0                     	endif
 18848  0149D0  0008               	tblrd		*
 18849  0149D2  50F5               	movf	tablat,w,c
 18850  0149D4  EC42  F0AE         	call	_toupper
 18851  0149D8  0800               	sublw	0
 18852  0149DA  0100               	movlb	0	; () banked
 18853  0149DC  6F65               	movwf	??_stricmp& (0+255),b
 18854  0149DE  C061  FFD9         	movff	stricmp@s1,fsr2l
 18855  0149E2  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18856  0149E6  50DF               	movf	indf2,w,c
 18857  0149E8  EC42  F0AE         	call	_toupper
 18858  0149EC  0100               	movlb	0	; () banked
 18859  0149EE  2565               	addwf	??_stricmp& (0+255),w,b
 18860  0149F0  6F66               	movwf	stricmp@r& (0+255),b
 18861  0149F2  5166               	movf	stricmp@r& (0+255),w,b
 18862  0149F4  A4D8               	btfss	status,2,c
 18863  0149F6  D007               	goto	u14330
 18864                           
 18865                           ; BSR set to: 0
 18866  0149F8  C061  FFD9         	movff	stricmp@s1,fsr2l
 18867  0149FC  C062  FFDA         	movff	stricmp@s1+1,fsr2h
 18868  014A00  50DF               	movf	indf2,w,c
 18869  014A02  A4D8               	btfss	status,2,c
 18870  014A04  D7DA               	goto	l3819
 18871  014A06                     u14330:
 18872                           
 18873                           ; BSR set to: 0
 18874                           
 18875                           ; BSR set to: 0
 18876                           
 18877                           ; BSR set to: 0
 18878  014A06  5166               	movf	stricmp@r& (0+255),w,b
 18879  014A08  6F61               	movwf	?_stricmp& (0+255),b
 18880  014A0A  6B62               	clrf	(?_stricmp+1)& (0+255),b
 18881  014A0C  BF61               	btfsc	?_stricmp& (0+255),7,b
 18882  014A0E  0762               	decf	(?_stricmp+1)& (0+255),f,b
 18883  014A10  0012               	return	
 18884  014A12                     __end_of_stricmp:
 18885                           	opt stack 0
 18886                           tblptru	equ	0xFF8
 18887                           tblptrh	equ	0xFF7
 18888                           tblptrl	equ	0xFF6
 18889                           tablat	equ	0xFF5
 18890                           prodh	equ	0xFF4
 18891                           prodl	equ	0xFF3
 18892                           postinc0	equ	0xFEE
 18893                           wreg	equ	0xFE8
 18894                           postinc1	equ	0xFE6
 18895                           postdec1	equ	0xFE5
 18896                           plusw1	equ	0xFE3
 18897                           fsr1h	equ	0xFE2
 18898                           fsr1l	equ	0xFE1
 18899                           indf2	equ	0xFDF
 18900                           postinc2	equ	0xFDE
 18901                           postdec2	equ	0xFDD
 18902                           plusw2	equ	0xFDB
 18903                           fsr2h	equ	0xFDA
 18904                           fsr2l	equ	0xFD9
 18905                           status	equ	0xFD8
 18906                           
 18907 ;; *************** function _toupper *****************
 18908 ;; Defined at:
 18909 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\toupper.c"
 18910 ;; Parameters:    Size  Location     Type
 18911 ;;  c               1    wreg     unsigned char 
 18912 ;; Auto vars:     Size  Location     Type
 18913 ;;  c               1    0[BANK0 ] unsigned char 
 18914 ;; Return value:  Size  Location     Type
 18915 ;;                  1    wreg      unsigned char 
 18916 ;; Registers used:
 18917 ;;		wreg, status,2, status,0
 18918 ;; Tracked objects:
 18919 ;;		On entry : 0/0
 18920 ;;		On exit  : 0/0
 18921 ;;		Unchanged: 0/0
 18922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18924 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18926 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18927 ;;Total ram usage:        1 bytes
 18928 ;; Hardware stack levels used:    1
 18929 ;; Hardware stack levels required when called:   10
 18930 ;; This function calls:
 18931 ;;		Nothing
 18932 ;; This function is called by:
 18933 ;;		_stricmp
 18934 ;; This function uses a non-reentrant model
 18935 ;;
 18936                           
 18937                           	psect	text77
 18938  015C84                     __ptext77:
 18939                           	opt stack 0
 18940  015C84                     _toupper:
 18941                           	opt stack 16
 18942                           
 18943                           ; BSR set to: 0
 18944                           ;incstack = 0
 18945                           ;toupper@c stored from wreg
 18946  015C84  0100               	movlb	0	; () banked
 18947  015C86  6F60               	movwf	toupper@c& (0+255),b
 18948  015C88  0E7B               	movlw	123
 18949  015C8A  0100               	movlb	0	; () banked
 18950  015C8C  6160               	cpfslt	toupper@c& (0+255),b
 18951  015C8E  D004               	goto	l3841
 18952                           
 18953                           ; BSR set to: 0
 18954  015C90  0E60               	movlw	96
 18955  015C92  6560               	cpfsgt	toupper@c& (0+255),b
 18956  015C94  D001               	goto	l3841
 18957                           
 18958                           ; BSR set to: 0
 18959  015C96  9B60               	bcf	toupper@c& (0+255),5,b
 18960  015C98                     l3841:
 18961                           
 18962                           ; BSR set to: 0
 18963                           
 18964                           ; BSR set to: 0
 18965  015C98  5160               	movf	toupper@c& (0+255),w,b
 18966  015C9A  0012               	return	
 18967  015C9C                     __end_of_toupper:
 18968                           	opt stack 0
 18969                           tblptru	equ	0xFF8
 18970                           tblptrh	equ	0xFF7
 18971                           tblptrl	equ	0xFF6
 18972                           tablat	equ	0xFF5
 18973                           prodh	equ	0xFF4
 18974                           prodl	equ	0xFF3
 18975                           postinc0	equ	0xFEE
 18976                           wreg	equ	0xFE8
 18977                           postinc1	equ	0xFE6
 18978                           postdec1	equ	0xFE5
 18979                           plusw1	equ	0xFE3
 18980                           fsr1h	equ	0xFE2
 18981                           fsr1l	equ	0xFE1
 18982                           indf2	equ	0xFDF
 18983                           postinc2	equ	0xFDE
 18984                           postdec2	equ	0xFDD
 18985                           plusw2	equ	0xFDB
 18986                           fsr2h	equ	0xFDA
 18987                           fsr2l	equ	0xFD9
 18988                           status	equ	0xFD8
 18989                           
 18990 ;; *************** function _atol *****************
 18991 ;; Defined at:
 18992 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atol.c"
 18993 ;; Parameters:    Size  Location     Type
 18994 ;;  s               2   12[BANK0 ] PTR const unsigned char 
 18995 ;;		 -> configFile_read@value_string(12), 
 18996 ;; Auto vars:     Size  Location     Type
 18997 ;;  a               4   21[BANK0 ] long 
 18998 ;;  c               1   25[BANK0 ] unsigned char 
 18999 ;;  sign            1   20[BANK0 ] unsigned char 
 19000 ;; Return value:  Size  Location     Type
 19001 ;;                  4   12[BANK0 ] long 
 19002 ;; Registers used:
 19003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19004 ;; Tracked objects:
 19005 ;;		On entry : 0/0
 19006 ;;		On exit  : 0/0
 19007 ;;		Unchanged: 0/0
 19008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19009 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19010 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19011 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19012 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19013 ;;Total ram usage:       14 bytes
 19014 ;; Hardware stack levels used:    1
 19015 ;; Hardware stack levels required when called:   11
 19016 ;; This function calls:
 19017 ;;		___lmul
 19018 ;;		_isdigit
 19019 ;; This function is called by:
 19020 ;;		__parse_item
 19021 ;; This function uses a non-reentrant model
 19022 ;;
 19023                           
 19024                           	psect	text78
 19025  011820                     __ptext78:
 19026                           	opt stack 0
 19027  011820                     _atol:
 19028                           	opt stack 16
 19029                           
 19030                           ; BSR set to: 0
 19031                           ;incstack = 0
 19032  011820  C06C  FFD9         	movff	atol@s,fsr2l
 19033  011824  C06D  FFDA         	movff	atol@s+1,fsr2h
 19034  011828  50DF               	movf	indf2,w,c
 19035  01182A  0100               	movlb	0	; () banked
 19036  01182C  6F79               	movwf	atol@c& (0+255),b
 19037                           
 19038                           ; BSR set to: 0
 19039  01182E  4B6C               	infsnz	atol@s& (0+255),f,b
 19040  011830  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19041                           
 19042                           ; BSR set to: 0
 19043  011832  0E20               	movlw	32
 19044  011834  1979               	xorwf	atol@c& (0+255),w,b
 19045  011836  B4D8               	btfsc	status,2,c
 19046  011838  D7F3               	goto	_atol
 19047                           
 19048                           ; BSR set to: 0
 19049  01183A  0E09               	movlw	9
 19050  01183C  1979               	xorwf	atol@c& (0+255),w,b
 19051  01183E  B4D8               	btfsc	status,2,c
 19052  011840  D7EF               	goto	_atol
 19053                           
 19054                           ; BSR set to: 0
 19055                           
 19056                           ; BSR set to: 0
 19057  011842  0E00               	movlw	0
 19058  011844  6F75               	movwf	atol@a& (0+255),b
 19059  011846  0E00               	movlw	0
 19060  011848  6F76               	movwf	(atol@a+1)& (0+255),b
 19061  01184A  0E00               	movlw	0
 19062  01184C  6F77               	movwf	(atol@a+2)& (0+255),b
 19063  01184E  0E00               	movlw	0
 19064  011850  6F78               	movwf	(atol@a+3)& (0+255),b
 19065  011852  0E00               	movlw	0
 19066  011854  6F74               	movwf	atol@sign& (0+255),b
 19067                           
 19068                           ; BSR set to: 0
 19069  011856  0E2D               	movlw	45
 19070  011858  1979               	xorwf	atol@c& (0+255),w,b
 19071  01185A  A4D8               	btfss	status,2,c
 19072  01185C  D002               	goto	l3761
 19073                           
 19074                           ; BSR set to: 0
 19075  01185E  2B74               	incf	atol@sign& (0+255),f,b
 19076  011860  D029               	goto	L87
 19077  011862                     l3761:
 19078                           
 19079                           ; BSR set to: 0
 19080                           
 19081                           ; BSR set to: 0
 19082  011862  0E2B               	movlw	43
 19083  011864  1979               	xorwf	atol@c& (0+255),w,b
 19084  011866  A4D8               	btfss	status,2,c
 19085  011868  D02D               	goto	l3764
 19086  01186A  D024               	goto	L87
 19087  01186C                     
 19088                           ; BSR set to: 0
 19089  01186C  C075  F060         	movff	atol@a,___lmul@multiplier
 19090  011870  C076  F061         	movff	atol@a+1,___lmul@multiplier+1
 19091  011874  C077  F062         	movff	atol@a+2,___lmul@multiplier+2
 19092  011878  C078  F063         	movff	atol@a+3,___lmul@multiplier+3
 19093  01187C  0E0A               	movlw	10
 19094  01187E  0100               	movlb	0	; () banked
 19095  011880  6F64               	movwf	___lmul@multiplicand& (0+255),b
 19096  011882  0E00               	movlw	0
 19097  011884  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 19098  011886  0E00               	movlw	0
 19099  011888  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 19100  01188A  0E00               	movlw	0
 19101  01188C  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 19102  01188E  EC14  F0A6         	call	___lmul	;wreg free
 19103  011892  C079  F070         	movff	atol@c,??_atol
 19104  011896  0ED0               	movlw	208
 19105  011898  0100               	movlb	0	; () banked
 19106  01189A  2770               	addwf	??_atol& (0+255),f,b
 19107  01189C  5170               	movf	??_atol& (0+255),w,b
 19108  01189E  2560               	addwf	?___lmul& (0+255),w,b
 19109  0118A0  6F75               	movwf	atol@a& (0+255),b
 19110  0118A2  0E00               	movlw	0
 19111  0118A4  2161               	addwfc	(?___lmul+1)& (0+255),w,b
 19112  0118A6  6F76               	movwf	(atol@a+1)& (0+255),b
 19113  0118A8  0E00               	movlw	0
 19114  0118AA  2162               	addwfc	(?___lmul+2)& (0+255),w,b
 19115  0118AC  6F77               	movwf	(atol@a+2)& (0+255),b
 19116  0118AE  0E00               	movlw	0
 19117  0118B0  2163               	addwfc	(?___lmul+3)& (0+255),w,b
 19118  0118B2  6F78               	movwf	(atol@a+3)& (0+255),b
 19119  0118B4                     L87:
 19120                           
 19121                           ; BSR set to: 0
 19122  0118B4  C06C  FFD9         	movff	atol@s,fsr2l
 19123  0118B8  C06D  FFDA         	movff	atol@s+1,fsr2h
 19124  0118BC  50DF               	movf	indf2,w,c
 19125  0118BE  6F79               	movwf	atol@c& (0+255),b
 19126                           
 19127                           ; BSR set to: 0
 19128  0118C0  4B6C               	infsnz	atol@s& (0+255),f,b
 19129  0118C2  2B6D               	incf	(atol@s+1)& (0+255),f,b
 19130  0118C4                     l3764:
 19131                           
 19132                           ; BSR set to: 0
 19133                           
 19134                           ; BSR set to: 0
 19135  0118C4  5179               	movf	atol@c& (0+255),w,b
 19136  0118C6  EC93  F0AD         	call	_isdigit
 19137  0118CA  B0D8               	btfsc	status,0,c
 19138  0118CC  D7CF               	goto	l3765
 19139  0118CE  0100               	movlb	0	; () banked
 19140  0118D0  5174               	movf	atol@sign& (0+255),w,b
 19141  0118D2  B4D8               	btfsc	status,2,c
 19142  0118D4  D01A               	goto	l3767
 19143                           
 19144                           ; BSR set to: 0
 19145  0118D6  C075  F070         	movff	atol@a,??_atol
 19146  0118DA  C076  F071         	movff	atol@a+1,??_atol+1
 19147  0118DE  C077  F072         	movff	atol@a+2,??_atol+2
 19148  0118E2  C078  F073         	movff	atol@a+3,??_atol+3
 19149  0118E6  1F70               	comf	??_atol& (0+255),f,b
 19150  0118E8  1F71               	comf	(??_atol+1)& (0+255),f,b
 19151  0118EA  1F72               	comf	(??_atol+2)& (0+255),f,b
 19152  0118EC  1F73               	comf	(??_atol+3)& (0+255),f,b
 19153  0118EE  2B70               	incf	??_atol& (0+255),f,b
 19154  0118F0  0E00               	movlw	0
 19155  0118F2  2371               	addwfc	(??_atol+1)& (0+255),f,b
 19156  0118F4  2372               	addwfc	(??_atol+2)& (0+255),f,b
 19157  0118F6  2373               	addwfc	(??_atol+3)& (0+255),f,b
 19158  0118F8  C070  F06C         	movff	??_atol,?_atol
 19159  0118FC  C071  F06D         	movff	??_atol+1,?_atol+1
 19160  011900  C072  F06E         	movff	??_atol+2,?_atol+2
 19161  011904  C073  F06F         	movff	??_atol+3,?_atol+3
 19162                           
 19163                           ; BSR set to: 0
 19164  011908  0012               	return	
 19165  01190A                     l3767:
 19166                           
 19167                           ; BSR set to: 0
 19168  01190A  C075  F06C         	movff	atol@a,?_atol
 19169  01190E  C076  F06D         	movff	atol@a+1,?_atol+1
 19170  011912  C077  F06E         	movff	atol@a+2,?_atol+2
 19171  011916  C078  F06F         	movff	atol@a+3,?_atol+3
 19172                           
 19173                           ; BSR set to: 0
 19174  01191A  0012               	return		;funcret
 19175  01191C                     __end_of_atol:
 19176                           	opt stack 0
 19177                           tblptru	equ	0xFF8
 19178                           tblptrh	equ	0xFF7
 19179                           tblptrl	equ	0xFF6
 19180                           tablat	equ	0xFF5
 19181                           prodh	equ	0xFF4
 19182                           prodl	equ	0xFF3
 19183                           postinc0	equ	0xFEE
 19184                           wreg	equ	0xFE8
 19185                           postinc1	equ	0xFE6
 19186                           postdec1	equ	0xFE5
 19187                           plusw1	equ	0xFE3
 19188                           fsr1h	equ	0xFE2
 19189                           fsr1l	equ	0xFE1
 19190                           indf2	equ	0xFDF
 19191                           postinc2	equ	0xFDE
 19192                           postdec2	equ	0xFDD
 19193                           plusw2	equ	0xFDB
 19194                           fsr2h	equ	0xFDA
 19195                           fsr2l	equ	0xFD9
 19196                           status	equ	0xFD8
 19197                           
 19198 ;; *************** function _atoi *****************
 19199 ;; Defined at:
 19200 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\atoi.c"
 19201 ;; Parameters:    Size  Location     Type
 19202 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 19203 ;;		 -> configFile_read@value_string(12), 
 19204 ;; Auto vars:     Size  Location     Type
 19205 ;;  a               2   11[BANK0 ] int 
 19206 ;;  sign            1   10[BANK0 ] unsigned char 
 19207 ;; Return value:  Size  Location     Type
 19208 ;;                  2    6[BANK0 ] int 
 19209 ;; Registers used:
 19210 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 19211 ;; Tracked objects:
 19212 ;;		On entry : 0/0
 19213 ;;		On exit  : 0/0
 19214 ;;		Unchanged: 0/0
 19215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19216 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19217 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19218 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19219 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19220 ;;Total ram usage:        7 bytes
 19221 ;; Hardware stack levels used:    1
 19222 ;; Hardware stack levels required when called:   11
 19223 ;; This function calls:
 19224 ;;		___wmul
 19225 ;;		_isdigit
 19226 ;; This function is called by:
 19227 ;;		__parse_item
 19228 ;; This function uses a non-reentrant model
 19229 ;;
 19230                           
 19231                           	psect	text79
 19232  0125C8                     __ptext79:
 19233                           	opt stack 0
 19234  0125C8                     _atoi:
 19235                           	opt stack 16
 19236                           
 19237                           ; BSR set to: 0
 19238                           ;incstack = 0
 19239  0125C8  D003               	goto	l3744
 19240  0125CA  0100               	movlb	0	; () banked
 19241  0125CC  4B66               	infsnz	atoi@s& (0+255),f,b
 19242  0125CE  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19243  0125D0                     l3744:
 19244                           
 19245                           ; BSR set to: 0
 19246  0125D0  C066  FFD9         	movff	atoi@s,fsr2l
 19247  0125D4  C067  FFDA         	movff	atoi@s+1,fsr2h
 19248  0125D8  0E20               	movlw	32
 19249  0125DA  18DE               	xorwf	postinc2,w,c
 19250  0125DC  B4D8               	btfsc	status,2,c
 19251  0125DE  D7F5               	goto	l3745
 19252  0125E0  C066  FFD9         	movff	atoi@s,fsr2l
 19253  0125E4  C067  FFDA         	movff	atoi@s+1,fsr2h
 19254  0125E8  0E09               	movlw	9
 19255  0125EA  18DE               	xorwf	postinc2,w,c
 19256  0125EC  B4D8               	btfsc	status,2,c
 19257  0125EE  D7ED               	goto	l3745
 19258  0125F0  0E00               	movlw	0
 19259  0125F2  0100               	movlb	0	; () banked
 19260  0125F4  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19261  0125F6  0E00               	movlw	0
 19262  0125F8  6F6B               	movwf	atoi@a& (0+255),b
 19263  0125FA  0E00               	movlw	0
 19264  0125FC  6F6A               	movwf	atoi@sign& (0+255),b
 19265                           
 19266                           ; BSR set to: 0
 19267  0125FE  C066  FFD9         	movff	atoi@s,fsr2l
 19268  012602  C067  FFDA         	movff	atoi@s+1,fsr2h
 19269  012606  0E2D               	movlw	45
 19270  012608  18DE               	xorwf	postinc2,w,c
 19271  01260A  A4D8               	btfss	status,2,c
 19272  01260C  D002               	goto	l3747
 19273                           
 19274                           ; BSR set to: 0
 19275  01260E  2B6A               	incf	atoi@sign& (0+255),f,b
 19276  012610  D026               	goto	l15588
 19277  012612                     l3747:
 19278                           
 19279                           ; BSR set to: 0
 19280                           
 19281                           ; BSR set to: 0
 19282  012612  C066  FFD9         	movff	atoi@s,fsr2l
 19283  012616  C067  FFDA         	movff	atoi@s+1,fsr2h
 19284  01261A  0E2B               	movlw	43
 19285  01261C  18DE               	xorwf	postinc2,w,c
 19286  01261E  A4D8               	btfss	status,2,c
 19287  012620  D020               	goto	l3750
 19288  012622  D01D               	goto	l15588
 19289  012624                     
 19290                           ; BSR set to: 0
 19291  012624  C06B  F060         	movff	atoi@a,___wmul@multiplier
 19292  012628  C06C  F061         	movff	atoi@a+1,___wmul@multiplier+1
 19293  01262C  0E00               	movlw	0
 19294  01262E  0100               	movlb	0	; () banked
 19295  012630  6F63               	movwf	(___wmul@multiplicand+1)& (0+255),b
 19296  012632  0E0A               	movlw	10
 19297  012634  6F62               	movwf	___wmul@multiplicand& (0+255),b
 19298  012636  ECFE  F0AC         	call	___wmul	;wreg free
 19299  01263A  C066  FFD9         	movff	atoi@s,fsr2l
 19300  01263E  C067  FFDA         	movff	atoi@s+1,fsr2h
 19301  012642  50DF               	movf	indf2,w,c
 19302  012644  0100               	movlb	0	; () banked
 19303  012646  6F68               	movwf	??_atoi& (0+255),b
 19304  012648  6B69               	clrf	(??_atoi+1)& (0+255),b
 19305  01264A  5160               	movf	?___wmul& (0+255),w,b
 19306  01264C  2768               	addwf	??_atoi& (0+255),f,b
 19307  01264E  5161               	movf	(?___wmul+1)& (0+255),w,b
 19308  012650  2369               	addwfc	(??_atoi+1)& (0+255),f,b
 19309  012652  0ED0               	movlw	208
 19310  012654  2568               	addwf	??_atoi& (0+255),w,b
 19311  012656  6F6B               	movwf	atoi@a& (0+255),b
 19312  012658  0EFF               	movlw	255
 19313  01265A  2169               	addwfc	(??_atoi+1)& (0+255),w,b
 19314  01265C  6F6C               	movwf	(atoi@a+1)& (0+255),b
 19315  01265E                     l15588:
 19316                           
 19317                           ; BSR set to: 0
 19318  01265E  4B66               	infsnz	atoi@s& (0+255),f,b
 19319  012660  2B67               	incf	(atoi@s+1)& (0+255),f,b
 19320  012662                     l3750:
 19321                           
 19322                           ; BSR set to: 0
 19323                           
 19324                           ; BSR set to: 0
 19325  012662  C066  FFD9         	movff	atoi@s,fsr2l
 19326  012666  C067  FFDA         	movff	atoi@s+1,fsr2h
 19327  01266A  50DF               	movf	indf2,w,c
 19328  01266C  EC93  F0AD         	call	_isdigit
 19329  012670  B0D8               	btfsc	status,0,c
 19330  012672  D7D8               	goto	l3751
 19331  012674  0100               	movlb	0	; () banked
 19332  012676  516A               	movf	atoi@sign& (0+255),w,b
 19333  012678  B4D8               	btfsc	status,2,c
 19334  01267A  D00D               	goto	l3753
 19335                           
 19336                           ; BSR set to: 0
 19337  01267C  C06B  F068         	movff	atoi@a,??_atoi
 19338  012680  C06C  F069         	movff	atoi@a+1,??_atoi+1
 19339  012684  1F68               	comf	??_atoi& (0+255),f,b
 19340  012686  1F69               	comf	(??_atoi+1)& (0+255),f,b
 19341  012688  4B68               	infsnz	??_atoi& (0+255),f,b
 19342  01268A  2B69               	incf	(??_atoi+1)& (0+255),f,b
 19343  01268C  C068  F066         	movff	??_atoi,?_atoi
 19344  012690  C069  F067         	movff	??_atoi+1,?_atoi+1
 19345  012694  0012               	return	
 19346  012696                     l3753:
 19347                           
 19348                           ; BSR set to: 0
 19349  012696  C06B  F066         	movff	atoi@a,?_atoi
 19350  01269A  C06C  F067         	movff	atoi@a+1,?_atoi+1
 19351                           
 19352                           ; BSR set to: 0
 19353  01269E  0012               	return		;funcret
 19354  0126A0                     __end_of_atoi:
 19355                           	opt stack 0
 19356                           tblptru	equ	0xFF8
 19357                           tblptrh	equ	0xFF7
 19358                           tblptrl	equ	0xFF6
 19359                           tablat	equ	0xFF5
 19360                           prodh	equ	0xFF4
 19361                           prodl	equ	0xFF3
 19362                           postinc0	equ	0xFEE
 19363                           wreg	equ	0xFE8
 19364                           postinc1	equ	0xFE6
 19365                           postdec1	equ	0xFE5
 19366                           plusw1	equ	0xFE3
 19367                           fsr1h	equ	0xFE2
 19368                           fsr1l	equ	0xFE1
 19369                           indf2	equ	0xFDF
 19370                           postinc2	equ	0xFDE
 19371                           postdec2	equ	0xFDD
 19372                           plusw2	equ	0xFDB
 19373                           fsr2h	equ	0xFDA
 19374                           fsr2l	equ	0xFD9
 19375                           status	equ	0xFD8
 19376                           
 19377 ;; *************** function _isdigit *****************
 19378 ;; Defined at:
 19379 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\isdigit.c"
 19380 ;; Parameters:    Size  Location     Type
 19381 ;;  c               1    wreg     unsigned char 
 19382 ;; Auto vars:     Size  Location     Type
 19383 ;;  c               1    2[BANK0 ] unsigned char 
 19384 ;; Return value:  Size  Location     Type
 19385 ;;		None               void
 19386 ;; Registers used:
 19387 ;;		wreg, status,2, status,0
 19388 ;; Tracked objects:
 19389 ;;		On entry : 0/0
 19390 ;;		On exit  : 0/0
 19391 ;;		Unchanged: 0/0
 19392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19393 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19394 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19395 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19396 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19397 ;;Total ram usage:        3 bytes
 19398 ;; Hardware stack levels used:    1
 19399 ;; Hardware stack levels required when called:   10
 19400 ;; This function calls:
 19401 ;;		Nothing
 19402 ;; This function is called by:
 19403 ;;		_atoi
 19404 ;;		_atol
 19405 ;; This function uses a non-reentrant model
 19406 ;;
 19407                           
 19408                           	psect	text80
 19409  015B26                     __ptext80:
 19410                           	opt stack 0
 19411  015B26                     _isdigit:
 19412                           	opt stack 16
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;incstack = 0
 19416                           ;isdigit@c stored from wreg
 19417  015B26  0100               	movlb	0	; () banked
 19418  015B28  6F62               	movwf	isdigit@c& (0+255),b
 19419  015B2A  0E00               	movlw	0
 19420  015B2C  0100               	movlb	0	; () banked
 19421  015B2E  6F61               	movwf	_isdigit$8435& (0+255),b
 19422                           
 19423                           ; BSR set to: 0
 19424  015B30  0E3A               	movlw	58
 19425  015B32  6162               	cpfslt	isdigit@c& (0+255),b
 19426  015B34  D005               	goto	l3772
 19427                           
 19428                           ; BSR set to: 0
 19429  015B36  0E2F               	movlw	47
 19430  015B38  6562               	cpfsgt	isdigit@c& (0+255),b
 19431  015B3A  D002               	goto	l3772
 19432                           
 19433                           ; BSR set to: 0
 19434  015B3C  0E01               	movlw	1
 19435  015B3E  6F61               	movwf	_isdigit$8435& (0+255),b
 19436  015B40                     l3772:
 19437                           
 19438                           ; BSR set to: 0
 19439                           
 19440                           ; BSR set to: 0
 19441  015B40  C061  F060         	movff	_isdigit$8435,??_isdigit
 19442  015B44  3160               	rrcf	??_isdigit& (0+255),w,b
 19443  015B46  0012               	return	
 19444  015B48                     __end_of_isdigit:
 19445                           	opt stack 0
 19446                           tblptru	equ	0xFF8
 19447                           tblptrh	equ	0xFF7
 19448                           tblptrl	equ	0xFF6
 19449                           tablat	equ	0xFF5
 19450                           prodh	equ	0xFF4
 19451                           prodl	equ	0xFF3
 19452                           postinc0	equ	0xFEE
 19453                           wreg	equ	0xFE8
 19454                           postinc1	equ	0xFE6
 19455                           postdec1	equ	0xFE5
 19456                           plusw1	equ	0xFE3
 19457                           fsr1h	equ	0xFE2
 19458                           fsr1l	equ	0xFE1
 19459                           indf2	equ	0xFDF
 19460                           postinc2	equ	0xFDE
 19461                           postdec2	equ	0xFDD
 19462                           plusw2	equ	0xFDB
 19463                           fsr2h	equ	0xFDA
 19464                           fsr2l	equ	0xFD9
 19465                           status	equ	0xFD8
 19466                           
 19467 ;; *************** function ___wmul *****************
 19468 ;; Defined at:
 19469 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
 19470 ;; Parameters:    Size  Location     Type
 19471 ;;  multiplier      2    0[BANK0 ] unsigned int 
 19472 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 19473 ;; Auto vars:     Size  Location     Type
 19474 ;;  product         2    4[BANK0 ] unsigned int 
 19475 ;; Return value:  Size  Location     Type
 19476 ;;                  2    0[BANK0 ] unsigned int 
 19477 ;; Registers used:
 19478 ;;		wreg, status,2, status,0, prodl, prodh
 19479 ;; Tracked objects:
 19480 ;;		On entry : 0/0
 19481 ;;		On exit  : 0/0
 19482 ;;		Unchanged: 0/0
 19483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19484 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19485 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19487 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19488 ;;Total ram usage:        6 bytes
 19489 ;; Hardware stack levels used:    1
 19490 ;; Hardware stack levels required when called:   10
 19491 ;; This function calls:
 19492 ;;		Nothing
 19493 ;; This function is called by:
 19494 ;;		_atoi
 19495 ;; This function uses a non-reentrant model
 19496 ;;
 19497                           
 19498                           	psect	text81
 19499  0159FC                     __ptext81:
 19500                           	opt stack 0
 19501  0159FC                     ___wmul:
 19502                           	opt stack 16
 19503                           
 19504                           ; BSR set to: 0
 19505                           ;incstack = 0
 19506  0159FC  0100               	movlb	0	; () banked
 19507  0159FE  5160               	movf	___wmul@multiplier& (0+255),w,b
 19508  015A00  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19509  015A02  CFF3 F064          	movff	prodl,___wmul@product
 19510  015A06  CFF4 F065          	movff	prodh,___wmul@product+1
 19511  015A0A  5160               	movf	___wmul@multiplier& (0+255),w,b
 19512  015A0C  0363               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 19513  015A0E  50F3               	movf	prodl,w,c
 19514  015A10  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19515  015A12  5161               	movf	(___wmul@multiplier+1)& (0+255),w,b
 19516  015A14  0362               	mulwf	___wmul@multiplicand& (0+255),b
 19517  015A16  50F3               	movf	prodl,w,c
 19518  015A18  2765               	addwf	(___wmul@product+1)& (0+255),f,b
 19519                           
 19520                           ; BSR set to: 0
 19521  015A1A  C064  F060         	movff	___wmul@product,?___wmul
 19522  015A1E  C065  F061         	movff	___wmul@product+1,?___wmul+1
 19523  015A22  0012               	return	
 19524  015A24                     __end_of___wmul:
 19525                           	opt stack 0
 19526                           tblptru	equ	0xFF8
 19527                           tblptrh	equ	0xFF7
 19528                           tblptrl	equ	0xFF6
 19529                           tablat	equ	0xFF5
 19530                           prodh	equ	0xFF4
 19531                           prodl	equ	0xFF3
 19532                           postinc0	equ	0xFEE
 19533                           wreg	equ	0xFE8
 19534                           postinc1	equ	0xFE6
 19535                           postdec1	equ	0xFE5
 19536                           plusw1	equ	0xFE3
 19537                           fsr1h	equ	0xFE2
 19538                           fsr1l	equ	0xFE1
 19539                           indf2	equ	0xFDF
 19540                           postinc2	equ	0xFDE
 19541                           postdec2	equ	0xFDD
 19542                           plusw2	equ	0xFDB
 19543                           fsr2h	equ	0xFDA
 19544                           fsr2l	equ	0xFD9
 19545                           status	equ	0xFD8
 19546                           
 19547 ;; *************** function __steps_from_degrees *****************
 19548 ;; Defined at:
 19549 ;;		line 213 in file "config_file.c"
 19550 ;; Parameters:    Size  Location     Type
 19551 ;;  degrees         4   49[BANK0 ] long 
 19552 ;; Auto vars:     Size  Location     Type
 19553 ;;  temp            4   53[BANK0 ] long 
 19554 ;; Return value:  Size  Location     Type
 19555 ;;                  4   49[BANK0 ] long 
 19556 ;; Registers used:
 19557 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19558 ;; Tracked objects:
 19559 ;;		On entry : 0/0
 19560 ;;		On exit  : 0/0
 19561 ;;		Unchanged: 0/0
 19562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19563 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19564 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19566 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19567 ;;Total ram usage:        8 bytes
 19568 ;; Hardware stack levels used:    1
 19569 ;; Hardware stack levels required when called:   11
 19570 ;; This function calls:
 19571 ;;		___fldiv
 19572 ;;		___flge
 19573 ;;		___flmul
 19574 ;;		___fltol
 19575 ;;		___xxtofl
 19576 ;; This function is called by:
 19577 ;;		__parse_item
 19578 ;; This function uses a non-reentrant model
 19579 ;;
 19580                           
 19581                           	psect	text82
 19582  00EF54                     __ptext82:
 19583                           	opt stack 0
 19584  00EF54                     __steps_from_degrees:
 19585                           	opt stack 16
 19586                           
 19587                           ;config_file.c: 215: double temp;;config_file.c: 218: if(degrees==0)
 19588                           
 19589                           ; BSR set to: 0
 19590                           ;incstack = 0
 19591  00EF54  0100               	movlb	0	; () banked
 19592  00EF56  5191               	movf	__steps_from_degrees@degrees& (0+255),w,b
 19593  00EF58  1192               	iorwf	(__steps_from_degrees@degrees+1)& (0+255),w,b
 19594  00EF5A  1193               	iorwf	(__steps_from_degrees@degrees+2)& (0+255),w,b
 19595  00EF5C  1194               	iorwf	(__steps_from_degrees@degrees+3)& (0+255),w,b
 19596  00EF5E  A4D8               	btfss	status,2,c
 19597  00EF60  D009               	goto	l3057
 19598                           
 19599                           ; BSR set to: 0
 19600                           ;config_file.c: 219: {;config_file.c: 220: return 0;
 19601  00EF62  0E00               	movlw	0
 19602  00EF64  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19603  00EF66  0E00               	movlw	0
 19604  00EF68  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19605  00EF6A  0E00               	movlw	0
 19606  00EF6C  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19607  00EF6E  0E00               	movlw	0
 19608  00EF70  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19609                           
 19610                           ; BSR set to: 0
 19611  00EF72  0012               	return	
 19612  00EF74                     l3057:
 19613                           
 19614                           ; BSR set to: 0
 19615                           ;config_file.c: 221: };config_file.c: 224: temp = (float) degrees;
 19616                           
 19617                           ; BSR set to: 0
 19618  00EF74  C091  F06A         	movff	__steps_from_degrees@degrees,___xxtofl@val
 19619  00EF78  C092  F06B         	movff	__steps_from_degrees@degrees+1,___xxtofl@val+1
 19620  00EF7C  C093  F06C         	movff	__steps_from_degrees@degrees+2,___xxtofl@val+2
 19621  00EF80  C094  F06D         	movff	__steps_from_degrees@degrees+3,___xxtofl@val+3
 19622  00EF84  0E01               	movlw	1
 19623  00EF86  EC5A  F080         	call	___xxtofl
 19624  00EF8A  C06A  F095         	movff	?___xxtofl,__steps_from_degrees@temp
 19625  00EF8E  C06B  F096         	movff	?___xxtofl+1,__steps_from_degrees@temp+1
 19626  00EF92  C06C  F097         	movff	?___xxtofl+2,__steps_from_degrees@temp+2
 19627  00EF96  C06D  F098         	movff	?___xxtofl+3,__steps_from_degrees@temp+3
 19628                           
 19629                           ;config_file.c: 227: temp *= (float) config.full_circle_in_steps;
 19630  00EF9A  C095  F078         	movff	__steps_from_degrees@temp,___flmul@b
 19631  00EF9E  C096  F079         	movff	__steps_from_degrees@temp+1,___flmul@b+1
 19632  00EFA2  C097  F07A         	movff	__steps_from_degrees@temp+2,___flmul@b+2
 19633  00EFA6  C098  F07B         	movff	__steps_from_degrees@temp+3,___flmul@b+3
 19634  00EFAA  C196  F06A         	movff	_config,___xxtofl@val
 19635  00EFAE  C197  F06B         	movff	_config+1,___xxtofl@val+1
 19636  00EFB2  C198  F06C         	movff	_config+2,___xxtofl@val+2
 19637  00EFB6  C199  F06D         	movff	_config+3,___xxtofl@val+3
 19638  00EFBA  0E00               	movlw	0
 19639  00EFBC  EC5A  F080         	call	___xxtofl
 19640  00EFC0  C06A  F07C         	movff	?___xxtofl,___flmul@a
 19641  00EFC4  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 19642  00EFC8  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 19643  00EFCC  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 19644  00EFD0  EC78  F064         	call	___flmul	;wreg free
 19645  00EFD4  C078  F095         	movff	?___flmul,__steps_from_degrees@temp
 19646  00EFD8  C079  F096         	movff	?___flmul+1,__steps_from_degrees@temp+1
 19647  00EFDC  C07A  F097         	movff	?___flmul+2,__steps_from_degrees@temp+2
 19648  00EFE0  C07B  F098         	movff	?___flmul+3,__steps_from_degrees@temp+3
 19649                           
 19650                           ;config_file.c: 228: temp /= 36000.0;
 19651  00EFE4  C095  F078         	movff	__steps_from_degrees@temp,___fldiv@b
 19652  00EFE8  C096  F079         	movff	__steps_from_degrees@temp+1,___fldiv@b+1
 19653  00EFEC  C097  F07A         	movff	__steps_from_degrees@temp+2,___fldiv@b+2
 19654  00EFF0  C098  F07B         	movff	__steps_from_degrees@temp+3,___fldiv@b+3
 19655  00EFF4  0E00               	movlw	0
 19656  00EFF6  0100               	movlb	0	; () banked
 19657  00EFF8  6F7C               	movwf	___fldiv@a& (0+255),b
 19658  00EFFA  0EA0               	movlw	160
 19659  00EFFC  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 19660  00EFFE  0E0C               	movlw	12
 19661  00F000  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 19662  00F002  0E47               	movlw	71
 19663  00F004  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 19664  00F006  ECA0  F06A         	call	___fldiv	;wreg free
 19665  00F00A  C078  F095         	movff	?___fldiv,__steps_from_degrees@temp
 19666  00F00E  C079  F096         	movff	?___fldiv+1,__steps_from_degrees@temp+1
 19667  00F012  C07A  F097         	movff	?___fldiv+2,__steps_from_degrees@temp+2
 19668  00F016  C07B  F098         	movff	?___fldiv+3,__steps_from_degrees@temp+3
 19669                           
 19670                           ;config_file.c: 231: if(((int32_t)temp)<-2147483648.0)
 19671  00F01A  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19672  00F01E  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19673  00F022  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19674  00F026  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19675  00F02A  EC97  F091         	call	___fltol	;wreg free
 19676  00F02E  C060  F06A         	movff	?___fltol,___xxtofl@val
 19677  00F032  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19678  00F036  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19679  00F03A  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19680  00F03E  0E01               	movlw	1
 19681  00F040  EC5A  F080         	call	___xxtofl
 19682  00F044  C06A  F078         	movff	?___xxtofl,___flge@ff1
 19683  00F048  C06B  F079         	movff	?___xxtofl+1,___flge@ff1+1
 19684  00F04C  C06C  F07A         	movff	?___xxtofl+2,___flge@ff1+2
 19685  00F050  C06D  F07B         	movff	?___xxtofl+3,___flge@ff1+3
 19686  00F054  0E00               	movlw	0
 19687  00F056  0100               	movlb	0	; () banked
 19688  00F058  6F7C               	movwf	___flge@ff2& (0+255),b
 19689  00F05A  0E00               	movlw	0
 19690  00F05C  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19691  00F05E  0E00               	movlw	0
 19692  00F060  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19693  00F062  0ECF               	movlw	207
 19694  00F064  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19695  00F066  EC3B  F085         	call	___flge	;wreg free
 19696  00F06A  0100               	movlb	0	; () banked
 19697  00F06C  B0D8               	btfsc	status,0,c
 19698  00F06E  D009               	goto	l3059
 19699                           
 19700                           ; BSR set to: 0
 19701                           ;config_file.c: 232: {;config_file.c: 233: return -2147483648;
 19702  00F070  0E00               	movlw	0
 19703  00F072  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19704  00F074  0E00               	movlw	0
 19705  00F076  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19706  00F078  0E00               	movlw	0
 19707  00F07A  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19708  00F07C  0E80               	movlw	128
 19709  00F07E  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19710                           
 19711                           ; BSR set to: 0
 19712  00F080  0012               	return	
 19713  00F082                     l3059:
 19714                           
 19715                           ; BSR set to: 0
 19716                           ;config_file.c: 234: };config_file.c: 235: if(((int32_t)temp)>2147483647.0)
 19717                           
 19718                           ; BSR set to: 0
 19719  00F082  0E00               	movlw	0
 19720  00F084  6F78               	movwf	___flge@ff1& (0+255),b
 19721  00F086  0E00               	movlw	0
 19722  00F088  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19723  00F08A  0E00               	movlw	0
 19724  00F08C  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19725  00F08E  0E4F               	movlw	79
 19726  00F090  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19727  00F092  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19728  00F096  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19729  00F09A  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19730  00F09E  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19731  00F0A2  EC97  F091         	call	___fltol	;wreg free
 19732  00F0A6  C060  F06A         	movff	?___fltol,___xxtofl@val
 19733  00F0AA  C061  F06B         	movff	?___fltol+1,___xxtofl@val+1
 19734  00F0AE  C062  F06C         	movff	?___fltol+2,___xxtofl@val+2
 19735  00F0B2  C063  F06D         	movff	?___fltol+3,___xxtofl@val+3
 19736  00F0B6  0E01               	movlw	1
 19737  00F0B8  EC5A  F080         	call	___xxtofl
 19738  00F0BC  C06A  F07C         	movff	?___xxtofl,___flge@ff2
 19739  00F0C0  C06B  F07D         	movff	?___xxtofl+1,___flge@ff2+1
 19740  00F0C4  C06C  F07E         	movff	?___xxtofl+2,___flge@ff2+2
 19741  00F0C8  C06D  F07F         	movff	?___xxtofl+3,___flge@ff2+3
 19742  00F0CC  EC3B  F085         	call	___flge	;wreg free
 19743  00F0D0  0100               	movlb	0	; () banked
 19744  00F0D2  B0D8               	btfsc	status,0,c
 19745  00F0D4  D009               	goto	l3060
 19746                           
 19747                           ; BSR set to: 0
 19748                           ;config_file.c: 236: {;config_file.c: 237: return 2147483647;
 19749  00F0D6  0EFF               	movlw	255
 19750  00F0D8  6F91               	movwf	?__steps_from_degrees& (0+255),b
 19751  00F0DA  0EFF               	movlw	255
 19752  00F0DC  6F92               	movwf	(?__steps_from_degrees+1)& (0+255),b
 19753  00F0DE  0EFF               	movlw	255
 19754  00F0E0  6F93               	movwf	(?__steps_from_degrees+2)& (0+255),b
 19755  00F0E2  0E7F               	movlw	127
 19756  00F0E4  6F94               	movwf	(?__steps_from_degrees+3)& (0+255),b
 19757                           
 19758                           ; BSR set to: 0
 19759  00F0E6  0012               	return	
 19760  00F0E8                     l3060:
 19761                           
 19762                           ; BSR set to: 0
 19763                           ;config_file.c: 238: };config_file.c: 241: return (int32_t) temp;
 19764                           
 19765                           ; BSR set to: 0
 19766  00F0E8  C095  F060         	movff	__steps_from_degrees@temp,___fltol@f1
 19767  00F0EC  C096  F061         	movff	__steps_from_degrees@temp+1,___fltol@f1+1
 19768  00F0F0  C097  F062         	movff	__steps_from_degrees@temp+2,___fltol@f1+2
 19769  00F0F4  C098  F063         	movff	__steps_from_degrees@temp+3,___fltol@f1+3
 19770  00F0F8  EC97  F091         	call	___fltol	;wreg free
 19771  00F0FC  C060  F091         	movff	?___fltol,?__steps_from_degrees
 19772  00F100  C061  F092         	movff	?___fltol+1,?__steps_from_degrees+1
 19773  00F104  C062  F093         	movff	?___fltol+2,?__steps_from_degrees+2
 19774  00F108  C063  F094         	movff	?___fltol+3,?__steps_from_degrees+3
 19775  00F10C  0012               	return	
 19776  00F10E                     __end_of__steps_from_degrees:
 19777                           	opt stack 0
 19778                           tblptru	equ	0xFF8
 19779                           tblptrh	equ	0xFF7
 19780                           tblptrl	equ	0xFF6
 19781                           tablat	equ	0xFF5
 19782                           prodh	equ	0xFF4
 19783                           prodl	equ	0xFF3
 19784                           postinc0	equ	0xFEE
 19785                           wreg	equ	0xFE8
 19786                           postinc1	equ	0xFE6
 19787                           postdec1	equ	0xFE5
 19788                           plusw1	equ	0xFE3
 19789                           fsr1h	equ	0xFE2
 19790                           fsr1l	equ	0xFE1
 19791                           indf2	equ	0xFDF
 19792                           postinc2	equ	0xFDE
 19793                           postdec2	equ	0xFDD
 19794                           plusw2	equ	0xFDB
 19795                           fsr2h	equ	0xFDA
 19796                           fsr2l	equ	0xFD9
 19797                           status	equ	0xFD8
 19798                           
 19799 ;; *************** function ___flge *****************
 19800 ;; Defined at:
 19801 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
 19802 ;; Parameters:    Size  Location     Type
 19803 ;;  ff1             4   24[BANK0 ] long 
 19804 ;;  ff2             4   28[BANK0 ] long 
 19805 ;; Auto vars:     Size  Location     Type
 19806 ;;		None
 19807 ;; Return value:  Size  Location     Type
 19808 ;;		None               void
 19809 ;; Registers used:
 19810 ;;		wreg, status,2, status,0
 19811 ;; Tracked objects:
 19812 ;;		On entry : 0/0
 19813 ;;		On exit  : 0/0
 19814 ;;		Unchanged: 0/0
 19815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19816 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19818 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19819 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19820 ;;Total ram usage:       12 bytes
 19821 ;; Hardware stack levels used:    1
 19822 ;; Hardware stack levels required when called:   10
 19823 ;; This function calls:
 19824 ;;		Nothing
 19825 ;; This function is called by:
 19826 ;;		__steps_from_degrees
 19827 ;;		_motor_goto_degrees_float
 19828 ;; This function uses a non-reentrant model
 19829 ;;
 19830                           
 19831                           	psect	text83
 19832  010A76                     __ptext83:
 19833                           	opt stack 0
 19834  010A76                     ___flge:
 19835                           	opt stack 16
 19836                           
 19837                           ;incstack = 0
 19838  010A76  0E00               	movlw	0
 19839  010A78  0100               	movlb	0	; () banked
 19840  010A7A  1578               	andwf	___flge@ff1& (0+255),w,b
 19841  010A7C  6F80               	movwf	??___flge& (0+255),b
 19842  010A7E  0E00               	movlw	0
 19843  010A80  1579               	andwf	(___flge@ff1+1)& (0+255),w,b
 19844  010A82  6F81               	movwf	(??___flge+1)& (0+255),b
 19845  010A84  0E80               	movlw	128
 19846  010A86  157A               	andwf	(___flge@ff1+2)& (0+255),w,b
 19847  010A88  6F82               	movwf	(??___flge+2)& (0+255),b
 19848  010A8A  0E7F               	movlw	127
 19849  010A8C  157B               	andwf	(___flge@ff1+3)& (0+255),w,b
 19850  010A8E  6F83               	movwf	(??___flge+3)& (0+255),b
 19851  010A90  5180               	movf	??___flge& (0+255),w,b
 19852  010A92  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19853  010A94  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19854  010A96  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19855  010A98  A4D8               	btfss	status,2,c
 19856  010A9A  D008               	goto	l3338
 19857                           
 19858                           ; BSR set to: 0
 19859  010A9C  0E00               	movlw	0
 19860  010A9E  6F78               	movwf	___flge@ff1& (0+255),b
 19861  010AA0  0E00               	movlw	0
 19862  010AA2  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19863  010AA4  0E00               	movlw	0
 19864  010AA6  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19865  010AA8  0E00               	movlw	0
 19866  010AAA  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19867  010AAC                     l3338:
 19868                           
 19869                           ; BSR set to: 0
 19870                           
 19871                           ; BSR set to: 0
 19872  010AAC  0E00               	movlw	0
 19873  010AAE  157C               	andwf	___flge@ff2& (0+255),w,b
 19874  010AB0  6F80               	movwf	??___flge& (0+255),b
 19875  010AB2  0E00               	movlw	0
 19876  010AB4  157D               	andwf	(___flge@ff2+1)& (0+255),w,b
 19877  010AB6  6F81               	movwf	(??___flge+1)& (0+255),b
 19878  010AB8  0E80               	movlw	128
 19879  010ABA  157E               	andwf	(___flge@ff2+2)& (0+255),w,b
 19880  010ABC  6F82               	movwf	(??___flge+2)& (0+255),b
 19881  010ABE  0E7F               	movlw	127
 19882  010AC0  157F               	andwf	(___flge@ff2+3)& (0+255),w,b
 19883  010AC2  6F83               	movwf	(??___flge+3)& (0+255),b
 19884  010AC4  5180               	movf	??___flge& (0+255),w,b
 19885  010AC6  1181               	iorwf	(??___flge+1)& (0+255),w,b
 19886  010AC8  1182               	iorwf	(??___flge+2)& (0+255),w,b
 19887  010ACA  1183               	iorwf	(??___flge+3)& (0+255),w,b
 19888  010ACC  A4D8               	btfss	status,2,c
 19889  010ACE  D008               	goto	l3339
 19890                           
 19891                           ; BSR set to: 0
 19892  010AD0  0E00               	movlw	0
 19893  010AD2  6F7C               	movwf	___flge@ff2& (0+255),b
 19894  010AD4  0E00               	movlw	0
 19895  010AD6  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19896  010AD8  0E00               	movlw	0
 19897  010ADA  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19898  010ADC  0E00               	movlw	0
 19899  010ADE  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19900  010AE0                     l3339:
 19901                           
 19902                           ; BSR set to: 0
 19903                           
 19904                           ; BSR set to: 0
 19905  010AE0  AF7B               	btfss	(___flge@ff1+3)& (0+255),7,b
 19906  010AE2  D01D               	goto	l3340
 19907                           
 19908                           ; BSR set to: 0
 19909  010AE4  C078  F080         	movff	___flge@ff1,??___flge
 19910  010AE8  C079  F081         	movff	___flge@ff1+1,??___flge+1
 19911  010AEC  C07A  F082         	movff	___flge@ff1+2,??___flge+2
 19912  010AF0  C07B  F083         	movff	___flge@ff1+3,??___flge+3
 19913  010AF4  1F80               	comf	??___flge& (0+255),f,b
 19914  010AF6  1F81               	comf	(??___flge+1)& (0+255),f,b
 19915  010AF8  1F82               	comf	(??___flge+2)& (0+255),f,b
 19916  010AFA  1F83               	comf	(??___flge+3)& (0+255),f,b
 19917  010AFC  2B80               	incf	??___flge& (0+255),f,b
 19918  010AFE  0E00               	movlw	0
 19919  010B00  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19920  010B02  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19921  010B04  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19922  010B06  0E00               	movlw	0
 19923  010B08  2580               	addwf	??___flge& (0+255),w,b
 19924  010B0A  6F78               	movwf	___flge@ff1& (0+255),b
 19925  010B0C  0E00               	movlw	0
 19926  010B0E  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19927  010B10  6F79               	movwf	(___flge@ff1+1)& (0+255),b
 19928  010B12  0E00               	movlw	0
 19929  010B14  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19930  010B16  6F7A               	movwf	(___flge@ff1+2)& (0+255),b
 19931  010B18  0E80               	movlw	128
 19932  010B1A  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19933  010B1C  6F7B               	movwf	(___flge@ff1+3)& (0+255),b
 19934  010B1E                     l3340:
 19935                           
 19936                           ; BSR set to: 0
 19937                           
 19938                           ; BSR set to: 0
 19939  010B1E  AF7F               	btfss	(___flge@ff2+3)& (0+255),7,b
 19940  010B20  D01D               	goto	l3341
 19941                           
 19942                           ; BSR set to: 0
 19943  010B22  C07C  F080         	movff	___flge@ff2,??___flge
 19944  010B26  C07D  F081         	movff	___flge@ff2+1,??___flge+1
 19945  010B2A  C07E  F082         	movff	___flge@ff2+2,??___flge+2
 19946  010B2E  C07F  F083         	movff	___flge@ff2+3,??___flge+3
 19947  010B32  1F80               	comf	??___flge& (0+255),f,b
 19948  010B34  1F81               	comf	(??___flge+1)& (0+255),f,b
 19949  010B36  1F82               	comf	(??___flge+2)& (0+255),f,b
 19950  010B38  1F83               	comf	(??___flge+3)& (0+255),f,b
 19951  010B3A  2B80               	incf	??___flge& (0+255),f,b
 19952  010B3C  0E00               	movlw	0
 19953  010B3E  2381               	addwfc	(??___flge+1)& (0+255),f,b
 19954  010B40  2382               	addwfc	(??___flge+2)& (0+255),f,b
 19955  010B42  2383               	addwfc	(??___flge+3)& (0+255),f,b
 19956  010B44  0E00               	movlw	0
 19957  010B46  2580               	addwf	??___flge& (0+255),w,b
 19958  010B48  6F7C               	movwf	___flge@ff2& (0+255),b
 19959  010B4A  0E00               	movlw	0
 19960  010B4C  2181               	addwfc	(??___flge+1)& (0+255),w,b
 19961  010B4E  6F7D               	movwf	(___flge@ff2+1)& (0+255),b
 19962  010B50  0E00               	movlw	0
 19963  010B52  2182               	addwfc	(??___flge+2)& (0+255),w,b
 19964  010B54  6F7E               	movwf	(___flge@ff2+2)& (0+255),b
 19965  010B56  0E80               	movlw	128
 19966  010B58  2183               	addwfc	(??___flge+3)& (0+255),w,b
 19967  010B5A  6F7F               	movwf	(___flge@ff2+3)& (0+255),b
 19968  010B5C                     l3341:
 19969                           
 19970                           ; BSR set to: 0
 19971  010B5C  0E00               	movlw	0
 19972  010B5E  1B78               	xorwf	___flge@ff1& (0+255),f,b
 19973  010B60  0E00               	movlw	0
 19974  010B62  1B79               	xorwf	(___flge@ff1+1)& (0+255),f,b
 19975  010B64  0E00               	movlw	0
 19976  010B66  1B7A               	xorwf	(___flge@ff1+2)& (0+255),f,b
 19977  010B68  0E80               	movlw	128
 19978  010B6A  1B7B               	xorwf	(___flge@ff1+3)& (0+255),f,b
 19979  010B6C  0E00               	movlw	0
 19980  010B6E  1B7C               	xorwf	___flge@ff2& (0+255),f,b
 19981  010B70  0E00               	movlw	0
 19982  010B72  1B7D               	xorwf	(___flge@ff2+1)& (0+255),f,b
 19983  010B74  0E00               	movlw	0
 19984  010B76  1B7E               	xorwf	(___flge@ff2+2)& (0+255),f,b
 19985  010B78  0E80               	movlw	128
 19986  010B7A  1B7F               	xorwf	(___flge@ff2+3)& (0+255),f,b
 19987  010B7C  517C               	movf	___flge@ff2& (0+255),w,b
 19988  010B7E  5D78               	subwf	___flge@ff1& (0+255),w,b
 19989  010B80  517D               	movf	(___flge@ff2+1)& (0+255),w,b
 19990  010B82  5979               	subwfb	(___flge@ff1+1)& (0+255),w,b
 19991  010B84  517E               	movf	(___flge@ff2+2)& (0+255),w,b
 19992  010B86  597A               	subwfb	(___flge@ff1+2)& (0+255),w,b
 19993  010B88  517F               	movf	(___flge@ff2+3)& (0+255),w,b
 19994  010B8A  597B               	subwfb	(___flge@ff1+3)& (0+255),w,b
 19995  010B8C  B0D8               	btfsc	status,0,c
 19996  010B8E  D002               	goto	l12056
 19997                           
 19998                           ; BSR set to: 0
 19999  010B90  90D8               	bcf	status,0,c
 20000  010B92  0012               	return	
 20001  010B94                     l12056:
 20002                           
 20003                           ; BSR set to: 0
 20004                           
 20005                           ; BSR set to: 0
 20006  010B94  80D8               	bsf	status,0,c
 20007                           
 20008                           ; BSR set to: 0
 20009  010B96  0012               	return	
 20010  010B98                     __end_of___flge:
 20011                           	opt stack 0
 20012                           tblptru	equ	0xFF8
 20013                           tblptrh	equ	0xFF7
 20014                           tblptrl	equ	0xFF6
 20015                           tablat	equ	0xFF5
 20016                           prodh	equ	0xFF4
 20017                           prodl	equ	0xFF3
 20018                           postinc0	equ	0xFEE
 20019                           wreg	equ	0xFE8
 20020                           postinc1	equ	0xFE6
 20021                           postdec1	equ	0xFE5
 20022                           plusw1	equ	0xFE3
 20023                           fsr1h	equ	0xFE2
 20024                           fsr1l	equ	0xFE1
 20025                           indf2	equ	0xFDF
 20026                           postinc2	equ	0xFDE
 20027                           postdec2	equ	0xFDD
 20028                           plusw2	equ	0xFDB
 20029                           fsr2h	equ	0xFDA
 20030                           fsr2l	equ	0xFD9
 20031                           status	equ	0xFD8
 20032                           
 20033 ;; *************** function __get_item *****************
 20034 ;; Defined at:
 20035 ;;		line 70 in file "config_file.c"
 20036 ;; Parameters:    Size  Location     Type
 20037 ;;  item_string     2    0[BANK0 ] PTR unsigned char 
 20038 ;;		 -> configFile_read@item_string(31), 
 20039 ;;  value_string    2    2[BANK0 ] PTR unsigned char 
 20040 ;;		 -> configFile_read@value_string(12), 
 20041 ;;  buffer          2    4[BANK0 ] PTR unsigned char 
 20042 ;;		 -> ConfigFile_buffer(512), 
 20043 ;; Auto vars:     Size  Location     Type
 20044 ;;  item_ctr        1   10[BANK0 ] unsigned char 
 20045 ;;  value_ctr       1    9[BANK0 ] unsigned char 
 20046 ;; Return value:  Size  Location     Type
 20047 ;;                  1    wreg      unsigned char 
 20048 ;; Registers used:
 20049 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 20050 ;; Tracked objects:
 20051 ;;		On entry : 0/0
 20052 ;;		On exit  : 0/0
 20053 ;;		Unchanged: 0/0
 20054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20055 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20056 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20057 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20058 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20059 ;;Total ram usage:       11 bytes
 20060 ;; Hardware stack levels used:    1
 20061 ;; Hardware stack levels required when called:   10
 20062 ;; This function calls:
 20063 ;;		Nothing
 20064 ;; This function is called by:
 20065 ;;		_configFile_read
 20066 ;; This function uses a non-reentrant model
 20067 ;;
 20068                           
 20069                           	psect	text84
 20070  00F5F6                     __ptext84:
 20071                           	opt stack 0
 20072  00F5F6                     __get_item:
 20073                           	opt stack 18
 20074                           
 20075                           ;config_file.c: 72: uint8_t item_ctr;;config_file.c: 73: uint8_t value_ctr;;config_file.
      +                          c: 76: for(item_ctr=0;item_ctr<30;++item_ctr)
 20076                           
 20077                           ; BSR set to: 0
 20078                           ;incstack = 0
 20079  00F5F6  0E00               	movlw	0
 20080  00F5F8  0100               	movlb	0	; () banked
 20081  00F5FA  6F6A               	movwf	__get_item@item_ctr& (0+255),b
 20082  00F5FC                     l16694:
 20083                           
 20084                           ; BSR set to: 0
 20085  00F5FC  0E1D               	movlw	29
 20086  00F5FE  656A               	cpfsgt	__get_item@item_ctr& (0+255),b
 20087  00F600  D001               	goto	l3024
 20088  00F602  D020               	goto	u15770
 20089  00F604                     l3024:
 20090                           
 20091                           ; BSR set to: 0
 20092                           ;config_file.c: 77: {;config_file.c: 79: if(buffer[item_ctr] == '=')
 20093                           
 20094                           ; BSR set to: 0
 20095  00F604  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20096  00F606  0D01               	mullw	1
 20097  00F608  50F3               	movf	prodl,w,c
 20098  00F60A  2564               	addwf	__get_item@buffer& (0+255),w,b
 20099  00F60C  6ED9               	movwf	fsr2l,c
 20100  00F60E  50F4               	movf	prodh,w,c
 20101  00F610  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20102  00F612  6EDA               	movwf	fsr2h,c
 20103  00F614  0E3D               	movlw	61
 20104  00F616  18DE               	xorwf	postinc2,w,c
 20105  00F618  B4D8               	btfsc	status,2,c
 20106  00F61A  D014               	goto	u15770
 20107                           
 20108                           ; BSR set to: 0
 20109                           ;config_file.c: 82: };config_file.c: 83: item_string[item_ctr] = buffer[item_ctr];
 20110                           
 20111                           ; BSR set to: 0
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;config_file.c: 80: {;config_file.c: 81: break;
 20115  00F61C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20116  00F61E  0D01               	mullw	1
 20117  00F620  50F3               	movf	prodl,w,c
 20118  00F622  2564               	addwf	__get_item@buffer& (0+255),w,b
 20119  00F624  6ED9               	movwf	fsr2l,c
 20120  00F626  50F4               	movf	prodh,w,c
 20121  00F628  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20122  00F62A  6EDA               	movwf	fsr2h,c
 20123  00F62C  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20124  00F62E  0D01               	mullw	1
 20125  00F630  50F3               	movf	prodl,w,c
 20126  00F632  2560               	addwf	__get_item@item_string& (0+255),w,b
 20127  00F634  6EE1               	movwf	fsr1l,c
 20128  00F636  50F4               	movf	prodh,w,c
 20129  00F638  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20130  00F63A  6EE2               	movwf	fsr1h,c
 20131  00F63C  CFDF FFE7          	movff	indf2,indf1
 20132                           
 20133                           ; BSR set to: 0
 20134  00F640  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20135  00F642  D7DC               	goto	l16694
 20136  00F644                     u15770:
 20137                           
 20138                           ; BSR set to: 0
 20139                           ;config_file.c: 84: };config_file.c: 85: item_string[item_ctr++] = 0;
 20140                           
 20141                           ; BSR set to: 0
 20142  00F644  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20143  00F646  0D01               	mullw	1
 20144  00F648  50F3               	movf	prodl,w,c
 20145  00F64A  2560               	addwf	__get_item@item_string& (0+255),w,b
 20146  00F64C  6ED9               	movwf	fsr2l,c
 20147  00F64E  50F4               	movf	prodh,w,c
 20148  00F650  2161               	addwfc	(__get_item@item_string+1)& (0+255),w,b
 20149  00F652  6EDA               	movwf	fsr2h,c
 20150  00F654  0E00               	movlw	0
 20151  00F656  6EDF               	movwf	indf2,c
 20152                           
 20153                           ; BSR set to: 0
 20154  00F658  2B6A               	incf	__get_item@item_ctr& (0+255),f,b
 20155                           
 20156                           ; BSR set to: 0
 20157                           ;config_file.c: 88: for(value_ctr=0;value_ctr<11;++value_ctr)
 20158  00F65A  0E00               	movlw	0
 20159  00F65C  6F69               	movwf	__get_item@value_ctr& (0+255),b
 20160  00F65E                     l16714:
 20161                           
 20162                           ; BSR set to: 0
 20163  00F65E  0E0A               	movlw	10
 20164  00F660  6569               	cpfsgt	__get_item@value_ctr& (0+255),b
 20165  00F662  D001               	goto	l3027
 20166  00F664  D03B               	goto	u15810
 20167  00F666                     l3027:
 20168                           
 20169                           ; BSR set to: 0
 20170                           ;config_file.c: 89: {;config_file.c: 91: if((buffer[item_ctr+value_ctr]=='\r') || (buffe
      +                          r[item_ctr+value_ctr]=='\n'))
 20171                           
 20172                           ; BSR set to: 0
 20173  00F666  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20174  00F668  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20175  00F66C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20176  00F66E  2766               	addwf	??__get_item& (0+255),f,b
 20177  00F670  0E00               	movlw	0
 20178  00F672  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20179  00F674  5166               	movf	??__get_item& (0+255),w,b
 20180  00F676  2564               	addwf	__get_item@buffer& (0+255),w,b
 20181  00F678  6ED9               	movwf	fsr2l,c
 20182  00F67A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20183  00F67C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20184  00F67E  6EDA               	movwf	fsr2h,c
 20185  00F680  0E0D               	movlw	13
 20186  00F682  18DE               	xorwf	postinc2,w,c
 20187  00F684  B4D8               	btfsc	status,2,c
 20188  00F686  D02A               	goto	u15810
 20189                           
 20190                           ; BSR set to: 0
 20191  00F688  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20192  00F68A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20193  00F68E  6B67               	clrf	(??__get_item+1)& (0+255),b
 20194  00F690  2766               	addwf	??__get_item& (0+255),f,b
 20195  00F692  0E00               	movlw	0
 20196  00F694  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20197  00F696  5166               	movf	??__get_item& (0+255),w,b
 20198  00F698  2564               	addwf	__get_item@buffer& (0+255),w,b
 20199  00F69A  6ED9               	movwf	fsr2l,c
 20200  00F69C  5167               	movf	(??__get_item+1)& (0+255),w,b
 20201  00F69E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20202  00F6A0  6EDA               	movwf	fsr2h,c
 20203  00F6A2  0E0A               	movlw	10
 20204  00F6A4  18DE               	xorwf	postinc2,w,c
 20205  00F6A6  B4D8               	btfsc	status,2,c
 20206  00F6A8  D019               	goto	u15810
 20207                           
 20208                           ; BSR set to: 0
 20209                           ;config_file.c: 94: };config_file.c: 95: value_string[value_ctr] = buffer[item_ctr+value
      +                          _ctr];
 20210                           
 20211                           ; BSR set to: 0
 20212                           
 20213                           ; BSR set to: 0
 20214                           ;config_file.c: 92: {;config_file.c: 93: break;
 20215  00F6AA  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20216  00F6AC  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20217  00F6B0  6B67               	clrf	(??__get_item+1)& (0+255),b
 20218  00F6B2  2766               	addwf	??__get_item& (0+255),f,b
 20219  00F6B4  0E00               	movlw	0
 20220  00F6B6  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20221  00F6B8  5166               	movf	??__get_item& (0+255),w,b
 20222  00F6BA  2564               	addwf	__get_item@buffer& (0+255),w,b
 20223  00F6BC  6ED9               	movwf	fsr2l,c
 20224  00F6BE  5167               	movf	(??__get_item+1)& (0+255),w,b
 20225  00F6C0  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20226  00F6C2  6EDA               	movwf	fsr2h,c
 20227  00F6C4  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20228  00F6C6  0D01               	mullw	1
 20229  00F6C8  50F3               	movf	prodl,w,c
 20230  00F6CA  2562               	addwf	__get_item@value_string& (0+255),w,b
 20231  00F6CC  6EE1               	movwf	fsr1l,c
 20232  00F6CE  50F4               	movf	prodh,w,c
 20233  00F6D0  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20234  00F6D2  6EE2               	movwf	fsr1h,c
 20235  00F6D4  CFDF FFE7          	movff	indf2,indf1
 20236                           
 20237                           ; BSR set to: 0
 20238  00F6D8  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20239  00F6DA  D7C1               	goto	l16714
 20240  00F6DC                     u15810:
 20241                           
 20242                           ; BSR set to: 0
 20243                           ;config_file.c: 96: };config_file.c: 97: value_string[value_ctr++] = 0;
 20244                           
 20245                           ; BSR set to: 0
 20246  00F6DC  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20247  00F6DE  0D01               	mullw	1
 20248  00F6E0  50F3               	movf	prodl,w,c
 20249  00F6E2  2562               	addwf	__get_item@value_string& (0+255),w,b
 20250  00F6E4  6ED9               	movwf	fsr2l,c
 20251  00F6E6  50F4               	movf	prodh,w,c
 20252  00F6E8  2163               	addwfc	(__get_item@value_string+1)& (0+255),w,b
 20253  00F6EA  6EDA               	movwf	fsr2h,c
 20254  00F6EC  0E00               	movlw	0
 20255  00F6EE  6EDF               	movwf	indf2,c
 20256  00F6F0                     
 20257                           ; BSR set to: 0
 20258                           ;config_file.c: 101: {;config_file.c: 102: ++value_ctr;
 20259                           
 20260                           ; BSR set to: 0
 20261                           
 20262                           ;config_file.c: 100: while((buffer[item_ctr+value_ctr]=='\r') || (buffer[item_ctr+value_
      +                          ctr]=='\n') || (buffer[item_ctr+value_ctr]=='\t') || (buffer[item_ctr+value_ctr]==' '))
 20263                           
 20264                           ; BSR set to: 0
 20265  00F6F0  2B69               	incf	__get_item@value_ctr& (0+255),f,b
 20266                           
 20267                           ; BSR set to: 0
 20268                           
 20269                           ; BSR set to: 0
 20270  00F6F2  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20271  00F6F4  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20272  00F6F8  6B67               	clrf	(??__get_item+1)& (0+255),b
 20273  00F6FA  2766               	addwf	??__get_item& (0+255),f,b
 20274  00F6FC  0E00               	movlw	0
 20275  00F6FE  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20276  00F700  5166               	movf	??__get_item& (0+255),w,b
 20277  00F702  2564               	addwf	__get_item@buffer& (0+255),w,b
 20278  00F704  6ED9               	movwf	fsr2l,c
 20279  00F706  5167               	movf	(??__get_item+1)& (0+255),w,b
 20280  00F708  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20281  00F70A  6EDA               	movwf	fsr2h,c
 20282  00F70C  0E0D               	movlw	13
 20283  00F70E  18DE               	xorwf	postinc2,w,c
 20284  00F710  B4D8               	btfsc	status,2,c
 20285  00F712  D7EE               	goto	l16730
 20286                           
 20287                           ; BSR set to: 0
 20288  00F714  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20289  00F716  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20290  00F71A  6B67               	clrf	(??__get_item+1)& (0+255),b
 20291  00F71C  2766               	addwf	??__get_item& (0+255),f,b
 20292  00F71E  0E00               	movlw	0
 20293  00F720  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20294  00F722  5166               	movf	??__get_item& (0+255),w,b
 20295  00F724  2564               	addwf	__get_item@buffer& (0+255),w,b
 20296  00F726  6ED9               	movwf	fsr2l,c
 20297  00F728  5167               	movf	(??__get_item+1)& (0+255),w,b
 20298  00F72A  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20299  00F72C  6EDA               	movwf	fsr2h,c
 20300  00F72E  0E0A               	movlw	10
 20301  00F730  18DE               	xorwf	postinc2,w,c
 20302  00F732  B4D8               	btfsc	status,2,c
 20303  00F734  D7DD               	goto	l16730
 20304                           
 20305                           ; BSR set to: 0
 20306  00F736  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20307  00F738  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20308  00F73C  6B67               	clrf	(??__get_item+1)& (0+255),b
 20309  00F73E  2766               	addwf	??__get_item& (0+255),f,b
 20310  00F740  0E00               	movlw	0
 20311  00F742  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20312  00F744  5166               	movf	??__get_item& (0+255),w,b
 20313  00F746  2564               	addwf	__get_item@buffer& (0+255),w,b
 20314  00F748  6ED9               	movwf	fsr2l,c
 20315  00F74A  5167               	movf	(??__get_item+1)& (0+255),w,b
 20316  00F74C  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20317  00F74E  6EDA               	movwf	fsr2h,c
 20318  00F750  0E09               	movlw	9
 20319  00F752  18DE               	xorwf	postinc2,w,c
 20320  00F754  B4D8               	btfsc	status,2,c
 20321  00F756  D7CC               	goto	l16730
 20322                           
 20323                           ; BSR set to: 0
 20324  00F758  5169               	movf	__get_item@value_ctr& (0+255),w,b
 20325  00F75A  C06A  F066         	movff	__get_item@item_ctr,??__get_item
 20326  00F75E  6B67               	clrf	(??__get_item+1)& (0+255),b
 20327  00F760  2766               	addwf	??__get_item& (0+255),f,b
 20328  00F762  0E00               	movlw	0
 20329  00F764  2367               	addwfc	(??__get_item+1)& (0+255),f,b
 20330  00F766  5166               	movf	??__get_item& (0+255),w,b
 20331  00F768  2564               	addwf	__get_item@buffer& (0+255),w,b
 20332  00F76A  6ED9               	movwf	fsr2l,c
 20333  00F76C  5167               	movf	(??__get_item+1)& (0+255),w,b
 20334  00F76E  2165               	addwfc	(__get_item@buffer+1)& (0+255),w,b
 20335  00F770  6EDA               	movwf	fsr2h,c
 20336  00F772  0E20               	movlw	32
 20337  00F774  18DE               	xorwf	postinc2,w,c
 20338  00F776  B4D8               	btfsc	status,2,c
 20339  00F778  D7BB               	goto	l16730
 20340                           
 20341                           ; BSR set to: 0
 20342                           ;config_file.c: 103: };config_file.c: 106: return (item_ctr+value_ctr);
 20343                           
 20344                           ; BSR set to: 0
 20345  00F77A  516A               	movf	__get_item@item_ctr& (0+255),w,b
 20346  00F77C  2569               	addwf	__get_item@value_ctr& (0+255),w,b
 20347  00F77E  0012               	return	
 20348  00F780                     __end_of__get_item:
 20349                           	opt stack 0
 20350                           tblptru	equ	0xFF8
 20351                           tblptrh	equ	0xFF7
 20352                           tblptrl	equ	0xFF6
 20353                           tablat	equ	0xFF5
 20354                           prodh	equ	0xFF4
 20355                           prodl	equ	0xFF3
 20356                           postinc0	equ	0xFEE
 20357                           wreg	equ	0xFE8
 20358                           indf1	equ	0xFE7
 20359                           postinc1	equ	0xFE6
 20360                           postdec1	equ	0xFE5
 20361                           plusw1	equ	0xFE3
 20362                           fsr1h	equ	0xFE2
 20363                           fsr1l	equ	0xFE1
 20364                           indf2	equ	0xFDF
 20365                           postinc2	equ	0xFDE
 20366                           postdec2	equ	0xFDD
 20367                           plusw2	equ	0xFDB
 20368                           fsr2h	equ	0xFDA
 20369                           fsr2l	equ	0xFD9
 20370                           status	equ	0xFD8
 20371                           
 20372 ;; *************** function _adc_init *****************
 20373 ;; Defined at:
 20374 ;;		line 19 in file "adc.c"
 20375 ;; Parameters:    Size  Location     Type
 20376 ;;		None
 20377 ;; Auto vars:     Size  Location     Type
 20378 ;;		None
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  1    wreg      void 
 20381 ;; Registers used:
 20382 ;;		wreg, status,2
 20383 ;; Tracked objects:
 20384 ;;		On entry : 0/0
 20385 ;;		On exit  : 0/0
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20388 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20391 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20392 ;;Total ram usage:        0 bytes
 20393 ;; Hardware stack levels used:    1
 20394 ;; Hardware stack levels required when called:   10
 20395 ;; This function calls:
 20396 ;;		Nothing
 20397 ;; This function is called by:
 20398 ;;		_system_init
 20399 ;; This function uses a non-reentrant model
 20400 ;;
 20401                           
 20402                           	psect	text85
 20403  014B78                     __ptext85:
 20404                           	opt stack 0
 20405  014B78                     _adc_init:
 20406                           	opt stack 19
 20407                           
 20408                           ;adc.c: 22: os.temperature[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20409                           
 20410                           ; BSR set to: 0
 20411                           ;incstack = 0
 20412  014B78  0E00               	movlw	0
 20413  014B7A  0101               	movlb	1	; () banked
 20414  014B7C  6F8E               	movwf	(_os+42)& (0+255),b	;volatile
 20415  014B7E  0E00               	movlw	0
 20416  014B80  6F8D               	movwf	(_os+41)& (0+255),b	;volatile
 20417                           
 20418                           ;adc.c: 23: os.temperature[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20419  014B82  0E00               	movlw	0
 20420  014B84  6F90               	movwf	(_os+44)& (0+255),b	;volatile
 20421  014B86  0E00               	movlw	0
 20422  014B88  6F8F               	movwf	(_os+43)& (0+255),b	;volatile
 20423                           
 20424                           ;adc.c: 24: os.fan_on = 0;
 20425  014B8A  0E00               	movlw	0
 20426  014B8C  6F94               	movwf	(_os+48)& (0+255),b	;volatile
 20427                           
 20428                           ;adc.c: 25: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 20429  014B8E  0E00               	movlw	0
 20430  014B90  0102               	movlb	2	; () banked
 20431  014B92  6F1F               	movwf	_params& (0+255),b
 20432                           
 20433                           ;adc.c: 26: params.temperature_adc_sum[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20434  014B94  0E00               	movlw	0
 20435  014B96  6F21               	movwf	(_params+2)& (0+255),b
 20436  014B98  0E00               	movlw	0
 20437  014B9A  6F20               	movwf	(_params+1)& (0+255),b
 20438                           
 20439                           ;adc.c: 27: params.temperature_count[TEMPERATURE_SOURCE_INTERNAL] = 0;
 20440  014B9C  0E00               	movlw	0
 20441  014B9E  6F24               	movwf	(_params+5)& (0+255),b
 20442                           
 20443                           ;adc.c: 28: params.temperature_adc_sum[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20444  014BA0  0E00               	movlw	0
 20445  014BA2  6F23               	movwf	(_params+4)& (0+255),b
 20446  014BA4  0E00               	movlw	0
 20447  014BA6  6F22               	movwf	(_params+3)& (0+255),b
 20448                           
 20449                           ;adc.c: 29: params.temperature_count[TEMPERATURE_SOURCE_EXTERNAL] = 0;
 20450  014BA8  0E00               	movlw	0
 20451  014BAA  6F25               	movwf	(_params+6)& (0+255),b
 20452                           
 20453                           ; BSR set to: 2
 20454                           ;adc.c: 31: ADCON0bits.VCFG1 = 0;
 20455  014BAC  9EC2               	bcf	4034,7,c	;volatile
 20456                           
 20457                           ; BSR set to: 2
 20458                           ;adc.c: 32: ADCON0bits.VCFG0 = 0;
 20459  014BAE  9CC2               	bcf	4034,6,c	;volatile
 20460                           
 20461                           ;adc.c: 33: ADCON0bits.CHS = 0b1001;
 20462  014BB0  50C2               	movf	4034,w,c	;volatile
 20463  014BB2  0BC3               	andlw	-61
 20464  014BB4  0924               	iorlw	36
 20465  014BB6  6EC2               	movwf	4034,c	;volatile
 20466                           
 20467                           ; BSR set to: 2
 20468                           ;adc.c: 35: ADCON1bits.ADFM = 1;
 20469  014BB8  8EC1               	bsf	4033,7,c	;volatile
 20470                           
 20471                           ; BSR set to: 2
 20472                           ;adc.c: 36: ADCON1bits.ADCAL = 0;
 20473  014BBA  9CC1               	bcf	4033,6,c	;volatile
 20474                           
 20475                           ; BSR set to: 2
 20476                           ;adc.c: 37: ADCON1bits.ACQT = 0b111;
 20477  014BBC  86C1               	bsf	4033,3,c	;volatile
 20478  014BBE  88C1               	bsf	4033,4,c	;volatile
 20479  014BC0  8AC1               	bsf	4033,5,c	;volatile
 20480                           
 20481                           ;adc.c: 38: ADCON1bits.ADCS = 0b110;
 20482  014BC2  50C1               	movf	4033,w,c	;volatile
 20483  014BC4  0BF8               	andlw	-8
 20484  014BC6  0906               	iorlw	6
 20485  014BC8  6EC1               	movwf	4033,c	;volatile
 20486                           
 20487                           ; BSR set to: 2
 20488                           ;adc.c: 40: ADCON0bits.ADON = 1;
 20489  014BCA  80C2               	bsf	4034,0,c	;volatile
 20490                           
 20491                           ; BSR set to: 2
 20492                           ;adc.c: 41: ADCON0bits.GO = 1;
 20493  014BCC  82C2               	bsf	4034,1,c	;volatile
 20494                           
 20495                           ; BSR set to: 2
 20496  014BCE  0012               	return		;funcret
 20497  014BD0                     __end_of_adc_init:
 20498                           	opt stack 0
 20499                           tblptru	equ	0xFF8
 20500                           tblptrh	equ	0xFF7
 20501                           tblptrl	equ	0xFF6
 20502                           tablat	equ	0xFF5
 20503                           prodh	equ	0xFF4
 20504                           prodl	equ	0xFF3
 20505                           postinc0	equ	0xFEE
 20506                           wreg	equ	0xFE8
 20507                           indf1	equ	0xFE7
 20508                           postinc1	equ	0xFE6
 20509                           postdec1	equ	0xFE5
 20510                           plusw1	equ	0xFE3
 20511                           fsr1h	equ	0xFE2
 20512                           fsr1l	equ	0xFE1
 20513                           indf2	equ	0xFDF
 20514                           postinc2	equ	0xFDE
 20515                           postdec2	equ	0xFDD
 20516                           plusw2	equ	0xFDB
 20517                           fsr2h	equ	0xFDA
 20518                           fsr2l	equ	0xFD9
 20519                           status	equ	0xFD8
 20520                           
 20521 ;; *************** function __system_timer0_init *****************
 20522 ;; Defined at:
 20523 ;;		line 125 in file "os.c"
 20524 ;; Parameters:    Size  Location     Type
 20525 ;;		None
 20526 ;; Auto vars:     Size  Location     Type
 20527 ;;		None
 20528 ;; Return value:  Size  Location     Type
 20529 ;;                  1    wreg      void 
 20530 ;; Registers used:
 20531 ;;		wreg, status,2
 20532 ;; Tracked objects:
 20533 ;;		On entry : 0/0
 20534 ;;		On exit  : 0/0
 20535 ;;		Unchanged: 0/0
 20536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20541 ;;Total ram usage:        0 bytes
 20542 ;; Hardware stack levels used:    1
 20543 ;; Hardware stack levels required when called:   10
 20544 ;; This function calls:
 20545 ;;		Nothing
 20546 ;; This function is called by:
 20547 ;;		_system_init
 20548 ;; This function uses a non-reentrant model
 20549 ;;
 20550                           
 20551                           	psect	text86
 20552  0158D6                     __ptext86:
 20553                           	opt stack 0
 20554  0158D6                     __system_timer0_init:
 20555                           	opt stack 19
 20556                           
 20557                           ;os.c: 130: T0CONbits.T0CS = 0;
 20558                           
 20559                           ; BSR set to: 2
 20560                           ;incstack = 0
 20561  0158D6  9AD5               	bcf	4053,5,c	;volatile
 20562                           
 20563                           ;os.c: 132: T0CONbits.T08BIT = 0;
 20564  0158D8  9CD5               	bcf	4053,6,c	;volatile
 20565                           
 20566                           ;os.c: 134: T0CONbits.T0PS2 = 0;
 20567  0158DA  94D5               	bcf	4053,2,c	;volatile
 20568                           
 20569                           ;os.c: 135: T0CONbits.T0PS1 = 1;
 20570  0158DC  82D5               	bsf	4053,1,c	;volatile
 20571                           
 20572                           ;os.c: 136: T0CONbits.T0PS0 = 0;
 20573  0158DE  90D5               	bcf	4053,0,c	;volatile
 20574                           
 20575                           ;os.c: 138: T0CONbits.PSA = 0;
 20576  0158E0  96D5               	bcf	4053,3,c	;volatile
 20577                           
 20578                           ;os.c: 140: TMR0H = 0xFA;
 20579  0158E2  0EFA               	movlw	250
 20580  0158E4  6ED7               	movwf	4055,c	;volatile
 20581                           
 20582                           ;os.c: 141: TMR0L = 0x24;
 20583  0158E6  0E24               	movlw	36
 20584  0158E8  6ED6               	movwf	4054,c	;volatile
 20585                           
 20586                           ;os.c: 143: T0CONbits.TMR0ON = 1;
 20587  0158EA  8ED5               	bsf	4053,7,c	;volatile
 20588                           
 20589                           ;os.c: 146: INTCONbits.TMR0IF = 0;
 20590  0158EC  94F2               	bcf	intcon,2,c	;volatile
 20591                           
 20592                           ;os.c: 147: INTCONbits.TMR0IE = 1;
 20593  0158EE  8AF2               	bsf	intcon,5,c	;volatile
 20594                           
 20595                           ;os.c: 148: INTCONbits.GIE = 1;
 20596  0158F0  8EF2               	bsf	intcon,7,c	;volatile
 20597                           
 20598                           ;os.c: 151: os.subTimeSlot = 0;
 20599  0158F2  0E00               	movlw	0
 20600  0158F4  0101               	movlb	1	; () banked
 20601  0158F6  6F64               	movwf	_os& (0+255),b	;volatile
 20602                           
 20603                           ;os.c: 152: os.timeSlot = 0;
 20604  0158F8  0E00               	movlw	0
 20605  0158FA  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 20606                           
 20607                           ;os.c: 153: os.done = 0;
 20608  0158FC  0E00               	movlw	0
 20609  0158FE  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 20610                           
 20611                           ; BSR set to: 1
 20612  015900  0012               	return		;funcret
 20613  015902                     __end_of__system_timer0_init:
 20614                           	opt stack 0
 20615                           tblptru	equ	0xFF8
 20616                           tblptrh	equ	0xFF7
 20617                           tblptrl	equ	0xFF6
 20618                           tablat	equ	0xFF5
 20619                           prodh	equ	0xFF4
 20620                           prodl	equ	0xFF3
 20621                           intcon	equ	0xFF2
 20622                           postinc0	equ	0xFEE
 20623                           wreg	equ	0xFE8
 20624                           indf1	equ	0xFE7
 20625                           postinc1	equ	0xFE6
 20626                           postdec1	equ	0xFE5
 20627                           plusw1	equ	0xFE3
 20628                           fsr1h	equ	0xFE2
 20629                           fsr1l	equ	0xFE1
 20630                           indf2	equ	0xFDF
 20631                           postinc2	equ	0xFDE
 20632                           postdec2	equ	0xFDD
 20633                           plusw2	equ	0xFDB
 20634                           fsr2h	equ	0xFDA
 20635                           fsr2l	equ	0xFD9
 20636                           status	equ	0xFD8
 20637                           
 20638 ;; *************** function __system_pin_setup *****************
 20639 ;; Defined at:
 20640 ;;		line 59 in file "os.c"
 20641 ;; Parameters:    Size  Location     Type
 20642 ;;		None
 20643 ;; Auto vars:     Size  Location     Type
 20644 ;;		None
 20645 ;; Return value:  Size  Location     Type
 20646 ;;                  1    wreg      void 
 20647 ;; Registers used:
 20648 ;;		wreg, status,2
 20649 ;; Tracked objects:
 20650 ;;		On entry : 0/0
 20651 ;;		On exit  : 0/0
 20652 ;;		Unchanged: 0/0
 20653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20658 ;;Total ram usage:        0 bytes
 20659 ;; Hardware stack levels used:    1
 20660 ;; Hardware stack levels required when called:   10
 20661 ;; This function calls:
 20662 ;;		Nothing
 20663 ;; This function is called by:
 20664 ;;		_system_init
 20665 ;; This function uses a non-reentrant model
 20666 ;;
 20667                           
 20668                           	psect	text87
 20669  014588                     __ptext87:
 20670                           	opt stack 0
 20671  014588                     __system_pin_setup:
 20672                           	opt stack 19
 20673                           
 20674                           ;os.c: 62: TRISDbits.TRISD5 = 1;
 20675                           
 20676                           ; BSR set to: 1
 20677                           ;incstack = 0
 20678  014588  8A95               	bsf	3989,5,c	;volatile
 20679                           
 20680                           ;os.c: 63: TRISDbits.TRISD4 = 0;
 20681  01458A  9895               	bcf	3989,4,c	;volatile
 20682                           
 20683                           ;os.c: 64: TRISDbits.TRISD6 = 0;
 20684  01458C  9C95               	bcf	3989,6,c	;volatile
 20685                           
 20686                           ;os.c: 65: TRISDbits.TRISD7 = 0;
 20687  01458E  9E95               	bcf	3989,7,c	;volatile
 20688                           
 20689                           ;os.c: 66: LATDbits.LD7 = 1;
 20690  014590  8E8C               	bsf	3980,7,c	;volatile
 20691                           
 20692                           ;os.c: 68: TRISBbits.TRISB3 = 1;
 20693  014592  8693               	bsf	3987,3,c	;volatile
 20694                           
 20695                           ;os.c: 69: ANCON1bits.PCFG9 = 0;
 20696  014594  010F               	movlb	15	; () banked
 20697  014596  9349               	bcf	73,1,b	;volatile
 20698                           
 20699                           ;os.c: 71: TRISCbits.TRISC7 = 0;
 20700  014598  9E94               	bcf	3988,7,c	;volatile
 20701                           
 20702                           ;os.c: 72: LATCbits.LC7 = 0;
 20703  01459A  9E8B               	bcf	3979,7,c	;volatile
 20704                           
 20705                           ;os.c: 74: TRISCbits.TRISC6 = 0;
 20706  01459C  9C94               	bcf	3988,6,c	;volatile
 20707                           
 20708                           ;os.c: 75: LATCbits.LC6 = 0;
 20709  01459E  9C8B               	bcf	3979,6,c	;volatile
 20710                           
 20711                           ;os.c: 77: TRISAbits.TRISA3 = 0;
 20712  0145A0  9692               	bcf	3986,3,c	;volatile
 20713                           
 20714                           ;os.c: 78: LATAbits.LA3 = 0;
 20715  0145A2  9689               	bcf	3977,3,c	;volatile
 20716                           
 20717                           ;os.c: 80: TRISCbits.TRISC1 = 0;
 20718  0145A4  9294               	bcf	3988,1,c	;volatile
 20719                           
 20720                           ;os.c: 81: LATCbits.LC1 = 0;
 20721  0145A6  928B               	bcf	3979,1,c	;volatile
 20722                           
 20723                           ;os.c: 86: TRISBbits.TRISB5 = 1;
 20724  0145A8  8A93               	bsf	3987,5,c	;volatile
 20725                           
 20726                           ;os.c: 87: TRISBbits.TRISB4 = 1;
 20727  0145AA  8893               	bsf	3987,4,c	;volatile
 20728                           
 20729                           ;os.c: 89: TRISBbits.TRISB0 = 0;
 20730  0145AC  9093               	bcf	3987,0,c	;volatile
 20731                           
 20732                           ;os.c: 90: LATBbits.LB0 = 1;
 20733  0145AE  808A               	bsf	3978,0,c	;volatile
 20734                           
 20735                           ;os.c: 92: TRISBbits.TRISB2 = 0;
 20736  0145B0  9493               	bcf	3987,2,c	;volatile
 20737                           
 20738                           ;os.c: 93: LATBbits.LB2 = 0;
 20739  0145B2  948A               	bcf	3978,2,c	;volatile
 20740                           
 20741                           ;os.c: 95: TRISBbits.TRISB1 = 0;
 20742  0145B4  9293               	bcf	3987,1,c	;volatile
 20743                           
 20744                           ;os.c: 96: ANCON1bits.PCFG10 = 1;
 20745  0145B6  8549               	bsf	73,2,b	;volatile
 20746                           
 20747                           ;os.c: 97: LATBbits.LB1 = 0;
 20748  0145B8  928A               	bcf	3978,1,c	;volatile
 20749                           
 20750                           ; BSR set to: 15
 20751                           ;os.c: 98: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 20752  0145BA  0E55               	movlw	85
 20753  0145BC  6EA7               	movwf	4007,c	;volsfr
 20754  0145BE  0EAA               	movlw	170
 20755  0145C0  6EA7               	movwf	4007,c	;volsfr
 20756                           
 20757                           ; BSR set to: 15
 20758  0145C2  010E               	movlb	14	; () banked
 20759  0145C4  91BF               	bcf	191,0,b	;volatile
 20760                           
 20761                           ;os.c: 99: RPOR4 = 14;
 20762  0145C6  0E0E               	movlw	14
 20763  0145C8  6FC4               	movwf	196,b	;volatile
 20764                           
 20765                           ;os.c: 100: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 20766  0145CA  0E55               	movlw	85
 20767  0145CC  6EA7               	movwf	4007,c	;volsfr
 20768  0145CE  0EAA               	movlw	170
 20769  0145D0  6EA7               	movwf	4007,c	;volsfr
 20770                           
 20771                           ; BSR set to: 14
 20772  0145D2  81BF               	bsf	191,0,b	;volatile
 20773                           
 20774                           ; BSR set to: 14
 20775                           ;os.c: 102: TRISDbits.TRISD2 = 1;
 20776  0145D4  8495               	bsf	3989,2,c	;volatile
 20777                           
 20778                           ; BSR set to: 14
 20779                           ;os.c: 104: TRISEbits.TRISE2 = 1;
 20780  0145D6  8496               	bsf	3990,2,c	;volatile
 20781                           
 20782                           ; BSR set to: 14
 20783                           ;os.c: 105: ANCON0bits.PCFG7 = 1;
 20784  0145D8  010F               	movlb	15	; () banked
 20785  0145DA  8F48               	bsf	72,7,b	;volatile
 20786                           
 20787                           ; BSR set to: 15
 20788                           ;os.c: 107: TRISEbits.TRISE0 = 1;
 20789  0145DC  8096               	bsf	3990,0,c	;volatile
 20790                           
 20791                           ; BSR set to: 15
 20792                           ;os.c: 108: ANCON0bits.PCFG5 = 1;
 20793  0145DE  8B48               	bsf	72,5,b	;volatile
 20794                           
 20795                           ; BSR set to: 15
 20796                           ;os.c: 110: TRISEbits.TRISE1 = 1;
 20797  0145E0  8296               	bsf	3990,1,c	;volatile
 20798                           
 20799                           ; BSR set to: 15
 20800                           ;os.c: 111: ANCON0bits.PCFG6 = 1;
 20801  0145E2  8D48               	bsf	72,6,b	;volatile
 20802                           
 20803                           ; BSR set to: 15
 20804                           ;os.c: 113: TRISAbits.TRISA0 = 1;
 20805  0145E4  8092               	bsf	3986,0,c	;volatile
 20806                           
 20807                           ; BSR set to: 15
 20808                           ;os.c: 114: ANCON0bits.PCFG0 = 1;
 20809  0145E6  8148               	bsf	72,0,b	;volatile
 20810                           
 20811                           ; BSR set to: 15
 20812                           ;os.c: 116: TRISAbits.TRISA2 = 1;
 20813  0145E8  8492               	bsf	3986,2,c	;volatile
 20814                           
 20815                           ; BSR set to: 15
 20816                           ;os.c: 117: ANCON0bits.PCFG2 = 1;
 20817  0145EA  8548               	bsf	72,2,b	;volatile
 20818                           
 20819                           ; BSR set to: 15
 20820                           ;os.c: 119: TRISAbits.TRISA1 = 1;
 20821  0145EC  8292               	bsf	3986,1,c	;volatile
 20822                           
 20823                           ; BSR set to: 15
 20824                           ;os.c: 120: ANCON0bits.PCFG1 = 1;
 20825  0145EE  8348               	bsf	72,1,b	;volatile
 20826                           
 20827                           ; BSR set to: 15
 20828  0145F0  0012               	return		;funcret
 20829  0145F2                     __end_of__system_pin_setup:
 20830                           	opt stack 0
 20831                           tblptru	equ	0xFF8
 20832                           tblptrh	equ	0xFF7
 20833                           tblptrl	equ	0xFF6
 20834                           tablat	equ	0xFF5
 20835                           prodh	equ	0xFF4
 20836                           prodl	equ	0xFF3
 20837                           intcon	equ	0xFF2
 20838                           postinc0	equ	0xFEE
 20839                           wreg	equ	0xFE8
 20840                           indf1	equ	0xFE7
 20841                           postinc1	equ	0xFE6
 20842                           postdec1	equ	0xFE5
 20843                           plusw1	equ	0xFE3
 20844                           fsr1h	equ	0xFE2
 20845                           fsr1l	equ	0xFE1
 20846                           indf2	equ	0xFDF
 20847                           postinc2	equ	0xFDE
 20848                           postdec2	equ	0xFDD
 20849                           plusw2	equ	0xFDB
 20850                           fsr2h	equ	0xFDA
 20851                           fsr2l	equ	0xFD9
 20852                           status	equ	0xFD8
 20853                           
 20854 ;; *************** function __backlight_init *****************
 20855 ;; Defined at:
 20856 ;;		line 158 in file "os.c"
 20857 ;; Parameters:    Size  Location     Type
 20858 ;;		None
 20859 ;; Auto vars:     Size  Location     Type
 20860 ;;		None
 20861 ;; Return value:  Size  Location     Type
 20862 ;;                  1    wreg      void 
 20863 ;; Registers used:
 20864 ;;		None
 20865 ;; Tracked objects:
 20866 ;;		On entry : 0/0
 20867 ;;		On exit  : 0/0
 20868 ;;		Unchanged: 0/0
 20869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20874 ;;Total ram usage:        0 bytes
 20875 ;; Hardware stack levels used:    1
 20876 ;; Hardware stack levels required when called:   10
 20877 ;; This function calls:
 20878 ;;		Nothing
 20879 ;; This function is called by:
 20880 ;;		_system_init
 20881 ;; This function uses a non-reentrant model
 20882 ;;
 20883                           
 20884                           	psect	text88
 20885  015DB6                     __ptext88:
 20886                           	opt stack 0
 20887  015DB6                     __backlight_init:
 20888                           	opt stack 19
 20889                           
 20890                           ;os.c: 160: LATCbits.LC1 = 1;
 20891                           
 20892                           ; BSR set to: 15
 20893                           ;incstack = 0
 20894  015DB6  828B               	bsf	3979,1,c	;volatile
 20895  015DB8  0012               	return		;funcret
 20896  015DBA                     __end_of__backlight_init:
 20897                           	opt stack 0
 20898                           tblptru	equ	0xFF8
 20899                           tblptrh	equ	0xFF7
 20900                           tblptrl	equ	0xFF6
 20901                           tablat	equ	0xFF5
 20902                           prodh	equ	0xFF4
 20903                           prodl	equ	0xFF3
 20904                           intcon	equ	0xFF2
 20905                           postinc0	equ	0xFEE
 20906                           wreg	equ	0xFE8
 20907                           indf1	equ	0xFE7
 20908                           postinc1	equ	0xFE6
 20909                           postdec1	equ	0xFE5
 20910                           plusw1	equ	0xFE3
 20911                           fsr1h	equ	0xFE2
 20912                           fsr1l	equ	0xFE1
 20913                           indf2	equ	0xFDF
 20914                           postinc2	equ	0xFDE
 20915                           postdec2	equ	0xFDD
 20916                           plusw2	equ	0xFDB
 20917                           fsr2h	equ	0xFDA
 20918                           fsr2l	equ	0xFD9
 20919                           status	equ	0xFD8
 20920                           
 20921 ;; *************** function _motor_process_cue *****************
 20922 ;; Defined at:
 20923 ;;		line 620 in file "motor.c"
 20924 ;; Parameters:    Size  Location     Type
 20925 ;;		None
 20926 ;; Auto vars:     Size  Location     Type
 20927 ;;		None
 20928 ;; Return value:  Size  Location     Type
 20929 ;;                  1    wreg      void 
 20930 ;; Registers used:
 20931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20932 ;; Tracked objects:
 20933 ;;		On entry : 0/0
 20934 ;;		On exit  : 0/0
 20935 ;;		Unchanged: 0/0
 20936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20938 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20940 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20941 ;;Total ram usage:        0 bytes
 20942 ;; Hardware stack levels used:    1
 20943 ;; Hardware stack levels required when called:   11
 20944 ;; This function calls:
 20945 ;;		__motor_run
 20946 ;;		_motor_items_in_cue
 20947 ;; This function is called by:
 20948 ;;		_main
 20949 ;; This function uses a non-reentrant model
 20950 ;;
 20951                           
 20952                           	psect	text89
 20953  013602                     __ptext89:
 20954                           	opt stack 0
 20955  013602                     _motor_process_cue:
 20956                           	opt stack 19
 20957                           
 20958                           ;motor.c: 622: if(motor_items_in_cue()==0)
 20959                           
 20960                           ;incstack = 0
 20961  013602  ECA3  F0AE         	call	_motor_items_in_cue	;wreg free
 20962  013606  0900               	iorlw	0
 20963  013608  B4D8               	btfsc	status,2,c
 20964  01360A  0012               	return	
 20965                           
 20966                           ;motor.c: 626: };motor.c: 628: if(os.busy)
 20967                           
 20968                           ;motor.c: 623: {;motor.c: 625: return;
 20969  01360C  0101               	movlb	1	; () banked
 20970  01360E  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 20971  013610  A4D8               	btfss	status,2,c
 20972  013612  0012               	return	
 20973                           
 20974                           ; BSR set to: 1
 20975                           ;motor.c: 632: };motor.c: 635: _motor_run(;motor.c: 636: motor_command_cue[motor_cue_rea
      +                          d_index].direction,;motor.c: 637: motor_command_cue[motor_cue_read_index].distance,;moto
      +                          r.c: 638: motor_command_cue[motor_cue_read_index].speed,;motor.c: 639: motor_command_cue
      +                          [motor_cue_read_index].type;motor.c: 640: );
 20976                           
 20977                           ; BSR set to: 1
 20978                           
 20979                           ; BSR set to: 1
 20980                           ;motor.c: 629: {;motor.c: 631: return;
 20981  013614  514B               	movf	_motor_cue_read_index& (0+255),w,b
 20982  013616  0D08               	mullw	8
 20983  013618  0E01               	movlw	1
 20984  01361A  26F3               	addwf	prodl,f,c
 20985  01361C  0E00               	movlw	0
 20986  01361E  22F4               	addwfc	prodh,f,c
 20987  013620  0E00               	movlw	low _motor_command_cue
 20988  013622  24F3               	addwf	prodl,w,c
 20989  013624  6ED9               	movwf	fsr2l,c
 20990  013626  0E03               	movlw	high _motor_command_cue
 20991  013628  20F4               	addwfc	prodh,w,c
 20992  01362A  6EDA               	movwf	fsr2h,c
 20993  01362C  CFDE F060          	movff	postinc2,__motor_run@distance_in_steps
 20994  013630  CFDE F061          	movff	postinc2,__motor_run@distance_in_steps+1
 20995  013634  CFDE F062          	movff	postinc2,__motor_run@distance_in_steps+2
 20996  013638  CFDE F063          	movff	postinc2,__motor_run@distance_in_steps+3
 20997  01363C  514B               	movf	_motor_cue_read_index& (0+255),w,b
 20998  01363E  0D08               	mullw	8
 20999  013640  0E05               	movlw	5
 21000  013642  26F3               	addwf	prodl,f,c
 21001  013644  0E00               	movlw	0
 21002  013646  22F4               	addwfc	prodh,f,c
 21003  013648  0E00               	movlw	low _motor_command_cue
 21004  01364A  24F3               	addwf	prodl,w,c
 21005  01364C  6ED9               	movwf	fsr2l,c
 21006  01364E  0E03               	movlw	high _motor_command_cue
 21007  013650  20F4               	addwfc	prodh,w,c
 21008  013652  6EDA               	movwf	fsr2h,c
 21009  013654  CFDE F064          	movff	postinc2,__motor_run@speed
 21010  013658  CFDD F065          	movff	postdec2,__motor_run@speed+1
 21011  01365C  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21012  01365E  0D08               	mullw	8
 21013  013660  0E07               	movlw	7
 21014  013662  26F3               	addwf	prodl,f,c
 21015  013664  0E00               	movlw	0
 21016  013666  22F4               	addwfc	prodh,f,c
 21017  013668  0E00               	movlw	low _motor_command_cue
 21018  01366A  24F3               	addwf	prodl,w,c
 21019  01366C  6ED9               	movwf	fsr2l,c
 21020  01366E  0E03               	movlw	high _motor_command_cue
 21021  013670  20F4               	addwfc	prodh,w,c
 21022  013672  6EDA               	movwf	fsr2h,c
 21023  013674  50DF               	movf	indf2,w,c
 21024  013676  0100               	movlb	0	; () banked
 21025  013678  6F66               	movwf	__motor_run@type& (0+255),b
 21026  01367A  0101               	movlb	1	; () banked
 21027  01367C  514B               	movf	_motor_cue_read_index& (0+255),w,b
 21028  01367E  0D08               	mullw	8
 21029  013680  0E00               	movlw	low _motor_command_cue
 21030  013682  24F3               	addwf	prodl,w,c
 21031  013684  6ED9               	movwf	fsr2l,c
 21032  013686  0E03               	movlw	high _motor_command_cue
 21033  013688  20F4               	addwfc	prodh,w,c
 21034  01368A  6EDA               	movwf	fsr2h,c
 21035  01368C  50DF               	movf	indf2,w,c
 21036  01368E  ECD7  F075         	call	__motor_run
 21037                           
 21038                           ;motor.c: 642: ++motor_cue_read_index;
 21039  013692  0101               	movlb	1	; () banked
 21040  013694  2B4B               	incf	_motor_cue_read_index& (0+255),f,b
 21041                           
 21042                           ; BSR set to: 1
 21043                           ;motor.c: 643: motor_cue_read_index &= 0b111;
 21044  013696  0E07               	movlw	7
 21045  013698  174B               	andwf	_motor_cue_read_index& (0+255),f,b
 21046  01369A  0012               	return		;funcret
 21047  01369C                     __end_of_motor_process_cue:
 21048                           	opt stack 0
 21049                           tblptru	equ	0xFF8
 21050                           tblptrh	equ	0xFF7
 21051                           tblptrl	equ	0xFF6
 21052                           tablat	equ	0xFF5
 21053                           prodh	equ	0xFF4
 21054                           prodl	equ	0xFF3
 21055                           intcon	equ	0xFF2
 21056                           postinc0	equ	0xFEE
 21057                           wreg	equ	0xFE8
 21058                           indf1	equ	0xFE7
 21059                           postinc1	equ	0xFE6
 21060                           postdec1	equ	0xFE5
 21061                           plusw1	equ	0xFE3
 21062                           fsr1h	equ	0xFE2
 21063                           fsr1l	equ	0xFE1
 21064                           indf2	equ	0xFDF
 21065                           postinc2	equ	0xFDE
 21066                           postdec2	equ	0xFDD
 21067                           plusw2	equ	0xFDB
 21068                           fsr2h	equ	0xFDA
 21069                           fsr2l	equ	0xFD9
 21070                           status	equ	0xFD8
 21071                           
 21072 ;; *************** function __motor_run *****************
 21073 ;; Defined at:
 21074 ;;		line 41 in file "motor.c"
 21075 ;; Parameters:    Size  Location     Type
 21076 ;;  direction       1    wreg     enum E6622
 21077 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 21078 ;;  speed           2    4[BANK0 ] unsigned int 
 21079 ;;  type            1    6[BANK0 ] enum E6631
 21080 ;; Auto vars:     Size  Location     Type
 21081 ;;  direction       1   11[BANK0 ] enum E6622
 21082 ;; Return value:  Size  Location     Type
 21083 ;;                  1    wreg      void 
 21084 ;; Registers used:
 21085 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 21086 ;; Tracked objects:
 21087 ;;		On entry : 0/0
 21088 ;;		On exit  : 0/0
 21089 ;;		Unchanged: 0/0
 21090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21091 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21092 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21093 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21094 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21095 ;;Total ram usage:       12 bytes
 21096 ;; Hardware stack levels used:    1
 21097 ;; Hardware stack levels required when called:   10
 21098 ;; This function calls:
 21099 ;;		Nothing
 21100 ;; This function is called by:
 21101 ;;		_motor_process_cue
 21102 ;; This function uses a non-reentrant model
 21103 ;;
 21104                           
 21105                           	psect	text90
 21106  00EBAE                     __ptext90:
 21107                           	opt stack 0
 21108  00EBAE                     __motor_run:
 21109                           	opt stack 19
 21110                           
 21111                           ;incstack = 0
 21112                           ;__motor_run@direction stored from wreg
 21113  00EBAE  0100               	movlb	0	; () banked
 21114  00EBB0  6F6B               	movwf	__motor_run@direction& (0+255),b
 21115                           
 21116                           ;motor.c: 48: motor_direction = direction;
 21117  00EBB2  C06B  F148         	movff	__motor_run@direction,_motor_direction
 21118                           
 21119                           ;motor.c: 49: motor_final_stepcount = distance_in_steps;
 21120  00EBB6  C060  F121         	movff	__motor_run@distance_in_steps,_motor_final_stepcount	;volatile
 21121  00EBBA  C061  F122         	movff	__motor_run@distance_in_steps+1,_motor_final_stepcount+1	;volatile
 21122  00EBBE  C062  F123         	movff	__motor_run@distance_in_steps+2,_motor_final_stepcount+2	;volatile
 21123  00EBC2  C063  F124         	movff	__motor_run@distance_in_steps+3,_motor_final_stepcount+3	;volatile
 21124                           
 21125                           ;motor.c: 50: motor_maximum_speed = speed;
 21126  00EBC6  C064  F133         	movff	__motor_run@speed,_motor_maximum_speed
 21127  00EBCA  C065  F134         	movff	__motor_run@speed+1,_motor_maximum_speed+1
 21128                           
 21129                           ;motor.c: 51: motor_move_type = type;
 21130  00EBCE  C066  F149         	movff	__motor_run@type,_motor_move_type
 21131                           
 21132                           ;motor.c: 54: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 21133  00EBD2  0101               	movlb	1	; () banked
 21134  00EBD4  0549               	decf	_motor_move_type& (0+255),w,b
 21135  00EBD6  A4D8               	btfss	status,2,c
 21136  00EBD8  D004               	goto	l2442
 21137                           
 21138                           ; BSR set to: 1
 21139                           ;motor.c: 55: {;motor.c: 56: motor_final_stepcount = 0xFFFFFFFF;
 21140  00EBDA  6921               	setf	_motor_final_stepcount& (0+255),b	;volatile
 21141  00EBDC  6922               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 21142  00EBDE  6923               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 21143  00EBE0  6924               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 21144  00EBE2                     l2442:
 21145                           
 21146                           ; BSR set to: 1
 21147                           ;motor.c: 57: };motor.c: 60: motor_current_speed = 0;
 21148                           
 21149                           ; BSR set to: 1
 21150  00EBE2  0E00               	movlw	0
 21151  00EBE4  0100               	movlb	0	; () banked
 21152  00EBE6  6FFF               	movwf	(_motor_current_speed+1)& (0+255),b	;volatile
 21153  00EBE8  0E00               	movlw	0
 21154  00EBEA  6FFE               	movwf	_motor_current_speed& (0+255),b	;volatile
 21155                           
 21156                           ;motor.c: 61: motor_current_stepcount = 0;
 21157  00EBEC  0E00               	movlw	0
 21158  00EBEE  6E58               	movwf	_motor_current_stepcount,c	;volatile
 21159  00EBF0  0E00               	movlw	0
 21160  00EBF2  6E59               	movwf	_motor_current_stepcount+1,c	;volatile
 21161  00EBF4  0E00               	movlw	0
 21162  00EBF6  6E5A               	movwf	_motor_current_stepcount+2,c	;volatile
 21163  00EBF8  0E00               	movlw	0
 21164  00EBFA  6E5B               	movwf	_motor_current_stepcount+3,c	;volatile
 21165                           
 21166                           ; BSR set to: 0
 21167                           ;motor.c: 62: motor_next_speed_check = motor_steps_lookup[1];
 21168  00EBFC  0E63               	movlw	low (_motor_steps_lookup+2)
 21169  00EBFE  6EF6               	movwf	tblptrl,c
 21170  00EC00  0E94               	movlw	high (_motor_steps_lookup+2)
 21171  00EC02  6EF7               	movwf	tblptrh,c
 21172  00EC04                     	if	0	;tblptru may be non-zero
 21173  00EC04                     	endif
 21174  00EC04                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
 21175  00EC04  0E00               	movlw	low (__mediumconst shr (0+16))
 21176  00EC06  6EF8               	movwf	tblptru,c
 21177  00EC08                     	endif
 21178  00EC08  0009               	tblrd		*+
 21179  00EC0A  CFF5 F067          	movff	tablat,??__motor_run
 21180  00EC0E  0009               	tblrd		*+
 21181  00EC10  CFF5 F068          	movff	tablat,??__motor_run+1
 21182  00EC14  C067  F22C         	movff	??__motor_run,_motor_next_speed_check	;volatile
 21183  00EC18  C068  F22D         	movff	??__motor_run+1,_motor_next_speed_check+1	;volatile
 21184  00EC1C  0102               	movlb	2	; () banked
 21185  00EC1E  6B2E               	clrf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 21186  00EC20  6B2F               	clrf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 21187                           
 21188                           ; BSR set to: 2
 21189                           ;motor.c: 65: CCP1CONbits.CCP1M = 0b0000;
 21190  00EC22  90BA               	bcf	4026,0,c	;volatile
 21191  00EC24  92BA               	bcf	4026,1,c	;volatile
 21192  00EC26  94BA               	bcf	4026,2,c	;volatile
 21193  00EC28  96BA               	bcf	4026,3,c	;volatile
 21194                           
 21195                           ; BSR set to: 2
 21196                           ;motor.c: 68: LATBbits.LB0 = 0;
 21197  00EC2A  908A               	bcf	3978,0,c	;volatile
 21198                           
 21199                           ; BSR set to: 2
 21200                           ;motor.c: 69: if(direction==MOTOR_DIRECTION_CCW)
 21201  00EC2C  0100               	movlb	0	; () banked
 21202  00EC2E  296B               	incf	__motor_run@direction& (0+255),w,b
 21203  00EC30  A4D8               	btfss	status,2,c
 21204  00EC32  D005               	goto	l2443
 21205                           
 21206                           ; BSR set to: 0
 21207                           ;motor.c: 70: {;motor.c: 71: if(config.inverse_direction)
 21208  00EC34  0101               	movlb	1	; () banked
 21209  00EC36  519A               	movf	(_config+4)& (0+255),w,b
 21210  00EC38  B4D8               	btfsc	status,2,c
 21211  00EC3A  D005               	goto	u17090
 21212  00EC3C  D006               	goto	l2447
 21213  00EC3E                     l2443:
 21214                           
 21215                           ;motor.c: 76: else;motor.c: 77: {;motor.c: 78: if(config.inverse_direction)
 21216                           
 21217                           ; BSR set to: 1
 21218  00EC3E  0101               	movlb	1	; () banked
 21219  00EC40  519A               	movf	(_config+4)& (0+255),w,b
 21220  00EC42  B4D8               	btfsc	status,2,c
 21221  00EC44  D002               	goto	l2447
 21222  00EC46                     u17090:
 21223                           
 21224                           ; BSR set to: 1
 21225                           ;motor.c: 79: LATBbits.LB2 = 0;
 21226  00EC46  948A               	bcf	3978,2,c	;volatile
 21227  00EC48  D001               	goto	l2448
 21228  00EC4A                     l2447:
 21229                           
 21230                           ; BSR set to: 1
 21231                           ;motor.c: 80: else;motor.c: 81: LATBbits.LB2 = 1;
 21232  00EC4A  848A               	bsf	3978,2,c	;volatile
 21233  00EC4C                     l2448:
 21234                           
 21235                           ; BSR set to: 1
 21236                           ;motor.c: 82: };motor.c: 85: LATBbits.LB1 = 1;
 21237                           
 21238                           ; BSR set to: 1
 21239  00EC4C  828A               	bsf	3978,1,c	;volatile
 21240                           
 21241                           ; BSR set to: 1
 21242                           ;motor.c: 88: ++motor_current_stepcount;
 21243  00EC4E  0E01               	movlw	1
 21244  00EC50  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 21245  00EC52  0E00               	movlw	0
 21246  00EC54  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 21247  00EC56  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 21248  00EC58  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 21249                           
 21250                           ;motor.c: 91: os.current_position_in_steps += motor_direction;
 21251  00EC5A  5148               	movf	_motor_direction& (0+255),w,b
 21252  00EC5C  0100               	movlb	0	; () banked
 21253  00EC5E  6F67               	movwf	??__motor_run& (0+255),b
 21254  00EC60  0E00               	movlw	0
 21255  00EC62  BF67               	btfsc	??__motor_run& (0+255),7,b
 21256  00EC64  0EFF               	movlw	255
 21257  00EC66  6F68               	movwf	(??__motor_run+1)& (0+255),b
 21258  00EC68  6F69               	movwf	(??__motor_run+2)& (0+255),b
 21259  00EC6A  6F6A               	movwf	(??__motor_run+3)& (0+255),b
 21260  00EC6C  5167               	movf	??__motor_run& (0+255),w,b
 21261  00EC6E  0101               	movlb	1	; () banked
 21262  00EC70  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 21263  00EC72  0100               	movlb	0	; () banked
 21264  00EC74  5168               	movf	(??__motor_run+1)& (0+255),w,b
 21265  00EC76  0101               	movlb	1	; () banked
 21266  00EC78  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 21267  00EC7A  0100               	movlb	0	; () banked
 21268  00EC7C  5169               	movf	(??__motor_run+2)& (0+255),w,b
 21269  00EC7E  0101               	movlb	1	; () banked
 21270  00EC80  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 21271  00EC82  0100               	movlb	0	; () banked
 21272  00EC84  516A               	movf	(??__motor_run+3)& (0+255),w,b
 21273  00EC86  0101               	movlb	1	; () banked
 21274  00EC88  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 21275                           
 21276                           ;motor.c: 92: if(os.current_position_in_steps==config.full_circle_in_steps)
 21277  00EC8A  5196               	movf	_config& (0+255),w,b
 21278  00EC8C  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 21279  00EC8E  E114               	bnz	l17592
 21280  00EC90  5197               	movf	(_config+1)& (0+255),w,b
 21281  00EC92  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 21282  00EC94  E111               	bnz	l17592
 21283  00EC96  5198               	movf	(_config+2)& (0+255),w,b
 21284  00EC98  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 21285  00EC9A  E10E               	bnz	l17592
 21286  00EC9C  5199               	movf	(_config+3)& (0+255),w,b
 21287  00EC9E  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 21288  00ECA0  A4D8               	btfss	status,2,c
 21289  00ECA2  D00A               	goto	l2449
 21290                           
 21291                           ; BSR set to: 1
 21292                           ;motor.c: 93: {;motor.c: 94: os.current_position_in_steps = 0;
 21293  00ECA4  0E00               	movlw	0
 21294  00ECA6  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21295  00ECA8  0E00               	movlw	0
 21296  00ECAA  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21297  00ECAC  0E00               	movlw	0
 21298  00ECAE  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21299  00ECB0  0E00               	movlw	0
 21300  00ECB2  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21301                           
 21302                           ; BSR set to: 1
 21303                           ;motor.c: 95: ++os.absolute_position;
 21304  00ECB4  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 21305  00ECB6  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 21306  00ECB8                     l2449:
 21307  00ECB8                     l17592:
 21308                           
 21309                           ; BSR set to: 1
 21310                           ;motor.c: 96: };motor.c: 97: if(os.current_position_in_steps==0xFFFFFFFF)
 21311  00ECB8  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 21312  00ECBA  E116               	bnz	l17598
 21313  00ECBC  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 21314  00ECBE  E114               	bnz	l17598
 21315  00ECC0  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 21316  00ECC2  E112               	bnz	l17598
 21317  00ECC4  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 21318  00ECC6  A4D8               	btfss	status,2,c
 21319  00ECC8  D00F               	goto	l2450
 21320                           
 21321                           ; BSR set to: 1
 21322                           ;motor.c: 98: {;motor.c: 99: os.current_position_in_steps = (config.full_circle_in_steps
      +                          -1);
 21323  00ECCA  0EFF               	movlw	255
 21324  00ECCC  2596               	addwf	_config& (0+255),w,b
 21325  00ECCE  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 21326  00ECD0  0EFF               	movlw	255
 21327  00ECD2  2197               	addwfc	(_config+1)& (0+255),w,b
 21328  00ECD4  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 21329  00ECD6  0EFF               	movlw	255
 21330  00ECD8  2198               	addwfc	(_config+2)& (0+255),w,b
 21331  00ECDA  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 21332  00ECDC  0EFF               	movlw	255
 21333  00ECDE  2199               	addwfc	(_config+3)& (0+255),w,b
 21334  00ECE0  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 21335                           
 21336                           ; BSR set to: 1
 21337                           ;motor.c: 100: --os.absolute_position;
 21338  00ECE2  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 21339  00ECE4  A0D8               	btfss	status,0,c
 21340  00ECE6  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 21341  00ECE8                     l2450:
 21342  00ECE8                     l17598:
 21343                           
 21344                           ; BSR set to: 1
 21345                           ;motor.c: 101: };motor.c: 104: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOL
      +                          OCK = 0;};
 21346  00ECE8  0E55               	movlw	85
 21347  00ECEA  6EA7               	movwf	4007,c	;volsfr
 21348                           
 21349                           ; BSR set to: 1
 21350  00ECEC  0EAA               	movlw	170
 21351  00ECEE  6EA7               	movwf	4007,c	;volsfr
 21352                           
 21353                           ; BSR set to: 1
 21354  00ECF0  010E               	movlb	14	; () banked
 21355  00ECF2  91BF               	bcf	191,0,b	;volatile
 21356                           
 21357                           ; BSR set to: 14
 21358                           ;motor.c: 105: RPOR4 = 0;
 21359  00ECF4  0E00               	movlw	0
 21360  00ECF6  6FC4               	movwf	196,b	;volatile
 21361                           
 21362                           ; BSR set to: 14
 21363                           ;motor.c: 106: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 21364  00ECF8  0E55               	movlw	85
 21365  00ECFA  6EA7               	movwf	4007,c	;volsfr
 21366                           
 21367                           ; BSR set to: 14
 21368  00ECFC  0EAA               	movlw	170
 21369  00ECFE  6EA7               	movwf	4007,c	;volsfr
 21370                           
 21371                           ; BSR set to: 14
 21372  00ED00  81BF               	bsf	191,0,b	;volatile
 21373                           
 21374                           ; BSR set to: 14
 21375                           ;motor.c: 109: motor_mode = MOTOR_MODE_MANUAL;
 21376  00ED02  0E00               	movlw	0
 21377  00ED04  0101               	movlb	1	; () banked
 21378  00ED06  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 21379                           
 21380                           ; BSR set to: 1
 21381                           ;motor.c: 113: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 21382  00ED08  0EFD               	movlw	low _motor_prescaler_lookup
 21383  00ED0A  0100               	movlb	0	; () banked
 21384  00ED0C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21385  00ED0E  6EF6               	movwf	tblptrl,c
 21386  00ED10  0E9B               	movlw	high _motor_prescaler_lookup
 21387  00ED12  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21388  00ED14  6EF7               	movwf	tblptrh,c
 21389  00ED16                     	if	1	;There are 3 active tblptr bytes
 21390  00ED16  6AF8               	clrf	tblptru,c
 21391  00ED18  0E00               	movlw	low (__mediumconst shr (0+16))
 21392  00ED1A  22F8               	addwfc	tblptru,f,c
 21393  00ED1C                     	endif
 21394  00ED1C  0008               	tblrd		*
 21395  00ED1E  CFF5 F067          	movff	tablat,??__motor_run
 21396  00ED22  50CA               	movf	4042,w,c	;volatile
 21397  00ED24  1967               	xorwf	??__motor_run& (0+255),w,b
 21398  00ED26  0BFC               	andlw	-4
 21399  00ED28  1967               	xorwf	??__motor_run& (0+255),w,b
 21400  00ED2A  6ECA               	movwf	4042,c	;volatile
 21401                           
 21402                           ; BSR set to: 0
 21403                           ;motor.c: 115: PR2 = motor_period_lookup[motor_current_speed];
 21404  00ED2C  0E16               	movlw	low _motor_period_lookup
 21405  00ED2E  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21406  00ED30  6EF6               	movwf	tblptrl,c
 21407  00ED32  0E9A               	movlw	high _motor_period_lookup
 21408  00ED34  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21409  00ED36  6EF7               	movwf	tblptrh,c
 21410  00ED38                     	if	1	;There are 3 active tblptr bytes
 21411  00ED38  6AF8               	clrf	tblptru,c
 21412  00ED3A  0E00               	movlw	low (__mediumconst shr (0+16))
 21413  00ED3C  22F8               	addwfc	tblptru,f,c
 21414  00ED3E                     	endif
 21415  00ED3E  0008               	tblrd		*
 21416  00ED40  CFF5 FFCB          	movff	tablat,4043	;volatile
 21417                           
 21418                           ; BSR set to: 0
 21419                           ;motor.c: 117: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 21420  00ED44  0E2F               	movlw	low _motor_postscaler_lookup
 21421  00ED46  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 21422  00ED48  6EF6               	movwf	tblptrl,c
 21423  00ED4A  0E98               	movlw	high _motor_postscaler_lookup
 21424  00ED4C  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 21425  00ED4E  6EF7               	movwf	tblptrh,c
 21426  00ED50                     	if	1	;There are 3 active tblptr bytes
 21427  00ED50  6AF8               	clrf	tblptru,c
 21428  00ED52  0E00               	movlw	low (__mediumconst shr (0+16))
 21429  00ED54  22F8               	addwfc	tblptru,f,c
 21430  00ED56                     	endif
 21431  00ED56  0008               	tblrd		*
 21432  00ED58  CFF5 F067          	movff	tablat,??__motor_run
 21433  00ED5C  4767               	rlncf	??__motor_run& (0+255),f,b
 21434  00ED5E  4767               	rlncf	??__motor_run& (0+255),f,b
 21435  00ED60  4767               	rlncf	??__motor_run& (0+255),f,b
 21436  00ED62  50CA               	movf	4042,w,c	;volatile
 21437  00ED64  1967               	xorwf	??__motor_run& (0+255),w,b
 21438  00ED66  0B87               	andlw	-121
 21439  00ED68  1967               	xorwf	??__motor_run& (0+255),w,b
 21440  00ED6A  6ECA               	movwf	4042,c	;volatile
 21441                           
 21442                           ; BSR set to: 0
 21443                           ;motor.c: 119: CCPR1L = PR2>>1;
 21444  00ED6C  90D8               	bcf	status,0,c
 21445  00ED6E  30CB               	rrcf	4043,w,c	;volatile
 21446  00ED70  6EBB               	movwf	4027,c	;volatile
 21447                           
 21448                           ; BSR set to: 0
 21449                           ;motor.c: 122: PIR1bits.TMR2IF = 0;
 21450  00ED72  929E               	bcf	3998,1,c	;volatile
 21451                           
 21452                           ; BSR set to: 0
 21453                           ;motor.c: 123: PIE1bits.TMR2IE = 1;
 21454  00ED74  829D               	bsf	3997,1,c	;volatile
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;motor.c: 126: TMR2 = 0;
 21458  00ED76  0E00               	movlw	0
 21459  00ED78  6ECC               	movwf	4044,c	;volatile
 21460                           
 21461                           ; BSR set to: 0
 21462                           ;motor.c: 127: T2CONbits.TMR2ON = 1;
 21463  00ED7A  84CA               	bsf	4042,2,c	;volatile
 21464                           
 21465                           ; BSR set to: 0
 21466                           ;motor.c: 130: os.busy = 1;
 21467  00ED7C  0E01               	movlw	1
 21468  00ED7E  0101               	movlb	1	; () banked
 21469  00ED80  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 21470                           
 21471                           ; BSR set to: 1
 21472  00ED82  0012               	return		;funcret
 21473  00ED84                     __end_of__motor_run:
 21474                           	opt stack 0
 21475                           tblptru	equ	0xFF8
 21476                           tblptrh	equ	0xFF7
 21477                           tblptrl	equ	0xFF6
 21478                           tablat	equ	0xFF5
 21479                           prodh	equ	0xFF4
 21480                           prodl	equ	0xFF3
 21481                           intcon	equ	0xFF2
 21482                           postinc0	equ	0xFEE
 21483                           wreg	equ	0xFE8
 21484                           indf1	equ	0xFE7
 21485                           postinc1	equ	0xFE6
 21486                           postdec1	equ	0xFE5
 21487                           plusw1	equ	0xFE3
 21488                           fsr1h	equ	0xFE2
 21489                           fsr1l	equ	0xFE1
 21490                           indf2	equ	0xFDF
 21491                           postinc2	equ	0xFDE
 21492                           postdec2	equ	0xFDD
 21493                           plusw2	equ	0xFDB
 21494                           fsr2h	equ	0xFDA
 21495                           fsr2l	equ	0xFD9
 21496                           status	equ	0xFD8
 21497                           
 21498 ;; *************** function _encoder_statemachine *****************
 21499 ;; Defined at:
 21500 ;;		line 210 in file "encoder.c"
 21501 ;; Parameters:    Size  Location     Type
 21502 ;;		None
 21503 ;; Auto vars:     Size  Location     Type
 21504 ;;		None
 21505 ;; Return value:  Size  Location     Type
 21506 ;;                  1    wreg      void 
 21507 ;; Registers used:
 21508 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 21509 ;; Tracked objects:
 21510 ;;		On entry : 0/0
 21511 ;;		On exit  : 0/0
 21512 ;;		Unchanged: 0/0
 21513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21516 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21517 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21518 ;;Total ram usage:        4 bytes
 21519 ;; Hardware stack levels used:    1
 21520 ;; Hardware stack levels required when called:   15
 21521 ;; This function calls:
 21522 ;;		__divide_jump_size_decrement
 21523 ;;		__divide_jump_size_increment
 21524 ;;		__encoder_next_arc_step_size
 21525 ;;		__encoder_next_divide_step_size
 21526 ;;		__encoder_next_setup_stepsize
 21527 ;;		_motor_arc_move
 21528 ;;		_motor_change_speed
 21529 ;;		_motor_decrease_manual_speed
 21530 ;;		_motor_divide_jump
 21531 ;;		_motor_divide_jump_to_nearest
 21532 ;;		_motor_goto_steps
 21533 ;;		_motor_increase_manual_speed
 21534 ;;		_motor_move_degrees_int
 21535 ;;		_motor_move_endless
 21536 ;;		_motor_set_zero
 21537 ;;		_motor_stop
 21538 ;; This function is called by:
 21539 ;;		_main
 21540 ;; This function uses a non-reentrant model
 21541 ;;
 21542                           
 21543                           	psect	text91
 21544  00AF94                     __ptext91:
 21545                           	opt stack 0
 21546  00AF94                     _encoder_statemachine:
 21547                           	opt stack 15
 21548                           
 21549                           ;encoder.c: 213: if(os.encoder1Count==0 && os.encoder2Count==0 && os.button1==0 && os.bu
      +                          tton2==0)
 21550                           
 21551                           ; BSR set to: 1
 21552                           ;incstack = 0
 21553  00AF94  0101               	movlb	1	; () banked
 21554  00AF96  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 21555  00AF98  A4D8               	btfss	status,2,c
 21556  00AF9A  D3E2               	goto	l2772
 21557                           
 21558                           ; BSR set to: 1
 21559  00AF9C  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 21560  00AF9E  A4D8               	btfss	status,2,c
 21561  00AFA0  D3DF               	goto	l2772
 21562                           
 21563                           ; BSR set to: 1
 21564  00AFA2  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 21565  00AFA4  A4D8               	btfss	status,2,c
 21566  00AFA6  D3DC               	goto	l2772
 21567                           
 21568                           ; BSR set to: 1
 21569  00AFA8  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 21570  00AFAA  B4D8               	btfsc	status,2,c
 21571  00AFAC  0012               	return	
 21572  00AFAE  D3D8               	goto	l2772
 21573  00AFB0                     
 21574                           ; BSR set to: 1
 21575                           ;encoder.c: 225: if(os.button1==1 || os.button2==1)
 21576                           
 21577                           ; BSR set to: 1
 21578  00AFB0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21579  00AFB2  B4D8               	btfsc	status,2,c
 21580  00AFB4  D003               	goto	u17730
 21581                           
 21582                           ; BSR set to: 1
 21583  00AFB6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21584  00AFB8  A4D8               	btfss	status,2,c
 21585  00AFBA  D002               	goto	l2776
 21586  00AFBC                     u17730:
 21587                           
 21588                           ; BSR set to: 1
 21589                           ;encoder.c: 226: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 21590                           
 21591                           ; BSR set to: 1
 21592  00AFBC  0E11               	movlw	17
 21593  00AFBE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21594  00AFC0                     l2776:
 21595                           
 21596                           ; BSR set to: 1
 21597                           ;encoder.c: 227: if(os.encoder1Count+os.encoder2Count>0)
 21598                           
 21599                           ; BSR set to: 1
 21600  00AFC0  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21601  00AFC4  0100               	movlb	0	; () banked
 21602  00AFC6  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21603  00AFC8  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21604  00AFCA  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21605  00AFCC  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21606  00AFD0  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21607  00AFD2  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21608  00AFD4  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21609  00AFD6  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21610  00AFD8  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21611  00AFDA  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21612  00AFDC  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21613  00AFDE  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21614  00AFE0  D008               	goto	l2779
 21615  00AFE2  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21616  00AFE4  E103               	bnz	u17740
 21617  00AFE6  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21618  00AFE8  A0D8               	btfss	status,0,c
 21619  00AFEA  D003               	goto	l2779
 21620  00AFEC                     u17740:
 21621                           
 21622                           ; BSR set to: 0
 21623                           ;encoder.c: 228: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21624  00AFEC  0E02               	movlw	2
 21625  00AFEE  0101               	movlb	1	; () banked
 21626  00AFF0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21627  00AFF2                     l2779:
 21628                           
 21629                           ;encoder.c: 229: if(os.encoder1Count+os.encoder2Count<0)
 21630                           
 21631                           ; BSR set to: 1
 21632  00AFF2  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21633  00AFF6  0100               	movlb	0	; () banked
 21634  00AFF8  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21635  00AFFA  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21636  00AFFC  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21637  00AFFE  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21638  00B002  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21639  00B004  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21640  00B006  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21641  00B008  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21642  00B00A  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21643  00B00C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21644  00B00E  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21645  00B010  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21646  00B012  D3CB               	goto	l2807
 21647                           
 21648                           ; BSR set to: 0
 21649                           ;encoder.c: 230: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21650  00B014  0E05               	movlw	5
 21651  00B016  D392               	goto	L22
 21652  00B018                     
 21653                           ; BSR set to: 1
 21654                           ;encoder.c: 233: if(os.button1==1 || os.button2==1)
 21655                           
 21656                           ; BSR set to: 1
 21657  00B018  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21658  00B01A  B4D8               	btfsc	status,2,c
 21659  00B01C  D003               	goto	u17770
 21660                           
 21661                           ; BSR set to: 1
 21662  00B01E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21663  00B020  A4D8               	btfss	status,2,c
 21664  00B022  D002               	goto	l2783
 21665  00B024                     u17770:
 21666                           
 21667                           ; BSR set to: 1
 21668                           ;encoder.c: 234: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 21669                           
 21670                           ; BSR set to: 1
 21671  00B024  0E31               	movlw	49
 21672  00B026  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21673  00B028                     l2783:
 21674                           
 21675                           ; BSR set to: 1
 21676                           ;encoder.c: 235: if(os.encoder1Count+os.encoder2Count>0)
 21677                           
 21678                           ; BSR set to: 1
 21679  00B028  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21680  00B02C  0100               	movlb	0	; () banked
 21681  00B02E  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21682  00B030  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21683  00B032  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21684  00B034  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21685  00B038  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21686  00B03A  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21687  00B03C  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21688  00B03E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21689  00B040  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21690  00B042  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21691  00B044  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21692  00B046  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21693  00B048  D008               	goto	l2786
 21694  00B04A  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21695  00B04C  E103               	bnz	u17780
 21696  00B04E  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21697  00B050  A0D8               	btfss	status,0,c
 21698  00B052  D003               	goto	l2786
 21699  00B054                     u17780:
 21700                           
 21701                           ; BSR set to: 0
 21702                           ;encoder.c: 236: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21703  00B054  0E03               	movlw	3
 21704  00B056  0101               	movlb	1	; () banked
 21705  00B058  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21706  00B05A                     l2786:
 21707                           
 21708                           ;encoder.c: 237: if(os.encoder1Count+os.encoder2Count<0)
 21709                           
 21710                           ; BSR set to: 1
 21711  00B05A  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21712  00B05E  0100               	movlb	0	; () banked
 21713  00B060  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21714  00B062  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21715  00B064  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21716  00B066  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21717  00B06A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21718  00B06C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21719  00B06E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21720  00B070  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21721  00B072  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21722  00B074  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21723  00B076  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21724  00B078  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21725  00B07A  D397               	goto	l2807
 21726                           
 21727                           ; BSR set to: 0
 21728                           ;encoder.c: 238: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21729  00B07C  0E01               	movlw	1
 21730  00B07E  D35E               	goto	L22
 21731  00B080                     
 21732                           ; BSR set to: 1
 21733                           ;encoder.c: 241: if(os.button1==1 || os.button2==1)
 21734                           
 21735                           ; BSR set to: 1
 21736  00B080  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21737  00B082  B4D8               	btfsc	status,2,c
 21738  00B084  D003               	goto	u17810
 21739                           
 21740                           ; BSR set to: 1
 21741  00B086  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21742  00B088  A4D8               	btfss	status,2,c
 21743  00B08A  D002               	goto	l2789
 21744  00B08C                     u17810:
 21745                           
 21746                           ; BSR set to: 1
 21747                           ;encoder.c: 242: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 21748                           
 21749                           ; BSR set to: 1
 21750  00B08C  0E51               	movlw	81
 21751  00B08E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21752  00B090                     l2789:
 21753                           
 21754                           ; BSR set to: 1
 21755                           ;encoder.c: 243: if(os.encoder1Count+os.encoder2Count>0)
 21756                           
 21757                           ; BSR set to: 1
 21758  00B090  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21759  00B094  0100               	movlb	0	; () banked
 21760  00B096  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21761  00B098  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21762  00B09A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21763  00B09C  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21764  00B0A0  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21765  00B0A2  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21766  00B0A4  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21767  00B0A6  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21768  00B0A8  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21769  00B0AA  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21770  00B0AC  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21771  00B0AE  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21772  00B0B0  D008               	goto	l2792
 21773  00B0B2  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21774  00B0B4  E103               	bnz	u17820
 21775  00B0B6  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21776  00B0B8  A0D8               	btfss	status,0,c
 21777  00B0BA  D003               	goto	l2792
 21778  00B0BC                     u17820:
 21779                           
 21780                           ; BSR set to: 0
 21781                           ;encoder.c: 244: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21782  00B0BC  0E04               	movlw	4
 21783  00B0BE  0101               	movlb	1	; () banked
 21784  00B0C0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21785  00B0C2                     l2792:
 21786                           
 21787                           ;encoder.c: 245: if(os.encoder1Count+os.encoder2Count<0)
 21788                           
 21789                           ; BSR set to: 1
 21790  00B0C2  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21791  00B0C6  0100               	movlb	0	; () banked
 21792  00B0C8  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21793  00B0CA  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21794  00B0CC  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21795  00B0CE  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21796  00B0D2  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21797  00B0D4  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21798  00B0D6  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21799  00B0D8  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21800  00B0DA  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21801  00B0DC  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21802  00B0DE  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21803  00B0E0  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21804  00B0E2  D363               	goto	l2807
 21805                           
 21806                           ; BSR set to: 0
 21807                           ;encoder.c: 246: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 21808  00B0E4  0E02               	movlw	2
 21809  00B0E6  D32A               	goto	L22
 21810  00B0E8                     
 21811                           ; BSR set to: 1
 21812                           ;encoder.c: 249: if(os.button1==1 || os.button2==1)
 21813                           
 21814                           ; BSR set to: 1
 21815  00B0E8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21816  00B0EA  B4D8               	btfsc	status,2,c
 21817  00B0EC  D003               	goto	u17850
 21818                           
 21819                           ; BSR set to: 1
 21820  00B0EE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21821  00B0F0  A4D8               	btfss	status,2,c
 21822  00B0F2  D002               	goto	l2795
 21823  00B0F4                     u17850:
 21824                           
 21825                           ; BSR set to: 1
 21826                           ;encoder.c: 250: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 21827                           
 21828                           ; BSR set to: 1
 21829  00B0F4  0E82               	movlw	130
 21830  00B0F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21831  00B0F8                     l2795:
 21832                           
 21833                           ; BSR set to: 1
 21834                           ;encoder.c: 251: if(os.encoder1Count+os.encoder2Count>0)
 21835                           
 21836                           ; BSR set to: 1
 21837  00B0F8  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21838  00B0FC  0100               	movlb	0	; () banked
 21839  00B0FE  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21840  00B100  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21841  00B102  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21842  00B104  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21843  00B108  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21844  00B10A  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21845  00B10C  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21846  00B10E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21847  00B110  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21848  00B112  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21849  00B114  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21850  00B116  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21851  00B118  D008               	goto	l2798
 21852  00B11A  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21853  00B11C  E103               	bnz	u17860
 21854  00B11E  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21855  00B120  A0D8               	btfss	status,0,c
 21856  00B122  D003               	goto	l2798
 21857  00B124                     u17860:
 21858                           
 21859                           ; BSR set to: 0
 21860                           ;encoder.c: 252: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 21861  00B124  0E05               	movlw	5
 21862  00B126  0101               	movlb	1	; () banked
 21863  00B128  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21864  00B12A                     l2798:
 21865                           
 21866                           ;encoder.c: 253: if(os.encoder1Count+os.encoder2Count<0)
 21867                           
 21868                           ; BSR set to: 1
 21869  00B12A  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21870  00B12E  0100               	movlb	0	; () banked
 21871  00B130  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21872  00B132  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21873  00B134  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21874  00B136  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21875  00B13A  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21876  00B13C  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21877  00B13E  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21878  00B140  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21879  00B142  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21880  00B144  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21881  00B146  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21882  00B148  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21883  00B14A  D32F               	goto	l2807
 21884                           
 21885                           ; BSR set to: 0
 21886                           ;encoder.c: 254: os.displayState = DISPLAY_STATE_MAIN_ARC;
 21887  00B14C  0E03               	movlw	3
 21888  00B14E  D2F6               	goto	L22
 21889  00B150                     
 21890                           ; BSR set to: 1
 21891                           ;encoder.c: 257: if(os.button1==1 || os.button2==1)
 21892                           
 21893                           ; BSR set to: 1
 21894  00B150  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 21895  00B152  B4D8               	btfsc	status,2,c
 21896  00B154  D003               	goto	u17890
 21897                           
 21898                           ; BSR set to: 1
 21899  00B156  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 21900  00B158  A4D8               	btfss	status,2,c
 21901  00B15A  D002               	goto	l2801
 21902  00B15C                     u17890:
 21903                           
 21904                           ; BSR set to: 1
 21905                           ;encoder.c: 258: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 21906                           
 21907                           ; BSR set to: 1
 21908  00B15C  0E71               	movlw	113
 21909  00B15E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21910  00B160                     l2801:
 21911                           
 21912                           ; BSR set to: 1
 21913                           ;encoder.c: 259: if(os.encoder1Count+os.encoder2Count>0)
 21914                           
 21915                           ; BSR set to: 1
 21916  00B160  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21917  00B164  0100               	movlb	0	; () banked
 21918  00B166  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21919  00B168  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21920  00B16A  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21921  00B16C  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21922  00B170  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21923  00B172  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21924  00B174  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21925  00B176  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21926  00B178  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21927  00B17A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21928  00B17C  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21929  00B17E  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 21930  00B180  D008               	goto	l2804
 21931  00B182  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 21932  00B184  E103               	bnz	u17900
 21933  00B186  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 21934  00B188  A0D8               	btfss	status,0,c
 21935  00B18A  D003               	goto	l2804
 21936  00B18C                     u17900:
 21937                           
 21938                           ; BSR set to: 0
 21939                           ;encoder.c: 260: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 21940  00B18C  0E01               	movlw	1
 21941  00B18E  0101               	movlb	1	; () banked
 21942  00B190  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 21943  00B192                     l2804:
 21944                           
 21945                           ;encoder.c: 261: if(os.encoder1Count+os.encoder2Count<0)
 21946                           
 21947                           ; BSR set to: 1
 21948  00B192  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 21949  00B196  0100               	movlb	0	; () banked
 21950  00B198  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 21951  00B19A  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 21952  00B19C  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 21953  00B19E  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 21954  00B1A2  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 21955  00B1A4  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 21956  00B1A6  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 21957  00B1A8  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 21958  00B1AA  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 21959  00B1AC  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 21960  00B1AE  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 21961  00B1B0  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 21962  00B1B2  D2FB               	goto	l2807
 21963                           
 21964                           ; BSR set to: 0
 21965                           ;encoder.c: 262: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 21966  00B1B4  0E04               	movlw	4
 21967  00B1B6  D2C2               	goto	L22
 21968  00B1B8                     
 21969                           ; BSR set to: 1
 21970  00B1B8  0101               	movlb	1	; () banked
 21971  00B1BA  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 21972                           
 21973                           ; Switch size 1, requested type "space"
 21974                           ; Number of cases is 6, Range of values is 1 to 240
 21975                           ; switch strategies available:
 21976                           ; Name         Instructions Cycles
 21977                           ; simple_byte           19    10 (average)
 21978                           ;	Chosen strategy is simple_byte
 21979  00B1BC  0A01               	xorlw	1	; case 1
 21980  00B1BE  B4D8               	btfsc	status,2,c
 21981  00B1C0  D6F7               	goto	l2775
 21982  00B1C2  0A03               	xorlw	3	; case 2
 21983  00B1C4  B4D8               	btfsc	status,2,c
 21984  00B1C6  D728               	goto	l2782
 21985  00B1C8  0A01               	xorlw	1	; case 3
 21986  00B1CA  B4D8               	btfsc	status,2,c
 21987  00B1CC  D759               	goto	l2788
 21988  00B1CE  0A07               	xorlw	7	; case 4
 21989  00B1D0  B4D8               	btfsc	status,2,c
 21990  00B1D2  D78A               	goto	l2794
 21991  00B1D4  0A01               	xorlw	1	; case 5
 21992  00B1D6  B4D8               	btfsc	status,2,c
 21993  00B1D8  D7BB               	goto	l2800
 21994  00B1DA  0AF5               	xorlw	245	; case 240
 21995                           
 21996                           ; BSR set to: 1
 21997                           ;encoder.c: 268: break;
 21998  00B1DC  D2E6               	goto	l2807
 21999  00B1DE                     
 22000                           ; BSR set to: 1
 22001                           ;encoder.c: 274: if(os.button1==1)
 22002                           
 22003                           ; BSR set to: 1
 22004  00B1DE  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22005  00B1E0  A4D8               	btfss	status,2,c
 22006  00B1E2  D00E               	goto	l2811
 22007                           
 22008                           ; BSR set to: 1
 22009                           ;encoder.c: 275: {;encoder.c: 276: os.current_position_in_steps = 0;
 22010  00B1E4  0E00               	movlw	0
 22011  00B1E6  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 22012  00B1E8  0E00               	movlw	0
 22013  00B1EA  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 22014  00B1EC  0E00               	movlw	0
 22015  00B1EE  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 22016  00B1F0  0E00               	movlw	0
 22017  00B1F2  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 22018                           
 22019                           ;encoder.c: 277: os.divide_position = 0;
 22020  00B1F4  0E00               	movlw	0
 22021  00B1F6  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 22022  00B1F8  0E00               	movlw	0
 22023  00B1FA  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 22024                           
 22025                           ;encoder.c: 278: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22026  00B1FC  0E21               	movlw	33
 22027  00B1FE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22028  00B200                     l2811:
 22029                           
 22030                           ; BSR set to: 1
 22031                           ;encoder.c: 279: };encoder.c: 280: if(os.encoder1Count>0)
 22032                           
 22033                           ; BSR set to: 1
 22034  00B200  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22035  00B202  0A80               	xorlw	128
 22036  00B204  0F7F               	addlw	-129
 22037  00B206  A0D8               	btfss	status,0,c
 22038  00B208  D002               	goto	l2812
 22039                           
 22040                           ; BSR set to: 1
 22041                           ;encoder.c: 281: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22042  00B20A  0E12               	movlw	18
 22043  00B20C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22044  00B20E                     l2812:
 22045                           
 22046                           ; BSR set to: 1
 22047                           ;encoder.c: 282: if(os.encoder1Count<0)
 22048                           
 22049                           ; BSR set to: 1
 22050  00B20E  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22051  00B210  D01B               	goto	l2814
 22052                           
 22053                           ; BSR set to: 1
 22054                           ;encoder.c: 283: os.displayState = DISPLAY_STATE_SETUP1_CANCEL;
 22055  00B212  0E12               	movlw	18
 22056  00B214  D00F               	goto	L10
 22057  00B216                     
 22058                           ; BSR set to: 1
 22059                           ;encoder.c: 286: if(os.button1==1)
 22060                           
 22061                           ; BSR set to: 1
 22062  00B216  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22063  00B218  A4D8               	btfss	status,2,c
 22064  00B21A  D002               	goto	l2816
 22065                           
 22066                           ; BSR set to: 1
 22067                           ;encoder.c: 287: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 22068  00B21C  0E01               	movlw	1
 22069  00B21E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22070  00B220                     l2816:
 22071                           
 22072                           ; BSR set to: 1
 22073                           ;encoder.c: 288: if(os.encoder1Count>0)
 22074                           
 22075                           ; BSR set to: 1
 22076  00B220  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22077  00B222  0A80               	xorlw	128
 22078  00B224  0F7F               	addlw	-129
 22079  00B226  A0D8               	btfss	status,0,c
 22080  00B228  D002               	goto	l2817
 22081                           
 22082                           ; BSR set to: 1
 22083                           ;encoder.c: 289: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22084  00B22A  0E11               	movlw	17
 22085  00B22C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22086  00B22E                     l2817:
 22087                           
 22088                           ; BSR set to: 1
 22089                           ;encoder.c: 290: if(os.encoder1Count<0)
 22090                           
 22091                           ; BSR set to: 1
 22092  00B22E  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22093  00B230  D00B               	goto	l2814
 22094                           
 22095                           ; BSR set to: 1
 22096                           ;encoder.c: 291: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 22097  00B232  0E11               	movlw	17
 22098  00B234                     L10:
 22099  00B234  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22100                           
 22101                           ; BSR set to: 1
 22102                           ;encoder.c: 293: }
 22103                           
 22104                           ; BSR set to: 1
 22105                           ;encoder.c: 292: break;
 22106  00B236  D008               	goto	l2814
 22107  00B238                     
 22108                           ; BSR set to: 1
 22109  00B238  0101               	movlb	1	; () banked
 22110  00B23A  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22111                           
 22112                           ; Switch size 1, requested type "space"
 22113                           ; Number of cases is 2, Range of values is 17 to 18
 22114                           ; switch strategies available:
 22115                           ; Name         Instructions Cycles
 22116                           ; simple_byte            7     4 (average)
 22117                           ;	Chosen strategy is simple_byte
 22118  00B23C  0A11               	xorlw	17	; case 17
 22119  00B23E  B4D8               	btfsc	status,2,c
 22120  00B240  D7CE               	goto	l2810
 22121  00B242  0A03               	xorlw	3	; case 18
 22122  00B244  B4D8               	btfsc	status,2,c
 22123  00B246  D7E7               	goto	l2815
 22124  00B248                     l2814:
 22125                           
 22126                           ; BSR set to: 1
 22127                           ;encoder.c: 294: if(os.button2==1)
 22128                           
 22129                           ; BSR set to: 1
 22130  00B248  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22131  00B24A  A4D8               	btfss	status,2,c
 22132  00B24C  D00A               	goto	l2819
 22133                           
 22134                           ; BSR set to: 1
 22135                           ;encoder.c: 295: {;encoder.c: 296: os.setup_step_size = _encoder_next_setup_stepsize(os.
      +                          setup_step_size);
 22136  00B24E  C176  F060         	movff	_os+18,__encoder_next_setup_stepsize@old_stepsize	;volatile
 22137  00B252  C177  F061         	movff	_os+19,__encoder_next_setup_stepsize@old_stepsize+1	;volatile
 22138  00B256  EC7A  F0A1         	call	__encoder_next_setup_stepsize	;wreg free
 22139  00B25A  C060  F176         	movff	?__encoder_next_setup_stepsize,_os+18	;volatile
 22140  00B25E  C061  F177         	movff	?__encoder_next_setup_stepsize+1,_os+19	;volatile
 22141  00B262                     l2819:
 22142                           
 22143                           ;encoder.c: 297: };encoder.c: 298: if(os.encoder2Count>0)
 22144  00B262  0101               	movlb	1	; () banked
 22145  00B264  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22146  00B266  0A80               	xorlw	128
 22147  00B268  0F7F               	addlw	-129
 22148  00B26A  A0D8               	btfss	status,0,c
 22149  00B26C  D010               	goto	l2821
 22150                           
 22151                           ; BSR set to: 1
 22152                           ;encoder.c: 299: {;encoder.c: 301: if(!os.busy)
 22153  00B26E  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22154  00B270  A4D8               	btfss	status,2,c
 22155  00B272  D00D               	goto	l2821
 22156                           
 22157                           ; BSR set to: 1
 22158                           ;encoder.c: 302: motor_move_degrees_int(MOTOR_DIRECTION_CW, os.setup_step_size, 0xFFFF, 
      +                          MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22159  00B274  C176  F099         	movff	_os+18,motor_move_degrees_int@distance	;volatile
 22160  00B278  C177  F09A         	movff	_os+19,motor_move_degrees_int@distance+1	;volatile
 22161  00B27C  0EFF               	movlw	255
 22162  00B27E  0100               	movlb	0	; () banked
 22163  00B280  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22164  00B282  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22165  00B284  0E01               	movlw	1
 22166  00B286  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22167  00B288  0E01               	movlw	1
 22168  00B28A  ECD0  F0A8         	call	_motor_move_degrees_int
 22169  00B28E                     l2821:
 22170                           
 22171                           ;encoder.c: 303: };encoder.c: 304: if(os.encoder2Count<0)
 22172  00B28E  0101               	movlb	1	; () banked
 22173  00B290  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22174  00B292  D28B               	goto	l2807
 22175                           
 22176                           ; BSR set to: 1
 22177                           ;encoder.c: 305: {;encoder.c: 307: if(!os.busy)
 22178  00B294  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22179  00B296  A4D8               	btfss	status,2,c
 22180  00B298  D288               	goto	l2807
 22181                           
 22182                           ; BSR set to: 1
 22183                           ;encoder.c: 308: motor_move_degrees_int(MOTOR_DIRECTION_CCW, os.setup_step_size, 0xFFFF,
      +                           MOTOR_OVERSHOOT_NO_OVERSHOOT);
 22184  00B29A  C176  F099         	movff	_os+18,motor_move_degrees_int@distance	;volatile
 22185  00B29E  C177  F09A         	movff	_os+19,motor_move_degrees_int@distance+1	;volatile
 22186  00B2A2  0EFF               	movlw	255
 22187  00B2A4  0100               	movlb	0	; () banked
 22188  00B2A6  6F9C               	movwf	(motor_move_degrees_int@speed+1)& (0+255),b
 22189  00B2A8  699B               	setf	motor_move_degrees_int@speed& (0+255),b
 22190  00B2AA  0E01               	movlw	1
 22191  00B2AC  6F9D               	movwf	motor_move_degrees_int@overshoot& (0+255),b
 22192  00B2AE  0EFF               	movlw	255
 22193  00B2B0  ECD0  F0A8         	call	_motor_move_degrees_int
 22194                           
 22195                           ;encoder.c: 309: };encoder.c: 310: break;
 22196  00B2B4  D27A               	goto	l2807
 22197  00B2B6                     
 22198                           ;encoder.c: 316: if(os.button1==1 || os.button2==1)
 22199  00B2B6  0101               	movlb	1	; () banked
 22200  00B2B8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22201  00B2BA  B4D8               	btfsc	status,2,c
 22202  00B2BC  D003               	goto	u18040
 22203                           
 22204                           ; BSR set to: 1
 22205  00B2BE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22206  00B2C0  A4D8               	btfss	status,2,c
 22207  00B2C2  D003               	goto	l2827
 22208  00B2C4                     u18040:
 22209                           
 22210                           ; BSR set to: 1
 22211                           ;encoder.c: 317: {;encoder.c: 318: motor_set_zero(MOTOR_DIRECTION_CCW);
 22212                           
 22213                           ; BSR set to: 1
 22214  00B2C4  0EFF               	movlw	255
 22215  00B2C6  EC49  F0AA         	call	_motor_set_zero
 22216  00B2CA                     l2827:
 22217                           
 22218                           ;encoder.c: 319: };encoder.c: 320: if(os.encoder1Count+os.encoder2Count>0)
 22219  00B2CA  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22220  00B2CE  0100               	movlb	0	; () banked
 22221  00B2D0  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22222  00B2D2  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22223  00B2D4  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22224  00B2D6  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22225  00B2DA  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22226  00B2DC  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22227  00B2DE  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22228  00B2E0  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22229  00B2E2  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22230  00B2E4  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22231  00B2E6  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22232  00B2E8  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22233  00B2EA  D008               	goto	l2830
 22234  00B2EC  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22235  00B2EE  E103               	bnz	u18050
 22236  00B2F0  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22237  00B2F2  A0D8               	btfss	status,0,c
 22238  00B2F4  D003               	goto	l2830
 22239  00B2F6                     u18050:
 22240                           
 22241                           ; BSR set to: 0
 22242                           ;encoder.c: 321: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22243  00B2F6  0E22               	movlw	34
 22244  00B2F8  0101               	movlb	1	; () banked
 22245  00B2FA  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22246  00B2FC                     l2830:
 22247                           
 22248                           ;encoder.c: 322: if(os.encoder1Count+os.encoder2Count<0)
 22249                           
 22250                           ; BSR set to: 1
 22251  00B2FC  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22252  00B300  0100               	movlb	0	; () banked
 22253  00B302  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22254  00B304  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22255  00B306  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22256  00B308  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22257  00B30C  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22258  00B30E  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22259  00B310  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22260  00B312  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22261  00B314  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22262  00B316  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22263  00B318  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22264  00B31A  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22265  00B31C  D246               	goto	l2807
 22266                           
 22267                           ; BSR set to: 0
 22268                           ;encoder.c: 323: os.displayState = DISPLAY_STATE_SETUP2_CW;
 22269  00B31E  0E22               	movlw	34
 22270  00B320  D20D               	goto	L22
 22271  00B322                     
 22272                           ; BSR set to: 1
 22273                           ;encoder.c: 326: if(os.button1==1 || os.button2==1)
 22274                           
 22275                           ; BSR set to: 1
 22276  00B322  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22277  00B324  B4D8               	btfsc	status,2,c
 22278  00B326  D003               	goto	u18080
 22279                           
 22280                           ; BSR set to: 1
 22281  00B328  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22282  00B32A  A4D8               	btfss	status,2,c
 22283  00B32C  D003               	goto	l2834
 22284  00B32E                     u18080:
 22285                           
 22286                           ; BSR set to: 1
 22287                           ;encoder.c: 327: {;encoder.c: 328: motor_set_zero(MOTOR_DIRECTION_CW);
 22288                           
 22289                           ; BSR set to: 1
 22290  00B32E  0E01               	movlw	1
 22291  00B330  EC49  F0AA         	call	_motor_set_zero
 22292  00B334                     l2834:
 22293                           
 22294                           ;encoder.c: 329: };encoder.c: 330: if(os.encoder1Count+os.encoder2Count>0)
 22295  00B334  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22296  00B338  0100               	movlb	0	; () banked
 22297  00B33A  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22298  00B33C  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22299  00B33E  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22300  00B340  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22301  00B344  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22302  00B346  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22303  00B348  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22304  00B34A  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22305  00B34C  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22306  00B34E  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22307  00B350  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22308  00B352  BFAB               	btfsc	(??_encoder_statemachine+3)& (0+255),7,b
 22309  00B354  D008               	goto	l2837
 22310  00B356  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22311  00B358  E103               	bnz	u18090
 22312  00B35A  05AA               	decf	(??_encoder_statemachine+2)& (0+255),w,b
 22313  00B35C  A0D8               	btfss	status,0,c
 22314  00B35E  D003               	goto	l2837
 22315  00B360                     u18090:
 22316                           
 22317                           ; BSR set to: 0
 22318                           ;encoder.c: 331: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22319  00B360  0E21               	movlw	33
 22320  00B362  0101               	movlb	1	; () banked
 22321  00B364  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22322  00B366                     l2837:
 22323                           
 22324                           ;encoder.c: 332: if(os.encoder1Count+os.encoder2Count<0)
 22325                           
 22326                           ; BSR set to: 1
 22327  00B366  C169  F0A8         	movff	_os+5,??_encoder_statemachine	;volatile
 22328  00B36A  0100               	movlb	0	; () banked
 22329  00B36C  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22330  00B36E  BFA8               	btfsc	??_encoder_statemachine& (0+255),7,b
 22331  00B370  07A9               	decf	(??_encoder_statemachine+1)& (0+255),f,b
 22332  00B372  C167  F0AA         	movff	_os+3,??_encoder_statemachine+2	;volatile
 22333  00B376  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22334  00B378  BFAA               	btfsc	(??_encoder_statemachine+2)& (0+255),7,b
 22335  00B37A  07AB               	decf	(??_encoder_statemachine+3)& (0+255),f,b
 22336  00B37C  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22337  00B37E  27AA               	addwf	(??_encoder_statemachine+2)& (0+255),f,b
 22338  00B380  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22339  00B382  23AB               	addwfc	(??_encoder_statemachine+3)& (0+255),f,b
 22340  00B384  AFAB               	btfss	(??_encoder_statemachine+3)& (0+255),7,b
 22341  00B386  D211               	goto	l2807
 22342                           
 22343                           ; BSR set to: 0
 22344                           ;encoder.c: 333: os.displayState = DISPLAY_STATE_SETUP2_CCW;
 22345  00B388  0E21               	movlw	33
 22346  00B38A  D1D8               	goto	L22
 22347  00B38C                     
 22348                           ; BSR set to: 1
 22349  00B38C  0101               	movlb	1	; () banked
 22350  00B38E  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22351                           
 22352                           ; Switch size 1, requested type "space"
 22353                           ; Number of cases is 2, Range of values is 33 to 34
 22354                           ; switch strategies available:
 22355                           ; Name         Instructions Cycles
 22356                           ; simple_byte            7     4 (average)
 22357                           ;	Chosen strategy is simple_byte
 22358  00B390  0A21               	xorlw	33	; case 33
 22359  00B392  B4D8               	btfsc	status,2,c
 22360  00B394  D790               	goto	l2826
 22361  00B396  0A03               	xorlw	3	; case 34
 22362  00B398  B4D8               	btfsc	status,2,c
 22363  00B39A  D7C3               	goto	l2833
 22364                           
 22365                           ; BSR set to: 1
 22366                           ;encoder.c: 336: break;
 22367  00B39C  D206               	goto	l2807
 22368  00B39E                     
 22369                           ; BSR set to: 1
 22370                           ;encoder.c: 342: if(os.button1==1)
 22371                           
 22372                           ; BSR set to: 1
 22373  00B39E  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22374  00B3A0  A4D8               	btfss	status,2,c
 22375  00B3A2  D005               	goto	l2842
 22376                           
 22377                           ; BSR set to: 1
 22378                           ;encoder.c: 343: {;encoder.c: 345: motor_divide_jump_to_nearest();
 22379  00B3A4  ECC0  F07B         	call	_motor_divide_jump_to_nearest	;wreg free
 22380                           
 22381                           ;encoder.c: 346: os.displayState = DISPLAY_STATE_DIVIDE2_NORMAL;
 22382  00B3A8  0E41               	movlw	65
 22383  00B3AA  0101               	movlb	1	; () banked
 22384  00B3AC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22385  00B3AE                     l2842:
 22386                           
 22387                           ; BSR set to: 1
 22388                           ;encoder.c: 347: };encoder.c: 348: if(os.encoder1Count>0)
 22389                           
 22390                           ; BSR set to: 1
 22391  00B3AE  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22392  00B3B0  0A80               	xorlw	128
 22393  00B3B2  0F7F               	addlw	-129
 22394  00B3B4  A0D8               	btfss	status,0,c
 22395  00B3B6  D002               	goto	l2843
 22396                           
 22397                           ; BSR set to: 1
 22398                           ;encoder.c: 349: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22399  00B3B8  0E32               	movlw	50
 22400  00B3BA  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22401  00B3BC                     l2843:
 22402                           
 22403                           ; BSR set to: 1
 22404                           ;encoder.c: 350: if(os.encoder1Count<0)
 22405                           
 22406                           ; BSR set to: 1
 22407  00B3BC  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22408  00B3BE  D01B               	goto	l2845
 22409                           
 22410                           ; BSR set to: 1
 22411                           ;encoder.c: 351: os.displayState = DISPLAY_STATE_DIVIDE1_CANCEL;
 22412  00B3C0  0E32               	movlw	50
 22413  00B3C2  D00F               	goto	L13
 22414  00B3C4                     
 22415                           ; BSR set to: 1
 22416                           ;encoder.c: 354: if(os.button1==1)
 22417                           
 22418                           ; BSR set to: 1
 22419  00B3C4  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22420  00B3C6  A4D8               	btfss	status,2,c
 22421  00B3C8  D002               	goto	l2847
 22422                           
 22423                           ; BSR set to: 1
 22424                           ;encoder.c: 355: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22425  00B3CA  0E02               	movlw	2
 22426  00B3CC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22427  00B3CE                     l2847:
 22428                           
 22429                           ; BSR set to: 1
 22430                           ;encoder.c: 356: if(os.encoder1Count>0)
 22431                           
 22432                           ; BSR set to: 1
 22433  00B3CE  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22434  00B3D0  0A80               	xorlw	128
 22435  00B3D2  0F7F               	addlw	-129
 22436  00B3D4  A0D8               	btfss	status,0,c
 22437  00B3D6  D002               	goto	l2848
 22438                           
 22439                           ; BSR set to: 1
 22440                           ;encoder.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22441  00B3D8  0E31               	movlw	49
 22442  00B3DA  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22443  00B3DC                     l2848:
 22444                           
 22445                           ; BSR set to: 1
 22446                           ;encoder.c: 358: if(os.encoder1Count<0)
 22447                           
 22448                           ; BSR set to: 1
 22449  00B3DC  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22450  00B3DE  D00B               	goto	l2845
 22451                           
 22452                           ; BSR set to: 1
 22453                           ;encoder.c: 359: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 22454  00B3E0  0E31               	movlw	49
 22455  00B3E2                     L13:
 22456  00B3E2  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22457                           
 22458                           ; BSR set to: 1
 22459                           ;encoder.c: 361: }
 22460                           
 22461                           ; BSR set to: 1
 22462                           ;encoder.c: 360: break;
 22463  00B3E4  D008               	goto	l2845
 22464  00B3E6                     
 22465                           ; BSR set to: 1
 22466  00B3E6  0101               	movlb	1	; () banked
 22467  00B3E8  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22468                           
 22469                           ; Switch size 1, requested type "space"
 22470                           ; Number of cases is 2, Range of values is 49 to 50
 22471                           ; switch strategies available:
 22472                           ; Name         Instructions Cycles
 22473                           ; simple_byte            7     4 (average)
 22474                           ;	Chosen strategy is simple_byte
 22475  00B3EA  0A31               	xorlw	49	; case 49
 22476  00B3EC  B4D8               	btfsc	status,2,c
 22477  00B3EE  D7D7               	goto	l2841
 22478  00B3F0  0A03               	xorlw	3	; case 50
 22479  00B3F2  B4D8               	btfsc	status,2,c
 22480  00B3F4  D7E7               	goto	l2846
 22481  00B3F6                     l2845:
 22482                           
 22483                           ; BSR set to: 1
 22484                           ;encoder.c: 362: if(os.button2==1)
 22485                           
 22486                           ; BSR set to: 1
 22487  00B3F6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22488  00B3F8  A4D8               	btfss	status,2,c
 22489  00B3FA  D005               	goto	l2850
 22490                           
 22491                           ; BSR set to: 1
 22492                           ;encoder.c: 363: {;encoder.c: 364: os.divide_step_size = _encoder_next_divide_step_size(
      +                          os.divide_step_size);
 22493  00B3FC  517B               	movf	(_os+23)& (0+255),w,b	;volatile
 22494  00B3FE  EC0F  F0AC         	call	__encoder_next_divide_step_size
 22495  00B402  0101               	movlb	1	; () banked
 22496  00B404  6F7B               	movwf	(_os+23)& (0+255),b	;volatile
 22497  00B406                     l2850:
 22498                           
 22499                           ; BSR set to: 1
 22500                           ;encoder.c: 365: };encoder.c: 366: if(os.encoder2Count>0)
 22501                           
 22502                           ; BSR set to: 1
 22503  00B406  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22504  00B408  0A80               	xorlw	128
 22505  00B40A  0F7F               	addlw	-129
 22506  00B40C  A0D8               	btfss	status,0,c
 22507  00B40E  D004               	goto	l2851
 22508                           
 22509                           ; BSR set to: 1
 22510                           ;encoder.c: 367: {;encoder.c: 368: os.division += os.divide_step_size;
 22511  00B410  517B               	movf	(_os+23)& (0+255),w,b	;volatile
 22512  00B412  2779               	addwf	(_os+21)& (0+255),f,b	;volatile
 22513  00B414  0E00               	movlw	0
 22514  00B416  237A               	addwfc	(_os+22)& (0+255),f,b	;volatile
 22515  00B418                     l2851:
 22516                           
 22517                           ; BSR set to: 1
 22518                           ;encoder.c: 369: };encoder.c: 370: if(os.encoder2Count<0)
 22519  00B418  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22520  00B41A  D1C7               	goto	l2807
 22521                           
 22522                           ; BSR set to: 1
 22523                           ;encoder.c: 371: {;encoder.c: 372: if(os.division>os.divide_step_size)
 22524  00B41C  517B               	movf	(_os+23)& (0+255),w,b	;volatile
 22525  00B41E  0100               	movlb	0	; () banked
 22526  00B420  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22527  00B422  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 22528  00B424  0101               	movlb	1	; () banked
 22529  00B426  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 22530  00B428  0100               	movlb	0	; () banked
 22531  00B42A  5DA8               	subwf	??_encoder_statemachine& (0+255),w,b
 22532  00B42C  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22533  00B42E  0A80               	xorlw	128
 22534  00B430  6FAA               	movwf	(??_encoder_statemachine+2)& (0+255),b
 22535  00B432  0101               	movlb	1	; () banked
 22536  00B434  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 22537  00B436  0A80               	xorlw	128
 22538  00B438  0100               	movlb	0	; () banked
 22539  00B43A  59AA               	subwfb	(??_encoder_statemachine+2)& (0+255),w,b
 22540  00B43C  B0D8               	btfsc	status,0,c
 22541  00B43E  D006               	goto	l2853
 22542                           
 22543                           ; BSR set to: 0
 22544                           ;encoder.c: 373: {;encoder.c: 374: os.division -= os.divide_step_size;
 22545  00B440  0101               	movlb	1	; () banked
 22546  00B442  517B               	movf	(_os+23)& (0+255),w,b	;volatile
 22547  00B444  5F79               	subwf	(_os+21)& (0+255),f,b	;volatile
 22548  00B446  0E00               	movlw	0
 22549  00B448  5B7A               	subwfb	(_os+22)& (0+255),f,b	;volatile
 22550                           
 22551                           ;encoder.c: 375: }
 22552  00B44A  D1AF               	goto	l2807
 22553  00B44C                     l2853:
 22554                           
 22555                           ;encoder.c: 376: else;encoder.c: 377: {;encoder.c: 378: os.division = 1;
 22556                           
 22557                           ; BSR set to: 1
 22558  00B44C  0E00               	movlw	0
 22559  00B44E  0101               	movlb	1	; () banked
 22560  00B450  6F7A               	movwf	(_os+22)& (0+255),b	;volatile
 22561  00B452  0E01               	movlw	1
 22562  00B454  6F79               	movwf	(_os+21)& (0+255),b	;volatile
 22563                           
 22564                           ; BSR set to: 1
 22565                           ;encoder.c: 379: };encoder.c: 380: };encoder.c: 381: break;
 22566                           
 22567                           ; BSR set to: 1
 22568  00B456  D1A9               	goto	l2807
 22569  00B458                     
 22570                           ;encoder.c: 384: if(os.button1==1)
 22571                           
 22572                           ; BSR set to: 1
 22573  00B458  0101               	movlb	1	; () banked
 22574  00B45A  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22575  00B45C  A4D8               	btfss	status,2,c
 22576  00B45E  D002               	goto	l2856
 22577                           
 22578                           ; BSR set to: 1
 22579                           ;encoder.c: 385: {;encoder.c: 386: os.displayState = DISPLAY_STATE_MAIN_DIVIDE;
 22580  00B460  0E02               	movlw	2
 22581  00B462  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22582  00B464                     l2856:
 22583                           
 22584                           ; BSR set to: 1
 22585                           ;encoder.c: 387: };encoder.c: 388: if(os.button2==1)
 22586                           
 22587                           ; BSR set to: 1
 22588  00B464  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22589  00B466  B4D8               	btfsc	status,2,c
 22590                           
 22591                           ; BSR set to: 1
 22592                           ;encoder.c: 389: {;encoder.c: 390: motor_divide_jump();
 22593  00B468  EC47  F097         	call	_motor_divide_jump	;wreg free
 22594                           
 22595                           ;encoder.c: 391: };encoder.c: 392: if(os.encoder2Count>0)
 22596  00B46C  0101               	movlb	1	; () banked
 22597  00B46E  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22598  00B470  0A80               	xorlw	128
 22599  00B472  0F7F               	addlw	-129
 22600  00B474  B0D8               	btfsc	status,0,c
 22601                           
 22602                           ; BSR set to: 1
 22603                           ;encoder.c: 393: {;encoder.c: 394: _divide_jump_size_increment();
 22604  00B476  EC0A  F0AA         	call	__divide_jump_size_increment	;wreg free
 22605                           
 22606                           ;encoder.c: 395: };encoder.c: 396: if(os.encoder2Count<0)
 22607  00B47A  0101               	movlb	1	; () banked
 22608  00B47C  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22609  00B47E  D195               	goto	l2807
 22610                           
 22611                           ; BSR set to: 1
 22612                           ;encoder.c: 397: {;encoder.c: 398: _divide_jump_size_decrement();
 22613  00B480  EC21  F0A2         	call	__divide_jump_size_decrement	;wreg free
 22614                           
 22615                           ;encoder.c: 399: };encoder.c: 400: break;
 22616  00B484  D192               	goto	l2807
 22617  00B486                     
 22618                           ;encoder.c: 406: if(os.button1==1)
 22619  00B486  0101               	movlb	1	; () banked
 22620  00B488  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22621  00B48A  A4D8               	btfss	status,2,c
 22622  00B48C  D002               	goto	l2863
 22623                           
 22624                           ; BSR set to: 1
 22625                           ;encoder.c: 407: {;encoder.c: 408: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22626  00B48E  0E62               	movlw	98
 22627  00B490  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22628  00B492                     l2863:
 22629                           
 22630                           ; BSR set to: 1
 22631                           ;encoder.c: 409: };encoder.c: 410: if(os.encoder1Count>0)
 22632                           
 22633                           ; BSR set to: 1
 22634  00B492  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22635  00B494  0A80               	xorlw	128
 22636  00B496  0F7F               	addlw	-129
 22637  00B498  A0D8               	btfss	status,0,c
 22638  00B49A  D002               	goto	l2864
 22639                           
 22640                           ; BSR set to: 1
 22641                           ;encoder.c: 411: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22642  00B49C  0E52               	movlw	82
 22643  00B49E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22644  00B4A0                     l2864:
 22645                           
 22646                           ; BSR set to: 1
 22647                           ;encoder.c: 412: if(os.encoder1Count<0)
 22648                           
 22649                           ; BSR set to: 1
 22650  00B4A0  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22651  00B4A2  D01B               	goto	l2866
 22652                           
 22653                           ; BSR set to: 1
 22654                           ;encoder.c: 413: os.displayState = DISPLAY_STATE_ARC1_CANCEL;
 22655  00B4A4  0E52               	movlw	82
 22656  00B4A6  D00F               	goto	L14
 22657  00B4A8                     
 22658                           ; BSR set to: 1
 22659                           ;encoder.c: 416: if(os.button1==1)
 22660                           
 22661                           ; BSR set to: 1
 22662  00B4A8  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 22663  00B4AA  A4D8               	btfss	status,2,c
 22664  00B4AC  D002               	goto	l2868
 22665                           
 22666                           ; BSR set to: 1
 22667                           ;encoder.c: 417: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22668  00B4AE  0E03               	movlw	3
 22669  00B4B0  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22670  00B4B2                     l2868:
 22671                           
 22672                           ; BSR set to: 1
 22673                           ;encoder.c: 418: if(os.encoder1Count>0)
 22674                           
 22675                           ; BSR set to: 1
 22676  00B4B2  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22677  00B4B4  0A80               	xorlw	128
 22678  00B4B6  0F7F               	addlw	-129
 22679  00B4B8  A0D8               	btfss	status,0,c
 22680  00B4BA  D002               	goto	l2869
 22681                           
 22682                           ; BSR set to: 1
 22683                           ;encoder.c: 419: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22684  00B4BC  0E51               	movlw	81
 22685  00B4BE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22686  00B4C0                     l2869:
 22687                           
 22688                           ; BSR set to: 1
 22689                           ;encoder.c: 420: if(os.encoder1Count<0)
 22690                           
 22691                           ; BSR set to: 1
 22692  00B4C0  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22693  00B4C2  D00B               	goto	l2866
 22694                           
 22695                           ; BSR set to: 1
 22696                           ;encoder.c: 421: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 22697  00B4C4  0E51               	movlw	81
 22698  00B4C6                     L14:
 22699  00B4C6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22700                           
 22701                           ; BSR set to: 1
 22702                           ;encoder.c: 423: }
 22703                           
 22704                           ; BSR set to: 1
 22705                           ;encoder.c: 422: break;
 22706  00B4C8  D008               	goto	l2866
 22707  00B4CA                     
 22708                           ; BSR set to: 1
 22709  00B4CA  0101               	movlb	1	; () banked
 22710  00B4CC  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 22711                           
 22712                           ; Switch size 1, requested type "space"
 22713                           ; Number of cases is 2, Range of values is 81 to 82
 22714                           ; switch strategies available:
 22715                           ; Name         Instructions Cycles
 22716                           ; simple_byte            7     4 (average)
 22717                           ;	Chosen strategy is simple_byte
 22718  00B4CE  0A51               	xorlw	81	; case 81
 22719  00B4D0  B4D8               	btfsc	status,2,c
 22720  00B4D2  D7D9               	goto	l2862
 22721  00B4D4  0A03               	xorlw	3	; case 82
 22722  00B4D6  B4D8               	btfsc	status,2,c
 22723  00B4D8  D7E7               	goto	l2867
 22724  00B4DA                     l2866:
 22725                           
 22726                           ; BSR set to: 1
 22727                           ;encoder.c: 424: if(os.button2==1)
 22728                           
 22729                           ; BSR set to: 1
 22730  00B4DA  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22731  00B4DC  A4D8               	btfss	status,2,c
 22732  00B4DE  D00A               	goto	l2871
 22733                           
 22734                           ; BSR set to: 1
 22735                           ;encoder.c: 425: {;encoder.c: 426: os.arc_step_size = _encoder_next_arc_step_size(os.arc
      +                          _step_size);
 22736  00B4E0  C180  F060         	movff	_os+28,__encoder_next_arc_step_size@old_stepsize	;volatile
 22737  00B4E4  C181  F061         	movff	_os+29,__encoder_next_arc_step_size@old_stepsize+1	;volatile
 22738  00B4E8  ECB2  F0A1         	call	__encoder_next_arc_step_size	;wreg free
 22739  00B4EC  C060  F180         	movff	?__encoder_next_arc_step_size,_os+28	;volatile
 22740  00B4F0  C061  F181         	movff	?__encoder_next_arc_step_size+1,_os+29	;volatile
 22741  00B4F4                     l2871:
 22742                           
 22743                           ;encoder.c: 427: };encoder.c: 428: if(os.encoder2Count>0)
 22744  00B4F4  0101               	movlb	1	; () banked
 22745  00B4F6  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22746  00B4F8  0A80               	xorlw	128
 22747  00B4FA  0F7F               	addlw	-129
 22748  00B4FC  A0D8               	btfss	status,0,c
 22749  00B4FE  D01C               	goto	l2873
 22750                           
 22751                           ; BSR set to: 1
 22752                           ;encoder.c: 429: {;encoder.c: 430: os.arc_size += os.arc_step_size;
 22753  00B500  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 22754  00B502  2782               	addwf	(_os+30)& (0+255),f,b	;volatile
 22755  00B504  5181               	movf	(_os+29)& (0+255),w,b	;volatile
 22756  00B506  2383               	addwfc	(_os+31)& (0+255),f,b	;volatile
 22757  00B508  0E00               	movlw	0
 22758  00B50A  2384               	addwfc	(_os+32)& (0+255),f,b	;volatile
 22759  00B50C  0E00               	movlw	0
 22760  00B50E  2385               	addwfc	(_os+33)& (0+255),f,b	;volatile
 22761                           
 22762                           ; BSR set to: 1
 22763                           ;encoder.c: 431: if(os.arc_size>100000)
 22764  00B510  BF85               	btfsc	(_os+33)& (0+255),7,b	;volatile
 22765  00B512  D012               	goto	l2873
 22766  00B514  5185               	movf	(_os+33)& (0+255),w,b	;volatile
 22767  00B516  E108               	bnz	u18330
 22768  00B518  0EA1               	movlw	161
 22769  00B51A  5D82               	subwf	(_os+30)& (0+255),w,b	;volatile
 22770  00B51C  0E86               	movlw	134
 22771  00B51E  5983               	subwfb	(_os+31)& (0+255),w,b	;volatile
 22772  00B520  0E01               	movlw	1
 22773  00B522  5984               	subwfb	(_os+32)& (0+255),w,b	;volatile
 22774  00B524  A0D8               	btfss	status,0,c
 22775  00B526  D008               	goto	l2873
 22776  00B528                     u18330:
 22777                           
 22778                           ; BSR set to: 1
 22779                           ;encoder.c: 432: os.arc_size = 100000;
 22780  00B528  0EA0               	movlw	160
 22781  00B52A  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 22782  00B52C  0E86               	movlw	134
 22783  00B52E  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 22784  00B530  0E01               	movlw	1
 22785  00B532  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 22786  00B534  0E00               	movlw	0
 22787  00B536  6F85               	movwf	(_os+33)& (0+255),b	;volatile
 22788  00B538                     l2873:
 22789                           
 22790                           ; BSR set to: 1
 22791                           ;encoder.c: 433: };encoder.c: 434: if(os.encoder2Count<0)
 22792                           
 22793                           ; BSR set to: 1
 22794                           
 22795                           ; BSR set to: 1
 22796  00B538  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 22797  00B53A  D137               	goto	l2807
 22798                           
 22799                           ; BSR set to: 1
 22800                           ;encoder.c: 435: {;encoder.c: 436: os.arc_size -= os.arc_step_size;
 22801  00B53C  5180               	movf	(_os+28)& (0+255),w,b	;volatile
 22802  00B53E  0100               	movlb	0	; () banked
 22803  00B540  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 22804  00B542  0101               	movlb	1	; () banked
 22805  00B544  5181               	movf	(_os+29)& (0+255),w,b	;volatile
 22806  00B546  0100               	movlb	0	; () banked
 22807  00B548  6FA9               	movwf	(??_encoder_statemachine+1)& (0+255),b
 22808  00B54A  6BAA               	clrf	(??_encoder_statemachine+2)& (0+255),b
 22809  00B54C  6BAB               	clrf	(??_encoder_statemachine+3)& (0+255),b
 22810  00B54E  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 22811  00B550  0101               	movlb	1	; () banked
 22812  00B552  5F82               	subwf	(_os+30)& (0+255),f,b	;volatile
 22813  00B554  0100               	movlb	0	; () banked
 22814  00B556  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 22815  00B558  0101               	movlb	1	; () banked
 22816  00B55A  5B83               	subwfb	(_os+31)& (0+255),f,b	;volatile
 22817  00B55C  0100               	movlb	0	; () banked
 22818  00B55E  51AA               	movf	(??_encoder_statemachine+2)& (0+255),w,b
 22819  00B560  0101               	movlb	1	; () banked
 22820  00B562  5B84               	subwfb	(_os+32)& (0+255),f,b	;volatile
 22821  00B564  0100               	movlb	0	; () banked
 22822  00B566  51AB               	movf	(??_encoder_statemachine+3)& (0+255),w,b
 22823  00B568  0101               	movlb	1	; () banked
 22824  00B56A  5B85               	subwfb	(_os+33)& (0+255),f,b	;volatile
 22825                           
 22826                           ;encoder.c: 437: if(os.arc_size<1)
 22827  00B56C  BF85               	btfsc	(_os+33)& (0+255),7,b	;volatile
 22828  00B56E  D007               	goto	u18350
 22829  00B570  5185               	movf	(_os+33)& (0+255),w,b	;volatile
 22830  00B572  1184               	iorwf	(_os+32)& (0+255),w,b	;volatile
 22831  00B574  1183               	iorwf	(_os+31)& (0+255),w,b	;volatile
 22832  00B576  E102               	bnz	u18351
 22833  00B578  0582               	decf	(_os+30)& (0+255),w,b	;volatile
 22834  00B57A  B0D8               	btfsc	status,0,c
 22835  00B57C                     u18351:
 22836  00B57C  D116               	goto	l2807
 22837  00B57E                     u18350:
 22838                           
 22839                           ; BSR set to: 1
 22840                           ;encoder.c: 438: os.arc_size = 1;
 22841  00B57E  0E01               	movlw	1
 22842  00B580  6F82               	movwf	(_os+30)& (0+255),b	;volatile
 22843  00B582  0E00               	movlw	0
 22844  00B584  6F83               	movwf	(_os+31)& (0+255),b	;volatile
 22845  00B586  0E00               	movlw	0
 22846  00B588  6F84               	movwf	(_os+32)& (0+255),b	;volatile
 22847  00B58A  0E00               	movlw	0
 22848  00B58C  6F85               	movwf	(_os+33)& (0+255),b	;volatile
 22849                           
 22850                           ; BSR set to: 1
 22851                           ;encoder.c: 439: };encoder.c: 440: break;
 22852                           
 22853                           ; BSR set to: 1
 22854  00B58E  D10D               	goto	l2807
 22855  00B590                     
 22856                           ;encoder.c: 443: if(os.encoder1Count>0)
 22857                           
 22858                           ; BSR set to: 1
 22859  00B590  0101               	movlb	1	; () banked
 22860  00B592  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 22861  00B594  0A80               	xorlw	128
 22862  00B596  0F7F               	addlw	-129
 22863  00B598  A0D8               	btfss	status,0,c
 22864  00B59A  D011               	goto	l2879
 22865                           
 22866                           ; BSR set to: 1
 22867                           ;encoder.c: 444: {;encoder.c: 445: if(os.arc_speed<config.maximum_speed_arc)
 22868  00B59C  51A5               	movf	(_config+15)& (0+255),w,b
 22869  00B59E  5D86               	subwf	(_os+34)& (0+255),w,b	;volatile
 22870  00B5A0  51A6               	movf	(_config+16)& (0+255),w,b
 22871  00B5A2  5987               	subwfb	(_os+35)& (0+255),w,b	;volatile
 22872  00B5A4  B0D8               	btfsc	status,0,c
 22873  00B5A6  D002               	goto	l2878
 22874                           
 22875                           ; BSR set to: 1
 22876                           ;encoder.c: 446: ++os.arc_speed;
 22877  00B5A8  4B86               	infsnz	(_os+34)& (0+255),f,b	;volatile
 22878  00B5AA  2B87               	incf	(_os+35)& (0+255),f,b	;volatile
 22879  00B5AC                     l2878:
 22880                           
 22881                           ; BSR set to: 1
 22882                           ;encoder.c: 447: if(os.busy)
 22883                           
 22884                           ; BSR set to: 1
 22885  00B5AC  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22886  00B5AE  B4D8               	btfsc	status,2,c
 22887  00B5B0  D006               	goto	l2879
 22888                           
 22889                           ; BSR set to: 1
 22890                           ;encoder.c: 448: motor_change_speed(os.arc_speed);
 22891  00B5B2  C186  F060         	movff	_os+34,motor_change_speed@new_speed	;volatile
 22892  00B5B6  C187  F061         	movff	_os+35,motor_change_speed@new_speed+1	;volatile
 22893  00B5BA  ECC2  F0AE         	call	_motor_change_speed	;wreg free
 22894  00B5BE                     l2879:
 22895                           
 22896                           ;encoder.c: 449: };encoder.c: 450: if(os.encoder1Count<0)
 22897  00B5BE  0101               	movlb	1	; () banked
 22898  00B5C0  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 22899  00B5C2  D046               	goto	l2883
 22900                           
 22901                           ; BSR set to: 1
 22902                           ;encoder.c: 451: {;encoder.c: 452: if(os.arc_speed>config.minimum_speed)
 22903  00B5C4  5186               	movf	(_os+34)& (0+255),w,b	;volatile
 22904  00B5C6  5D9F               	subwf	(_config+9)& (0+255),w,b
 22905  00B5C8  5187               	movf	(_os+35)& (0+255),w,b	;volatile
 22906  00B5CA  59A0               	subwfb	(_config+10)& (0+255),w,b
 22907  00B5CC  B0D8               	btfsc	status,0,c
 22908  00B5CE  D003               	goto	l2881
 22909                           
 22910                           ; BSR set to: 1
 22911                           ;encoder.c: 453: --os.arc_speed;
 22912  00B5D0  0786               	decf	(_os+34)& (0+255),f,b	;volatile
 22913  00B5D2  A0D8               	btfss	status,0,c
 22914  00B5D4  0787               	decf	(_os+35)& (0+255),f,b	;volatile
 22915  00B5D6                     l2881:
 22916                           
 22917                           ; BSR set to: 1
 22918                           ;encoder.c: 454: if(os.busy)
 22919                           
 22920                           ; BSR set to: 1
 22921  00B5D6  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22922  00B5D8  B4D8               	btfsc	status,2,c
 22923  00B5DA  D03A               	goto	l2883
 22924                           
 22925                           ; BSR set to: 1
 22926                           ;encoder.c: 455: motor_change_speed(os.arc_speed);
 22927  00B5DC  C186  F060         	movff	_os+34,motor_change_speed@new_speed	;volatile
 22928  00B5E0  C187  F061         	movff	_os+35,motor_change_speed@new_speed+1	;volatile
 22929  00B5E4  ECC2  F0AE         	call	_motor_change_speed	;wreg free
 22930                           
 22931                           ;encoder.c: 456: };encoder.c: 457: switch(os.displayState)
 22932  00B5E8  D033               	goto	l2883
 22933  00B5EA                     
 22934                           ;encoder.c: 460: if(os.button2==1)
 22935  00B5EA  0101               	movlb	1	; () banked
 22936  00B5EC  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22937  00B5EE  A4D8               	btfss	status,2,c
 22938  00B5F0  D006               	goto	l2885
 22939                           
 22940                           ; BSR set to: 1
 22941                           ;encoder.c: 461: {;encoder.c: 462: motor_arc_move(MOTOR_DIRECTION_CCW);
 22942  00B5F2  0EFF               	movlw	255
 22943  00B5F4  ECD5  F08F         	call	_motor_arc_move
 22944                           
 22945                           ;encoder.c: 463: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22946  00B5F8  0E62               	movlw	98
 22947  00B5FA  0101               	movlb	1	; () banked
 22948  00B5FC  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22949  00B5FE                     l2885:
 22950                           
 22951                           ; BSR set to: 1
 22952                           ;encoder.c: 464: };encoder.c: 465: if(os.encoder2Count>0)
 22953                           
 22954                           ; BSR set to: 1
 22955  00B5FE  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22956  00B600  0A80               	xorlw	128
 22957  00B602  0F7F               	addlw	-129
 22958  00B604  A0D8               	btfss	status,0,c
 22959  00B606  D0D1               	goto	l2807
 22960                           
 22961                           ; BSR set to: 1
 22962                           ;encoder.c: 466: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 22963  00B608  0E62               	movlw	98
 22964  00B60A  D099               	goto	L21
 22965  00B60C                     
 22966                           ; BSR set to: 1
 22967                           ;encoder.c: 469: if(os.button2==1)
 22968                           
 22969                           ; BSR set to: 1
 22970  00B60C  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 22971  00B60E  A4D8               	btfss	status,2,c
 22972  00B610  D007               	goto	l2889
 22973                           
 22974                           ; BSR set to: 1
 22975                           ;encoder.c: 470: {;encoder.c: 471: if(os.busy)
 22976  00B612  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 22977  00B614  A4D8               	btfss	status,2,c
 22978                           
 22979                           ; BSR set to: 1
 22980                           ;encoder.c: 472: motor_stop();
 22981  00B616  EC33  F0A8         	call	_motor_stop	;wreg free
 22982                           
 22983                           ;encoder.c: 473: os.displayState = DISPLAY_STATE_MAIN_ARC;
 22984  00B61A  0E03               	movlw	3
 22985  00B61C  0101               	movlb	1	; () banked
 22986  00B61E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 22987  00B620                     l2889:
 22988                           
 22989                           ; BSR set to: 1
 22990                           ;encoder.c: 474: };encoder.c: 475: if(os.encoder2Count>0)
 22991                           
 22992                           ; BSR set to: 1
 22993  00B620  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 22994  00B622  0A80               	xorlw	128
 22995  00B624  0F7F               	addlw	-129
 22996  00B626  A0D8               	btfss	status,0,c
 22997  00B628  D002               	goto	l2891
 22998                           
 22999                           ; BSR set to: 1
 23000                           ;encoder.c: 476: os.displayState = DISPLAY_STATE_ARC2_CW;
 23001  00B62A  0E63               	movlw	99
 23002  00B62C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23003  00B62E                     l2891:
 23004                           
 23005                           ; BSR set to: 1
 23006                           ;encoder.c: 477: if(os.encoder2Count<0)
 23007                           
 23008                           ; BSR set to: 1
 23009  00B62E  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23010  00B630  D0BC               	goto	l2807
 23011                           
 23012                           ; BSR set to: 1
 23013                           ;encoder.c: 478: os.displayState = DISPLAY_STATE_ARC2_CCW;
 23014  00B632  0E61               	movlw	97
 23015  00B634  D084               	goto	L21
 23016  00B636                     
 23017                           ; BSR set to: 1
 23018                           ;encoder.c: 481: if(os.button2==1)
 23019                           
 23020                           ; BSR set to: 1
 23021  00B636  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23022  00B638  A4D8               	btfss	status,2,c
 23023  00B63A  D006               	goto	l2894
 23024                           
 23025                           ; BSR set to: 1
 23026                           ;encoder.c: 482: {;encoder.c: 483: motor_arc_move(MOTOR_DIRECTION_CW);
 23027  00B63C  0E01               	movlw	1
 23028  00B63E  ECD5  F08F         	call	_motor_arc_move
 23029                           
 23030                           ;encoder.c: 484: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23031  00B642  0E62               	movlw	98
 23032  00B644  0101               	movlb	1	; () banked
 23033  00B646  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23034  00B648                     l2894:
 23035                           
 23036                           ; BSR set to: 1
 23037                           ;encoder.c: 485: };encoder.c: 486: if(os.encoder2Count<0)
 23038                           
 23039                           ; BSR set to: 1
 23040  00B648  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23041  00B64A  D0AF               	goto	l2807
 23042                           
 23043                           ; BSR set to: 1
 23044                           ;encoder.c: 487: os.displayState = DISPLAY_STATE_ARC2_CANCEL;
 23045  00B64C  0E62               	movlw	98
 23046  00B64E  D077               	goto	L21
 23047  00B650                     l2883:
 23048                           
 23049                           ; BSR set to: 1
 23050  00B650  0101               	movlb	1	; () banked
 23051  00B652  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23052                           
 23053                           ; Switch size 1, requested type "space"
 23054                           ; Number of cases is 3, Range of values is 97 to 99
 23055                           ; switch strategies available:
 23056                           ; Name         Instructions Cycles
 23057                           ; simple_byte           10     6 (average)
 23058                           ;	Chosen strategy is simple_byte
 23059  00B654  0A61               	xorlw	97	; case 97
 23060  00B656  B4D8               	btfsc	status,2,c
 23061  00B658  D7C8               	goto	l2884
 23062  00B65A  0A03               	xorlw	3	; case 98
 23063  00B65C  B4D8               	btfsc	status,2,c
 23064  00B65E  D7D6               	goto	l2888
 23065  00B660  0A01               	xorlw	1	; case 99
 23066  00B662  B4D8               	btfsc	status,2,c
 23067  00B664  D7E8               	goto	l2893
 23068                           
 23069                           ; BSR set to: 1
 23070                           ;encoder.c: 490: break;
 23071  00B666  D0A1               	goto	l2807
 23072  00B668                     
 23073                           ;encoder.c: 493: if(os.button2==1)
 23074                           
 23075                           ; BSR set to: 1
 23076  00B668  0101               	movlb	1	; () banked
 23077  00B66A  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23078  00B66C  A4D8               	btfss	status,2,c
 23079  00B66E  D018               	goto	l2897
 23080                           
 23081                           ; BSR set to: 1
 23082                           ;encoder.c: 494: {;encoder.c: 496: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF,
      +                           MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23083  00B670  0E00               	movlw	0
 23084  00B672  0100               	movlb	0	; () banked
 23085  00B674  6F92               	movwf	motor_goto_steps@position& (0+255),b
 23086  00B676  0E00               	movlw	0
 23087  00B678  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 23088  00B67A  0E00               	movlw	0
 23089  00B67C  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 23090  00B67E  0E00               	movlw	0
 23091  00B680  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 23092  00B682  0EFF               	movlw	255
 23093  00B684  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23094  00B686  6996               	setf	motor_goto_steps@speed& (0+255),b
 23095  00B688  0E00               	movlw	0
 23096  00B68A  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23097  00B68C  0E00               	movlw	0
 23098  00B68E  EC4E  F09B         	call	_motor_goto_steps
 23099                           
 23100                           ;encoder.c: 498: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23101  00B692  0E05               	movlw	5
 23102  00B694  0101               	movlb	1	; () banked
 23103  00B696  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23104                           
 23105                           ; BSR set to: 1
 23106                           ;encoder.c: 499: os.divide_position = 0;
 23107  00B698  0E00               	movlw	0
 23108  00B69A  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 23109  00B69C  0E00               	movlw	0
 23110  00B69E  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 23111  00B6A0                     l2897:
 23112                           
 23113                           ; BSR set to: 1
 23114                           ;encoder.c: 500: };encoder.c: 501: if(os.button1==1)
 23115                           
 23116                           ; BSR set to: 1
 23117  00B6A0  0568               	decf	(_os+4)& (0+255),w,b	;volatile
 23118  00B6A2  A4D8               	btfss	status,2,c
 23119  00B6A4  D082               	goto	l2807
 23120                           
 23121                           ; BSR set to: 1
 23122                           ;encoder.c: 502: {;encoder.c: 503: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 23123  00B6A6  0E05               	movlw	5
 23124  00B6A8  D04A               	goto	L21
 23125  00B6AA                     
 23126                           ;encoder.c: 508: if(os.encoder1Count>0)
 23127                           
 23128                           ; BSR set to: 1
 23129  00B6AA  0101               	movlb	1	; () banked
 23130  00B6AC  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 23131  00B6AE  0A80               	xorlw	128
 23132  00B6B0  0F7F               	addlw	-129
 23133  00B6B2  B0D8               	btfsc	status,0,c
 23134                           
 23135                           ; BSR set to: 1
 23136                           ;encoder.c: 509: {;encoder.c: 510: motor_increase_manual_speed();
 23137  00B6B4  EC1B  F0AE         	call	_motor_increase_manual_speed	;wreg free
 23138                           
 23139                           ;encoder.c: 511: };encoder.c: 512: if(os.encoder1Count<0)
 23140  00B6B8  0101               	movlb	1	; () banked
 23141  00B6BA  AF67               	btfss	(_os+3)& (0+255),7,b	;volatile
 23142  00B6BC  D042               	goto	l2902
 23143                           
 23144                           ; BSR set to: 1
 23145                           ;encoder.c: 513: {;encoder.c: 514: motor_decrease_manual_speed();
 23146  00B6BE  ECA4  F0AD         	call	_motor_decrease_manual_speed	;wreg free
 23147                           
 23148                           ;encoder.c: 515: };encoder.c: 516: switch(os.displayState)
 23149  00B6C2  D03F               	goto	l2902
 23150  00B6C4                     
 23151                           ;encoder.c: 519: if(os.button2==1)
 23152  00B6C4  0101               	movlb	1	; () banked
 23153  00B6C6  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23154  00B6C8  A4D8               	btfss	status,2,c
 23155  00B6CA  D00A               	goto	l2904
 23156                           
 23157                           ; BSR set to: 1
 23158                           ;encoder.c: 520: {;encoder.c: 521: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_spe
      +                          ed);
 23159  00B6CC  C189  F08C         	movff	_os+37,motor_move_endless@speed	;volatile
 23160  00B6D0  C18A  F08D         	movff	_os+38,motor_move_endless@speed+1	;volatile
 23161  00B6D4  0EFF               	movlw	255
 23162  00B6D6  EC3D  F0AC         	call	_motor_move_endless
 23163                           
 23164                           ;encoder.c: 522: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23165  00B6DA  0E84               	movlw	132
 23166  00B6DC  0101               	movlb	1	; () banked
 23167  00B6DE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23168  00B6E0                     l2904:
 23169                           
 23170                           ; BSR set to: 1
 23171                           ;encoder.c: 523: };encoder.c: 524: if(os.encoder2Count>0)
 23172                           
 23173                           ; BSR set to: 1
 23174  00B6E0  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23175  00B6E2  0A80               	xorlw	128
 23176  00B6E4  0F7F               	addlw	-129
 23177  00B6E6  A0D8               	btfss	status,0,c
 23178  00B6E8  D060               	goto	l2807
 23179                           
 23180                           ; BSR set to: 1
 23181                           ;encoder.c: 525: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23182  00B6EA  0E82               	movlw	130
 23183  00B6EC  D028               	goto	L21
 23184  00B6EE                     
 23185                           ; BSR set to: 1
 23186                           ;encoder.c: 528: if(os.button2==1)
 23187                           
 23188                           ; BSR set to: 1
 23189  00B6EE  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23190  00B6F0  A4D8               	btfss	status,2,c
 23191  00B6F2  D002               	goto	l2908
 23192                           
 23193                           ; BSR set to: 1
 23194                           ;encoder.c: 529: os.displayState = DISPLAY_STATE_MAIN_MANUAL;
 23195  00B6F4  0E04               	movlw	4
 23196  00B6F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23197  00B6F8                     l2908:
 23198                           
 23199                           ; BSR set to: 1
 23200                           ;encoder.c: 530: if(os.encoder2Count>0)
 23201                           
 23202                           ; BSR set to: 1
 23203  00B6F8  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 23204  00B6FA  0A80               	xorlw	128
 23205  00B6FC  0F7F               	addlw	-129
 23206  00B6FE  A0D8               	btfss	status,0,c
 23207  00B700  D002               	goto	l2909
 23208                           
 23209                           ; BSR set to: 1
 23210                           ;encoder.c: 531: os.displayState = DISPLAY_STATE_MANUAL_CW;
 23211  00B702  0E83               	movlw	131
 23212  00B704  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23213  00B706                     l2909:
 23214                           
 23215                           ; BSR set to: 1
 23216                           ;encoder.c: 532: if(os.encoder2Count<0)
 23217                           
 23218                           ; BSR set to: 1
 23219  00B706  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23220  00B708  D050               	goto	l2807
 23221                           
 23222                           ; BSR set to: 1
 23223                           ;encoder.c: 533: os.displayState = DISPLAY_STATE_MANUAL_CCW;
 23224  00B70A  0E81               	movlw	129
 23225  00B70C  D018               	goto	L21
 23226  00B70E                     
 23227                           ; BSR set to: 1
 23228                           ;encoder.c: 536: if(os.button2==1)
 23229                           
 23230                           ; BSR set to: 1
 23231  00B70E  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23232  00B710  A4D8               	btfss	status,2,c
 23233  00B712  D009               	goto	l2912
 23234                           
 23235                           ; BSR set to: 1
 23236                           ;encoder.c: 537: {;encoder.c: 538: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 23237  00B714  0E84               	movlw	132
 23238  00B716  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23239                           
 23240                           ; BSR set to: 1
 23241                           ;encoder.c: 539: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 23242  00B718  C189  F08C         	movff	_os+37,motor_move_endless@speed	;volatile
 23243  00B71C  C18A  F08D         	movff	_os+38,motor_move_endless@speed+1	;volatile
 23244  00B720  0E01               	movlw	1
 23245  00B722  EC3D  F0AC         	call	_motor_move_endless
 23246  00B726                     l2912:
 23247                           
 23248                           ;encoder.c: 540: };encoder.c: 541: if(os.encoder2Count<0)
 23249  00B726  0101               	movlb	1	; () banked
 23250  00B728  AF69               	btfss	(_os+5)& (0+255),7,b	;volatile
 23251  00B72A  D03F               	goto	l2807
 23252                           
 23253                           ; BSR set to: 1
 23254                           ;encoder.c: 542: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23255  00B72C  0E82               	movlw	130
 23256  00B72E  D007               	goto	L21
 23257  00B730                     
 23258                           ; BSR set to: 1
 23259                           ;encoder.c: 545: if(os.button2==1)
 23260                           
 23261                           ; BSR set to: 1
 23262  00B730  056A               	decf	(_os+6)& (0+255),w,b	;volatile
 23263  00B732  A4D8               	btfss	status,2,c
 23264  00B734  D03A               	goto	l2807
 23265                           
 23266                           ; BSR set to: 1
 23267                           ;encoder.c: 546: {;encoder.c: 547: motor_stop();
 23268  00B736  EC33  F0A8         	call	_motor_stop	;wreg free
 23269                           
 23270                           ;encoder.c: 548: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 23271  00B73A  0E82               	movlw	130
 23272  00B73C                     L22:
 23273  00B73C  0101               	movlb	1	; () banked
 23274  00B73E                     L21:
 23275  00B73E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 23276                           
 23277                           ; BSR set to: 1
 23278                           ;encoder.c: 551: }
 23279                           
 23280                           ; BSR set to: 1
 23281                           ;encoder.c: 549: };encoder.c: 550: break;
 23282  00B740  D034               	goto	l2807
 23283  00B742                     l2902:
 23284                           
 23285                           ; BSR set to: 1
 23286  00B742  0101               	movlb	1	; () banked
 23287  00B744  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23288                           
 23289                           ; Switch size 1, requested type "space"
 23290                           ; Number of cases is 4, Range of values is 129 to 132
 23291                           ; switch strategies available:
 23292                           ; Name         Instructions Cycles
 23293                           ; simple_byte           13     7 (average)
 23294                           ;	Chosen strategy is simple_byte
 23295  00B746  0A81               	xorlw	129	; case 129
 23296  00B748  B4D8               	btfsc	status,2,c
 23297  00B74A  D7BC               	goto	l2903
 23298  00B74C  0A03               	xorlw	3	; case 130
 23299  00B74E  B4D8               	btfsc	status,2,c
 23300  00B750  D7CE               	goto	l2907
 23301  00B752  0A01               	xorlw	1	; case 131
 23302  00B754  B4D8               	btfsc	status,2,c
 23303  00B756  D7DB               	goto	l2911
 23304  00B758  0A07               	xorlw	7	; case 132
 23305  00B75A  B4D8               	btfsc	status,2,c
 23306  00B75C  D7E9               	goto	l2914
 23307                           
 23308                           ; BSR set to: 1
 23309                           ;encoder.c: 553: }
 23310                           
 23311                           ; BSR set to: 1
 23312                           ;encoder.c: 552: break;
 23313  00B75E  D025               	goto	l2807
 23314  00B760                     l2772:
 23315                           
 23316                           ; BSR set to: 1
 23317                           
 23318                           ; BSR set to: 1
 23319  00B760  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 23320  00B762  0BF0               	andlw	240
 23321  00B764  0100               	movlb	0	; () banked
 23322  00B766  6FA8               	movwf	??_encoder_statemachine& (0+255),b
 23323  00B768  6BA9               	clrf	(??_encoder_statemachine+1)& (0+255),b
 23324                           
 23325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 23326                           ; Switch size 1, requested type "space"
 23327                           ; Number of cases is 1, Range of values is 0 to 0
 23328                           ; switch strategies available:
 23329                           ; Name         Instructions Cycles
 23330                           ; simple_byte            4     3 (average)
 23331                           ;	Chosen strategy is simple_byte
 23332  00B76A  51A9               	movf	(??_encoder_statemachine+1)& (0+255),w,b
 23333  00B76C  0A00               	xorlw	0	; case 0
 23334  00B76E  A4D8               	btfss	status,2,c
 23335  00B770  D01C               	goto	l2807
 23336                           
 23337                           ; BSR set to: 0
 23338                           ; Switch size 1, requested type "space"
 23339                           ; Number of cases is 9, Range of values is 0 to 128
 23340                           ; switch strategies available:
 23341                           ; Name         Instructions Cycles
 23342                           ; simple_byte           28    15 (average)
 23343                           ;	Chosen strategy is simple_byte
 23344  00B772  51A8               	movf	??_encoder_statemachine& (0+255),w,b
 23345  00B774  0A00               	xorlw	0	; case 0
 23346  00B776  B4D8               	btfsc	status,2,c
 23347  00B778  D51F               	goto	l2774
 23348  00B77A  0A10               	xorlw	16	; case 16
 23349  00B77C  B4D8               	btfsc	status,2,c
 23350  00B77E  D55C               	goto	l2809
 23351  00B780  0A30               	xorlw	48	; case 32
 23352  00B782  B4D8               	btfsc	status,2,c
 23353  00B784  D603               	goto	l2825
 23354  00B786  0A10               	xorlw	16	; case 48
 23355  00B788  B4D8               	btfsc	status,2,c
 23356  00B78A  D62D               	goto	l2840
 23357  00B78C  0A70               	xorlw	112	; case 64
 23358  00B78E  B4D8               	btfsc	status,2,c
 23359  00B790  D663               	goto	l2855
 23360  00B792  0A10               	xorlw	16	; case 80
 23361  00B794  B4D8               	btfsc	status,2,c
 23362  00B796  D699               	goto	l2861
 23363  00B798  0A30               	xorlw	48	; case 96
 23364  00B79A  B4D8               	btfsc	status,2,c
 23365  00B79C  D6F9               	goto	l2876
 23366  00B79E  0A10               	xorlw	16	; case 112
 23367  00B7A0  B4D8               	btfsc	status,2,c
 23368  00B7A2  D762               	goto	l2896
 23369  00B7A4  0AF0               	xorlw	240	; case 128
 23370  00B7A6  B4D8               	btfsc	status,2,c
 23371  00B7A8  D780               	goto	l2899
 23372  00B7AA                     l2807:
 23373                           
 23374                           ;encoder.c: 556: os.encoder1Count = 0;
 23375                           
 23376                           ; BSR set to: 0
 23377  00B7AA  0E00               	movlw	0
 23378  00B7AC  0101               	movlb	1	; () banked
 23379  00B7AE  6F67               	movwf	(_os+3)& (0+255),b	;volatile
 23380                           
 23381                           ;encoder.c: 557: os.encoder2Count = 0;
 23382  00B7B0  0E00               	movlw	0
 23383  00B7B2  6F69               	movwf	(_os+5)& (0+255),b	;volatile
 23384                           
 23385                           ;encoder.c: 558: os.button1 = 0;
 23386  00B7B4  0E00               	movlw	0
 23387  00B7B6  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 23388                           
 23389                           ;encoder.c: 559: os.button2 = 0;
 23390  00B7B8  0E00               	movlw	0
 23391  00B7BA  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 23392                           
 23393                           ; BSR set to: 1
 23394  00B7BC  0012               	return		;funcret
 23395  00B7BE                     __end_of_encoder_statemachine:
 23396                           	opt stack 0
 23397                           tblptru	equ	0xFF8
 23398                           tblptrh	equ	0xFF7
 23399                           tblptrl	equ	0xFF6
 23400                           tablat	equ	0xFF5
 23401                           prodh	equ	0xFF4
 23402                           prodl	equ	0xFF3
 23403                           intcon	equ	0xFF2
 23404                           postinc0	equ	0xFEE
 23405                           wreg	equ	0xFE8
 23406                           indf1	equ	0xFE7
 23407                           postinc1	equ	0xFE6
 23408                           postdec1	equ	0xFE5
 23409                           plusw1	equ	0xFE3
 23410                           fsr1h	equ	0xFE2
 23411                           fsr1l	equ	0xFE1
 23412                           indf2	equ	0xFDF
 23413                           postinc2	equ	0xFDE
 23414                           postdec2	equ	0xFDD
 23415                           plusw2	equ	0xFDB
 23416                           fsr2h	equ	0xFDA
 23417                           fsr2l	equ	0xFD9
 23418                           status	equ	0xFD8
 23419                           
 23420 ;; *************** function _motor_move_degrees_int *****************
 23421 ;; Defined at:
 23422 ;;		line 1014 in file "motor.c"
 23423 ;; Parameters:    Size  Location     Type
 23424 ;;  direction       1    wreg     enum E6622
 23425 ;;  distance        2   57[BANK0 ] unsigned int 
 23426 ;;  speed           2   59[BANK0 ] unsigned int 
 23427 ;;  overshoot       1   61[BANK0 ] enum E6635
 23428 ;; Auto vars:     Size  Location     Type
 23429 ;;  direction       1   66[BANK0 ] enum E6622
 23430 ;;  distance_in_    4   62[BANK0 ] unsigned long 
 23431 ;; Return value:  Size  Location     Type
 23432 ;;                  1    wreg      enum E6639
 23433 ;; Registers used:
 23434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23435 ;; Tracked objects:
 23436 ;;		On entry : 0/0
 23437 ;;		On exit  : 0/0
 23438 ;;		Unchanged: 0/0
 23439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23440 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23441 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23443 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23444 ;;Total ram usage:       10 bytes
 23445 ;; Hardware stack levels used:    1
 23446 ;; Hardware stack levels required when called:   13
 23447 ;; This function calls:
 23448 ;;		__motor_move_steps
 23449 ;;		__motor_steps_from_degrees_int
 23450 ;; This function is called by:
 23451 ;;		_encoder_statemachine
 23452 ;; This function uses a non-reentrant model
 23453 ;;
 23454                           
 23455                           	psect	text92
 23456  0151A0                     __ptext92:
 23457                           	opt stack 0
 23458  0151A0                     _motor_move_degrees_int:
 23459                           	opt stack 16
 23460                           
 23461                           ; BSR set to: 1
 23462                           ;incstack = 0
 23463                           ;motor_move_degrees_int@direction stored from wreg
 23464  0151A0  0100               	movlb	0	; () banked
 23465  0151A2  6FA2               	movwf	motor_move_degrees_int@direction& (0+255),b
 23466                           
 23467                           ;motor.c: 1017: uint32_t distance_in_steps = _motor_steps_from_degrees_int(distance);
 23468  0151A4  C099  F091         	movff	motor_move_degrees_int@distance,__motor_steps_from_degrees_int@degrees
 23469  0151A8  C09A  F092         	movff	motor_move_degrees_int@distance+1,__motor_steps_from_degrees_int@degrees+1
 23470  0151AC  ECCC  F085         	call	__motor_steps_from_degrees_int	;wreg free
 23471  0151B0  C091  F09E         	movff	?__motor_steps_from_degrees_int,motor_move_degrees_int@distance_in_steps
 23472  0151B4  C092  F09F         	movff	?__motor_steps_from_degrees_int+1,motor_move_degrees_int@distance_in_steps+1
 23473  0151B8  C093  F0A0         	movff	?__motor_steps_from_degrees_int+2,motor_move_degrees_int@distance_in_steps+2
 23474  0151BC  C094  F0A1         	movff	?__motor_steps_from_degrees_int+3,motor_move_degrees_int@distance_in_steps+3
 23475                           
 23476                           ;motor.c: 1020: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_move_degrees_int is never used
 23477  0151C0  C09E  F07D         	movff	motor_move_degrees_int@distance_in_steps,__motor_move_steps@distance_in_steps
 23478  0151C4  C09F  F07E         	movff	motor_move_degrees_int@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 23479  0151C8  C0A0  F07F         	movff	motor_move_degrees_int@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 23480  0151CC  C0A1  F080         	movff	motor_move_degrees_int@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 23481  0151D0  C09B  F081         	movff	motor_move_degrees_int@speed,__motor_move_steps@speed
 23482  0151D4  C09C  F082         	movff	motor_move_degrees_int@speed+1,__motor_move_steps@speed+1
 23483  0151D8  C09D  F083         	movff	motor_move_degrees_int@overshoot,__motor_move_steps@overshoot
 23484  0151DC  0E00               	movlw	0
 23485  0151DE  0100               	movlb	0	; () banked
 23486  0151E0  6F84               	movwf	__motor_move_steps@type& (0+255),b
 23487  0151E2  51A2               	movf	motor_move_degrees_int@direction& (0+255),w,b
 23488  0151E4  ECC2  F076         	call	__motor_move_steps
 23489  0151E8  0012               	return	
 23490  0151EA                     __end_of_motor_move_degrees_int:
 23491                           	opt stack 0
 23492                           tblptru	equ	0xFF8
 23493                           tblptrh	equ	0xFF7
 23494                           tblptrl	equ	0xFF6
 23495                           tablat	equ	0xFF5
 23496                           prodh	equ	0xFF4
 23497                           prodl	equ	0xFF3
 23498                           intcon	equ	0xFF2
 23499                           postinc0	equ	0xFEE
 23500                           wreg	equ	0xFE8
 23501                           indf1	equ	0xFE7
 23502                           postinc1	equ	0xFE6
 23503                           postdec1	equ	0xFE5
 23504                           plusw1	equ	0xFE3
 23505                           fsr1h	equ	0xFE2
 23506                           fsr1l	equ	0xFE1
 23507                           indf2	equ	0xFDF
 23508                           postinc2	equ	0xFDE
 23509                           postdec2	equ	0xFDD
 23510                           plusw2	equ	0xFDB
 23511                           fsr2h	equ	0xFDA
 23512                           fsr2l	equ	0xFD9
 23513                           status	equ	0xFD8
 23514                           
 23515 ;; *************** function __motor_steps_from_degrees_int *****************
 23516 ;; Defined at:
 23517 ;;		line 426 in file "motor.c"
 23518 ;; Parameters:    Size  Location     Type
 23519 ;;  degrees         2   49[BANK0 ] unsigned int 
 23520 ;; Auto vars:     Size  Location     Type
 23521 ;;  temp            4   53[BANK0 ] unsigned int 
 23522 ;; Return value:  Size  Location     Type
 23523 ;;                  4   49[BANK0 ] unsigned long 
 23524 ;; Registers used:
 23525 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 23526 ;; Tracked objects:
 23527 ;;		On entry : 0/0
 23528 ;;		On exit  : 0/0
 23529 ;;		Unchanged: 0/0
 23530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23531 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23532 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23534 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23535 ;;Total ram usage:        8 bytes
 23536 ;; Hardware stack levels used:    1
 23537 ;; Hardware stack levels required when called:   11
 23538 ;; This function calls:
 23539 ;;		___fladd
 23540 ;;		___fldiv
 23541 ;;		___flmul
 23542 ;;		___fltol
 23543 ;;		___xxtofl
 23544 ;; This function is called by:
 23545 ;;		_motor_move_degrees_int
 23546 ;;		_motor_goto_degrees_int
 23547 ;; This function uses a non-reentrant model
 23548 ;;
 23549                           
 23550                           	psect	text93
 23551  010B98                     __ptext93:
 23552                           	opt stack 0
 23553  010B98                     __motor_steps_from_degrees_int:
 23554                           	opt stack 17
 23555                           
 23556                           ;motor.c: 428: double temp;;motor.c: 431: if(degrees==0)
 23557                           
 23558                           ;incstack = 0
 23559  010B98  0100               	movlb	0	; () banked
 23560  010B9A  5191               	movf	__motor_steps_from_degrees_int@degrees& (0+255),w,b
 23561  010B9C  1192               	iorwf	(__motor_steps_from_degrees_int@degrees+1)& (0+255),w,b
 23562  010B9E  A4D8               	btfss	status,2,c
 23563  010BA0  D009               	goto	l2509
 23564                           
 23565                           ; BSR set to: 0
 23566                           ;motor.c: 432: {;motor.c: 433: return 0;
 23567  010BA2  0E00               	movlw	0
 23568  010BA4  6F91               	movwf	?__motor_steps_from_degrees_int& (0+255),b
 23569  010BA6  0E00               	movlw	0
 23570  010BA8  6F92               	movwf	(?__motor_steps_from_degrees_int+1)& (0+255),b
 23571  010BAA  0E00               	movlw	0
 23572  010BAC  6F93               	movwf	(?__motor_steps_from_degrees_int+2)& (0+255),b
 23573  010BAE  0E00               	movlw	0
 23574  010BB0  6F94               	movwf	(?__motor_steps_from_degrees_int+3)& (0+255),b
 23575                           
 23576                           ; BSR set to: 0
 23577  010BB2  0012               	return	
 23578  010BB4                     l2509:
 23579                           
 23580                           ; BSR set to: 0
 23581                           ;motor.c: 434: };motor.c: 437: temp = (float) degrees;
 23582                           
 23583                           ; BSR set to: 0
 23584  010BB4  C091  F06A         	movff	__motor_steps_from_degrees_int@degrees,___xxtofl@val
 23585  010BB8  C092  F06B         	movff	__motor_steps_from_degrees_int@degrees+1,___xxtofl@val+1
 23586  010BBC  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 23587  010BBE  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 23588  010BC0  0E00               	movlw	0
 23589  010BC2  EC5A  F080         	call	___xxtofl
 23590  010BC6  C06A  F095         	movff	?___xxtofl,__motor_steps_from_degrees_int@temp
 23591  010BCA  C06B  F096         	movff	?___xxtofl+1,__motor_steps_from_degrees_int@temp+1
 23592  010BCE  C06C  F097         	movff	?___xxtofl+2,__motor_steps_from_degrees_int@temp+2
 23593  010BD2  C06D  F098         	movff	?___xxtofl+3,__motor_steps_from_degrees_int@temp+3
 23594                           
 23595                           ;motor.c: 440: temp *= config.full_circle_in_steps;
 23596  010BD6  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___flmul@b
 23597  010BDA  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___flmul@b+1
 23598  010BDE  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___flmul@b+2
 23599  010BE2  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___flmul@b+3
 23600  010BE6  C196  F06A         	movff	_config,___xxtofl@val
 23601  010BEA  C197  F06B         	movff	_config+1,___xxtofl@val+1
 23602  010BEE  C198  F06C         	movff	_config+2,___xxtofl@val+2
 23603  010BF2  C199  F06D         	movff	_config+3,___xxtofl@val+3
 23604  010BF6  0E00               	movlw	0
 23605  010BF8  EC5A  F080         	call	___xxtofl
 23606  010BFC  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23607  010C00  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23608  010C04  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23609  010C08  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23610  010C0C  EC78  F064         	call	___flmul	;wreg free
 23611  010C10  C078  F095         	movff	?___flmul,__motor_steps_from_degrees_int@temp
 23612  010C14  C079  F096         	movff	?___flmul+1,__motor_steps_from_degrees_int@temp+1
 23613  010C18  C07A  F097         	movff	?___flmul+2,__motor_steps_from_degrees_int@temp+2
 23614  010C1C  C07B  F098         	movff	?___flmul+3,__motor_steps_from_degrees_int@temp+3
 23615                           
 23616                           ;motor.c: 441: temp /= 36000.0;
 23617  010C20  C095  F078         	movff	__motor_steps_from_degrees_int@temp,___fldiv@b
 23618  010C24  C096  F079         	movff	__motor_steps_from_degrees_int@temp+1,___fldiv@b+1
 23619  010C28  C097  F07A         	movff	__motor_steps_from_degrees_int@temp+2,___fldiv@b+2
 23620  010C2C  C098  F07B         	movff	__motor_steps_from_degrees_int@temp+3,___fldiv@b+3
 23621  010C30  0E00               	movlw	0
 23622  010C32  0100               	movlb	0	; () banked
 23623  010C34  6F7C               	movwf	___fldiv@a& (0+255),b
 23624  010C36  0EA0               	movlw	160
 23625  010C38  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 23626  010C3A  0E0C               	movlw	12
 23627  010C3C  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 23628  010C3E  0E47               	movlw	71
 23629  010C40  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 23630  010C42  ECA0  F06A         	call	___fldiv	;wreg free
 23631  010C46  C078  F095         	movff	?___fldiv,__motor_steps_from_degrees_int@temp
 23632  010C4A  C079  F096         	movff	?___fldiv+1,__motor_steps_from_degrees_int@temp+1
 23633  010C4E  C07A  F097         	movff	?___fldiv+2,__motor_steps_from_degrees_int@temp+2
 23634  010C52  C07B  F098         	movff	?___fldiv+3,__motor_steps_from_degrees_int@temp+3
 23635                           
 23636                           ;motor.c: 442: temp += 0.5;
 23637  010C56  C095  F07C         	movff	__motor_steps_from_degrees_int@temp,___fladd@b
 23638  010C5A  C096  F07D         	movff	__motor_steps_from_degrees_int@temp+1,___fladd@b+1
 23639  010C5E  C097  F07E         	movff	__motor_steps_from_degrees_int@temp+2,___fladd@b+2
 23640  010C62  C098  F07F         	movff	__motor_steps_from_degrees_int@temp+3,___fladd@b+3
 23641  010C66  0E00               	movlw	0
 23642  010C68  0100               	movlb	0	; () banked
 23643  010C6A  6F80               	movwf	___fladd@a& (0+255),b
 23644  010C6C  0E00               	movlw	0
 23645  010C6E  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23646  010C70  0E00               	movlw	0
 23647  010C72  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23648  010C74  0E3F               	movlw	63
 23649  010C76  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23650  010C78  EC21  F066         	call	___fladd	;wreg free
 23651  010C7C  C07C  F095         	movff	?___fladd,__motor_steps_from_degrees_int@temp
 23652  010C80  C07D  F096         	movff	?___fladd+1,__motor_steps_from_degrees_int@temp+1
 23653  010C84  C07E  F097         	movff	?___fladd+2,__motor_steps_from_degrees_int@temp+2
 23654  010C88  C07F  F098         	movff	?___fladd+3,__motor_steps_from_degrees_int@temp+3
 23655                           
 23656                           ;motor.c: 445: return (uint32_t) temp;
 23657  010C8C  C095  F060         	movff	__motor_steps_from_degrees_int@temp,___fltol@f1
 23658  010C90  C096  F061         	movff	__motor_steps_from_degrees_int@temp+1,___fltol@f1+1
 23659  010C94  C097  F062         	movff	__motor_steps_from_degrees_int@temp+2,___fltol@f1+2
 23660  010C98  C098  F063         	movff	__motor_steps_from_degrees_int@temp+3,___fltol@f1+3
 23661  010C9C  EC97  F091         	call	___fltol	;wreg free
 23662  010CA0  C060  F091         	movff	?___fltol,?__motor_steps_from_degrees_int
 23663  010CA4  C061  F092         	movff	?___fltol+1,?__motor_steps_from_degrees_int+1
 23664  010CA8  C062  F093         	movff	?___fltol+2,?__motor_steps_from_degrees_int+2
 23665  010CAC  C063  F094         	movff	?___fltol+3,?__motor_steps_from_degrees_int+3
 23666  010CB0  0012               	return	
 23667  010CB2                     __end_of__motor_steps_from_degrees_int:
 23668                           	opt stack 0
 23669                           tblptru	equ	0xFF8
 23670                           tblptrh	equ	0xFF7
 23671                           tblptrl	equ	0xFF6
 23672                           tablat	equ	0xFF5
 23673                           prodh	equ	0xFF4
 23674                           prodl	equ	0xFF3
 23675                           intcon	equ	0xFF2
 23676                           postinc0	equ	0xFEE
 23677                           wreg	equ	0xFE8
 23678                           indf1	equ	0xFE7
 23679                           postinc1	equ	0xFE6
 23680                           postdec1	equ	0xFE5
 23681                           plusw1	equ	0xFE3
 23682                           fsr1h	equ	0xFE2
 23683                           fsr1l	equ	0xFE1
 23684                           indf2	equ	0xFDF
 23685                           postinc2	equ	0xFDE
 23686                           postdec2	equ	0xFDD
 23687                           plusw2	equ	0xFDB
 23688                           fsr2h	equ	0xFDA
 23689                           fsr2l	equ	0xFD9
 23690                           status	equ	0xFD8
 23691                           
 23692 ;; *************** function _motor_increase_manual_speed *****************
 23693 ;; Defined at:
 23694 ;;		line 866 in file "motor.c"
 23695 ;; Parameters:    Size  Location     Type
 23696 ;;		None
 23697 ;; Auto vars:     Size  Location     Type
 23698 ;;		None
 23699 ;; Return value:  Size  Location     Type
 23700 ;;                  1    wreg      void 
 23701 ;; Registers used:
 23702 ;;		wreg, status,2, status,0, cstack
 23703 ;; Tracked objects:
 23704 ;;		On entry : 0/0
 23705 ;;		On exit  : 0/0
 23706 ;;		Unchanged: 0/0
 23707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23712 ;;Total ram usage:        0 bytes
 23713 ;; Hardware stack levels used:    1
 23714 ;; Hardware stack levels required when called:   12
 23715 ;; This function calls:
 23716 ;;		_motor_set_manual_speed
 23717 ;; This function is called by:
 23718 ;;		_encoder_statemachine
 23719 ;; This function uses a non-reentrant model
 23720 ;;
 23721                           
 23722                           	psect	text94
 23723  015C36                     __ptext94:
 23724                           	opt stack 0
 23725  015C36                     _motor_increase_manual_speed:
 23726                           	opt stack 17
 23727                           
 23728                           ;motor.c: 869: {;motor.c: 870: motor_set_manual_speed(os.manual_speed+1);
 23729                           
 23730                           ;incstack = 0
 23731  015C36  0E01               	movlw	1
 23732  015C38  0101               	movlb	1	; () banked
 23733  015C3A  2589               	addwf	(_os+37)& (0+255),w,b	;volatile
 23734  015C3C  0100               	movlb	0	; () banked
 23735  015C3E  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 23736  015C40  0E00               	movlw	0
 23737  015C42  0101               	movlb	1	; () banked
 23738  015C44  218A               	addwfc	(_os+38)& (0+255),w,b	;volatile
 23739  015C46  0100               	movlb	0	; () banked
 23740  015C48  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 23741  015C4A  EC5B  F0A8         	call	_motor_set_manual_speed	;wreg free
 23742  015C4E  0012               	return	
 23743  015C50                     __end_of_motor_increase_manual_speed:
 23744                           	opt stack 0
 23745                           tblptru	equ	0xFF8
 23746                           tblptrh	equ	0xFF7
 23747                           tblptrl	equ	0xFF6
 23748                           tablat	equ	0xFF5
 23749                           prodh	equ	0xFF4
 23750                           prodl	equ	0xFF3
 23751                           intcon	equ	0xFF2
 23752                           postinc0	equ	0xFEE
 23753                           wreg	equ	0xFE8
 23754                           indf1	equ	0xFE7
 23755                           postinc1	equ	0xFE6
 23756                           postdec1	equ	0xFE5
 23757                           plusw1	equ	0xFE3
 23758                           fsr1h	equ	0xFE2
 23759                           fsr1l	equ	0xFE1
 23760                           indf2	equ	0xFDF
 23761                           postinc2	equ	0xFDE
 23762                           postdec2	equ	0xFDD
 23763                           plusw2	equ	0xFDB
 23764                           fsr2h	equ	0xFDA
 23765                           fsr2l	equ	0xFD9
 23766                           status	equ	0xFD8
 23767                           
 23768 ;; *************** function _motor_divide_jump_to_nearest *****************
 23769 ;; Defined at:
 23770 ;;		line 935 in file "motor.c"
 23771 ;; Parameters:    Size  Location     Type
 23772 ;;		None
 23773 ;; Auto vars:     Size  Location     Type
 23774 ;;  divide_posit    4   68[BANK0 ] float 
 23775 ;;  nearest_posi    4   62[BANK0 ] unsigned long 
 23776 ;;  nearest_divi    2   66[BANK0 ] int 
 23777 ;; Return value:  Size  Location     Type
 23778 ;;                  1    wreg      void 
 23779 ;; Registers used:
 23780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23781 ;; Tracked objects:
 23782 ;;		On entry : 0/0
 23783 ;;		On exit  : 0/0
 23784 ;;		Unchanged: 0/0
 23785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23787 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23789 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23790 ;;Total ram usage:       10 bytes
 23791 ;; Hardware stack levels used:    1
 23792 ;; Hardware stack levels required when called:   14
 23793 ;; This function calls:
 23794 ;;		___fladd
 23795 ;;		___fldiv
 23796 ;;		___flmul
 23797 ;;		___fltol
 23798 ;;		___xxtofl
 23799 ;;		__step_position_from_divide_position
 23800 ;;		_motor_goto_steps
 23801 ;; This function is called by:
 23802 ;;		_encoder_statemachine
 23803 ;; This function uses a non-reentrant model
 23804 ;;
 23805                           
 23806                           	psect	text95
 23807  00F780                     __ptext95:
 23808                           	opt stack 0
 23809  00F780                     _motor_divide_jump_to_nearest:
 23810                           	opt stack 15
 23811                           
 23812                           ;motor.c: 937: float divide_position_float;;motor.c: 938: int16_t nearest_divide_positio
      +                          n;;motor.c: 939: uint32_t nearest_position_in_steps;;motor.c: 941: divide_position_float
      +                           = (float) os.current_position_in_steps;
 23813                           
 23814                           ;incstack = 0
 23815  00F780  C16B  F06A         	movff	_os+7,___xxtofl@val	;volatile
 23816  00F784  C16C  F06B         	movff	_os+8,___xxtofl@val+1	;volatile
 23817  00F788  C16D  F06C         	movff	_os+9,___xxtofl@val+2	;volatile
 23818  00F78C  C16E  F06D         	movff	_os+10,___xxtofl@val+3	;volatile
 23819  00F790  0E00               	movlw	0
 23820  00F792  EC5A  F080         	call	___xxtofl
 23821  00F796  C06A  F0A4         	movff	?___xxtofl,motor_divide_jump_to_nearest@divide_position_float
 23822  00F79A  C06B  F0A5         	movff	?___xxtofl+1,motor_divide_jump_to_nearest@divide_position_float+1
 23823  00F79E  C06C  F0A6         	movff	?___xxtofl+2,motor_divide_jump_to_nearest@divide_position_float+2
 23824  00F7A2  C06D  F0A7         	movff	?___xxtofl+3,motor_divide_jump_to_nearest@divide_position_float+3
 23825                           
 23826                           ;motor.c: 942: divide_position_float *= (float) os.division;
 23827  00F7A6  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___flmul@b
 23828  00F7AA  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___flmul@b+1
 23829  00F7AE  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___flmul@b+2
 23830  00F7B2  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___flmul@b+3
 23831  00F7B6  EE21  F079         	lfsr	2,_os+21	;volatile
 23832  00F7BA  CFDE F06A          	movff	postinc2,___xxtofl@val
 23833  00F7BE  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 23834  00F7C2  0100               	movlb	0	; () banked
 23835  00F7C4  0E00               	movlw	0
 23836  00F7C6  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 23837  00F7C8  0EFF               	movlw	-1
 23838  00F7CA  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 23839  00F7CC  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 23840  00F7CE  0E01               	movlw	1
 23841  00F7D0  EC5A  F080         	call	___xxtofl
 23842  00F7D4  C06A  F07C         	movff	?___xxtofl,___flmul@a
 23843  00F7D8  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 23844  00F7DC  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 23845  00F7E0  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 23846  00F7E4  EC78  F064         	call	___flmul	;wreg free
 23847  00F7E8  C078  F0A4         	movff	?___flmul,motor_divide_jump_to_nearest@divide_position_float
 23848  00F7EC  C079  F0A5         	movff	?___flmul+1,motor_divide_jump_to_nearest@divide_position_float+1
 23849  00F7F0  C07A  F0A6         	movff	?___flmul+2,motor_divide_jump_to_nearest@divide_position_float+2
 23850  00F7F4  C07B  F0A7         	movff	?___flmul+3,motor_divide_jump_to_nearest@divide_position_float+3
 23851                           
 23852                           ;motor.c: 943: divide_position_float /= (float) config.full_circle_in_steps;
 23853  00F7F8  C0A4  F078         	movff	motor_divide_jump_to_nearest@divide_position_float,___fldiv@b
 23854  00F7FC  C0A5  F079         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fldiv@b+1
 23855  00F800  C0A6  F07A         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fldiv@b+2
 23856  00F804  C0A7  F07B         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fldiv@b+3
 23857  00F808  C196  F06A         	movff	_config,___xxtofl@val
 23858  00F80C  C197  F06B         	movff	_config+1,___xxtofl@val+1
 23859  00F810  C198  F06C         	movff	_config+2,___xxtofl@val+2
 23860  00F814  C199  F06D         	movff	_config+3,___xxtofl@val+3
 23861  00F818  0E00               	movlw	0
 23862  00F81A  EC5A  F080         	call	___xxtofl
 23863  00F81E  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 23864  00F822  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 23865  00F826  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 23866  00F82A  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 23867  00F82E  ECA0  F06A         	call	___fldiv	;wreg free
 23868  00F832  C078  F0A4         	movff	?___fldiv,motor_divide_jump_to_nearest@divide_position_float
 23869  00F836  C079  F0A5         	movff	?___fldiv+1,motor_divide_jump_to_nearest@divide_position_float+1
 23870  00F83A  C07A  F0A6         	movff	?___fldiv+2,motor_divide_jump_to_nearest@divide_position_float+2
 23871  00F83E  C07B  F0A7         	movff	?___fldiv+3,motor_divide_jump_to_nearest@divide_position_float+3
 23872                           
 23873                           ;motor.c: 944: divide_position_float += 0.5;
 23874  00F842  C0A4  F07C         	movff	motor_divide_jump_to_nearest@divide_position_float,___fladd@b
 23875  00F846  C0A5  F07D         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fladd@b+1
 23876  00F84A  C0A6  F07E         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fladd@b+2
 23877  00F84E  C0A7  F07F         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fladd@b+3
 23878  00F852  0E00               	movlw	0
 23879  00F854  0100               	movlb	0	; () banked
 23880  00F856  6F80               	movwf	___fladd@a& (0+255),b
 23881  00F858  0E00               	movlw	0
 23882  00F85A  6F81               	movwf	(___fladd@a+1)& (0+255),b
 23883  00F85C  0E00               	movlw	0
 23884  00F85E  6F82               	movwf	(___fladd@a+2)& (0+255),b
 23885  00F860  0E3F               	movlw	63
 23886  00F862  6F83               	movwf	(___fladd@a+3)& (0+255),b
 23887  00F864  EC21  F066         	call	___fladd	;wreg free
 23888  00F868  C07C  F0A4         	movff	?___fladd,motor_divide_jump_to_nearest@divide_position_float
 23889  00F86C  C07D  F0A5         	movff	?___fladd+1,motor_divide_jump_to_nearest@divide_position_float+1
 23890  00F870  C07E  F0A6         	movff	?___fladd+2,motor_divide_jump_to_nearest@divide_position_float+2
 23891  00F874  C07F  F0A7         	movff	?___fladd+3,motor_divide_jump_to_nearest@divide_position_float+3
 23892                           
 23893                           ;motor.c: 945: nearest_divide_position = (int16_t) divide_position_float;
 23894  00F878  C0A4  F060         	movff	motor_divide_jump_to_nearest@divide_position_float,___fltol@f1
 23895  00F87C  C0A5  F061         	movff	motor_divide_jump_to_nearest@divide_position_float+1,___fltol@f1+1
 23896  00F880  C0A6  F062         	movff	motor_divide_jump_to_nearest@divide_position_float+2,___fltol@f1+2
 23897  00F884  C0A7  F063         	movff	motor_divide_jump_to_nearest@divide_position_float+3,___fltol@f1+3
 23898  00F888  EC97  F091         	call	___fltol	;wreg free
 23899  00F88C  C060  F0A2         	movff	?___fltol,motor_divide_jump_to_nearest@nearest_divide_position
 23900  00F890  C061  F0A3         	movff	?___fltol+1,motor_divide_jump_to_nearest@nearest_divide_position+1
 23901                           
 23902                           ;motor.c: 948: nearest_position_in_steps = _step_position_from_divide_position(nearest_d
      +                          ivide_position);
 23903  00F894  C0A2  F091         	movff	motor_divide_jump_to_nearest@nearest_divide_position,__step_position_from_divide_
      +                          position@divide_position
 23904  00F898  C0A3  F092         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,__step_position_from_divid
      +                          e_position@divide_position+1
 23905  00F89C  EC02  F08E         	call	__step_position_from_divide_position	;wreg free
 23906  00F8A0  C091  F09E         	movff	?__step_position_from_divide_position,motor_divide_jump_to_nearest@nearest_positi
      +                          on_in_steps
 23907  00F8A4  C092  F09F         	movff	?__step_position_from_divide_position+1,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+1
 23908  00F8A8  C093  F0A0         	movff	?__step_position_from_divide_position+2,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+2
 23909  00F8AC  C094  F0A1         	movff	?__step_position_from_divide_position+3,motor_divide_jump_to_nearest@nearest_posi
      +                          tion_in_steps+3
 23910                           
 23911                           ;motor.c: 951: os.divide_position = nearest_divide_position;
 23912  00F8B0  C0A2  F17C         	movff	motor_divide_jump_to_nearest@nearest_divide_position,_os+24	;volatile
 23913  00F8B4  C0A3  F17D         	movff	motor_divide_jump_to_nearest@nearest_divide_position+1,_os+25	;volatile
 23914                           
 23915                           ;motor.c: 952: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, nearest_position_in_steps, 0xF
      +                          FFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 23916  00F8B8  C09E  F092         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps,motor_goto_steps@position
 23917  00F8BC  C09F  F093         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+1,motor_goto_steps@positio
      +                          n+1
 23918  00F8C0  C0A0  F094         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+2,motor_goto_steps@positio
      +                          n+2
 23919  00F8C4  C0A1  F095         	movff	motor_divide_jump_to_nearest@nearest_position_in_steps+3,motor_goto_steps@positio
      +                          n+3
 23920  00F8C8  0EFF               	movlw	255
 23921  00F8CA  0100               	movlb	0	; () banked
 23922  00F8CC  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 23923  00F8CE  6996               	setf	motor_goto_steps@speed& (0+255),b
 23924  00F8D0  0E00               	movlw	0
 23925  00F8D2  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 23926  00F8D4  0E00               	movlw	0
 23927  00F8D6  EC4E  F09B         	call	_motor_goto_steps
 23928  00F8DA  0012               	return		;funcret
 23929  00F8DC                     __end_of_motor_divide_jump_to_nearest:
 23930                           	opt stack 0
 23931                           tblptru	equ	0xFF8
 23932                           tblptrh	equ	0xFF7
 23933                           tblptrl	equ	0xFF6
 23934                           tablat	equ	0xFF5
 23935                           prodh	equ	0xFF4
 23936                           prodl	equ	0xFF3
 23937                           intcon	equ	0xFF2
 23938                           postinc0	equ	0xFEE
 23939                           wreg	equ	0xFE8
 23940                           indf1	equ	0xFE7
 23941                           postinc1	equ	0xFE6
 23942                           postdec1	equ	0xFE5
 23943                           plusw1	equ	0xFE3
 23944                           fsr1h	equ	0xFE2
 23945                           fsr1l	equ	0xFE1
 23946                           indf2	equ	0xFDF
 23947                           postinc2	equ	0xFDE
 23948                           postdec2	equ	0xFDD
 23949                           plusw2	equ	0xFDB
 23950                           fsr2h	equ	0xFDA
 23951                           fsr2l	equ	0xFD9
 23952                           status	equ	0xFD8
 23953                           
 23954 ;; *************** function _motor_divide_jump *****************
 23955 ;; Defined at:
 23956 ;;		line 904 in file "motor.c"
 23957 ;; Parameters:    Size  Location     Type
 23958 ;;		None
 23959 ;; Auto vars:     Size  Location     Type
 23960 ;;  target_posit    4   63[BANK0 ] unsigned long 
 23961 ;;  target_divid    2   67[BANK0 ] int 
 23962 ;; Return value:  Size  Location     Type
 23963 ;;                  1    wreg      void 
 23964 ;; Registers used:
 23965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 23966 ;; Tracked objects:
 23967 ;;		On entry : 0/0
 23968 ;;		On exit  : 0/0
 23969 ;;		Unchanged: 0/0
 23970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23972 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23973 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23974 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23975 ;;Total ram usage:        7 bytes
 23976 ;; Hardware stack levels used:    1
 23977 ;; Hardware stack levels required when called:   14
 23978 ;; This function calls:
 23979 ;;		__step_position_from_divide_position
 23980 ;;		_motor_goto_steps
 23981 ;; This function is called by:
 23982 ;;		_encoder_statemachine
 23983 ;; This function uses a non-reentrant model
 23984 ;;
 23985                           
 23986                           	psect	text96
 23987  012E8E                     __ptext96:
 23988                           	opt stack 0
 23989  012E8E                     _motor_divide_jump:
 23990                           	opt stack 15
 23991                           
 23992                           ;motor.c: 906: int16_t target_divide_position;;motor.c: 907: uint32_t target_position_in
      +                          _steps;;motor.c: 910: if(os.divide_jump_size>0)
 23993                           
 23994                           ;incstack = 0
 23995  012E8E  0101               	movlb	1	; () banked
 23996  012E90  BF7F               	btfsc	(_os+27)& (0+255),7,b	;volatile
 23997  012E92  D023               	goto	l2616
 23998  012E94  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 23999  012E96  E103               	bnz	u17130
 24000  012E98  057E               	decf	(_os+26)& (0+255),w,b	;volatile
 24001  012E9A  A0D8               	btfss	status,0,c
 24002  012E9C  D01E               	goto	l2616
 24003  012E9E                     u17130:
 24004                           
 24005                           ; BSR set to: 1
 24006                           ;motor.c: 911: {;motor.c: 912: target_divide_position = os.divide_position + os.divide_j
      +                          ump_size;
 24007  012E9E  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24008  012EA0  257C               	addwf	(_os+24)& (0+255),w,b	;volatile
 24009  012EA2  0100               	movlb	0	; () banked
 24010  012EA4  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24011  012EA6  0101               	movlb	1	; () banked
 24012  012EA8  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 24013  012EAA  217D               	addwfc	(_os+25)& (0+255),w,b	;volatile
 24014  012EAC  0100               	movlb	0	; () banked
 24015  012EAE  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24016                           
 24017                           ;motor.c: 913: if(target_divide_position>=os.division)
 24018  012EB0  0101               	movlb	1	; () banked
 24019  012EB2  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 24020  012EB4  0100               	movlb	0	; () banked
 24021  012EB6  5DA3               	subwf	motor_divide_jump@target_divide_position& (0+255),w,b
 24022  012EB8  51A4               	movf	(motor_divide_jump@target_divide_position+1)& (0+255),w,b
 24023  012EBA  0A80               	xorlw	128
 24024  012EBC  6F9E               	movwf	??_motor_divide_jump& (0+255),b
 24025  012EBE  0101               	movlb	1	; () banked
 24026  012EC0  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 24027  012EC2  0A80               	xorlw	128
 24028  012EC4  0100               	movlb	0	; () banked
 24029  012EC6  599E               	subwfb	??_motor_divide_jump& (0+255),w,b
 24030  012EC8  A0D8               	btfss	status,0,c
 24031  012ECA  D019               	goto	l2619
 24032                           
 24033                           ; BSR set to: 0
 24034                           ;motor.c: 914: {;motor.c: 915: target_divide_position -= os.division;
 24035  012ECC  EE21  F079         	lfsr	2,_os+21	;volatile
 24036  012ED0  50DE               	movf	postinc2,w,c
 24037  012ED2  5FA3               	subwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24038  012ED4  50DD               	movf	postdec2,w,c
 24039  012ED6  5BA4               	subwfb	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24040                           
 24041                           ; BSR set to: 0
 24042                           ;motor.c: 916: };motor.c: 917: }
 24043  012ED8  D012               	goto	l2619
 24044  012EDA                     l2616:
 24045                           
 24046                           ;motor.c: 918: else;motor.c: 919: {;motor.c: 920: target_divide_position = os.divide_pos
      +                          ition + os.divide_jump_size;
 24047                           
 24048                           ; BSR set to: 0
 24049  012EDA  0101               	movlb	1	; () banked
 24050  012EDC  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 24051  012EDE  257C               	addwf	(_os+24)& (0+255),w,b	;volatile
 24052  012EE0  0100               	movlb	0	; () banked
 24053  012EE2  6FA3               	movwf	motor_divide_jump@target_divide_position& (0+255),b
 24054  012EE4  0101               	movlb	1	; () banked
 24055  012EE6  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 24056  012EE8  217D               	addwfc	(_os+25)& (0+255),w,b	;volatile
 24057  012EEA  0100               	movlb	0	; () banked
 24058  012EEC  6FA4               	movwf	(motor_divide_jump@target_divide_position+1)& (0+255),b
 24059                           
 24060                           ;motor.c: 921: if(target_divide_position<0)
 24061  012EEE  AFA4               	btfss	(motor_divide_jump@target_divide_position+1)& (0+255),7,b
 24062  012EF0  D006               	goto	l2619
 24063                           
 24064                           ; BSR set to: 0
 24065                           ;motor.c: 922: {;motor.c: 923: target_divide_position += os.division;
 24066  012EF2  EE21  F079         	lfsr	2,_os+21	;volatile
 24067  012EF6  50DE               	movf	postinc2,w,c
 24068  012EF8  27A3               	addwf	motor_divide_jump@target_divide_position& (0+255),f,b
 24069  012EFA  50DD               	movf	postdec2,w,c
 24070  012EFC  23A4               	addwfc	(motor_divide_jump@target_divide_position+1)& (0+255),f,b
 24071  012EFE                     l2619:
 24072                           
 24073                           ; BSR set to: 0
 24074                           ;motor.c: 924: };motor.c: 925: };motor.c: 928: target_position_in_steps = _step_position
      +                          _from_divide_position(target_divide_position);
 24075                           
 24076                           ; BSR set to: 0
 24077                           
 24078                           ; BSR set to: 0
 24079  012EFE  C0A3  F091         	movff	motor_divide_jump@target_divide_position,__step_position_from_divide_position@div
      +                          ide_position
 24080  012F02  C0A4  F092         	movff	motor_divide_jump@target_divide_position+1,__step_position_from_divide_position@d
      +                          ivide_position+1
 24081  012F06  EC02  F08E         	call	__step_position_from_divide_position	;wreg free
 24082  012F0A  C091  F09F         	movff	?__step_position_from_divide_position,motor_divide_jump@target_position_in_steps
 24083  012F0E  C092  F0A0         	movff	?__step_position_from_divide_position+1,motor_divide_jump@target_position_in_step
      +                          s+1
 24084  012F12  C093  F0A1         	movff	?__step_position_from_divide_position+2,motor_divide_jump@target_position_in_step
      +                          s+2
 24085  012F16  C094  F0A2         	movff	?__step_position_from_divide_position+3,motor_divide_jump@target_position_in_step
      +                          s+3
 24086                           
 24087                           ;motor.c: 931: os.divide_position = target_divide_position;
 24088  012F1A  C0A3  F17C         	movff	motor_divide_jump@target_divide_position,_os+24	;volatile
 24089  012F1E  C0A4  F17D         	movff	motor_divide_jump@target_divide_position+1,_os+25	;volatile
 24090                           
 24091                           ;motor.c: 932: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, target_position_in_steps, 0xFF
      +                          FF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 24092  012F22  C09F  F092         	movff	motor_divide_jump@target_position_in_steps,motor_goto_steps@position
 24093  012F26  C0A0  F093         	movff	motor_divide_jump@target_position_in_steps+1,motor_goto_steps@position+1
 24094  012F2A  C0A1  F094         	movff	motor_divide_jump@target_position_in_steps+2,motor_goto_steps@position+2
 24095  012F2E  C0A2  F095         	movff	motor_divide_jump@target_position_in_steps+3,motor_goto_steps@position+3
 24096  012F32  0EFF               	movlw	255
 24097  012F34  0100               	movlb	0	; () banked
 24098  012F36  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 24099  012F38  6996               	setf	motor_goto_steps@speed& (0+255),b
 24100  012F3A  0E00               	movlw	0
 24101  012F3C  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 24102  012F3E  0E00               	movlw	0
 24103  012F40  EC4E  F09B         	call	_motor_goto_steps
 24104  012F44  0012               	return		;funcret
 24105  012F46                     __end_of_motor_divide_jump:
 24106                           	opt stack 0
 24107                           tblptru	equ	0xFF8
 24108                           tblptrh	equ	0xFF7
 24109                           tblptrl	equ	0xFF6
 24110                           tablat	equ	0xFF5
 24111                           prodh	equ	0xFF4
 24112                           prodl	equ	0xFF3
 24113                           intcon	equ	0xFF2
 24114                           postinc0	equ	0xFEE
 24115                           wreg	equ	0xFE8
 24116                           indf1	equ	0xFE7
 24117                           postinc1	equ	0xFE6
 24118                           postdec1	equ	0xFE5
 24119                           plusw1	equ	0xFE3
 24120                           fsr1h	equ	0xFE2
 24121                           fsr1l	equ	0xFE1
 24122                           indf2	equ	0xFDF
 24123                           postinc2	equ	0xFDE
 24124                           postdec2	equ	0xFDD
 24125                           plusw2	equ	0xFDB
 24126                           fsr2h	equ	0xFDA
 24127                           fsr2l	equ	0xFD9
 24128                           status	equ	0xFD8
 24129                           
 24130 ;; *************** function __step_position_from_divide_position *****************
 24131 ;; Defined at:
 24132 ;;		line 581 in file "motor.c"
 24133 ;; Parameters:    Size  Location     Type
 24134 ;;  divide_posit    2   49[BANK0 ] int 
 24135 ;; Auto vars:     Size  Location     Type
 24136 ;;  target_posit    4   53[BANK0 ] float 
 24137 ;; Return value:  Size  Location     Type
 24138 ;;                  4   49[BANK0 ] unsigned long 
 24139 ;; Registers used:
 24140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24141 ;; Tracked objects:
 24142 ;;		On entry : 0/0
 24143 ;;		On exit  : 0/0
 24144 ;;		Unchanged: 0/0
 24145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24146 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24147 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24149 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24150 ;;Total ram usage:        8 bytes
 24151 ;; Hardware stack levels used:    1
 24152 ;; Hardware stack levels required when called:   11
 24153 ;; This function calls:
 24154 ;;		___fldiv
 24155 ;;		___flmul
 24156 ;;		___fltol
 24157 ;;		___xxtofl
 24158 ;; This function is called by:
 24159 ;;		_motor_divide_jump
 24160 ;;		_motor_divide_jump_to_nearest
 24161 ;; This function uses a non-reentrant model
 24162 ;;
 24163                           
 24164                           	psect	text97
 24165  011C04                     __ptext97:
 24166                           	opt stack 0
 24167  011C04                     __step_position_from_divide_position:
 24168                           	opt stack 17
 24169                           
 24170                           ;motor.c: 583: float target_position;;motor.c: 586: target_position = (float) config.ful
      +                          l_circle_in_steps;
 24171                           
 24172                           ;incstack = 0
 24173  011C04  C196  F06A         	movff	_config,___xxtofl@val
 24174  011C08  C197  F06B         	movff	_config+1,___xxtofl@val+1
 24175  011C0C  C198  F06C         	movff	_config+2,___xxtofl@val+2
 24176  011C10  C199  F06D         	movff	_config+3,___xxtofl@val+3
 24177  011C14  0E00               	movlw	0
 24178  011C16  EC5A  F080         	call	___xxtofl
 24179  011C1A  C06A  F095         	movff	?___xxtofl,__step_position_from_divide_position@target_position
 24180  011C1E  C06B  F096         	movff	?___xxtofl+1,__step_position_from_divide_position@target_position+1
 24181  011C22  C06C  F097         	movff	?___xxtofl+2,__step_position_from_divide_position@target_position+2
 24182  011C26  C06D  F098         	movff	?___xxtofl+3,__step_position_from_divide_position@target_position+3
 24183                           
 24184                           ;motor.c: 587: target_position *= (float) divide_position;
 24185  011C2A  C095  F078         	movff	__step_position_from_divide_position@target_position,___flmul@b
 24186  011C2E  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___flmul@b+1
 24187  011C32  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___flmul@b+2
 24188  011C36  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___flmul@b+3
 24189  011C3A  C091  F06A         	movff	__step_position_from_divide_position@divide_position,___xxtofl@val
 24190  011C3E  C092  F06B         	movff	__step_position_from_divide_position@divide_position+1,___xxtofl@val+1
 24191  011C42  0100               	movlb	0	; () banked
 24192  011C44  0E00               	movlw	0
 24193  011C46  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24194  011C48  0EFF               	movlw	-1
 24195  011C4A  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24196  011C4C  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24197  011C4E  0E01               	movlw	1
 24198  011C50  EC5A  F080         	call	___xxtofl
 24199  011C54  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24200  011C58  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24201  011C5C  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24202  011C60  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24203  011C64  EC78  F064         	call	___flmul	;wreg free
 24204  011C68  C078  F095         	movff	?___flmul,__step_position_from_divide_position@target_position
 24205  011C6C  C079  F096         	movff	?___flmul+1,__step_position_from_divide_position@target_position+1
 24206  011C70  C07A  F097         	movff	?___flmul+2,__step_position_from_divide_position@target_position+2
 24207  011C74  C07B  F098         	movff	?___flmul+3,__step_position_from_divide_position@target_position+3
 24208                           
 24209                           ;motor.c: 588: target_position /= (float) os.division;
 24210  011C78  C095  F078         	movff	__step_position_from_divide_position@target_position,___fldiv@b
 24211  011C7C  C096  F079         	movff	__step_position_from_divide_position@target_position+1,___fldiv@b+1
 24212  011C80  C097  F07A         	movff	__step_position_from_divide_position@target_position+2,___fldiv@b+2
 24213  011C84  C098  F07B         	movff	__step_position_from_divide_position@target_position+3,___fldiv@b+3
 24214  011C88  EE21  F079         	lfsr	2,_os+21	;volatile
 24215  011C8C  CFDE F06A          	movff	postinc2,___xxtofl@val
 24216  011C90  CFDD F06B          	movff	postdec2,___xxtofl@val+1
 24217  011C94  0100               	movlb	0	; () banked
 24218  011C96  0E00               	movlw	0
 24219  011C98  BF6B               	btfsc	(___xxtofl@val+1)& (0+255),7,b
 24220  011C9A  0EFF               	movlw	-1
 24221  011C9C  6F6C               	movwf	(___xxtofl@val+2)& (0+255),b
 24222  011C9E  6F6D               	movwf	(___xxtofl@val+3)& (0+255),b
 24223  011CA0  0E01               	movlw	1
 24224  011CA2  EC5A  F080         	call	___xxtofl
 24225  011CA6  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 24226  011CAA  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 24227  011CAE  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 24228  011CB2  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 24229  011CB6  ECA0  F06A         	call	___fldiv	;wreg free
 24230  011CBA  C078  F095         	movff	?___fldiv,__step_position_from_divide_position@target_position
 24231  011CBE  C079  F096         	movff	?___fldiv+1,__step_position_from_divide_position@target_position+1
 24232  011CC2  C07A  F097         	movff	?___fldiv+2,__step_position_from_divide_position@target_position+2
 24233  011CC6  C07B  F098         	movff	?___fldiv+3,__step_position_from_divide_position@target_position+3
 24234                           
 24235                           ;motor.c: 590: return (uint32_t) target_position;
 24236  011CCA  C095  F060         	movff	__step_position_from_divide_position@target_position,___fltol@f1
 24237  011CCE  C096  F061         	movff	__step_position_from_divide_position@target_position+1,___fltol@f1+1
 24238  011CD2  C097  F062         	movff	__step_position_from_divide_position@target_position+2,___fltol@f1+2
 24239  011CD6  C098  F063         	movff	__step_position_from_divide_position@target_position+3,___fltol@f1+3
 24240  011CDA  EC97  F091         	call	___fltol	;wreg free
 24241  011CDE  C060  F091         	movff	?___fltol,?__step_position_from_divide_position
 24242  011CE2  C061  F092         	movff	?___fltol+1,?__step_position_from_divide_position+1
 24243  011CE6  C062  F093         	movff	?___fltol+2,?__step_position_from_divide_position+2
 24244  011CEA  C063  F094         	movff	?___fltol+3,?__step_position_from_divide_position+3
 24245  011CEE  0012               	return	
 24246  011CF0                     __end_of__step_position_from_divide_position:
 24247                           	opt stack 0
 24248                           tblptru	equ	0xFF8
 24249                           tblptrh	equ	0xFF7
 24250                           tblptrl	equ	0xFF6
 24251                           tablat	equ	0xFF5
 24252                           prodh	equ	0xFF4
 24253                           prodl	equ	0xFF3
 24254                           intcon	equ	0xFF2
 24255                           postinc0	equ	0xFEE
 24256                           wreg	equ	0xFE8
 24257                           indf1	equ	0xFE7
 24258                           postinc1	equ	0xFE6
 24259                           postdec1	equ	0xFE5
 24260                           plusw1	equ	0xFE3
 24261                           fsr1h	equ	0xFE2
 24262                           fsr1l	equ	0xFE1
 24263                           indf2	equ	0xFDF
 24264                           postinc2	equ	0xFDE
 24265                           postdec2	equ	0xFDD
 24266                           plusw2	equ	0xFDB
 24267                           fsr2h	equ	0xFDA
 24268                           fsr2l	equ	0xFD9
 24269                           status	equ	0xFD8
 24270                           
 24271 ;; *************** function _motor_decrease_manual_speed *****************
 24272 ;; Defined at:
 24273 ;;		line 874 in file "motor.c"
 24274 ;; Parameters:    Size  Location     Type
 24275 ;;		None
 24276 ;; Auto vars:     Size  Location     Type
 24277 ;;		None
 24278 ;; Return value:  Size  Location     Type
 24279 ;;                  1    wreg      void 
 24280 ;; Registers used:
 24281 ;;		wreg, status,2, status,0, cstack
 24282 ;; Tracked objects:
 24283 ;;		On entry : 0/0
 24284 ;;		On exit  : 0/0
 24285 ;;		Unchanged: 0/0
 24286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24287 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24288 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24290 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24291 ;;Total ram usage:        0 bytes
 24292 ;; Hardware stack levels used:    1
 24293 ;; Hardware stack levels required when called:   12
 24294 ;; This function calls:
 24295 ;;		_motor_set_manual_speed
 24296 ;; This function is called by:
 24297 ;;		_encoder_statemachine
 24298 ;; This function uses a non-reentrant model
 24299 ;;
 24300                           
 24301                           	psect	text98
 24302  015B48                     __ptext98:
 24303                           	opt stack 0
 24304  015B48                     _motor_decrease_manual_speed:
 24305                           	opt stack 17
 24306                           
 24307                           ;motor.c: 876: if(os.manual_speed>0)
 24308                           
 24309                           ;incstack = 0
 24310  015B48  0101               	movlb	1	; () banked
 24311  015B4A  5189               	movf	(_os+37)& (0+255),w,b	;volatile
 24312  015B4C  118A               	iorwf	(_os+38)& (0+255),w,b	;volatile
 24313  015B4E  B4D8               	btfsc	status,2,c
 24314  015B50  0012               	return	
 24315                           
 24316                           ; BSR set to: 1
 24317                           ;motor.c: 877: {;motor.c: 878: motor_set_manual_speed(os.manual_speed-1);
 24318  015B52  0EFF               	movlw	255
 24319  015B54  2589               	addwf	(_os+37)& (0+255),w,b	;volatile
 24320  015B56  0100               	movlb	0	; () banked
 24321  015B58  6F62               	movwf	motor_set_manual_speed@new_speed& (0+255),b
 24322  015B5A  0EFF               	movlw	255
 24323  015B5C  0101               	movlb	1	; () banked
 24324  015B5E  218A               	addwfc	(_os+38)& (0+255),w,b	;volatile
 24325  015B60  0100               	movlb	0	; () banked
 24326  015B62  6F63               	movwf	(motor_set_manual_speed@new_speed+1)& (0+255),b
 24327  015B64  EC5B  F0A8         	call	_motor_set_manual_speed	;wreg free
 24328  015B68  0012               	return	
 24329  015B6A                     __end_of_motor_decrease_manual_speed:
 24330                           	opt stack 0
 24331                           tblptru	equ	0xFF8
 24332                           tblptrh	equ	0xFF7
 24333                           tblptrl	equ	0xFF6
 24334                           tablat	equ	0xFF5
 24335                           prodh	equ	0xFF4
 24336                           prodl	equ	0xFF3
 24337                           intcon	equ	0xFF2
 24338                           postinc0	equ	0xFEE
 24339                           wreg	equ	0xFE8
 24340                           indf1	equ	0xFE7
 24341                           postinc1	equ	0xFE6
 24342                           postdec1	equ	0xFE5
 24343                           plusw1	equ	0xFE3
 24344                           fsr1h	equ	0xFE2
 24345                           fsr1l	equ	0xFE1
 24346                           indf2	equ	0xFDF
 24347                           postinc2	equ	0xFDE
 24348                           postdec2	equ	0xFDD
 24349                           plusw2	equ	0xFDB
 24350                           fsr2h	equ	0xFDA
 24351                           fsr2l	equ	0xFD9
 24352                           status	equ	0xFD8
 24353                           
 24354 ;; *************** function _motor_arc_move *****************
 24355 ;; Defined at:
 24356 ;;		line 955 in file "motor.c"
 24357 ;; Parameters:    Size  Location     Type
 24358 ;;  direction       1    wreg     enum E6622
 24359 ;; Auto vars:     Size  Location     Type
 24360 ;;  direction       1   52[BANK0 ] enum E6622
 24361 ;;  arc_in_steps    4   53[BANK0 ] float 
 24362 ;; Return value:  Size  Location     Type
 24363 ;;                  1    wreg      void 
 24364 ;; Registers used:
 24365 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24366 ;; Tracked objects:
 24367 ;;		On entry : 0/0
 24368 ;;		On exit  : 0/0
 24369 ;;		Unchanged: 0/0
 24370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24371 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24372 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24373 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24374 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24375 ;;Total ram usage:        5 bytes
 24376 ;; Hardware stack levels used:    1
 24377 ;; Hardware stack levels required when called:   14
 24378 ;; This function calls:
 24379 ;;		___fldiv
 24380 ;;		___flmul
 24381 ;;		___fltol
 24382 ;;		___xxtofl
 24383 ;;		_motor_move_steps
 24384 ;; This function is called by:
 24385 ;;		_encoder_statemachine
 24386 ;; This function uses a non-reentrant model
 24387 ;;
 24388                           
 24389                           	psect	text99
 24390  011FAA                     __ptext99:
 24391                           	opt stack 0
 24392  011FAA                     _motor_arc_move:
 24393                           	opt stack 15
 24394                           
 24395                           ;incstack = 0
 24396                           ;motor_arc_move@direction stored from wreg
 24397  011FAA  0100               	movlb	0	; () banked
 24398  011FAC  6F94               	movwf	motor_arc_move@direction& (0+255),b
 24399                           
 24400                           ;motor.c: 957: float arc_in_steps;;motor.c: 960: arc_in_steps = (float) os.arc_size;
 24401  011FAE  C182  F06A         	movff	_os+30,___xxtofl@val	;volatile
 24402  011FB2  C183  F06B         	movff	_os+31,___xxtofl@val+1	;volatile
 24403  011FB6  C184  F06C         	movff	_os+32,___xxtofl@val+2	;volatile
 24404  011FBA  C185  F06D         	movff	_os+33,___xxtofl@val+3	;volatile
 24405  011FBE  0E01               	movlw	1
 24406  011FC0  EC5A  F080         	call	___xxtofl
 24407  011FC4  C06A  F095         	movff	?___xxtofl,motor_arc_move@arc_in_steps
 24408  011FC8  C06B  F096         	movff	?___xxtofl+1,motor_arc_move@arc_in_steps+1
 24409  011FCC  C06C  F097         	movff	?___xxtofl+2,motor_arc_move@arc_in_steps+2
 24410  011FD0  C06D  F098         	movff	?___xxtofl+3,motor_arc_move@arc_in_steps+3
 24411                           
 24412                           ;motor.c: 961: arc_in_steps *= (float) config.full_circle_in_steps;
 24413  011FD4  C095  F078         	movff	motor_arc_move@arc_in_steps,___flmul@b
 24414  011FD8  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___flmul@b+1
 24415  011FDC  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___flmul@b+2
 24416  011FE0  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___flmul@b+3
 24417  011FE4  C196  F06A         	movff	_config,___xxtofl@val
 24418  011FE8  C197  F06B         	movff	_config+1,___xxtofl@val+1
 24419  011FEC  C198  F06C         	movff	_config+2,___xxtofl@val+2
 24420  011FF0  C199  F06D         	movff	_config+3,___xxtofl@val+3
 24421  011FF4  0E00               	movlw	0
 24422  011FF6  EC5A  F080         	call	___xxtofl
 24423  011FFA  C06A  F07C         	movff	?___xxtofl,___flmul@a
 24424  011FFE  C06B  F07D         	movff	?___xxtofl+1,___flmul@a+1
 24425  012002  C06C  F07E         	movff	?___xxtofl+2,___flmul@a+2
 24426  012006  C06D  F07F         	movff	?___xxtofl+3,___flmul@a+3
 24427  01200A  EC78  F064         	call	___flmul	;wreg free
 24428  01200E  C078  F095         	movff	?___flmul,motor_arc_move@arc_in_steps
 24429  012012  C079  F096         	movff	?___flmul+1,motor_arc_move@arc_in_steps+1
 24430  012016  C07A  F097         	movff	?___flmul+2,motor_arc_move@arc_in_steps+2
 24431  01201A  C07B  F098         	movff	?___flmul+3,motor_arc_move@arc_in_steps+3
 24432                           
 24433                           ;motor.c: 962: arc_in_steps /= (float) 36000.0;
 24434  01201E  C095  F078         	movff	motor_arc_move@arc_in_steps,___fldiv@b
 24435  012022  C096  F079         	movff	motor_arc_move@arc_in_steps+1,___fldiv@b+1
 24436  012026  C097  F07A         	movff	motor_arc_move@arc_in_steps+2,___fldiv@b+2
 24437  01202A  C098  F07B         	movff	motor_arc_move@arc_in_steps+3,___fldiv@b+3
 24438  01202E  0E00               	movlw	0
 24439  012030  0100               	movlb	0	; () banked
 24440  012032  6F7C               	movwf	___fldiv@a& (0+255),b
 24441  012034  0EA0               	movlw	160
 24442  012036  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 24443  012038  0E0C               	movlw	12
 24444  01203A  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 24445  01203C  0E47               	movlw	71
 24446  01203E  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 24447  012040  ECA0  F06A         	call	___fldiv	;wreg free
 24448  012044  C078  F095         	movff	?___fldiv,motor_arc_move@arc_in_steps
 24449  012048  C079  F096         	movff	?___fldiv+1,motor_arc_move@arc_in_steps+1
 24450  01204C  C07A  F097         	movff	?___fldiv+2,motor_arc_move@arc_in_steps+2
 24451  012050  C07B  F098         	movff	?___fldiv+3,motor_arc_move@arc_in_steps+3
 24452                           
 24453                           ;motor.c: 965: motor_move_steps(direction, (uint32_t) arc_in_steps, os.arc_speed, MOTOR_
      +                          OVERSHOOT_NO_OVERSHOOT);
 24454  012054  C095  F060         	movff	motor_arc_move@arc_in_steps,___fltol@f1
 24455  012058  C096  F061         	movff	motor_arc_move@arc_in_steps+1,___fltol@f1+1
 24456  01205C  C097  F062         	movff	motor_arc_move@arc_in_steps+2,___fltol@f1+2
 24457  012060  C098  F063         	movff	motor_arc_move@arc_in_steps+3,___fltol@f1+3
 24458  012064  EC97  F091         	call	___fltol	;wreg free
 24459  012068  C060  F08C         	movff	?___fltol,motor_move_steps@distance
 24460  01206C  C061  F08D         	movff	?___fltol+1,motor_move_steps@distance+1
 24461  012070  C062  F08E         	movff	?___fltol+2,motor_move_steps@distance+2
 24462  012074  C063  F08F         	movff	?___fltol+3,motor_move_steps@distance+3
 24463  012078  C186  F090         	movff	_os+34,motor_move_steps@speed	;volatile
 24464  01207C  C187  F091         	movff	_os+35,motor_move_steps@speed+1	;volatile
 24465  012080  0E01               	movlw	1
 24466  012082  0100               	movlb	0	; () banked
 24467  012084  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 24468  012086  5194               	movf	motor_arc_move@direction& (0+255),w,b
 24469  012088  EC54  F0AC         	call	_motor_move_steps
 24470  01208C  0012               	return		;funcret
 24471  01208E                     __end_of_motor_arc_move:
 24472                           	opt stack 0
 24473                           tblptru	equ	0xFF8
 24474                           tblptrh	equ	0xFF7
 24475                           tblptrl	equ	0xFF6
 24476                           tablat	equ	0xFF5
 24477                           prodh	equ	0xFF4
 24478                           prodl	equ	0xFF3
 24479                           intcon	equ	0xFF2
 24480                           postinc0	equ	0xFEE
 24481                           wreg	equ	0xFE8
 24482                           indf1	equ	0xFE7
 24483                           postinc1	equ	0xFE6
 24484                           postdec1	equ	0xFE5
 24485                           plusw1	equ	0xFE3
 24486                           fsr1h	equ	0xFE2
 24487                           fsr1l	equ	0xFE1
 24488                           indf2	equ	0xFDF
 24489                           postinc2	equ	0xFDE
 24490                           postdec2	equ	0xFDD
 24491                           plusw2	equ	0xFDB
 24492                           fsr2h	equ	0xFDA
 24493                           fsr2l	equ	0xFD9
 24494                           status	equ	0xFD8
 24495                           
 24496 ;; *************** function __encoder_next_setup_stepsize *****************
 24497 ;; Defined at:
 24498 ;;		line 24 in file "encoder.c"
 24499 ;; Parameters:    Size  Location     Type
 24500 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24501 ;; Auto vars:     Size  Location     Type
 24502 ;;		None
 24503 ;; Return value:  Size  Location     Type
 24504 ;;                  2    0[BANK0 ] unsigned int 
 24505 ;; Registers used:
 24506 ;;		wreg, status,2, status,0
 24507 ;; Tracked objects:
 24508 ;;		On entry : 0/0
 24509 ;;		On exit  : 0/0
 24510 ;;		Unchanged: 0/0
 24511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24512 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24514 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24515 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24516 ;;Total ram usage:        4 bytes
 24517 ;; Hardware stack levels used:    1
 24518 ;; Hardware stack levels required when called:   10
 24519 ;; This function calls:
 24520 ;;		Nothing
 24521 ;; This function is called by:
 24522 ;;		_encoder_statemachine
 24523 ;; This function uses a non-reentrant model
 24524 ;;
 24525                           
 24526                           	psect	text100
 24527  0142F4                     __ptext100:
 24528                           	opt stack 0
 24529  0142F4                     __encoder_next_setup_stepsize:
 24530                           	opt stack 19
 24531                           
 24532                           ;encoder.c: 26: switch(old_stepsize)
 24533                           
 24534                           ;incstack = 0
 24535  0142F4  D01A               	goto	l2703
 24536  0142F6                     
 24537                           ;encoder.c: 29: return 100;
 24538  0142F6  0E00               	movlw	0
 24539  0142F8  0100               	movlb	0	; () banked
 24540  0142FA  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24541  0142FC  0E64               	movlw	100
 24542  0142FE  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24543                           
 24544                           ; BSR set to: 0
 24545  014300  0012               	return	
 24546  014302                     
 24547                           ; BSR set to: 0
 24548                           ;encoder.c: 31: return 10;
 24549                           
 24550                           ; BSR set to: 0
 24551  014302  0E00               	movlw	0
 24552  014304  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24553  014306  0E0A               	movlw	10
 24554  014308  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24555                           
 24556                           ; BSR set to: 0
 24557  01430A  0012               	return	
 24558  01430C                     
 24559                           ; BSR set to: 0
 24560                           ;encoder.c: 33: return 1;
 24561                           
 24562                           ; BSR set to: 0
 24563  01430C  0E00               	movlw	0
 24564  01430E  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24565  014310  0E01               	movlw	1
 24566  014312  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24567                           
 24568                           ; BSR set to: 0
 24569  014314  0012               	return	
 24570  014316                     
 24571                           ; BSR set to: 0
 24572                           ;encoder.c: 35: return 1000;
 24573                           
 24574                           ; BSR set to: 0
 24575  014316  0E03               	movlw	3
 24576  014318  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24577  01431A  0EE8               	movlw	232
 24578  01431C  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24579                           
 24580                           ; BSR set to: 0
 24581  01431E  0012               	return	
 24582  014320                     
 24583                           ; BSR set to: 0
 24584                           ;encoder.c: 37: return 100;
 24585                           
 24586                           ; BSR set to: 0
 24587  014320  0E00               	movlw	0
 24588  014322  6F61               	movwf	(?__encoder_next_setup_stepsize+1)& (0+255),b
 24589  014324  0E64               	movlw	100
 24590  014326  6F60               	movwf	?__encoder_next_setup_stepsize& (0+255),b
 24591                           
 24592                           ; BSR set to: 0
 24593                           ;encoder.c: 38: }
 24594                           
 24595                           ; BSR set to: 0
 24596  014328  0012               	return	
 24597  01432A                     l2703:
 24598                           
 24599                           ; BSR set to: 0
 24600  01432A  C060  F062         	movff	__encoder_next_setup_stepsize@old_stepsize,??__encoder_next_setup_stepsize
 24601  01432E  C061  F063         	movff	__encoder_next_setup_stepsize@old_stepsize+1,??__encoder_next_setup_stepsize+1
 24602                           
 24603                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24604                           ; Switch size 1, requested type "space"
 24605                           ; Number of cases is 2, Range of values is 0 to 3
 24606                           ; switch strategies available:
 24607                           ; Name         Instructions Cycles
 24608                           ; simple_byte            7     4 (average)
 24609                           ;	Chosen strategy is simple_byte
 24610  014332  0100               	movlb	0	; () banked
 24611  014334  5163               	movf	(??__encoder_next_setup_stepsize+1)& (0+255),w,b
 24612  014336  0A00               	xorlw	0	; case 0
 24613  014338  B4D8               	btfsc	status,2,c
 24614  01433A  D004               	goto	l20002
 24615  01433C  0A03               	xorlw	3	; case 3
 24616  01433E  B4D8               	btfsc	status,2,c
 24617  014340  D00C               	goto	l20004
 24618  014342  D7EE               	goto	l2709
 24619  014344                     l20002:
 24620                           
 24621                           ; BSR set to: 0
 24622                           ; Switch size 1, requested type "space"
 24623                           ; Number of cases is 3, Range of values is 1 to 100
 24624                           ; switch strategies available:
 24625                           ; Name         Instructions Cycles
 24626                           ; simple_byte           10     6 (average)
 24627                           ;	Chosen strategy is simple_byte
 24628  014344  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24629  014346  0A01               	xorlw	1	; case 1
 24630  014348  B4D8               	btfsc	status,2,c
 24631  01434A  D7E5               	goto	l2708
 24632  01434C  0A0B               	xorlw	11	; case 10
 24633  01434E  B4D8               	btfsc	status,2,c
 24634  014350  D7DD               	goto	l2707
 24635  014352  0A6E               	xorlw	110	; case 100
 24636  014354  B4D8               	btfsc	status,2,c
 24637  014356  D7D5               	goto	l2706
 24638  014358  D7E3               	goto	l2709
 24639  01435A                     l20004:
 24640                           
 24641                           ; BSR set to: 0
 24642                           ; Switch size 1, requested type "space"
 24643                           ; Number of cases is 1, Range of values is 232 to 232
 24644                           ; switch strategies available:
 24645                           ; Name         Instructions Cycles
 24646                           ; simple_byte            4     3 (average)
 24647                           ;	Chosen strategy is simple_byte
 24648  01435A  5162               	movf	??__encoder_next_setup_stepsize& (0+255),w,b
 24649  01435C  0AE8               	xorlw	232	; case 232
 24650  01435E  B4D8               	btfsc	status,2,c
 24651  014360  D7CA               	goto	l2704
 24652  014362  D7DE               	goto	l2709
 24653  014364                     __end_of__encoder_next_setup_stepsize:
 24654                           	opt stack 0
 24655                           tblptru	equ	0xFF8
 24656                           tblptrh	equ	0xFF7
 24657                           tblptrl	equ	0xFF6
 24658                           tablat	equ	0xFF5
 24659                           prodh	equ	0xFF4
 24660                           prodl	equ	0xFF3
 24661                           intcon	equ	0xFF2
 24662                           postinc0	equ	0xFEE
 24663                           wreg	equ	0xFE8
 24664                           indf1	equ	0xFE7
 24665                           postinc1	equ	0xFE6
 24666                           postdec1	equ	0xFE5
 24667                           plusw1	equ	0xFE3
 24668                           fsr1h	equ	0xFE2
 24669                           fsr1l	equ	0xFE1
 24670                           indf2	equ	0xFDF
 24671                           postinc2	equ	0xFDE
 24672                           postdec2	equ	0xFDD
 24673                           plusw2	equ	0xFDB
 24674                           fsr2h	equ	0xFDA
 24675                           fsr2l	equ	0xFD9
 24676                           status	equ	0xFD8
 24677                           
 24678 ;; *************** function __encoder_next_divide_step_size *****************
 24679 ;; Defined at:
 24680 ;;		line 41 in file "encoder.c"
 24681 ;; Parameters:    Size  Location     Type
 24682 ;;  old_stepsize    1    wreg     unsigned char 
 24683 ;; Auto vars:     Size  Location     Type
 24684 ;;  old_stepsize    1    0[BANK0 ] unsigned char 
 24685 ;; Return value:  Size  Location     Type
 24686 ;;                  1    wreg      unsigned char 
 24687 ;; Registers used:
 24688 ;;		wreg, status,2, status,0
 24689 ;; Tracked objects:
 24690 ;;		On entry : 0/0
 24691 ;;		On exit  : 0/0
 24692 ;;		Unchanged: 0/0
 24693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24694 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24695 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24697 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24698 ;;Total ram usage:        1 bytes
 24699 ;; Hardware stack levels used:    1
 24700 ;; Hardware stack levels required when called:   10
 24701 ;; This function calls:
 24702 ;;		Nothing
 24703 ;; This function is called by:
 24704 ;;		_encoder_statemachine
 24705 ;; This function uses a non-reentrant model
 24706 ;;
 24707                           
 24708                           	psect	text101
 24709  01581E                     __ptext101:
 24710                           	opt stack 0
 24711  01581E                     __encoder_next_divide_step_size:
 24712                           	opt stack 19
 24713                           
 24714                           ; BSR set to: 0
 24715                           ;incstack = 0
 24716                           ;__encoder_next_divide_step_size@old_stepsize stored from wreg
 24717  01581E  0100               	movlb	0	; () banked
 24718  015820  6F60               	movwf	__encoder_next_divide_step_size@old_stepsize& (0+255),b
 24719                           
 24720                           ;encoder.c: 43: switch(old_stepsize)
 24721  015822  D008               	goto	l2713
 24722  015824                     
 24723                           ;encoder.c: 46: return 10;
 24724  015824  0E0A               	movlw	10
 24725  015826  0012               	return	
 24726  015828                     
 24727                           ;encoder.c: 48: return 1;
 24728  015828  0E01               	movlw	1
 24729  01582A  0012               	return	
 24730  01582C                     
 24731                           ;encoder.c: 50: return 100;
 24732  01582C  0E64               	movlw	100
 24733  01582E  0012               	return	
 24734  015830                     
 24735                           ;encoder.c: 52: return 1;
 24736  015830  0E01               	movlw	1
 24737                           
 24738                           ;encoder.c: 53: }
 24739  015832  0012               	return	
 24740  015834                     l2713:
 24741  015834  0100               	movlb	0	; () banked
 24742  015836  5160               	movf	__encoder_next_divide_step_size@old_stepsize& (0+255),w,b
 24743                           
 24744                           ; Switch size 1, requested type "space"
 24745                           ; Number of cases is 3, Range of values is 1 to 100
 24746                           ; switch strategies available:
 24747                           ; Name         Instructions Cycles
 24748                           ; simple_byte           10     6 (average)
 24749                           ;	Chosen strategy is simple_byte
 24750  015838  0A01               	xorlw	1	; case 1
 24751  01583A  B4D8               	btfsc	status,2,c
 24752  01583C  D7F7               	goto	l2717
 24753  01583E  0A0B               	xorlw	11	; case 10
 24754  015840  B4D8               	btfsc	status,2,c
 24755  015842  D7F2               	goto	l2716
 24756  015844  0A6E               	xorlw	110	; case 100
 24757  015846  B4D8               	btfsc	status,2,c
 24758  015848  D7ED               	goto	l2714
 24759  01584A  D7F2               	goto	l2718
 24760  01584C                     __end_of__encoder_next_divide_step_size:
 24761                           	opt stack 0
 24762                           tblptru	equ	0xFF8
 24763                           tblptrh	equ	0xFF7
 24764                           tblptrl	equ	0xFF6
 24765                           tablat	equ	0xFF5
 24766                           prodh	equ	0xFF4
 24767                           prodl	equ	0xFF3
 24768                           intcon	equ	0xFF2
 24769                           postinc0	equ	0xFEE
 24770                           wreg	equ	0xFE8
 24771                           indf1	equ	0xFE7
 24772                           postinc1	equ	0xFE6
 24773                           postdec1	equ	0xFE5
 24774                           plusw1	equ	0xFE3
 24775                           fsr1h	equ	0xFE2
 24776                           fsr1l	equ	0xFE1
 24777                           indf2	equ	0xFDF
 24778                           postinc2	equ	0xFDE
 24779                           postdec2	equ	0xFDD
 24780                           plusw2	equ	0xFDB
 24781                           fsr2h	equ	0xFDA
 24782                           fsr2l	equ	0xFD9
 24783                           status	equ	0xFD8
 24784                           
 24785 ;; *************** function __encoder_next_arc_step_size *****************
 24786 ;; Defined at:
 24787 ;;		line 56 in file "encoder.c"
 24788 ;; Parameters:    Size  Location     Type
 24789 ;;  old_stepsize    2    0[BANK0 ] unsigned int 
 24790 ;; Auto vars:     Size  Location     Type
 24791 ;;		None
 24792 ;; Return value:  Size  Location     Type
 24793 ;;                  2    0[BANK0 ] unsigned int 
 24794 ;; Registers used:
 24795 ;;		wreg, status,2, status,0
 24796 ;; Tracked objects:
 24797 ;;		On entry : 0/0
 24798 ;;		On exit  : 0/0
 24799 ;;		Unchanged: 0/0
 24800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24801 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24804 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24805 ;;Total ram usage:        4 bytes
 24806 ;; Hardware stack levels used:    1
 24807 ;; Hardware stack levels required when called:   10
 24808 ;; This function calls:
 24809 ;;		Nothing
 24810 ;; This function is called by:
 24811 ;;		_encoder_statemachine
 24812 ;; This function uses a non-reentrant model
 24813 ;;
 24814                           
 24815                           	psect	text102
 24816  014364                     __ptext102:
 24817                           	opt stack 0
 24818  014364                     __encoder_next_arc_step_size:
 24819                           	opt stack 19
 24820                           
 24821                           ;encoder.c: 58: switch(old_stepsize)
 24822                           
 24823                           ;incstack = 0
 24824  014364  D01A               	goto	l2722
 24825  014366                     
 24826                           ;encoder.c: 61: return 100;
 24827  014366  0E00               	movlw	0
 24828  014368  0100               	movlb	0	; () banked
 24829  01436A  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24830  01436C  0E64               	movlw	100
 24831  01436E  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24832                           
 24833                           ; BSR set to: 0
 24834  014370  0012               	return	
 24835  014372                     
 24836                           ; BSR set to: 0
 24837                           ;encoder.c: 63: return 10;
 24838                           
 24839                           ; BSR set to: 0
 24840  014372  0E00               	movlw	0
 24841  014374  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24842  014376  0E0A               	movlw	10
 24843  014378  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24844                           
 24845                           ; BSR set to: 0
 24846  01437A  0012               	return	
 24847  01437C                     
 24848                           ; BSR set to: 0
 24849                           ;encoder.c: 65: return 1;
 24850                           
 24851                           ; BSR set to: 0
 24852  01437C  0E00               	movlw	0
 24853  01437E  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24854  014380  0E01               	movlw	1
 24855  014382  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24856                           
 24857                           ; BSR set to: 0
 24858  014384  0012               	return	
 24859  014386                     
 24860                           ; BSR set to: 0
 24861                           ;encoder.c: 67: return 1000;
 24862                           
 24863                           ; BSR set to: 0
 24864  014386  0E03               	movlw	3
 24865  014388  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24866  01438A  0EE8               	movlw	232
 24867  01438C  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24868                           
 24869                           ; BSR set to: 0
 24870  01438E  0012               	return	
 24871  014390                     
 24872                           ; BSR set to: 0
 24873                           ;encoder.c: 69: return 100;
 24874                           
 24875                           ; BSR set to: 0
 24876  014390  0E00               	movlw	0
 24877  014392  6F61               	movwf	(?__encoder_next_arc_step_size+1)& (0+255),b
 24878  014394  0E64               	movlw	100
 24879  014396  6F60               	movwf	?__encoder_next_arc_step_size& (0+255),b
 24880                           
 24881                           ; BSR set to: 0
 24882                           ;encoder.c: 70: }
 24883                           
 24884                           ; BSR set to: 0
 24885  014398  0012               	return	
 24886  01439A                     l2722:
 24887                           
 24888                           ; BSR set to: 0
 24889  01439A  C060  F062         	movff	__encoder_next_arc_step_size@old_stepsize,??__encoder_next_arc_step_size
 24890  01439E  C061  F063         	movff	__encoder_next_arc_step_size@old_stepsize+1,??__encoder_next_arc_step_size+1
 24891                           
 24892                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 24893                           ; Switch size 1, requested type "space"
 24894                           ; Number of cases is 2, Range of values is 0 to 3
 24895                           ; switch strategies available:
 24896                           ; Name         Instructions Cycles
 24897                           ; simple_byte            7     4 (average)
 24898                           ;	Chosen strategy is simple_byte
 24899  0143A2  0100               	movlb	0	; () banked
 24900  0143A4  5163               	movf	(??__encoder_next_arc_step_size+1)& (0+255),w,b
 24901  0143A6  0A00               	xorlw	0	; case 0
 24902  0143A8  B4D8               	btfsc	status,2,c
 24903  0143AA  D004               	goto	l20006
 24904  0143AC  0A03               	xorlw	3	; case 3
 24905  0143AE  B4D8               	btfsc	status,2,c
 24906  0143B0  D00C               	goto	l20008
 24907  0143B2  D7EE               	goto	l2728
 24908  0143B4                     l20006:
 24909                           
 24910                           ; BSR set to: 0
 24911                           ; Switch size 1, requested type "space"
 24912                           ; Number of cases is 3, Range of values is 1 to 100
 24913                           ; switch strategies available:
 24914                           ; Name         Instructions Cycles
 24915                           ; simple_byte           10     6 (average)
 24916                           ;	Chosen strategy is simple_byte
 24917  0143B4  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24918  0143B6  0A01               	xorlw	1	; case 1
 24919  0143B8  B4D8               	btfsc	status,2,c
 24920  0143BA  D7E5               	goto	l2727
 24921  0143BC  0A0B               	xorlw	11	; case 10
 24922  0143BE  B4D8               	btfsc	status,2,c
 24923  0143C0  D7DD               	goto	l2726
 24924  0143C2  0A6E               	xorlw	110	; case 100
 24925  0143C4  B4D8               	btfsc	status,2,c
 24926  0143C6  D7D5               	goto	l2725
 24927  0143C8  D7E3               	goto	l2728
 24928  0143CA                     l20008:
 24929                           
 24930                           ; BSR set to: 0
 24931                           ; Switch size 1, requested type "space"
 24932                           ; Number of cases is 1, Range of values is 232 to 232
 24933                           ; switch strategies available:
 24934                           ; Name         Instructions Cycles
 24935                           ; simple_byte            4     3 (average)
 24936                           ;	Chosen strategy is simple_byte
 24937  0143CA  5162               	movf	??__encoder_next_arc_step_size& (0+255),w,b
 24938  0143CC  0AE8               	xorlw	232	; case 232
 24939  0143CE  B4D8               	btfsc	status,2,c
 24940  0143D0  D7CA               	goto	l2723
 24941  0143D2  D7DE               	goto	l2728
 24942  0143D4                     __end_of__encoder_next_arc_step_size:
 24943                           	opt stack 0
 24944                           tblptru	equ	0xFF8
 24945                           tblptrh	equ	0xFF7
 24946                           tblptrl	equ	0xFF6
 24947                           tablat	equ	0xFF5
 24948                           prodh	equ	0xFF4
 24949                           prodl	equ	0xFF3
 24950                           intcon	equ	0xFF2
 24951                           postinc0	equ	0xFEE
 24952                           wreg	equ	0xFE8
 24953                           indf1	equ	0xFE7
 24954                           postinc1	equ	0xFE6
 24955                           postdec1	equ	0xFE5
 24956                           plusw1	equ	0xFE3
 24957                           fsr1h	equ	0xFE2
 24958                           fsr1l	equ	0xFE1
 24959                           indf2	equ	0xFDF
 24960                           postinc2	equ	0xFDE
 24961                           postdec2	equ	0xFDD
 24962                           plusw2	equ	0xFDB
 24963                           fsr2h	equ	0xFDA
 24964                           fsr2l	equ	0xFD9
 24965                           status	equ	0xFD8
 24966                           
 24967 ;; *************** function __divide_jump_size_increment *****************
 24968 ;; Defined at:
 24969 ;;		line 73 in file "encoder.c"
 24970 ;; Parameters:    Size  Location     Type
 24971 ;;		None
 24972 ;; Auto vars:     Size  Location     Type
 24973 ;;		None
 24974 ;; Return value:  Size  Location     Type
 24975 ;;                  1    wreg      void 
 24976 ;; Registers used:
 24977 ;;		wreg, status,2, status,0
 24978 ;; Tracked objects:
 24979 ;;		On entry : 0/0
 24980 ;;		On exit  : 0/0
 24981 ;;		Unchanged: 0/0
 24982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24984 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24985 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24986 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24987 ;;Total ram usage:        1 bytes
 24988 ;; Hardware stack levels used:    1
 24989 ;; Hardware stack levels required when called:   10
 24990 ;; This function calls:
 24991 ;;		Nothing
 24992 ;; This function is called by:
 24993 ;;		_encoder_statemachine
 24994 ;; This function uses a non-reentrant model
 24995 ;;
 24996                           
 24997                           	psect	text103
 24998  015414                     __ptext103:
 24999                           	opt stack 0
 25000  015414                     __divide_jump_size_increment:
 25001                           	opt stack 19
 25002                           
 25003                           ;encoder.c: 75: ++os.divide_jump_size;
 25004                           
 25005                           ; BSR set to: 0
 25006                           ;incstack = 0
 25007  015414  0101               	movlb	1	; () banked
 25008  015416  4B7E               	infsnz	(_os+26)& (0+255),f,b	;volatile
 25009  015418  2B7F               	incf	(_os+27)& (0+255),f,b	;volatile
 25010                           
 25011                           ; BSR set to: 1
 25012                           ;encoder.c: 76: if(os.divide_jump_size==0)
 25013  01541A  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25014  01541C  117F               	iorwf	(_os+27)& (0+255),w,b	;volatile
 25015  01541E  A4D8               	btfss	status,2,c
 25016  015420  D004               	goto	l2732
 25017                           
 25018                           ; BSR set to: 1
 25019                           ;encoder.c: 77: os.divide_jump_size = 1;
 25020  015422  0E00               	movlw	0
 25021  015424  6F7F               	movwf	(_os+27)& (0+255),b	;volatile
 25022  015426  0E01               	movlw	1
 25023  015428  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25024  01542A                     l2732:
 25025                           
 25026                           ; BSR set to: 1
 25027                           ;encoder.c: 78: if(os.divide_jump_size>=os.division)
 25028                           
 25029                           ; BSR set to: 1
 25030  01542A  5179               	movf	(_os+21)& (0+255),w,b	;volatile
 25031  01542C  5D7E               	subwf	(_os+26)& (0+255),w,b	;volatile
 25032  01542E  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 25033  015430  0A80               	xorlw	128
 25034  015432  0100               	movlb	0	; () banked
 25035  015434  6F60               	movwf	??__divide_jump_size_increment& (0+255),b
 25036  015436  0101               	movlb	1	; () banked
 25037  015438  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 25038  01543A  0A80               	xorlw	128
 25039  01543C  0100               	movlb	0	; () banked
 25040  01543E  5960               	subwfb	??__divide_jump_size_increment& (0+255),w,b
 25041  015440  A0D8               	btfss	status,0,c
 25042  015442  0012               	return	
 25043                           
 25044                           ; BSR set to: 0
 25045                           ;encoder.c: 79: os.divide_jump_size = os.division - 1;
 25046  015444  0EFF               	movlw	255
 25047  015446  0101               	movlb	1	; () banked
 25048  015448  2579               	addwf	(_os+21)& (0+255),w,b	;volatile
 25049  01544A  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25050  01544C  0EFF               	movlw	255
 25051  01544E  217A               	addwfc	(_os+22)& (0+255),w,b	;volatile
 25052  015450  6F7F               	movwf	(_os+27)& (0+255),b	;volatile
 25053  015452  0012               	return	
 25054  015454                     __end_of__divide_jump_size_increment:
 25055                           	opt stack 0
 25056                           tblptru	equ	0xFF8
 25057                           tblptrh	equ	0xFF7
 25058                           tblptrl	equ	0xFF6
 25059                           tablat	equ	0xFF5
 25060                           prodh	equ	0xFF4
 25061                           prodl	equ	0xFF3
 25062                           intcon	equ	0xFF2
 25063                           postinc0	equ	0xFEE
 25064                           wreg	equ	0xFE8
 25065                           indf1	equ	0xFE7
 25066                           postinc1	equ	0xFE6
 25067                           postdec1	equ	0xFE5
 25068                           plusw1	equ	0xFE3
 25069                           fsr1h	equ	0xFE2
 25070                           fsr1l	equ	0xFE1
 25071                           indf2	equ	0xFDF
 25072                           postinc2	equ	0xFDE
 25073                           postdec2	equ	0xFDD
 25074                           plusw2	equ	0xFDB
 25075                           fsr2h	equ	0xFDA
 25076                           fsr2l	equ	0xFD9
 25077                           status	equ	0xFD8
 25078                           
 25079 ;; *************** function __divide_jump_size_decrement *****************
 25080 ;; Defined at:
 25081 ;;		line 82 in file "encoder.c"
 25082 ;; Parameters:    Size  Location     Type
 25083 ;;		None
 25084 ;; Auto vars:     Size  Location     Type
 25085 ;;		None
 25086 ;; Return value:  Size  Location     Type
 25087 ;;                  1    wreg      void 
 25088 ;; Registers used:
 25089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 25090 ;; Tracked objects:
 25091 ;;		On entry : 0/0
 25092 ;;		On exit  : 0/0
 25093 ;;		Unchanged: 0/0
 25094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25095 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25097 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25098 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25099 ;;Total ram usage:        3 bytes
 25100 ;; Hardware stack levels used:    1
 25101 ;; Hardware stack levels required when called:   10
 25102 ;; This function calls:
 25103 ;;		Nothing
 25104 ;; This function is called by:
 25105 ;;		_encoder_statemachine
 25106 ;; This function uses a non-reentrant model
 25107 ;;
 25108                           
 25109                           	psect	text104
 25110  014442                     __ptext104:
 25111                           	opt stack 0
 25112  014442                     __divide_jump_size_decrement:
 25113                           	opt stack 19
 25114                           
 25115                           ;encoder.c: 84: --os.divide_jump_size;
 25116                           
 25117                           ;incstack = 0
 25118  014442  0101               	movlb	1	; () banked
 25119  014444  077E               	decf	(_os+26)& (0+255),f,b	;volatile
 25120  014446  A0D8               	btfss	status,0,c
 25121  014448  077F               	decf	(_os+27)& (0+255),f,b	;volatile
 25122                           
 25123                           ; BSR set to: 1
 25124                           ;encoder.c: 85: if(os.divide_jump_size==0)
 25125  01444A  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25126  01444C  117F               	iorwf	(_os+27)& (0+255),w,b	;volatile
 25127  01444E  A4D8               	btfss	status,2,c
 25128  014450  D002               	goto	l2737
 25129                           
 25130                           ; BSR set to: 1
 25131                           ;encoder.c: 86: os.divide_jump_size = -1;
 25132  014452  697E               	setf	(_os+26)& (0+255),b	;volatile
 25133  014454  697F               	setf	(_os+27)& (0+255),b	;volatile
 25134  014456                     l2737:
 25135                           
 25136                           ; BSR set to: 1
 25137                           ;encoder.c: 87: if(os.divide_jump_size<=(-os.division))
 25138                           
 25139                           ; BSR set to: 1
 25140  014456  EE21  F079         	lfsr	2,_os+21	;volatile
 25141  01445A  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25142  01445E  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25143  014462  0100               	movlb	0	; () banked
 25144  014464  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25145  014466  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25146  014468  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25147  01446A  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25148  01446C  0101               	movlb	1	; () banked
 25149  01446E  517E               	movf	(_os+26)& (0+255),w,b	;volatile
 25150  014470  0100               	movlb	0	; () banked
 25151  014472  5D60               	subwf	??__divide_jump_size_decrement& (0+255),w,b
 25152  014474  5161               	movf	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25153  014476  0A80               	xorlw	128
 25154  014478  6F62               	movwf	(??__divide_jump_size_decrement+2)& (0+255),b
 25155  01447A  0101               	movlb	1	; () banked
 25156  01447C  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 25157  01447E  0A80               	xorlw	128
 25158  014480  0100               	movlb	0	; () banked
 25159  014482  5962               	subwfb	(??__divide_jump_size_decrement+2)& (0+255),w,b
 25160  014484  A0D8               	btfss	status,0,c
 25161  014486  0012               	return	
 25162                           
 25163                           ; BSR set to: 0
 25164                           ;encoder.c: 88: os.divide_jump_size = 1 - os.division;
 25165  014488  EE21  F079         	lfsr	2,_os+21	;volatile
 25166  01448C  CFDE F060          	movff	postinc2,??__divide_jump_size_decrement
 25167  014490  CFDD F061          	movff	postdec2,??__divide_jump_size_decrement+1
 25168  014494  1F60               	comf	??__divide_jump_size_decrement& (0+255),f,b
 25169  014496  1F61               	comf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25170  014498  4B60               	infsnz	??__divide_jump_size_decrement& (0+255),f,b
 25171  01449A  2B61               	incf	(??__divide_jump_size_decrement+1)& (0+255),f,b
 25172  01449C  0E01               	movlw	1
 25173  01449E  2560               	addwf	??__divide_jump_size_decrement& (0+255),w,b
 25174  0144A0  0101               	movlb	1	; () banked
 25175  0144A2  6F7E               	movwf	(_os+26)& (0+255),b	;volatile
 25176  0144A4  0E00               	movlw	0
 25177  0144A6  0100               	movlb	0	; () banked
 25178  0144A8  2161               	addwfc	(??__divide_jump_size_decrement+1)& (0+255),w,b
 25179  0144AA  0101               	movlb	1	; () banked
 25180  0144AC  6F7F               	movwf	(_os+27)& (0+255),b	;volatile
 25181  0144AE  0012               	return	
 25182  0144B0                     __end_of__divide_jump_size_decrement:
 25183                           	opt stack 0
 25184                           tblptru	equ	0xFF8
 25185                           tblptrh	equ	0xFF7
 25186                           tblptrl	equ	0xFF6
 25187                           tablat	equ	0xFF5
 25188                           prodh	equ	0xFF4
 25189                           prodl	equ	0xFF3
 25190                           intcon	equ	0xFF2
 25191                           postinc0	equ	0xFEE
 25192                           wreg	equ	0xFE8
 25193                           indf1	equ	0xFE7
 25194                           postinc1	equ	0xFE6
 25195                           postdec1	equ	0xFE5
 25196                           plusw1	equ	0xFE3
 25197                           fsr1h	equ	0xFE2
 25198                           fsr1l	equ	0xFE1
 25199                           indf2	equ	0xFDF
 25200                           postinc2	equ	0xFDE
 25201                           postdec2	equ	0xFDD
 25202                           plusw2	equ	0xFDB
 25203                           fsr2h	equ	0xFDA
 25204                           fsr2l	equ	0xFD9
 25205                           status	equ	0xFD8
 25206                           
 25207 ;; *************** function _display_prepare *****************
 25208 ;; Defined at:
 25209 ;;		line 278 in file "display.c"
 25210 ;; Parameters:    Size  Location     Type
 25211 ;;		None
 25212 ;; Auto vars:     Size  Location     Type
 25213 ;;  temp           10  104[BANK0 ] unsigned char [10]
 25214 ;;  cntr            1  115[BANK0 ] unsigned char 
 25215 ;;  space           1  114[BANK0 ] unsigned char 
 25216 ;; Return value:  Size  Location     Type
 25217 ;;                  1    wreg      void 
 25218 ;; Registers used:
 25219 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25220 ;; Tracked objects:
 25221 ;;		On entry : 0/0
 25222 ;;		On exit  : 0/0
 25223 ;;		Unchanged: 0/0
 25224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25226 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25227 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25228 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25229 ;;Total ram usage:       14 bytes
 25230 ;; Hardware stack levels used:    1
 25231 ;; Hardware stack levels required when called:   15
 25232 ;; This function calls:
 25233 ;;		__display_clear
 25234 ;;		__display_itoa
 25235 ;;		__display_itoa_long
 25236 ;;		__display_padded_itoa
 25237 ;;		__display_signed_itoa
 25238 ;;		_memcpy
 25239 ;;		_motor_speed_from_index
 25240 ;;		_strlen
 25241 ;; This function is called by:
 25242 ;;		_main
 25243 ;; This function uses a non-reentrant model
 25244 ;;
 25245                           
 25246                           	psect	text105
 25247  00A330                     __ptext105:
 25248                           	opt stack 0
 25249  00A330                     _display_prepare:
 25250                           	opt stack 15
 25251                           
 25252                           ;display.c: 280: uint8_t cntr;;display.c: 281: uint8_t space;;display.c: 282: char temp[
      +                          10];;display.c: 284: switch(os.displayState & 0xF0)
 25253                           
 25254                           ;incstack = 0
 25255  00A330  EF8E  F057         	goto	l1390
 25256  00A334                     
 25257                           ;display.c: 288: memcpy(display_content, dc_main, sizeof display_content);
 25258  00A334  0E42               	movlw	low _display_content
 25259  00A336  0100               	movlb	0	; () banked
 25260  00A338  6F60               	movwf	memcpy@d1& (0+255),b
 25261  00A33A  0E02               	movlw	high _display_content
 25262  00A33C  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25263  00A33E  0E6E               	movlw	low _dc_main
 25264  00A340  6F62               	movwf	memcpy@s1& (0+255),b
 25265  00A342  0EA0               	movlw	high _dc_main
 25266  00A344  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25267  00A346  0E00               	movlw	0
 25268  00A348  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25269  00A34A  0E50               	movlw	80
 25270  00A34C  6F64               	movwf	memcpy@n& (0+255),b
 25271  00A34E  ECF2  F0A3         	call	_memcpy	;wreg free
 25272                           
 25273                           ;display.c: 289: switch(os.displayState)
 25274  00A352  D00F               	goto	l1392
 25275  00A354                     
 25276                           ;display.c: 292: display_content[1][0] = '>';
 25277  00A354  0E3E               	movlw	62
 25278  00A356  0102               	movlb	2	; () banked
 25279  00A358  6F56               	movwf	(_display_content+20)& (0+255),b
 25280                           
 25281                           ;display.c: 293: break;
 25282  00A35A  EFBC  F057         	goto	l1399
 25283  00A35E                     
 25284                           ;display.c: 295: display_content[1][9] = '>';
 25285                           
 25286                           ; BSR set to: 2
 25287  00A35E  0E3E               	movlw	62
 25288  00A360  0102               	movlb	2	; () banked
 25289  00A362  6F5F               	movwf	(_display_content+29)& (0+255),b
 25290                           
 25291                           ;display.c: 296: break;
 25292  00A364  EFBC  F057         	goto	l1399
 25293  00A368                     
 25294                           ;display.c: 301: display_content[2][9] = '>';
 25295                           
 25296                           ; BSR set to: 2
 25297  00A368  0E3E               	movlw	62
 25298  00A36A  0102               	movlb	2	; () banked
 25299  00A36C  6F73               	movwf	(_display_content+49)& (0+255),b
 25300                           
 25301                           ;display.c: 302: break;
 25302  00A36E  EFBC  F057         	goto	l1399
 25303  00A372                     l1392:
 25304                           
 25305                           ; BSR set to: 2
 25306  00A372  0101               	movlb	1	; () banked
 25307  00A374  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25308                           
 25309                           ; Switch size 1, requested type "space"
 25310                           ; Number of cases is 5, Range of values is 1 to 5
 25311                           ; switch strategies available:
 25312                           ; Name         Instructions Cycles
 25313                           ; simple_byte           16     9 (average)
 25314                           ;	Chosen strategy is simple_byte
 25315  00A376  0A01               	xorlw	1	; case 1
 25316  00A378  B4D8               	btfsc	status,2,c
 25317  00A37A  D7EC               	goto	l1393
 25318  00A37C  0A03               	xorlw	3	; case 2
 25319  00A37E  B4D8               	btfsc	status,2,c
 25320  00A380  D7EE               	goto	l1395
 25321  00A382  0A01               	xorlw	1	; case 3
 25322  00A384  B4D8               	btfsc	status,2,c
 25323  00A386  D067               	goto	l1412
 25324  00A388  0A07               	xorlw	7	; case 4
 25325  00A38A  B4D8               	btfsc	status,2,c
 25326  00A38C  D7ED               	goto	l1397
 25327  00A38E  0A01               	xorlw	1	; case 5
 25328  00A390  D072               	goto	L88
 25329  00A392                     
 25330                           ;display.c: 310: memcpy(display_content, dc_setup1, sizeof display_content);
 25331                           
 25332                           ; BSR set to: 1
 25333  00A392  0E42               	movlw	low _display_content
 25334  00A394  0100               	movlb	0	; () banked
 25335  00A396  6F60               	movwf	memcpy@d1& (0+255),b
 25336  00A398  0E02               	movlw	high _display_content
 25337  00A39A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25338  00A39C  0E1E               	movlw	low _dc_setup1
 25339  00A39E  6F62               	movwf	memcpy@s1& (0+255),b
 25340  00A3A0  0EA0               	movlw	high _dc_setup1
 25341  00A3A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25342  00A3A4  0E00               	movlw	0
 25343  00A3A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25344  00A3A8  0E50               	movlw	80
 25345  00A3AA  6F64               	movwf	memcpy@n& (0+255),b
 25346  00A3AC  ECF2  F0A3         	call	_memcpy	;wreg free
 25347                           
 25348                           ;display.c: 311: _display_itoa(os.setup_step_size, 2, temp);
 25349  00A3B0  C176  F09F         	movff	_os+18,__display_itoa@value	;volatile
 25350  00A3B4  C177  F0A0         	movff	_os+19,__display_itoa@value+1	;volatile
 25351  00A3B8  0E02               	movlw	2
 25352  00A3BA  0100               	movlb	0	; () banked
 25353  00A3BC  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 25354  00A3BE  0EC8               	movlw	low display_prepare@temp
 25355  00A3C0  6FA2               	movwf	__display_itoa@text& (0+255),b
 25356  00A3C2  0E00               	movlw	high display_prepare@temp
 25357  00A3C4  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 25358  00A3C6  ECD7  F071         	call	__display_itoa	;wreg free
 25359                           
 25360                           ;display.c: 312: if(os.setup_step_size>999)
 25361  00A3CA  0EE8               	movlw	232
 25362  00A3CC  0101               	movlb	1	; () banked
 25363  00A3CE  5D76               	subwf	(_os+18)& (0+255),w,b	;volatile
 25364  00A3D0  0E03               	movlw	3
 25365  00A3D2  5977               	subwfb	(_os+19)& (0+255),w,b	;volatile
 25366  00A3D4  A0D8               	btfss	status,0,c
 25367  00A3D6  D002               	goto	l1401
 25368                           
 25369                           ; BSR set to: 1
 25370                           ;display.c: 313: space = 0;
 25371  00A3D8  0E00               	movlw	0
 25372  00A3DA  D001               	goto	L23
 25373  00A3DC                     l1401:
 25374                           
 25375                           ;display.c: 314: else;display.c: 315: space = 1;
 25376                           
 25377                           ; BSR set to: 0
 25378  00A3DC  0E01               	movlw	1
 25379  00A3DE                     L23:
 25380  00A3DE  0100               	movlb	0	; () banked
 25381  00A3E0  6FD2               	movwf	display_prepare@space& (0+255),b
 25382                           
 25383                           ; BSR set to: 0
 25384                           ;display.c: 316: for(cntr=0; temp[cntr]; ++cntr)
 25385  00A3E2  0E00               	movlw	0
 25386  00A3E4  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25387  00A3E6  D018               	goto	l1403
 25388  00A3E8                     
 25389                           ; BSR set to: 0
 25390                           ;display.c: 317: {;display.c: 318: display_content[3][space+cntr] = temp[cntr];
 25391                           
 25392                           ; BSR set to: 0
 25393  00A3E8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25394  00A3EA  0D01               	mullw	1
 25395  00A3EC  0EC8               	movlw	low display_prepare@temp
 25396  00A3EE  24F3               	addwf	prodl,w,c
 25397  00A3F0  6ED9               	movwf	fsr2l,c
 25398  00A3F2  0E00               	movlw	high display_prepare@temp
 25399  00A3F4  20F4               	addwfc	prodh,w,c
 25400  00A3F6  6EDA               	movwf	fsr2h,c
 25401  00A3F8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25402  00A3FA  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 25403  00A3FE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25404  00A400  27C6               	addwf	??_display_prepare& (0+255),f,b
 25405  00A402  0E00               	movlw	0
 25406  00A404  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25407  00A406  0E7E               	movlw	low (_display_content+60)
 25408  00A408  25C6               	addwf	??_display_prepare& (0+255),w,b
 25409  00A40A  6EE1               	movwf	fsr1l,c
 25410  00A40C  0E02               	movlw	high (_display_content+60)
 25411  00A40E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25412  00A410  6EE2               	movwf	fsr1h,c
 25413  00A412  CFDF FFE7          	movff	indf2,indf1
 25414                           
 25415                           ; BSR set to: 0
 25416  00A416  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25417  00A418                     l1403:
 25418                           
 25419                           ; BSR set to: 0
 25420                           
 25421                           ; BSR set to: 0
 25422  00A418  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25423  00A41A  0D01               	mullw	1
 25424  00A41C  0EC8               	movlw	low display_prepare@temp
 25425  00A41E  24F3               	addwf	prodl,w,c
 25426  00A420  6ED9               	movwf	fsr2l,c
 25427  00A422  0E00               	movlw	high display_prepare@temp
 25428  00A424  20F4               	addwfc	prodh,w,c
 25429  00A426  6EDA               	movwf	fsr2h,c
 25430  00A428  50DF               	movf	indf2,w,c
 25431  00A42A  A4D8               	btfss	status,2,c
 25432  00A42C  D7DD               	goto	l1404
 25433                           
 25434                           ; BSR set to: 2
 25435                           
 25436                           ; BSR set to: 2
 25437                           ;display.c: 328: }
 25438                           
 25439                           ;display.c: 327: break;
 25440                           
 25441                           ;display.c: 326: display_content[3][12] = '>';
 25442                           
 25443                           ; BSR set to: 2
 25444                           
 25445                           ;display.c: 325: case DISPLAY_STATE_SETUP1_CANCEL:
 25446                           
 25447                           ;display.c: 324: break;
 25448                           
 25449                           ;display.c: 323: display_content[2][12] = '>';
 25450                           
 25451                           ; BSR set to: 0
 25452                           
 25453                           ;display.c: 321: {;display.c: 322: case DISPLAY_STATE_SETUP1_CONFIRM:
 25454                           
 25455                           ; BSR set to: 0
 25456                           ;display.c: 319: };display.c: 320: switch(os.displayState)
 25457  00A42E  0101               	movlb	1	; () banked
 25458  00A430  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25459                           
 25460                           ; Switch size 1, requested type "space"
 25461                           ; Number of cases is 2, Range of values is 17 to 18
 25462                           ; switch strategies available:
 25463                           ; Name         Instructions Cycles
 25464                           ; simple_byte            7     4 (average)
 25465                           ;	Chosen strategy is simple_byte
 25466  00A432  0A11               	xorlw	17	; case 17
 25467  00A434  D08E               	goto	L29
 25468  00A436                     
 25469                           ;display.c: 332: memcpy(display_content, dc_setup2, sizeof display_content);
 25470                           
 25471                           ; BSR set to: 1
 25472  00A436  0E42               	movlw	low _display_content
 25473  00A438  0100               	movlb	0	; () banked
 25474  00A43A  6F60               	movwf	memcpy@d1& (0+255),b
 25475  00A43C  0E02               	movlw	high _display_content
 25476  00A43E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25477  00A440  0ECE               	movlw	low _dc_setup2
 25478  00A442  6F62               	movwf	memcpy@s1& (0+255),b
 25479  00A444  0E9F               	movlw	high _dc_setup2
 25480  00A446  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25481  00A448  0E00               	movlw	0
 25482  00A44A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25483  00A44C  0E50               	movlw	80
 25484  00A44E  6F64               	movwf	memcpy@n& (0+255),b
 25485  00A450  ECF2  F0A3         	call	_memcpy	;wreg free
 25486                           
 25487                           ;display.c: 333: switch(os.displayState)
 25488  00A454  D00A               	goto	l1411
 25489  00A456                     l1412:
 25490                           
 25491                           ;display.c: 336: display_content[2][0] = '>';
 25492  00A456  0E3E               	movlw	62
 25493  00A458  0102               	movlb	2	; () banked
 25494  00A45A  6F6A               	movwf	(_display_content+40)& (0+255),b
 25495                           
 25496                           ;display.c: 337: break;
 25497  00A45C  EFBC  F057         	goto	l1399
 25498  00A460                     l1414:
 25499                           
 25500                           ;display.c: 339: display_content[3][0] = '>';
 25501                           
 25502                           ; BSR set to: 2
 25503  00A460  0E3E               	movlw	62
 25504  00A462  0102               	movlb	2	; () banked
 25505  00A464  6F7E               	movwf	(_display_content+60)& (0+255),b
 25506                           
 25507                           ; BSR set to: 2
 25508                           ;display.c: 341: }
 25509                           
 25510                           ;display.c: 340: break;
 25511  00A466  EFBC  F057         	goto	l1399
 25512  00A46A                     l1411:
 25513                           
 25514                           ; BSR set to: 2
 25515  00A46A  0101               	movlb	1	; () banked
 25516  00A46C  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25517                           
 25518                           ; Switch size 1, requested type "space"
 25519                           ; Number of cases is 2, Range of values is 33 to 34
 25520                           ; switch strategies available:
 25521                           ; Name         Instructions Cycles
 25522                           ; simple_byte            7     4 (average)
 25523                           ;	Chosen strategy is simple_byte
 25524  00A46E  0A21               	xorlw	33	; case 33
 25525  00A470  B4D8               	btfsc	status,2,c
 25526  00A472  D7F1               	goto	l1412
 25527  00A474  0A03               	xorlw	3	; case 34
 25528  00A476                     L88:
 25529  00A476  B4D8               	btfsc	status,2,c
 25530  00A478  D7F3               	goto	l1414
 25531                           
 25532                           ; BSR set to: 1
 25533                           ;display.c: 342: break;
 25534  00A47A  EFBC  F057         	goto	l1399
 25535  00A47E                     
 25536                           ;display.c: 345: memcpy(display_content, dc_divide1, sizeof display_content);
 25537                           
 25538                           ; BSR set to: 1
 25539  00A47E  0E42               	movlw	low _display_content
 25540  00A480  0100               	movlb	0	; () banked
 25541  00A482  6F60               	movwf	memcpy@d1& (0+255),b
 25542  00A484  0E02               	movlw	high _display_content
 25543  00A486  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25544  00A488  0E7E               	movlw	low _dc_divide1
 25545  00A48A  6F62               	movwf	memcpy@s1& (0+255),b
 25546  00A48C  0E9F               	movlw	high _dc_divide1
 25547  00A48E  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25548  00A490  0E00               	movlw	0
 25549  00A492  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25550  00A494  0E50               	movlw	80
 25551  00A496  6F64               	movwf	memcpy@n& (0+255),b
 25552  00A498  ECF2  F0A3         	call	_memcpy	;wreg free
 25553                           
 25554                           ;display.c: 347: _display_padded_itoa(os.divide_step_size, 3, temp);
 25555  00A49C  C17B  F078         	movff	_os+23,__display_padded_itoa@value	;volatile
 25556  00A4A0  0100               	movlb	0	; () banked
 25557  00A4A2  6B79               	clrf	(__display_padded_itoa@value+1)& (0+255),b
 25558  00A4A4  0E03               	movlw	3
 25559  00A4A6  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25560  00A4A8  0EC8               	movlw	low display_prepare@temp
 25561  00A4AA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25562  00A4AC  0E00               	movlw	high display_prepare@temp
 25563  00A4AE  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25564  00A4B0  EC47  F090         	call	__display_padded_itoa	;wreg free
 25565                           
 25566                           ;display.c: 348: for(cntr=0; cntr<3; ++cntr)
 25567  00A4B4  0E00               	movlw	0
 25568  00A4B6  0100               	movlb	0	; () banked
 25569  00A4B8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25570  00A4BA                     l18716:
 25571                           
 25572                           ; BSR set to: 0
 25573  00A4BA  0E02               	movlw	2
 25574  00A4BC  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25575  00A4BE  D001               	goto	l1416
 25576  00A4C0  D014               	goto	u18740
 25577  00A4C2                     l1416:
 25578                           
 25579                           ; BSR set to: 0
 25580                           ;display.c: 349: {;display.c: 350: display_content[2][cntr] = temp[cntr];
 25581                           
 25582                           ; BSR set to: 0
 25583  00A4C2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25584  00A4C4  0D01               	mullw	1
 25585  00A4C6  0EC8               	movlw	low display_prepare@temp
 25586  00A4C8  24F3               	addwf	prodl,w,c
 25587  00A4CA  6ED9               	movwf	fsr2l,c
 25588  00A4CC  0E00               	movlw	high display_prepare@temp
 25589  00A4CE  20F4               	addwfc	prodh,w,c
 25590  00A4D0  6EDA               	movwf	fsr2h,c
 25591  00A4D2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25592  00A4D4  0D01               	mullw	1
 25593  00A4D6  0E6A               	movlw	low (_display_content+40)
 25594  00A4D8  24F3               	addwf	prodl,w,c
 25595  00A4DA  6EE1               	movwf	fsr1l,c
 25596  00A4DC  0E02               	movlw	high (_display_content+40)
 25597  00A4DE  20F4               	addwfc	prodh,w,c
 25598  00A4E0  6EE2               	movwf	fsr1h,c
 25599  00A4E2  CFDF FFE7          	movff	indf2,indf1
 25600                           
 25601                           ; BSR set to: 0
 25602  00A4E6  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25603  00A4E8  D7E8               	goto	l18716
 25604  00A4EA                     u18740:
 25605                           
 25606                           ; BSR set to: 0
 25607                           ;display.c: 351: };display.c: 353: _display_padded_itoa(os.division, 4, temp);
 25608                           
 25609                           ; BSR set to: 0
 25610  00A4EA  C179  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 25611  00A4EE  C17A  F079         	movff	_os+22,__display_padded_itoa@value+1	;volatile
 25612  00A4F2  0E04               	movlw	4
 25613  00A4F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25614  00A4F6  0EC8               	movlw	low display_prepare@temp
 25615  00A4F8  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25616  00A4FA  0E00               	movlw	high display_prepare@temp
 25617  00A4FC  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25618  00A4FE  EC47  F090         	call	__display_padded_itoa	;wreg free
 25619                           
 25620                           ;display.c: 354: for(cntr=0; cntr<4; ++cntr)
 25621  00A502  0E00               	movlw	0
 25622  00A504  0100               	movlb	0	; () banked
 25623  00A506  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25624  00A508                     l18730:
 25625                           
 25626                           ; BSR set to: 0
 25627  00A508  0E03               	movlw	3
 25628  00A50A  65D3               	cpfsgt	display_prepare@cntr& (0+255),b
 25629  00A50C  D001               	goto	l1418
 25630  00A50E  D01E               	goto	l1420
 25631  00A510                     l1418:
 25632                           
 25633                           ; BSR set to: 0
 25634                           ;display.c: 355: {;display.c: 356: display_content[3][cntr] = temp[cntr];
 25635                           
 25636                           ; BSR set to: 0
 25637  00A510  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25638  00A512  0D01               	mullw	1
 25639  00A514  0EC8               	movlw	low display_prepare@temp
 25640  00A516  24F3               	addwf	prodl,w,c
 25641  00A518  6ED9               	movwf	fsr2l,c
 25642  00A51A  0E00               	movlw	high display_prepare@temp
 25643  00A51C  20F4               	addwfc	prodh,w,c
 25644  00A51E  6EDA               	movwf	fsr2h,c
 25645  00A520  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25646  00A522  0D01               	mullw	1
 25647  00A524  0E7E               	movlw	low (_display_content+60)
 25648  00A526  24F3               	addwf	prodl,w,c
 25649  00A528  6EE1               	movwf	fsr1l,c
 25650  00A52A  0E02               	movlw	high (_display_content+60)
 25651  00A52C  20F4               	addwfc	prodh,w,c
 25652  00A52E  6EE2               	movwf	fsr1h,c
 25653  00A530  CFDF FFE7          	movff	indf2,indf1
 25654                           
 25655                           ; BSR set to: 0
 25656  00A534  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25657  00A536  D7E8               	goto	l18730
 25658  00A538                     
 25659                           ;display.c: 361: display_content[2][12] = '>';
 25660                           
 25661                           ; BSR set to: 0
 25662  00A538  0E3E               	movlw	62
 25663  00A53A  0102               	movlb	2	; () banked
 25664  00A53C  6F76               	movwf	(_display_content+52)& (0+255),b
 25665                           
 25666                           ;display.c: 362: break;
 25667  00A53E  EFBC  F057         	goto	l1399
 25668  00A542                     
 25669                           ;display.c: 364: display_content[3][12] = '>';
 25670                           
 25671                           ; BSR set to: 2
 25672  00A542  0E3E               	movlw	62
 25673  00A544  0102               	movlb	2	; () banked
 25674  00A546  6F8A               	movwf	(_display_content+72)& (0+255),b
 25675                           
 25676                           ; BSR set to: 2
 25677                           ;display.c: 366: }
 25678                           
 25679                           ;display.c: 365: break;
 25680  00A548  EFBC  F057         	goto	l1399
 25681  00A54C                     l1420:
 25682                           
 25683                           ; BSR set to: 2
 25684  00A54C  0101               	movlb	1	; () banked
 25685  00A54E  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 25686                           
 25687                           ; Switch size 1, requested type "space"
 25688                           ; Number of cases is 2, Range of values is 49 to 50
 25689                           ; switch strategies available:
 25690                           ; Name         Instructions Cycles
 25691                           ; simple_byte            7     4 (average)
 25692                           ;	Chosen strategy is simple_byte
 25693  00A550  0A31               	xorlw	49	; case 49
 25694  00A552                     L29:
 25695  00A552  B4D8               	btfsc	status,2,c
 25696  00A554  D7F1               	goto	l1421
 25697  00A556  0A03               	xorlw	3	; case 50
 25698  00A558  B4D8               	btfsc	status,2,c
 25699  00A55A  D7F3               	goto	l1423
 25700                           
 25701                           ; BSR set to: 1
 25702                           ;display.c: 367: break;
 25703  00A55C  EFBC  F057         	goto	l1399
 25704  00A560                     
 25705                           ;display.c: 370: memcpy(display_content, dc_divide2, sizeof display_content);
 25706                           
 25707                           ; BSR set to: 1
 25708  00A560  0E42               	movlw	low _display_content
 25709  00A562  0100               	movlb	0	; () banked
 25710  00A564  6F60               	movwf	memcpy@d1& (0+255),b
 25711  00A566  0E02               	movlw	high _display_content
 25712  00A568  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 25713  00A56A  0E2E               	movlw	low _dc_divide2
 25714  00A56C  6F62               	movwf	memcpy@s1& (0+255),b
 25715  00A56E  0E9F               	movlw	high _dc_divide2
 25716  00A570  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 25717  00A572  0E00               	movlw	0
 25718  00A574  6F65               	movwf	(memcpy@n+1)& (0+255),b
 25719  00A576  0E50               	movlw	80
 25720  00A578  6F64               	movwf	memcpy@n& (0+255),b
 25721  00A57A  ECF2  F0A3         	call	_memcpy	;wreg free
 25722                           
 25723                           ;display.c: 372: _display_padded_itoa(os.division, 0, temp);
 25724  00A57E  C179  F078         	movff	_os+21,__display_padded_itoa@value	;volatile
 25725  00A582  C17A  F079         	movff	_os+22,__display_padded_itoa@value+1	;volatile
 25726  00A586  0E00               	movlw	0
 25727  00A588  0100               	movlb	0	; () banked
 25728  00A58A  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25729  00A58C  0EC8               	movlw	low display_prepare@temp
 25730  00A58E  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25731  00A590  0E00               	movlw	high display_prepare@temp
 25732  00A592  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25733  00A594  EC47  F090         	call	__display_padded_itoa	;wreg free
 25734                           
 25735                           ;display.c: 373: for(cntr=0; temp[cntr]; ++cntr)
 25736  00A598  0E00               	movlw	0
 25737  00A59A  0100               	movlb	0	; () banked
 25738  00A59C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25739  00A59E  D018               	goto	l1425
 25740  00A5A0                     
 25741                           ; BSR set to: 0
 25742                           ;display.c: 374: {;display.c: 375: display_content[0][cntr+8] = temp[cntr];
 25743                           
 25744                           ; BSR set to: 0
 25745  00A5A0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25746  00A5A2  0D01               	mullw	1
 25747  00A5A4  0EC8               	movlw	low display_prepare@temp
 25748  00A5A6  24F3               	addwf	prodl,w,c
 25749  00A5A8  6ED9               	movwf	fsr2l,c
 25750  00A5AA  0E00               	movlw	high display_prepare@temp
 25751  00A5AC  20F4               	addwfc	prodh,w,c
 25752  00A5AE  6EDA               	movwf	fsr2h,c
 25753  00A5B0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25754  00A5B2  6FC6               	movwf	??_display_prepare& (0+255),b
 25755  00A5B4  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25756  00A5B6  0E08               	movlw	8
 25757  00A5B8  27C6               	addwf	??_display_prepare& (0+255),f,b
 25758  00A5BA  0E00               	movlw	0
 25759  00A5BC  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25760  00A5BE  0E42               	movlw	low _display_content
 25761  00A5C0  25C6               	addwf	??_display_prepare& (0+255),w,b
 25762  00A5C2  6EE1               	movwf	fsr1l,c
 25763  00A5C4  0E02               	movlw	high _display_content
 25764  00A5C6  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25765  00A5C8  6EE2               	movwf	fsr1h,c
 25766  00A5CA  CFDF FFE7          	movff	indf2,indf1
 25767                           
 25768                           ; BSR set to: 0
 25769  00A5CE  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25770  00A5D0                     l1425:
 25771                           
 25772                           ; BSR set to: 0
 25773                           
 25774                           ; BSR set to: 0
 25775  00A5D0  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25776  00A5D2  0D01               	mullw	1
 25777  00A5D4  0EC8               	movlw	low display_prepare@temp
 25778  00A5D6  24F3               	addwf	prodl,w,c
 25779  00A5D8  6ED9               	movwf	fsr2l,c
 25780  00A5DA  0E00               	movlw	high display_prepare@temp
 25781  00A5DC  20F4               	addwfc	prodh,w,c
 25782  00A5DE  6EDA               	movwf	fsr2h,c
 25783  00A5E0  50DF               	movf	indf2,w,c
 25784  00A5E2  A4D8               	btfss	status,2,c
 25785  00A5E4  D7DD               	goto	l1426
 25786                           
 25787                           ; BSR set to: 0
 25788                           ;display.c: 376: };display.c: 378: display_content[0][cntr+8] = ',';
 25789                           
 25790                           ; BSR set to: 0
 25791  00A5E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25792  00A5E8  6FC6               	movwf	??_display_prepare& (0+255),b
 25793  00A5EA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25794  00A5EC  0E08               	movlw	8
 25795  00A5EE  27C6               	addwf	??_display_prepare& (0+255),f,b
 25796  00A5F0  0E00               	movlw	0
 25797  00A5F2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25798  00A5F4  0E42               	movlw	low _display_content
 25799  00A5F6  25C6               	addwf	??_display_prepare& (0+255),w,b
 25800  00A5F8  6ED9               	movwf	fsr2l,c
 25801  00A5FA  0E02               	movlw	high _display_content
 25802  00A5FC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25803  00A5FE  6EDA               	movwf	fsr2h,c
 25804  00A600  0E2C               	movlw	44
 25805  00A602  6EDF               	movwf	indf2,c
 25806                           
 25807                           ; BSR set to: 0
 25808                           ;display.c: 379: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 25809  00A604  0101               	movlb	1	; () banked
 25810  00A606  2978               	incf	(_os+20)& (0+255),w,b	;volatile
 25811  00A608  A4D8               	btfss	status,2,c
 25812  00A60A  D024               	goto	l1428
 25813                           
 25814                           ; BSR set to: 1
 25815                           ;display.c: 380: {;display.c: 381: display_content[0][cntr+10] = 'C';
 25816  00A60C  0100               	movlb	0	; () banked
 25817  00A60E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25818  00A610  6FC6               	movwf	??_display_prepare& (0+255),b
 25819  00A612  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25820  00A614  0E0A               	movlw	10
 25821  00A616  27C6               	addwf	??_display_prepare& (0+255),f,b
 25822  00A618  0E00               	movlw	0
 25823  00A61A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25824  00A61C  0E42               	movlw	low _display_content
 25825  00A61E  25C6               	addwf	??_display_prepare& (0+255),w,b
 25826  00A620  6ED9               	movwf	fsr2l,c
 25827  00A622  0E02               	movlw	high _display_content
 25828  00A624  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25829  00A626  6EDA               	movwf	fsr2h,c
 25830  00A628  0E43               	movlw	67
 25831  00A62A  6EDF               	movwf	indf2,c
 25832                           
 25833                           ;display.c: 382: display_content[0][cntr+11] = 'C';
 25834  00A62C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25835  00A62E  6FC6               	movwf	??_display_prepare& (0+255),b
 25836  00A630  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25837  00A632  0E0B               	movlw	11
 25838  00A634  27C6               	addwf	??_display_prepare& (0+255),f,b
 25839  00A636  0E00               	movlw	0
 25840  00A638  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25841  00A63A  0E42               	movlw	low _display_content
 25842  00A63C  25C6               	addwf	??_display_prepare& (0+255),w,b
 25843  00A63E  6ED9               	movwf	fsr2l,c
 25844  00A640  0E02               	movlw	high _display_content
 25845  00A642  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25846  00A644  6EDA               	movwf	fsr2h,c
 25847  00A646  0E43               	movlw	67
 25848  00A648  6EDF               	movwf	indf2,c
 25849                           
 25850                           ;display.c: 383: display_content[0][cntr+12] = 'W';
 25851  00A64A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25852  00A64C  6FC6               	movwf	??_display_prepare& (0+255),b
 25853  00A64E  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25854  00A650  0E0C               	movlw	12
 25855  00A652  D014               	goto	L30
 25856  00A654                     l1428:
 25857                           
 25858                           ;display.c: 385: else;display.c: 386: {;display.c: 387: display_content[0][cntr+10] = 'C
      +                          ';
 25859                           
 25860                           ; BSR set to: 0
 25861  00A654  0100               	movlb	0	; () banked
 25862  00A656  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25863  00A658  6FC6               	movwf	??_display_prepare& (0+255),b
 25864  00A65A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25865  00A65C  0E0A               	movlw	10
 25866  00A65E  27C6               	addwf	??_display_prepare& (0+255),f,b
 25867  00A660  0E00               	movlw	0
 25868  00A662  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25869  00A664  0E42               	movlw	low _display_content
 25870  00A666  25C6               	addwf	??_display_prepare& (0+255),w,b
 25871  00A668  6ED9               	movwf	fsr2l,c
 25872  00A66A  0E02               	movlw	high _display_content
 25873  00A66C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25874  00A66E  6EDA               	movwf	fsr2h,c
 25875  00A670  0E43               	movlw	67
 25876  00A672  6EDF               	movwf	indf2,c
 25877                           
 25878                           ;display.c: 388: display_content[0][cntr+11] = 'W';
 25879  00A674  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25880  00A676  6FC6               	movwf	??_display_prepare& (0+255),b
 25881  00A678  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25882  00A67A  0E0B               	movlw	11
 25883  00A67C                     L30:
 25884  00A67C  27C6               	addwf	??_display_prepare& (0+255),f,b
 25885  00A67E  0E00               	movlw	0
 25886  00A680  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25887  00A682  0E42               	movlw	low _display_content
 25888  00A684  25C6               	addwf	??_display_prepare& (0+255),w,b
 25889  00A686  6ED9               	movwf	fsr2l,c
 25890  00A688  0E02               	movlw	high _display_content
 25891  00A68A  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25892  00A68C  6EDA               	movwf	fsr2h,c
 25893  00A68E  0E57               	movlw	87
 25894  00A690  6EDF               	movwf	indf2,c
 25895                           
 25896                           ; BSR set to: 0
 25897                           ;display.c: 389: };display.c: 391: _display_padded_itoa(os.divide_position, 0, temp);
 25898                           
 25899                           ; BSR set to: 0
 25900  00A692  C17C  F078         	movff	_os+24,__display_padded_itoa@value	;volatile
 25901  00A696  C17D  F079         	movff	_os+25,__display_padded_itoa@value+1	;volatile
 25902  00A69A  0E00               	movlw	0
 25903  00A69C  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 25904  00A69E  0EC8               	movlw	low display_prepare@temp
 25905  00A6A0  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 25906  00A6A2  0E00               	movlw	high display_prepare@temp
 25907  00A6A4  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 25908  00A6A6  EC47  F090         	call	__display_padded_itoa	;wreg free
 25909                           
 25910                           ;display.c: 392: for(cntr=0; temp[cntr]; ++cntr)
 25911  00A6AA  0E00               	movlw	0
 25912  00A6AC  0100               	movlb	0	; () banked
 25913  00A6AE  6FD3               	movwf	display_prepare@cntr& (0+255),b
 25914  00A6B0  D018               	goto	l1430
 25915  00A6B2                     
 25916                           ; BSR set to: 0
 25917                           ;display.c: 393: {;display.c: 394: display_content[1][cntr+5] = temp[cntr];
 25918                           
 25919                           ; BSR set to: 0
 25920  00A6B2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25921  00A6B4  0D01               	mullw	1
 25922  00A6B6  0EC8               	movlw	low display_prepare@temp
 25923  00A6B8  24F3               	addwf	prodl,w,c
 25924  00A6BA  6ED9               	movwf	fsr2l,c
 25925  00A6BC  0E00               	movlw	high display_prepare@temp
 25926  00A6BE  20F4               	addwfc	prodh,w,c
 25927  00A6C0  6EDA               	movwf	fsr2h,c
 25928  00A6C2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25929  00A6C4  6FC6               	movwf	??_display_prepare& (0+255),b
 25930  00A6C6  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25931  00A6C8  0E05               	movlw	5
 25932  00A6CA  27C6               	addwf	??_display_prepare& (0+255),f,b
 25933  00A6CC  0E00               	movlw	0
 25934  00A6CE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25935  00A6D0  0E56               	movlw	low (_display_content+20)
 25936  00A6D2  25C6               	addwf	??_display_prepare& (0+255),w,b
 25937  00A6D4  6EE1               	movwf	fsr1l,c
 25938  00A6D6  0E02               	movlw	high (_display_content+20)
 25939  00A6D8  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25940  00A6DA  6EE2               	movwf	fsr1h,c
 25941  00A6DC  CFDF FFE7          	movff	indf2,indf1
 25942                           
 25943                           ; BSR set to: 0
 25944  00A6E0  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 25945  00A6E2                     l1430:
 25946                           
 25947                           ; BSR set to: 0
 25948                           
 25949                           ; BSR set to: 0
 25950  00A6E2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25951  00A6E4  0D01               	mullw	1
 25952  00A6E6  0EC8               	movlw	low display_prepare@temp
 25953  00A6E8  24F3               	addwf	prodl,w,c
 25954  00A6EA  6ED9               	movwf	fsr2l,c
 25955  00A6EC  0E00               	movlw	high display_prepare@temp
 25956  00A6EE  20F4               	addwfc	prodh,w,c
 25957  00A6F0  6EDA               	movwf	fsr2h,c
 25958  00A6F2  50DF               	movf	indf2,w,c
 25959  00A6F4  A4D8               	btfss	status,2,c
 25960  00A6F6  D7DD               	goto	l1431
 25961                           
 25962                           ; BSR set to: 0
 25963                           ;display.c: 395: };display.c: 397: display_content[1][cntr+6] = '(';
 25964                           
 25965                           ; BSR set to: 0
 25966  00A6F8  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25967  00A6FA  6FC6               	movwf	??_display_prepare& (0+255),b
 25968  00A6FC  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 25969  00A6FE  0E06               	movlw	6
 25970  00A700  27C6               	addwf	??_display_prepare& (0+255),f,b
 25971  00A702  0E00               	movlw	0
 25972  00A704  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 25973  00A706  0E56               	movlw	low (_display_content+20)
 25974  00A708  25C6               	addwf	??_display_prepare& (0+255),w,b
 25975  00A70A  6ED9               	movwf	fsr2l,c
 25976  00A70C  0E02               	movlw	high (_display_content+20)
 25977  00A70E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 25978  00A710  6EDA               	movwf	fsr2h,c
 25979  00A712  0E28               	movlw	40
 25980  00A714  6EDF               	movwf	indf2,c
 25981                           
 25982                           ; BSR set to: 0
 25983                           ;display.c: 398: space = cntr + 7;
 25984  00A716  51D3               	movf	display_prepare@cntr& (0+255),w,b
 25985  00A718  0F07               	addlw	7
 25986  00A71A  6FD2               	movwf	display_prepare@space& (0+255),b
 25987                           
 25988                           ; BSR set to: 0
 25989                           ;display.c: 399: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 25990  00A71C  C171  F0B7         	movff	_os+13,__display_itoa_long@value	;volatile
 25991  00A720  C172  F0B8         	movff	_os+14,__display_itoa_long@value+1	;volatile
 25992  00A724  6BB9               	clrf	(__display_itoa_long@value+2)& (0+255),b
 25993  00A726  6BBA               	clrf	(__display_itoa_long@value+3)& (0+255),b
 25994  00A728  0E02               	movlw	2
 25995  00A72A  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 25996  00A72C  0EC8               	movlw	low display_prepare@temp
 25997  00A72E  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 25998  00A730  0E00               	movlw	high display_prepare@temp
 25999  00A732  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26000  00A734  EC71  F087         	call	__display_itoa_long	;wreg free
 26001                           
 26002                           ;display.c: 400: for(cntr=0; temp[cntr]; ++cntr)
 26003  00A738  0E00               	movlw	0
 26004  00A73A  0100               	movlb	0	; () banked
 26005  00A73C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26006  00A73E  D018               	goto	l1433
 26007  00A740                     
 26008                           ; BSR set to: 0
 26009                           ;display.c: 401: {;display.c: 402: display_content[1][cntr+space] = temp[cntr];
 26010                           
 26011                           ; BSR set to: 0
 26012  00A740  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26013  00A742  0D01               	mullw	1
 26014  00A744  0EC8               	movlw	low display_prepare@temp
 26015  00A746  24F3               	addwf	prodl,w,c
 26016  00A748  6ED9               	movwf	fsr2l,c
 26017  00A74A  0E00               	movlw	high display_prepare@temp
 26018  00A74C  20F4               	addwfc	prodh,w,c
 26019  00A74E  6EDA               	movwf	fsr2h,c
 26020  00A750  51D2               	movf	display_prepare@space& (0+255),w,b
 26021  00A752  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26022  00A756  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26023  00A758  27C6               	addwf	??_display_prepare& (0+255),f,b
 26024  00A75A  0E00               	movlw	0
 26025  00A75C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26026  00A75E  0E56               	movlw	low (_display_content+20)
 26027  00A760  25C6               	addwf	??_display_prepare& (0+255),w,b
 26028  00A762  6EE1               	movwf	fsr1l,c
 26029  00A764  0E02               	movlw	high (_display_content+20)
 26030  00A766  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26031  00A768  6EE2               	movwf	fsr1h,c
 26032  00A76A  CFDF FFE7          	movff	indf2,indf1
 26033                           
 26034                           ; BSR set to: 0
 26035  00A76E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26036  00A770                     l1433:
 26037                           
 26038                           ; BSR set to: 0
 26039                           
 26040                           ; BSR set to: 0
 26041  00A770  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26042  00A772  0D01               	mullw	1
 26043  00A774  0EC8               	movlw	low display_prepare@temp
 26044  00A776  24F3               	addwf	prodl,w,c
 26045  00A778  6ED9               	movwf	fsr2l,c
 26046  00A77A  0E00               	movlw	high display_prepare@temp
 26047  00A77C  20F4               	addwfc	prodh,w,c
 26048  00A77E  6EDA               	movwf	fsr2h,c
 26049  00A780  50DF               	movf	indf2,w,c
 26050  00A782  A4D8               	btfss	status,2,c
 26051  00A784  D7DD               	goto	l1434
 26052                           
 26053                           ; BSR set to: 0
 26054                           ;display.c: 403: };display.c: 404: display_content[1][cntr+space] = 0x01;
 26055                           
 26056                           ; BSR set to: 0
 26057  00A786  51D2               	movf	display_prepare@space& (0+255),w,b
 26058  00A788  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26059  00A78C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26060  00A78E  27C6               	addwf	??_display_prepare& (0+255),f,b
 26061  00A790  0E00               	movlw	0
 26062  00A792  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26063  00A794  0E56               	movlw	low (_display_content+20)
 26064  00A796  25C6               	addwf	??_display_prepare& (0+255),w,b
 26065  00A798  6ED9               	movwf	fsr2l,c
 26066  00A79A  0E02               	movlw	high (_display_content+20)
 26067  00A79C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26068  00A79E  6EDA               	movwf	fsr2h,c
 26069  00A7A0  0E01               	movlw	1
 26070  00A7A2  6EDF               	movwf	indf2,c
 26071                           
 26072                           ;display.c: 405: display_content[1][cntr+space+1] = ')';
 26073  00A7A4  51D2               	movf	display_prepare@space& (0+255),w,b
 26074  00A7A6  C0D3  F0C6         	movff	display_prepare@cntr,??_display_prepare
 26075  00A7AA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26076  00A7AC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26077  00A7AE  0E00               	movlw	0
 26078  00A7B0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26079  00A7B2  0E01               	movlw	1
 26080  00A7B4  27C6               	addwf	??_display_prepare& (0+255),f,b
 26081  00A7B6  0E00               	movlw	0
 26082  00A7B8  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26083  00A7BA  0E56               	movlw	low (_display_content+20)
 26084  00A7BC  25C6               	addwf	??_display_prepare& (0+255),w,b
 26085  00A7BE  6ED9               	movwf	fsr2l,c
 26086  00A7C0  0E02               	movlw	high (_display_content+20)
 26087  00A7C2  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26088  00A7C4  6EDA               	movwf	fsr2h,c
 26089  00A7C6  0E29               	movlw	41
 26090  00A7C8  6EDF               	movwf	indf2,c
 26091                           
 26092                           ; BSR set to: 0
 26093                           ;display.c: 407: _display_signed_itoa(os.divide_jump_size, temp);
 26094  00A7CA  C17E  F08F         	movff	_os+26,__display_signed_itoa@value	;volatile
 26095  00A7CE  C17F  F090         	movff	_os+27,__display_signed_itoa@value+1	;volatile
 26096  00A7D2  0EC8               	movlw	low display_prepare@temp
 26097  00A7D4  6F91               	movwf	__display_signed_itoa@text& (0+255),b
 26098  00A7D6  0E00               	movlw	high display_prepare@temp
 26099  00A7D8  6F92               	movwf	(__display_signed_itoa@text+1)& (0+255),b
 26100  00A7DA  EC62  F0A9         	call	__display_signed_itoa	;wreg free
 26101                           
 26102                           ;display.c: 408: for(cntr=0; temp[cntr]; ++cntr)
 26103  00A7DE  0E00               	movlw	0
 26104  00A7E0  0100               	movlb	0	; () banked
 26105  00A7E2  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26106  00A7E4  D018               	goto	l1436
 26107  00A7E6                     
 26108                           ; BSR set to: 0
 26109                           ;display.c: 409: {;display.c: 410: display_content[2][cntr+11] = temp[cntr];
 26110                           
 26111                           ; BSR set to: 0
 26112  00A7E6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26113  00A7E8  0D01               	mullw	1
 26114  00A7EA  0EC8               	movlw	low display_prepare@temp
 26115  00A7EC  24F3               	addwf	prodl,w,c
 26116  00A7EE  6ED9               	movwf	fsr2l,c
 26117  00A7F0  0E00               	movlw	high display_prepare@temp
 26118  00A7F2  20F4               	addwfc	prodh,w,c
 26119  00A7F4  6EDA               	movwf	fsr2h,c
 26120  00A7F6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26121  00A7F8  6FC6               	movwf	??_display_prepare& (0+255),b
 26122  00A7FA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26123  00A7FC  0E0B               	movlw	11
 26124  00A7FE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26125  00A800  0E00               	movlw	0
 26126  00A802  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26127  00A804  0E6A               	movlw	low (_display_content+40)
 26128  00A806  25C6               	addwf	??_display_prepare& (0+255),w,b
 26129  00A808  6EE1               	movwf	fsr1l,c
 26130  00A80A  0E02               	movlw	high (_display_content+40)
 26131  00A80C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26132  00A80E  6EE2               	movwf	fsr1h,c
 26133  00A810  CFDF FFE7          	movff	indf2,indf1
 26134                           
 26135                           ; BSR set to: 0
 26136  00A814  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26137  00A816                     l1436:
 26138                           
 26139                           ; BSR set to: 0
 26140                           
 26141                           ; BSR set to: 0
 26142  00A816  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26143  00A818  0D01               	mullw	1
 26144  00A81A  0EC8               	movlw	low display_prepare@temp
 26145  00A81C  24F3               	addwf	prodl,w,c
 26146  00A81E  6ED9               	movwf	fsr2l,c
 26147  00A820  0E00               	movlw	high display_prepare@temp
 26148  00A822  20F4               	addwfc	prodh,w,c
 26149  00A824  6EDA               	movwf	fsr2h,c
 26150  00A826  50DF               	movf	indf2,w,c
 26151  00A828  B4D8               	btfsc	status,2,c
 26152  00A82A  D3A6               	goto	l1399
 26153  00A82C  D7DC               	goto	l1437
 26154  00A82E                     
 26155                           ; BSR set to: 0
 26156                           ;display.c: 415: memcpy(display_content, dc_arc1, sizeof display_content);
 26157                           
 26158                           ; BSR set to: 0
 26159  00A82E  0E42               	movlw	low _display_content
 26160  00A830  6F60               	movwf	memcpy@d1& (0+255),b
 26161  00A832  0E02               	movlw	high _display_content
 26162  00A834  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26163  00A836  0EDE               	movlw	low _dc_arc1
 26164  00A838  6F62               	movwf	memcpy@s1& (0+255),b
 26165  00A83A  0E9E               	movlw	high _dc_arc1
 26166  00A83C  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26167  00A83E  0E00               	movlw	0
 26168  00A840  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26169  00A842  0E50               	movlw	80
 26170  00A844  6F64               	movwf	memcpy@n& (0+255),b
 26171  00A846  ECF2  F0A3         	call	_memcpy	;wreg free
 26172                           
 26173                           ;display.c: 416: switch(os.displayState)
 26174  00A84A  D008               	goto	l1440
 26175  00A84C                     
 26176                           ;display.c: 419: display_content[2][12] = '>';
 26177  00A84C  0E3E               	movlw	62
 26178  00A84E  0102               	movlb	2	; () banked
 26179  00A850  6F76               	movwf	(_display_content+52)& (0+255),b
 26180                           
 26181                           ;display.c: 420: break;
 26182  00A852  D00C               	goto	l1442
 26183  00A854                     
 26184                           ;display.c: 422: display_content[3][12] = '>';
 26185                           
 26186                           ; BSR set to: 2
 26187  00A854  0E3E               	movlw	62
 26188  00A856  0102               	movlb	2	; () banked
 26189  00A858  6F8A               	movwf	(_display_content+72)& (0+255),b
 26190                           
 26191                           ; BSR set to: 2
 26192                           ;display.c: 424: }
 26193                           
 26194                           ;display.c: 423: break;
 26195  00A85A  D008               	goto	l1442
 26196  00A85C                     l1440:
 26197                           
 26198                           ; BSR set to: 2
 26199  00A85C  0101               	movlb	1	; () banked
 26200  00A85E  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26201                           
 26202                           ; Switch size 1, requested type "space"
 26203                           ; Number of cases is 2, Range of values is 81 to 82
 26204                           ; switch strategies available:
 26205                           ; Name         Instructions Cycles
 26206                           ; simple_byte            7     4 (average)
 26207                           ;	Chosen strategy is simple_byte
 26208  00A860  0A51               	xorlw	81	; case 81
 26209  00A862  B4D8               	btfsc	status,2,c
 26210  00A864  D7F3               	goto	l1441
 26211  00A866  0A03               	xorlw	3	; case 82
 26212  00A868  B4D8               	btfsc	status,2,c
 26213  00A86A  D7F4               	goto	l1443
 26214  00A86C                     l1442:
 26215                           
 26216                           ;display.c: 427: _display_itoa_long(os.arc_size, 2, temp);
 26217                           
 26218                           ; BSR set to: 1
 26219  00A86C  C182  F0B7         	movff	_os+30,__display_itoa_long@value	;volatile
 26220  00A870  C183  F0B8         	movff	_os+31,__display_itoa_long@value+1	;volatile
 26221  00A874  C184  F0B9         	movff	_os+32,__display_itoa_long@value+2	;volatile
 26222  00A878  C185  F0BA         	movff	_os+33,__display_itoa_long@value+3	;volatile
 26223  00A87C  0E02               	movlw	2
 26224  00A87E  0100               	movlb	0	; () banked
 26225  00A880  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26226  00A882  0EC8               	movlw	low display_prepare@temp
 26227  00A884  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26228  00A886  0E00               	movlw	high display_prepare@temp
 26229  00A888  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26230  00A88A  EC71  F087         	call	__display_itoa_long	;wreg free
 26231                           
 26232                           ;display.c: 428: for(cntr=0; temp[cntr]; ++cntr)
 26233  00A88E  0E00               	movlw	0
 26234  00A890  0100               	movlb	0	; () banked
 26235  00A892  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26236  00A894  D018               	goto	l1444
 26237  00A896                     
 26238                           ; BSR set to: 0
 26239                           ;display.c: 429: {;display.c: 430: display_content[1][10+cntr] = temp[cntr];
 26240                           
 26241                           ; BSR set to: 0
 26242  00A896  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26243  00A898  0D01               	mullw	1
 26244  00A89A  0EC8               	movlw	low display_prepare@temp
 26245  00A89C  24F3               	addwf	prodl,w,c
 26246  00A89E  6ED9               	movwf	fsr2l,c
 26247  00A8A0  0E00               	movlw	high display_prepare@temp
 26248  00A8A2  20F4               	addwfc	prodh,w,c
 26249  00A8A4  6EDA               	movwf	fsr2h,c
 26250  00A8A6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26251  00A8A8  6FC6               	movwf	??_display_prepare& (0+255),b
 26252  00A8AA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26253  00A8AC  0E0A               	movlw	10
 26254  00A8AE  27C6               	addwf	??_display_prepare& (0+255),f,b
 26255  00A8B0  0E00               	movlw	0
 26256  00A8B2  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26257  00A8B4  0E56               	movlw	low (_display_content+20)
 26258  00A8B6  25C6               	addwf	??_display_prepare& (0+255),w,b
 26259  00A8B8  6EE1               	movwf	fsr1l,c
 26260  00A8BA  0E02               	movlw	high (_display_content+20)
 26261  00A8BC  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26262  00A8BE  6EE2               	movwf	fsr1h,c
 26263  00A8C0  CFDF FFE7          	movff	indf2,indf1
 26264                           
 26265                           ; BSR set to: 0
 26266  00A8C4  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26267  00A8C6                     l1444:
 26268                           
 26269                           ; BSR set to: 0
 26270                           
 26271                           ; BSR set to: 0
 26272  00A8C6  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26273  00A8C8  0D01               	mullw	1
 26274  00A8CA  0EC8               	movlw	low display_prepare@temp
 26275  00A8CC  24F3               	addwf	prodl,w,c
 26276  00A8CE  6ED9               	movwf	fsr2l,c
 26277  00A8D0  0E00               	movlw	high display_prepare@temp
 26278  00A8D2  20F4               	addwfc	prodh,w,c
 26279  00A8D4  6EDA               	movwf	fsr2h,c
 26280  00A8D6  50DF               	movf	indf2,w,c
 26281  00A8D8  A4D8               	btfss	status,2,c
 26282  00A8DA  D7DD               	goto	l1445
 26283                           
 26284                           ; BSR set to: 0
 26285                           ;display.c: 431: };display.c: 432: display_content[1][10+cntr] = 0x01;
 26286                           
 26287                           ; BSR set to: 0
 26288  00A8DC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26289  00A8DE  6FC6               	movwf	??_display_prepare& (0+255),b
 26290  00A8E0  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26291  00A8E2  0E0A               	movlw	10
 26292  00A8E4  27C6               	addwf	??_display_prepare& (0+255),f,b
 26293  00A8E6  0E00               	movlw	0
 26294  00A8E8  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26295  00A8EA  0E56               	movlw	low (_display_content+20)
 26296  00A8EC  25C6               	addwf	??_display_prepare& (0+255),w,b
 26297  00A8EE  6ED9               	movwf	fsr2l,c
 26298  00A8F0  0E02               	movlw	high (_display_content+20)
 26299  00A8F2  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26300  00A8F4  6EDA               	movwf	fsr2h,c
 26301  00A8F6  0E01               	movlw	1
 26302  00A8F8  6EDF               	movwf	indf2,c
 26303                           
 26304                           ; BSR set to: 0
 26305                           ;display.c: 435: _display_itoa(os.arc_step_size, 2, temp);
 26306  00A8FA  C180  F09F         	movff	_os+28,__display_itoa@value	;volatile
 26307  00A8FE  C181  F0A0         	movff	_os+29,__display_itoa@value+1	;volatile
 26308  00A902  0E02               	movlw	2
 26309  00A904  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26310  00A906  0EC8               	movlw	low display_prepare@temp
 26311  00A908  6FA2               	movwf	__display_itoa@text& (0+255),b
 26312  00A90A  0E00               	movlw	high display_prepare@temp
 26313  00A90C  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26314  00A90E  ECD7  F071         	call	__display_itoa	;wreg free
 26315                           
 26316                           ;display.c: 436: if(os.arc_step_size>999)
 26317  00A912  0EE8               	movlw	232
 26318  00A914  0101               	movlb	1	; () banked
 26319  00A916  5D80               	subwf	(_os+28)& (0+255),w,b	;volatile
 26320  00A918  0E03               	movlw	3
 26321  00A91A  5981               	subwfb	(_os+29)& (0+255),w,b	;volatile
 26322  00A91C  A0D8               	btfss	status,0,c
 26323  00A91E  D002               	goto	l1447
 26324                           
 26325                           ; BSR set to: 1
 26326                           ;display.c: 437: space = 0;
 26327  00A920  0E00               	movlw	0
 26328  00A922  D001               	goto	L24
 26329  00A924                     l1447:
 26330                           
 26331                           ;display.c: 438: else;display.c: 439: space = 1;
 26332                           
 26333                           ; BSR set to: 0
 26334  00A924  0E01               	movlw	1
 26335  00A926                     L24:
 26336  00A926  0100               	movlb	0	; () banked
 26337  00A928  6FD2               	movwf	display_prepare@space& (0+255),b
 26338                           
 26339                           ; BSR set to: 0
 26340                           ;display.c: 440: for(cntr=0; temp[cntr]; ++cntr)
 26341  00A92A  0E00               	movlw	0
 26342  00A92C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26343  00A92E  D018               	goto	l1449
 26344  00A930                     
 26345                           ; BSR set to: 0
 26346                           ;display.c: 441: {;display.c: 442: display_content[3][space+cntr] = temp[cntr];
 26347                           
 26348                           ; BSR set to: 0
 26349  00A930  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26350  00A932  0D01               	mullw	1
 26351  00A934  0EC8               	movlw	low display_prepare@temp
 26352  00A936  24F3               	addwf	prodl,w,c
 26353  00A938  6ED9               	movwf	fsr2l,c
 26354  00A93A  0E00               	movlw	high display_prepare@temp
 26355  00A93C  20F4               	addwfc	prodh,w,c
 26356  00A93E  6EDA               	movwf	fsr2h,c
 26357  00A940  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26358  00A942  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26359  00A946  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26360  00A948  27C6               	addwf	??_display_prepare& (0+255),f,b
 26361  00A94A  0E00               	movlw	0
 26362  00A94C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26363  00A94E  0E7E               	movlw	low (_display_content+60)
 26364  00A950  25C6               	addwf	??_display_prepare& (0+255),w,b
 26365  00A952  6EE1               	movwf	fsr1l,c
 26366  00A954  0E02               	movlw	high (_display_content+60)
 26367  00A956  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26368  00A958  6EE2               	movwf	fsr1h,c
 26369  00A95A  CFDF FFE7          	movff	indf2,indf1
 26370                           
 26371                           ; BSR set to: 0
 26372  00A95E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26373  00A960                     l1449:
 26374                           
 26375                           ; BSR set to: 0
 26376                           
 26377                           ; BSR set to: 0
 26378  00A960  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26379  00A962  0D01               	mullw	1
 26380  00A964  0EC8               	movlw	low display_prepare@temp
 26381  00A966  24F3               	addwf	prodl,w,c
 26382  00A968  6ED9               	movwf	fsr2l,c
 26383  00A96A  0E00               	movlw	high display_prepare@temp
 26384  00A96C  20F4               	addwfc	prodh,w,c
 26385  00A96E  6EDA               	movwf	fsr2h,c
 26386  00A970  50DF               	movf	indf2,w,c
 26387  00A972  A4D8               	btfss	status,2,c
 26388  00A974  D7DD               	goto	l1450
 26389                           
 26390                           ; BSR set to: 0
 26391                           ;display.c: 443: };display.c: 444: display_content[3][space+cntr] = 0x01 ;
 26392                           
 26393                           ; BSR set to: 0
 26394  00A976  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26395  00A978  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26396  00A97C  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26397  00A97E  27C6               	addwf	??_display_prepare& (0+255),f,b
 26398  00A980  0E00               	movlw	0
 26399  00A982  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26400  00A984  0E7E               	movlw	low (_display_content+60)
 26401  00A986  25C6               	addwf	??_display_prepare& (0+255),w,b
 26402  00A988  6ED9               	movwf	fsr2l,c
 26403  00A98A  0E02               	movlw	high (_display_content+60)
 26404  00A98C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26405  00A98E  6EDA               	movwf	fsr2h,c
 26406  00A990  0E01               	movlw	1
 26407  00A992  D25B               	goto	L27
 26408  00A994                     
 26409                           ; BSR set to: 0
 26410                           ;display.c: 449: memcpy(display_content, dc_arc2, sizeof display_content);
 26411                           
 26412                           ; BSR set to: 0
 26413  00A994  0E42               	movlw	low _display_content
 26414  00A996  6F60               	movwf	memcpy@d1& (0+255),b
 26415  00A998  0E02               	movlw	high _display_content
 26416  00A99A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26417  00A99C  0E8E               	movlw	low _dc_arc2
 26418  00A99E  6F62               	movwf	memcpy@s1& (0+255),b
 26419  00A9A0  0E9E               	movlw	high _dc_arc2
 26420  00A9A2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26421  00A9A4  0E00               	movlw	0
 26422  00A9A6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26423  00A9A8  0E50               	movlw	80
 26424  00A9AA  6F64               	movwf	memcpy@n& (0+255),b
 26425  00A9AC  ECF2  F0A3         	call	_memcpy	;wreg free
 26426                           
 26427                           ;display.c: 450: switch(os.displayState)
 26428  00A9B0  D025               	goto	l1453
 26429  00A9B2                     
 26430                           ;display.c: 453: display_content[2][6] = 'W';
 26431  00A9B2  0E57               	movlw	87
 26432  00A9B4  0102               	movlb	2	; () banked
 26433  00A9B6  6F70               	movwf	(_display_content+46)& (0+255),b
 26434                           
 26435                           ;display.c: 454: display_content[2][7] = ' ';
 26436  00A9B8  0E20               	movlw	32
 26437  00A9BA  6F71               	movwf	(_display_content+47)& (0+255),b
 26438                           
 26439                           ;display.c: 455: break;
 26440  00A9BC  D027               	goto	l1455
 26441  00A9BE                     
 26442                           ;display.c: 457: memcpy(display_content[2], "        ", 8);
 26443                           
 26444                           ; BSR set to: 2
 26445  00A9BE  0E6A               	movlw	low (_display_content+40)
 26446  00A9C0  0100               	movlb	0	; () banked
 26447  00A9C2  6F60               	movwf	memcpy@d1& (0+255),b
 26448  00A9C4  0E02               	movlw	high (_display_content+40)
 26449  00A9C6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26450  00A9C8  0E14               	movlw	low STR_1
 26451  00A9CA  6F62               	movwf	memcpy@s1& (0+255),b
 26452  00A9CC  0EA3               	movlw	high STR_1
 26453  00A9CE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26454  00A9D0  0E00               	movlw	0
 26455  00A9D2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26456  00A9D4  0E08               	movlw	8
 26457  00A9D6  6F64               	movwf	memcpy@n& (0+255),b
 26458  00A9D8  ECF2  F0A3         	call	_memcpy	;wreg free
 26459                           
 26460                           ;display.c: 458: memcpy(display_content[3], "Cancel", 6);
 26461  00A9DC  0E7E               	movlw	low (_display_content+60)
 26462  00A9DE  0100               	movlb	0	; () banked
 26463  00A9E0  6F60               	movwf	memcpy@d1& (0+255),b
 26464  00A9E2  0E02               	movlw	high (_display_content+60)
 26465  00A9E4  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26466  00A9E6  0E1D               	movlw	low STR_2
 26467  00A9E8  6F62               	movwf	memcpy@s1& (0+255),b
 26468  00A9EA  0EA3               	movlw	high STR_2
 26469  00A9EC  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26470  00A9EE  0E00               	movlw	0
 26471  00A9F0  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26472  00A9F2  0E06               	movlw	6
 26473  00A9F4  6F64               	movwf	memcpy@n& (0+255),b
 26474  00A9F6  ECF2  F0A3         	call	_memcpy	;wreg free
 26475                           
 26476                           ;display.c: 460: }
 26477                           
 26478                           ;display.c: 459: break;
 26479  00A9FA  D008               	goto	l1455
 26480  00A9FC                     l1453:
 26481  00A9FC  0101               	movlb	1	; () banked
 26482  00A9FE  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26483                           
 26484                           ; Switch size 1, requested type "space"
 26485                           ; Number of cases is 2, Range of values is 98 to 99
 26486                           ; switch strategies available:
 26487                           ; Name         Instructions Cycles
 26488                           ; simple_byte            7     4 (average)
 26489                           ;	Chosen strategy is simple_byte
 26490  00AA00  0A62               	xorlw	98	; case 98
 26491  00AA02  B4D8               	btfsc	status,2,c
 26492  00AA04  D7DC               	goto	l1456
 26493  00AA06  0A01               	xorlw	1	; case 99
 26494  00AA08  B4D8               	btfsc	status,2,c
 26495  00AA0A  D7D3               	goto	l1454
 26496  00AA0C                     l1455:
 26497                           
 26498                           ;display.c: 463: _display_itoa_long(os.arc_size, 2, temp);
 26499                           
 26500                           ; BSR set to: 1
 26501  00AA0C  C182  F0B7         	movff	_os+30,__display_itoa_long@value	;volatile
 26502  00AA10  C183  F0B8         	movff	_os+31,__display_itoa_long@value+1	;volatile
 26503  00AA14  C184  F0B9         	movff	_os+32,__display_itoa_long@value+2	;volatile
 26504  00AA18  C185  F0BA         	movff	_os+33,__display_itoa_long@value+3	;volatile
 26505  00AA1C  0E02               	movlw	2
 26506  00AA1E  0100               	movlb	0	; () banked
 26507  00AA20  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26508  00AA22  0EC8               	movlw	low display_prepare@temp
 26509  00AA24  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26510  00AA26  0E00               	movlw	high display_prepare@temp
 26511  00AA28  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26512  00AA2A  EC71  F087         	call	__display_itoa_long	;wreg free
 26513                           
 26514                           ;display.c: 464: for(cntr=0; temp[cntr]; ++cntr)
 26515  00AA2E  0E00               	movlw	0
 26516  00AA30  0100               	movlb	0	; () banked
 26517  00AA32  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26518  00AA34  D018               	goto	l1457
 26519  00AA36                     
 26520                           ; BSR set to: 0
 26521                           ;display.c: 465: {;display.c: 466: display_content[0][10+cntr] = temp[cntr];
 26522                           
 26523                           ; BSR set to: 0
 26524  00AA36  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26525  00AA38  0D01               	mullw	1
 26526  00AA3A  0EC8               	movlw	low display_prepare@temp
 26527  00AA3C  24F3               	addwf	prodl,w,c
 26528  00AA3E  6ED9               	movwf	fsr2l,c
 26529  00AA40  0E00               	movlw	high display_prepare@temp
 26530  00AA42  20F4               	addwfc	prodh,w,c
 26531  00AA44  6EDA               	movwf	fsr2h,c
 26532  00AA46  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26533  00AA48  6FC6               	movwf	??_display_prepare& (0+255),b
 26534  00AA4A  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26535  00AA4C  0E0A               	movlw	10
 26536  00AA4E  27C6               	addwf	??_display_prepare& (0+255),f,b
 26537  00AA50  0E00               	movlw	0
 26538  00AA52  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26539  00AA54  0E42               	movlw	low _display_content
 26540  00AA56  25C6               	addwf	??_display_prepare& (0+255),w,b
 26541  00AA58  6EE1               	movwf	fsr1l,c
 26542  00AA5A  0E02               	movlw	high _display_content
 26543  00AA5C  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26544  00AA5E  6EE2               	movwf	fsr1h,c
 26545  00AA60  CFDF FFE7          	movff	indf2,indf1
 26546                           
 26547                           ; BSR set to: 0
 26548  00AA64  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26549  00AA66                     l1457:
 26550                           
 26551                           ; BSR set to: 0
 26552                           
 26553                           ; BSR set to: 0
 26554  00AA66  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26555  00AA68  0D01               	mullw	1
 26556  00AA6A  0EC8               	movlw	low display_prepare@temp
 26557  00AA6C  24F3               	addwf	prodl,w,c
 26558  00AA6E  6ED9               	movwf	fsr2l,c
 26559  00AA70  0E00               	movlw	high display_prepare@temp
 26560  00AA72  20F4               	addwfc	prodh,w,c
 26561  00AA74  6EDA               	movwf	fsr2h,c
 26562  00AA76  50DF               	movf	indf2,w,c
 26563  00AA78  A4D8               	btfss	status,2,c
 26564  00AA7A  D7DD               	goto	l1458
 26565                           
 26566                           ; BSR set to: 0
 26567                           ;display.c: 467: };display.c: 468: display_content[0][10+cntr] = 0x01;
 26568                           
 26569                           ; BSR set to: 0
 26570  00AA7C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26571  00AA7E  6FC6               	movwf	??_display_prepare& (0+255),b
 26572  00AA80  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26573  00AA82  0E0A               	movlw	10
 26574  00AA84  27C6               	addwf	??_display_prepare& (0+255),f,b
 26575  00AA86  0E00               	movlw	0
 26576  00AA88  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26577  00AA8A  0E42               	movlw	low _display_content
 26578  00AA8C  25C6               	addwf	??_display_prepare& (0+255),w,b
 26579  00AA8E  6ED9               	movwf	fsr2l,c
 26580  00AA90  0E02               	movlw	high _display_content
 26581  00AA92  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26582  00AA94  6EDA               	movwf	fsr2h,c
 26583  00AA96  0E01               	movlw	1
 26584  00AA98  6EDF               	movwf	indf2,c
 26585                           
 26586                           ; BSR set to: 0
 26587                           ;display.c: 471: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26588  00AA9A  C171  F0B7         	movff	_os+13,__display_itoa_long@value	;volatile
 26589  00AA9E  C172  F0B8         	movff	_os+14,__display_itoa_long@value+1	;volatile
 26590  00AAA2  6BB9               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26591  00AAA4  6BBA               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26592  00AAA6  0E02               	movlw	2
 26593  00AAA8  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26594  00AAAA  0EC8               	movlw	low display_prepare@temp
 26595  00AAAC  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26596  00AAAE  0E00               	movlw	high display_prepare@temp
 26597  00AAB0  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26598  00AAB2  EC71  F087         	call	__display_itoa_long	;wreg free
 26599                           
 26600                           ;display.c: 472: space = 6-strlen(temp);
 26601  00AAB6  0EC8               	movlw	low display_prepare@temp
 26602  00AAB8  0100               	movlb	0	; () banked
 26603  00AABA  6F60               	movwf	strlen@s& (0+255),b
 26604  00AABC  0E00               	movlw	high display_prepare@temp
 26605  00AABE  6F61               	movwf	(strlen@s+1)& (0+255),b
 26606  00AAC0  EC2A  F0AA         	call	_strlen	;wreg free
 26607  00AAC4  0100               	movlb	0	; () banked
 26608  00AAC6  5160               	movf	?_strlen& (0+255),w,b
 26609  00AAC8  0800               	sublw	0
 26610  00AACA  0F06               	addlw	6
 26611  00AACC  6FD2               	movwf	display_prepare@space& (0+255),b
 26612                           
 26613                           ; BSR set to: 0
 26614                           ;display.c: 473: for(cntr=0; temp[cntr]; ++cntr)
 26615  00AACE  0E00               	movlw	0
 26616  00AAD0  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26617  00AAD2  D01C               	goto	l1460
 26618  00AAD4                     
 26619                           ; BSR set to: 0
 26620                           ;display.c: 474: {;display.c: 475: display_content[1][13+space+cntr] = temp[cntr];
 26621                           
 26622                           ; BSR set to: 0
 26623  00AAD4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26624  00AAD6  0D01               	mullw	1
 26625  00AAD8  0EC8               	movlw	low display_prepare@temp
 26626  00AADA  24F3               	addwf	prodl,w,c
 26627  00AADC  6ED9               	movwf	fsr2l,c
 26628  00AADE  0E00               	movlw	high display_prepare@temp
 26629  00AAE0  20F4               	addwfc	prodh,w,c
 26630  00AAE2  6EDA               	movwf	fsr2h,c
 26631  00AAE4  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26632  00AAE6  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 26633  00AAEA  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26634  00AAEC  27C6               	addwf	??_display_prepare& (0+255),f,b
 26635  00AAEE  0E00               	movlw	0
 26636  00AAF0  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26637  00AAF2  0E0D               	movlw	13
 26638  00AAF4  27C6               	addwf	??_display_prepare& (0+255),f,b
 26639  00AAF6  0E00               	movlw	0
 26640  00AAF8  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26641  00AAFA  0E56               	movlw	low (_display_content+20)
 26642  00AAFC  25C6               	addwf	??_display_prepare& (0+255),w,b
 26643  00AAFE  6EE1               	movwf	fsr1l,c
 26644  00AB00  0E02               	movlw	high (_display_content+20)
 26645  00AB02  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26646  00AB04  6EE2               	movwf	fsr1h,c
 26647  00AB06  CFDF FFE7          	movff	indf2,indf1
 26648                           
 26649                           ; BSR set to: 0
 26650  00AB0A  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26651  00AB0C                     l1460:
 26652                           
 26653                           ; BSR set to: 0
 26654                           
 26655                           ; BSR set to: 0
 26656  00AB0C  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26657  00AB0E  0D01               	mullw	1
 26658  00AB10  0EC8               	movlw	low display_prepare@temp
 26659  00AB12  24F3               	addwf	prodl,w,c
 26660  00AB14  6ED9               	movwf	fsr2l,c
 26661  00AB16  0E00               	movlw	high display_prepare@temp
 26662  00AB18  20F4               	addwfc	prodh,w,c
 26663  00AB1A  6EDA               	movwf	fsr2h,c
 26664  00AB1C  50DF               	movf	indf2,w,c
 26665  00AB1E  A4D8               	btfss	status,2,c
 26666  00AB20  D7D9               	goto	l1461
 26667                           
 26668                           ; BSR set to: 0
 26669                           ;display.c: 476: };display.c: 479: _display_itoa(motor_speed_from_index(os.arc_speed), 2
      +                          , temp);
 26670                           
 26671                           ; BSR set to: 0
 26672  00AB22  C186  F09D         	movff	_os+34,motor_speed_from_index@speed_index	;volatile
 26673  00AB26  C187  F09E         	movff	_os+35,motor_speed_from_index@speed_index+1	;volatile
 26674  00AB2A  EC4E  F0AE         	call	_motor_speed_from_index	;wreg free
 26675  00AB2E  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 26676  00AB32  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 26677  00AB36  0E02               	movlw	2
 26678  00AB38  0100               	movlb	0	; () banked
 26679  00AB3A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 26680  00AB3C  0EC8               	movlw	low display_prepare@temp
 26681  00AB3E  6FA2               	movwf	__display_itoa@text& (0+255),b
 26682  00AB40  0E00               	movlw	high display_prepare@temp
 26683  00AB42  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 26684  00AB44  ECD7  F071         	call	__display_itoa	;wreg free
 26685                           
 26686                           ;display.c: 480: for(cntr=0; temp[cntr]; ++cntr)
 26687  00AB48  0E00               	movlw	0
 26688  00AB4A  0100               	movlb	0	; () banked
 26689  00AB4C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26690  00AB4E  D018               	goto	l1463
 26691  00AB50                     
 26692                           ; BSR set to: 0
 26693                           ;display.c: 481: {;display.c: 482: display_content[3][11+cntr] = temp[cntr];
 26694                           
 26695                           ; BSR set to: 0
 26696  00AB50  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26697  00AB52  0D01               	mullw	1
 26698  00AB54  0EC8               	movlw	low display_prepare@temp
 26699  00AB56  24F3               	addwf	prodl,w,c
 26700  00AB58  6ED9               	movwf	fsr2l,c
 26701  00AB5A  0E00               	movlw	high display_prepare@temp
 26702  00AB5C  20F4               	addwfc	prodh,w,c
 26703  00AB5E  6EDA               	movwf	fsr2h,c
 26704  00AB60  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26705  00AB62  6FC6               	movwf	??_display_prepare& (0+255),b
 26706  00AB64  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26707  00AB66  0E0B               	movlw	11
 26708  00AB68  27C6               	addwf	??_display_prepare& (0+255),f,b
 26709  00AB6A  0E00               	movlw	0
 26710  00AB6C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26711  00AB6E  0E7E               	movlw	low (_display_content+60)
 26712  00AB70  25C6               	addwf	??_display_prepare& (0+255),w,b
 26713  00AB72  6EE1               	movwf	fsr1l,c
 26714  00AB74  0E02               	movlw	high (_display_content+60)
 26715  00AB76  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26716  00AB78  6EE2               	movwf	fsr1h,c
 26717  00AB7A  CFDF FFE7          	movff	indf2,indf1
 26718                           
 26719                           ; BSR set to: 0
 26720  00AB7E  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26721  00AB80                     l1463:
 26722                           
 26723                           ; BSR set to: 0
 26724                           
 26725                           ; BSR set to: 0
 26726  00AB80  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26727  00AB82  0D01               	mullw	1
 26728  00AB84  0EC8               	movlw	low display_prepare@temp
 26729  00AB86  24F3               	addwf	prodl,w,c
 26730  00AB88  6ED9               	movwf	fsr2l,c
 26731  00AB8A  0E00               	movlw	high display_prepare@temp
 26732  00AB8C  20F4               	addwfc	prodh,w,c
 26733  00AB8E  6EDA               	movwf	fsr2h,c
 26734  00AB90  50DF               	movf	indf2,w,c
 26735  00AB92  A4D8               	btfss	status,2,c
 26736  00AB94  D7DD               	goto	l1464
 26737  00AB96  D12D               	goto	L89
 26738  00AB98                     
 26739                           ; BSR set to: 0
 26740                           ;display.c: 495: memcpy(display_content, dc_zero, sizeof display_content);
 26741                           
 26742                           ; BSR set to: 0
 26743  00AB98  0E42               	movlw	low _display_content
 26744  00AB9A  6F60               	movwf	memcpy@d1& (0+255),b
 26745  00AB9C  0E02               	movlw	high _display_content
 26746  00AB9E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26747  00ABA0  0E3E               	movlw	low _dc_zero
 26748  00ABA2  6F62               	movwf	memcpy@s1& (0+255),b
 26749  00ABA4  0E9E               	movlw	high _dc_zero
 26750  00ABA6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26751  00ABA8  0E00               	movlw	0
 26752  00ABAA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26753  00ABAC  0E50               	movlw	80
 26754  00ABAE  6F64               	movwf	memcpy@n& (0+255),b
 26755  00ABB0  ECF2  F0A3         	call	_memcpy	;wreg free
 26756                           
 26757                           ;display.c: 498: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26758  00ABB4  C171  F0B7         	movff	_os+13,__display_itoa_long@value	;volatile
 26759  00ABB8  C172  F0B8         	movff	_os+14,__display_itoa_long@value+1	;volatile
 26760  00ABBC  0100               	movlb	0	; () banked
 26761  00ABBE  6BB9               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26762  00ABC0  6BBA               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26763  00ABC2  0E02               	movlw	2
 26764  00ABC4  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26765  00ABC6  0EC8               	movlw	low display_prepare@temp
 26766  00ABC8  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26767  00ABCA  0E00               	movlw	high display_prepare@temp
 26768  00ABCC  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26769  00ABCE  EC71  F087         	call	__display_itoa_long	;wreg free
 26770                           
 26771                           ;display.c: 499: for(cntr=0; temp[cntr]; ++cntr)
 26772  00ABD2  0E00               	movlw	0
 26773  00ABD4  0100               	movlb	0	; () banked
 26774  00ABD6  6FD3               	movwf	display_prepare@cntr& (0+255),b
 26775  00ABD8  D018               	goto	l1467
 26776  00ABDA                     
 26777                           ; BSR set to: 0
 26778                           ;display.c: 500: {;display.c: 501: display_content[1][13+cntr] = temp[cntr];
 26779                           
 26780                           ; BSR set to: 0
 26781  00ABDA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26782  00ABDC  0D01               	mullw	1
 26783  00ABDE  0EC8               	movlw	low display_prepare@temp
 26784  00ABE0  24F3               	addwf	prodl,w,c
 26785  00ABE2  6ED9               	movwf	fsr2l,c
 26786  00ABE4  0E00               	movlw	high display_prepare@temp
 26787  00ABE6  20F4               	addwfc	prodh,w,c
 26788  00ABE8  6EDA               	movwf	fsr2h,c
 26789  00ABEA  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26790  00ABEC  6FC6               	movwf	??_display_prepare& (0+255),b
 26791  00ABEE  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26792  00ABF0  0E0D               	movlw	13
 26793  00ABF2  27C6               	addwf	??_display_prepare& (0+255),f,b
 26794  00ABF4  0E00               	movlw	0
 26795  00ABF6  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26796  00ABF8  0E56               	movlw	low (_display_content+20)
 26797  00ABFA  25C6               	addwf	??_display_prepare& (0+255),w,b
 26798  00ABFC  6EE1               	movwf	fsr1l,c
 26799  00ABFE  0E02               	movlw	high (_display_content+20)
 26800  00AC00  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 26801  00AC02  6EE2               	movwf	fsr1h,c
 26802  00AC04  CFDF FFE7          	movff	indf2,indf1
 26803                           
 26804                           ; BSR set to: 0
 26805  00AC08  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 26806  00AC0A                     l1467:
 26807                           
 26808                           ; BSR set to: 0
 26809                           
 26810                           ; BSR set to: 0
 26811  00AC0A  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26812  00AC0C  0D01               	mullw	1
 26813  00AC0E  0EC8               	movlw	low display_prepare@temp
 26814  00AC10  24F3               	addwf	prodl,w,c
 26815  00AC12  6ED9               	movwf	fsr2l,c
 26816  00AC14  0E00               	movlw	high display_prepare@temp
 26817  00AC16  20F4               	addwfc	prodh,w,c
 26818  00AC18  6EDA               	movwf	fsr2h,c
 26819  00AC1A  50DF               	movf	indf2,w,c
 26820  00AC1C  A4D8               	btfss	status,2,c
 26821  00AC1E  D7DD               	goto	l1468
 26822                           
 26823                           ; BSR set to: 0
 26824                           ;display.c: 502: };display.c: 503: display_content[1][13+cntr] = 0x01;
 26825                           
 26826                           ; BSR set to: 0
 26827  00AC20  51D3               	movf	display_prepare@cntr& (0+255),w,b
 26828  00AC22  6FC6               	movwf	??_display_prepare& (0+255),b
 26829  00AC24  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 26830  00AC26  0E0D               	movlw	13
 26831  00AC28  27C6               	addwf	??_display_prepare& (0+255),f,b
 26832  00AC2A  0E00               	movlw	0
 26833  00AC2C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 26834  00AC2E  0E56               	movlw	low (_display_content+20)
 26835  00AC30  25C6               	addwf	??_display_prepare& (0+255),w,b
 26836  00AC32  6ED9               	movwf	fsr2l,c
 26837  00AC34  0E02               	movlw	high (_display_content+20)
 26838  00AC36  D6AA               	goto	L36
 26839  00AC38                     
 26840                           ; BSR set to: 0
 26841                           ;display.c: 508: memcpy(display_content, dc_manual, sizeof display_content);
 26842                           
 26843                           ; BSR set to: 0
 26844  00AC38  0E42               	movlw	low _display_content
 26845  00AC3A  6F60               	movwf	memcpy@d1& (0+255),b
 26846  00AC3C  0E02               	movlw	high _display_content
 26847  00AC3E  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26848  00AC40  0EEE               	movlw	low _dc_manual
 26849  00AC42  6F62               	movwf	memcpy@s1& (0+255),b
 26850  00AC44  0E9D               	movlw	high _dc_manual
 26851  00AC46  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26852  00AC48  0E00               	movlw	0
 26853  00AC4A  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26854  00AC4C  0E50               	movlw	80
 26855  00AC4E  6F64               	movwf	memcpy@n& (0+255),b
 26856  00AC50  ECF2  F0A3         	call	_memcpy	;wreg free
 26857                           
 26858                           ;display.c: 509: switch(os.displayState)
 26859  00AC54  D044               	goto	l1471
 26860  00AC56                     
 26861                           ;display.c: 512: display_content[2][6] = 'W';
 26862  00AC56  0E57               	movlw	87
 26863  00AC58  0102               	movlb	2	; () banked
 26864  00AC5A  6F70               	movwf	(_display_content+46)& (0+255),b
 26865                           
 26866                           ;display.c: 513: display_content[2][7] = ' ';
 26867  00AC5C  0E20               	movlw	32
 26868  00AC5E  6F71               	movwf	(_display_content+47)& (0+255),b
 26869                           
 26870                           ;display.c: 514: break;
 26871  00AC60  D049               	goto	l1473
 26872  00AC62                     
 26873                           ;display.c: 516: memcpy(display_content[2], "        ", 8);
 26874                           
 26875                           ; BSR set to: 2
 26876  00AC62  0E6A               	movlw	low (_display_content+40)
 26877  00AC64  0100               	movlb	0	; () banked
 26878  00AC66  6F60               	movwf	memcpy@d1& (0+255),b
 26879  00AC68  0E02               	movlw	high (_display_content+40)
 26880  00AC6A  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26881  00AC6C  0E14               	movlw	low STR_1
 26882  00AC6E  6F62               	movwf	memcpy@s1& (0+255),b
 26883  00AC70  0EA3               	movlw	high STR_1
 26884  00AC72  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26885  00AC74  0E00               	movlw	0
 26886  00AC76  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26887  00AC78  0E08               	movlw	8
 26888  00AC7A  6F64               	movwf	memcpy@n& (0+255),b
 26889  00AC7C  ECF2  F0A3         	call	_memcpy	;wreg free
 26890                           
 26891                           ;display.c: 517: memcpy(display_content[3], "Cancel", 6);
 26892  00AC80  0E7E               	movlw	low (_display_content+60)
 26893  00AC82  0100               	movlb	0	; () banked
 26894  00AC84  6F60               	movwf	memcpy@d1& (0+255),b
 26895  00AC86  0E02               	movlw	high (_display_content+60)
 26896  00AC88  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26897  00AC8A  0E1D               	movlw	low STR_2
 26898  00AC8C  6F62               	movwf	memcpy@s1& (0+255),b
 26899  00AC8E  0EA3               	movlw	high STR_2
 26900  00AC90  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26901  00AC92  0E00               	movlw	0
 26902  00AC94  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26903  00AC96  0E06               	movlw	6
 26904  00AC98  6F64               	movwf	memcpy@n& (0+255),b
 26905  00AC9A  ECF2  F0A3         	call	_memcpy	;wreg free
 26906                           
 26907                           ;display.c: 518: break;
 26908  00AC9E  D02A               	goto	l1473
 26909  00ACA0                     
 26910                           ;display.c: 520: memcpy(&display_content[2][0], "        ", 8);
 26911  00ACA0  0E6A               	movlw	low (_display_content+40)
 26912  00ACA2  0100               	movlb	0	; () banked
 26913  00ACA4  6F60               	movwf	memcpy@d1& (0+255),b
 26914  00ACA6  0E02               	movlw	high (_display_content+40)
 26915  00ACA8  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26916  00ACAA  0E14               	movlw	low STR_1
 26917  00ACAC  6F62               	movwf	memcpy@s1& (0+255),b
 26918  00ACAE  0EA3               	movlw	high STR_1
 26919  00ACB0  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26920  00ACB2  0E00               	movlw	0
 26921  00ACB4  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26922  00ACB6  0E08               	movlw	8
 26923  00ACB8  6F64               	movwf	memcpy@n& (0+255),b
 26924  00ACBA  ECF2  F0A3         	call	_memcpy	;wreg free
 26925                           
 26926                           ;display.c: 521: memcpy(&display_content[3][0], "Stop ", 5);
 26927  00ACBE  0E7E               	movlw	low (_display_content+60)
 26928  00ACC0  0100               	movlb	0	; () banked
 26929  00ACC2  6F60               	movwf	memcpy@d1& (0+255),b
 26930  00ACC4  0E02               	movlw	high (_display_content+60)
 26931  00ACC6  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 26932  00ACC8  0E24               	movlw	low STR_6
 26933  00ACCA  6F62               	movwf	memcpy@s1& (0+255),b
 26934  00ACCC  0EA3               	movlw	high STR_6
 26935  00ACCE  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 26936  00ACD0  0E00               	movlw	0
 26937  00ACD2  6F65               	movwf	(memcpy@n+1)& (0+255),b
 26938  00ACD4  0E05               	movlw	5
 26939  00ACD6  6F64               	movwf	memcpy@n& (0+255),b
 26940  00ACD8  ECF2  F0A3         	call	_memcpy	;wreg free
 26941                           
 26942                           ;display.c: 523: }
 26943                           
 26944                           ;display.c: 522: break;
 26945  00ACDC  D00B               	goto	l1473
 26946  00ACDE                     l1471:
 26947  00ACDE  0101               	movlb	1	; () banked
 26948  00ACE0  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 26949                           
 26950                           ; Switch size 1, requested type "space"
 26951                           ; Number of cases is 3, Range of values is 130 to 132
 26952                           ; switch strategies available:
 26953                           ; Name         Instructions Cycles
 26954                           ; simple_byte           10     6 (average)
 26955                           ;	Chosen strategy is simple_byte
 26956  00ACE2  0A82               	xorlw	130	; case 130
 26957  00ACE4  B4D8               	btfsc	status,2,c
 26958  00ACE6  D7BD               	goto	l1474
 26959  00ACE8  0A01               	xorlw	1	; case 131
 26960  00ACEA  B4D8               	btfsc	status,2,c
 26961  00ACEC  D7B4               	goto	l1472
 26962  00ACEE  0A07               	xorlw	7	; case 132
 26963  00ACF0  B4D8               	btfsc	status,2,c
 26964  00ACF2  D7D6               	goto	l1475
 26965  00ACF4                     l1473:
 26966                           
 26967                           ;display.c: 526: _display_itoa_long(os.current_position_in_degrees, 2, temp);
 26968                           
 26969                           ; BSR set to: 1
 26970  00ACF4  C171  F0B7         	movff	_os+13,__display_itoa_long@value	;volatile
 26971  00ACF8  C172  F0B8         	movff	_os+14,__display_itoa_long@value+1	;volatile
 26972  00ACFC  0100               	movlb	0	; () banked
 26973  00ACFE  6BB9               	clrf	(__display_itoa_long@value+2)& (0+255),b
 26974  00AD00  6BBA               	clrf	(__display_itoa_long@value+3)& (0+255),b
 26975  00AD02  0E02               	movlw	2
 26976  00AD04  6FBB               	movwf	__display_itoa_long@decimals& (0+255),b
 26977  00AD06  0EC8               	movlw	low display_prepare@temp
 26978  00AD08  6FBC               	movwf	__display_itoa_long@text& (0+255),b
 26979  00AD0A  0E00               	movlw	high display_prepare@temp
 26980  00AD0C  6FBD               	movwf	(__display_itoa_long@text+1)& (0+255),b
 26981  00AD0E  EC71  F087         	call	__display_itoa_long	;wreg free
 26982                           
 26983                           ;display.c: 527: space = 7-strlen(temp);
 26984  00AD12  0EC8               	movlw	low display_prepare@temp
 26985  00AD14  0100               	movlb	0	; () banked
 26986  00AD16  6F60               	movwf	strlen@s& (0+255),b
 26987  00AD18  0E00               	movlw	high display_prepare@temp
 26988  00AD1A  6F61               	movwf	(strlen@s+1)& (0+255),b
 26989  00AD1C  EC2A  F0AA         	call	_strlen	;wreg free
 26990  00AD20  0100               	movlb	0	; () banked
 26991  00AD22  5160               	movf	?_strlen& (0+255),w,b
 26992  00AD24  0800               	sublw	0
 26993  00AD26  0F07               	addlw	7
 26994  00AD28  6FD2               	movwf	display_prepare@space& (0+255),b
 26995                           
 26996                           ; BSR set to: 0
 26997                           ;display.c: 528: for(cntr=0; temp[cntr]; ++cntr)
 26998  00AD2A  0E00               	movlw	0
 26999  00AD2C  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27000  00AD2E  D01C               	goto	l1476
 27001  00AD30                     
 27002                           ; BSR set to: 0
 27003                           ;display.c: 529: {;display.c: 530: display_content[1][12+space+cntr] = temp[cntr];
 27004                           
 27005                           ; BSR set to: 0
 27006  00AD30  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27007  00AD32  0D01               	mullw	1
 27008  00AD34  0EC8               	movlw	low display_prepare@temp
 27009  00AD36  24F3               	addwf	prodl,w,c
 27010  00AD38  6ED9               	movwf	fsr2l,c
 27011  00AD3A  0E00               	movlw	high display_prepare@temp
 27012  00AD3C  20F4               	addwfc	prodh,w,c
 27013  00AD3E  6EDA               	movwf	fsr2h,c
 27014  00AD40  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27015  00AD42  C0D2  F0C6         	movff	display_prepare@space,??_display_prepare
 27016  00AD46  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27017  00AD48  27C6               	addwf	??_display_prepare& (0+255),f,b
 27018  00AD4A  0E00               	movlw	0
 27019  00AD4C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27020  00AD4E  0E0C               	movlw	12
 27021  00AD50  27C6               	addwf	??_display_prepare& (0+255),f,b
 27022  00AD52  0E00               	movlw	0
 27023  00AD54  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27024  00AD56  0E56               	movlw	low (_display_content+20)
 27025  00AD58  25C6               	addwf	??_display_prepare& (0+255),w,b
 27026  00AD5A  6EE1               	movwf	fsr1l,c
 27027  00AD5C  0E02               	movlw	high (_display_content+20)
 27028  00AD5E  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27029  00AD60  6EE2               	movwf	fsr1h,c
 27030  00AD62  CFDF FFE7          	movff	indf2,indf1
 27031                           
 27032                           ; BSR set to: 0
 27033  00AD66  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27034  00AD68                     l1476:
 27035                           
 27036                           ; BSR set to: 0
 27037                           
 27038                           ; BSR set to: 0
 27039  00AD68  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27040  00AD6A  0D01               	mullw	1
 27041  00AD6C  0EC8               	movlw	low display_prepare@temp
 27042  00AD6E  24F3               	addwf	prodl,w,c
 27043  00AD70  6ED9               	movwf	fsr2l,c
 27044  00AD72  0E00               	movlw	high display_prepare@temp
 27045  00AD74  20F4               	addwfc	prodh,w,c
 27046  00AD76  6EDA               	movwf	fsr2h,c
 27047  00AD78  50DF               	movf	indf2,w,c
 27048  00AD7A  A4D8               	btfss	status,2,c
 27049  00AD7C  D7D9               	goto	l1477
 27050                           
 27051                           ; BSR set to: 0
 27052                           ;display.c: 531: };display.c: 534: _display_itoa(motor_speed_from_index(os.manual_speed)
      +                          , 2, temp);
 27053                           
 27054                           ; BSR set to: 0
 27055  00AD7E  C189  F09D         	movff	_os+37,motor_speed_from_index@speed_index	;volatile
 27056  00AD82  C18A  F09E         	movff	_os+38,motor_speed_from_index@speed_index+1	;volatile
 27057  00AD86  EC4E  F0AE         	call	_motor_speed_from_index	;wreg free
 27058  00AD8A  C09D  F09F         	movff	?_motor_speed_from_index,__display_itoa@value
 27059  00AD8E  C09E  F0A0         	movff	?_motor_speed_from_index+1,__display_itoa@value+1
 27060  00AD92  0E02               	movlw	2
 27061  00AD94  0100               	movlb	0	; () banked
 27062  00AD96  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27063  00AD98  0EC8               	movlw	low display_prepare@temp
 27064  00AD9A  6FA2               	movwf	__display_itoa@text& (0+255),b
 27065  00AD9C  0E00               	movlw	high display_prepare@temp
 27066  00AD9E  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27067  00ADA0  ECD7  F071         	call	__display_itoa	;wreg free
 27068                           
 27069                           ;display.c: 535: for(cntr=0; temp[cntr]; ++cntr)
 27070  00ADA4  0E00               	movlw	0
 27071  00ADA6  0100               	movlb	0	; () banked
 27072  00ADA8  6FD3               	movwf	display_prepare@cntr& (0+255),b
 27073  00ADAA  D018               	goto	l1479
 27074  00ADAC                     
 27075                           ; BSR set to: 0
 27076                           ;display.c: 536: {;display.c: 537: display_content[3][11+cntr] = temp[cntr];
 27077                           
 27078                           ; BSR set to: 0
 27079  00ADAC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27080  00ADAE  0D01               	mullw	1
 27081  00ADB0  0EC8               	movlw	low display_prepare@temp
 27082  00ADB2  24F3               	addwf	prodl,w,c
 27083  00ADB4  6ED9               	movwf	fsr2l,c
 27084  00ADB6  0E00               	movlw	high display_prepare@temp
 27085  00ADB8  20F4               	addwfc	prodh,w,c
 27086  00ADBA  6EDA               	movwf	fsr2h,c
 27087  00ADBC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27088  00ADBE  6FC6               	movwf	??_display_prepare& (0+255),b
 27089  00ADC0  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27090  00ADC2  0E0B               	movlw	11
 27091  00ADC4  27C6               	addwf	??_display_prepare& (0+255),f,b
 27092  00ADC6  0E00               	movlw	0
 27093  00ADC8  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27094  00ADCA  0E7E               	movlw	low (_display_content+60)
 27095  00ADCC  25C6               	addwf	??_display_prepare& (0+255),w,b
 27096  00ADCE  6EE1               	movwf	fsr1l,c
 27097  00ADD0  0E02               	movlw	high (_display_content+60)
 27098  00ADD2  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27099  00ADD4  6EE2               	movwf	fsr1h,c
 27100  00ADD6  CFDF FFE7          	movff	indf2,indf1
 27101                           
 27102                           ; BSR set to: 0
 27103  00ADDA  2BD3               	incf	display_prepare@cntr& (0+255),f,b
 27104  00ADDC                     l1479:
 27105                           
 27106                           ; BSR set to: 0
 27107                           
 27108                           ; BSR set to: 0
 27109  00ADDC  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27110  00ADDE  0D01               	mullw	1
 27111  00ADE0  0EC8               	movlw	low display_prepare@temp
 27112  00ADE2  24F3               	addwf	prodl,w,c
 27113  00ADE4  6ED9               	movwf	fsr2l,c
 27114  00ADE6  0E00               	movlw	high display_prepare@temp
 27115  00ADE8  20F4               	addwfc	prodh,w,c
 27116  00ADEA  6EDA               	movwf	fsr2h,c
 27117  00ADEC  50DF               	movf	indf2,w,c
 27118  00ADEE  A4D8               	btfss	status,2,c
 27119  00ADF0  D7DD               	goto	l1480
 27120  00ADF2                     L89:
 27121                           
 27122                           ; BSR set to: 0
 27123                           ;display.c: 538: };display.c: 539: display_content[3][11+cntr] = 0x01;
 27124                           
 27125                           ; BSR set to: 0
 27126  00ADF2  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27127  00ADF4  6FC6               	movwf	??_display_prepare& (0+255),b
 27128  00ADF6  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27129  00ADF8  0E0B               	movlw	11
 27130  00ADFA  27C6               	addwf	??_display_prepare& (0+255),f,b
 27131  00ADFC  0E00               	movlw	0
 27132  00ADFE  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27133  00AE00  0E7E               	movlw	low (_display_content+60)
 27134  00AE02  25C6               	addwf	??_display_prepare& (0+255),w,b
 27135  00AE04  6ED9               	movwf	fsr2l,c
 27136  00AE06  0E02               	movlw	high (_display_content+60)
 27137  00AE08  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27138  00AE0A  6EDA               	movwf	fsr2h,c
 27139  00AE0C  0E01               	movlw	1
 27140  00AE0E  6EDF               	movwf	indf2,c
 27141                           
 27142                           ;display.c: 540: display_content[3][12+cntr] = '/';
 27143  00AE10  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27144  00AE12  6FC6               	movwf	??_display_prepare& (0+255),b
 27145  00AE14  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27146  00AE16  0E0C               	movlw	12
 27147  00AE18  27C6               	addwf	??_display_prepare& (0+255),f,b
 27148  00AE1A  0E00               	movlw	0
 27149  00AE1C  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27150  00AE1E  0E7E               	movlw	low (_display_content+60)
 27151  00AE20  25C6               	addwf	??_display_prepare& (0+255),w,b
 27152  00AE22  6ED9               	movwf	fsr2l,c
 27153  00AE24  0E02               	movlw	high (_display_content+60)
 27154  00AE26  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27155  00AE28  6EDA               	movwf	fsr2h,c
 27156  00AE2A  0E2F               	movlw	47
 27157  00AE2C  6EDF               	movwf	indf2,c
 27158                           
 27159                           ;display.c: 541: display_content[3][13+cntr] = 's';
 27160  00AE2E  51D3               	movf	display_prepare@cntr& (0+255),w,b
 27161  00AE30  6FC6               	movwf	??_display_prepare& (0+255),b
 27162  00AE32  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27163  00AE34  0E0D               	movlw	13
 27164  00AE36  27C6               	addwf	??_display_prepare& (0+255),f,b
 27165  00AE38  0E00               	movlw	0
 27166  00AE3A  23C7               	addwfc	(??_display_prepare+1)& (0+255),f,b
 27167  00AE3C  0E7E               	movlw	low (_display_content+60)
 27168  00AE3E  25C6               	addwf	??_display_prepare& (0+255),w,b
 27169  00AE40  6ED9               	movwf	fsr2l,c
 27170  00AE42  0E02               	movlw	high (_display_content+60)
 27171  00AE44  21C7               	addwfc	(??_display_prepare+1)& (0+255),w,b
 27172  00AE46  6EDA               	movwf	fsr2h,c
 27173  00AE48  0E73               	movlw	115
 27174  00AE4A                     L27:
 27175  00AE4A  6EDF               	movwf	indf2,c
 27176                           
 27177                           ;display.c: 542: break;
 27178  00AE4C  D095               	goto	l1399
 27179  00AE4E                     
 27180                           ; BSR set to: 0
 27181                           ;display.c: 545: _display_clear();
 27182                           
 27183                           ; BSR set to: 0
 27184  00AE4E  ECF5  F0A8         	call	__display_clear	;wreg free
 27185                           
 27186                           ;display.c: 546: _display_itoa((int16_t) (os.encoder1Count), 0, display_content[0]);
 27187  00AE52  0101               	movlb	1	; () banked
 27188  00AE54  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 27189  00AE56  0100               	movlb	0	; () banked
 27190  00AE58  6F9F               	movwf	__display_itoa@value& (0+255),b
 27191  00AE5A  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27192  00AE5C  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27193  00AE5E  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27194  00AE60  0E00               	movlw	0
 27195  00AE62  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27196  00AE64  0E42               	movlw	low _display_content
 27197  00AE66  6FA2               	movwf	__display_itoa@text& (0+255),b
 27198  00AE68  0E02               	movlw	high _display_content
 27199  00AE6A  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27200  00AE6C  ECD7  F071         	call	__display_itoa	;wreg free
 27201                           
 27202                           ;display.c: 547: if(PORTEbits.RE2)
 27203  00AE70  A484               	btfss	3972,2,c	;volatile
 27204  00AE72  D002               	goto	l1483
 27205                           
 27206                           ;display.c: 548: display_content[0][8] = 'H';
 27207  00AE74  0E48               	movlw	72
 27208  00AE76  D001               	goto	L31
 27209  00AE78                     l1483:
 27210                           
 27211                           ;display.c: 549: else;display.c: 550: display_content[0][8] = 'L';
 27212                           
 27213                           ; BSR set to: 2
 27214  00AE78  0E4C               	movlw	76
 27215  00AE7A                     L31:
 27216  00AE7A  0102               	movlb	2	; () banked
 27217  00AE7C  6F4A               	movwf	(_display_content+8)& (0+255),b
 27218                           
 27219                           ; BSR set to: 2
 27220                           ;display.c: 551: if(PORTEbits.RE0)
 27221                           
 27222                           ; BSR set to: 2
 27223  00AE7E  A084               	btfss	3972,0,c	;volatile
 27224  00AE80  D002               	goto	l1485
 27225                           
 27226                           ; BSR set to: 2
 27227                           ;display.c: 552: display_content[0][9] = 'H';
 27228  00AE82  0E48               	movlw	72
 27229  00AE84  D001               	goto	L32
 27230  00AE86                     l1485:
 27231                           
 27232                           ; BSR set to: 2
 27233                           ;display.c: 553: else;display.c: 554: display_content[0][9] = 'L';
 27234                           
 27235                           ; BSR set to: 2
 27236  00AE86  0E4C               	movlw	76
 27237  00AE88                     L32:
 27238  00AE88  6F4B               	movwf	(_display_content+9)& (0+255),b
 27239                           
 27240                           ; BSR set to: 2
 27241                           ;display.c: 555: _display_itoa((int16_t) (os.button1), 0, display_content[1]);
 27242                           
 27243                           ; BSR set to: 2
 27244  00AE8A  0101               	movlb	1	; () banked
 27245  00AE8C  5168               	movf	(_os+4)& (0+255),w,b	;volatile
 27246  00AE8E  0100               	movlb	0	; () banked
 27247  00AE90  6F9F               	movwf	__display_itoa@value& (0+255),b
 27248  00AE92  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27249  00AE94  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27250  00AE96  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27251  00AE98  0E00               	movlw	0
 27252  00AE9A  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27253  00AE9C  0E56               	movlw	low (_display_content+20)
 27254  00AE9E  6FA2               	movwf	__display_itoa@text& (0+255),b
 27255  00AEA0  0E02               	movlw	high (_display_content+20)
 27256  00AEA2  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27257  00AEA4  ECD7  F071         	call	__display_itoa	;wreg free
 27258                           
 27259                           ;display.c: 556: if(PORTEbits.RE1)
 27260  00AEA8  A284               	btfss	3972,1,c	;volatile
 27261  00AEAA  D002               	goto	l1487
 27262                           
 27263                           ;display.c: 557: display_content[1][8] = 'H';
 27264  00AEAC  0E48               	movlw	72
 27265  00AEAE  D001               	goto	L33
 27266  00AEB0                     l1487:
 27267                           
 27268                           ;display.c: 558: else;display.c: 559: display_content[1][8] = 'L';
 27269                           
 27270                           ; BSR set to: 2
 27271  00AEB0  0E4C               	movlw	76
 27272  00AEB2                     L33:
 27273  00AEB2  0102               	movlb	2	; () banked
 27274  00AEB4  6F5E               	movwf	(_display_content+28)& (0+255),b
 27275                           
 27276                           ; BSR set to: 2
 27277                           ;display.c: 560: _display_itoa((int16_t) (os.encoder2Count), 0, display_content[2]);
 27278                           
 27279                           ; BSR set to: 2
 27280  00AEB6  0101               	movlb	1	; () banked
 27281  00AEB8  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 27282  00AEBA  0100               	movlb	0	; () banked
 27283  00AEBC  6F9F               	movwf	__display_itoa@value& (0+255),b
 27284  00AEBE  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27285  00AEC0  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27286  00AEC2  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27287  00AEC4  0E00               	movlw	0
 27288  00AEC6  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27289  00AEC8  0E6A               	movlw	low (_display_content+40)
 27290  00AECA  6FA2               	movwf	__display_itoa@text& (0+255),b
 27291  00AECC  0E02               	movlw	high (_display_content+40)
 27292  00AECE  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27293  00AED0  ECD7  F071         	call	__display_itoa	;wreg free
 27294                           
 27295                           ;display.c: 561: if(PORTAbits.RA0)
 27296  00AED4  A080               	btfss	3968,0,c	;volatile
 27297  00AED6  D002               	goto	l1489
 27298                           
 27299                           ;display.c: 562: display_content[2][8] = 'H';
 27300  00AED8  0E48               	movlw	72
 27301  00AEDA  D001               	goto	L34
 27302  00AEDC                     l1489:
 27303                           
 27304                           ;display.c: 563: else;display.c: 564: display_content[2][8] = 'L';
 27305                           
 27306                           ; BSR set to: 2
 27307  00AEDC  0E4C               	movlw	76
 27308  00AEDE                     L34:
 27309  00AEDE  0102               	movlb	2	; () banked
 27310  00AEE0  6F72               	movwf	(_display_content+48)& (0+255),b
 27311                           
 27312                           ; BSR set to: 2
 27313                           ;display.c: 565: if(PORTAbits.RA2)
 27314                           
 27315                           ; BSR set to: 2
 27316  00AEE2  A480               	btfss	3968,2,c	;volatile
 27317  00AEE4  D002               	goto	l1491
 27318                           
 27319                           ; BSR set to: 2
 27320                           ;display.c: 566: display_content[2][9] = 'H';
 27321  00AEE6  0E48               	movlw	72
 27322  00AEE8  D001               	goto	L35
 27323  00AEEA                     l1491:
 27324                           
 27325                           ; BSR set to: 2
 27326                           ;display.c: 567: else;display.c: 568: display_content[2][9] = 'L';
 27327                           
 27328                           ; BSR set to: 2
 27329  00AEEA  0E4C               	movlw	76
 27330  00AEEC                     L35:
 27331  00AEEC  6F73               	movwf	(_display_content+49)& (0+255),b
 27332                           
 27333                           ; BSR set to: 2
 27334                           ;display.c: 569: _display_itoa((int16_t) (os.button2), 0, display_content[3]);
 27335                           
 27336                           ; BSR set to: 2
 27337  00AEEE  0101               	movlb	1	; () banked
 27338  00AEF0  516A               	movf	(_os+6)& (0+255),w,b	;volatile
 27339  00AEF2  0100               	movlb	0	; () banked
 27340  00AEF4  6F9F               	movwf	__display_itoa@value& (0+255),b
 27341  00AEF6  6BA0               	clrf	(__display_itoa@value+1)& (0+255),b
 27342  00AEF8  BF9F               	btfsc	__display_itoa@value& (0+255),7,b
 27343  00AEFA  07A0               	decf	(__display_itoa@value+1)& (0+255),f,b
 27344  00AEFC  0E00               	movlw	0
 27345  00AEFE  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 27346  00AF00  0E7E               	movlw	low (_display_content+60)
 27347  00AF02  6FA2               	movwf	__display_itoa@text& (0+255),b
 27348  00AF04  0E02               	movlw	high (_display_content+60)
 27349  00AF06  6FA3               	movwf	(__display_itoa@text+1)& (0+255),b
 27350  00AF08  ECD7  F071         	call	__display_itoa	;wreg free
 27351                           
 27352                           ;display.c: 570: if(PORTAbits.RA1)
 27353  00AF0C  A280               	btfss	3968,1,c	;volatile
 27354  00AF0E  D002               	goto	l1493
 27355                           
 27356                           ;display.c: 571: display_content[3][8] = 'H';
 27357  00AF10  0E48               	movlw	72
 27358  00AF12  D001               	goto	L28
 27359  00AF14                     l1493:
 27360                           
 27361                           ;display.c: 572: else;display.c: 573: display_content[3][8] = 'L';
 27362                           
 27363                           ; BSR set to: 2
 27364  00AF14  0E4C               	movlw	76
 27365  00AF16                     L28:
 27366  00AF16  0102               	movlb	2	; () banked
 27367  00AF18  6F86               	movwf	(_display_content+68)& (0+255),b
 27368                           
 27369                           ; BSR set to: 2
 27370                           ;display.c: 575: }
 27371                           
 27372                           ; BSR set to: 2
 27373                           ;display.c: 574: break;
 27374  00AF1A  D02E               	goto	l1399
 27375  00AF1C                     l1390:
 27376                           
 27377                           ; BSR set to: 2
 27378  00AF1C  0101               	movlb	1	; () banked
 27379  00AF1E  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 27380  00AF20  0BF0               	andlw	240
 27381  00AF22  0100               	movlb	0	; () banked
 27382  00AF24  6FC6               	movwf	??_display_prepare& (0+255),b
 27383  00AF26  6BC7               	clrf	(??_display_prepare+1)& (0+255),b
 27384                           
 27385                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27386                           ; Switch size 1, requested type "space"
 27387                           ; Number of cases is 1, Range of values is 0 to 0
 27388                           ; switch strategies available:
 27389                           ; Name         Instructions Cycles
 27390                           ; simple_byte            4     3 (average)
 27391                           ;	Chosen strategy is simple_byte
 27392  00AF28  51C7               	movf	(??_display_prepare+1)& (0+255),w,b
 27393  00AF2A  0A00               	xorlw	0	; case 0
 27394  00AF2C  A4D8               	btfss	status,2,c
 27395  00AF2E  D024               	goto	l1399
 27396                           
 27397                           ; BSR set to: 0
 27398                           ; Switch size 1, requested type "space"
 27399                           ; Number of cases is 10, Range of values is 0 to 240
 27400                           ; switch strategies available:
 27401                           ; Name         Instructions Cycles
 27402                           ; simple_byte           31    16 (average)
 27403                           ;	Chosen strategy is simple_byte
 27404  00AF30  51C6               	movf	??_display_prepare& (0+255),w,b
 27405  00AF32  0A00               	xorlw	0	; case 0
 27406  00AF34  B4D8               	btfsc	status,2,c
 27407  00AF36  EF9A  F051         	goto	l1391
 27408  00AF3A  0A10               	xorlw	16	; case 16
 27409  00AF3C  B4D8               	btfsc	status,2,c
 27410  00AF3E  EFC9  F051         	goto	l1400
 27411  00AF42  0A30               	xorlw	48	; case 32
 27412  00AF44  B4D8               	btfsc	status,2,c
 27413  00AF46  EF1B  F052         	goto	l1410
 27414  00AF4A  0A10               	xorlw	16	; case 48
 27415  00AF4C  B4D8               	btfsc	status,2,c
 27416  00AF4E  EF3F  F052         	goto	l1415
 27417  00AF52  0A70               	xorlw	112	; case 64
 27418  00AF54  B4D8               	btfsc	status,2,c
 27419  00AF56  EFB0  F052         	goto	l1424
 27420  00AF5A  0A10               	xorlw	16	; case 80
 27421  00AF5C  B4D8               	btfsc	status,2,c
 27422  00AF5E  D467               	goto	l1439
 27423  00AF60  0A30               	xorlw	48	; case 96
 27424  00AF62  B4D8               	btfsc	status,2,c
 27425  00AF64  D517               	goto	l1452
 27426  00AF66  0A10               	xorlw	16	; case 112
 27427  00AF68  B4D8               	btfsc	status,2,c
 27428  00AF6A  D616               	goto	l1466
 27429  00AF6C  0AF0               	xorlw	240	; case 128
 27430  00AF6E  B4D8               	btfsc	status,2,c
 27431  00AF70  D663               	goto	l1470
 27432  00AF72  0A70               	xorlw	112	; case 240
 27433  00AF74  B4D8               	btfsc	status,2,c
 27434  00AF76  D76B               	goto	l1482
 27435  00AF78                     l1399:
 27436                           
 27437                           ;display.c: 577: if(!PORTDbits.RD2)
 27438  00AF78  B483               	btfsc	3971,2,c	;volatile
 27439  00AF7A  0012               	return	
 27440                           
 27441                           ;display.c: 578: {;display.c: 579: display_content[0][0] = 'E';
 27442  00AF7C  0E45               	movlw	69
 27443  00AF7E  0102               	movlb	2	; () banked
 27444  00AF80  6F42               	movwf	_display_content& (0+255),b
 27445                           
 27446                           ;display.c: 580: display_content[0][1] = 'R';
 27447  00AF82  0E52               	movlw	82
 27448  00AF84  6F43               	movwf	(_display_content+1)& (0+255),b
 27449                           
 27450                           ;display.c: 581: display_content[0][2] = 'R';
 27451  00AF86  0E52               	movlw	82
 27452  00AF88  6F44               	movwf	(_display_content+2)& (0+255),b
 27453                           
 27454                           ;display.c: 582: display_content[0][3] = 'O';
 27455  00AF8A  0E4F               	movlw	79
 27456  00AF8C  6F45               	movwf	(_display_content+3)& (0+255),b
 27457                           
 27458                           ;display.c: 583: display_content[0][4] = 'R';
 27459  00AF8E  0E52               	movlw	82
 27460  00AF90  6F46               	movwf	(_display_content+4)& (0+255),b
 27461  00AF92  0012               	return	
 27462  00AF94                     __end_of_display_prepare:
 27463                           	opt stack 0
 27464                           tblptru	equ	0xFF8
 27465                           tblptrh	equ	0xFF7
 27466                           tblptrl	equ	0xFF6
 27467                           tablat	equ	0xFF5
 27468                           prodh	equ	0xFF4
 27469                           prodl	equ	0xFF3
 27470                           intcon	equ	0xFF2
 27471                           postinc0	equ	0xFEE
 27472                           wreg	equ	0xFE8
 27473                           indf1	equ	0xFE7
 27474                           postinc1	equ	0xFE6
 27475                           postdec1	equ	0xFE5
 27476                           plusw1	equ	0xFE3
 27477                           fsr1h	equ	0xFE2
 27478                           fsr1l	equ	0xFE1
 27479                           indf2	equ	0xFDF
 27480                           postinc2	equ	0xFDE
 27481                           postdec2	equ	0xFDD
 27482                           plusw2	equ	0xFDB
 27483                           fsr2h	equ	0xFDA
 27484                           fsr2l	equ	0xFD9
 27485                           status	equ	0xFD8
 27486                           
 27487 ;; *************** function _motor_speed_from_index *****************
 27488 ;; Defined at:
 27489 ;;		line 603 in file "motor.c"
 27490 ;; Parameters:    Size  Location     Type
 27491 ;;  speed_index     2   61[BANK0 ] unsigned int 
 27492 ;; Auto vars:     Size  Location     Type
 27493 ;;		None
 27494 ;; Return value:  Size  Location     Type
 27495 ;;                  2   61[BANK0 ] unsigned int 
 27496 ;; Registers used:
 27497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27498 ;; Tracked objects:
 27499 ;;		On entry : 0/0
 27500 ;;		On exit  : 0/0
 27501 ;;		Unchanged: 0/0
 27502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27503 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27506 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27507 ;;Total ram usage:        2 bytes
 27508 ;; Hardware stack levels used:    1
 27509 ;; Hardware stack levels required when called:   12
 27510 ;; This function calls:
 27511 ;;		__motor_get_speed_in_degrees
 27512 ;; This function is called by:
 27513 ;;		_display_prepare
 27514 ;; This function uses a non-reentrant model
 27515 ;;
 27516                           
 27517                           	psect	text106
 27518  015C9C                     __ptext106:
 27519                           	opt stack 0
 27520  015C9C                     _motor_speed_from_index:
 27521                           	opt stack 17
 27522                           
 27523                           ;motor.c: 605: return _motor_get_speed_in_degrees(speed_index);
 27524                           
 27525                           ;incstack = 0
 27526  015C9C  C09D  F091         	movff	motor_speed_from_index@speed_index,__motor_get_speed_in_degrees@speed_index
 27527  015CA0  C09E  F092         	movff	motor_speed_from_index@speed_index+1,__motor_get_speed_in_degrees@speed_index+1
 27528  015CA4  ECD9  F082         	call	__motor_get_speed_in_degrees	;wreg free
 27529  015CA8  C091  F09D         	movff	?__motor_get_speed_in_degrees,?_motor_speed_from_index
 27530  015CAC  C092  F09E         	movff	?__motor_get_speed_in_degrees+1,?_motor_speed_from_index+1
 27531  015CB0  0012               	return	
 27532  015CB2                     __end_of_motor_speed_from_index:
 27533                           	opt stack 0
 27534                           tblptru	equ	0xFF8
 27535                           tblptrh	equ	0xFF7
 27536                           tblptrl	equ	0xFF6
 27537                           tablat	equ	0xFF5
 27538                           prodh	equ	0xFF4
 27539                           prodl	equ	0xFF3
 27540                           intcon	equ	0xFF2
 27541                           postinc0	equ	0xFEE
 27542                           wreg	equ	0xFE8
 27543                           indf1	equ	0xFE7
 27544                           postinc1	equ	0xFE6
 27545                           postdec1	equ	0xFE5
 27546                           plusw1	equ	0xFE3
 27547                           fsr1h	equ	0xFE2
 27548                           fsr1l	equ	0xFE1
 27549                           indf2	equ	0xFDF
 27550                           postinc2	equ	0xFDE
 27551                           postdec2	equ	0xFDD
 27552                           plusw2	equ	0xFDB
 27553                           fsr2h	equ	0xFDA
 27554                           fsr2l	equ	0xFD9
 27555                           status	equ	0xFD8
 27556                           
 27557 ;; *************** function __motor_get_speed_in_degrees *****************
 27558 ;; Defined at:
 27559 ;;		line 564 in file "motor.c"
 27560 ;; Parameters:    Size  Location     Type
 27561 ;;  speed_index     2   49[BANK0 ] unsigned int 
 27562 ;; Auto vars:     Size  Location     Type
 27563 ;;  lookup          4   57[BANK0 ] unsigned long 
 27564 ;;  speed           4   53[BANK0 ] float 
 27565 ;; Return value:  Size  Location     Type
 27566 ;;                  2   49[BANK0 ] unsigned int 
 27567 ;; Registers used:
 27568 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 27569 ;; Tracked objects:
 27570 ;;		On entry : 0/0
 27571 ;;		On exit  : 0/0
 27572 ;;		Unchanged: 0/0
 27573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27574 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27575 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27576 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27577 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27578 ;;Total ram usage:       12 bytes
 27579 ;; Hardware stack levels used:    1
 27580 ;; Hardware stack levels required when called:   11
 27581 ;; This function calls:
 27582 ;;		___fldiv
 27583 ;;		___fltol
 27584 ;;		___lmul
 27585 ;;		___xxtofl
 27586 ;; This function is called by:
 27587 ;;		_motor_speed_from_index
 27588 ;;		_motor_get_maximum_speed
 27589 ;;		_motor_get_current_speed
 27590 ;; This function uses a non-reentrant model
 27591 ;;
 27592                           
 27593                           	psect	text107
 27594  0105B2                     __ptext107:
 27595                           	opt stack 0
 27596  0105B2                     __motor_get_speed_in_degrees:
 27597                           	opt stack 17
 27598                           
 27599                           ;motor.c: 566: uint32_t lookup;;motor.c: 567: float speed;;motor.c: 569: lookup = motor_
      +                          speed_lookup[speed_index];
 27600                           
 27601                           ;incstack = 0
 27602  0105B2  90D8               	bcf	status,0,c
 27603  0105B4  0100               	movlb	0	; () banked
 27604  0105B6  3591               	rlcf	__motor_get_speed_in_degrees@speed_index& (0+255),w,b
 27605  0105B8  6EF6               	movwf	tblptrl,c
 27606  0105BA  3592               	rlcf	(__motor_get_speed_in_degrees@speed_index+1)& (0+255),w,b
 27607  0105BC  6EF7               	movwf	tblptrh,c
 27608  0105BE  0E93               	movlw	low _motor_speed_lookup
 27609  0105C0  26F6               	addwf	tblptrl,f,c
 27610  0105C2  0E90               	movlw	high _motor_speed_lookup
 27611  0105C4  22F7               	addwfc	tblptrh,f,c
 27612  0105C6                     	if	1	;There are 3 active tblptr bytes
 27613  0105C6  6AF8               	clrf	tblptru,c
 27614  0105C8  0E00               	movlw	low (__mediumconst shr (0+16))
 27615  0105CA  22F8               	addwfc	tblptru,f,c
 27616  0105CC                     	endif
 27617  0105CC  0009               	tblrd		*+
 27618  0105CE  CFF5 F093          	movff	tablat,??__motor_get_speed_in_degrees
 27619  0105D2  0009               	tblrd		*+
 27620  0105D4  CFF5 F094          	movff	tablat,??__motor_get_speed_in_degrees+1
 27621  0105D8  C093  F099         	movff	??__motor_get_speed_in_degrees,__motor_get_speed_in_degrees@lookup
 27622  0105DC  C094  F09A         	movff	??__motor_get_speed_in_degrees+1,__motor_get_speed_in_degrees@lookup+1
 27623  0105E0  6B9B               	clrf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),b
 27624  0105E2  6B9C               	clrf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),b
 27625                           
 27626                           ; BSR set to: 0
 27627                           ;motor.c: 570: lookup *= 16;
 27628  0105E4  0E04               	movlw	4
 27629  0105E6                     u15725:
 27630  0105E6  90D8               	bcf	status,0,c
 27631  0105E8  3799               	rlcf	__motor_get_speed_in_degrees@lookup& (0+255),f,b
 27632  0105EA  379A               	rlcf	(__motor_get_speed_in_degrees@lookup+1)& (0+255),f,b
 27633  0105EC  379B               	rlcf	(__motor_get_speed_in_degrees@lookup+2)& (0+255),f,b
 27634  0105EE  379C               	rlcf	(__motor_get_speed_in_degrees@lookup+3)& (0+255),f,b
 27635  0105F0  2EE8               	decfsz	wreg,f,c
 27636  0105F2  D7F9               	goto	u15725
 27637                           
 27638                           ; BSR set to: 0
 27639                           ;motor.c: 571: lookup *= 360;
 27640  0105F4  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27641  0105F8  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27642  0105FC  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27643  010600  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27644  010604  0E68               	movlw	104
 27645  010606  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27646  010608  0E01               	movlw	1
 27647  01060A  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27648  01060C  0E00               	movlw	0
 27649  01060E  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27650  010610  0E00               	movlw	0
 27651  010612  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27652  010614  EC14  F0A6         	call	___lmul	;wreg free
 27653  010618  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27654  01061C  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27655  010620  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27656  010624  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27657                           
 27658                           ;motor.c: 572: lookup *= 100;
 27659  010628  C099  F060         	movff	__motor_get_speed_in_degrees@lookup,___lmul@multiplier
 27660  01062C  C09A  F061         	movff	__motor_get_speed_in_degrees@lookup+1,___lmul@multiplier+1
 27661  010630  C09B  F062         	movff	__motor_get_speed_in_degrees@lookup+2,___lmul@multiplier+2
 27662  010634  C09C  F063         	movff	__motor_get_speed_in_degrees@lookup+3,___lmul@multiplier+3
 27663  010638  0E64               	movlw	100
 27664  01063A  0100               	movlb	0	; () banked
 27665  01063C  6F64               	movwf	___lmul@multiplicand& (0+255),b
 27666  01063E  0E00               	movlw	0
 27667  010640  6F65               	movwf	(___lmul@multiplicand+1)& (0+255),b
 27668  010642  0E00               	movlw	0
 27669  010644  6F66               	movwf	(___lmul@multiplicand+2)& (0+255),b
 27670  010646  0E00               	movlw	0
 27671  010648  6F67               	movwf	(___lmul@multiplicand+3)& (0+255),b
 27672  01064A  EC14  F0A6         	call	___lmul	;wreg free
 27673  01064E  C060  F099         	movff	?___lmul,__motor_get_speed_in_degrees@lookup
 27674  010652  C061  F09A         	movff	?___lmul+1,__motor_get_speed_in_degrees@lookup+1
 27675  010656  C062  F09B         	movff	?___lmul+2,__motor_get_speed_in_degrees@lookup+2
 27676  01065A  C063  F09C         	movff	?___lmul+3,__motor_get_speed_in_degrees@lookup+3
 27677                           
 27678                           ;motor.c: 574: speed = (float) lookup;
 27679  01065E  C099  F06A         	movff	__motor_get_speed_in_degrees@lookup,___xxtofl@val
 27680  010662  C09A  F06B         	movff	__motor_get_speed_in_degrees@lookup+1,___xxtofl@val+1
 27681  010666  C09B  F06C         	movff	__motor_get_speed_in_degrees@lookup+2,___xxtofl@val+2
 27682  01066A  C09C  F06D         	movff	__motor_get_speed_in_degrees@lookup+3,___xxtofl@val+3
 27683  01066E  0E00               	movlw	0
 27684  010670  EC5A  F080         	call	___xxtofl
 27685  010674  C06A  F095         	movff	?___xxtofl,__motor_get_speed_in_degrees@speed
 27686  010678  C06B  F096         	movff	?___xxtofl+1,__motor_get_speed_in_degrees@speed+1
 27687  01067C  C06C  F097         	movff	?___xxtofl+2,__motor_get_speed_in_degrees@speed+2
 27688  010680  C06D  F098         	movff	?___xxtofl+3,__motor_get_speed_in_degrees@speed+3
 27689                           
 27690                           ;motor.c: 575: speed /= config.full_circle_in_steps;
 27691  010684  C095  F078         	movff	__motor_get_speed_in_degrees@speed,___fldiv@b
 27692  010688  C096  F079         	movff	__motor_get_speed_in_degrees@speed+1,___fldiv@b+1
 27693  01068C  C097  F07A         	movff	__motor_get_speed_in_degrees@speed+2,___fldiv@b+2
 27694  010690  C098  F07B         	movff	__motor_get_speed_in_degrees@speed+3,___fldiv@b+3
 27695  010694  C196  F06A         	movff	_config,___xxtofl@val
 27696  010698  C197  F06B         	movff	_config+1,___xxtofl@val+1
 27697  01069C  C198  F06C         	movff	_config+2,___xxtofl@val+2
 27698  0106A0  C199  F06D         	movff	_config+3,___xxtofl@val+3
 27699  0106A4  0E00               	movlw	0
 27700  0106A6  EC5A  F080         	call	___xxtofl
 27701  0106AA  C06A  F07C         	movff	?___xxtofl,___fldiv@a
 27702  0106AE  C06B  F07D         	movff	?___xxtofl+1,___fldiv@a+1
 27703  0106B2  C06C  F07E         	movff	?___xxtofl+2,___fldiv@a+2
 27704  0106B6  C06D  F07F         	movff	?___xxtofl+3,___fldiv@a+3
 27705  0106BA  ECA0  F06A         	call	___fldiv	;wreg free
 27706  0106BE  C078  F095         	movff	?___fldiv,__motor_get_speed_in_degrees@speed
 27707  0106C2  C079  F096         	movff	?___fldiv+1,__motor_get_speed_in_degrees@speed+1
 27708  0106C6  C07A  F097         	movff	?___fldiv+2,__motor_get_speed_in_degrees@speed+2
 27709  0106CA  C07B  F098         	movff	?___fldiv+3,__motor_get_speed_in_degrees@speed+3
 27710                           
 27711                           ;motor.c: 578: return (uint16_t) speed;
 27712  0106CE  C095  F060         	movff	__motor_get_speed_in_degrees@speed,___fltol@f1
 27713  0106D2  C096  F061         	movff	__motor_get_speed_in_degrees@speed+1,___fltol@f1+1
 27714  0106D6  C097  F062         	movff	__motor_get_speed_in_degrees@speed+2,___fltol@f1+2
 27715  0106DA  C098  F063         	movff	__motor_get_speed_in_degrees@speed+3,___fltol@f1+3
 27716  0106DE  EC97  F091         	call	___fltol	;wreg free
 27717  0106E2  C060  F091         	movff	?___fltol,?__motor_get_speed_in_degrees
 27718  0106E6  C061  F092         	movff	?___fltol+1,?__motor_get_speed_in_degrees+1
 27719  0106EA  0012               	return	
 27720  0106EC                     __end_of__motor_get_speed_in_degrees:
 27721                           	opt stack 0
 27722                           tblptru	equ	0xFF8
 27723                           tblptrh	equ	0xFF7
 27724                           tblptrl	equ	0xFF6
 27725                           tablat	equ	0xFF5
 27726                           prodh	equ	0xFF4
 27727                           prodl	equ	0xFF3
 27728                           intcon	equ	0xFF2
 27729                           postinc0	equ	0xFEE
 27730                           wreg	equ	0xFE8
 27731                           indf1	equ	0xFE7
 27732                           postinc1	equ	0xFE6
 27733                           postdec1	equ	0xFE5
 27734                           plusw1	equ	0xFE3
 27735                           fsr1h	equ	0xFE2
 27736                           fsr1l	equ	0xFE1
 27737                           indf2	equ	0xFDF
 27738                           postinc2	equ	0xFDE
 27739                           postdec2	equ	0xFDD
 27740                           plusw2	equ	0xFDB
 27741                           fsr2h	equ	0xFDA
 27742                           fsr2l	equ	0xFD9
 27743                           status	equ	0xFD8
 27744                           
 27745 ;; *************** function ___fldiv *****************
 27746 ;; Defined at:
 27747 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
 27748 ;; Parameters:    Size  Location     Type
 27749 ;;  b               4   24[BANK0 ] unsigned int 
 27750 ;;  a               4   28[BANK0 ] unsigned int 
 27751 ;; Auto vars:     Size  Location     Type
 27752 ;;  grs             4   43[BANK0 ] unsigned long 
 27753 ;;  rem             4   36[BANK0 ] unsigned long 
 27754 ;;  new_exp         2   41[BANK0 ] int 
 27755 ;;  aexp            1   48[BANK0 ] unsigned char 
 27756 ;;  bexp            1   47[BANK0 ] unsigned char 
 27757 ;;  sign            1   40[BANK0 ] unsigned char 
 27758 ;; Return value:  Size  Location     Type
 27759 ;;                  4   24[BANK0 ] unsigned char 
 27760 ;; Registers used:
 27761 ;;		wreg, status,2, status,0
 27762 ;; Tracked objects:
 27763 ;;		On entry : 0/0
 27764 ;;		On exit  : 0/0
 27765 ;;		Unchanged: 0/0
 27766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27767 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27768 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27769 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27770 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27771 ;;Total ram usage:       25 bytes
 27772 ;; Hardware stack levels used:    1
 27773 ;; Hardware stack levels required when called:   10
 27774 ;; This function calls:
 27775 ;;		Nothing
 27776 ;; This function is called by:
 27777 ;;		__motor_steps_from_degrees_int
 27778 ;;		_motor_calculate_position_in_degrees
 27779 ;;		__motor_get_speed_in_degrees
 27780 ;;		__step_position_from_divide_position
 27781 ;;		_motor_divide_jump_to_nearest
 27782 ;;		_motor_arc_move
 27783 ;;		__steps_from_degrees
 27784 ;;		__motor_steps_from_degrees_float
 27785 ;;		_motor_steps_from_degrees
 27786 ;; This function uses a non-reentrant model
 27787 ;;
 27788                           
 27789                           	psect	text108
 27790  00D540                     __ptext108:
 27791                           	opt stack 0
 27792  00D540                     ___fldiv:
 27793                           	opt stack 18
 27794                           
 27795                           ;incstack = 0
 27796  00D540  0100               	movlb	0	; () banked
 27797  00D542  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27798  00D544  0B80               	andlw	128
 27799  00D546  6F88               	movwf	___fldiv@sign& (0+255),b
 27800  00D548  517B               	movf	(___fldiv@b+3)& (0+255),w,b
 27801  00D54A  257B               	addwf	(___fldiv@b+3)& (0+255),w,b
 27802  00D54C  6F8F               	movwf	___fldiv@bexp& (0+255),b
 27803                           
 27804                           ; BSR set to: 0
 27805  00D54E  BF7A               	btfsc	(___fldiv@b+2)& (0+255),7,b
 27806                           
 27807                           ; BSR set to: 0
 27808  00D550  818F               	bsf	___fldiv@bexp& (0+255),0,b
 27809                           
 27810                           ; BSR set to: 0
 27811                           
 27812                           ; BSR set to: 0
 27813  00D552  518F               	movf	___fldiv@bexp& (0+255),w,b
 27814  00D554  B4D8               	btfsc	status,2,c
 27815  00D556  D00D               	goto	l3642
 27816                           
 27817                           ; BSR set to: 0
 27818  00D558  298F               	incf	___fldiv@bexp& (0+255),w,b
 27819  00D55A  A4D8               	btfss	status,2,c
 27820  00D55C  D008               	goto	l3643
 27821                           
 27822                           ; BSR set to: 0
 27823  00D55E  0E00               	movlw	0
 27824  00D560  6F78               	movwf	___fldiv@b& (0+255),b
 27825  00D562  0E00               	movlw	0
 27826  00D564  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27827  00D566  0E00               	movlw	0
 27828  00D568  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27829  00D56A  0E00               	movlw	0
 27830  00D56C  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27831  00D56E                     l3643:
 27832                           
 27833                           ; BSR set to: 0
 27834                           
 27835                           ; BSR set to: 0
 27836  00D56E  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 27837  00D570  D006               	goto	L37
 27838  00D572                     l3642:
 27839                           
 27840                           ; BSR set to: 0
 27841                           
 27842                           ; BSR set to: 0
 27843  00D572  0E00               	movlw	0
 27844  00D574  6F78               	movwf	___fldiv@b& (0+255),b
 27845  00D576  0E00               	movlw	0
 27846  00D578  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27847  00D57A  0E00               	movlw	0
 27848  00D57C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27849  00D57E                     L37:
 27850  00D57E  0E00               	movlw	0
 27851  00D580  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27852                           
 27853                           ; BSR set to: 0
 27854                           
 27855                           ; BSR set to: 0
 27856  00D582  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27857  00D584  0B80               	andlw	128
 27858  00D586  1B88               	xorwf	___fldiv@sign& (0+255),f,b
 27859                           
 27860                           ; BSR set to: 0
 27861  00D588  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 27862  00D58A  257F               	addwf	(___fldiv@a+3)& (0+255),w,b
 27863  00D58C  6F90               	movwf	___fldiv@aexp& (0+255),b
 27864                           
 27865                           ; BSR set to: 0
 27866  00D58E  BF7E               	btfsc	(___fldiv@a+2)& (0+255),7,b
 27867                           
 27868                           ; BSR set to: 0
 27869  00D590  8190               	bsf	___fldiv@aexp& (0+255),0,b
 27870                           
 27871                           ; BSR set to: 0
 27872                           
 27873                           ; BSR set to: 0
 27874  00D592  5190               	movf	___fldiv@aexp& (0+255),w,b
 27875  00D594  B4D8               	btfsc	status,2,c
 27876  00D596  D00D               	goto	l3646
 27877                           
 27878                           ; BSR set to: 0
 27879  00D598  2990               	incf	___fldiv@aexp& (0+255),w,b
 27880  00D59A  A4D8               	btfss	status,2,c
 27881  00D59C  D008               	goto	l3647
 27882                           
 27883                           ; BSR set to: 0
 27884  00D59E  0E00               	movlw	0
 27885  00D5A0  6F7C               	movwf	___fldiv@a& (0+255),b
 27886  00D5A2  0E00               	movlw	0
 27887  00D5A4  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 27888  00D5A6  0E00               	movlw	0
 27889  00D5A8  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 27890  00D5AA  0E00               	movlw	0
 27891  00D5AC  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 27892  00D5AE                     l3647:
 27893                           
 27894                           ; BSR set to: 0
 27895                           
 27896                           ; BSR set to: 0
 27897  00D5AE  8F7E               	bsf	(___fldiv@a+2)& (0+255),7,b
 27898  00D5B0  D006               	goto	L38
 27899  00D5B2                     l3646:
 27900                           
 27901                           ; BSR set to: 0
 27902                           
 27903                           ; BSR set to: 0
 27904  00D5B2  0E00               	movlw	0
 27905  00D5B4  6F7C               	movwf	___fldiv@a& (0+255),b
 27906  00D5B6  0E00               	movlw	0
 27907  00D5B8  6F7D               	movwf	(___fldiv@a+1)& (0+255),b
 27908  00D5BA  0E00               	movlw	0
 27909  00D5BC  6F7E               	movwf	(___fldiv@a+2)& (0+255),b
 27910  00D5BE                     L38:
 27911  00D5BE  0E00               	movlw	0
 27912  00D5C0  6F7F               	movwf	(___fldiv@a+3)& (0+255),b
 27913                           
 27914                           ; BSR set to: 0
 27915                           
 27916                           ; BSR set to: 0
 27917  00D5C2  517C               	movf	___fldiv@a& (0+255),w,b
 27918  00D5C4  117D               	iorwf	(___fldiv@a+1)& (0+255),w,b
 27919  00D5C6  117E               	iorwf	(___fldiv@a+2)& (0+255),w,b
 27920  00D5C8  117F               	iorwf	(___fldiv@a+3)& (0+255),w,b
 27921  00D5CA  A4D8               	btfss	status,2,c
 27922  00D5CC  D017               	goto	l3649
 27923                           
 27924                           ; BSR set to: 0
 27925  00D5CE  0E00               	movlw	0
 27926  00D5D0  6F78               	movwf	___fldiv@b& (0+255),b
 27927  00D5D2  0E00               	movlw	0
 27928  00D5D4  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27929  00D5D6  0E00               	movlw	0
 27930  00D5D8  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27931  00D5DA  0E00               	movlw	0
 27932  00D5DC  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27933                           
 27934                           ; BSR set to: 0
 27935  00D5DE  0E80               	movlw	128
 27936  00D5E0  137A               	iorwf	(___fldiv@b+2)& (0+255),f,b
 27937  00D5E2  0E7F               	movlw	127
 27938  00D5E4  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 27939                           
 27940                           ; BSR set to: 0
 27941  00D5E6  5188               	movf	___fldiv@sign& (0+255),w,b
 27942  00D5E8  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 27943                           
 27944                           ; BSR set to: 0
 27945  00D5EA  C078  F078         	movff	___fldiv@b,?___fldiv
 27946  00D5EE  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 27947  00D5F2  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 27948  00D5F6  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 27949                           
 27950                           ; BSR set to: 0
 27951  00D5FA  0012               	return	
 27952  00D5FC                     l3649:
 27953                           
 27954                           ; BSR set to: 0
 27955                           
 27956                           ; BSR set to: 0
 27957  00D5FC  518F               	movf	___fldiv@bexp& (0+255),w,b
 27958  00D5FE  A4D8               	btfss	status,2,c
 27959  00D600  D011               	goto	l3651
 27960                           
 27961                           ; BSR set to: 0
 27962  00D602  0E00               	movlw	0
 27963  00D604  6F78               	movwf	___fldiv@b& (0+255),b
 27964  00D606  0E00               	movlw	0
 27965  00D608  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 27966  00D60A  0E00               	movlw	0
 27967  00D60C  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 27968  00D60E  0E00               	movlw	0
 27969  00D610  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 27970                           
 27971                           ; BSR set to: 0
 27972  00D612  C078  F078         	movff	___fldiv@b,?___fldiv
 27973  00D616  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 27974  00D61A  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 27975  00D61E  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 27976                           
 27977                           ; BSR set to: 0
 27978  00D622  0012               	return	
 27979  00D624                     l3651:
 27980                           
 27981                           ; BSR set to: 0
 27982                           
 27983                           ; BSR set to: 0
 27984  00D624  5190               	movf	___fldiv@aexp& (0+255),w,b
 27985  00D626  6F80               	movwf	??___fldiv& (0+255),b
 27986  00D628  6B81               	clrf	(??___fldiv+1)& (0+255),b
 27987  00D62A  1F80               	comf	??___fldiv& (0+255),f,b
 27988  00D62C  1F81               	comf	(??___fldiv+1)& (0+255),f,b
 27989  00D62E  4B80               	infsnz	??___fldiv& (0+255),f,b
 27990  00D630  2B81               	incf	(??___fldiv+1)& (0+255),f,b
 27991  00D632  518F               	movf	___fldiv@bexp& (0+255),w,b
 27992  00D634  6F82               	movwf	(??___fldiv+2)& (0+255),b
 27993  00D636  6B83               	clrf	(??___fldiv+3)& (0+255),b
 27994  00D638  5180               	movf	??___fldiv& (0+255),w,b
 27995  00D63A  2782               	addwf	(??___fldiv+2)& (0+255),f,b
 27996  00D63C  5181               	movf	(??___fldiv+1)& (0+255),w,b
 27997  00D63E  2383               	addwfc	(??___fldiv+3)& (0+255),f,b
 27998  00D640  0E7F               	movlw	127
 27999  00D642  2582               	addwf	(??___fldiv+2)& (0+255),w,b
 28000  00D644  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28001  00D646  0E00               	movlw	0
 28002  00D648  2183               	addwfc	(??___fldiv+3)& (0+255),w,b
 28003  00D64A  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28004                           
 28005                           ; BSR set to: 0
 28006  00D64C  C078  F084         	movff	___fldiv@b,___fldiv@rem
 28007  00D650  C079  F085         	movff	___fldiv@b+1,___fldiv@rem+1
 28008  00D654  C07A  F086         	movff	___fldiv@b+2,___fldiv@rem+2
 28009  00D658  C07B  F087         	movff	___fldiv@b+3,___fldiv@rem+3
 28010                           
 28011                           ; BSR set to: 0
 28012  00D65C  0E00               	movlw	0
 28013  00D65E  6F78               	movwf	___fldiv@b& (0+255),b
 28014  00D660  0E00               	movlw	0
 28015  00D662  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28016  00D664  0E00               	movlw	0
 28017  00D666  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28018  00D668  0E00               	movlw	0
 28019  00D66A  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28020                           
 28021                           ; BSR set to: 0
 28022  00D66C  0E00               	movlw	0
 28023  00D66E  6F8B               	movwf	___fldiv@grs& (0+255),b
 28024  00D670  0E00               	movlw	0
 28025  00D672  6F8C               	movwf	(___fldiv@grs+1)& (0+255),b
 28026  00D674  0E00               	movlw	0
 28027  00D676  6F8D               	movwf	(___fldiv@grs+2)& (0+255),b
 28028  00D678  0E00               	movlw	0
 28029  00D67A  6F8E               	movwf	(___fldiv@grs+3)& (0+255),b
 28030                           
 28031                           ; BSR set to: 0
 28032  00D67C  0E00               	movlw	0
 28033  00D67E  6F90               	movwf	___fldiv@aexp& (0+255),b
 28034  00D680  D028               	goto	l3652
 28035  00D682                     
 28036                           ; BSR set to: 0
 28037                           
 28038                           ; BSR set to: 0
 28039  00D682  5190               	movf	___fldiv@aexp& (0+255),w,b
 28040  00D684  B4D8               	btfsc	status,2,c
 28041  00D686  D011               	goto	l3654
 28042                           
 28043                           ; BSR set to: 0
 28044  00D688  90D8               	bcf	status,0,c
 28045  00D68A  3784               	rlcf	___fldiv@rem& (0+255),f,b
 28046  00D68C  3785               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 28047  00D68E  3786               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 28048  00D690  3787               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 28049  00D692  90D8               	bcf	status,0,c
 28050  00D694  3778               	rlcf	___fldiv@b& (0+255),f,b
 28051  00D696  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28052  00D698  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28053  00D69A  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28054                           
 28055                           ; BSR set to: 0
 28056  00D69C  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28057                           
 28058                           ; BSR set to: 0
 28059  00D69E  8178               	bsf	___fldiv@b& (0+255),0,b
 28060                           
 28061                           ; BSR set to: 0
 28062  00D6A0  90D8               	bcf	status,0,c
 28063  00D6A2  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28064  00D6A4  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28065  00D6A6  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28066  00D6A8  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28067  00D6AA                     l3654:
 28068                           
 28069                           ; BSR set to: 0
 28070                           
 28071                           ; BSR set to: 0
 28072  00D6AA  517C               	movf	___fldiv@a& (0+255),w,b
 28073  00D6AC  5D84               	subwf	___fldiv@rem& (0+255),w,b
 28074  00D6AE  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28075  00D6B0  5985               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 28076  00D6B2  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28077  00D6B4  5986               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 28078  00D6B6  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28079  00D6B8  5987               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 28080  00D6BA  A0D8               	btfss	status,0,c
 28081  00D6BC  D009               	goto	l3656
 28082                           
 28083                           ; BSR set to: 0
 28084  00D6BE  8D8E               	bsf	(___fldiv@grs+3)& (0+255),6,b
 28085                           
 28086                           ; BSR set to: 0
 28087  00D6C0  517C               	movf	___fldiv@a& (0+255),w,b
 28088  00D6C2  5F84               	subwf	___fldiv@rem& (0+255),f,b
 28089  00D6C4  517D               	movf	(___fldiv@a+1)& (0+255),w,b
 28090  00D6C6  5B85               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 28091  00D6C8  517E               	movf	(___fldiv@a+2)& (0+255),w,b
 28092  00D6CA  5B86               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 28093  00D6CC  517F               	movf	(___fldiv@a+3)& (0+255),w,b
 28094  00D6CE  5B87               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 28095  00D6D0                     l3656:
 28096                           
 28097                           ; BSR set to: 0
 28098                           
 28099                           ; BSR set to: 0
 28100  00D6D0  2B90               	incf	___fldiv@aexp& (0+255),f,b
 28101  00D6D2                     l3652:
 28102                           
 28103                           ; BSR set to: 0
 28104  00D6D2  0E19               	movlw	25
 28105  00D6D4  6590               	cpfsgt	___fldiv@aexp& (0+255),b
 28106  00D6D6  D7D5               	goto	l3653
 28107                           
 28108                           ; BSR set to: 0
 28109                           
 28110                           ; BSR set to: 0
 28111  00D6D8  5184               	movf	___fldiv@rem& (0+255),w,b
 28112  00D6DA  1185               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 28113  00D6DC  1186               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 28114  00D6DE  1187               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 28115  00D6E0  B4D8               	btfsc	status,2,c
 28116  00D6E2  D011               	goto	l3659
 28117                           
 28118                           ; BSR set to: 0
 28119  00D6E4  818B               	bsf	___fldiv@grs& (0+255),0,b
 28120                           
 28121                           ; BSR set to: 0
 28122  00D6E6  D00F               	goto	l3659
 28123  00D6E8                     
 28124                           ; BSR set to: 0
 28125                           
 28126                           ; BSR set to: 0
 28127  00D6E8  90D8               	bcf	status,0,c
 28128  00D6EA  3778               	rlcf	___fldiv@b& (0+255),f,b
 28129  00D6EC  3779               	rlcf	(___fldiv@b+1)& (0+255),f,b
 28130  00D6EE  377A               	rlcf	(___fldiv@b+2)& (0+255),f,b
 28131  00D6F0  377B               	rlcf	(___fldiv@b+3)& (0+255),f,b
 28132                           
 28133                           ; BSR set to: 0
 28134  00D6F2  BF8E               	btfsc	(___fldiv@grs+3)& (0+255),7,b
 28135                           
 28136                           ; BSR set to: 0
 28137  00D6F4  8178               	bsf	___fldiv@b& (0+255),0,b
 28138                           
 28139                           ; BSR set to: 0
 28140  00D6F6  90D8               	bcf	status,0,c
 28141  00D6F8  378B               	rlcf	___fldiv@grs& (0+255),f,b
 28142  00D6FA  378C               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 28143  00D6FC  378D               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 28144  00D6FE  378E               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 28145  00D700  0789               	decf	___fldiv@new_exp& (0+255),f,b
 28146  00D702  A0D8               	btfss	status,0,c
 28147  00D704  078A               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 28148  00D706                     l3659:
 28149                           
 28150                           ; BSR set to: 0
 28151                           
 28152                           ; BSR set to: 0
 28153  00D706  AF7A               	btfss	(___fldiv@b+2)& (0+255),7,b
 28154  00D708  D7EF               	goto	l3660
 28155                           
 28156                           ; BSR set to: 0
 28157                           
 28158                           ; BSR set to: 0
 28159  00D70A  0E00               	movlw	0
 28160  00D70C  6F90               	movwf	___fldiv@aexp& (0+255),b
 28161                           
 28162                           ; BSR set to: 0
 28163  00D70E  AF8E               	btfss	(___fldiv@grs+3)& (0+255),7,b
 28164  00D710  D016               	goto	l3666
 28165                           
 28166                           ; BSR set to: 0
 28167  00D712  0EFF               	movlw	255
 28168  00D714  158B               	andwf	___fldiv@grs& (0+255),w,b
 28169  00D716  6F80               	movwf	??___fldiv& (0+255),b
 28170  00D718  0EFF               	movlw	255
 28171  00D71A  158C               	andwf	(___fldiv@grs+1)& (0+255),w,b
 28172  00D71C  6F81               	movwf	(??___fldiv+1)& (0+255),b
 28173  00D71E  0EFF               	movlw	255
 28174  00D720  158D               	andwf	(___fldiv@grs+2)& (0+255),w,b
 28175  00D722  6F82               	movwf	(??___fldiv+2)& (0+255),b
 28176  00D724  0E7F               	movlw	127
 28177  00D726  158E               	andwf	(___fldiv@grs+3)& (0+255),w,b
 28178  00D728  6F83               	movwf	(??___fldiv+3)& (0+255),b
 28179  00D72A  5180               	movf	??___fldiv& (0+255),w,b
 28180  00D72C  1181               	iorwf	(??___fldiv+1)& (0+255),w,b
 28181  00D72E  1182               	iorwf	(??___fldiv+2)& (0+255),w,b
 28182  00D730  1183               	iorwf	(??___fldiv+3)& (0+255),w,b
 28183  00D732  A4D8               	btfss	status,2,c
 28184  00D734  D002               	goto	u13020
 28185                           
 28186                           ; BSR set to: 0
 28187                           
 28188                           ; BSR set to: 0
 28189  00D736  A178               	btfss	___fldiv@b& (0+255),0,b
 28190  00D738  D002               	goto	l3666
 28191  00D73A                     u13020:
 28192                           
 28193                           ; BSR set to: 0
 28194  00D73A  0E01               	movlw	1
 28195  00D73C  6F90               	movwf	___fldiv@aexp& (0+255),b
 28196  00D73E                     l3666:
 28197                           
 28198                           ; BSR set to: 0
 28199                           
 28200                           ; BSR set to: 0
 28201                           
 28202                           ; BSR set to: 0
 28203  00D73E  5190               	movf	___fldiv@aexp& (0+255),w,b
 28204  00D740  B4D8               	btfsc	status,2,c
 28205  00D742  D01F               	goto	l3668
 28206                           
 28207                           ; BSR set to: 0
 28208  00D744  0E01               	movlw	1
 28209  00D746  2778               	addwf	___fldiv@b& (0+255),f,b
 28210  00D748  0E00               	movlw	0
 28211  00D74A  2379               	addwfc	(___fldiv@b+1)& (0+255),f,b
 28212  00D74C  237A               	addwfc	(___fldiv@b+2)& (0+255),f,b
 28213  00D74E  237B               	addwfc	(___fldiv@b+3)& (0+255),f,b
 28214                           
 28215                           ; BSR set to: 0
 28216  00D750  A17B               	btfss	(___fldiv@b+3)& (0+255),0,b
 28217  00D752  D017               	goto	l3668
 28218                           
 28219                           ; BSR set to: 0
 28220  00D754  C078  F080         	movff	___fldiv@b,??___fldiv
 28221  00D758  C079  F081         	movff	___fldiv@b+1,??___fldiv+1
 28222  00D75C  C07A  F082         	movff	___fldiv@b+2,??___fldiv+2
 28223  00D760  C07B  F083         	movff	___fldiv@b+3,??___fldiv+3
 28224  00D764  3583               	rlcf	(??___fldiv+3)& (0+255),w,b
 28225  00D766  3383               	rrcf	(??___fldiv+3)& (0+255),f,b
 28226  00D768  3382               	rrcf	(??___fldiv+2)& (0+255),f,b
 28227  00D76A  3381               	rrcf	(??___fldiv+1)& (0+255),f,b
 28228  00D76C  3380               	rrcf	??___fldiv& (0+255),f,b
 28229  00D76E  C080  F078         	movff	??___fldiv,___fldiv@b
 28230  00D772  C081  F079         	movff	??___fldiv+1,___fldiv@b+1
 28231  00D776  C082  F07A         	movff	??___fldiv+2,___fldiv@b+2
 28232  00D77A  C083  F07B         	movff	??___fldiv+3,___fldiv@b+3
 28233                           
 28234                           ; BSR set to: 0
 28235  00D77E  4B89               	infsnz	___fldiv@new_exp& (0+255),f,b
 28236  00D780  2B8A               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 28237  00D782                     l3668:
 28238                           
 28239                           ; BSR set to: 0
 28240                           
 28241                           ; BSR set to: 0
 28242                           
 28243                           ; BSR set to: 0
 28244  00D782  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28245  00D784  D010               	goto	l3669
 28246  00D786  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28247  00D788  E103               	bnz	u13050
 28248  00D78A  2989               	incf	___fldiv@new_exp& (0+255),w,b
 28249  00D78C  A0D8               	btfss	status,0,c
 28250  00D78E  D00B               	goto	l3669
 28251  00D790                     u13050:
 28252                           
 28253                           ; BSR set to: 0
 28254  00D790  0E00               	movlw	0
 28255  00D792  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28256  00D794  6989               	setf	___fldiv@new_exp& (0+255),b
 28257  00D796  0E00               	movlw	0
 28258  00D798  6F78               	movwf	___fldiv@b& (0+255),b
 28259  00D79A  0E00               	movlw	0
 28260  00D79C  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28261  00D79E  0E00               	movlw	0
 28262  00D7A0  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28263  00D7A2  0E00               	movlw	0
 28264  00D7A4  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28265  00D7A6                     l3669:
 28266                           
 28267                           ; BSR set to: 0
 28268                           
 28269                           ; BSR set to: 0
 28270  00D7A6  BF8A               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 28271  00D7A8  D005               	goto	u13060
 28272  00D7AA  518A               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 28273  00D7AC  E111               	bnz	l14232
 28274  00D7AE  0589               	decf	___fldiv@new_exp& (0+255),w,b
 28275  00D7B0  B0D8               	btfsc	status,0,c
 28276  00D7B2  D00E               	goto	l3670
 28277  00D7B4                     u13060:
 28278                           
 28279                           ; BSR set to: 0
 28280  00D7B4  0E00               	movlw	0
 28281  00D7B6  6F8A               	movwf	(___fldiv@new_exp+1)& (0+255),b
 28282  00D7B8  0E00               	movlw	0
 28283  00D7BA  6F89               	movwf	___fldiv@new_exp& (0+255),b
 28284  00D7BC  0E00               	movlw	0
 28285  00D7BE  6F78               	movwf	___fldiv@b& (0+255),b
 28286  00D7C0  0E00               	movlw	0
 28287  00D7C2  6F79               	movwf	(___fldiv@b+1)& (0+255),b
 28288  00D7C4  0E00               	movlw	0
 28289  00D7C6  6F7A               	movwf	(___fldiv@b+2)& (0+255),b
 28290  00D7C8  0E00               	movlw	0
 28291  00D7CA  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28292  00D7CC  0E00               	movlw	0
 28293  00D7CE  6F88               	movwf	___fldiv@sign& (0+255),b
 28294  00D7D0                     l3670:
 28295  00D7D0                     l14232:
 28296                           
 28297                           ; BSR set to: 0
 28298  00D7D0  C089  F08F         	movff	___fldiv@new_exp,___fldiv@bexp
 28299                           
 28300                           ; BSR set to: 0
 28301  00D7D4  A18F               	btfss	___fldiv@bexp& (0+255),0,b
 28302  00D7D6  D002               	goto	l3671
 28303                           
 28304                           ; BSR set to: 0
 28305  00D7D8  8F7A               	bsf	(___fldiv@b+2)& (0+255),7,b
 28306  00D7DA  D001               	goto	l3672
 28307  00D7DC                     l3671:
 28308                           
 28309                           ; BSR set to: 0
 28310                           
 28311                           ; BSR set to: 0
 28312  00D7DC  9F7A               	bcf	(___fldiv@b+2)& (0+255),7,b
 28313  00D7DE                     l3672:
 28314                           
 28315                           ; BSR set to: 0
 28316                           
 28317                           ; BSR set to: 0
 28318  00D7DE  90D8               	bcf	status,0,c
 28319  00D7E0  318F               	rrcf	___fldiv@bexp& (0+255),w,b
 28320  00D7E2  6F7B               	movwf	(___fldiv@b+3)& (0+255),b
 28321                           
 28322                           ; BSR set to: 0
 28323  00D7E4  5188               	movf	___fldiv@sign& (0+255),w,b
 28324  00D7E6  137B               	iorwf	(___fldiv@b+3)& (0+255),f,b
 28325                           
 28326                           ; BSR set to: 0
 28327  00D7E8  C078  F078         	movff	___fldiv@b,?___fldiv
 28328  00D7EC  C079  F079         	movff	___fldiv@b+1,?___fldiv+1
 28329  00D7F0  C07A  F07A         	movff	___fldiv@b+2,?___fldiv+2
 28330  00D7F4  C07B  F07B         	movff	___fldiv@b+3,?___fldiv+3
 28331  00D7F8  0012               	return	
 28332  00D7FA                     __end_of___fldiv:
 28333                           	opt stack 0
 28334                           tblptru	equ	0xFF8
 28335                           tblptrh	equ	0xFF7
 28336                           tblptrl	equ	0xFF6
 28337                           tablat	equ	0xFF5
 28338                           prodh	equ	0xFF4
 28339                           prodl	equ	0xFF3
 28340                           intcon	equ	0xFF2
 28341                           postinc0	equ	0xFEE
 28342                           wreg	equ	0xFE8
 28343                           indf1	equ	0xFE7
 28344                           postinc1	equ	0xFE6
 28345                           postdec1	equ	0xFE5
 28346                           plusw1	equ	0xFE3
 28347                           fsr1h	equ	0xFE2
 28348                           fsr1l	equ	0xFE1
 28349                           indf2	equ	0xFDF
 28350                           postinc2	equ	0xFDE
 28351                           postdec2	equ	0xFDD
 28352                           plusw2	equ	0xFDB
 28353                           fsr2h	equ	0xFDA
 28354                           fsr2l	equ	0xFD9
 28355                           status	equ	0xFD8
 28356                           
 28357 ;; *************** function __display_signed_itoa *****************
 28358 ;; Defined at:
 28359 ;;		line 120 in file "display.c"
 28360 ;; Parameters:    Size  Location     Type
 28361 ;;  value           2   47[BANK0 ] int 
 28362 ;;  text            2   49[BANK0 ] PTR unsigned char 
 28363 ;;		 -> display_prepare@temp(10), 
 28364 ;; Auto vars:     Size  Location     Type
 28365 ;;		None
 28366 ;; Return value:  Size  Location     Type
 28367 ;;                  1    wreg      void 
 28368 ;; Registers used:
 28369 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28370 ;; Tracked objects:
 28371 ;;		On entry : 0/0
 28372 ;;		On exit  : 0/0
 28373 ;;		Unchanged: 0/0
 28374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28375 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28378 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28379 ;;Total ram usage:        4 bytes
 28380 ;; Hardware stack levels used:    1
 28381 ;; Hardware stack levels required when called:   14
 28382 ;; This function calls:
 28383 ;;		__display_padded_itoa
 28384 ;; This function is called by:
 28385 ;;		_display_prepare
 28386 ;; This function uses a non-reentrant model
 28387 ;;
 28388                           
 28389                           	psect	text109
 28390  0152C4                     __ptext109:
 28391                           	opt stack 0
 28392  0152C4                     __display_signed_itoa:
 28393                           	opt stack 15
 28394                           
 28395                           ;display.c: 122: if(value<0)
 28396                           
 28397                           ; BSR set to: 0
 28398                           ;incstack = 0
 28399  0152C4  0100               	movlb	0	; () banked
 28400  0152C6  AF90               	btfss	(__display_signed_itoa@value+1)& (0+255),7,b
 28401  0152C8  D00A               	goto	l1340
 28402                           
 28403                           ; BSR set to: 0
 28404                           ;display.c: 123: {;display.c: 124: value = -value;
 28405  0152CA  6D8F               	negf	__display_signed_itoa@value& (0+255),b
 28406  0152CC  1F90               	comf	(__display_signed_itoa@value+1)& (0+255),f,b
 28407  0152CE  B0D8               	btfsc	status,0,c
 28408  0152D0  2B90               	incf	(__display_signed_itoa@value+1)& (0+255),f,b
 28409                           
 28410                           ; BSR set to: 0
 28411                           ;display.c: 125: text[0] = '-';
 28412  0152D2  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28413  0152D6  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28414  0152DA  0E2D               	movlw	45
 28415  0152DC  D005               	goto	L39
 28416  0152DE                     l1340:
 28417                           
 28418                           ; BSR set to: 0
 28419                           ;display.c: 127: else;display.c: 128: {;display.c: 129: text[0] = '+';
 28420                           
 28421                           ; BSR set to: 0
 28422  0152DE  C091  FFD9         	movff	__display_signed_itoa@text,fsr2l
 28423  0152E2  C092  FFDA         	movff	__display_signed_itoa@text+1,fsr2h
 28424  0152E6  0E2B               	movlw	43
 28425  0152E8                     L39:
 28426  0152E8  6EDF               	movwf	indf2,c
 28427                           
 28428                           ; BSR set to: 0
 28429                           ;display.c: 130: };display.c: 131: _display_padded_itoa(value, 0, &text[1]);
 28430                           
 28431                           ; BSR set to: 0
 28432  0152EA  C08F  F078         	movff	__display_signed_itoa@value,__display_padded_itoa@value
 28433  0152EE  C090  F079         	movff	__display_signed_itoa@value+1,__display_padded_itoa@value+1
 28434  0152F2  0E00               	movlw	0
 28435  0152F4  6F7A               	movwf	__display_padded_itoa@length& (0+255),b
 28436  0152F6  0E01               	movlw	1
 28437  0152F8  2591               	addwf	__display_signed_itoa@text& (0+255),w,b
 28438  0152FA  6F7B               	movwf	__display_padded_itoa@text& (0+255),b
 28439  0152FC  0E00               	movlw	0
 28440  0152FE  2192               	addwfc	(__display_signed_itoa@text+1)& (0+255),w,b
 28441  015300  6F7C               	movwf	(__display_padded_itoa@text+1)& (0+255),b
 28442  015302  EC47  F090         	call	__display_padded_itoa	;wreg free
 28443  015306  0012               	return		;funcret
 28444  015308                     __end_of__display_signed_itoa:
 28445                           	opt stack 0
 28446                           tblptru	equ	0xFF8
 28447                           tblptrh	equ	0xFF7
 28448                           tblptrl	equ	0xFF6
 28449                           tablat	equ	0xFF5
 28450                           prodh	equ	0xFF4
 28451                           prodl	equ	0xFF3
 28452                           intcon	equ	0xFF2
 28453                           postinc0	equ	0xFEE
 28454                           wreg	equ	0xFE8
 28455                           indf1	equ	0xFE7
 28456                           postinc1	equ	0xFE6
 28457                           postdec1	equ	0xFE5
 28458                           plusw1	equ	0xFE3
 28459                           fsr1h	equ	0xFE2
 28460                           fsr1l	equ	0xFE1
 28461                           indf2	equ	0xFDF
 28462                           postinc2	equ	0xFDE
 28463                           postdec2	equ	0xFDD
 28464                           plusw2	equ	0xFDB
 28465                           fsr2h	equ	0xFDA
 28466                           fsr2l	equ	0xFD9
 28467                           status	equ	0xFD8
 28468                           
 28469 ;; *************** function __display_padded_itoa *****************
 28470 ;; Defined at:
 28471 ;;		line 98 in file "display.c"
 28472 ;; Parameters:    Size  Location     Type
 28473 ;;  value           2   24[BANK0 ] int 
 28474 ;;  length          1   26[BANK0 ] unsigned char 
 28475 ;;  text            2   27[BANK0 ] PTR unsigned char 
 28476 ;;		 -> display_prepare@temp(10), 
 28477 ;; Auto vars:     Size  Location     Type
 28478 ;;  tmp            10   34[BANK0 ] unsigned char [10]
 28479 ;;  padding         1   46[BANK0 ] unsigned char 
 28480 ;;  pos             1   45[BANK0 ] unsigned char 
 28481 ;;  len             1   44[BANK0 ] unsigned char 
 28482 ;; Return value:  Size  Location     Type
 28483 ;;                  1    wreg      void 
 28484 ;; Registers used:
 28485 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28486 ;; Tracked objects:
 28487 ;;		On entry : 0/0
 28488 ;;		On exit  : 0/0
 28489 ;;		Unchanged: 0/0
 28490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28491 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28492 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28493 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28494 ;;      Totals:         0      23       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28495 ;;Total ram usage:       23 bytes
 28496 ;; Hardware stack levels used:    1
 28497 ;; Hardware stack levels required when called:   13
 28498 ;; This function calls:
 28499 ;;		_itoa
 28500 ;;		_strlen
 28501 ;; This function is called by:
 28502 ;;		__display_signed_itoa
 28503 ;;		_display_prepare
 28504 ;; This function uses a non-reentrant model
 28505 ;;
 28506                           
 28507                           	psect	text110
 28508  01208E                     __ptext110:
 28509                           	opt stack 0
 28510  01208E                     __display_padded_itoa:
 28511                           	opt stack 15
 28512                           
 28513                           ;display.c: 100: uint8_t pos;;display.c: 101: uint8_t padding;;display.c: 103: uint8_t l
      +                          en;;display.c: 104: char tmp[10];;display.c: 105: itoa(tmp, value, 10);
 28514                           
 28515                           ;incstack = 0
 28516  01208E  0E82               	movlw	low __display_padded_itoa@tmp
 28517  012090  0100               	movlb	0	; () banked
 28518  012092  6F70               	movwf	itoa@buf& (0+255),b
 28519  012094  0E00               	movlw	high __display_padded_itoa@tmp
 28520  012096  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28521  012098  C078  F072         	movff	__display_padded_itoa@value,itoa@val
 28522  01209C  C079  F073         	movff	__display_padded_itoa@value+1,itoa@val+1
 28523  0120A0  0E00               	movlw	0
 28524  0120A2  6F75               	movwf	(itoa@base+1)& (0+255),b
 28525  0120A4  0E0A               	movlw	10
 28526  0120A6  6F74               	movwf	itoa@base& (0+255),b
 28527  0120A8  EC84  F0A9         	call	_itoa	;wreg free
 28528                           
 28529                           ;display.c: 106: len = strlen(tmp);
 28530  0120AC  0E82               	movlw	low __display_padded_itoa@tmp
 28531  0120AE  0100               	movlb	0	; () banked
 28532  0120B0  6F60               	movwf	strlen@s& (0+255),b
 28533  0120B2  0E00               	movlw	high __display_padded_itoa@tmp
 28534  0120B4  6F61               	movwf	(strlen@s+1)& (0+255),b
 28535  0120B6  EC2A  F0AA         	call	_strlen	;wreg free
 28536  0120BA  0100               	movlb	0	; () banked
 28537  0120BC  5160               	movf	?_strlen& (0+255),w,b
 28538  0120BE  6F8C               	movwf	__display_padded_itoa@len& (0+255),b
 28539                           
 28540                           ; BSR set to: 0
 28541                           ;display.c: 107: padding = 0;
 28542  0120C0  0E00               	movlw	0
 28543  0120C2  6F8E               	movwf	__display_padded_itoa@padding& (0+255),b
 28544                           
 28545                           ;display.c: 108: while((padding+len)<length)
 28546  0120C4  D00B               	goto	l1331
 28547  0120C6                     
 28548                           ; BSR set to: 0
 28549                           ;display.c: 109: {;display.c: 110: text[padding] = ' ';
 28550                           
 28551                           ; BSR set to: 0
 28552  0120C6  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28553  0120C8  0D01               	mullw	1
 28554  0120CA  50F3               	movf	prodl,w,c
 28555  0120CC  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28556  0120CE  6ED9               	movwf	fsr2l,c
 28557  0120D0  50F4               	movf	prodh,w,c
 28558  0120D2  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28559  0120D4  6EDA               	movwf	fsr2h,c
 28560  0120D6  0E20               	movlw	32
 28561  0120D8  6EDF               	movwf	indf2,c
 28562                           
 28563                           ; BSR set to: 0
 28564                           ;display.c: 111: ++padding;
 28565  0120DA  2B8E               	incf	__display_padded_itoa@padding& (0+255),f,b
 28566  0120DC                     l1331:
 28567                           
 28568                           ; BSR set to: 0
 28569                           
 28570                           ; BSR set to: 0
 28571  0120DC  517A               	movf	__display_padded_itoa@length& (0+255),w,b
 28572  0120DE  6F7D               	movwf	??__display_padded_itoa& (0+255),b
 28573  0120E0  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28574  0120E2  518C               	movf	__display_padded_itoa@len& (0+255),w,b
 28575  0120E4  C08E  F07F         	movff	__display_padded_itoa@padding,??__display_padded_itoa+2
 28576  0120E8  6B80               	clrf	(??__display_padded_itoa+3)& (0+255),b
 28577  0120EA  277F               	addwf	(??__display_padded_itoa+2)& (0+255),f,b
 28578  0120EC  0E00               	movlw	0
 28579  0120EE  2380               	addwfc	(??__display_padded_itoa+3)& (0+255),f,b
 28580  0120F0  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28581  0120F2  5D7F               	subwf	(??__display_padded_itoa+2)& (0+255),w,b
 28582  0120F4  5180               	movf	(??__display_padded_itoa+3)& (0+255),w,b
 28583  0120F6  0A80               	xorlw	128
 28584  0120F8  6F81               	movwf	(??__display_padded_itoa+4)& (0+255),b
 28585  0120FA  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28586  0120FC  0A80               	xorlw	128
 28587  0120FE  5981               	subwfb	(??__display_padded_itoa+4)& (0+255),w,b
 28588  012100  A0D8               	btfss	status,0,c
 28589  012102  D7E1               	goto	l1332
 28590                           
 28591                           ; BSR set to: 0
 28592                           ;display.c: 112: };display.c: 113: for(pos=0; tmp[pos]; ++pos)
 28593                           
 28594                           ; BSR set to: 0
 28595  012104  0E00               	movlw	0
 28596  012106  6F8D               	movwf	__display_padded_itoa@pos& (0+255),b
 28597  012108  D018               	goto	l1334
 28598  01210A                     
 28599                           ; BSR set to: 0
 28600                           ;display.c: 114: {;display.c: 115: text[pos+padding] = tmp[pos];
 28601                           
 28602                           ; BSR set to: 0
 28603  01210A  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28604  01210C  0D01               	mullw	1
 28605  01210E  0E82               	movlw	low __display_padded_itoa@tmp
 28606  012110  24F3               	addwf	prodl,w,c
 28607  012112  6ED9               	movwf	fsr2l,c
 28608  012114  0E00               	movlw	high __display_padded_itoa@tmp
 28609  012116  20F4               	addwfc	prodh,w,c
 28610  012118  6EDA               	movwf	fsr2h,c
 28611  01211A  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28612  01211C  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28613  012120  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28614  012122  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28615  012124  0E00               	movlw	0
 28616  012126  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28617  012128  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28618  01212A  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28619  01212C  6EE1               	movwf	fsr1l,c
 28620  01212E  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28621  012130  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28622  012132  6EE2               	movwf	fsr1h,c
 28623  012134  CFDF FFE7          	movff	indf2,indf1
 28624                           
 28625                           ; BSR set to: 0
 28626  012138  2B8D               	incf	__display_padded_itoa@pos& (0+255),f,b
 28627  01213A                     l1334:
 28628                           
 28629                           ; BSR set to: 0
 28630                           
 28631                           ; BSR set to: 0
 28632  01213A  518D               	movf	__display_padded_itoa@pos& (0+255),w,b
 28633  01213C  0D01               	mullw	1
 28634  01213E  0E82               	movlw	low __display_padded_itoa@tmp
 28635  012140  24F3               	addwf	prodl,w,c
 28636  012142  6ED9               	movwf	fsr2l,c
 28637  012144  0E00               	movlw	high __display_padded_itoa@tmp
 28638  012146  20F4               	addwfc	prodh,w,c
 28639  012148  6EDA               	movwf	fsr2h,c
 28640  01214A  50DF               	movf	indf2,w,c
 28641  01214C  A4D8               	btfss	status,2,c
 28642  01214E  D7DD               	goto	l1335
 28643                           
 28644                           ; BSR set to: 0
 28645                           ;display.c: 116: };display.c: 117: text[pos+padding] = 0x00;
 28646                           
 28647                           ; BSR set to: 0
 28648  012150  518E               	movf	__display_padded_itoa@padding& (0+255),w,b
 28649  012152  C08D  F07D         	movff	__display_padded_itoa@pos,??__display_padded_itoa
 28650  012156  6B7E               	clrf	(??__display_padded_itoa+1)& (0+255),b
 28651  012158  277D               	addwf	??__display_padded_itoa& (0+255),f,b
 28652  01215A  0E00               	movlw	0
 28653  01215C  237E               	addwfc	(??__display_padded_itoa+1)& (0+255),f,b
 28654  01215E  517D               	movf	??__display_padded_itoa& (0+255),w,b
 28655  012160  257B               	addwf	__display_padded_itoa@text& (0+255),w,b
 28656  012162  6ED9               	movwf	fsr2l,c
 28657  012164  517E               	movf	(??__display_padded_itoa+1)& (0+255),w,b
 28658  012166  217C               	addwfc	(__display_padded_itoa@text+1)& (0+255),w,b
 28659  012168  6EDA               	movwf	fsr2h,c
 28660  01216A  0E00               	movlw	0
 28661  01216C  6EDF               	movwf	indf2,c
 28662                           
 28663                           ; BSR set to: 0
 28664  01216E  0012               	return		;funcret
 28665  012170                     __end_of__display_padded_itoa:
 28666                           	opt stack 0
 28667                           tblptru	equ	0xFF8
 28668                           tblptrh	equ	0xFF7
 28669                           tblptrl	equ	0xFF6
 28670                           tablat	equ	0xFF5
 28671                           prodh	equ	0xFF4
 28672                           prodl	equ	0xFF3
 28673                           intcon	equ	0xFF2
 28674                           postinc0	equ	0xFEE
 28675                           wreg	equ	0xFE8
 28676                           indf1	equ	0xFE7
 28677                           postinc1	equ	0xFE6
 28678                           postdec1	equ	0xFE5
 28679                           plusw1	equ	0xFE3
 28680                           fsr1h	equ	0xFE2
 28681                           fsr1l	equ	0xFE1
 28682                           indf2	equ	0xFDF
 28683                           postinc2	equ	0xFDE
 28684                           postdec2	equ	0xFDD
 28685                           plusw2	equ	0xFDB
 28686                           fsr2h	equ	0xFDA
 28687                           fsr2l	equ	0xFD9
 28688                           status	equ	0xFD8
 28689                           
 28690 ;; *************** function __display_itoa_long *****************
 28691 ;; Defined at:
 28692 ;;		line 202 in file "display.c"
 28693 ;; Parameters:    Size  Location     Type
 28694 ;;  value           4   87[BANK0 ] long 
 28695 ;;  decimals        1   91[BANK0 ] unsigned char 
 28696 ;;  text            2   92[BANK0 ] PTR unsigned char 
 28697 ;;		 -> display_prepare@temp(10), 
 28698 ;; Auto vars:     Size  Location     Type
 28699 ;;  short_value     2   99[BANK0 ] int 
 28700 ;;  last_digit      1  101[BANK0 ] char 
 28701 ;;  length          1   98[BANK0 ] unsigned char 
 28702 ;; Return value:  Size  Location     Type
 28703 ;;                  1    wreg      void 
 28704 ;; Registers used:
 28705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28706 ;; Tracked objects:
 28707 ;;		On entry : 0/0
 28708 ;;		On exit  : 0/0
 28709 ;;		Unchanged: 0/0
 28710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28711 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28712 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28713 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28714 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28715 ;;Total ram usage:       15 bytes
 28716 ;; Hardware stack levels used:    1
 28717 ;; Hardware stack levels required when called:   14
 28718 ;; This function calls:
 28719 ;;		___aldiv
 28720 ;;		___almod
 28721 ;;		__display_itoa
 28722 ;;		_strlen
 28723 ;; This function is called by:
 28724 ;;		_display_prepare
 28725 ;; This function uses a non-reentrant model
 28726 ;;
 28727                           
 28728                           	psect	text111
 28729  010EE2                     __ptext111:
 28730                           	opt stack 0
 28731  010EE2                     __display_itoa_long:
 28732                           	opt stack 15
 28733                           
 28734                           ;display.c: 204: int16_t short_value;;display.c: 205: int8_t last_digit;;display.c: 206:
      +                           uint8_t length;;display.c: 208: short_value = (int16_t) value;
 28735                           
 28736                           ; BSR set to: 0
 28737                           ;incstack = 0
 28738  010EE2  C0B7  F0C3         	movff	__display_itoa_long@value,__display_itoa_long@short_value
 28739  010EE6  C0B8  F0C4         	movff	__display_itoa_long@value+1,__display_itoa_long@short_value+1
 28740                           
 28741                           ;display.c: 209: if(short_value==value)
 28742  010EEA  C0C3  F0BE         	movff	__display_itoa_long@short_value,??__display_itoa_long
 28743  010EEE  C0C4  F0BF         	movff	__display_itoa_long@short_value+1,??__display_itoa_long+1
 28744  010EF2  0E00               	movlw	0
 28745  010EF4  0100               	movlb	0	; () banked
 28746  010EF6  BFBF               	btfsc	(??__display_itoa_long+1)& (0+255),7,b
 28747  010EF8  0EFF               	movlw	255
 28748  010EFA  6FC0               	movwf	(??__display_itoa_long+2)& (0+255),b
 28749  010EFC  6FC1               	movwf	(??__display_itoa_long+3)& (0+255),b
 28750  010EFE  51B7               	movf	__display_itoa_long@value& (0+255),w,b
 28751  010F00  19BE               	xorwf	??__display_itoa_long& (0+255),w,b
 28752  010F02  E117               	bnz	l17520
 28753  010F04  51B8               	movf	(__display_itoa_long@value+1)& (0+255),w,b
 28754  010F06  19BF               	xorwf	(??__display_itoa_long+1)& (0+255),w,b
 28755  010F08  E114               	bnz	l17520
 28756  010F0A  51B9               	movf	(__display_itoa_long@value+2)& (0+255),w,b
 28757  010F0C  19C0               	xorwf	(??__display_itoa_long+2)& (0+255),w,b
 28758  010F0E  E111               	bnz	l17520
 28759  010F10  51BA               	movf	(__display_itoa_long@value+3)& (0+255),w,b
 28760  010F12  19C1               	xorwf	(??__display_itoa_long+3)& (0+255),w,b
 28761  010F14  A4D8               	btfss	status,2,c
 28762  010F16  D00D               	goto	l1367
 28763                           
 28764                           ; BSR set to: 0
 28765                           ;display.c: 210: {;display.c: 211: _display_itoa(short_value, decimals, text);
 28766  010F18  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 28767  010F1C  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 28768  010F20  C0BB  F0A1         	movff	__display_itoa_long@decimals,__display_itoa@decimals
 28769  010F24  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 28770  010F28  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 28771  010F2C  ECD7  F071         	call	__display_itoa	;wreg free
 28772                           
 28773                           ;display.c: 212: }
 28774  010F30  0012               	return	
 28775  010F32                     l1367:
 28776  010F32                     l17520:
 28777                           
 28778                           ;display.c: 213: else;display.c: 214: {;display.c: 215: short_value = value / 10;
 28779  010F32  C0B7  F060         	movff	__display_itoa_long@value,___aldiv@dividend
 28780  010F36  C0B8  F061         	movff	__display_itoa_long@value+1,___aldiv@dividend+1
 28781  010F3A  C0B9  F062         	movff	__display_itoa_long@value+2,___aldiv@dividend+2
 28782  010F3E  C0BA  F063         	movff	__display_itoa_long@value+3,___aldiv@dividend+3
 28783  010F42  0E0A               	movlw	10
 28784  010F44  0100               	movlb	0	; () banked
 28785  010F46  6F64               	movwf	___aldiv@divisor& (0+255),b
 28786  010F48  0E00               	movlw	0
 28787  010F4A  6F65               	movwf	(___aldiv@divisor+1)& (0+255),b
 28788  010F4C  0E00               	movlw	0
 28789  010F4E  6F66               	movwf	(___aldiv@divisor+2)& (0+255),b
 28790  010F50  0E00               	movlw	0
 28791  010F52  6F67               	movwf	(___aldiv@divisor+3)& (0+255),b
 28792  010F54  EC5F  F095         	call	___aldiv	;wreg free
 28793  010F58  C060  F0C3         	movff	?___aldiv,__display_itoa_long@short_value
 28794  010F5C  C061  F0C4         	movff	?___aldiv+1,__display_itoa_long@short_value+1
 28795                           
 28796                           ;display.c: 216: _display_itoa(short_value, decimals-1, text);
 28797  010F60  C0C3  F09F         	movff	__display_itoa_long@short_value,__display_itoa@value
 28798  010F64  C0C4  F0A0         	movff	__display_itoa_long@short_value+1,__display_itoa@value+1
 28799  010F68  0100               	movlb	0	; () banked
 28800  010F6A  05BB               	decf	__display_itoa_long@decimals& (0+255),w,b
 28801  010F6C  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 28802  010F6E  C0BC  F0A2         	movff	__display_itoa_long@text,__display_itoa@text
 28803  010F72  C0BD  F0A3         	movff	__display_itoa_long@text+1,__display_itoa@text+1
 28804  010F76  ECD7  F071         	call	__display_itoa	;wreg free
 28805                           
 28806                           ;display.c: 217: length = strlen(text);
 28807  010F7A  C0BC  F060         	movff	__display_itoa_long@text,strlen@s
 28808  010F7E  C0BD  F061         	movff	__display_itoa_long@text+1,strlen@s+1
 28809  010F82  EC2A  F0AA         	call	_strlen	;wreg free
 28810  010F86  0100               	movlb	0	; () banked
 28811  010F88  5160               	movf	?_strlen& (0+255),w,b
 28812  010F8A  6FC2               	movwf	__display_itoa_long@length& (0+255),b
 28813                           
 28814                           ; BSR set to: 0
 28815                           ;display.c: 218: last_digit = value % 10;
 28816  010F8C  C0B7  F060         	movff	__display_itoa_long@value,___almod@dividend
 28817  010F90  C0B8  F061         	movff	__display_itoa_long@value+1,___almod@dividend+1
 28818  010F94  C0B9  F062         	movff	__display_itoa_long@value+2,___almod@dividend+2
 28819  010F98  C0BA  F063         	movff	__display_itoa_long@value+3,___almod@dividend+3
 28820  010F9C  0E0A               	movlw	10
 28821  010F9E  6F64               	movwf	___almod@divisor& (0+255),b
 28822  010FA0  0E00               	movlw	0
 28823  010FA2  6F65               	movwf	(___almod@divisor+1)& (0+255),b
 28824  010FA4  0E00               	movlw	0
 28825  010FA6  6F66               	movwf	(___almod@divisor+2)& (0+255),b
 28826  010FA8  0E00               	movlw	0
 28827  010FAA  6F67               	movwf	(___almod@divisor+3)& (0+255),b
 28828  010FAC  EC09  F099         	call	___almod	;wreg free
 28829  010FB0  0100               	movlb	0	; () banked
 28830  010FB2  5160               	movf	?___almod& (0+255),w,b
 28831  010FB4  6FC5               	movwf	__display_itoa_long@last_digit& (0+255),b
 28832                           
 28833                           ; BSR set to: 0
 28834                           ;display.c: 219: if(last_digit<0)
 28835  010FB6  BFC5               	btfsc	__display_itoa_long@last_digit& (0+255),7,b
 28836                           
 28837                           ; BSR set to: 0
 28838                           ;display.c: 220: last_digit = -last_digit;
 28839  010FB8  6DC5               	negf	__display_itoa_long@last_digit& (0+255),b
 28840                           
 28841                           ; BSR set to: 0
 28842                           ;display.c: 221: text[length] = last_digit + 0x30;
 28843                           
 28844                           ; BSR set to: 0
 28845  010FBA  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 28846  010FBC  0D01               	mullw	1
 28847  010FBE  50F3               	movf	prodl,w,c
 28848  010FC0  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 28849  010FC2  6ED9               	movwf	fsr2l,c
 28850  010FC4  50F4               	movf	prodh,w,c
 28851  010FC6  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 28852  010FC8  6EDA               	movwf	fsr2h,c
 28853  010FCA  51C5               	movf	__display_itoa_long@last_digit& (0+255),w,b
 28854  010FCC  0F30               	addlw	48
 28855  010FCE  6EDF               	movwf	indf2,c
 28856                           
 28857                           ; BSR set to: 0
 28858                           ;display.c: 222: text[length+1] = 0x00;
 28859  010FD0  51C2               	movf	__display_itoa_long@length& (0+255),w,b
 28860  010FD2  6FBE               	movwf	??__display_itoa_long& (0+255),b
 28861  010FD4  6BBF               	clrf	(??__display_itoa_long+1)& (0+255),b
 28862  010FD6  0E01               	movlw	1
 28863  010FD8  27BE               	addwf	??__display_itoa_long& (0+255),f,b
 28864  010FDA  0E00               	movlw	0
 28865  010FDC  23BF               	addwfc	(??__display_itoa_long+1)& (0+255),f,b
 28866  010FDE  51BE               	movf	??__display_itoa_long& (0+255),w,b
 28867  010FE0  25BC               	addwf	__display_itoa_long@text& (0+255),w,b
 28868  010FE2  6ED9               	movwf	fsr2l,c
 28869  010FE4  51BF               	movf	(??__display_itoa_long+1)& (0+255),w,b
 28870  010FE6  21BD               	addwfc	(__display_itoa_long@text+1)& (0+255),w,b
 28871  010FE8  6EDA               	movwf	fsr2h,c
 28872  010FEA  0E00               	movlw	0
 28873  010FEC  6EDF               	movwf	indf2,c
 28874  010FEE  0012               	return	
 28875  010FF0                     __end_of__display_itoa_long:
 28876                           	opt stack 0
 28877                           tblptru	equ	0xFF8
 28878                           tblptrh	equ	0xFF7
 28879                           tblptrl	equ	0xFF6
 28880                           tablat	equ	0xFF5
 28881                           prodh	equ	0xFF4
 28882                           prodl	equ	0xFF3
 28883                           intcon	equ	0xFF2
 28884                           postinc0	equ	0xFEE
 28885                           wreg	equ	0xFE8
 28886                           indf1	equ	0xFE7
 28887                           postinc1	equ	0xFE6
 28888                           postdec1	equ	0xFE5
 28889                           plusw1	equ	0xFE3
 28890                           fsr1h	equ	0xFE2
 28891                           fsr1l	equ	0xFE1
 28892                           indf2	equ	0xFDF
 28893                           postinc2	equ	0xFDE
 28894                           postdec2	equ	0xFDD
 28895                           plusw2	equ	0xFDB
 28896                           fsr2h	equ	0xFDA
 28897                           fsr2l	equ	0xFD9
 28898                           status	equ	0xFD8
 28899                           
 28900 ;; *************** function __display_itoa *****************
 28901 ;; Defined at:
 28902 ;;		line 134 in file "display.c"
 28903 ;; Parameters:    Size  Location     Type
 28904 ;;  value           2   63[BANK0 ] int 
 28905 ;;  decimals        1   65[BANK0 ] unsigned char 
 28906 ;;  text            2   66[BANK0 ] PTR unsigned char 
 28907 ;;		 -> display_prepare@temp(10), display_content(80), 
 28908 ;; Auto vars:     Size  Location     Type
 28909 ;;  tmp            10   74[BANK0 ] unsigned char [10]
 28910 ;;  pos             1   86[BANK0 ] unsigned char 
 28911 ;;  missing         1   85[BANK0 ] char 
 28912 ;;  len             1   84[BANK0 ] unsigned char 
 28913 ;; Return value:  Size  Location     Type
 28914 ;;                  1    wreg      void 
 28915 ;; Registers used:
 28916 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 28917 ;; Tracked objects:
 28918 ;;		On entry : 0/0
 28919 ;;		On exit  : 0/0
 28920 ;;		Unchanged: 0/0
 28921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28922 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28923 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28924 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28925 ;;      Totals:         0      24       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28926 ;;Total ram usage:       24 bytes
 28927 ;; Hardware stack levels used:    1
 28928 ;; Hardware stack levels required when called:   13
 28929 ;; This function calls:
 28930 ;;		_itoa
 28931 ;;		_strlen
 28932 ;; This function is called by:
 28933 ;;		__display_itoa_long
 28934 ;;		_display_prepare
 28935 ;; This function uses a non-reentrant model
 28936 ;;
 28937                           
 28938                           	psect	text112
 28939  00E3AE                     __ptext112:
 28940                           	opt stack 0
 28941  00E3AE                     __display_itoa:
 28942                           	opt stack 15
 28943                           
 28944                           ;display.c: 136: uint8_t pos;;display.c: 137: uint8_t len;;display.c: 138: int8_t missin
      +                          g;;display.c: 139: char tmp[10];;display.c: 140: itoa(tmp, value, 10);
 28945                           
 28946                           ;incstack = 0
 28947  00E3AE  0EAA               	movlw	low __display_itoa@tmp
 28948  00E3B0  0100               	movlb	0	; () banked
 28949  00E3B2  6F70               	movwf	itoa@buf& (0+255),b
 28950  00E3B4  0E00               	movlw	high __display_itoa@tmp
 28951  00E3B6  6F71               	movwf	(itoa@buf+1)& (0+255),b
 28952  00E3B8  C09F  F072         	movff	__display_itoa@value,itoa@val
 28953  00E3BC  C0A0  F073         	movff	__display_itoa@value+1,itoa@val+1
 28954  00E3C0  0E00               	movlw	0
 28955  00E3C2  6F75               	movwf	(itoa@base+1)& (0+255),b
 28956  00E3C4  0E0A               	movlw	10
 28957  00E3C6  6F74               	movwf	itoa@base& (0+255),b
 28958  00E3C8  EC84  F0A9         	call	_itoa	;wreg free
 28959                           
 28960                           ;display.c: 141: len = strlen(tmp);
 28961  00E3CC  0EAA               	movlw	low __display_itoa@tmp
 28962  00E3CE  0100               	movlb	0	; () banked
 28963  00E3D0  6F60               	movwf	strlen@s& (0+255),b
 28964  00E3D2  0E00               	movlw	high __display_itoa@tmp
 28965  00E3D4  6F61               	movwf	(strlen@s+1)& (0+255),b
 28966  00E3D6  EC2A  F0AA         	call	_strlen	;wreg free
 28967  00E3DA  0100               	movlb	0	; () banked
 28968  00E3DC  5160               	movf	?_strlen& (0+255),w,b
 28969  00E3DE  6FB4               	movwf	__display_itoa@len& (0+255),b
 28970                           
 28971                           ; BSR set to: 0
 28972                           ;display.c: 143: if(value<0)
 28973  00E3E0  AFA0               	btfss	(__display_itoa@value+1)& (0+255),7,b
 28974  00E3E2  D054               	goto	l1345
 28975                           
 28976                           ; BSR set to: 0
 28977                           ;display.c: 144: {;display.c: 145: missing = decimals + 2 - len;
 28978  00E3E4  51B4               	movf	__display_itoa@len& (0+255),w,b
 28979  00E3E6  0800               	sublw	0
 28980  00E3E8  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 28981  00E3EA  0F02               	addlw	2
 28982  00E3EC  6FB5               	movwf	__display_itoa@missing& (0+255),b
 28983                           
 28984                           ;display.c: 146: if(missing>0)
 28985  00E3EE  51B5               	movf	__display_itoa@missing& (0+255),w,b
 28986  00E3F0  0A80               	xorlw	128
 28987  00E3F2  0F7F               	addlw	-129
 28988  00E3F4  A0D8               	btfss	status,0,c
 28989  00E3F6  D090               	goto	l1352
 28990                           
 28991                           ; BSR set to: 0
 28992                           ;display.c: 147: {;display.c: 148: for(pos=decimals;pos!=0xFF;--pos)
 28993  00E3F8  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 28994  00E3FC                     l16090:
 28995                           
 28996                           ; BSR set to: 0
 28997  00E3FC  29B6               	incf	__display_itoa@pos& (0+255),w,b
 28998  00E3FE  B4D8               	btfsc	status,2,c
 28999  00E400  D042               	goto	u15210
 29000                           
 29001                           ; BSR set to: 0
 29002                           ;display.c: 149: {;display.c: 150: if(pos>=missing)
 29003                           
 29004                           ; BSR set to: 0
 29005                           
 29006                           ; BSR set to: 0
 29007  00E402  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29008  00E404  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29009  00E406  D004               	goto	u15200
 29010  00E408  0AFF               	xorlw	255
 29011  00E40A  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29012  00E40C  B0D8               	btfsc	status,0,c
 29013  00E40E  D02A               	goto	l1349
 29014  00E410                     u15200:
 29015                           
 29016                           ; BSR set to: 0
 29017                           ;display.c: 151: {;display.c: 152: tmp[pos+1] = tmp[pos+1-missing];
 29018  00E410  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29019  00E414  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29020  00E416  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29021  00E418  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29022  00E41A  1FA4               	comf	??__display_itoa& (0+255),f,b
 29023  00E41C  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29024  00E41E  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29025  00E420  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29026  00E422  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29027  00E424  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29028  00E426  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29029  00E428  51A4               	movf	??__display_itoa& (0+255),w,b
 29030  00E42A  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29031  00E42C  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29032  00E42E  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29033  00E430  0E01               	movlw	1
 29034  00E432  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29035  00E434  0E00               	movlw	0
 29036  00E436  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29037  00E438  0EAA               	movlw	low __display_itoa@tmp
 29038  00E43A  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29039  00E43C  6ED9               	movwf	fsr2l,c
 29040  00E43E  0E00               	movlw	high __display_itoa@tmp
 29041  00E440  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29042  00E442  6EDA               	movwf	fsr2h,c
 29043  00E444  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29044  00E446  6FA8               	movwf	(??__display_itoa+4)& (0+255),b
 29045  00E448  6BA9               	clrf	(??__display_itoa+5)& (0+255),b
 29046  00E44A  0E01               	movlw	1
 29047  00E44C  27A8               	addwf	(??__display_itoa+4)& (0+255),f,b
 29048  00E44E  0E00               	movlw	0
 29049  00E450  23A9               	addwfc	(??__display_itoa+5)& (0+255),f,b
 29050  00E452  0EAA               	movlw	low __display_itoa@tmp
 29051  00E454  25A8               	addwf	(??__display_itoa+4)& (0+255),w,b
 29052  00E456  6EE1               	movwf	fsr1l,c
 29053  00E458  0E00               	movlw	high __display_itoa@tmp
 29054  00E45A  21A9               	addwfc	(??__display_itoa+5)& (0+255),w,b
 29055  00E45C  6EE2               	movwf	fsr1h,c
 29056  00E45E  CFDF FFE7          	movff	indf2,indf1
 29057                           
 29058                           ;display.c: 153: }
 29059  00E462  D00F               	goto	l1350
 29060  00E464                     l1349:
 29061                           
 29062                           ; BSR set to: 0
 29063                           ;display.c: 154: else;display.c: 155: {;display.c: 156: tmp[pos+1] = '0';
 29064                           
 29065                           ; BSR set to: 0
 29066  00E464  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29067  00E466  6FA4               	movwf	??__display_itoa& (0+255),b
 29068  00E468  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29069  00E46A  0E01               	movlw	1
 29070  00E46C  27A4               	addwf	??__display_itoa& (0+255),f,b
 29071  00E46E  0E00               	movlw	0
 29072  00E470  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29073  00E472  0EAA               	movlw	low __display_itoa@tmp
 29074  00E474  25A4               	addwf	??__display_itoa& (0+255),w,b
 29075  00E476  6ED9               	movwf	fsr2l,c
 29076  00E478  0E00               	movlw	high __display_itoa@tmp
 29077  00E47A  21A5               	addwfc	(??__display_itoa+1)& (0+255),w,b
 29078  00E47C  6EDA               	movwf	fsr2h,c
 29079  00E47E  0E30               	movlw	48
 29080  00E480  6EDF               	movwf	indf2,c
 29081  00E482                     l1350:
 29082                           
 29083                           ; BSR set to: 0
 29084                           
 29085                           ; BSR set to: 0
 29086  00E482  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29087  00E484  D7BB               	goto	l16090
 29088  00E486                     u15210:
 29089                           
 29090                           ; BSR set to: 0
 29091                           ;display.c: 157: };display.c: 158: };display.c: 159: len = decimals + 2;
 29092                           
 29093                           ; BSR set to: 0
 29094  00E486  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29095  00E488  0F02               	addlw	2
 29096  00E48A  D045               	goto	L40
 29097  00E48C                     l1345:
 29098                           
 29099                           ; BSR set to: 0
 29100                           ;display.c: 162: else;display.c: 163: {;display.c: 164: missing = decimals + 1 - len;
 29101                           
 29102                           ; BSR set to: 0
 29103  00E48C  51B4               	movf	__display_itoa@len& (0+255),w,b
 29104  00E48E  0800               	sublw	0
 29105  00E490  25A1               	addwf	__display_itoa@decimals& (0+255),w,b
 29106  00E492  6FA4               	movwf	??__display_itoa& (0+255),b
 29107  00E494  29A4               	incf	??__display_itoa& (0+255),w,b
 29108  00E496  6FB5               	movwf	__display_itoa@missing& (0+255),b
 29109                           
 29110                           ;display.c: 165: if(missing>0)
 29111  00E498  51B5               	movf	__display_itoa@missing& (0+255),w,b
 29112  00E49A  0A80               	xorlw	128
 29113  00E49C  0F7F               	addlw	-129
 29114  00E49E  A0D8               	btfss	status,0,c
 29115  00E4A0  D03B               	goto	l1352
 29116                           
 29117                           ; BSR set to: 0
 29118                           ;display.c: 166: {;display.c: 167: for(pos=decimals;pos!=0xFF;--pos)
 29119  00E4A2  C0A1  F0B6         	movff	__display_itoa@decimals,__display_itoa@pos
 29120  00E4A6                     l16110:
 29121                           
 29122                           ; BSR set to: 0
 29123  00E4A6  29B6               	incf	__display_itoa@pos& (0+255),w,b
 29124  00E4A8  B4D8               	btfsc	status,2,c
 29125  00E4AA  D034               	goto	u15250
 29126                           
 29127                           ; BSR set to: 0
 29128                           ;display.c: 168: {;display.c: 169: if(pos>=missing)
 29129                           
 29130                           ; BSR set to: 0
 29131                           
 29132                           ; BSR set to: 0
 29133  00E4AC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29134  00E4AE  BFB5               	btfsc	__display_itoa@missing& (0+255),7,b
 29135  00E4B0  D004               	goto	u15240
 29136  00E4B2  0AFF               	xorlw	255
 29137  00E4B4  25B5               	addwf	__display_itoa@missing& (0+255),w,b
 29138  00E4B6  B0D8               	btfsc	status,0,c
 29139  00E4B8  D021               	goto	l1355
 29140  00E4BA                     u15240:
 29141                           
 29142                           ; BSR set to: 0
 29143                           ;display.c: 170: {;display.c: 171: tmp[pos] = tmp[pos-missing];
 29144  00E4BA  C0B5  F0A4         	movff	__display_itoa@missing,??__display_itoa
 29145  00E4BE  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29146  00E4C0  BFA4               	btfsc	??__display_itoa& (0+255),7,b
 29147  00E4C2  07A5               	decf	(??__display_itoa+1)& (0+255),f,b
 29148  00E4C4  1FA4               	comf	??__display_itoa& (0+255),f,b
 29149  00E4C6  1FA5               	comf	(??__display_itoa+1)& (0+255),f,b
 29150  00E4C8  4BA4               	infsnz	??__display_itoa& (0+255),f,b
 29151  00E4CA  2BA5               	incf	(??__display_itoa+1)& (0+255),f,b
 29152  00E4CC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29153  00E4CE  6FA6               	movwf	(??__display_itoa+2)& (0+255),b
 29154  00E4D0  6BA7               	clrf	(??__display_itoa+3)& (0+255),b
 29155  00E4D2  51A4               	movf	??__display_itoa& (0+255),w,b
 29156  00E4D4  27A6               	addwf	(??__display_itoa+2)& (0+255),f,b
 29157  00E4D6  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29158  00E4D8  23A7               	addwfc	(??__display_itoa+3)& (0+255),f,b
 29159  00E4DA  0EAA               	movlw	low __display_itoa@tmp
 29160  00E4DC  25A6               	addwf	(??__display_itoa+2)& (0+255),w,b
 29161  00E4DE  6ED9               	movwf	fsr2l,c
 29162  00E4E0  0E00               	movlw	high __display_itoa@tmp
 29163  00E4E2  21A7               	addwfc	(??__display_itoa+3)& (0+255),w,b
 29164  00E4E4  6EDA               	movwf	fsr2h,c
 29165  00E4E6  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29166  00E4E8  0D01               	mullw	1
 29167  00E4EA  0EAA               	movlw	low __display_itoa@tmp
 29168  00E4EC  24F3               	addwf	prodl,w,c
 29169  00E4EE  6EE1               	movwf	fsr1l,c
 29170  00E4F0  0E00               	movlw	high __display_itoa@tmp
 29171  00E4F2  20F4               	addwfc	prodh,w,c
 29172  00E4F4  6EE2               	movwf	fsr1h,c
 29173  00E4F6  CFDF FFE7          	movff	indf2,indf1
 29174                           
 29175                           ;display.c: 172: }
 29176  00E4FA  D00A               	goto	l1356
 29177  00E4FC                     l1355:
 29178                           
 29179                           ; BSR set to: 0
 29180                           ;display.c: 173: else;display.c: 174: {;display.c: 175: tmp[pos] = '0';
 29181                           
 29182                           ; BSR set to: 0
 29183  00E4FC  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29184  00E4FE  0D01               	mullw	1
 29185  00E500  0EAA               	movlw	low __display_itoa@tmp
 29186  00E502  24F3               	addwf	prodl,w,c
 29187  00E504  6ED9               	movwf	fsr2l,c
 29188  00E506  0E00               	movlw	high __display_itoa@tmp
 29189  00E508  20F4               	addwfc	prodh,w,c
 29190  00E50A  6EDA               	movwf	fsr2h,c
 29191  00E50C  0E30               	movlw	48
 29192  00E50E  6EDF               	movwf	indf2,c
 29193  00E510                     l1356:
 29194                           
 29195                           ; BSR set to: 0
 29196                           
 29197                           ; BSR set to: 0
 29198  00E510  07B6               	decf	__display_itoa@pos& (0+255),f,b
 29199  00E512  D7C9               	goto	l16110
 29200  00E514                     u15250:
 29201                           
 29202                           ; BSR set to: 0
 29203                           ;display.c: 176: };display.c: 177: };display.c: 178: len = decimals + 1;
 29204                           
 29205                           ; BSR set to: 0
 29206  00E514  29A1               	incf	__display_itoa@decimals& (0+255),w,b
 29207  00E516                     L40:
 29208  00E516  6FB4               	movwf	__display_itoa@len& (0+255),b
 29209  00E518                     l1352:
 29210                           
 29211                           ; BSR set to: 0
 29212                           ;display.c: 179: };display.c: 180: };display.c: 182: decimals = len - decimals - 1;
 29213                           
 29214                           ; BSR set to: 0
 29215  00E518  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29216  00E51A  0800               	sublw	0
 29217  00E51C  25B4               	addwf	__display_itoa@len& (0+255),w,b
 29218  00E51E  6FA4               	movwf	??__display_itoa& (0+255),b
 29219  00E520  05A4               	decf	??__display_itoa& (0+255),w,b
 29220  00E522  6FA1               	movwf	__display_itoa@decimals& (0+255),b
 29221                           
 29222                           ; BSR set to: 0
 29223                           ;display.c: 184: for(pos=0;pos<len;++pos)
 29224  00E524  0E00               	movlw	0
 29225  00E526  6FB6               	movwf	__display_itoa@pos& (0+255),b
 29226  00E528  D023               	goto	l1357
 29227  00E52A                     
 29228                           ; BSR set to: 0
 29229                           ;display.c: 185: {;display.c: 186: text[pos] = tmp[pos];
 29230                           
 29231                           ; BSR set to: 0
 29232  00E52A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29233  00E52C  0D01               	mullw	1
 29234  00E52E  0EAA               	movlw	low __display_itoa@tmp
 29235  00E530  24F3               	addwf	prodl,w,c
 29236  00E532  6ED9               	movwf	fsr2l,c
 29237  00E534  0E00               	movlw	high __display_itoa@tmp
 29238  00E536  20F4               	addwfc	prodh,w,c
 29239  00E538  6EDA               	movwf	fsr2h,c
 29240  00E53A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29241  00E53C  0D01               	mullw	1
 29242  00E53E  50F3               	movf	prodl,w,c
 29243  00E540  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29244  00E542  6EE1               	movwf	fsr1l,c
 29245  00E544  50F4               	movf	prodh,w,c
 29246  00E546  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29247  00E548  6EE2               	movwf	fsr1h,c
 29248  00E54A  CFDF FFE7          	movff	indf2,indf1
 29249                           
 29250                           ; BSR set to: 0
 29251                           ;display.c: 187: if(pos==decimals)
 29252  00E54E  51A1               	movf	__display_itoa@decimals& (0+255),w,b
 29253  00E550  19B6               	xorwf	__display_itoa@pos& (0+255),w,b
 29254  00E552  A4D8               	btfss	status,2,c
 29255  00E554  D00C               	goto	l1359
 29256                           
 29257                           ; BSR set to: 0
 29258                           ;display.c: 188: {;display.c: 190: ++pos;
 29259  00E556  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29260                           
 29261                           ; BSR set to: 0
 29262                           ;display.c: 191: text[pos] = '.';
 29263  00E558  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29264  00E55A  0D01               	mullw	1
 29265  00E55C  50F3               	movf	prodl,w,c
 29266  00E55E  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29267  00E560  6ED9               	movwf	fsr2l,c
 29268  00E562  50F4               	movf	prodh,w,c
 29269  00E564  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29270  00E566  6EDA               	movwf	fsr2h,c
 29271  00E568  0E2E               	movlw	46
 29272  00E56A  6EDF               	movwf	indf2,c
 29273                           
 29274                           ;display.c: 192: break;
 29275  00E56C  D01E               	goto	l1361
 29276  00E56E                     l1359:
 29277                           
 29278                           ; BSR set to: 0
 29279                           
 29280                           ; BSR set to: 0
 29281  00E56E  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29282  00E570                     l1357:
 29283                           
 29284                           ; BSR set to: 0
 29285                           
 29286                           ; BSR set to: 0
 29287  00E570  51B4               	movf	__display_itoa@len& (0+255),w,b
 29288  00E572  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29289  00E574  B0D8               	btfsc	status,0,c
 29290  00E576  D019               	goto	l1361
 29291  00E578  D7D8               	goto	l1358
 29292  00E57A                     
 29293                           ; BSR set to: 0
 29294                           ;display.c: 196: {;display.c: 197: text[pos+1] = tmp[pos];
 29295                           
 29296                           ; BSR set to: 0
 29297  00E57A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29298  00E57C  0D01               	mullw	1
 29299  00E57E  0EAA               	movlw	low __display_itoa@tmp
 29300  00E580  24F3               	addwf	prodl,w,c
 29301  00E582  6ED9               	movwf	fsr2l,c
 29302  00E584  0E00               	movlw	high __display_itoa@tmp
 29303  00E586  20F4               	addwfc	prodh,w,c
 29304  00E588  6EDA               	movwf	fsr2h,c
 29305  00E58A  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29306  00E58C  6FA4               	movwf	??__display_itoa& (0+255),b
 29307  00E58E  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29308  00E590  0E01               	movlw	1
 29309  00E592  27A4               	addwf	??__display_itoa& (0+255),f,b
 29310  00E594  0E00               	movlw	0
 29311  00E596  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29312  00E598  51A4               	movf	??__display_itoa& (0+255),w,b
 29313  00E59A  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29314  00E59C  6EE1               	movwf	fsr1l,c
 29315  00E59E  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29316  00E5A0  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29317  00E5A2  6EE2               	movwf	fsr1h,c
 29318  00E5A4  CFDF FFE7          	movff	indf2,indf1
 29319                           
 29320                           ; BSR set to: 0
 29321  00E5A8  2BB6               	incf	__display_itoa@pos& (0+255),f,b
 29322  00E5AA                     l1361:
 29323                           
 29324                           ; BSR set to: 0
 29325                           
 29326                           ; BSR set to: 0
 29327  00E5AA  51B4               	movf	__display_itoa@len& (0+255),w,b
 29328  00E5AC  5DB6               	subwf	__display_itoa@pos& (0+255),w,b
 29329  00E5AE  A0D8               	btfss	status,0,c
 29330  00E5B0  D7E4               	goto	l1362
 29331                           
 29332                           ; BSR set to: 0
 29333                           ;display.c: 198: };display.c: 199: text[pos+1] = 0;
 29334                           
 29335                           ; BSR set to: 0
 29336  00E5B2  51B6               	movf	__display_itoa@pos& (0+255),w,b
 29337  00E5B4  6FA4               	movwf	??__display_itoa& (0+255),b
 29338  00E5B6  6BA5               	clrf	(??__display_itoa+1)& (0+255),b
 29339  00E5B8  0E01               	movlw	1
 29340  00E5BA  27A4               	addwf	??__display_itoa& (0+255),f,b
 29341  00E5BC  0E00               	movlw	0
 29342  00E5BE  23A5               	addwfc	(??__display_itoa+1)& (0+255),f,b
 29343  00E5C0  51A4               	movf	??__display_itoa& (0+255),w,b
 29344  00E5C2  25A2               	addwf	__display_itoa@text& (0+255),w,b
 29345  00E5C4  6ED9               	movwf	fsr2l,c
 29346  00E5C6  51A5               	movf	(??__display_itoa+1)& (0+255),w,b
 29347  00E5C8  21A3               	addwfc	(__display_itoa@text+1)& (0+255),w,b
 29348  00E5CA  6EDA               	movwf	fsr2h,c
 29349  00E5CC  0E00               	movlw	0
 29350  00E5CE  6EDF               	movwf	indf2,c
 29351                           
 29352                           ; BSR set to: 0
 29353  00E5D0  0012               	return		;funcret
 29354  00E5D2                     __end_of__display_itoa:
 29355                           	opt stack 0
 29356                           tblptru	equ	0xFF8
 29357                           tblptrh	equ	0xFF7
 29358                           tblptrl	equ	0xFF6
 29359                           tablat	equ	0xFF5
 29360                           prodh	equ	0xFF4
 29361                           prodl	equ	0xFF3
 29362                           intcon	equ	0xFF2
 29363                           postinc0	equ	0xFEE
 29364                           wreg	equ	0xFE8
 29365                           indf1	equ	0xFE7
 29366                           postinc1	equ	0xFE6
 29367                           postdec1	equ	0xFE5
 29368                           plusw1	equ	0xFE3
 29369                           fsr1h	equ	0xFE2
 29370                           fsr1l	equ	0xFE1
 29371                           indf2	equ	0xFDF
 29372                           postinc2	equ	0xFDE
 29373                           postdec2	equ	0xFDD
 29374                           plusw2	equ	0xFDB
 29375                           fsr2h	equ	0xFDA
 29376                           fsr2l	equ	0xFD9
 29377                           status	equ	0xFD8
 29378                           
 29379 ;; *************** function _strlen *****************
 29380 ;; Defined at:
 29381 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strlen.c"
 29382 ;; Parameters:    Size  Location     Type
 29383 ;;  s               2    0[BANK0 ] PTR const unsigned char 
 29384 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29385 ;; Auto vars:     Size  Location     Type
 29386 ;;  cp              2    4[BANK0 ] PTR const unsigned char 
 29387 ;;		 -> display_prepare@temp(10), _display_itoa@tmp(10), _display_padded_itoa@tmp(10), 
 29388 ;; Return value:  Size  Location     Type
 29389 ;;                  2    0[BANK0 ] unsigned int 
 29390 ;; Registers used:
 29391 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 29392 ;; Tracked objects:
 29393 ;;		On entry : 0/0
 29394 ;;		On exit  : 0/0
 29395 ;;		Unchanged: 0/0
 29396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29397 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29398 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29399 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29400 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29401 ;;Total ram usage:        6 bytes
 29402 ;; Hardware stack levels used:    1
 29403 ;; Hardware stack levels required when called:   10
 29404 ;; This function calls:
 29405 ;;		Nothing
 29406 ;; This function is called by:
 29407 ;;		__display_padded_itoa
 29408 ;;		__display_itoa
 29409 ;;		__display_itoa_long
 29410 ;;		_display_prepare
 29411 ;; This function uses a non-reentrant model
 29412 ;;
 29413                           
 29414                           	psect	text113
 29415  015454                     __ptext113:
 29416                           	opt stack 0
 29417  015454                     _strlen:
 29418                           	opt stack 19
 29419                           
 29420                           ; BSR set to: 0
 29421                           ;incstack = 0
 29422  015454  C060  F064         	movff	strlen@s,strlen@cp
 29423  015458  C061  F065         	movff	strlen@s+1,strlen@cp+1
 29424  01545C  D003               	goto	l3826
 29425  01545E  0100               	movlb	0	; () banked
 29426  015460  4B64               	infsnz	strlen@cp& (0+255),f,b
 29427  015462  2B65               	incf	(strlen@cp+1)& (0+255),f,b
 29428  015464                     l3826:
 29429                           
 29430                           ; BSR set to: 0
 29431  015464  C064  FFD9         	movff	strlen@cp,fsr2l
 29432  015468  C065  FFDA         	movff	strlen@cp+1,fsr2h
 29433  01546C  50DF               	movf	indf2,w,c
 29434  01546E  A4D8               	btfss	status,2,c
 29435  015470  D7F6               	goto	l3827
 29436  015472  C060  F062         	movff	strlen@s,??_strlen
 29437  015476  C061  F063         	movff	strlen@s+1,??_strlen+1
 29438  01547A  0100               	movlb	0	; () banked
 29439  01547C  1F62               	comf	??_strlen& (0+255),f,b
 29440  01547E  1F63               	comf	(??_strlen+1)& (0+255),f,b
 29441  015480  4B62               	infsnz	??_strlen& (0+255),f,b
 29442  015482  2B63               	incf	(??_strlen+1)& (0+255),f,b
 29443  015484  5164               	movf	strlen@cp& (0+255),w,b
 29444  015486  2562               	addwf	??_strlen& (0+255),w,b
 29445  015488  6F60               	movwf	?_strlen& (0+255),b
 29446  01548A  5165               	movf	(strlen@cp+1)& (0+255),w,b
 29447  01548C  2163               	addwfc	(??_strlen+1)& (0+255),w,b
 29448  01548E  6F61               	movwf	(?_strlen+1)& (0+255),b
 29449  015490  0012               	return	
 29450  015492                     __end_of_strlen:
 29451                           	opt stack 0
 29452                           tblptru	equ	0xFF8
 29453                           tblptrh	equ	0xFF7
 29454                           tblptrl	equ	0xFF6
 29455                           tablat	equ	0xFF5
 29456                           prodh	equ	0xFF4
 29457                           prodl	equ	0xFF3
 29458                           intcon	equ	0xFF2
 29459                           postinc0	equ	0xFEE
 29460                           wreg	equ	0xFE8
 29461                           indf1	equ	0xFE7
 29462                           postinc1	equ	0xFE6
 29463                           postdec1	equ	0xFE5
 29464                           plusw1	equ	0xFE3
 29465                           fsr1h	equ	0xFE2
 29466                           fsr1l	equ	0xFE1
 29467                           indf2	equ	0xFDF
 29468                           postinc2	equ	0xFDE
 29469                           postdec2	equ	0xFDD
 29470                           plusw2	equ	0xFDB
 29471                           fsr2h	equ	0xFDA
 29472                           fsr2l	equ	0xFD9
 29473                           status	equ	0xFD8
 29474                           
 29475 ;; *************** function _itoa *****************
 29476 ;; Defined at:
 29477 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29478 ;; Parameters:    Size  Location     Type
 29479 ;;  buf             2   16[BANK0 ] PTR unsigned char 
 29480 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29481 ;;  val             2   18[BANK0 ] int 
 29482 ;;  base            2   20[BANK0 ] int 
 29483 ;; Auto vars:     Size  Location     Type
 29484 ;;  cp              2   22[BANK0 ] PTR unsigned char 
 29485 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29486 ;; Return value:  Size  Location     Type
 29487 ;;                  2   16[BANK0 ] PTR unsigned char 
 29488 ;; Registers used:
 29489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29490 ;; Tracked objects:
 29491 ;;		On entry : 0/0
 29492 ;;		On exit  : 0/0
 29493 ;;		Unchanged: 0/0
 29494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29495 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29496 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29498 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29499 ;;Total ram usage:        8 bytes
 29500 ;; Hardware stack levels used:    1
 29501 ;; Hardware stack levels required when called:   12
 29502 ;; This function calls:
 29503 ;;		_utoa
 29504 ;; This function is called by:
 29505 ;;		__display_padded_itoa
 29506 ;;		__display_itoa
 29507 ;;		__display_itoa_u16
 29508 ;; This function uses a non-reentrant model
 29509 ;;
 29510                           
 29511                           	psect	text114
 29512  015308                     __ptext114:
 29513                           	opt stack 0
 29514  015308                     _itoa:
 29515                           	opt stack 14
 29516                           
 29517                           ; BSR set to: 0
 29518                           ;incstack = 0
 29519  015308  C070  F076         	movff	itoa@buf,itoa@cp
 29520  01530C  C071  F077         	movff	itoa@buf+1,itoa@cp+1
 29521  015310  0100               	movlb	0	; () banked
 29522  015312  AF73               	btfss	(itoa@val+1)& (0+255),7,b
 29523  015314  D00C               	goto	l3778
 29524                           
 29525                           ; BSR set to: 0
 29526  015316  C070  FFD9         	movff	itoa@buf,fsr2l
 29527  01531A  C071  FFDA         	movff	itoa@buf+1,fsr2h
 29528  01531E  0E2D               	movlw	45
 29529  015320  6EDF               	movwf	indf2,c
 29530                           
 29531                           ; BSR set to: 0
 29532  015322  4B70               	infsnz	itoa@buf& (0+255),f,b
 29533  015324  2B71               	incf	(itoa@buf+1)& (0+255),f,b
 29534                           
 29535                           ; BSR set to: 0
 29536  015326  6D72               	negf	itoa@val& (0+255),b
 29537  015328  1F73               	comf	(itoa@val+1)& (0+255),f,b
 29538  01532A  B0D8               	btfsc	status,0,c
 29539  01532C  2B73               	incf	(itoa@val+1)& (0+255),f,b
 29540  01532E                     l3778:
 29541                           
 29542                           ; BSR set to: 0
 29543                           
 29544                           ; BSR set to: 0
 29545  01532E  C070  F067         	movff	itoa@buf,utoa@buf
 29546  015332  C071  F068         	movff	itoa@buf+1,utoa@buf+1
 29547  015336  C072  F069         	movff	itoa@val,utoa@val
 29548  01533A  C073  F06A         	movff	itoa@val+1,utoa@val+1
 29549  01533E  C074  F06B         	movff	itoa@base,utoa@base
 29550  015342  C075  F06C         	movff	itoa@base+1,utoa@base+1
 29551  015346  EC60  F099         	call	_utoa	;wreg free
 29552  01534A  0012               	return	
 29553  01534C                     __end_of_itoa:
 29554                           	opt stack 0
 29555                           tblptru	equ	0xFF8
 29556                           tblptrh	equ	0xFF7
 29557                           tblptrl	equ	0xFF6
 29558                           tablat	equ	0xFF5
 29559                           prodh	equ	0xFF4
 29560                           prodl	equ	0xFF3
 29561                           intcon	equ	0xFF2
 29562                           postinc0	equ	0xFEE
 29563                           wreg	equ	0xFE8
 29564                           indf1	equ	0xFE7
 29565                           postinc1	equ	0xFE6
 29566                           postdec1	equ	0xFE5
 29567                           plusw1	equ	0xFE3
 29568                           fsr1h	equ	0xFE2
 29569                           fsr1l	equ	0xFE1
 29570                           indf2	equ	0xFDF
 29571                           postinc2	equ	0xFDE
 29572                           postdec2	equ	0xFDD
 29573                           plusw2	equ	0xFDB
 29574                           fsr2h	equ	0xFDA
 29575                           fsr2l	equ	0xFD9
 29576                           status	equ	0xFD8
 29577                           
 29578 ;; *************** function _utoa *****************
 29579 ;; Defined at:
 29580 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 29581 ;; Parameters:    Size  Location     Type
 29582 ;;  buf             2    7[BANK0 ] PTR unsigned char 
 29583 ;;		 -> _display_itoa@tmp(10), _display_padded_itoa@tmp(10), display_content(80), 
 29584 ;;  val             2    9[BANK0 ] unsigned int 
 29585 ;;  base            2   11[BANK0 ] int 
 29586 ;; Auto vars:     Size  Location     Type
 29587 ;;  v               2   13[BANK0 ] unsigned int 
 29588 ;;  c               1   15[BANK0 ] unsigned char 
 29589 ;; Return value:  Size  Location     Type
 29590 ;;                  2    7[BANK0 ] PTR unsigned char 
 29591 ;; Registers used:
 29592 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29593 ;; Tracked objects:
 29594 ;;		On entry : 0/0
 29595 ;;		On exit  : 0/0
 29596 ;;		Unchanged: 0/0
 29597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29598 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29599 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29601 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29602 ;;Total ram usage:        9 bytes
 29603 ;; Hardware stack levels used:    1
 29604 ;; Hardware stack levels required when called:   11
 29605 ;; This function calls:
 29606 ;;		___lwdiv
 29607 ;;		___lwmod
 29608 ;; This function is called by:
 29609 ;;		_itoa
 29610 ;; This function uses a non-reentrant model
 29611 ;;
 29612                           
 29613                           	psect	text115
 29614  0132C0                     __ptext115:
 29615                           	opt stack 0
 29616  0132C0                     _utoa:
 29617                           	opt stack 14
 29618                           
 29619                           ;incstack = 0
 29620  0132C0  C069  F06D         	movff	utoa@val,utoa@v
 29621  0132C4  C06A  F06E         	movff	utoa@val+1,utoa@v+1
 29622  0132C8  C06D  F060         	movff	utoa@v,___lwdiv@dividend
 29623  0132CC  C06E  F061         	movff	utoa@v+1,___lwdiv@dividend+1
 29624  0132D0  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29625  0132D4  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29626  0132D8  EC16  F0A7         	call	___lwdiv	;wreg free
 29627  0132DC  C060  F06D         	movff	?___lwdiv,utoa@v
 29628  0132E0  C061  F06E         	movff	?___lwdiv+1,utoa@v+1
 29629  0132E4  0100               	movlb	0	; () banked
 29630  0132E6  4B67               	infsnz	utoa@buf& (0+255),f,b
 29631  0132E8  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29632                           
 29633                           ; BSR set to: 0
 29634  0132EA  516D               	movf	utoa@v& (0+255),w,b
 29635  0132EC  116E               	iorwf	(utoa@v+1)& (0+255),w,b
 29636  0132EE  A4D8               	btfss	status,2,c
 29637  0132F0  D7EB               	goto	l3782
 29638                           
 29639                           ; BSR set to: 0
 29640                           
 29641                           ; BSR set to: 0
 29642  0132F2  C067  FFD9         	movff	utoa@buf,fsr2l
 29643  0132F6  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29644  0132FA  0E00               	movlw	0
 29645  0132FC  6EDF               	movwf	indf2,c
 29646                           
 29647                           ; BSR set to: 0
 29648  0132FE  0767               	decf	utoa@buf& (0+255),f,b
 29649  013300  A0D8               	btfss	status,0,c
 29650  013302  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29651  013304                     
 29652                           ; BSR set to: 0
 29653                           
 29654                           ; BSR set to: 0
 29655  013304  C069  F060         	movff	utoa@val,___lwmod@dividend
 29656  013308  C06A  F061         	movff	utoa@val+1,___lwmod@dividend+1
 29657  01330C  C06B  F062         	movff	utoa@base,___lwmod@divisor
 29658  013310  C06C  F063         	movff	utoa@base+1,___lwmod@divisor+1
 29659  013314  ECA6  F0A9         	call	___lwmod	;wreg free
 29660  013318  0100               	movlb	0	; () banked
 29661  01331A  5160               	movf	?___lwmod& (0+255),w,b
 29662  01331C  6F6F               	movwf	utoa@c& (0+255),b
 29663                           
 29664                           ; BSR set to: 0
 29665  01331E  C069  F060         	movff	utoa@val,___lwdiv@dividend
 29666  013322  C06A  F061         	movff	utoa@val+1,___lwdiv@dividend+1
 29667  013326  C06B  F062         	movff	utoa@base,___lwdiv@divisor
 29668  01332A  C06C  F063         	movff	utoa@base+1,___lwdiv@divisor+1
 29669  01332E  EC16  F0A7         	call	___lwdiv	;wreg free
 29670  013332  C060  F069         	movff	?___lwdiv,utoa@val
 29671  013336  C061  F06A         	movff	?___lwdiv+1,utoa@val+1
 29672  01333A  0E09               	movlw	9
 29673  01333C  0100               	movlb	0	; () banked
 29674  01333E  656F               	cpfsgt	utoa@c& (0+255),b
 29675  013340  D002               	goto	l3785
 29676                           
 29677                           ; BSR set to: 0
 29678  013342  0E07               	movlw	7
 29679  013344  276F               	addwf	utoa@c& (0+255),f,b
 29680  013346                     l3785:
 29681                           
 29682                           ; BSR set to: 0
 29683  013346  0E30               	movlw	48
 29684  013348  276F               	addwf	utoa@c& (0+255),f,b
 29685                           
 29686                           ; BSR set to: 0
 29687  01334A  C067  FFD9         	movff	utoa@buf,fsr2l
 29688  01334E  C068  FFDA         	movff	utoa@buf+1,fsr2h
 29689  013352  C06F  FFDF         	movff	utoa@c,indf2
 29690                           
 29691                           ; BSR set to: 0
 29692  013356  0767               	decf	utoa@buf& (0+255),f,b
 29693  013358  A0D8               	btfss	status,0,c
 29694  01335A  0768               	decf	(utoa@buf+1)& (0+255),f,b
 29695                           
 29696                           ; BSR set to: 0
 29697  01335C  5169               	movf	utoa@val& (0+255),w,b
 29698  01335E  116A               	iorwf	(utoa@val+1)& (0+255),w,b
 29699  013360  A4D8               	btfss	status,2,c
 29700  013362  D7D0               	goto	l3784
 29701                           
 29702                           ; BSR set to: 0
 29703                           ;	Return value of _utoa is never used
 29704                           
 29705                           ; BSR set to: 0
 29706  013364  4B67               	infsnz	utoa@buf& (0+255),f,b
 29707  013366  2B68               	incf	(utoa@buf+1)& (0+255),f,b
 29708  013368  0012               	return	
 29709  01336A                     __end_of_utoa:
 29710                           	opt stack 0
 29711                           tblptru	equ	0xFF8
 29712                           tblptrh	equ	0xFF7
 29713                           tblptrl	equ	0xFF6
 29714                           tablat	equ	0xFF5
 29715                           prodh	equ	0xFF4
 29716                           prodl	equ	0xFF3
 29717                           intcon	equ	0xFF2
 29718                           postinc0	equ	0xFEE
 29719                           wreg	equ	0xFE8
 29720                           indf1	equ	0xFE7
 29721                           postinc1	equ	0xFE6
 29722                           postdec1	equ	0xFE5
 29723                           plusw1	equ	0xFE3
 29724                           fsr1h	equ	0xFE2
 29725                           fsr1l	equ	0xFE1
 29726                           indf2	equ	0xFDF
 29727                           postinc2	equ	0xFDE
 29728                           postdec2	equ	0xFDD
 29729                           plusw2	equ	0xFDB
 29730                           fsr2h	equ	0xFDA
 29731                           fsr2l	equ	0xFD9
 29732                           status	equ	0xFD8
 29733                           
 29734 ;; *************** function ___lwmod *****************
 29735 ;; Defined at:
 29736 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 29737 ;; Parameters:    Size  Location     Type
 29738 ;;  dividend        2    0[BANK0 ] unsigned int 
 29739 ;;  divisor         2    2[BANK0 ] unsigned int 
 29740 ;; Auto vars:     Size  Location     Type
 29741 ;;  counter         1    4[BANK0 ] unsigned char 
 29742 ;; Return value:  Size  Location     Type
 29743 ;;                  2    0[BANK0 ] unsigned int 
 29744 ;; Registers used:
 29745 ;;		wreg, status,2, status,0
 29746 ;; Tracked objects:
 29747 ;;		On entry : 0/0
 29748 ;;		On exit  : 0/0
 29749 ;;		Unchanged: 0/0
 29750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29751 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29752 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29753 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29754 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29755 ;;Total ram usage:        5 bytes
 29756 ;; Hardware stack levels used:    1
 29757 ;; Hardware stack levels required when called:   10
 29758 ;; This function calls:
 29759 ;;		Nothing
 29760 ;; This function is called by:
 29761 ;;		_utoa
 29762 ;; This function uses a non-reentrant model
 29763 ;;
 29764                           
 29765                           	psect	text116
 29766  01534C                     __ptext116:
 29767                           	opt stack 0
 29768  01534C                     ___lwmod:
 29769                           	opt stack 14
 29770                           
 29771                           ; BSR set to: 0
 29772                           ;incstack = 0
 29773  01534C  0100               	movlb	0	; () banked
 29774  01534E  5162               	movf	___lwmod@divisor& (0+255),w,b
 29775  015350  1163               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
 29776  015352  B4D8               	btfsc	status,2,c
 29777  015354  D018               	goto	l3575
 29778                           
 29779                           ; BSR set to: 0
 29780  015356  0E01               	movlw	1
 29781  015358  6F64               	movwf	___lwmod@counter& (0+255),b
 29782  01535A  D004               	goto	l3570
 29783  01535C                     
 29784                           ; BSR set to: 0
 29785                           
 29786                           ; BSR set to: 0
 29787  01535C  90D8               	bcf	status,0,c
 29788  01535E  3762               	rlcf	___lwmod@divisor& (0+255),f,b
 29789  015360  3763               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
 29790  015362  2B64               	incf	___lwmod@counter& (0+255),f,b
 29791  015364                     l3570:
 29792                           
 29793                           ; BSR set to: 0
 29794                           
 29795                           ; BSR set to: 0
 29796  015364  AF63               	btfss	(___lwmod@divisor+1)& (0+255),7,b
 29797  015366  D7FA               	goto	l3571
 29798  015368                     u10970:
 29799                           
 29800                           ; BSR set to: 0
 29801                           
 29802                           ; BSR set to: 0
 29803                           
 29804                           ; BSR set to: 0
 29805  015368  5162               	movf	___lwmod@divisor& (0+255),w,b
 29806  01536A  5D60               	subwf	___lwmod@dividend& (0+255),w,b
 29807  01536C  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29808  01536E  5961               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
 29809  015370  A0D8               	btfss	status,0,c
 29810  015372  D004               	goto	l3574
 29811                           
 29812                           ; BSR set to: 0
 29813  015374  5162               	movf	___lwmod@divisor& (0+255),w,b
 29814  015376  5F60               	subwf	___lwmod@dividend& (0+255),f,b
 29815  015378  5163               	movf	(___lwmod@divisor+1)& (0+255),w,b
 29816  01537A  5B61               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
 29817  01537C                     l3574:
 29818                           
 29819                           ; BSR set to: 0
 29820                           
 29821                           ; BSR set to: 0
 29822  01537C  90D8               	bcf	status,0,c
 29823  01537E  3363               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
 29824  015380  3362               	rrcf	___lwmod@divisor& (0+255),f,b
 29825                           
 29826                           ; BSR set to: 0
 29827  015382  2F64               	decfsz	___lwmod@counter& (0+255),f,b
 29828  015384  D7F1               	goto	u10970
 29829  015386                     l3575:
 29830                           
 29831                           ; BSR set to: 0
 29832                           
 29833                           ; BSR set to: 0
 29834  015386  C060  F060         	movff	___lwmod@dividend,?___lwmod
 29835  01538A  C061  F061         	movff	___lwmod@dividend+1,?___lwmod+1
 29836                           
 29837                           ; BSR set to: 0
 29838  01538E  0012               	return		;funcret
 29839  015390                     __end_of___lwmod:
 29840                           	opt stack 0
 29841                           tblptru	equ	0xFF8
 29842                           tblptrh	equ	0xFF7
 29843                           tblptrl	equ	0xFF6
 29844                           tablat	equ	0xFF5
 29845                           prodh	equ	0xFF4
 29846                           prodl	equ	0xFF3
 29847                           intcon	equ	0xFF2
 29848                           postinc0	equ	0xFEE
 29849                           wreg	equ	0xFE8
 29850                           indf1	equ	0xFE7
 29851                           postinc1	equ	0xFE6
 29852                           postdec1	equ	0xFE5
 29853                           plusw1	equ	0xFE3
 29854                           fsr1h	equ	0xFE2
 29855                           fsr1l	equ	0xFE1
 29856                           indf2	equ	0xFDF
 29857                           postinc2	equ	0xFDE
 29858                           postdec2	equ	0xFDD
 29859                           plusw2	equ	0xFDB
 29860                           fsr2h	equ	0xFDA
 29861                           fsr2l	equ	0xFD9
 29862                           status	equ	0xFD8
 29863                           
 29864 ;; *************** function ___lwdiv *****************
 29865 ;; Defined at:
 29866 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 29867 ;; Parameters:    Size  Location     Type
 29868 ;;  dividend        2    0[BANK0 ] unsigned int 
 29869 ;;  divisor         2    2[BANK0 ] unsigned int 
 29870 ;; Auto vars:     Size  Location     Type
 29871 ;;  quotient        2    4[BANK0 ] unsigned int 
 29872 ;;  counter         1    6[BANK0 ] unsigned char 
 29873 ;; Return value:  Size  Location     Type
 29874 ;;                  2    0[BANK0 ] unsigned int 
 29875 ;; Registers used:
 29876 ;;		wreg, status,2, status,0
 29877 ;; Tracked objects:
 29878 ;;		On entry : 0/0
 29879 ;;		On exit  : 0/0
 29880 ;;		Unchanged: 0/0
 29881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29882 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29883 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29885 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29886 ;;Total ram usage:        7 bytes
 29887 ;; Hardware stack levels used:    1
 29888 ;; Hardware stack levels required when called:   10
 29889 ;; This function calls:
 29890 ;;		Nothing
 29891 ;; This function is called by:
 29892 ;;		_utoa
 29893 ;; This function uses a non-reentrant model
 29894 ;;
 29895                           
 29896                           	psect	text117
 29897  014E2C                     __ptext117:
 29898                           	opt stack 0
 29899  014E2C                     ___lwdiv:
 29900                           	opt stack 14
 29901                           
 29902                           ; BSR set to: 0
 29903                           ;incstack = 0
 29904  014E2C  0E00               	movlw	0
 29905  014E2E  0100               	movlb	0	; () banked
 29906  014E30  6F65               	movwf	(___lwdiv@quotient+1)& (0+255),b
 29907  014E32  0E00               	movlw	0
 29908  014E34  6F64               	movwf	___lwdiv@quotient& (0+255),b
 29909                           
 29910                           ; BSR set to: 0
 29911  014E36  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29912  014E38  1163               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
 29913  014E3A  B4D8               	btfsc	status,2,c
 29914  014E3C  D01C               	goto	l3565
 29915                           
 29916                           ; BSR set to: 0
 29917  014E3E  0E01               	movlw	1
 29918  014E40  6F66               	movwf	___lwdiv@counter& (0+255),b
 29919  014E42  D004               	goto	l3560
 29920  014E44                     
 29921                           ; BSR set to: 0
 29922                           
 29923                           ; BSR set to: 0
 29924  014E44  90D8               	bcf	status,0,c
 29925  014E46  3762               	rlcf	___lwdiv@divisor& (0+255),f,b
 29926  014E48  3763               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
 29927  014E4A  2B66               	incf	___lwdiv@counter& (0+255),f,b
 29928  014E4C                     l3560:
 29929                           
 29930                           ; BSR set to: 0
 29931                           
 29932                           ; BSR set to: 0
 29933  014E4C  AF63               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
 29934  014E4E  D7FA               	goto	l3561
 29935  014E50                     u10940:
 29936                           
 29937                           ; BSR set to: 0
 29938                           
 29939                           ; BSR set to: 0
 29940                           
 29941                           ; BSR set to: 0
 29942  014E50  90D8               	bcf	status,0,c
 29943  014E52  3764               	rlcf	___lwdiv@quotient& (0+255),f,b
 29944  014E54  3765               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
 29945                           
 29946                           ; BSR set to: 0
 29947  014E56  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29948  014E58  5D60               	subwf	___lwdiv@dividend& (0+255),w,b
 29949  014E5A  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29950  014E5C  5961               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
 29951  014E5E  A0D8               	btfss	status,0,c
 29952  014E60  D005               	goto	l3564
 29953                           
 29954                           ; BSR set to: 0
 29955  014E62  5162               	movf	___lwdiv@divisor& (0+255),w,b
 29956  014E64  5F60               	subwf	___lwdiv@dividend& (0+255),f,b
 29957  014E66  5163               	movf	(___lwdiv@divisor+1)& (0+255),w,b
 29958  014E68  5B61               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
 29959                           
 29960                           ; BSR set to: 0
 29961  014E6A  8164               	bsf	___lwdiv@quotient& (0+255),0,b
 29962  014E6C                     l3564:
 29963                           
 29964                           ; BSR set to: 0
 29965                           
 29966                           ; BSR set to: 0
 29967  014E6C  90D8               	bcf	status,0,c
 29968  014E6E  3363               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
 29969  014E70  3362               	rrcf	___lwdiv@divisor& (0+255),f,b
 29970                           
 29971                           ; BSR set to: 0
 29972  014E72  2F66               	decfsz	___lwdiv@counter& (0+255),f,b
 29973  014E74  D7ED               	goto	u10940
 29974  014E76                     l3565:
 29975                           
 29976                           ; BSR set to: 0
 29977                           
 29978                           ; BSR set to: 0
 29979  014E76  C064  F060         	movff	___lwdiv@quotient,?___lwdiv
 29980  014E7A  C065  F061         	movff	___lwdiv@quotient+1,?___lwdiv+1
 29981                           
 29982                           ; BSR set to: 0
 29983  014E7E  0012               	return		;funcret
 29984  014E80                     __end_of___lwdiv:
 29985                           	opt stack 0
 29986                           tblptru	equ	0xFF8
 29987                           tblptrh	equ	0xFF7
 29988                           tblptrl	equ	0xFF6
 29989                           tablat	equ	0xFF5
 29990                           prodh	equ	0xFF4
 29991                           prodl	equ	0xFF3
 29992                           intcon	equ	0xFF2
 29993                           postinc0	equ	0xFEE
 29994                           wreg	equ	0xFE8
 29995                           indf1	equ	0xFE7
 29996                           postinc1	equ	0xFE6
 29997                           postdec1	equ	0xFE5
 29998                           plusw1	equ	0xFE3
 29999                           fsr1h	equ	0xFE2
 30000                           fsr1l	equ	0xFE1
 30001                           indf2	equ	0xFDF
 30002                           postinc2	equ	0xFDE
 30003                           postdec2	equ	0xFDD
 30004                           plusw2	equ	0xFDB
 30005                           fsr2h	equ	0xFDA
 30006                           fsr2l	equ	0xFD9
 30007                           status	equ	0xFD8
 30008                           
 30009 ;; *************** function ___almod *****************
 30010 ;; Defined at:
 30011 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\almod.c"
 30012 ;; Parameters:    Size  Location     Type
 30013 ;;  dividend        4    0[BANK0 ] long 
 30014 ;;  divisor         4    4[BANK0 ] long 
 30015 ;; Auto vars:     Size  Location     Type
 30016 ;;  sign            1    9[BANK0 ] unsigned char 
 30017 ;;  counter         1    8[BANK0 ] unsigned char 
 30018 ;; Return value:  Size  Location     Type
 30019 ;;                  4    0[BANK0 ] long 
 30020 ;; Registers used:
 30021 ;;		wreg, status,2, status,0
 30022 ;; Tracked objects:
 30023 ;;		On entry : 0/0
 30024 ;;		On exit  : 0/0
 30025 ;;		Unchanged: 0/0
 30026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30027 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30028 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30029 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30030 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30031 ;;Total ram usage:       10 bytes
 30032 ;; Hardware stack levels used:    1
 30033 ;; Hardware stack levels required when called:   10
 30034 ;; This function calls:
 30035 ;;		Nothing
 30036 ;; This function is called by:
 30037 ;;		__display_itoa_long
 30038 ;; This function uses a non-reentrant model
 30039 ;;
 30040                           
 30041                           	psect	text118
 30042  013212                     __ptext118:
 30043                           	opt stack 0
 30044  013212                     ___almod:
 30045                           	opt stack 18
 30046                           
 30047                           ; BSR set to: 0
 30048                           ;incstack = 0
 30049  013212  0E00               	movlw	0
 30050  013214  0100               	movlb	0	; () banked
 30051  013216  6F69               	movwf	___almod@sign& (0+255),b
 30052                           
 30053                           ; BSR set to: 0
 30054  013218  AF63               	btfss	(___almod@dividend+3)& (0+255),7,b
 30055  01321A  D00A               	goto	l3162
 30056                           
 30057                           ; BSR set to: 0
 30058  01321C  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30059  01321E  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30060  013220  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30061  013222  6D60               	negf	___almod@dividend& (0+255),b
 30062  013224  0E00               	movlw	0
 30063  013226  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30064  013228  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30065  01322A  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30066                           
 30067                           ; BSR set to: 0
 30068  01322C  0E01               	movlw	1
 30069  01322E  6F69               	movwf	___almod@sign& (0+255),b
 30070  013230                     l3162:
 30071                           
 30072                           ; BSR set to: 0
 30073                           
 30074                           ; BSR set to: 0
 30075  013230  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30076  013232  D008               	goto	l3163
 30077                           
 30078                           ; BSR set to: 0
 30079  013234  1F67               	comf	(___almod@divisor+3)& (0+255),f,b
 30080  013236  1F66               	comf	(___almod@divisor+2)& (0+255),f,b
 30081  013238  1F65               	comf	(___almod@divisor+1)& (0+255),f,b
 30082  01323A  6D64               	negf	___almod@divisor& (0+255),b
 30083  01323C  0E00               	movlw	0
 30084  01323E  2365               	addwfc	(___almod@divisor+1)& (0+255),f,b
 30085  013240  2366               	addwfc	(___almod@divisor+2)& (0+255),f,b
 30086  013242  2367               	addwfc	(___almod@divisor+3)& (0+255),f,b
 30087  013244                     l3163:
 30088                           
 30089                           ; BSR set to: 0
 30090                           
 30091                           ; BSR set to: 0
 30092  013244  5164               	movf	___almod@divisor& (0+255),w,b
 30093  013246  1165               	iorwf	(___almod@divisor+1)& (0+255),w,b
 30094  013248  1166               	iorwf	(___almod@divisor+2)& (0+255),w,b
 30095  01324A  1167               	iorwf	(___almod@divisor+3)& (0+255),w,b
 30096  01324C  B4D8               	btfsc	status,2,c
 30097  01324E  D024               	goto	l3170
 30098                           
 30099                           ; BSR set to: 0
 30100  013250  0E01               	movlw	1
 30101  013252  6F68               	movwf	___almod@counter& (0+255),b
 30102  013254  D006               	goto	l3165
 30103  013256                     
 30104                           ; BSR set to: 0
 30105                           
 30106                           ; BSR set to: 0
 30107  013256  90D8               	bcf	status,0,c
 30108  013258  3764               	rlcf	___almod@divisor& (0+255),f,b
 30109  01325A  3765               	rlcf	(___almod@divisor+1)& (0+255),f,b
 30110  01325C  3766               	rlcf	(___almod@divisor+2)& (0+255),f,b
 30111  01325E  3767               	rlcf	(___almod@divisor+3)& (0+255),f,b
 30112  013260  2B68               	incf	___almod@counter& (0+255),f,b
 30113  013262                     l3165:
 30114                           
 30115                           ; BSR set to: 0
 30116                           
 30117                           ; BSR set to: 0
 30118  013262  AF67               	btfss	(___almod@divisor+3)& (0+255),7,b
 30119  013264  D7F8               	goto	l3166
 30120  013266                     u16110:
 30121                           
 30122                           ; BSR set to: 0
 30123                           
 30124                           ; BSR set to: 0
 30125                           
 30126                           ; BSR set to: 0
 30127  013266  5164               	movf	___almod@divisor& (0+255),w,b
 30128  013268  5D60               	subwf	___almod@dividend& (0+255),w,b
 30129  01326A  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30130  01326C  5961               	subwfb	(___almod@dividend+1)& (0+255),w,b
 30131  01326E  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30132  013270  5962               	subwfb	(___almod@dividend+2)& (0+255),w,b
 30133  013272  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30134  013274  5963               	subwfb	(___almod@dividend+3)& (0+255),w,b
 30135  013276  A0D8               	btfss	status,0,c
 30136  013278  D008               	goto	l3169
 30137                           
 30138                           ; BSR set to: 0
 30139  01327A  5164               	movf	___almod@divisor& (0+255),w,b
 30140  01327C  5F60               	subwf	___almod@dividend& (0+255),f,b
 30141  01327E  5165               	movf	(___almod@divisor+1)& (0+255),w,b
 30142  013280  5B61               	subwfb	(___almod@dividend+1)& (0+255),f,b
 30143  013282  5166               	movf	(___almod@divisor+2)& (0+255),w,b
 30144  013284  5B62               	subwfb	(___almod@dividend+2)& (0+255),f,b
 30145  013286  5167               	movf	(___almod@divisor+3)& (0+255),w,b
 30146  013288  5B63               	subwfb	(___almod@dividend+3)& (0+255),f,b
 30147  01328A                     l3169:
 30148                           
 30149                           ; BSR set to: 0
 30150                           
 30151                           ; BSR set to: 0
 30152  01328A  90D8               	bcf	status,0,c
 30153  01328C  3367               	rrcf	(___almod@divisor+3)& (0+255),f,b
 30154  01328E  3366               	rrcf	(___almod@divisor+2)& (0+255),f,b
 30155  013290  3365               	rrcf	(___almod@divisor+1)& (0+255),f,b
 30156  013292  3364               	rrcf	___almod@divisor& (0+255),f,b
 30157                           
 30158                           ; BSR set to: 0
 30159  013294  2F68               	decfsz	___almod@counter& (0+255),f,b
 30160  013296  D7E7               	goto	u16110
 30161  013298                     l3170:
 30162                           
 30163                           ; BSR set to: 0
 30164                           
 30165                           ; BSR set to: 0
 30166                           
 30167                           ; BSR set to: 0
 30168  013298  5169               	movf	___almod@sign& (0+255),w,b
 30169  01329A  B4D8               	btfsc	status,2,c
 30170  01329C  D008               	goto	l3171
 30171                           
 30172                           ; BSR set to: 0
 30173  01329E  1F63               	comf	(___almod@dividend+3)& (0+255),f,b
 30174  0132A0  1F62               	comf	(___almod@dividend+2)& (0+255),f,b
 30175  0132A2  1F61               	comf	(___almod@dividend+1)& (0+255),f,b
 30176  0132A4  6D60               	negf	___almod@dividend& (0+255),b
 30177  0132A6  0E00               	movlw	0
 30178  0132A8  2361               	addwfc	(___almod@dividend+1)& (0+255),f,b
 30179  0132AA  2362               	addwfc	(___almod@dividend+2)& (0+255),f,b
 30180  0132AC  2363               	addwfc	(___almod@dividend+3)& (0+255),f,b
 30181  0132AE                     l3171:
 30182                           
 30183                           ; BSR set to: 0
 30184                           
 30185                           ; BSR set to: 0
 30186  0132AE  C060  F060         	movff	___almod@dividend,?___almod
 30187  0132B2  C061  F061         	movff	___almod@dividend+1,?___almod+1
 30188  0132B6  C062  F062         	movff	___almod@dividend+2,?___almod+2
 30189  0132BA  C063  F063         	movff	___almod@dividend+3,?___almod+3
 30190  0132BE  0012               	return	
 30191  0132C0                     __end_of___almod:
 30192                           	opt stack 0
 30193                           tblptru	equ	0xFF8
 30194                           tblptrh	equ	0xFF7
 30195                           tblptrl	equ	0xFF6
 30196                           tablat	equ	0xFF5
 30197                           prodh	equ	0xFF4
 30198                           prodl	equ	0xFF3
 30199                           intcon	equ	0xFF2
 30200                           postinc0	equ	0xFEE
 30201                           wreg	equ	0xFE8
 30202                           indf1	equ	0xFE7
 30203                           postinc1	equ	0xFE6
 30204                           postdec1	equ	0xFE5
 30205                           plusw1	equ	0xFE3
 30206                           fsr1h	equ	0xFE2
 30207                           fsr1l	equ	0xFE1
 30208                           indf2	equ	0xFDF
 30209                           postinc2	equ	0xFDE
 30210                           postdec2	equ	0xFDD
 30211                           plusw2	equ	0xFDB
 30212                           fsr2h	equ	0xFDA
 30213                           fsr2l	equ	0xFD9
 30214                           status	equ	0xFD8
 30215                           
 30216 ;; *************** function ___aldiv *****************
 30217 ;; Defined at:
 30218 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 30219 ;; Parameters:    Size  Location     Type
 30220 ;;  dividend        4    0[BANK0 ] long 
 30221 ;;  divisor         4    4[BANK0 ] long 
 30222 ;; Auto vars:     Size  Location     Type
 30223 ;;  quotient        4   10[BANK0 ] long 
 30224 ;;  sign            1    9[BANK0 ] unsigned char 
 30225 ;;  counter         1    8[BANK0 ] unsigned char 
 30226 ;; Return value:  Size  Location     Type
 30227 ;;                  4    0[BANK0 ] long 
 30228 ;; Registers used:
 30229 ;;		wreg, status,2, status,0
 30230 ;; Tracked objects:
 30231 ;;		On entry : 0/0
 30232 ;;		On exit  : 0/0
 30233 ;;		Unchanged: 0/0
 30234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30235 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30236 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30238 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30239 ;;Total ram usage:       14 bytes
 30240 ;; Hardware stack levels used:    1
 30241 ;; Hardware stack levels required when called:   10
 30242 ;; This function calls:
 30243 ;;		Nothing
 30244 ;; This function is called by:
 30245 ;;		__display_itoa_long
 30246 ;; This function uses a non-reentrant model
 30247 ;;
 30248                           
 30249                           	psect	text119
 30250  012ABE                     __ptext119:
 30251                           	opt stack 0
 30252  012ABE                     ___aldiv:
 30253                           	opt stack 18
 30254                           
 30255                           ; BSR set to: 0
 30256                           ;incstack = 0
 30257  012ABE  0E00               	movlw	0
 30258  012AC0  0100               	movlb	0	; () banked
 30259  012AC2  6F69               	movwf	___aldiv@sign& (0+255),b
 30260                           
 30261                           ; BSR set to: 0
 30262  012AC4  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30263  012AC6  D00A               	goto	l3149
 30264                           
 30265                           ; BSR set to: 0
 30266  012AC8  1F67               	comf	(___aldiv@divisor+3)& (0+255),f,b
 30267  012ACA  1F66               	comf	(___aldiv@divisor+2)& (0+255),f,b
 30268  012ACC  1F65               	comf	(___aldiv@divisor+1)& (0+255),f,b
 30269  012ACE  6D64               	negf	___aldiv@divisor& (0+255),b
 30270  012AD0  0E00               	movlw	0
 30271  012AD2  2365               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 30272  012AD4  2366               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 30273  012AD6  2367               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 30274                           
 30275                           ; BSR set to: 0
 30276  012AD8  0E01               	movlw	1
 30277  012ADA  6F69               	movwf	___aldiv@sign& (0+255),b
 30278  012ADC                     l3149:
 30279                           
 30280                           ; BSR set to: 0
 30281                           
 30282                           ; BSR set to: 0
 30283  012ADC  AF63               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 30284  012ADE  D00A               	goto	l3150
 30285                           
 30286                           ; BSR set to: 0
 30287  012AE0  1F63               	comf	(___aldiv@dividend+3)& (0+255),f,b
 30288  012AE2  1F62               	comf	(___aldiv@dividend+2)& (0+255),f,b
 30289  012AE4  1F61               	comf	(___aldiv@dividend+1)& (0+255),f,b
 30290  012AE6  6D60               	negf	___aldiv@dividend& (0+255),b
 30291  012AE8  0E00               	movlw	0
 30292  012AEA  2361               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 30293  012AEC  2362               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 30294  012AEE  2363               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 30295                           
 30296                           ; BSR set to: 0
 30297  012AF0  0E01               	movlw	1
 30298  012AF2  1B69               	xorwf	___aldiv@sign& (0+255),f,b
 30299  012AF4                     l3150:
 30300                           
 30301                           ; BSR set to: 0
 30302                           
 30303                           ; BSR set to: 0
 30304  012AF4  0E00               	movlw	0
 30305  012AF6  6F6A               	movwf	___aldiv@quotient& (0+255),b
 30306  012AF8  0E00               	movlw	0
 30307  012AFA  6F6B               	movwf	(___aldiv@quotient+1)& (0+255),b
 30308  012AFC  0E00               	movlw	0
 30309  012AFE  6F6C               	movwf	(___aldiv@quotient+2)& (0+255),b
 30310  012B00  0E00               	movlw	0
 30311  012B02  6F6D               	movwf	(___aldiv@quotient+3)& (0+255),b
 30312                           
 30313                           ; BSR set to: 0
 30314  012B04  5164               	movf	___aldiv@divisor& (0+255),w,b
 30315  012B06  1165               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 30316  012B08  1166               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 30317  012B0A  1167               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 30318  012B0C  B4D8               	btfsc	status,2,c
 30319  012B0E  D02A               	goto	l3157
 30320                           
 30321                           ; BSR set to: 0
 30322  012B10  0E01               	movlw	1
 30323  012B12  6F68               	movwf	___aldiv@counter& (0+255),b
 30324  012B14  D006               	goto	l3152
 30325  012B16                     
 30326                           ; BSR set to: 0
 30327                           
 30328                           ; BSR set to: 0
 30329  012B16  90D8               	bcf	status,0,c
 30330  012B18  3764               	rlcf	___aldiv@divisor& (0+255),f,b
 30331  012B1A  3765               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 30332  012B1C  3766               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 30333  012B1E  3767               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 30334  012B20  2B68               	incf	___aldiv@counter& (0+255),f,b
 30335  012B22                     l3152:
 30336                           
 30337                           ; BSR set to: 0
 30338                           
 30339                           ; BSR set to: 0
 30340  012B22  AF67               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 30341  012B24  D7F8               	goto	l3153
 30342  012B26                     u16050:
 30343                           
 30344                           ; BSR set to: 0
 30345                           
 30346                           ; BSR set to: 0
 30347                           
 30348                           ; BSR set to: 0
 30349  012B26  90D8               	bcf	status,0,c
 30350  012B28  376A               	rlcf	___aldiv@quotient& (0+255),f,b
 30351  012B2A  376B               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 30352  012B2C  376C               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 30353  012B2E  376D               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 30354                           
 30355                           ; BSR set to: 0
 30356  012B30  5164               	movf	___aldiv@divisor& (0+255),w,b
 30357  012B32  5D60               	subwf	___aldiv@dividend& (0+255),w,b
 30358  012B34  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30359  012B36  5961               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 30360  012B38  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30361  012B3A  5962               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 30362  012B3C  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30363  012B3E  5963               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 30364  012B40  A0D8               	btfss	status,0,c
 30365  012B42  D009               	goto	l3156
 30366                           
 30367                           ; BSR set to: 0
 30368  012B44  5164               	movf	___aldiv@divisor& (0+255),w,b
 30369  012B46  5F60               	subwf	___aldiv@dividend& (0+255),f,b
 30370  012B48  5165               	movf	(___aldiv@divisor+1)& (0+255),w,b
 30371  012B4A  5B61               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 30372  012B4C  5166               	movf	(___aldiv@divisor+2)& (0+255),w,b
 30373  012B4E  5B62               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 30374  012B50  5167               	movf	(___aldiv@divisor+3)& (0+255),w,b
 30375  012B52  5B63               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 30376                           
 30377                           ; BSR set to: 0
 30378  012B54  816A               	bsf	___aldiv@quotient& (0+255),0,b
 30379  012B56                     l3156:
 30380                           
 30381                           ; BSR set to: 0
 30382                           
 30383                           ; BSR set to: 0
 30384  012B56  90D8               	bcf	status,0,c
 30385  012B58  3367               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 30386  012B5A  3366               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 30387  012B5C  3365               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 30388  012B5E  3364               	rrcf	___aldiv@divisor& (0+255),f,b
 30389                           
 30390                           ; BSR set to: 0
 30391  012B60  2F68               	decfsz	___aldiv@counter& (0+255),f,b
 30392  012B62  D7E1               	goto	u16050
 30393  012B64                     l3157:
 30394                           
 30395                           ; BSR set to: 0
 30396                           
 30397                           ; BSR set to: 0
 30398                           
 30399                           ; BSR set to: 0
 30400  012B64  5169               	movf	___aldiv@sign& (0+255),w,b
 30401  012B66  B4D8               	btfsc	status,2,c
 30402  012B68  D008               	goto	l3158
 30403                           
 30404                           ; BSR set to: 0
 30405  012B6A  1F6D               	comf	(___aldiv@quotient+3)& (0+255),f,b
 30406  012B6C  1F6C               	comf	(___aldiv@quotient+2)& (0+255),f,b
 30407  012B6E  1F6B               	comf	(___aldiv@quotient+1)& (0+255),f,b
 30408  012B70  6D6A               	negf	___aldiv@quotient& (0+255),b
 30409  012B72  0E00               	movlw	0
 30410  012B74  236B               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 30411  012B76  236C               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 30412  012B78  236D               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 30413  012B7A                     l3158:
 30414                           
 30415                           ; BSR set to: 0
 30416                           
 30417                           ; BSR set to: 0
 30418  012B7A  C06A  F060         	movff	___aldiv@quotient,?___aldiv
 30419  012B7E  C06B  F061         	movff	___aldiv@quotient+1,?___aldiv+1
 30420  012B82  C06C  F062         	movff	___aldiv@quotient+2,?___aldiv+2
 30421  012B86  C06D  F063         	movff	___aldiv@quotient+3,?___aldiv+3
 30422  012B8A  0012               	return	
 30423  012B8C                     __end_of___aldiv:
 30424                           	opt stack 0
 30425                           tblptru	equ	0xFF8
 30426                           tblptrh	equ	0xFF7
 30427                           tblptrl	equ	0xFF6
 30428                           tablat	equ	0xFF5
 30429                           prodh	equ	0xFF4
 30430                           prodl	equ	0xFF3
 30431                           intcon	equ	0xFF2
 30432                           postinc0	equ	0xFEE
 30433                           wreg	equ	0xFE8
 30434                           indf1	equ	0xFE7
 30435                           postinc1	equ	0xFE6
 30436                           postdec1	equ	0xFE5
 30437                           plusw1	equ	0xFE3
 30438                           fsr1h	equ	0xFE2
 30439                           fsr1l	equ	0xFE1
 30440                           indf2	equ	0xFDF
 30441                           postinc2	equ	0xFDE
 30442                           postdec2	equ	0xFDD
 30443                           plusw2	equ	0xFDB
 30444                           fsr2h	equ	0xFDA
 30445                           fsr2l	equ	0xFD9
 30446                           status	equ	0xFD8
 30447                           
 30448 ;; *************** function __display_clear *****************
 30449 ;; Defined at:
 30450 ;;		line 85 in file "display.c"
 30451 ;; Parameters:    Size  Location     Type
 30452 ;;		None
 30453 ;; Auto vars:     Size  Location     Type
 30454 ;;  col             1    3[BANK0 ] unsigned char 
 30455 ;;  row             1    2[BANK0 ] unsigned char 
 30456 ;; Return value:  Size  Location     Type
 30457 ;;                  1    wreg      void 
 30458 ;; Registers used:
 30459 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30460 ;; Tracked objects:
 30461 ;;		On entry : 0/0
 30462 ;;		On exit  : 0/0
 30463 ;;		Unchanged: 0/0
 30464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30465 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30466 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30467 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30468 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30469 ;;Total ram usage:        4 bytes
 30470 ;; Hardware stack levels used:    1
 30471 ;; Hardware stack levels required when called:   10
 30472 ;; This function calls:
 30473 ;;		Nothing
 30474 ;; This function is called by:
 30475 ;;		_display_prepare
 30476 ;; This function uses a non-reentrant model
 30477 ;;
 30478                           
 30479                           	psect	text120
 30480  0151EA                     __ptext120:
 30481                           	opt stack 0
 30482  0151EA                     __display_clear:
 30483                           	opt stack 19
 30484                           
 30485                           ;display.c: 87: uint8_t row;;display.c: 88: uint8_t col;;display.c: 89: for(row=0;row<4;
      +                          ++row)
 30486                           
 30487                           ; BSR set to: 0
 30488                           ;incstack = 0
 30489  0151EA  0E00               	movlw	0
 30490  0151EC  0100               	movlb	0	; () banked
 30491  0151EE  6F62               	movwf	__display_clear@row& (0+255),b
 30492  0151F0                     l17484:
 30493                           
 30494                           ; BSR set to: 0
 30495  0151F0  0E03               	movlw	3
 30496  0151F2  6562               	cpfsgt	__display_clear@row& (0+255),b
 30497  0151F4  D001               	goto	l1324
 30498  0151F6  0012               	return	
 30499  0151F8                     l1324:
 30500                           
 30501                           ; BSR set to: 0
 30502                           ;display.c: 90: {;display.c: 91: for(col=0;col<20;++col)
 30503                           
 30504                           ; BSR set to: 0
 30505  0151F8  0E00               	movlw	0
 30506  0151FA  6F63               	movwf	__display_clear@col& (0+255),b
 30507  0151FC                     l17490:
 30508                           
 30509                           ; BSR set to: 0
 30510  0151FC  0E13               	movlw	19
 30511  0151FE  6563               	cpfsgt	__display_clear@col& (0+255),b
 30512  015200  D001               	goto	l1326
 30513  015202  D016               	goto	u16980
 30514  015204                     l1326:
 30515                           
 30516                           ; BSR set to: 0
 30517                           ;display.c: 92: {;display.c: 93: display_content[row][col] = ' ';
 30518                           
 30519                           ; BSR set to: 0
 30520  015204  5162               	movf	__display_clear@row& (0+255),w,b
 30521  015206  0D14               	mullw	20
 30522  015208  0E42               	movlw	low _display_content
 30523  01520A  6F60               	movwf	??__display_clear& (0+255),b
 30524  01520C  0E02               	movlw	high _display_content
 30525  01520E  6F61               	movwf	(??__display_clear+1)& (0+255),b
 30526  015210  50F3               	movf	prodl,w,c
 30527  015212  2760               	addwf	??__display_clear& (0+255),f,b
 30528  015214  50F4               	movf	prodh,w,c
 30529  015216  2361               	addwfc	(??__display_clear+1)& (0+255),f,b
 30530  015218  5163               	movf	__display_clear@col& (0+255),w,b
 30531  01521A  0D01               	mullw	1
 30532  01521C  50F3               	movf	prodl,w,c
 30533  01521E  2560               	addwf	??__display_clear& (0+255),w,b
 30534  015220  6ED9               	movwf	fsr2l,c
 30535  015222  50F4               	movf	prodh,w,c
 30536  015224  2161               	addwfc	(??__display_clear+1)& (0+255),w,b
 30537  015226  6EDA               	movwf	fsr2h,c
 30538  015228  0E20               	movlw	32
 30539  01522A  6EDF               	movwf	indf2,c
 30540                           
 30541                           ; BSR set to: 0
 30542  01522C  2B63               	incf	__display_clear@col& (0+255),f,b
 30543  01522E  D7E6               	goto	l17490
 30544  015230                     u16980:
 30545                           
 30546                           ; BSR set to: 0
 30547                           
 30548                           ; BSR set to: 0
 30549  015230  2B62               	incf	__display_clear@row& (0+255),f,b
 30550  015232  D7DE               	goto	l17484
 30551  015234                     __end_of__display_clear:
 30552                           	opt stack 0
 30553                           tblptru	equ	0xFF8
 30554                           tblptrh	equ	0xFF7
 30555                           tblptrl	equ	0xFF6
 30556                           tablat	equ	0xFF5
 30557                           prodh	equ	0xFF4
 30558                           prodl	equ	0xFF3
 30559                           intcon	equ	0xFF2
 30560                           postinc0	equ	0xFEE
 30561                           wreg	equ	0xFE8
 30562                           indf1	equ	0xFE7
 30563                           postinc1	equ	0xFE6
 30564                           postdec1	equ	0xFE5
 30565                           plusw1	equ	0xFE3
 30566                           fsr1h	equ	0xFE2
 30567                           fsr1l	equ	0xFE1
 30568                           indf2	equ	0xFDF
 30569                           postinc2	equ	0xFDE
 30570                           postdec2	equ	0xFDD
 30571                           plusw2	equ	0xFDB
 30572                           fsr2h	equ	0xFDA
 30573                           fsr2l	equ	0xFD9
 30574                           status	equ	0xFD8
 30575                           
 30576 ;; *************** function _adc_read_temperature *****************
 30577 ;; Defined at:
 30578 ;;		line 44 in file "adc.c"
 30579 ;; Parameters:    Size  Location     Type
 30580 ;;		None
 30581 ;; Auto vars:     Size  Location     Type
 30582 ;;  temperature     4   53[BANK0 ] float 
 30583 ;;  adc_result      2   51[BANK0 ] unsigned int 
 30584 ;; Return value:  Size  Location     Type
 30585 ;;                  1    wreg      void 
 30586 ;; Registers used:
 30587 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30588 ;; Tracked objects:
 30589 ;;		On entry : 0/0
 30590 ;;		On exit  : 0/0
 30591 ;;		Unchanged: 0/0
 30592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30594 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30595 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30596 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30597 ;;Total ram usage:        8 bytes
 30598 ;; Hardware stack levels used:    1
 30599 ;; Hardware stack levels required when called:   11
 30600 ;; This function calls:
 30601 ;;		___fladd
 30602 ;;		___flmul
 30603 ;;		___flneg
 30604 ;;		___fltol
 30605 ;;		___xxtofl
 30606 ;; This function is called by:
 30607 ;;		_main
 30608 ;; This function uses a non-reentrant model
 30609 ;;
 30610                           
 30611                           	psect	text121
 30612  00E9D0                     __ptext121:
 30613                           	opt stack 0
 30614  00E9D0                     _adc_read_temperature:
 30615                           	opt stack 19
 30616                           
 30617                           ;adc.c: 46: uint16_t adc_result;;adc.c: 47: float temperature;;adc.c: 50: adc_result = A
      +                          DRESH;
 30618                           
 30619                           ; BSR set to: 0
 30620                           ;incstack = 0
 30621  00E9D0  CFC4 F093          	movff	4036,adc_read_temperature@adc_result	;volatile
 30622  00E9D4  0100               	movlb	0	; () banked
 30623  00E9D6  6B94               	clrf	(adc_read_temperature@adc_result+1)& (0+255),b
 30624                           
 30625                           ; BSR set to: 0
 30626                           ;adc.c: 51: adc_result <<= 8;
 30627  00E9D8  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30628  00E9DA  6F94               	movwf	(adc_read_temperature@adc_result+1)& (0+255),b
 30629  00E9DC  6B93               	clrf	adc_read_temperature@adc_result& (0+255),b
 30630                           
 30631                           ; BSR set to: 0
 30632                           ;adc.c: 52: adc_result |= ADRESL;
 30633  00E9DE  50C3               	movf	4035,w,c	;volatile
 30634  00E9E0  1393               	iorwf	adc_read_temperature@adc_result& (0+255),f,b
 30635                           
 30636                           ; BSR set to: 0
 30637                           ;adc.c: 55: params.temperature_adc_sum[params.temperature_source] += adc_result;
 30638  00E9E2  0102               	movlb	2	; () banked
 30639  00E9E4  511F               	movf	_params& (0+255),w,b
 30640  00E9E6  0D02               	mullw	2
 30641  00E9E8  0E20               	movlw	low (_params+1)
 30642  00E9EA  24F3               	addwf	prodl,w,c
 30643  00E9EC  6ED9               	movwf	fsr2l,c
 30644  00E9EE  0E02               	movlw	high (_params+1)
 30645  00E9F0  20F4               	addwfc	prodh,w,c
 30646  00E9F2  6EDA               	movwf	fsr2h,c
 30647  00E9F4  0100               	movlb	0	; () banked
 30648  00E9F6  5193               	movf	adc_read_temperature@adc_result& (0+255),w,b
 30649  00E9F8  26DE               	addwf	postinc2,f,c
 30650  00E9FA  5194               	movf	(adc_read_temperature@adc_result+1)& (0+255),w,b
 30651  00E9FC  22DD               	addwfc	postdec2,f,c
 30652                           
 30653                           ; BSR set to: 0
 30654                           ;adc.c: 56: ++params.temperature_count[params.temperature_source];
 30655  00E9FE  0102               	movlb	2	; () banked
 30656  00EA00  511F               	movf	_params& (0+255),w,b
 30657  00EA02  0D01               	mullw	1
 30658  00EA04  0E24               	movlw	low (_params+5)
 30659  00EA06  24F3               	addwf	prodl,w,c
 30660  00EA08  6ED9               	movwf	fsr2l,c
 30661  00EA0A  0E02               	movlw	high (_params+5)
 30662  00EA0C  20F4               	addwfc	prodh,w,c
 30663  00EA0E  6EDA               	movwf	fsr2h,c
 30664  00EA10  2ADF               	incf	indf2,f,c
 30665                           
 30666                           ; BSR set to: 2
 30667                           ;adc.c: 59: ADCON0bits.GO = 1;
 30668  00EA12  82C2               	bsf	4034,1,c	;volatile
 30669                           
 30670                           ; BSR set to: 2
 30671                           ;adc.c: 62: if(params.temperature_count[params.temperature_source]==8)
 30672  00EA14  511F               	movf	_params& (0+255),w,b
 30673  00EA16  0D01               	mullw	1
 30674  00EA18  0E24               	movlw	low (_params+5)
 30675  00EA1A  24F3               	addwf	prodl,w,c
 30676  00EA1C  6ED9               	movwf	fsr2l,c
 30677  00EA1E  0E02               	movlw	high (_params+5)
 30678  00EA20  20F4               	addwfc	prodh,w,c
 30679  00EA22  6EDA               	movwf	fsr2h,c
 30680  00EA24  0E08               	movlw	8
 30681  00EA26  18DE               	xorwf	postinc2,w,c
 30682  00EA28  A4D8               	btfss	status,2,c
 30683  00EA2A  D0AF               	goto	l2941
 30684                           
 30685                           ; BSR set to: 2
 30686                           ;adc.c: 63: {;adc.c: 67: temperature = 21064.0 - (float) params.temperature_adc_sum[para
      +                          ms.temperature_source];
 30687  00EA2C  511F               	movf	_params& (0+255),w,b
 30688  00EA2E  0D02               	mullw	2
 30689  00EA30  0E20               	movlw	low (_params+1)
 30690  00EA32  24F3               	addwf	prodl,w,c
 30691  00EA34  6ED9               	movwf	fsr2l,c
 30692  00EA36  0E02               	movlw	high (_params+1)
 30693  00EA38  20F4               	addwfc	prodh,w,c
 30694  00EA3A  6EDA               	movwf	fsr2h,c
 30695  00EA3C  CFDE F091          	movff	postinc2,??_adc_read_temperature
 30696  00EA40  CFDD F092          	movff	postdec2,??_adc_read_temperature+1
 30697  00EA44  C091  F06A         	movff	??_adc_read_temperature,___xxtofl@val
 30698  00EA48  C092  F06B         	movff	??_adc_read_temperature+1,___xxtofl@val+1
 30699  00EA4C  0100               	movlb	0	; () banked
 30700  00EA4E  6B6C               	clrf	(___xxtofl@val+2)& (0+255),b
 30701  00EA50  6B6D               	clrf	(___xxtofl@val+3)& (0+255),b
 30702  00EA52  0E00               	movlw	0
 30703  00EA54  EC5A  F080         	call	___xxtofl
 30704  00EA58  C06A  F078         	movff	?___xxtofl,___flneg@f1
 30705  00EA5C  C06B  F079         	movff	?___xxtofl+1,___flneg@f1+1
 30706  00EA60  C06C  F07A         	movff	?___xxtofl+2,___flneg@f1+2
 30707  00EA64  C06D  F07B         	movff	?___xxtofl+3,___flneg@f1+3
 30708  00EA68  ECC7  F0AB         	call	___flneg	;wreg free
 30709  00EA6C  C078  F07C         	movff	?___flneg,___fladd@b
 30710  00EA70  C079  F07D         	movff	?___flneg+1,___fladd@b+1
 30711  00EA74  C07A  F07E         	movff	?___flneg+2,___fladd@b+2
 30712  00EA78  C07B  F07F         	movff	?___flneg+3,___fladd@b+3
 30713  00EA7C  0E00               	movlw	0
 30714  00EA7E  0100               	movlb	0	; () banked
 30715  00EA80  6F80               	movwf	___fladd@a& (0+255),b
 30716  00EA82  0E90               	movlw	144
 30717  00EA84  6F81               	movwf	(___fladd@a+1)& (0+255),b
 30718  00EA86  0EA4               	movlw	164
 30719  00EA88  6F82               	movwf	(___fladd@a+2)& (0+255),b
 30720  00EA8A  0E46               	movlw	70
 30721  00EA8C  6F83               	movwf	(___fladd@a+3)& (0+255),b
 30722  00EA8E  EC21  F066         	call	___fladd	;wreg free
 30723  00EA92  C07C  F095         	movff	?___fladd,adc_read_temperature@temperature
 30724  00EA96  C07D  F096         	movff	?___fladd+1,adc_read_temperature@temperature+1
 30725  00EA9A  C07E  F097         	movff	?___fladd+2,adc_read_temperature@temperature+2
 30726  00EA9E  C07F  F098         	movff	?___fladd+3,adc_read_temperature@temperature+3
 30727                           
 30728                           ;adc.c: 68: temperature *= 0.7405;
 30729  00EAA2  C095  F078         	movff	adc_read_temperature@temperature,___flmul@b
 30730  00EAA6  C096  F079         	movff	adc_read_temperature@temperature+1,___flmul@b+1
 30731  00EAAA  C097  F07A         	movff	adc_read_temperature@temperature+2,___flmul@b+2
 30732  00EAAE  C098  F07B         	movff	adc_read_temperature@temperature+3,___flmul@b+3
 30733  00EAB2  0E68               	movlw	104
 30734  00EAB4  0100               	movlb	0	; () banked
 30735  00EAB6  6F7C               	movwf	___flmul@a& (0+255),b
 30736  00EAB8  0E91               	movlw	145
 30737  00EABA  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 30738  00EABC  0E3D               	movlw	61
 30739  00EABE  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 30740  00EAC0  0E3F               	movlw	63
 30741  00EAC2  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 30742  00EAC4  EC78  F064         	call	___flmul	;wreg free
 30743  00EAC8  C078  F095         	movff	?___flmul,adc_read_temperature@temperature
 30744  00EACC  C079  F096         	movff	?___flmul+1,adc_read_temperature@temperature+1
 30745  00EAD0  C07A  F097         	movff	?___flmul+2,adc_read_temperature@temperature+2
 30746  00EAD4  C07B  F098         	movff	?___flmul+3,adc_read_temperature@temperature+3
 30747                           
 30748                           ;adc.c: 71: os.temperature[params.temperature_source] = (int16_t) temperature;
 30749  00EAD8  C095  F060         	movff	adc_read_temperature@temperature,___fltol@f1
 30750  00EADC  C096  F061         	movff	adc_read_temperature@temperature+1,___fltol@f1+1
 30751  00EAE0  C097  F062         	movff	adc_read_temperature@temperature+2,___fltol@f1+2
 30752  00EAE4  C098  F063         	movff	adc_read_temperature@temperature+3,___fltol@f1+3
 30753  00EAE8  EC97  F091         	call	___fltol	;wreg free
 30754  00EAEC  0102               	movlb	2	; () banked
 30755  00EAEE  511F               	movf	_params& (0+255),w,b
 30756  00EAF0  0D02               	mullw	2
 30757  00EAF2  0E8D               	movlw	low (_os+41)
 30758  00EAF4  24F3               	addwf	prodl,w,c
 30759  00EAF6  6ED9               	movwf	fsr2l,c
 30760  00EAF8  0E01               	movlw	high (_os+41)
 30761  00EAFA  20F4               	addwfc	prodh,w,c
 30762  00EAFC  6EDA               	movwf	fsr2h,c
 30763  00EAFE  0100               	movlb	0	; () banked
 30764  00EB00  C060  FFDE         	movff	?___fltol,postinc2
 30765  00EB04  C061  FFDD         	movff	?___fltol+1,postdec2
 30766                           
 30767                           ; BSR set to: 0
 30768                           ;adc.c: 74: params.temperature_adc_sum[params.temperature_source] = 0;
 30769  00EB08  0102               	movlb	2	; () banked
 30770  00EB0A  511F               	movf	_params& (0+255),w,b
 30771  00EB0C  0D02               	mullw	2
 30772  00EB0E  0E20               	movlw	low (_params+1)
 30773  00EB10  24F3               	addwf	prodl,w,c
 30774  00EB12  6ED9               	movwf	fsr2l,c
 30775  00EB14  0E02               	movlw	high (_params+1)
 30776  00EB16  20F4               	addwfc	prodh,w,c
 30777  00EB18  6EDA               	movwf	fsr2h,c
 30778  00EB1A  0E00               	movlw	0
 30779  00EB1C  6EDE               	movwf	postinc2,c
 30780  00EB1E  0E00               	movlw	0
 30781  00EB20  6EDD               	movwf	postdec2,c
 30782                           
 30783                           ; BSR set to: 2
 30784                           ;adc.c: 75: params.temperature_count[params.temperature_source] = 0;
 30785  00EB22  511F               	movf	_params& (0+255),w,b
 30786  00EB24  0D01               	mullw	1
 30787  00EB26  0E24               	movlw	low (_params+5)
 30788  00EB28  24F3               	addwf	prodl,w,c
 30789  00EB2A  6ED9               	movwf	fsr2l,c
 30790  00EB2C  0E02               	movlw	high (_params+5)
 30791  00EB2E  20F4               	addwfc	prodh,w,c
 30792  00EB30  6EDA               	movwf	fsr2h,c
 30793  00EB32  0E00               	movlw	0
 30794  00EB34  6EDF               	movwf	indf2,c
 30795                           
 30796                           ; BSR set to: 2
 30797                           ;adc.c: 78: if(os.fan_on)
 30798  00EB36  0101               	movlb	1	; () banked
 30799  00EB38  5194               	movf	(_os+48)& (0+255),w,b	;volatile
 30800  00EB3A  B4D8               	btfsc	status,2,c
 30801  00EB3C  D013               	goto	l2938
 30802                           
 30803                           ; BSR set to: 1
 30804                           ;adc.c: 79: {;adc.c: 80: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]<2400) && (os.te
      +                          mperature[TEMPERATURE_SOURCE_EXTERNAL]<2400))
 30805  00EB3E  BF8E               	btfsc	(_os+42)& (0+255),7,b	;volatile
 30806  00EB40  D006               	goto	u18660
 30807  00EB42  0E60               	movlw	96
 30808  00EB44  5D8D               	subwf	(_os+41)& (0+255),w,b	;volatile
 30809  00EB46  0E09               	movlw	9
 30810  00EB48  598E               	subwfb	(_os+42)& (0+255),w,b	;volatile
 30811  00EB4A  B0D8               	btfsc	status,0,c
 30812  00EB4C  D01E               	goto	l2941
 30813  00EB4E                     u18660:
 30814                           
 30815                           ; BSR set to: 1
 30816  00EB4E  BF90               	btfsc	(_os+44)& (0+255),7,b	;volatile
 30817  00EB50  D006               	goto	u18670
 30818  00EB52  0E60               	movlw	96
 30819  00EB54  5D8F               	subwf	(_os+43)& (0+255),w,b	;volatile
 30820  00EB56  0E09               	movlw	9
 30821  00EB58  5990               	subwfb	(_os+44)& (0+255),w,b	;volatile
 30822  00EB5A  B0D8               	btfsc	status,0,c
 30823  00EB5C  D016               	goto	l2941
 30824  00EB5E                     u18670:
 30825                           
 30826                           ; BSR set to: 1
 30827                           ;adc.c: 81: {;adc.c: 82: LATCbits.LC6 = 0;
 30828  00EB5E  9C8B               	bcf	3979,6,c	;volatile
 30829                           
 30830                           ; BSR set to: 1
 30831                           ;adc.c: 83: os.fan_on = 0;
 30832  00EB60  0E00               	movlw	0
 30833  00EB62  D012               	goto	L41
 30834  00EB64                     l2938:
 30835                           
 30836                           ; BSR set to: 1
 30837                           ;adc.c: 86: else;adc.c: 87: {;adc.c: 88: if((os.temperature[TEMPERATURE_SOURCE_INTERNAL]
      +                          >2500) || (os.temperature[TEMPERATURE_SOURCE_EXTERNAL]>2500))
 30838                           
 30839                           ; BSR set to: 1
 30840  00EB64  BF8E               	btfsc	(_os+42)& (0+255),7,b	;volatile
 30841  00EB66  D006               	goto	u18680
 30842  00EB68  0EC5               	movlw	197
 30843  00EB6A  5D8D               	subwf	(_os+41)& (0+255),w,b	;volatile
 30844  00EB6C  0E09               	movlw	9
 30845  00EB6E  598E               	subwfb	(_os+42)& (0+255),w,b	;volatile
 30846  00EB70  B0D8               	btfsc	status,0,c
 30847  00EB72  D008               	goto	u18690
 30848  00EB74                     u18680:
 30849                           
 30850                           ; BSR set to: 1
 30851  00EB74  BF90               	btfsc	(_os+44)& (0+255),7,b	;volatile
 30852  00EB76  D009               	goto	l2941
 30853  00EB78  0EC5               	movlw	197
 30854  00EB7A  5D8F               	subwf	(_os+43)& (0+255),w,b	;volatile
 30855  00EB7C  0E09               	movlw	9
 30856  00EB7E  5990               	subwfb	(_os+44)& (0+255),w,b	;volatile
 30857  00EB80  A0D8               	btfss	status,0,c
 30858  00EB82  D003               	goto	l2941
 30859  00EB84                     u18690:
 30860                           
 30861                           ; BSR set to: 1
 30862                           ;adc.c: 89: {;adc.c: 90: LATCbits.LC6 = 1;
 30863  00EB84  8C8B               	bsf	3979,6,c	;volatile
 30864                           
 30865                           ; BSR set to: 1
 30866                           ;adc.c: 91: os.fan_on = 1;
 30867  00EB86  0E01               	movlw	1
 30868  00EB88                     L41:
 30869  00EB88  6F94               	movwf	(_os+48)& (0+255),b	;volatile
 30870  00EB8A                     l2941:
 30871                           
 30872                           ;adc.c: 92: };adc.c: 93: };adc.c: 94: };adc.c: 97: if(params.temperature_source==TEMPERA
      +                          TURE_SOURCE_INTERNAL)
 30873                           
 30874                           ; BSR set to: 1
 30875                           
 30876                           ; BSR set to: 1
 30877  00EB8A  0102               	movlb	2	; () banked
 30878  00EB8C  511F               	movf	_params& (0+255),w,b
 30879  00EB8E  A4D8               	btfss	status,2,c
 30880  00EB90  D007               	goto	l2944
 30881                           
 30882                           ; BSR set to: 2
 30883                           ;adc.c: 98: {;adc.c: 99: ADCON0bits.CHS = 0b1011;
 30884  00EB92  50C2               	movf	4034,w,c	;volatile
 30885  00EB94  0BC3               	andlw	-61
 30886  00EB96  092C               	iorlw	44
 30887  00EB98  6EC2               	movwf	4034,c	;volatile
 30888                           
 30889                           ;adc.c: 100: params.temperature_source = TEMPERATURE_SOURCE_EXTERNAL;
 30890  00EB9A  0E01               	movlw	1
 30891  00EB9C  6F1F               	movwf	_params& (0+255),b
 30892                           
 30893                           ;adc.c: 101: }
 30894  00EB9E  0012               	return	
 30895  00EBA0                     l2944:
 30896                           
 30897                           ; BSR set to: 2
 30898                           ;adc.c: 102: else;adc.c: 103: {;adc.c: 104: ADCON0bits.CHS = 0b1001;
 30899                           
 30900                           ; BSR set to: 2
 30901  00EBA0  50C2               	movf	4034,w,c	;volatile
 30902  00EBA2  0BC3               	andlw	-61
 30903  00EBA4  0924               	iorlw	36
 30904  00EBA6  6EC2               	movwf	4034,c	;volatile
 30905                           
 30906                           ;adc.c: 105: params.temperature_source = TEMPERATURE_SOURCE_INTERNAL;
 30907  00EBA8  0E00               	movlw	0
 30908  00EBAA  6F1F               	movwf	_params& (0+255),b
 30909  00EBAC  0012               	return	
 30910  00EBAE                     __end_of_adc_read_temperature:
 30911                           	opt stack 0
 30912                           tblptru	equ	0xFF8
 30913                           tblptrh	equ	0xFF7
 30914                           tblptrl	equ	0xFF6
 30915                           tablat	equ	0xFF5
 30916                           prodh	equ	0xFF4
 30917                           prodl	equ	0xFF3
 30918                           intcon	equ	0xFF2
 30919                           postinc0	equ	0xFEE
 30920                           wreg	equ	0xFE8
 30921                           indf1	equ	0xFE7
 30922                           postinc1	equ	0xFE6
 30923                           postdec1	equ	0xFE5
 30924                           plusw1	equ	0xFE3
 30925                           fsr1h	equ	0xFE2
 30926                           fsr1l	equ	0xFE1
 30927                           indf2	equ	0xFDF
 30928                           postinc2	equ	0xFDE
 30929                           postdec2	equ	0xFDD
 30930                           plusw2	equ	0xFDB
 30931                           fsr2h	equ	0xFDA
 30932                           fsr2l	equ	0xFD9
 30933                           status	equ	0xFD8
 30934                           
 30935 ;; *************** function ___xxtofl *****************
 30936 ;; Defined at:
 30937 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
 30938 ;; Parameters:    Size  Location     Type
 30939 ;;  sign            1    wreg     unsigned char 
 30940 ;;  val             4   10[BANK0 ] long 
 30941 ;; Auto vars:     Size  Location     Type
 30942 ;;  sign            1   18[BANK0 ] unsigned char 
 30943 ;;  arg             4   20[BANK0 ] unsigned long 
 30944 ;;  exp             1   19[BANK0 ] unsigned char 
 30945 ;; Return value:  Size  Location     Type
 30946 ;;                  4   10[BANK0 ] unsigned char 
 30947 ;; Registers used:
 30948 ;;		wreg, status,2, status,0
 30949 ;; Tracked objects:
 30950 ;;		On entry : 0/0
 30951 ;;		On exit  : 0/0
 30952 ;;		Unchanged: 0/0
 30953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30954 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30955 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30956 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30957 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30958 ;;Total ram usage:       14 bytes
 30959 ;; Hardware stack levels used:    1
 30960 ;; Hardware stack levels required when called:   10
 30961 ;; This function calls:
 30962 ;;		Nothing
 30963 ;; This function is called by:
 30964 ;;		__motor_steps_from_degrees_int
 30965 ;;		_motor_calculate_position_in_degrees
 30966 ;;		__motor_get_speed_in_degrees
 30967 ;;		__step_position_from_divide_position
 30968 ;;		_motor_divide_jump_to_nearest
 30969 ;;		_motor_arc_move
 30970 ;;		_adc_read_temperature
 30971 ;;		__steps_from_degrees
 30972 ;;		__motor_steps_from_degrees_float
 30973 ;;		_motor_steps_from_degrees
 30974 ;; This function uses a non-reentrant model
 30975 ;;
 30976                           
 30977                           	psect	text122
 30978  0100B4                     __ptext122:
 30979                           	opt stack 0
 30980  0100B4                     ___xxtofl:
 30981                           	opt stack 18
 30982                           
 30983                           ; BSR set to: 2
 30984                           ;incstack = 0
 30985                           ;___xxtofl@sign stored from wreg
 30986  0100B4  0100               	movlb	0	; () banked
 30987  0100B6  6F72               	movwf	___xxtofl@sign& (0+255),b
 30988  0100B8  0100               	movlb	0	; () banked
 30989  0100BA  5172               	movf	___xxtofl@sign& (0+255),w,b
 30990  0100BC  A4D8               	btfss	status,2,c
 30991                           
 30992                           ; BSR set to: 0
 30993  0100BE  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 30994  0100C0  D01A               	goto	l3723
 30995                           
 30996                           ; BSR set to: 0
 30997  0100C2  C06A  F06E         	movff	___xxtofl@val,??___xxtofl
 30998  0100C6  C06B  F06F         	movff	___xxtofl@val+1,??___xxtofl+1
 30999  0100CA  C06C  F070         	movff	___xxtofl@val+2,??___xxtofl+2
 31000  0100CE  C06D  F071         	movff	___xxtofl@val+3,??___xxtofl+3
 31001  0100D2  1F6E               	comf	??___xxtofl& (0+255),f,b
 31002  0100D4  1F6F               	comf	(??___xxtofl+1)& (0+255),f,b
 31003  0100D6  1F70               	comf	(??___xxtofl+2)& (0+255),f,b
 31004  0100D8  1F71               	comf	(??___xxtofl+3)& (0+255),f,b
 31005  0100DA  2B6E               	incf	??___xxtofl& (0+255),f,b
 31006  0100DC  0E00               	movlw	0
 31007  0100DE  236F               	addwfc	(??___xxtofl+1)& (0+255),f,b
 31008  0100E0  2370               	addwfc	(??___xxtofl+2)& (0+255),f,b
 31009  0100E2  2371               	addwfc	(??___xxtofl+3)& (0+255),f,b
 31010  0100E4  C06E  F074         	movff	??___xxtofl,___xxtofl@arg
 31011  0100E8  C06F  F075         	movff	??___xxtofl+1,___xxtofl@arg+1
 31012  0100EC  C070  F076         	movff	??___xxtofl+2,___xxtofl@arg+2
 31013  0100F0  C071  F077         	movff	??___xxtofl+3,___xxtofl@arg+3
 31014  0100F4  D008               	goto	l3724
 31015  0100F6                     l3723:
 31016                           
 31017                           ; BSR set to: 0
 31018  0100F6  C06A  F074         	movff	___xxtofl@val,___xxtofl@arg
 31019  0100FA  C06B  F075         	movff	___xxtofl@val+1,___xxtofl@arg+1
 31020  0100FE  C06C  F076         	movff	___xxtofl@val+2,___xxtofl@arg+2
 31021  010102  C06D  F077         	movff	___xxtofl@val+3,___xxtofl@arg+3
 31022  010106                     l3724:
 31023                           
 31024                           ; BSR set to: 0
 31025                           
 31026                           ; BSR set to: 0
 31027  010106  516A               	movf	___xxtofl@val& (0+255),w,b
 31028  010108  116B               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 31029  01010A  116C               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 31030  01010C  116D               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 31031  01010E  A4D8               	btfss	status,2,c
 31032  010110  D009               	goto	l3725
 31033                           
 31034                           ; BSR set to: 0
 31035  010112  0E00               	movlw	0
 31036  010114  6F6A               	movwf	?___xxtofl& (0+255),b
 31037  010116  0E00               	movlw	0
 31038  010118  6F6B               	movwf	(?___xxtofl+1)& (0+255),b
 31039  01011A  0E00               	movlw	0
 31040  01011C  6F6C               	movwf	(?___xxtofl+2)& (0+255),b
 31041  01011E  0E00               	movlw	0
 31042  010120  6F6D               	movwf	(?___xxtofl+3)& (0+255),b
 31043                           
 31044                           ; BSR set to: 0
 31045  010122  0012               	return	
 31046  010124                     l3725:
 31047                           
 31048                           ; BSR set to: 0
 31049                           
 31050                           ; BSR set to: 0
 31051  010124  0E96               	movlw	150
 31052  010126  6F73               	movwf	___xxtofl@exp& (0+255),b
 31053  010128  D006               	goto	l3727
 31054  01012A                     
 31055                           ; BSR set to: 0
 31056                           
 31057                           ; BSR set to: 0
 31058  01012A  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31059  01012C  90D8               	bcf	status,0,c
 31060  01012E  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31061  010130  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31062  010132  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31063  010134  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31064  010136                     l3727:
 31065                           
 31066                           ; BSR set to: 0
 31067                           
 31068                           ; BSR set to: 0
 31069  010136  0E00               	movlw	0
 31070  010138  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31071  01013A  6F6E               	movwf	??___xxtofl& (0+255),b
 31072  01013C  0E00               	movlw	0
 31073  01013E  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31074  010140  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31075  010142  0E00               	movlw	0
 31076  010144  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31077  010146  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31078  010148  0EFE               	movlw	254
 31079  01014A  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31080  01014C  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31081  01014E  516E               	movf	??___xxtofl& (0+255),w,b
 31082  010150  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31083  010152  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31084  010154  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31085  010156  B4D8               	btfsc	status,2,c
 31086  010158  D00D               	goto	l3730
 31087  01015A  D7E7               	goto	l3728
 31088  01015C                     
 31089                           ; BSR set to: 0
 31090                           
 31091                           ; BSR set to: 0
 31092  01015C  2B73               	incf	___xxtofl@exp& (0+255),f,b
 31093                           
 31094                           ; BSR set to: 0
 31095  01015E  0E01               	movlw	1
 31096  010160  2774               	addwf	___xxtofl@arg& (0+255),f,b
 31097  010162  0E00               	movlw	0
 31098  010164  2375               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 31099  010166  2376               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 31100  010168  2377               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 31101                           
 31102                           ; BSR set to: 0
 31103  01016A  90D8               	bcf	status,0,c
 31104  01016C  3377               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 31105  01016E  3376               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 31106  010170  3375               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 31107  010172  3374               	rrcf	___xxtofl@arg& (0+255),f,b
 31108  010174                     l3730:
 31109                           
 31110                           ; BSR set to: 0
 31111  010174  0E00               	movlw	0
 31112  010176  1574               	andwf	___xxtofl@arg& (0+255),w,b
 31113  010178  6F6E               	movwf	??___xxtofl& (0+255),b
 31114  01017A  0E00               	movlw	0
 31115  01017C  1575               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 31116  01017E  6F6F               	movwf	(??___xxtofl+1)& (0+255),b
 31117  010180  0E00               	movlw	0
 31118  010182  1576               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 31119  010184  6F70               	movwf	(??___xxtofl+2)& (0+255),b
 31120  010186  0EFF               	movlw	255
 31121  010188  1577               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 31122  01018A  6F71               	movwf	(??___xxtofl+3)& (0+255),b
 31123  01018C  516E               	movf	??___xxtofl& (0+255),w,b
 31124  01018E  116F               	iorwf	(??___xxtofl+1)& (0+255),w,b
 31125  010190  1170               	iorwf	(??___xxtofl+2)& (0+255),w,b
 31126  010192  1171               	iorwf	(??___xxtofl+3)& (0+255),w,b
 31127  010194  B4D8               	btfsc	status,2,c
 31128  010196  D007               	goto	l3733
 31129  010198  D7E1               	goto	l3731
 31130  01019A                     
 31131                           ; BSR set to: 0
 31132                           
 31133                           ; BSR set to: 0
 31134  01019A  0773               	decf	___xxtofl@exp& (0+255),f,b
 31135  01019C  90D8               	bcf	status,0,c
 31136  01019E  3774               	rlcf	___xxtofl@arg& (0+255),f,b
 31137  0101A0  3775               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 31138  0101A2  3776               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 31139  0101A4  3777               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 31140  0101A6                     l3733:
 31141                           
 31142                           ; BSR set to: 0
 31143                           
 31144                           ; BSR set to: 0
 31145  0101A6  BF76               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 31146  0101A8  D003               	goto	u13450
 31147                           
 31148                           ; BSR set to: 0
 31149  0101AA  0E02               	movlw	2
 31150  0101AC  6173               	cpfslt	___xxtofl@exp& (0+255),b
 31151  0101AE  D7F5               	goto	l3734
 31152  0101B0                     u13450:
 31153                           
 31154                           ; BSR set to: 0
 31155                           
 31156                           ; BSR set to: 0
 31157  0101B0  A173               	btfss	___xxtofl@exp& (0+255),0,b
 31158                           
 31159                           ; BSR set to: 0
 31160  0101B2  9F76               	bcf	(___xxtofl@arg+2)& (0+255),7,b
 31161                           
 31162                           ; BSR set to: 0
 31163                           
 31164                           ; BSR set to: 0
 31165  0101B4  90D8               	bcf	status,0,c
 31166  0101B6  3373               	rrcf	___xxtofl@exp& (0+255),f,b
 31167                           
 31168                           ; BSR set to: 0
 31169  0101B8  C073  F06E         	movff	___xxtofl@exp,??___xxtofl
 31170  0101BC  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31171  0101BE  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31172  0101C0  6B71               	clrf	(??___xxtofl+3)& (0+255),b
 31173  0101C2  C06E  F071         	movff	??___xxtofl,??___xxtofl+3
 31174  0101C6  6B70               	clrf	(??___xxtofl+2)& (0+255),b
 31175  0101C8  6B6F               	clrf	(??___xxtofl+1)& (0+255),b
 31176  0101CA  6B6E               	clrf	??___xxtofl& (0+255),b
 31177  0101CC  516E               	movf	??___xxtofl& (0+255),w,b
 31178  0101CE  1374               	iorwf	___xxtofl@arg& (0+255),f,b
 31179  0101D0  516F               	movf	(??___xxtofl+1)& (0+255),w,b
 31180  0101D2  1375               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 31181  0101D4  5170               	movf	(??___xxtofl+2)& (0+255),w,b
 31182  0101D6  1376               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 31183  0101D8  5171               	movf	(??___xxtofl+3)& (0+255),w,b
 31184  0101DA  1377               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 31185                           
 31186                           ; BSR set to: 0
 31187  0101DC  5172               	movf	___xxtofl@sign& (0+255),w,b
 31188  0101DE  A4D8               	btfss	status,2,c
 31189                           
 31190                           ; BSR set to: 0
 31191  0101E0  AF6D               	btfss	(___xxtofl@val+3)& (0+255),7,b
 31192  0101E2  D001               	goto	l3739
 31193                           
 31194                           ; BSR set to: 0
 31195  0101E4  8F77               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 31196  0101E6                     l3739:
 31197                           
 31198                           ; BSR set to: 0
 31199                           
 31200                           ; BSR set to: 0
 31201  0101E6  C074  F06A         	movff	___xxtofl@arg,?___xxtofl
 31202  0101EA  C075  F06B         	movff	___xxtofl@arg+1,?___xxtofl+1
 31203  0101EE  C076  F06C         	movff	___xxtofl@arg+2,?___xxtofl+2
 31204  0101F2  C077  F06D         	movff	___xxtofl@arg+3,?___xxtofl+3
 31205  0101F6  0012               	return	
 31206  0101F8                     __end_of___xxtofl:
 31207                           	opt stack 0
 31208                           tblptru	equ	0xFF8
 31209                           tblptrh	equ	0xFF7
 31210                           tblptrl	equ	0xFF6
 31211                           tablat	equ	0xFF5
 31212                           prodh	equ	0xFF4
 31213                           prodl	equ	0xFF3
 31214                           intcon	equ	0xFF2
 31215                           postinc0	equ	0xFEE
 31216                           wreg	equ	0xFE8
 31217                           indf1	equ	0xFE7
 31218                           postinc1	equ	0xFE6
 31219                           postdec1	equ	0xFE5
 31220                           plusw1	equ	0xFE3
 31221                           fsr1h	equ	0xFE2
 31222                           fsr1l	equ	0xFE1
 31223                           indf2	equ	0xFDF
 31224                           postinc2	equ	0xFDE
 31225                           postdec2	equ	0xFDD
 31226                           plusw2	equ	0xFDB
 31227                           fsr2h	equ	0xFDA
 31228                           fsr2l	equ	0xFD9
 31229                           status	equ	0xFD8
 31230                           
 31231 ;; *************** function ___fltol *****************
 31232 ;; Defined at:
 31233 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
 31234 ;; Parameters:    Size  Location     Type
 31235 ;;  f1              4    0[BANK0 ] unsigned char 
 31236 ;; Auto vars:     Size  Location     Type
 31237 ;;  exp1            1    9[BANK0 ] unsigned char 
 31238 ;;  sign1           1    8[BANK0 ] unsigned char 
 31239 ;; Return value:  Size  Location     Type
 31240 ;;                  4    0[BANK0 ] long 
 31241 ;; Registers used:
 31242 ;;		wreg, status,2, status,0
 31243 ;; Tracked objects:
 31244 ;;		On entry : 0/0
 31245 ;;		On exit  : 0/0
 31246 ;;		Unchanged: 0/0
 31247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31248 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31249 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31250 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31251 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31252 ;;Total ram usage:       10 bytes
 31253 ;; Hardware stack levels used:    1
 31254 ;; Hardware stack levels required when called:   10
 31255 ;; This function calls:
 31256 ;;		Nothing
 31257 ;; This function is called by:
 31258 ;;		__motor_steps_from_degrees_int
 31259 ;;		_motor_calculate_position_in_degrees
 31260 ;;		__motor_get_speed_in_degrees
 31261 ;;		__step_position_from_divide_position
 31262 ;;		_motor_divide_jump_to_nearest
 31263 ;;		_motor_arc_move
 31264 ;;		_adc_read_temperature
 31265 ;;		__steps_from_degrees
 31266 ;;		__motor_steps_from_degrees_float
 31267 ;;		_motor_steps_from_degrees
 31268 ;; This function uses a non-reentrant model
 31269 ;;
 31270                           
 31271                           	psect	text123
 31272  01232E                     __ptext123:
 31273                           	opt stack 0
 31274  01232E                     ___fltol:
 31275                           	opt stack 18
 31276                           
 31277                           ; BSR set to: 0
 31278                           ;incstack = 0
 31279  01232E  0100               	movlb	0	; () banked
 31280  012330  3562               	rlcf	(___fltol@f1+2)& (0+255),w,b
 31281  012332  3563               	rlcf	(___fltol@f1+3)& (0+255),w,b
 31282  012334  6F69               	movwf	___fltol@exp1& (0+255),b
 31283  012336  5169               	movf	___fltol@exp1& (0+255),w,b
 31284  012338  A4D8               	btfss	status,2,c
 31285  01233A  D009               	goto	l3368
 31286                           
 31287                           ; BSR set to: 0
 31288  01233C  0E00               	movlw	0
 31289  01233E  6F60               	movwf	?___fltol& (0+255),b
 31290  012340  0E00               	movlw	0
 31291  012342  6F61               	movwf	(?___fltol+1)& (0+255),b
 31292  012344  0E00               	movlw	0
 31293  012346  6F62               	movwf	(?___fltol+2)& (0+255),b
 31294  012348  0E00               	movlw	0
 31295  01234A  6F63               	movwf	(?___fltol+3)& (0+255),b
 31296                           
 31297                           ; BSR set to: 0
 31298  01234C  0012               	return	
 31299  01234E                     l3368:
 31300                           
 31301                           ; BSR set to: 0
 31302                           
 31303                           ; BSR set to: 0
 31304  01234E  C060  F064         	movff	___fltol@f1,??___fltol
 31305  012352  C061  F065         	movff	___fltol@f1+1,??___fltol+1
 31306  012356  C062  F066         	movff	___fltol@f1+2,??___fltol+2
 31307  01235A  C063  F067         	movff	___fltol@f1+3,??___fltol+3
 31308  01235E  0E20               	movlw	32
 31309  012360  D005               	goto	u13330
 31310  012362                     u13335:
 31311  012362  90D8               	bcf	status,0,c
 31312  012364  3367               	rrcf	(??___fltol+3)& (0+255),f,b
 31313  012366  3366               	rrcf	(??___fltol+2)& (0+255),f,b
 31314  012368  3365               	rrcf	(??___fltol+1)& (0+255),f,b
 31315  01236A  3364               	rrcf	??___fltol& (0+255),f,b
 31316  01236C                     u13330:
 31317  01236C  2EE8               	decfsz	wreg,f,c
 31318  01236E  D7F9               	goto	u13335
 31319  012370  5164               	movf	??___fltol& (0+255),w,b
 31320  012372  6F68               	movwf	___fltol@sign1& (0+255),b
 31321                           
 31322                           ; BSR set to: 0
 31323  012374  8F62               	bsf	(___fltol@f1+2)& (0+255),7,b
 31324                           
 31325                           ; BSR set to: 0
 31326  012376  0EFF               	movlw	255
 31327  012378  1760               	andwf	___fltol@f1& (0+255),f,b
 31328  01237A  0EFF               	movlw	255
 31329  01237C  1761               	andwf	(___fltol@f1+1)& (0+255),f,b
 31330  01237E  0EFF               	movlw	255
 31331  012380  1762               	andwf	(___fltol@f1+2)& (0+255),f,b
 31332  012382  0E00               	movlw	0
 31333  012384  1763               	andwf	(___fltol@f1+3)& (0+255),f,b
 31334                           
 31335                           ; BSR set to: 0
 31336  012386  0E96               	movlw	150
 31337  012388  5F69               	subwf	___fltol@exp1& (0+255),f,b
 31338                           
 31339                           ; BSR set to: 0
 31340  01238A  AF69               	btfss	___fltol@exp1& (0+255),7,b
 31341  01238C  D016               	goto	l3370
 31342                           
 31343                           ; BSR set to: 0
 31344  01238E  5169               	movf	___fltol@exp1& (0+255),w,b
 31345  012390  0A80               	xorlw	128
 31346  012392  0F97               	addlw	151
 31347  012394  B0D8               	btfsc	status,0,c
 31348  012396  D009               	goto	l3371
 31349                           
 31350                           ; BSR set to: 0
 31351  012398  0E00               	movlw	0
 31352  01239A  6F60               	movwf	?___fltol& (0+255),b
 31353  01239C  0E00               	movlw	0
 31354  01239E  6F61               	movwf	(?___fltol+1)& (0+255),b
 31355  0123A0  0E00               	movlw	0
 31356  0123A2  6F62               	movwf	(?___fltol+2)& (0+255),b
 31357  0123A4  0E00               	movlw	0
 31358  0123A6  6F63               	movwf	(?___fltol+3)& (0+255),b
 31359                           
 31360                           ; BSR set to: 0
 31361  0123A8  0012               	return	
 31362  0123AA                     l3371:
 31363                           
 31364                           ; BSR set to: 0
 31365                           
 31366                           ; BSR set to: 0
 31367                           
 31368                           ; BSR set to: 0
 31369  0123AA  90D8               	bcf	status,0,c
 31370  0123AC  3363               	rrcf	(___fltol@f1+3)& (0+255),f,b
 31371  0123AE  3362               	rrcf	(___fltol@f1+2)& (0+255),f,b
 31372  0123B0  3361               	rrcf	(___fltol@f1+1)& (0+255),f,b
 31373  0123B2  3360               	rrcf	___fltol@f1& (0+255),f,b
 31374                           
 31375                           ; BSR set to: 0
 31376  0123B4  3F69               	incfsz	___fltol@exp1& (0+255),f,b
 31377  0123B6  D7F9               	goto	l3371
 31378                           
 31379                           ; BSR set to: 0
 31380  0123B8  D015               	goto	u13370
 31381  0123BA                     l3370:
 31382                           
 31383                           ; BSR set to: 0
 31384                           
 31385                           ; BSR set to: 0
 31386  0123BA  0E1F               	movlw	31
 31387  0123BC  6569               	cpfsgt	___fltol@exp1& (0+255),b
 31388  0123BE  D00F               	goto	l3376
 31389                           
 31390                           ; BSR set to: 0
 31391  0123C0  0E00               	movlw	0
 31392  0123C2  6F60               	movwf	?___fltol& (0+255),b
 31393  0123C4  0E00               	movlw	0
 31394  0123C6  6F61               	movwf	(?___fltol+1)& (0+255),b
 31395  0123C8  0E00               	movlw	0
 31396  0123CA  6F62               	movwf	(?___fltol+2)& (0+255),b
 31397  0123CC  0E00               	movlw	0
 31398  0123CE  6F63               	movwf	(?___fltol+3)& (0+255),b
 31399                           
 31400                           ; BSR set to: 0
 31401  0123D0  0012               	return	
 31402  0123D2                     
 31403                           ; BSR set to: 0
 31404                           
 31405                           ; BSR set to: 0
 31406  0123D2  90D8               	bcf	status,0,c
 31407  0123D4  3760               	rlcf	___fltol@f1& (0+255),f,b
 31408  0123D6  3761               	rlcf	(___fltol@f1+1)& (0+255),f,b
 31409  0123D8  3762               	rlcf	(___fltol@f1+2)& (0+255),f,b
 31410  0123DA  3763               	rlcf	(___fltol@f1+3)& (0+255),f,b
 31411  0123DC  0769               	decf	___fltol@exp1& (0+255),f,b
 31412  0123DE                     l3376:
 31413                           
 31414                           ; BSR set to: 0
 31415                           
 31416                           ; BSR set to: 0
 31417  0123DE  5169               	movf	___fltol@exp1& (0+255),w,b
 31418  0123E0  A4D8               	btfss	status,2,c
 31419  0123E2  D7F7               	goto	l3377
 31420  0123E4                     u13370:
 31421                           
 31422                           ; BSR set to: 0
 31423                           
 31424                           ; BSR set to: 0
 31425                           
 31426                           ; BSR set to: 0
 31427  0123E4  5168               	movf	___fltol@sign1& (0+255),w,b
 31428  0123E6  B4D8               	btfsc	status,2,c
 31429  0123E8  D008               	goto	l3379
 31430                           
 31431                           ; BSR set to: 0
 31432  0123EA  1F63               	comf	(___fltol@f1+3)& (0+255),f,b
 31433  0123EC  1F62               	comf	(___fltol@f1+2)& (0+255),f,b
 31434  0123EE  1F61               	comf	(___fltol@f1+1)& (0+255),f,b
 31435  0123F0  6D60               	negf	___fltol@f1& (0+255),b
 31436  0123F2  0E00               	movlw	0
 31437  0123F4  2361               	addwfc	(___fltol@f1+1)& (0+255),f,b
 31438  0123F6  2362               	addwfc	(___fltol@f1+2)& (0+255),f,b
 31439  0123F8  2363               	addwfc	(___fltol@f1+3)& (0+255),f,b
 31440  0123FA                     l3379:
 31441                           
 31442                           ; BSR set to: 0
 31443                           
 31444                           ; BSR set to: 0
 31445  0123FA  C060  F060         	movff	___fltol@f1,?___fltol
 31446  0123FE  C061  F061         	movff	___fltol@f1+1,?___fltol+1
 31447  012402  C062  F062         	movff	___fltol@f1+2,?___fltol+2
 31448  012406  C063  F063         	movff	___fltol@f1+3,?___fltol+3
 31449  01240A  0012               	return	
 31450  01240C                     __end_of___fltol:
 31451                           	opt stack 0
 31452                           tblptru	equ	0xFF8
 31453                           tblptrh	equ	0xFF7
 31454                           tblptrl	equ	0xFF6
 31455                           tablat	equ	0xFF5
 31456                           prodh	equ	0xFF4
 31457                           prodl	equ	0xFF3
 31458                           intcon	equ	0xFF2
 31459                           postinc0	equ	0xFEE
 31460                           wreg	equ	0xFE8
 31461                           indf1	equ	0xFE7
 31462                           postinc1	equ	0xFE6
 31463                           postdec1	equ	0xFE5
 31464                           plusw1	equ	0xFE3
 31465                           fsr1h	equ	0xFE2
 31466                           fsr1l	equ	0xFE1
 31467                           indf2	equ	0xFDF
 31468                           postinc2	equ	0xFDE
 31469                           postdec2	equ	0xFDD
 31470                           plusw2	equ	0xFDB
 31471                           fsr2h	equ	0xFDA
 31472                           fsr2l	equ	0xFD9
 31473                           status	equ	0xFD8
 31474                           
 31475 ;; *************** function ___flneg *****************
 31476 ;; Defined at:
 31477 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
 31478 ;; Parameters:    Size  Location     Type
 31479 ;;  f1              4   24[BANK0 ] long 
 31480 ;; Auto vars:     Size  Location     Type
 31481 ;;		None
 31482 ;; Return value:  Size  Location     Type
 31483 ;;                  4   24[BANK0 ] long 
 31484 ;; Registers used:
 31485 ;;		wreg, status,2, status,0
 31486 ;; Tracked objects:
 31487 ;;		On entry : 0/0
 31488 ;;		On exit  : 0/0
 31489 ;;		Unchanged: 0/0
 31490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31491 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31494 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31495 ;;Total ram usage:        4 bytes
 31496 ;; Hardware stack levels used:    1
 31497 ;; Hardware stack levels required when called:   10
 31498 ;; This function calls:
 31499 ;;		Nothing
 31500 ;; This function is called by:
 31501 ;;		_adc_read_temperature
 31502 ;;		__motor_steps_from_degrees_float
 31503 ;; This function uses a non-reentrant model
 31504 ;;
 31505                           
 31506                           	psect	text124
 31507  01578E                     __ptext124:
 31508                           	opt stack 0
 31509  01578E                     ___flneg:
 31510                           	opt stack 19
 31511                           
 31512                           ; BSR set to: 0
 31513                           ;incstack = 0
 31514  01578E  0100               	movlb	0	; () banked
 31515  015790  5178               	movf	___flneg@f1& (0+255),w,b
 31516  015792  1179               	iorwf	(___flneg@f1+1)& (0+255),w,b
 31517  015794  117A               	iorwf	(___flneg@f1+2)& (0+255),w,b
 31518  015796  117B               	iorwf	(___flneg@f1+3)& (0+255),w,b
 31519  015798  B4D8               	btfsc	status,2,c
 31520  01579A  D008               	goto	l3345
 31521                           
 31522                           ; BSR set to: 0
 31523  01579C  0E00               	movlw	0
 31524  01579E  1B78               	xorwf	___flneg@f1& (0+255),f,b
 31525  0157A0  0E00               	movlw	0
 31526  0157A2  1B79               	xorwf	(___flneg@f1+1)& (0+255),f,b
 31527  0157A4  0E00               	movlw	0
 31528  0157A6  1B7A               	xorwf	(___flneg@f1+2)& (0+255),f,b
 31529  0157A8  0E80               	movlw	128
 31530  0157AA  1B7B               	xorwf	(___flneg@f1+3)& (0+255),f,b
 31531  0157AC                     l3345:
 31532                           
 31533                           ; BSR set to: 0
 31534                           
 31535                           ; BSR set to: 0
 31536  0157AC  C078  F078         	movff	___flneg@f1,?___flneg
 31537  0157B0  C079  F079         	movff	___flneg@f1+1,?___flneg+1
 31538  0157B4  C07A  F07A         	movff	___flneg@f1+2,?___flneg+2
 31539  0157B8  C07B  F07B         	movff	___flneg@f1+3,?___flneg+3
 31540  0157BC  0012               	return	
 31541  0157BE                     __end_of___flneg:
 31542                           	opt stack 0
 31543                           tblptru	equ	0xFF8
 31544                           tblptrh	equ	0xFF7
 31545                           tblptrl	equ	0xFF6
 31546                           tablat	equ	0xFF5
 31547                           prodh	equ	0xFF4
 31548                           prodl	equ	0xFF3
 31549                           intcon	equ	0xFF2
 31550                           postinc0	equ	0xFEE
 31551                           wreg	equ	0xFE8
 31552                           indf1	equ	0xFE7
 31553                           postinc1	equ	0xFE6
 31554                           postdec1	equ	0xFE5
 31555                           plusw1	equ	0xFE3
 31556                           fsr1h	equ	0xFE2
 31557                           fsr1l	equ	0xFE1
 31558                           indf2	equ	0xFDF
 31559                           postinc2	equ	0xFDE
 31560                           postdec2	equ	0xFDD
 31561                           plusw2	equ	0xFDB
 31562                           fsr2h	equ	0xFDA
 31563                           fsr2l	equ	0xFD9
 31564                           status	equ	0xFD8
 31565                           
 31566 ;; *************** function ___flmul *****************
 31567 ;; Defined at:
 31568 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
 31569 ;; Parameters:    Size  Location     Type
 31570 ;;  b               4   24[BANK0 ] long 
 31571 ;;  a               4   28[BANK0 ] long 
 31572 ;; Auto vars:     Size  Location     Type
 31573 ;;  prod            4   43[BANK0 ] struct .
 31574 ;;  grs             4   37[BANK0 ] unsigned long 
 31575 ;;  temp            2   47[BANK0 ] struct .
 31576 ;;  bexp            1   42[BANK0 ] unsigned char 
 31577 ;;  aexp            1   41[BANK0 ] unsigned char 
 31578 ;;  sign            1   36[BANK0 ] unsigned char 
 31579 ;; Return value:  Size  Location     Type
 31580 ;;                  4   24[BANK0 ] unsigned char 
 31581 ;; Registers used:
 31582 ;;		wreg, status,2, status,0, prodl, prodh
 31583 ;; Tracked objects:
 31584 ;;		On entry : 0/0
 31585 ;;		On exit  : 0/0
 31586 ;;		Unchanged: 0/0
 31587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31588 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31589 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31590 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31591 ;;      Totals:         0      25       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31592 ;;Total ram usage:       25 bytes
 31593 ;; Hardware stack levels used:    1
 31594 ;; Hardware stack levels required when called:   10
 31595 ;; This function calls:
 31596 ;;		Nothing
 31597 ;; This function is called by:
 31598 ;;		__motor_steps_from_degrees_int
 31599 ;;		_motor_calculate_position_in_degrees
 31600 ;;		__step_position_from_divide_position
 31601 ;;		_motor_divide_jump_to_nearest
 31602 ;;		_motor_arc_move
 31603 ;;		_adc_read_temperature
 31604 ;;		__steps_from_degrees
 31605 ;;		__motor_steps_from_degrees_float
 31606 ;;		_motor_steps_from_degrees
 31607 ;; This function uses a non-reentrant model
 31608 ;;
 31609                           
 31610                           	psect	text125
 31611  00C8F0                     __ptext125:
 31612                           	opt stack 0
 31613  00C8F0                     ___flmul:
 31614                           	opt stack 18
 31615                           
 31616                           ; BSR set to: 0
 31617                           ;incstack = 0
 31618  00C8F0  0100               	movlb	0	; () banked
 31619  00C8F2  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31620  00C8F4  0B80               	andlw	128
 31621  00C8F6  6F84               	movwf	___flmul@sign& (0+255),b
 31622  00C8F8  517B               	movf	(___flmul@b+3)& (0+255),w,b
 31623  00C8FA  257B               	addwf	(___flmul@b+3)& (0+255),w,b
 31624  00C8FC  6F8A               	movwf	___flmul@bexp& (0+255),b
 31625                           
 31626                           ; BSR set to: 0
 31627  00C8FE  BF7A               	btfsc	(___flmul@b+2)& (0+255),7,b
 31628                           
 31629                           ; BSR set to: 0
 31630  00C900  818A               	bsf	___flmul@bexp& (0+255),0,b
 31631                           
 31632                           ; BSR set to: 0
 31633                           
 31634                           ; BSR set to: 0
 31635  00C902  518A               	movf	___flmul@bexp& (0+255),w,b
 31636  00C904  B4D8               	btfsc	status,2,c
 31637  00C906  D00D               	goto	l3676
 31638                           
 31639                           ; BSR set to: 0
 31640  00C908  298A               	incf	___flmul@bexp& (0+255),w,b
 31641  00C90A  A4D8               	btfss	status,2,c
 31642  00C90C  D008               	goto	l3677
 31643                           
 31644                           ; BSR set to: 0
 31645  00C90E  0E00               	movlw	0
 31646  00C910  6F78               	movwf	___flmul@b& (0+255),b
 31647  00C912  0E00               	movlw	0
 31648  00C914  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31649  00C916  0E00               	movlw	0
 31650  00C918  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31651  00C91A  0E00               	movlw	0
 31652  00C91C  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31653  00C91E                     l3677:
 31654                           
 31655                           ; BSR set to: 0
 31656                           
 31657                           ; BSR set to: 0
 31658  00C91E  8F7A               	bsf	(___flmul@b+2)& (0+255),7,b
 31659  00C920  D008               	goto	l3678
 31660  00C922                     l3676:
 31661                           
 31662                           ; BSR set to: 0
 31663                           
 31664                           ; BSR set to: 0
 31665  00C922  0E00               	movlw	0
 31666  00C924  6F78               	movwf	___flmul@b& (0+255),b
 31667  00C926  0E00               	movlw	0
 31668  00C928  6F79               	movwf	(___flmul@b+1)& (0+255),b
 31669  00C92A  0E00               	movlw	0
 31670  00C92C  6F7A               	movwf	(___flmul@b+2)& (0+255),b
 31671  00C92E  0E00               	movlw	0
 31672  00C930  6F7B               	movwf	(___flmul@b+3)& (0+255),b
 31673  00C932                     l3678:
 31674                           
 31675                           ; BSR set to: 0
 31676                           
 31677                           ; BSR set to: 0
 31678  00C932  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31679  00C934  0B80               	andlw	128
 31680  00C936  1B84               	xorwf	___flmul@sign& (0+255),f,b
 31681                           
 31682                           ; BSR set to: 0
 31683  00C938  517F               	movf	(___flmul@a+3)& (0+255),w,b
 31684  00C93A  257F               	addwf	(___flmul@a+3)& (0+255),w,b
 31685  00C93C  6F89               	movwf	___flmul@aexp& (0+255),b
 31686                           
 31687                           ; BSR set to: 0
 31688  00C93E  BF7E               	btfsc	(___flmul@a+2)& (0+255),7,b
 31689                           
 31690                           ; BSR set to: 0
 31691  00C940  8189               	bsf	___flmul@aexp& (0+255),0,b
 31692                           
 31693                           ; BSR set to: 0
 31694                           
 31695                           ; BSR set to: 0
 31696  00C942  5189               	movf	___flmul@aexp& (0+255),w,b
 31697  00C944  B4D8               	btfsc	status,2,c
 31698  00C946  D00D               	goto	l3680
 31699                           
 31700                           ; BSR set to: 0
 31701  00C948  2989               	incf	___flmul@aexp& (0+255),w,b
 31702  00C94A  A4D8               	btfss	status,2,c
 31703  00C94C  D008               	goto	l3681
 31704                           
 31705                           ; BSR set to: 0
 31706  00C94E  0E00               	movlw	0
 31707  00C950  6F7C               	movwf	___flmul@a& (0+255),b
 31708  00C952  0E00               	movlw	0
 31709  00C954  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31710  00C956  0E00               	movlw	0
 31711  00C958  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31712  00C95A  0E00               	movlw	0
 31713  00C95C  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31714  00C95E                     l3681:
 31715                           
 31716                           ; BSR set to: 0
 31717                           
 31718                           ; BSR set to: 0
 31719  00C95E  8F7E               	bsf	(___flmul@a+2)& (0+255),7,b
 31720  00C960  D008               	goto	l3682
 31721  00C962                     l3680:
 31722                           
 31723                           ; BSR set to: 0
 31724                           
 31725                           ; BSR set to: 0
 31726  00C962  0E00               	movlw	0
 31727  00C964  6F7C               	movwf	___flmul@a& (0+255),b
 31728  00C966  0E00               	movlw	0
 31729  00C968  6F7D               	movwf	(___flmul@a+1)& (0+255),b
 31730  00C96A  0E00               	movlw	0
 31731  00C96C  6F7E               	movwf	(___flmul@a+2)& (0+255),b
 31732  00C96E  0E00               	movlw	0
 31733  00C970  6F7F               	movwf	(___flmul@a+3)& (0+255),b
 31734  00C972                     l3682:
 31735                           
 31736                           ; BSR set to: 0
 31737  00C972  5189               	movf	___flmul@aexp& (0+255),w,b
 31738  00C974  B4D8               	btfsc	status,2,c
 31739  00C976  D003               	goto	u13150
 31740                           
 31741                           ; BSR set to: 0
 31742  00C978  518A               	movf	___flmul@bexp& (0+255),w,b
 31743  00C97A  A4D8               	btfss	status,2,c
 31744  00C97C  D009               	goto	l3683
 31745  00C97E                     u13150:
 31746                           
 31747                           ; BSR set to: 0
 31748                           
 31749                           ; BSR set to: 0
 31750  00C97E  0E00               	movlw	0
 31751  00C980  6F78               	movwf	?___flmul& (0+255),b
 31752  00C982  0E00               	movlw	0
 31753  00C984  6F79               	movwf	(?___flmul+1)& (0+255),b
 31754  00C986  0E00               	movlw	0
 31755  00C988  6F7A               	movwf	(?___flmul+2)& (0+255),b
 31756  00C98A  0E00               	movlw	0
 31757  00C98C  6F7B               	movwf	(?___flmul+3)& (0+255),b
 31758                           
 31759                           ; BSR set to: 0
 31760  00C98E  0012               	return	
 31761  00C990                     l3683:
 31762                           
 31763                           ; BSR set to: 0
 31764                           
 31765                           ; BSR set to: 0
 31766  00C990  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31767  00C992  0378               	mulwf	___flmul@b& (0+255),b
 31768  00C994  CFF3 F08F          	movff	prodl,___flmul@temp
 31769  00C998  CFF4 F090          	movff	prodh,___flmul@temp+1
 31770                           
 31771                           ; BSR set to: 0
 31772  00C99C  518F               	movf	___flmul@temp& (0+255),w,b
 31773  00C99E  6F85               	movwf	___flmul@grs& (0+255),b
 31774  00C9A0  6B86               	clrf	(___flmul@grs+1)& (0+255),b
 31775  00C9A2  6B87               	clrf	(___flmul@grs+2)& (0+255),b
 31776  00C9A4  6B88               	clrf	(___flmul@grs+3)& (0+255),b
 31777                           
 31778                           ; BSR set to: 0
 31779  00C9A6  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31780  00C9A8  6F8B               	movwf	___flmul@prod& (0+255),b
 31781  00C9AA  6B8C               	clrf	(___flmul@prod+1)& (0+255),b
 31782  00C9AC  6B8D               	clrf	(___flmul@prod+2)& (0+255),b
 31783  00C9AE  6B8E               	clrf	(___flmul@prod+3)& (0+255),b
 31784  00C9B0  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31785  00C9B2  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31786  00C9B4  CFF3 F08F          	movff	prodl,___flmul@temp
 31787  00C9B8  CFF4 F090          	movff	prodh,___flmul@temp+1
 31788                           
 31789                           ; BSR set to: 0
 31790  00C9BC  518F               	movf	___flmul@temp& (0+255),w,b
 31791  00C9BE  2785               	addwf	___flmul@grs& (0+255),f,b
 31792  00C9C0  0E00               	movlw	0
 31793  00C9C2  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31794  00C9C4  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31795  00C9C6  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31796                           
 31797                           ; BSR set to: 0
 31798  00C9C8  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31799  00C9CA  278B               	addwf	___flmul@prod& (0+255),f,b
 31800  00C9CC  0E00               	movlw	0
 31801  00C9CE  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31802  00C9D0  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31803  00C9D2  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31804  00C9D4  517C               	movf	___flmul@a& (0+255),w,b
 31805  00C9D6  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31806  00C9D8  CFF3 F08F          	movff	prodl,___flmul@temp
 31807  00C9DC  CFF4 F090          	movff	prodh,___flmul@temp+1
 31808                           
 31809                           ; BSR set to: 0
 31810  00C9E0  518F               	movf	___flmul@temp& (0+255),w,b
 31811  00C9E2  2785               	addwf	___flmul@grs& (0+255),f,b
 31812  00C9E4  0E00               	movlw	0
 31813  00C9E6  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31814  00C9E8  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31815  00C9EA  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31816                           
 31817                           ; BSR set to: 0
 31818  00C9EC  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31819  00C9EE  278B               	addwf	___flmul@prod& (0+255),f,b
 31820  00C9F0  0E00               	movlw	0
 31821  00C9F2  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31822  00C9F4  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31823  00C9F6  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31824                           
 31825                           ; BSR set to: 0
 31826  00C9F8  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31827  00C9FC  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31828  00CA00  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 31829  00CA04  6B85               	clrf	___flmul@grs& (0+255),b
 31830                           
 31831                           ; BSR set to: 0
 31832  00CA06  517C               	movf	___flmul@a& (0+255),w,b
 31833  00CA08  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31834  00CA0A  CFF3 F08F          	movff	prodl,___flmul@temp
 31835  00CA0E  CFF4 F090          	movff	prodh,___flmul@temp+1
 31836                           
 31837                           ; BSR set to: 0
 31838  00CA12  518F               	movf	___flmul@temp& (0+255),w,b
 31839  00CA14  2785               	addwf	___flmul@grs& (0+255),f,b
 31840  00CA16  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31841  00CA18  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31842  00CA1A  0E00               	movlw	0
 31843  00CA1C  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31844  00CA1E  0E00               	movlw	0
 31845  00CA20  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31846                           
 31847                           ; BSR set to: 0
 31848  00CA22  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31849  00CA24  0378               	mulwf	___flmul@b& (0+255),b
 31850  00CA26  CFF3 F08F          	movff	prodl,___flmul@temp
 31851  00CA2A  CFF4 F090          	movff	prodh,___flmul@temp+1
 31852                           
 31853                           ; BSR set to: 0
 31854  00CA2E  518F               	movf	___flmul@temp& (0+255),w,b
 31855  00CA30  2785               	addwf	___flmul@grs& (0+255),f,b
 31856  00CA32  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31857  00CA34  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31858  00CA36  0E00               	movlw	0
 31859  00CA38  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31860  00CA3A  0E00               	movlw	0
 31861  00CA3C  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31862                           
 31863                           ; BSR set to: 0
 31864  00CA3E  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31865  00CA42  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31866  00CA46  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 31867  00CA4A  6B85               	clrf	___flmul@grs& (0+255),b
 31868  00CA4C  517C               	movf	___flmul@a& (0+255),w,b
 31869  00CA4E  0378               	mulwf	___flmul@b& (0+255),b
 31870  00CA50  CFF3 F08F          	movff	prodl,___flmul@temp
 31871  00CA54  CFF4 F090          	movff	prodh,___flmul@temp+1
 31872                           
 31873                           ; BSR set to: 0
 31874  00CA58  518F               	movf	___flmul@temp& (0+255),w,b
 31875  00CA5A  2785               	addwf	___flmul@grs& (0+255),f,b
 31876  00CA5C  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31877  00CA5E  2386               	addwfc	(___flmul@grs+1)& (0+255),f,b
 31878  00CA60  0E00               	movlw	0
 31879  00CA62  2387               	addwfc	(___flmul@grs+2)& (0+255),f,b
 31880  00CA64  0E00               	movlw	0
 31881  00CA66  2388               	addwfc	(___flmul@grs+3)& (0+255),f,b
 31882                           
 31883                           ; BSR set to: 0
 31884  00CA68  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31885  00CA6A  0379               	mulwf	(___flmul@b+1)& (0+255),b
 31886  00CA6C  CFF3 F08F          	movff	prodl,___flmul@temp
 31887  00CA70  CFF4 F090          	movff	prodh,___flmul@temp+1
 31888  00CA74  518F               	movf	___flmul@temp& (0+255),w,b
 31889  00CA76  278B               	addwf	___flmul@prod& (0+255),f,b
 31890  00CA78  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31891  00CA7A  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31892  00CA7C  0E00               	movlw	0
 31893  00CA7E  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31894  00CA80  0E00               	movlw	0
 31895  00CA82  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31896                           
 31897                           ; BSR set to: 0
 31898  00CA84  517D               	movf	(___flmul@a+1)& (0+255),w,b
 31899  00CA86  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31900  00CA88  CFF3 F08F          	movff	prodl,___flmul@temp
 31901  00CA8C  CFF4 F090          	movff	prodh,___flmul@temp+1
 31902                           
 31903                           ; BSR set to: 0
 31904  00CA90  518F               	movf	___flmul@temp& (0+255),w,b
 31905  00CA92  278B               	addwf	___flmul@prod& (0+255),f,b
 31906  00CA94  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31907  00CA96  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31908  00CA98  0E00               	movlw	0
 31909  00CA9A  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31910  00CA9C  0E00               	movlw	0
 31911  00CA9E  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31912  00CAA0  517E               	movf	(___flmul@a+2)& (0+255),w,b
 31913  00CAA2  037A               	mulwf	(___flmul@b+2)& (0+255),b
 31914  00CAA4  CFF3 F08F          	movff	prodl,___flmul@temp
 31915  00CAA8  CFF4 F090          	movff	prodh,___flmul@temp+1
 31916                           
 31917                           ; BSR set to: 0
 31918  00CAAC  518F               	movf	___flmul@temp& (0+255),w,b
 31919  00CAAE  6F80               	movwf	??___flmul& (0+255),b
 31920  00CAB0  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 31921  00CAB2  6F81               	movwf	(??___flmul+1)& (0+255),b
 31922  00CAB4  6B82               	clrf	(??___flmul+2)& (0+255),b
 31923  00CAB6  6B83               	clrf	(??___flmul+3)& (0+255),b
 31924  00CAB8  C082  F083         	movff	??___flmul+2,??___flmul+3
 31925  00CABC  C081  F082         	movff	??___flmul+1,??___flmul+2
 31926  00CAC0  C080  F081         	movff	??___flmul,??___flmul+1
 31927  00CAC4  6B80               	clrf	??___flmul& (0+255),b
 31928  00CAC6  5180               	movf	??___flmul& (0+255),w,b
 31929  00CAC8  278B               	addwf	___flmul@prod& (0+255),f,b
 31930  00CACA  5181               	movf	(??___flmul+1)& (0+255),w,b
 31931  00CACC  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31932  00CACE  5182               	movf	(??___flmul+2)& (0+255),w,b
 31933  00CAD0  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31934  00CAD2  5183               	movf	(??___flmul+3)& (0+255),w,b
 31935  00CAD4  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31936                           
 31937                           ; BSR set to: 0
 31938  00CAD6  C085  F080         	movff	___flmul@grs,??___flmul
 31939  00CADA  C086  F081         	movff	___flmul@grs+1,??___flmul+1
 31940  00CADE  C087  F082         	movff	___flmul@grs+2,??___flmul+2
 31941  00CAE2  C088  F083         	movff	___flmul@grs+3,??___flmul+3
 31942  00CAE6  0E19               	movlw	25
 31943  00CAE8  D005               	goto	u13160
 31944  00CAEA                     u13165:
 31945  00CAEA  90D8               	bcf	status,0,c
 31946  00CAEC  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 31947  00CAEE  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 31948  00CAF0  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 31949  00CAF2  3380               	rrcf	??___flmul& (0+255),f,b
 31950  00CAF4                     u13160:
 31951  00CAF4  2EE8               	decfsz	wreg,f,c
 31952  00CAF6  D7F9               	goto	u13165
 31953  00CAF8  5180               	movf	??___flmul& (0+255),w,b
 31954  00CAFA  278B               	addwf	___flmul@prod& (0+255),f,b
 31955  00CAFC  5181               	movf	(??___flmul+1)& (0+255),w,b
 31956  00CAFE  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 31957  00CB00  5182               	movf	(??___flmul+2)& (0+255),w,b
 31958  00CB02  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 31959  00CB04  5183               	movf	(??___flmul+3)& (0+255),w,b
 31960  00CB06  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 31961                           
 31962                           ; BSR set to: 0
 31963  00CB08  C087  F088         	movff	___flmul@grs+2,___flmul@grs+3
 31964  00CB0C  C086  F087         	movff	___flmul@grs+1,___flmul@grs+2
 31965  00CB10  C085  F086         	movff	___flmul@grs,___flmul@grs+1
 31966  00CB14  6B85               	clrf	___flmul@grs& (0+255),b
 31967                           
 31968                           ; BSR set to: 0
 31969  00CB16  5189               	movf	___flmul@aexp& (0+255),w,b
 31970  00CB18  C08A  F080         	movff	___flmul@bexp,??___flmul
 31971  00CB1C  6B81               	clrf	(??___flmul+1)& (0+255),b
 31972  00CB1E  2780               	addwf	??___flmul& (0+255),f,b
 31973  00CB20  0E00               	movlw	0
 31974  00CB22  2381               	addwfc	(??___flmul+1)& (0+255),f,b
 31975  00CB24  0E82               	movlw	130
 31976  00CB26  2580               	addwf	??___flmul& (0+255),w,b
 31977  00CB28  6F8F               	movwf	___flmul@temp& (0+255),b
 31978  00CB2A  0EFF               	movlw	255
 31979  00CB2C  2181               	addwfc	(??___flmul+1)& (0+255),w,b
 31980  00CB2E  6F90               	movwf	(___flmul@temp+1)& (0+255),b
 31981  00CB30  D00F               	goto	l3687
 31982  00CB32                     
 31983                           ; BSR set to: 0
 31984                           
 31985                           ; BSR set to: 0
 31986  00CB32  90D8               	bcf	status,0,c
 31987  00CB34  378B               	rlcf	___flmul@prod& (0+255),f,b
 31988  00CB36  378C               	rlcf	(___flmul@prod+1)& (0+255),f,b
 31989  00CB38  378D               	rlcf	(___flmul@prod+2)& (0+255),f,b
 31990  00CB3A  378E               	rlcf	(___flmul@prod+3)& (0+255),f,b
 31991                           
 31992                           ; BSR set to: 0
 31993  00CB3C  BF88               	btfsc	(___flmul@grs+3)& (0+255),7,b
 31994                           
 31995                           ; BSR set to: 0
 31996  00CB3E  818B               	bsf	___flmul@prod& (0+255),0,b
 31997                           
 31998                           ; BSR set to: 0
 31999  00CB40  90D8               	bcf	status,0,c
 32000  00CB42  3785               	rlcf	___flmul@grs& (0+255),f,b
 32001  00CB44  3786               	rlcf	(___flmul@grs+1)& (0+255),f,b
 32002  00CB46  3787               	rlcf	(___flmul@grs+2)& (0+255),f,b
 32003  00CB48  3788               	rlcf	(___flmul@grs+3)& (0+255),f,b
 32004  00CB4A  078F               	decf	___flmul@temp& (0+255),f,b
 32005  00CB4C  A0D8               	btfss	status,0,c
 32006  00CB4E  0790               	decf	(___flmul@temp+1)& (0+255),f,b
 32007  00CB50                     l3687:
 32008                           
 32009                           ; BSR set to: 0
 32010                           
 32011                           ; BSR set to: 0
 32012  00CB50  AF8D               	btfss	(___flmul@prod+2)& (0+255),7,b
 32013  00CB52  D7EF               	goto	l3688
 32014                           
 32015                           ; BSR set to: 0
 32016                           
 32017                           ; BSR set to: 0
 32018  00CB54  0E00               	movlw	0
 32019  00CB56  6F89               	movwf	___flmul@aexp& (0+255),b
 32020                           
 32021                           ; BSR set to: 0
 32022  00CB58  AF88               	btfss	(___flmul@grs+3)& (0+255),7,b
 32023  00CB5A  D016               	goto	l3694
 32024                           
 32025                           ; BSR set to: 0
 32026  00CB5C  0EFF               	movlw	255
 32027  00CB5E  1585               	andwf	___flmul@grs& (0+255),w,b
 32028  00CB60  6F80               	movwf	??___flmul& (0+255),b
 32029  00CB62  0EFF               	movlw	255
 32030  00CB64  1586               	andwf	(___flmul@grs+1)& (0+255),w,b
 32031  00CB66  6F81               	movwf	(??___flmul+1)& (0+255),b
 32032  00CB68  0EFF               	movlw	255
 32033  00CB6A  1587               	andwf	(___flmul@grs+2)& (0+255),w,b
 32034  00CB6C  6F82               	movwf	(??___flmul+2)& (0+255),b
 32035  00CB6E  0E7F               	movlw	127
 32036  00CB70  1588               	andwf	(___flmul@grs+3)& (0+255),w,b
 32037  00CB72  6F83               	movwf	(??___flmul+3)& (0+255),b
 32038  00CB74  5180               	movf	??___flmul& (0+255),w,b
 32039  00CB76  1181               	iorwf	(??___flmul+1)& (0+255),w,b
 32040  00CB78  1182               	iorwf	(??___flmul+2)& (0+255),w,b
 32041  00CB7A  1183               	iorwf	(??___flmul+3)& (0+255),w,b
 32042  00CB7C  A4D8               	btfss	status,2,c
 32043  00CB7E  D002               	goto	u13210
 32044                           
 32045                           ; BSR set to: 0
 32046                           
 32047                           ; BSR set to: 0
 32048  00CB80  A18B               	btfss	___flmul@prod& (0+255),0,b
 32049  00CB82  D002               	goto	l3694
 32050  00CB84                     u13210:
 32051                           
 32052                           ; BSR set to: 0
 32053  00CB84  0E01               	movlw	1
 32054  00CB86  6F89               	movwf	___flmul@aexp& (0+255),b
 32055  00CB88                     l3694:
 32056                           
 32057                           ; BSR set to: 0
 32058                           
 32059                           ; BSR set to: 0
 32060                           
 32061                           ; BSR set to: 0
 32062  00CB88  5189               	movf	___flmul@aexp& (0+255),w,b
 32063  00CB8A  B4D8               	btfsc	status,2,c
 32064  00CB8C  D01F               	goto	l3696
 32065                           
 32066                           ; BSR set to: 0
 32067  00CB8E  0E01               	movlw	1
 32068  00CB90  278B               	addwf	___flmul@prod& (0+255),f,b
 32069  00CB92  0E00               	movlw	0
 32070  00CB94  238C               	addwfc	(___flmul@prod+1)& (0+255),f,b
 32071  00CB96  238D               	addwfc	(___flmul@prod+2)& (0+255),f,b
 32072  00CB98  238E               	addwfc	(___flmul@prod+3)& (0+255),f,b
 32073                           
 32074                           ; BSR set to: 0
 32075  00CB9A  A18E               	btfss	(___flmul@prod+3)& (0+255),0,b
 32076  00CB9C  D017               	goto	l3696
 32077                           
 32078                           ; BSR set to: 0
 32079  00CB9E  C08B  F080         	movff	___flmul@prod,??___flmul
 32080  00CBA2  C08C  F081         	movff	___flmul@prod+1,??___flmul+1
 32081  00CBA6  C08D  F082         	movff	___flmul@prod+2,??___flmul+2
 32082  00CBAA  C08E  F083         	movff	___flmul@prod+3,??___flmul+3
 32083  00CBAE  3583               	rlcf	(??___flmul+3)& (0+255),w,b
 32084  00CBB0  3383               	rrcf	(??___flmul+3)& (0+255),f,b
 32085  00CBB2  3382               	rrcf	(??___flmul+2)& (0+255),f,b
 32086  00CBB4  3381               	rrcf	(??___flmul+1)& (0+255),f,b
 32087  00CBB6  3380               	rrcf	??___flmul& (0+255),f,b
 32088  00CBB8  C080  F08B         	movff	??___flmul,___flmul@prod
 32089  00CBBC  C081  F08C         	movff	??___flmul+1,___flmul@prod+1
 32090  00CBC0  C082  F08D         	movff	??___flmul+2,___flmul@prod+2
 32091  00CBC4  C083  F08E         	movff	??___flmul+3,___flmul@prod+3
 32092                           
 32093                           ; BSR set to: 0
 32094  00CBC8  4B8F               	infsnz	___flmul@temp& (0+255),f,b
 32095  00CBCA  2B90               	incf	(___flmul@temp+1)& (0+255),f,b
 32096  00CBCC                     l3696:
 32097                           
 32098                           ; BSR set to: 0
 32099                           
 32100                           ; BSR set to: 0
 32101                           
 32102                           ; BSR set to: 0
 32103  00CBCC  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32104  00CBCE  D00D               	goto	l3697
 32105  00CBD0  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32106  00CBD2  E103               	bnz	u13240
 32107  00CBD4  298F               	incf	___flmul@temp& (0+255),w,b
 32108  00CBD6  A0D8               	btfss	status,0,c
 32109  00CBD8  D008               	goto	l3697
 32110  00CBDA                     u13240:
 32111                           
 32112                           ; BSR set to: 0
 32113  00CBDA  0E00               	movlw	0
 32114  00CBDC  6F8B               	movwf	___flmul@prod& (0+255),b
 32115  00CBDE  0E00               	movlw	0
 32116  00CBE0  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32117  00CBE2  0E80               	movlw	128
 32118  00CBE4  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32119  00CBE6  0E7F               	movlw	127
 32120  00CBE8  D020               	goto	L42
 32121  00CBEA                     l3697:
 32122                           
 32123                           ; BSR set to: 0
 32124                           
 32125                           ; BSR set to: 0
 32126  00CBEA  BF90               	btfsc	(___flmul@temp+1)& (0+255),7,b
 32127  00CBEC  D005               	goto	u13250
 32128  00CBEE  5190               	movf	(___flmul@temp+1)& (0+255),w,b
 32129  00CBF0  E10E               	bnz	l3699
 32130  00CBF2  058F               	decf	___flmul@temp& (0+255),w,b
 32131  00CBF4  B0D8               	btfsc	status,0,c
 32132  00CBF6  D00B               	goto	l3699
 32133  00CBF8                     u13250:
 32134                           
 32135                           ; BSR set to: 0
 32136  00CBF8  0E00               	movlw	0
 32137  00CBFA  6F8B               	movwf	___flmul@prod& (0+255),b
 32138  00CBFC  0E00               	movlw	0
 32139  00CBFE  6F8C               	movwf	(___flmul@prod+1)& (0+255),b
 32140  00CC00  0E00               	movlw	0
 32141  00CC02  6F8D               	movwf	(___flmul@prod+2)& (0+255),b
 32142  00CC04  0E00               	movlw	0
 32143  00CC06  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32144  00CC08  0E00               	movlw	0
 32145  00CC0A  6F84               	movwf	___flmul@sign& (0+255),b
 32146  00CC0C  D00F               	goto	l3700
 32147  00CC0E                     l3699:
 32148                           
 32149                           ; BSR set to: 0
 32150  00CC0E  C08F  F08A         	movff	___flmul@temp,___flmul@bexp
 32151                           
 32152                           ; BSR set to: 0
 32153  00CC12  0EFF               	movlw	255
 32154  00CC14  178B               	andwf	___flmul@prod& (0+255),f,b
 32155  00CC16  0EFF               	movlw	255
 32156  00CC18  178C               	andwf	(___flmul@prod+1)& (0+255),f,b
 32157  00CC1A  0E7F               	movlw	127
 32158  00CC1C  178D               	andwf	(___flmul@prod+2)& (0+255),f,b
 32159  00CC1E  0E00               	movlw	0
 32160  00CC20  178E               	andwf	(___flmul@prod+3)& (0+255),f,b
 32161                           
 32162                           ; BSR set to: 0
 32163  00CC22  B18A               	btfsc	___flmul@bexp& (0+255),0,b
 32164                           
 32165                           ; BSR set to: 0
 32166  00CC24  8F8D               	bsf	(___flmul@prod+2)& (0+255),7,b
 32167                           
 32168                           ; BSR set to: 0
 32169                           
 32170                           ; BSR set to: 0
 32171  00CC26  90D8               	bcf	status,0,c
 32172  00CC28  318A               	rrcf	___flmul@bexp& (0+255),w,b
 32173  00CC2A                     L42:
 32174  00CC2A  6F8E               	movwf	(___flmul@prod+3)& (0+255),b
 32175  00CC2C                     l3700:
 32176                           
 32177                           ; BSR set to: 0
 32178                           
 32179                           ; BSR set to: 0
 32180                           
 32181                           ; BSR set to: 0
 32182  00CC2C  5184               	movf	___flmul@sign& (0+255),w,b
 32183  00CC2E  138E               	iorwf	(___flmul@prod+3)& (0+255),f,b
 32184                           
 32185                           ; BSR set to: 0
 32186  00CC30  C08B  F078         	movff	___flmul@prod,?___flmul
 32187  00CC34  C08C  F079         	movff	___flmul@prod+1,?___flmul+1
 32188  00CC38  C08D  F07A         	movff	___flmul@prod+2,?___flmul+2
 32189  00CC3C  C08E  F07B         	movff	___flmul@prod+3,?___flmul+3
 32190  00CC40  0012               	return	
 32191  00CC42                     __end_of___flmul:
 32192                           	opt stack 0
 32193                           tblptru	equ	0xFF8
 32194                           tblptrh	equ	0xFF7
 32195                           tblptrl	equ	0xFF6
 32196                           tablat	equ	0xFF5
 32197                           prodh	equ	0xFF4
 32198                           prodl	equ	0xFF3
 32199                           intcon	equ	0xFF2
 32200                           postinc0	equ	0xFEE
 32201                           wreg	equ	0xFE8
 32202                           indf1	equ	0xFE7
 32203                           postinc1	equ	0xFE6
 32204                           postdec1	equ	0xFE5
 32205                           plusw1	equ	0xFE3
 32206                           fsr1h	equ	0xFE2
 32207                           fsr1l	equ	0xFE1
 32208                           indf2	equ	0xFDF
 32209                           postinc2	equ	0xFDE
 32210                           postdec2	equ	0xFDD
 32211                           plusw2	equ	0xFDB
 32212                           fsr2h	equ	0xFDA
 32213                           fsr2l	equ	0xFD9
 32214                           status	equ	0xFD8
 32215                           
 32216 ;; *************** function ___fladd *****************
 32217 ;; Defined at:
 32218 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 32219 ;; Parameters:    Size  Location     Type
 32220 ;;  b               4   28[BANK0 ] unsigned char 
 32221 ;;  a               4   32[BANK0 ] unsigned char 
 32222 ;; Auto vars:     Size  Location     Type
 32223 ;;  grs             1   47[BANK0 ] unsigned char 
 32224 ;;  bexp            1   46[BANK0 ] unsigned char 
 32225 ;;  aexp            1   45[BANK0 ] unsigned char 
 32226 ;;  signs           1   44[BANK0 ] unsigned char 
 32227 ;; Return value:  Size  Location     Type
 32228 ;;                  4   28[BANK0 ] unsigned char 
 32229 ;; Registers used:
 32230 ;;		wreg, status,2, status,0
 32231 ;; Tracked objects:
 32232 ;;		On entry : 0/0
 32233 ;;		On exit  : 0/0
 32234 ;;		Unchanged: 0/0
 32235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32236 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32237 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32238 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32239 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32240 ;;Total ram usage:       20 bytes
 32241 ;; Hardware stack levels used:    1
 32242 ;; Hardware stack levels required when called:   10
 32243 ;; This function calls:
 32244 ;;		Nothing
 32245 ;; This function is called by:
 32246 ;;		__motor_steps_from_degrees_int
 32247 ;;		_motor_divide_jump_to_nearest
 32248 ;;		_adc_read_temperature
 32249 ;;		__motor_steps_from_degrees_float
 32250 ;; This function uses a non-reentrant model
 32251 ;;
 32252                           
 32253                           	psect	text126
 32254  00CC42                     __ptext126:
 32255                           	opt stack 0
 32256  00CC42                     ___fladd:
 32257                           	opt stack 17
 32258                           
 32259                           ; BSR set to: 0
 32260                           ;incstack = 0
 32261  00CC42  0100               	movlb	0	; () banked
 32262  00CC44  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32263  00CC46  0B80               	andlw	128
 32264  00CC48  6F8C               	movwf	___fladd@signs& (0+255),b
 32265  00CC4A  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32266  00CC4C  257F               	addwf	(___fladd@b+3)& (0+255),w,b
 32267  00CC4E  6F8E               	movwf	___fladd@bexp& (0+255),b
 32268                           
 32269                           ; BSR set to: 0
 32270  00CC50  BF7E               	btfsc	(___fladd@b+2)& (0+255),7,b
 32271                           
 32272                           ; BSR set to: 0
 32273  00CC52  818E               	bsf	___fladd@bexp& (0+255),0,b
 32274                           
 32275                           ; BSR set to: 0
 32276                           
 32277                           ; BSR set to: 0
 32278  00CC54  518E               	movf	___fladd@bexp& (0+255),w,b
 32279  00CC56  B4D8               	btfsc	status,2,c
 32280  00CC58  D00D               	goto	l3585
 32281                           
 32282                           ; BSR set to: 0
 32283  00CC5A  298E               	incf	___fladd@bexp& (0+255),w,b
 32284  00CC5C  A4D8               	btfss	status,2,c
 32285  00CC5E  D008               	goto	l3586
 32286                           
 32287                           ; BSR set to: 0
 32288  00CC60  0E00               	movlw	0
 32289  00CC62  6F7C               	movwf	___fladd@b& (0+255),b
 32290  00CC64  0E00               	movlw	0
 32291  00CC66  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32292  00CC68  0E00               	movlw	0
 32293  00CC6A  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32294  00CC6C  0E00               	movlw	0
 32295  00CC6E  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32296  00CC70                     l3586:
 32297                           
 32298                           ; BSR set to: 0
 32299                           
 32300                           ; BSR set to: 0
 32301  00CC70  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32302  00CC72  D006               	goto	L43
 32303  00CC74                     l3585:
 32304                           
 32305                           ; BSR set to: 0
 32306                           
 32307                           ; BSR set to: 0
 32308  00CC74  0E00               	movlw	0
 32309  00CC76  6F7C               	movwf	___fladd@b& (0+255),b
 32310  00CC78  0E00               	movlw	0
 32311  00CC7A  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32312  00CC7C  0E00               	movlw	0
 32313  00CC7E  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32314  00CC80                     L43:
 32315  00CC80  0E00               	movlw	0
 32316  00CC82  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32317                           
 32318                           ; BSR set to: 0
 32319                           
 32320                           ; BSR set to: 0
 32321  00CC84  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32322  00CC86  0B80               	andlw	128
 32323  00CC88  6F8D               	movwf	___fladd@aexp& (0+255),b
 32324                           
 32325                           ; BSR set to: 0
 32326  00CC8A  518C               	movf	___fladd@signs& (0+255),w,b
 32327  00CC8C  198D               	xorwf	___fladd@aexp& (0+255),w,b
 32328  00CC8E  A4D8               	btfss	status,2,c
 32329                           
 32330                           ; BSR set to: 0
 32331  00CC90  8D8C               	bsf	___fladd@signs& (0+255),6,b
 32332                           
 32333                           ; BSR set to: 0
 32334                           
 32335                           ; BSR set to: 0
 32336  00CC92  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32337  00CC94  2583               	addwf	(___fladd@a+3)& (0+255),w,b
 32338  00CC96  6F8D               	movwf	___fladd@aexp& (0+255),b
 32339                           
 32340                           ; BSR set to: 0
 32341  00CC98  BF82               	btfsc	(___fladd@a+2)& (0+255),7,b
 32342                           
 32343                           ; BSR set to: 0
 32344  00CC9A  818D               	bsf	___fladd@aexp& (0+255),0,b
 32345                           
 32346                           ; BSR set to: 0
 32347                           
 32348                           ; BSR set to: 0
 32349  00CC9C  518D               	movf	___fladd@aexp& (0+255),w,b
 32350  00CC9E  B4D8               	btfsc	status,2,c
 32351  00CCA0  D00D               	goto	l3590
 32352                           
 32353                           ; BSR set to: 0
 32354  00CCA2  298D               	incf	___fladd@aexp& (0+255),w,b
 32355  00CCA4  A4D8               	btfss	status,2,c
 32356  00CCA6  D008               	goto	l3591
 32357                           
 32358                           ; BSR set to: 0
 32359  00CCA8  0E00               	movlw	0
 32360  00CCAA  6F80               	movwf	___fladd@a& (0+255),b
 32361  00CCAC  0E00               	movlw	0
 32362  00CCAE  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32363  00CCB0  0E00               	movlw	0
 32364  00CCB2  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32365  00CCB4  0E00               	movlw	0
 32366  00CCB6  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32367  00CCB8                     l3591:
 32368                           
 32369                           ; BSR set to: 0
 32370                           
 32371                           ; BSR set to: 0
 32372  00CCB8  8F82               	bsf	(___fladd@a+2)& (0+255),7,b
 32373  00CCBA  D006               	goto	L44
 32374  00CCBC                     l3590:
 32375                           
 32376                           ; BSR set to: 0
 32377                           
 32378                           ; BSR set to: 0
 32379  00CCBC  0E00               	movlw	0
 32380  00CCBE  6F80               	movwf	___fladd@a& (0+255),b
 32381  00CCC0  0E00               	movlw	0
 32382  00CCC2  6F81               	movwf	(___fladd@a+1)& (0+255),b
 32383  00CCC4  0E00               	movlw	0
 32384  00CCC6  6F82               	movwf	(___fladd@a+2)& (0+255),b
 32385  00CCC8                     L44:
 32386  00CCC8  0E00               	movlw	0
 32387  00CCCA  6F83               	movwf	(___fladd@a+3)& (0+255),b
 32388                           
 32389                           ; BSR set to: 0
 32390                           
 32391                           ; BSR set to: 0
 32392  00CCCC  518E               	movf	___fladd@bexp& (0+255),w,b
 32393  00CCCE  5D8D               	subwf	___fladd@aexp& (0+255),w,b
 32394  00CCD0  B0D8               	btfsc	status,0,c
 32395  00CCD2  D022               	goto	l3593
 32396                           
 32397                           ; BSR set to: 0
 32398  00CCD4  AD8C               	btfss	___fladd@signs& (0+255),6,b
 32399  00CCD6  D002               	goto	l3594
 32400                           
 32401                           ; BSR set to: 0
 32402  00CCD8  0E80               	movlw	128
 32403  00CCDA  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32404  00CCDC                     l3594:
 32405                           
 32406                           ; BSR set to: 0
 32407                           
 32408                           ; BSR set to: 0
 32409  00CCDC  C08E  F08F         	movff	___fladd@bexp,___fladd@grs
 32410                           
 32411                           ; BSR set to: 0
 32412  00CCE0  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32413                           
 32414                           ; BSR set to: 0
 32415  00CCE4  C08F  F08D         	movff	___fladd@grs,___fladd@aexp
 32416                           
 32417                           ; BSR set to: 0
 32418  00CCE8  C07C  F08F         	movff	___fladd@b,___fladd@grs
 32419                           
 32420                           ; BSR set to: 0
 32421  00CCEC  C080  F07C         	movff	___fladd@a,___fladd@b
 32422                           
 32423                           ; BSR set to: 0
 32424  00CCF0  C08F  F080         	movff	___fladd@grs,___fladd@a
 32425                           
 32426                           ; BSR set to: 0
 32427  00CCF4  C07D  F08F         	movff	___fladd@b+1,___fladd@grs
 32428                           
 32429                           ; BSR set to: 0
 32430  00CCF8  C081  F07D         	movff	___fladd@a+1,___fladd@b+1
 32431                           
 32432                           ; BSR set to: 0
 32433  00CCFC  C08F  F081         	movff	___fladd@grs,___fladd@a+1
 32434                           
 32435                           ; BSR set to: 0
 32436  00CD00  C07E  F08F         	movff	___fladd@b+2,___fladd@grs
 32437                           
 32438                           ; BSR set to: 0
 32439  00CD04  C082  F07E         	movff	___fladd@a+2,___fladd@b+2
 32440                           
 32441                           ; BSR set to: 0
 32442  00CD08  C08F  F082         	movff	___fladd@grs,___fladd@a+2
 32443                           
 32444                           ; BSR set to: 0
 32445  00CD0C  C07F  F08F         	movff	___fladd@b+3,___fladd@grs
 32446                           
 32447                           ; BSR set to: 0
 32448  00CD10  C083  F07F         	movff	___fladd@a+3,___fladd@b+3
 32449                           
 32450                           ; BSR set to: 0
 32451  00CD14  C08F  F083         	movff	___fladd@grs,___fladd@a+3
 32452  00CD18                     l3593:
 32453                           
 32454                           ; BSR set to: 0
 32455                           
 32456                           ; BSR set to: 0
 32457  00CD18  0E00               	movlw	0
 32458  00CD1A  6F8F               	movwf	___fladd@grs& (0+255),b
 32459                           
 32460                           ; BSR set to: 0
 32461  00CD1C  518E               	movf	___fladd@bexp& (0+255),w,b
 32462  00CD1E  6F84               	movwf	??___fladd& (0+255),b
 32463  00CD20  6B85               	clrf	(??___fladd+1)& (0+255),b
 32464  00CD22  1F84               	comf	??___fladd& (0+255),f,b
 32465  00CD24  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32466  00CD26  4B84               	infsnz	??___fladd& (0+255),f,b
 32467  00CD28  2B85               	incf	(??___fladd+1)& (0+255),f,b
 32468  00CD2A  518D               	movf	___fladd@aexp& (0+255),w,b
 32469  00CD2C  6F86               	movwf	(??___fladd+2)& (0+255),b
 32470  00CD2E  6B87               	clrf	(??___fladd+3)& (0+255),b
 32471  00CD30  5184               	movf	??___fladd& (0+255),w,b
 32472  00CD32  2786               	addwf	(??___fladd+2)& (0+255),f,b
 32473  00CD34  5185               	movf	(??___fladd+1)& (0+255),w,b
 32474  00CD36  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32475  00CD38  BF87               	btfsc	(??___fladd+3)& (0+255),7,b
 32476  00CD3A  D02C               	goto	l3597
 32477  00CD3C  5187               	movf	(??___fladd+3)& (0+255),w,b
 32478  00CD3E  E104               	bnz	u14580
 32479  00CD40  0E1A               	movlw	26
 32480  00CD42  5D86               	subwf	(??___fladd+2)& (0+255),w,b
 32481  00CD44  A0D8               	btfss	status,0,c
 32482  00CD46  D026               	goto	l3597
 32483  00CD48                     u14580:
 32484                           
 32485                           ; BSR set to: 0
 32486  00CD48  517C               	movf	___fladd@b& (0+255),w,b
 32487  00CD4A  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32488  00CD4C  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32489  00CD4E  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32490  00CD50  B4D8               	btfsc	status,2,c
 32491  00CD52  D002               	goto	u14590
 32492  00CD54  0E01               	movlw	1
 32493  00CD56  D001               	goto	u14600
 32494  00CD58                     u14590:
 32495  00CD58  0E00               	movlw	0
 32496  00CD5A                     u14600:
 32497  00CD5A  6F8F               	movwf	___fladd@grs& (0+255),b
 32498                           
 32499                           ; BSR set to: 0
 32500  00CD5C  0E00               	movlw	0
 32501  00CD5E  6F7C               	movwf	___fladd@b& (0+255),b
 32502  00CD60  0E00               	movlw	0
 32503  00CD62  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32504  00CD64  0E00               	movlw	0
 32505  00CD66  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32506  00CD68  0E00               	movlw	0
 32507  00CD6A  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32508                           
 32509                           ; BSR set to: 0
 32510  00CD6C  C08D  F08E         	movff	___fladd@aexp,___fladd@bexp
 32511  00CD70  D015               	goto	u14630
 32512  00CD72                     l3598:
 32513                           
 32514                           ; BSR set to: 0
 32515  00CD72  A18F               	btfss	___fladd@grs& (0+255),0,b
 32516  00CD74  D005               	goto	l3599
 32517                           
 32518                           ; BSR set to: 0
 32519  00CD76  90D8               	bcf	status,0,c
 32520  00CD78  318F               	rrcf	___fladd@grs& (0+255),w,b
 32521  00CD7A  0901               	iorlw	1
 32522  00CD7C  6F8F               	movwf	___fladd@grs& (0+255),b
 32523  00CD7E  D002               	goto	l3600
 32524  00CD80                     l3599:
 32525                           
 32526                           ; BSR set to: 0
 32527                           
 32528                           ; BSR set to: 0
 32529  00CD80  90D8               	bcf	status,0,c
 32530  00CD82  338F               	rrcf	___fladd@grs& (0+255),f,b
 32531  00CD84                     l3600:
 32532                           
 32533                           ; BSR set to: 0
 32534                           
 32535                           ; BSR set to: 0
 32536  00CD84  B17C               	btfsc	___fladd@b& (0+255),0,b
 32537                           
 32538                           ; BSR set to: 0
 32539  00CD86  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32540                           
 32541                           ; BSR set to: 0
 32542                           
 32543                           ; BSR set to: 0
 32544  00CD88  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32545  00CD8A  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32546  00CD8C  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32547  00CD8E  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32548  00CD90  337C               	rrcf	___fladd@b& (0+255),f,b
 32549                           
 32550                           ; BSR set to: 0
 32551  00CD92  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32552  00CD94                     l3597:
 32553                           
 32554                           ; BSR set to: 0
 32555  00CD94  518D               	movf	___fladd@aexp& (0+255),w,b
 32556  00CD96  5D8E               	subwf	___fladd@bexp& (0+255),w,b
 32557  00CD98  A0D8               	btfss	status,0,c
 32558  00CD9A  D7EB               	goto	l3598
 32559  00CD9C                     u14630:
 32560                           
 32561                           ; BSR set to: 0
 32562                           
 32563                           ; BSR set to: 0
 32564  00CD9C  BD8C               	btfsc	___fladd@signs& (0+255),6,b
 32565  00CD9E  D028               	goto	l3603
 32566                           
 32567                           ; BSR set to: 0
 32568  00CDA0  518E               	movf	___fladd@bexp& (0+255),w,b
 32569  00CDA2  A4D8               	btfss	status,2,c
 32570  00CDA4  D009               	goto	l3604
 32571                           
 32572                           ; BSR set to: 0
 32573  00CDA6  0E00               	movlw	0
 32574  00CDA8  6F7C               	movwf	?___fladd& (0+255),b
 32575  00CDAA  0E00               	movlw	0
 32576  00CDAC  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32577  00CDAE  0E00               	movlw	0
 32578  00CDB0  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32579  00CDB2  0E00               	movlw	0
 32580  00CDB4  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32581                           
 32582                           ; BSR set to: 0
 32583  00CDB6  0012               	return	
 32584  00CDB8                     l3604:
 32585                           
 32586                           ; BSR set to: 0
 32587                           
 32588                           ; BSR set to: 0
 32589  00CDB8  5180               	movf	___fladd@a& (0+255),w,b
 32590  00CDBA  277C               	addwf	___fladd@b& (0+255),f,b
 32591  00CDBC  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32592  00CDBE  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32593  00CDC0  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32594  00CDC2  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32595  00CDC4  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32596  00CDC6  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32597                           
 32598                           ; BSR set to: 0
 32599  00CDC8  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32600  00CDCA  D082               	goto	u14760
 32601                           
 32602                           ; BSR set to: 0
 32603  00CDCC  A18F               	btfss	___fladd@grs& (0+255),0,b
 32604  00CDCE  D005               	goto	l3607
 32605                           
 32606                           ; BSR set to: 0
 32607  00CDD0  90D8               	bcf	status,0,c
 32608  00CDD2  318F               	rrcf	___fladd@grs& (0+255),w,b
 32609  00CDD4  0901               	iorlw	1
 32610  00CDD6  6F8F               	movwf	___fladd@grs& (0+255),b
 32611  00CDD8  D002               	goto	l3608
 32612  00CDDA                     l3607:
 32613                           
 32614                           ; BSR set to: 0
 32615                           
 32616                           ; BSR set to: 0
 32617  00CDDA  90D8               	bcf	status,0,c
 32618  00CDDC  338F               	rrcf	___fladd@grs& (0+255),f,b
 32619  00CDDE                     l3608:
 32620                           
 32621                           ; BSR set to: 0
 32622                           
 32623                           ; BSR set to: 0
 32624  00CDDE  B17C               	btfsc	___fladd@b& (0+255),0,b
 32625                           
 32626                           ; BSR set to: 0
 32627  00CDE0  8F8F               	bsf	___fladd@grs& (0+255),7,b
 32628                           
 32629                           ; BSR set to: 0
 32630                           
 32631                           ; BSR set to: 0
 32632  00CDE2  357F               	rlcf	(___fladd@b+3)& (0+255),w,b
 32633  00CDE4  337F               	rrcf	(___fladd@b+3)& (0+255),f,b
 32634  00CDE6  337E               	rrcf	(___fladd@b+2)& (0+255),f,b
 32635  00CDE8  337D               	rrcf	(___fladd@b+1)& (0+255),f,b
 32636  00CDEA  337C               	rrcf	___fladd@b& (0+255),f,b
 32637                           
 32638                           ; BSR set to: 0
 32639  00CDEC  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32640                           
 32641                           ; BSR set to: 0
 32642  00CDEE  D070               	goto	u14760
 32643  00CDF0                     l3603:
 32644                           
 32645                           ; BSR set to: 0
 32646                           
 32647                           ; BSR set to: 0
 32648  00CDF0  5180               	movf	___fladd@a& (0+255),w,b
 32649  00CDF2  5D7C               	subwf	___fladd@b& (0+255),w,b
 32650  00CDF4  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32651  00CDF6  597D               	subwfb	(___fladd@b+1)& (0+255),w,b
 32652  00CDF8  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32653  00CDFA  597E               	subwfb	(___fladd@b+2)& (0+255),w,b
 32654  00CDFC  517F               	movf	(___fladd@b+3)& (0+255),w,b
 32655  00CDFE  0A80               	xorlw	128
 32656  00CE00  6F84               	movwf	??___fladd& (0+255),b
 32657  00CE02  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32658  00CE04  0A80               	xorlw	128
 32659  00CE06  5984               	subwfb	??___fladd& (0+255),w,b
 32660  00CE08  B0D8               	btfsc	status,0,c
 32661  00CE0A  D036               	goto	l3611
 32662                           
 32663                           ; BSR set to: 0
 32664  00CE0C  C07C  F084         	movff	___fladd@b,??___fladd
 32665  00CE10  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32666  00CE14  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32667  00CE18  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32668  00CE1C  1F84               	comf	??___fladd& (0+255),f,b
 32669  00CE1E  1F85               	comf	(??___fladd+1)& (0+255),f,b
 32670  00CE20  1F86               	comf	(??___fladd+2)& (0+255),f,b
 32671  00CE22  1F87               	comf	(??___fladd+3)& (0+255),f,b
 32672  00CE24  2B84               	incf	??___fladd& (0+255),f,b
 32673  00CE26  0E00               	movlw	0
 32674  00CE28  2385               	addwfc	(??___fladd+1)& (0+255),f,b
 32675  00CE2A  2386               	addwfc	(??___fladd+2)& (0+255),f,b
 32676  00CE2C  2387               	addwfc	(??___fladd+3)& (0+255),f,b
 32677  00CE2E  5180               	movf	___fladd@a& (0+255),w,b
 32678  00CE30  2584               	addwf	??___fladd& (0+255),w,b
 32679  00CE32  6F88               	movwf	(??___fladd+4)& (0+255),b
 32680  00CE34  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32681  00CE36  2185               	addwfc	(??___fladd+1)& (0+255),w,b
 32682  00CE38  6F89               	movwf	(??___fladd+5)& (0+255),b
 32683  00CE3A  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32684  00CE3C  2186               	addwfc	(??___fladd+2)& (0+255),w,b
 32685  00CE3E  6F8A               	movwf	(??___fladd+6)& (0+255),b
 32686  00CE40  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32687  00CE42  2187               	addwfc	(??___fladd+3)& (0+255),w,b
 32688  00CE44  6F8B               	movwf	(??___fladd+7)& (0+255),b
 32689  00CE46  0EFF               	movlw	255
 32690  00CE48  2588               	addwf	(??___fladd+4)& (0+255),w,b
 32691  00CE4A  6F7C               	movwf	___fladd@b& (0+255),b
 32692  00CE4C  0EFF               	movlw	255
 32693  00CE4E  2189               	addwfc	(??___fladd+5)& (0+255),w,b
 32694  00CE50  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32695  00CE52  0EFF               	movlw	255
 32696  00CE54  218A               	addwfc	(??___fladd+6)& (0+255),w,b
 32697  00CE56  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32698  00CE58  0EFF               	movlw	255
 32699  00CE5A  218B               	addwfc	(??___fladd+7)& (0+255),w,b
 32700  00CE5C  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32701  00CE5E  0E80               	movlw	128
 32702  00CE60  1B8C               	xorwf	___fladd@signs& (0+255),f,b
 32703                           
 32704                           ; BSR set to: 0
 32705  00CE62  6D8F               	negf	___fladd@grs& (0+255),b
 32706                           
 32707                           ; BSR set to: 0
 32708  00CE64  518F               	movf	___fladd@grs& (0+255),w,b
 32709  00CE66  A4D8               	btfss	status,2,c
 32710  00CE68  D00F               	goto	l3613
 32711                           
 32712                           ; BSR set to: 0
 32713  00CE6A  0E01               	movlw	1
 32714  00CE6C  277C               	addwf	___fladd@b& (0+255),f,b
 32715  00CE6E  0E00               	movlw	0
 32716  00CE70  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32717  00CE72  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32718  00CE74  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32719                           
 32720                           ; BSR set to: 0
 32721  00CE76  D008               	goto	l3613
 32722  00CE78                     l3611:
 32723                           
 32724                           ; BSR set to: 0
 32725                           
 32726                           ; BSR set to: 0
 32727  00CE78  5180               	movf	___fladd@a& (0+255),w,b
 32728  00CE7A  5F7C               	subwf	___fladd@b& (0+255),f,b
 32729  00CE7C  5181               	movf	(___fladd@a+1)& (0+255),w,b
 32730  00CE7E  5B7D               	subwfb	(___fladd@b+1)& (0+255),f,b
 32731  00CE80  5182               	movf	(___fladd@a+2)& (0+255),w,b
 32732  00CE82  5B7E               	subwfb	(___fladd@b+2)& (0+255),f,b
 32733  00CE84  5183               	movf	(___fladd@a+3)& (0+255),w,b
 32734  00CE86  5B7F               	subwfb	(___fladd@b+3)& (0+255),f,b
 32735  00CE88                     l3613:
 32736                           
 32737                           ; BSR set to: 0
 32738  00CE88  517C               	movf	___fladd@b& (0+255),w,b
 32739  00CE8A  117D               	iorwf	(___fladd@b+1)& (0+255),w,b
 32740  00CE8C  117E               	iorwf	(___fladd@b+2)& (0+255),w,b
 32741  00CE8E  117F               	iorwf	(___fladd@b+3)& (0+255),w,b
 32742  00CE90  A4D8               	btfss	status,2,c
 32743  00CE92  D01C               	goto	l3620
 32744                           
 32745                           ; BSR set to: 0
 32746  00CE94  518F               	movf	___fladd@grs& (0+255),w,b
 32747  00CE96  A4D8               	btfss	status,2,c
 32748  00CE98  D019               	goto	l3620
 32749                           
 32750                           ; BSR set to: 0
 32751  00CE9A  0E00               	movlw	0
 32752  00CE9C  6F7C               	movwf	?___fladd& (0+255),b
 32753  00CE9E  0E00               	movlw	0
 32754  00CEA0  6F7D               	movwf	(?___fladd+1)& (0+255),b
 32755  00CEA2  0E00               	movlw	0
 32756  00CEA4  6F7E               	movwf	(?___fladd+2)& (0+255),b
 32757  00CEA6  0E00               	movlw	0
 32758  00CEA8  6F7F               	movwf	(?___fladd+3)& (0+255),b
 32759                           
 32760                           ; BSR set to: 0
 32761  00CEAA  0012               	return	
 32762  00CEAC                     
 32763                           ; BSR set to: 0
 32764                           
 32765                           ; BSR set to: 0
 32766  00CEAC  90D8               	bcf	status,0,c
 32767  00CEAE  377C               	rlcf	___fladd@b& (0+255),f,b
 32768  00CEB0  377D               	rlcf	(___fladd@b+1)& (0+255),f,b
 32769  00CEB2  377E               	rlcf	(___fladd@b+2)& (0+255),f,b
 32770  00CEB4  377F               	rlcf	(___fladd@b+3)& (0+255),f,b
 32771                           
 32772                           ; BSR set to: 0
 32773  00CEB6  BF8F               	btfsc	___fladd@grs& (0+255),7,b
 32774                           
 32775                           ; BSR set to: 0
 32776  00CEB8  817C               	bsf	___fladd@b& (0+255),0,b
 32777                           
 32778                           ; BSR set to: 0
 32779                           
 32780                           ; BSR set to: 0
 32781  00CEBA  A18F               	btfss	___fladd@grs& (0+255),0,b
 32782  00CEBC  D002               	goto	l3618
 32783                           
 32784                           ; BSR set to: 0
 32785  00CEBE  80D8               	bsf	status,0,c
 32786  00CEC0  D001               	goto	L45
 32787  00CEC2                     l3618:
 32788                           
 32789                           ; BSR set to: 0
 32790                           
 32791                           ; BSR set to: 0
 32792  00CEC2  90D8               	bcf	status,0,c
 32793  00CEC4                     L45:
 32794  00CEC4  378F               	rlcf	___fladd@grs& (0+255),f,b
 32795                           
 32796                           ; BSR set to: 0
 32797                           
 32798                           ; BSR set to: 0
 32799  00CEC6  518E               	movf	___fladd@bexp& (0+255),w,b
 32800  00CEC8  A4D8               	btfss	status,2,c
 32801                           
 32802                           ; BSR set to: 0
 32803  00CECA  078E               	decf	___fladd@bexp& (0+255),f,b
 32804  00CECC                     l3620:
 32805                           
 32806                           ; BSR set to: 0
 32807                           
 32808                           ; BSR set to: 0
 32809                           
 32810                           ; BSR set to: 0
 32811  00CECC  AF7E               	btfss	(___fladd@b+2)& (0+255),7,b
 32812  00CECE  D7EE               	goto	l3616
 32813  00CED0                     u14760:
 32814                           
 32815                           ; BSR set to: 0
 32816                           
 32817                           ; BSR set to: 0
 32818                           
 32819                           ; BSR set to: 0
 32820  00CED0  0E00               	movlw	0
 32821  00CED2  6F8D               	movwf	___fladd@aexp& (0+255),b
 32822                           
 32823                           ; BSR set to: 0
 32824  00CED4  AF8F               	btfss	___fladd@grs& (0+255),7,b
 32825  00CED6  D00A               	goto	l3625
 32826                           
 32827                           ; BSR set to: 0
 32828  00CED8  C08F  F084         	movff	___fladd@grs,??___fladd
 32829  00CEDC  0E7F               	movlw	127
 32830  00CEDE  1784               	andwf	??___fladd& (0+255),f,b
 32831  00CEE0  A4D8               	btfss	status,2,c
 32832  00CEE2  D002               	goto	u14790
 32833                           
 32834                           ; BSR set to: 0
 32835                           
 32836                           ; BSR set to: 0
 32837  00CEE4  A17C               	btfss	___fladd@b& (0+255),0,b
 32838  00CEE6  D002               	goto	l3625
 32839  00CEE8                     u14790:
 32840                           
 32841                           ; BSR set to: 0
 32842  00CEE8  0E01               	movlw	1
 32843  00CEEA  6F8D               	movwf	___fladd@aexp& (0+255),b
 32844  00CEEC                     l3625:
 32845                           
 32846                           ; BSR set to: 0
 32847                           
 32848                           ; BSR set to: 0
 32849                           
 32850                           ; BSR set to: 0
 32851  00CEEC  518D               	movf	___fladd@aexp& (0+255),w,b
 32852  00CEEE  B4D8               	btfsc	status,2,c
 32853  00CEF0  D020               	goto	l3628
 32854                           
 32855                           ; BSR set to: 0
 32856  00CEF2  0E01               	movlw	1
 32857  00CEF4  277C               	addwf	___fladd@b& (0+255),f,b
 32858  00CEF6  0E00               	movlw	0
 32859  00CEF8  237D               	addwfc	(___fladd@b+1)& (0+255),f,b
 32860  00CEFA  237E               	addwfc	(___fladd@b+2)& (0+255),f,b
 32861  00CEFC  237F               	addwfc	(___fladd@b+3)& (0+255),f,b
 32862                           
 32863                           ; BSR set to: 0
 32864  00CEFE  A17F               	btfss	(___fladd@b+3)& (0+255),0,b
 32865  00CF00  D018               	goto	l3628
 32866                           
 32867                           ; BSR set to: 0
 32868  00CF02  C07C  F084         	movff	___fladd@b,??___fladd
 32869  00CF06  C07D  F085         	movff	___fladd@b+1,??___fladd+1
 32870  00CF0A  C07E  F086         	movff	___fladd@b+2,??___fladd+2
 32871  00CF0E  C07F  F087         	movff	___fladd@b+3,??___fladd+3
 32872  00CF12  3587               	rlcf	(??___fladd+3)& (0+255),w,b
 32873  00CF14  3387               	rrcf	(??___fladd+3)& (0+255),f,b
 32874  00CF16  3386               	rrcf	(??___fladd+2)& (0+255),f,b
 32875  00CF18  3385               	rrcf	(??___fladd+1)& (0+255),f,b
 32876  00CF1A  3384               	rrcf	??___fladd& (0+255),f,b
 32877  00CF1C  C084  F07C         	movff	??___fladd,___fladd@b
 32878  00CF20  C085  F07D         	movff	??___fladd+1,___fladd@b+1
 32879  00CF24  C086  F07E         	movff	??___fladd+2,___fladd@b+2
 32880  00CF28  C087  F07F         	movff	??___fladd+3,___fladd@b+3
 32881  00CF2C  298E               	incf	___fladd@bexp& (0+255),w,b
 32882  00CF2E  A4D8               	btfss	status,2,c
 32883                           
 32884                           ; BSR set to: 0
 32885  00CF30  2B8E               	incf	___fladd@bexp& (0+255),f,b
 32886  00CF32                     l3628:
 32887                           
 32888                           ; BSR set to: 0
 32889                           
 32890                           ; BSR set to: 0
 32891                           
 32892                           ; BSR set to: 0
 32893                           
 32894                           ; BSR set to: 0
 32895  00CF32  298E               	incf	___fladd@bexp& (0+255),w,b
 32896  00CF34  B4D8               	btfsc	status,2,c
 32897  00CF36  D003               	goto	u14840
 32898                           
 32899                           ; BSR set to: 0
 32900  00CF38  518E               	movf	___fladd@bexp& (0+255),w,b
 32901  00CF3A  A4D8               	btfss	status,2,c
 32902  00CF3C  D00D               	goto	l3632
 32903  00CF3E                     u14840:
 32904                           
 32905                           ; BSR set to: 0
 32906                           
 32907                           ; BSR set to: 0
 32908  00CF3E  0E00               	movlw	0
 32909  00CF40  6F7C               	movwf	___fladd@b& (0+255),b
 32910  00CF42  0E00               	movlw	0
 32911  00CF44  6F7D               	movwf	(___fladd@b+1)& (0+255),b
 32912  00CF46  0E00               	movlw	0
 32913  00CF48  6F7E               	movwf	(___fladd@b+2)& (0+255),b
 32914  00CF4A  0E00               	movlw	0
 32915  00CF4C  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32916  00CF4E  518E               	movf	___fladd@bexp& (0+255),w,b
 32917  00CF50  A4D8               	btfss	status,2,c
 32918  00CF52  D002               	goto	l3632
 32919                           
 32920                           ; BSR set to: 0
 32921  00CF54  0E00               	movlw	0
 32922  00CF56  6F8C               	movwf	___fladd@signs& (0+255),b
 32923  00CF58                     l3632:
 32924                           
 32925                           ; BSR set to: 0
 32926                           
 32927                           ; BSR set to: 0
 32928                           
 32929                           ; BSR set to: 0
 32930  00CF58  A18E               	btfss	___fladd@bexp& (0+255),0,b
 32931  00CF5A  D002               	goto	l3633
 32932                           
 32933                           ; BSR set to: 0
 32934  00CF5C  8F7E               	bsf	(___fladd@b+2)& (0+255),7,b
 32935  00CF5E  D001               	goto	l3634
 32936  00CF60                     l3633:
 32937                           
 32938                           ; BSR set to: 0
 32939                           
 32940                           ; BSR set to: 0
 32941  00CF60  9F7E               	bcf	(___fladd@b+2)& (0+255),7,b
 32942  00CF62                     l3634:
 32943                           
 32944                           ; BSR set to: 0
 32945                           
 32946                           ; BSR set to: 0
 32947  00CF62  90D8               	bcf	status,0,c
 32948  00CF64  318E               	rrcf	___fladd@bexp& (0+255),w,b
 32949  00CF66  6F7F               	movwf	(___fladd@b+3)& (0+255),b
 32950                           
 32951                           ; BSR set to: 0
 32952  00CF68  BF8C               	btfsc	___fladd@signs& (0+255),7,b
 32953                           
 32954                           ; BSR set to: 0
 32955  00CF6A  8F7F               	bsf	(___fladd@b+3)& (0+255),7,b
 32956                           
 32957                           ; BSR set to: 0
 32958                           
 32959                           ; BSR set to: 0
 32960  00CF6C  C07C  F07C         	movff	___fladd@b,?___fladd
 32961  00CF70  C07D  F07D         	movff	___fladd@b+1,?___fladd+1
 32962  00CF74  C07E  F07E         	movff	___fladd@b+2,?___fladd+2
 32963  00CF78  C07F  F07F         	movff	___fladd@b+3,?___fladd+3
 32964  00CF7C  0012               	return	
 32965  00CF7E                     __end_of___fladd:
 32966                           	opt stack 0
 32967                           tblptru	equ	0xFF8
 32968                           tblptrh	equ	0xFF7
 32969                           tblptrl	equ	0xFF6
 32970                           tablat	equ	0xFF5
 32971                           prodh	equ	0xFF4
 32972                           prodl	equ	0xFF3
 32973                           intcon	equ	0xFF2
 32974                           postinc0	equ	0xFEE
 32975                           wreg	equ	0xFE8
 32976                           indf1	equ	0xFE7
 32977                           postinc1	equ	0xFE6
 32978                           postdec1	equ	0xFE5
 32979                           plusw1	equ	0xFE3
 32980                           fsr1h	equ	0xFE2
 32981                           fsr1l	equ	0xFE1
 32982                           indf2	equ	0xFDF
 32983                           postinc2	equ	0xFDE
 32984                           postdec2	equ	0xFDD
 32985                           plusw2	equ	0xFDB
 32986                           fsr2h	equ	0xFDA
 32987                           fsr2l	equ	0xFD9
 32988                           status	equ	0xFD8
 32989                           
 32990 ;; *************** function _USBDeviceInit *****************
 32991 ;; Defined at:
 32992 ;;		line 277 in file "usb_device.c"
 32993 ;; Parameters:    Size  Location     Type
 32994 ;;		None
 32995 ;; Auto vars:     Size  Location     Type
 32996 ;;  i               1    8[BANK0 ] unsigned char 
 32997 ;; Return value:  Size  Location     Type
 32998 ;;                  1    wreg      void 
 32999 ;; Registers used:
 33000 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33001 ;; Tracked objects:
 33002 ;;		On entry : 0/0
 33003 ;;		On exit  : 0/0
 33004 ;;		Unchanged: 0/0
 33005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33007 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33008 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33009 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33010 ;;Total ram usage:        1 bytes
 33011 ;; Hardware stack levels used:    1
 33012 ;; Hardware stack levels required when called:   11
 33013 ;; This function calls:
 33014 ;;		_memset
 33015 ;; This function is called by:
 33016 ;;		_main
 33017 ;; This function uses a non-reentrant model
 33018 ;;
 33019                           
 33020                           	psect	text127
 33021  00FCDC                     __ptext127:
 33022                           	opt stack 0
 33023  00FCDC                     _USBDeviceInit:
 33024                           	opt stack 19
 33025                           
 33026                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 33027                           
 33028                           ; BSR set to: 0
 33029                           ;incstack = 0
 33030  00FCDC  98A0               	bcf	4000,4,c	;volatile
 33031                           
 33032                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 33033  00FCDE  0E00               	movlw	0
 33034  00FCE0  6E63               	movwf	3939,c	;volatile
 33035                           
 33036                           ;usb_device.c: 291: {UIR = 0;};
 33037  00FCE2  0E00               	movlw	0
 33038  00FCE4  6E62               	movwf	3938,c	;volatile
 33039                           
 33040                           ;usb_device.c: 294: UEP0 = 0;
 33041  00FCE6  0E00               	movlw	0
 33042  00FCE8  010F               	movlb	15	; () banked
 33043  00FCEA  6F26               	movwf	38,b	;volatile
 33044                           
 33045                           ; BSR set to: 15
 33046                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 33047  00FCEC  0E27               	movlw	39
 33048  00FCEE  0100               	movlb	0	; () banked
 33049  00FCF0  6F60               	movwf	memset@p1& (0+255),b
 33050  00FCF2  0E0F               	movlw	15
 33051  00FCF4  6F61               	movwf	(memset@p1+1)& (0+255),b
 33052  00FCF6  0E00               	movlw	0
 33053  00FCF8  6F63               	movwf	(memset@c+1)& (0+255),b
 33054  00FCFA  0E00               	movlw	0
 33055  00FCFC  6F62               	movwf	memset@c& (0+255),b
 33056  00FCFE  0E00               	movlw	0
 33057  00FD00  6F65               	movwf	(memset@n+1)& (0+255),b
 33058  00FD02  0E02               	movlw	2
 33059  00FD04  6F64               	movwf	memset@n& (0+255),b
 33060  00FD06  ECDF  F0AB         	call	_memset	;wreg free
 33061                           
 33062                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 33063  00FD0A  0E16               	movlw	22
 33064  00FD0C  010F               	movlb	15	; () banked
 33065  00FD0E  6F39               	movwf	57,b	;volatile
 33066                           
 33067                           ; BSR set to: 15
 33068  00FD10  0E9F               	movlw	159
 33069  00FD12  6F37               	movwf	55,b	;volatile
 33070                           
 33071                           ; BSR set to: 15
 33072  00FD14  0E7B               	movlw	123
 33073  00FD16  6F36               	movwf	54,b	;volatile
 33074                           
 33075                           ; BSR set to: 15
 33076                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 33077  00FD18  0E00               	movlw	0
 33078  00FD1A  0100               	movlb	0	; () banked
 33079  00FD1C  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33080  00FD1E                     l17884:
 33081                           
 33082                           ; BSR set to: 0
 33083  00FD1E  0E0B               	movlw	11
 33084  00FD20  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33085  00FD22  D001               	goto	l145
 33086  00FD24  D00E               	goto	u17270
 33087  00FD26                     l145:
 33088                           
 33089                           ; BSR set to: 0
 33090                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 33091                           
 33092                           ; BSR set to: 0
 33093  00FD26  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33094  00FD28  0D04               	mullw	4
 33095  00FD2A  0E00               	movlw	0
 33096  00FD2C  24F3               	addwf	prodl,w,c
 33097  00FD2E  6ED9               	movwf	fsr2l,c
 33098  00FD30  0E0D               	movlw	13
 33099  00FD32  20F4               	addwfc	prodh,w,c
 33100  00FD34  6EDA               	movwf	fsr2h,c
 33101  00FD36  6ADE               	clrf	postinc2,c
 33102  00FD38  6ADE               	clrf	postinc2,c
 33103  00FD3A  6ADE               	clrf	postinc2,c
 33104  00FD3C  6ADD               	clrf	postdec2,c
 33105                           
 33106                           ; BSR set to: 0
 33107  00FD3E  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33108  00FD40  D7EE               	goto	l17884
 33109  00FD42                     u17270:
 33110                           
 33111                           ; BSR set to: 0
 33112                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 33113  00FD42  8C65               	bsf	3941,6,c	;volatile
 33114                           
 33115                           ; BSR set to: 0
 33116                           ;usb_device.c: 316: UADDR = 0x00;
 33117  00FD44  0E00               	movlw	0
 33118  00FD46  010F               	movlb	15	; () banked
 33119  00FD48  6F38               	movwf	56,b	;volatile
 33120                           
 33121                           ; BSR set to: 15
 33122                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 33123  00FD4A  9865               	bcf	3941,4,c	;volatile
 33124                           
 33125                           ; BSR set to: 15
 33126                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 33127  00FD4C  9C65               	bcf	3941,6,c	;volatile
 33128  00FD4E                     
 33129                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 33130                           
 33131                           ; BSR set to: 15
 33132  00FD4E  9662               	bcf	3938,3,c	;volatile
 33133                           
 33134                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 33135  00FD50  0E00               	movlw	0
 33136  00FD52  6E4F               	movwf	_inPipes+3,c	;volatile
 33137                           
 33138                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 33139  00FD54  0E00               	movlw	0
 33140  00FD56  0101               	movlb	1	; () banked
 33141  00FD58  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 33142                           
 33143                           ; BSR set to: 1
 33144                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 33145  00FD5A  0E00               	movlw	0
 33146  00FD5C  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 33147  00FD5E  0E00               	movlw	0
 33148  00FD60  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 33149                           
 33150                           ; BSR set to: 1
 33151                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 33152  00FD62  B662               	btfsc	3938,3,c	;volatile
 33153  00FD64  D7F4               	goto	l147
 33154                           
 33155                           ; BSR set to: 1
 33156                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 33157                           
 33158                           ; BSR set to: 1
 33159  00FD66  0E01               	movlw	1
 33160  00FD68  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 33161                           
 33162                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 33163  00FD6A  0E01               	movlw	1
 33164  00FD6C  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 33165                           
 33166                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 33167  00FD6E  0E00               	movlw	0
 33168  00FD70  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 33169                           
 33170                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 33171  00FD72  0E00               	movlw	0
 33172  00FD74  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 33173                           
 33174                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 33175  00FD76  0E00               	movlw	0
 33176  00FD78  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 33177                           
 33178                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 33179  00FD7A  0E00               	movlw	0
 33180  00FD7C  0100               	movlb	0	; () banked
 33181  00FD7E  6F68               	movwf	USBDeviceInit@i& (0+255),b
 33182  00FD80                     l17912:
 33183                           
 33184                           ; BSR set to: 0
 33185  00FD80  0E02               	movlw	2
 33186  00FD82  6568               	cpfsgt	USBDeviceInit@i& (0+255),b
 33187  00FD84  D001               	goto	l149
 33188  00FD86  D02E               	goto	u17300
 33189  00FD88                     l149:
 33190                           
 33191                           ; BSR set to: 0
 33192                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 33193                           
 33194                           ; BSR set to: 0
 33195  00FD88  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33196  00FD8A  0D02               	mullw	2
 33197  00FD8C  0E52               	movlw	low _pBDTEntryIn
 33198  00FD8E  24F3               	addwf	prodl,w,c
 33199  00FD90  6ED9               	movwf	fsr2l,c
 33200  00FD92  0E00               	movlw	high _pBDTEntryIn
 33201  00FD94  20F4               	addwfc	prodh,w,c
 33202  00FD96  6EDA               	movwf	fsr2h,c
 33203  00FD98  0E00               	movlw	0
 33204  00FD9A  6EDE               	movwf	postinc2,c
 33205  00FD9C  0E00               	movlw	0
 33206  00FD9E  6EDD               	movwf	postdec2,c
 33207                           
 33208                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 33209  00FDA0  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33210  00FDA2  0D02               	mullw	2
 33211  00FDA4  0E1B               	movlw	low _pBDTEntryOut
 33212  00FDA6  24F3               	addwf	prodl,w,c
 33213  00FDA8  6ED9               	movwf	fsr2l,c
 33214  00FDAA  0E01               	movlw	high _pBDTEntryOut
 33215  00FDAC  20F4               	addwfc	prodh,w,c
 33216  00FDAE  6EDA               	movwf	fsr2h,c
 33217  00FDB0  0E00               	movlw	0
 33218  00FDB2  6EDE               	movwf	postinc2,c
 33219  00FDB4  0E00               	movlw	0
 33220  00FDB6  6EDD               	movwf	postdec2,c
 33221                           
 33222                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 33223  00FDB8  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33224  00FDBA  0D01               	mullw	1
 33225  00FDBC  0E30               	movlw	low _ep_data_in
 33226  00FDBE  24F3               	addwf	prodl,w,c
 33227  00FDC0  6ED9               	movwf	fsr2l,c
 33228  00FDC2  0E01               	movlw	high _ep_data_in
 33229  00FDC4  20F4               	addwfc	prodh,w,c
 33230  00FDC6  6EDA               	movwf	fsr2h,c
 33231  00FDC8  0E00               	movlw	0
 33232  00FDCA  6EDF               	movwf	indf2,c
 33233                           
 33234                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 33235  00FDCC  5168               	movf	USBDeviceInit@i& (0+255),w,b
 33236  00FDCE  0D01               	mullw	1
 33237  00FDD0  0E2D               	movlw	low _ep_data_out
 33238  00FDD2  24F3               	addwf	prodl,w,c
 33239  00FDD4  6ED9               	movwf	fsr2l,c
 33240  00FDD6  0E01               	movlw	high _ep_data_out
 33241  00FDD8  20F4               	addwfc	prodh,w,c
 33242  00FDDA  6EDA               	movwf	fsr2h,c
 33243  00FDDC  0E00               	movlw	0
 33244  00FDDE  6EDF               	movwf	indf2,c
 33245                           
 33246                           ; BSR set to: 0
 33247  00FDE0  2B68               	incf	USBDeviceInit@i& (0+255),f,b
 33248  00FDE2  D7CE               	goto	l17912
 33249  00FDE4                     u17300:
 33250                           
 33251                           ; BSR set to: 0
 33252                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 33253                           
 33254                           ; BSR set to: 0
 33255  00FDE4  0E08               	movlw	8
 33256  00FDE6  6E52               	movwf	_pBDTEntryIn,c
 33257  00FDE8  0E0D               	movlw	13
 33258  00FDEA  6E53               	movwf	_pBDTEntryIn+1,c
 33259                           
 33260                           ; BSR set to: 0
 33261                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 33262  00FDEC  0E16               	movlw	22
 33263  00FDEE  010F               	movlb	15	; () banked
 33264  00FDF0  6F26               	movwf	38,b	;volatile
 33265                           
 33266                           ; BSR set to: 15
 33267                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 33268  00FDF2  0E0D               	movlw	13
 33269  00FDF4  010D               	movlb	13	; () banked
 33270  00FDF6  6F03               	movwf	3,b	;volatile
 33271  00FDF8  0E30               	movlw	48
 33272  00FDFA  6F02               	movwf	2,b	;volatile
 33273                           
 33274                           ; BSR set to: 13
 33275                           ;usb_device.c: 359: BDT[0].CNT = 8;
 33276  00FDFC  0E08               	movlw	8
 33277  00FDFE  6F01               	movwf	1,b	;volatile
 33278                           
 33279                           ; BSR set to: 13
 33280                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 33281  00FE00  0E04               	movlw	4
 33282  00FE02  6F00               	movwf	0,b	;volatile
 33283                           
 33284                           ; BSR set to: 13
 33285                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 33286  00FE04  8F00               	bsf	0,7,b	;volatile
 33287                           
 33288                           ; BSR set to: 13
 33289                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 33290  00FE06  0E00               	movlw	0
 33291  00FE08  0101               	movlb	1	; () banked
 33292  00FE0A  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 33293                           
 33294                           ; BSR set to: 1
 33295                           ;usb_device.c: 366: USB1msTickCount = 0;
 33296  00FE0C  0E00               	movlw	0
 33297  00FE0E  6F29               	movwf	_USB1msTickCount& (0+255),b	;volatile
 33298  00FE10  0E00               	movlw	0
 33299  00FE12  6F2A               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 33300  00FE14  0E00               	movlw	0
 33301  00FE16  6F2B               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 33302  00FE18  0E00               	movlw	0
 33303  00FE1A  6F2C               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 33304                           
 33305                           ; BSR set to: 1
 33306                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 33307  00FE1C  0E00               	movlw	0
 33308  00FE1E  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 33309                           
 33310                           ; BSR set to: 1
 33311                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 33312  00FE20  0E00               	movlw	0
 33313  00FE22  6E5E               	movwf	_USBDeviceState,c	;volatile
 33314                           
 33315                           ; BSR set to: 1
 33316  00FE24  0012               	return		;funcret
 33317  00FE26                     __end_of_USBDeviceInit:
 33318                           	opt stack 0
 33319                           tblptru	equ	0xFF8
 33320                           tblptrh	equ	0xFF7
 33321                           tblptrl	equ	0xFF6
 33322                           tablat	equ	0xFF5
 33323                           prodh	equ	0xFF4
 33324                           prodl	equ	0xFF3
 33325                           intcon	equ	0xFF2
 33326                           postinc0	equ	0xFEE
 33327                           wreg	equ	0xFE8
 33328                           indf1	equ	0xFE7
 33329                           postinc1	equ	0xFE6
 33330                           postdec1	equ	0xFE5
 33331                           plusw1	equ	0xFE3
 33332                           fsr1h	equ	0xFE2
 33333                           fsr1l	equ	0xFE1
 33334                           indf2	equ	0xFDF
 33335                           postinc2	equ	0xFDE
 33336                           postdec2	equ	0xFDD
 33337                           plusw2	equ	0xFDB
 33338                           fsr2h	equ	0xFDA
 33339                           fsr2l	equ	0xFD9
 33340                           status	equ	0xFD8
 33341                           
 33342 ;; *************** function _memset *****************
 33343 ;; Defined at:
 33344 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 33345 ;; Parameters:    Size  Location     Type
 33346 ;;  p1              2    0[BANK0 ] PTR void 
 33347 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33348 ;;  c               2    2[BANK0 ] int 
 33349 ;;  n               2    4[BANK0 ] unsigned int 
 33350 ;; Auto vars:     Size  Location     Type
 33351 ;;  p               2    6[BANK0 ] PTR unsigned char 
 33352 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 33353 ;; Return value:  Size  Location     Type
 33354 ;;                  2    0[BANK0 ] PTR void 
 33355 ;; Registers used:
 33356 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 33357 ;; Tracked objects:
 33358 ;;		On entry : 0/0
 33359 ;;		On exit  : 0/0
 33360 ;;		Unchanged: 0/0
 33361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33362 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33363 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33364 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33365 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33366 ;;Total ram usage:        8 bytes
 33367 ;; Hardware stack levels used:    1
 33368 ;; Hardware stack levels required when called:   10
 33369 ;; This function calls:
 33370 ;;		Nothing
 33371 ;; This function is called by:
 33372 ;;		_USBDeviceInit
 33373 ;; This function uses a non-reentrant model
 33374 ;;
 33375                           
 33376                           	psect	text128
 33377  0157BE                     __ptext128:
 33378                           	opt stack 0
 33379  0157BE                     _memset:
 33380                           	opt stack 19
 33381                           
 33382                           ; BSR set to: 1
 33383                           ;incstack = 0
 33384  0157BE  C060  F066         	movff	memset@p1,memset@p
 33385  0157C2  C061  F067         	movff	memset@p1+1,memset@p+1
 33386  0157C6  D009               	goto	l3810
 33387  0157C8                     l16940:
 33388  0157C8  C066  FFD9         	movff	memset@p,fsr2l
 33389  0157CC  C067  FFDA         	movff	memset@p+1,fsr2h
 33390  0157D0  C062  FFDF         	movff	memset@c,indf2
 33391  0157D4  0100               	movlb	0	; () banked
 33392  0157D6  4B66               	infsnz	memset@p& (0+255),f,b
 33393  0157D8  2B67               	incf	(memset@p+1)& (0+255),f,b
 33394  0157DA                     l3810:
 33395                           
 33396                           ; BSR set to: 0
 33397  0157DA  0100               	movlb	0	; () banked
 33398  0157DC  0764               	decf	memset@n& (0+255),f,b
 33399  0157DE  A0D8               	btfss	status,0,c
 33400  0157E0  0765               	decf	(memset@n+1)& (0+255),f,b
 33401  0157E2  2964               	incf	memset@n& (0+255),w,b
 33402  0157E4  E1F1               	bnz	l16940
 33403  0157E6  2965               	incf	(memset@n+1)& (0+255),w,b
 33404  0157E8  B4D8               	btfsc	status,2,c
 33405  0157EA  0012               	return	
 33406  0157EC  D7ED               	goto	l3811
 33407  0157EE                     __end_of_memset:
 33408                           	opt stack 0
 33409                           tblptru	equ	0xFF8
 33410                           tblptrh	equ	0xFF7
 33411                           tblptrl	equ	0xFF6
 33412                           tablat	equ	0xFF5
 33413                           prodh	equ	0xFF4
 33414                           prodl	equ	0xFF3
 33415                           intcon	equ	0xFF2
 33416                           postinc0	equ	0xFEE
 33417                           wreg	equ	0xFE8
 33418                           indf1	equ	0xFE7
 33419                           postinc1	equ	0xFE6
 33420                           postdec1	equ	0xFE5
 33421                           plusw1	equ	0xFE3
 33422                           fsr1h	equ	0xFE2
 33423                           fsr1l	equ	0xFE1
 33424                           indf2	equ	0xFDF
 33425                           postinc2	equ	0xFDE
 33426                           postdec2	equ	0xFDD
 33427                           plusw2	equ	0xFDB
 33428                           fsr2h	equ	0xFDA
 33429                           fsr2l	equ	0xFD9
 33430                           status	equ	0xFD8
 33431                           
 33432 ;; *************** function _USBDeviceAttach *****************
 33433 ;; Defined at:
 33434 ;;		line 1354 in file "usb_device.c"
 33435 ;; Parameters:    Size  Location     Type
 33436 ;;		None
 33437 ;; Auto vars:     Size  Location     Type
 33438 ;;		None
 33439 ;; Return value:  Size  Location     Type
 33440 ;;                  1    wreg      void 
 33441 ;; Registers used:
 33442 ;;		wreg, status,2
 33443 ;; Tracked objects:
 33444 ;;		On entry : 0/0
 33445 ;;		On exit  : 0/0
 33446 ;;		Unchanged: 0/0
 33447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33448 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33451 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33452 ;;Total ram usage:        0 bytes
 33453 ;; Hardware stack levels used:    1
 33454 ;; Hardware stack levels required when called:   10
 33455 ;; This function calls:
 33456 ;;		Nothing
 33457 ;; This function is called by:
 33458 ;;		_main
 33459 ;; This function uses a non-reentrant model
 33460 ;;
 33461                           
 33462                           	psect	text129
 33463  01572C                     __ptext129:
 33464                           	opt stack 0
 33465  01572C                     _USBDeviceAttach:
 33466                           	opt stack 20
 33467                           
 33468                           ;usb_device.c: 1358: {;usb_device.c: 1359: if(1 == 1)
 33469                           
 33470                           ; BSR set to: 0
 33471                           ;incstack = 0
 33472  01572C  505E               	movf	_USBDeviceState,w,c	;volatile
 33473  01572E  A4D8               	btfss	status,2,c
 33474  015730  0012               	return	
 33475                           
 33476                           ;usb_device.c: 1360: {;usb_device.c: 1362: UCON = 0;
 33477  015732  0E00               	movlw	0
 33478  015734  6E65               	movwf	3941,c	;volatile
 33479                           
 33480                           ;usb_device.c: 1365: UIE = 0;
 33481  015736  0E00               	movlw	0
 33482  015738  010F               	movlb	15	; () banked
 33483  01573A  6F36               	movwf	54,b	;volatile
 33484                           
 33485                           ;usb_device.c: 1369: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
 33486  01573C  0E16               	movlw	22
 33487  01573E  6F39               	movwf	57,b	;volatile
 33488  015740  0E9F               	movlw	159
 33489  015742  6F37               	movwf	55,b	;volatile
 33490  015744  0E7B               	movlw	123
 33491  015746  6F36               	movwf	54,b	;volatile
 33492                           
 33493                           ; BSR set to: 15
 33494                           ;usb_device.c: 1371: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
 33495  015748  8ED0               	bsf	4048,7,c	;volatile
 33496                           
 33497                           ; BSR set to: 15
 33498  01574A  88A2               	bsf	4002,4,c	;volatile
 33499                           
 33500                           ; BSR set to: 15
 33501  01574C  88A0               	bsf	4000,4,c	;volatile
 33502                           
 33503                           ; BSR set to: 15
 33504  01574E  8EF2               	bsf	intcon,7,c	;volatile
 33505                           
 33506                           ;usb_device.c: 1374: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 33507  015750  D001               	goto	l206
 33508  015752                     l207:
 33509  015752  8665               	bsf	3941,3,c	;volatile
 33510  015754                     l206:
 33511  015754  A665               	btfss	3941,3,c	;volatile
 33512  015756  D7FD               	goto	l207
 33513                           
 33514                           ;usb_device.c: 1377: USBDeviceState = ATTACHED_STATE;
 33515  015758  0E01               	movlw	1
 33516  01575A  6E5E               	movwf	_USBDeviceState,c	;volatile
 33517  01575C  0012               	return	
 33518  01575E                     __end_of_USBDeviceAttach:
 33519                           	opt stack 0
 33520                           tblptru	equ	0xFF8
 33521                           tblptrh	equ	0xFF7
 33522                           tblptrl	equ	0xFF6
 33523                           tablat	equ	0xFF5
 33524                           prodh	equ	0xFF4
 33525                           prodl	equ	0xFF3
 33526                           intcon	equ	0xFF2
 33527                           postinc0	equ	0xFEE
 33528                           wreg	equ	0xFE8
 33529                           indf1	equ	0xFE7
 33530                           postinc1	equ	0xFE6
 33531                           postdec1	equ	0xFE5
 33532                           plusw1	equ	0xFE3
 33533                           fsr1h	equ	0xFE2
 33534                           fsr1l	equ	0xFE1
 33535                           indf2	equ	0xFDF
 33536                           postinc2	equ	0xFDE
 33537                           postdec2	equ	0xFDD
 33538                           plusw2	equ	0xFDB
 33539                           fsr2h	equ	0xFDA
 33540                           fsr2l	equ	0xFD9
 33541                           status	equ	0xFD8
 33542                           
 33543 ;; *************** function _SYSTEM_Initialize *****************
 33544 ;; Defined at:
 33545 ;;		line 39 in file "system.c"
 33546 ;; Parameters:    Size  Location     Type
 33547 ;;  state           1    wreg     enum E6623
 33548 ;; Auto vars:     Size  Location     Type
 33549 ;;  state           1    4[BANK0 ] enum E6623
 33550 ;;  pll_startup_    2    2[BANK0 ] unsigned int 
 33551 ;;  pll_startup_    2    0[BANK0 ] unsigned int 
 33552 ;; Return value:  Size  Location     Type
 33553 ;;                  1    wreg      void 
 33554 ;; Registers used:
 33555 ;;		wreg, status,2, status,0
 33556 ;; Tracked objects:
 33557 ;;		On entry : 0/0
 33558 ;;		On exit  : 0/0
 33559 ;;		Unchanged: 0/0
 33560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33562 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33564 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33565 ;;Total ram usage:        5 bytes
 33566 ;; Hardware stack levels used:    1
 33567 ;; Hardware stack levels required when called:   10
 33568 ;; This function calls:
 33569 ;;		Nothing
 33570 ;; This function is called by:
 33571 ;;		_main
 33572 ;; This function uses a non-reentrant model
 33573 ;;
 33574                           
 33575                           	psect	text130
 33576  014A12                     __ptext130:
 33577                           	opt stack 0
 33578  014A12                     _SYSTEM_Initialize:
 33579                           	opt stack 20
 33580                           
 33581                           ;incstack = 0
 33582                           ;SYSTEM_Initialize@state stored from wreg
 33583  014A12  0100               	movlb	0	; () banked
 33584  014A14  6F64               	movwf	SYSTEM_Initialize@state& (0+255),b
 33585                           
 33586                           ;system.c: 41: switch(state)
 33587  014A16  D01E               	goto	l897
 33588  014A18                     
 33589                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 33590  014A18  0E02               	movlw	2
 33591  014A1A  0100               	movlb	0	; () banked
 33592  014A1C  6F61               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
 33593  014A1E  0E58               	movlw	88
 33594  014A20  6F60               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
 33595                           
 33596                           ; BSR set to: 0
 33597                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 33598  014A22  8C9B               	bsf	3995,6,c	;volatile
 33599  014A24                     l18064:
 33600                           
 33601                           ; BSR set to: 0
 33602  014A24  0760               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
 33603  014A26  A0D8               	btfss	status,0,c
 33604  014A28  0761               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
 33605  014A2A  2960               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
 33606  014A2C  E1FB               	bnz	l18064
 33607  014A2E  2961               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
 33608  014A30  B4D8               	btfsc	status,2,c
 33609  014A32  0012               	return	
 33610  014A34  D7F7               	goto	l900
 33611  014A36                     
 33612                           ; BSR set to: 0
 33613                           ;system.c: 78: OSCCON = 0x70;
 33614                           
 33615                           ; BSR set to: 0
 33616  014A36  0E70               	movlw	112
 33617  014A38  6ED3               	movwf	4051,c	;volatile
 33618                           
 33619                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 33620  014A3A  0E03               	movlw	3
 33621  014A3C  6F63               	movwf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),b
 33622  014A3E  0E20               	movlw	32
 33623  014A40  6F62               	movwf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),b
 33624  014A42                     l18068:
 33625                           
 33626                           ; BSR set to: 0
 33627  014A42  0762               	decf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),f,b
 33628  014A44  A0D8               	btfss	status,0,c
 33629  014A46  0763               	decf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),f,b
 33630  014A48  2962               	incf	SYSTEM_Initialize@pll_startup_counter_3143& (0+255),w,b
 33631  014A4A  E1FB               	bnz	l18068
 33632  014A4C  2963               	incf	(SYSTEM_Initialize@pll_startup_counter_3143+1)& (0+255),w,b
 33633  014A4E  B4D8               	btfsc	status,2,c
 33634  014A50  0012               	return	
 33635  014A52  D7F7               	goto	l906
 33636  014A54                     l897:
 33637                           
 33638                           ; BSR set to: 0
 33639  014A54  0100               	movlb	0	; () banked
 33640  014A56  5164               	movf	SYSTEM_Initialize@state& (0+255),w,b
 33641                           
 33642                           ; Switch size 1, requested type "space"
 33643                           ; Number of cases is 3, Range of values is 0 to 2
 33644                           ; switch strategies available:
 33645                           ; Name         Instructions Cycles
 33646                           ; simple_byte           10     6 (average)
 33647                           ;	Chosen strategy is simple_byte
 33648  014A58  0A00               	xorlw	0	; case 0
 33649  014A5A  B4D8               	btfsc	status,2,c
 33650  014A5C  D7DD               	goto	l898
 33651  014A5E  0A01               	xorlw	1	; case 1
 33652  014A60  B4D8               	btfsc	status,2,c
 33653  014A62  0012               	return	
 33654  014A64  0A03               	xorlw	3	; case 2
 33655  014A66  A4D8               	btfss	status,2,c
 33656  014A68  0012               	return	
 33657  014A6A  D7E5               	goto	l904
 33658  014A6C                     __end_of_SYSTEM_Initialize:
 33659                           	opt stack 0
 33660                           tblptru	equ	0xFF8
 33661                           tblptrh	equ	0xFF7
 33662                           tblptrl	equ	0xFF6
 33663                           tablat	equ	0xFF5
 33664                           prodh	equ	0xFF4
 33665                           prodl	equ	0xFF3
 33666                           intcon	equ	0xFF2
 33667                           postinc0	equ	0xFEE
 33668                           wreg	equ	0xFE8
 33669                           indf1	equ	0xFE7
 33670                           postinc1	equ	0xFE6
 33671                           postdec1	equ	0xFE5
 33672                           plusw1	equ	0xFE3
 33673                           fsr1h	equ	0xFE2
 33674                           fsr1l	equ	0xFE1
 33675                           indf2	equ	0xFDF
 33676                           postinc2	equ	0xFDE
 33677                           postdec2	equ	0xFDD
 33678                           plusw2	equ	0xFDB
 33679                           fsr2h	equ	0xFDA
 33680                           fsr2l	equ	0xFD9
 33681                           status	equ	0xFD8
 33682                           
 33683 ;; *************** function _APP_DeviceMSDTasks *****************
 33684 ;; Defined at:
 33685 ;;		line 110 in file "app_device_msd.c"
 33686 ;; Parameters:    Size  Location     Type
 33687 ;;		None
 33688 ;; Auto vars:     Size  Location     Type
 33689 ;;		None
 33690 ;; Return value:  Size  Location     Type
 33691 ;;                  1    wreg      void 
 33692 ;; Registers used:
 33693 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33694 ;; Tracked objects:
 33695 ;;		On entry : 0/0
 33696 ;;		On exit  : 0/0
 33697 ;;		Unchanged: 0/0
 33698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33702 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33703 ;;Total ram usage:        0 bytes
 33704 ;; Hardware stack levels used:    1
 33705 ;; Hardware stack levels required when called:   21
 33706 ;; This function calls:
 33707 ;;		_MSDTasks
 33708 ;; This function is called by:
 33709 ;;		_main
 33710 ;; This function uses a non-reentrant model
 33711 ;;
 33712                           
 33713                           	psect	text131
 33714  015CC6                     __ptext131:
 33715                           	opt stack 0
 33716  015CC6                     _APP_DeviceMSDTasks:
 33717                           	opt stack 9
 33718                           
 33719                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 33720                           
 33721                           ; BSR set to: 0
 33722                           ;incstack = 0
 33723  015CC6  0E20               	movlw	32
 33724  015CC8  605E               	cpfslt	_USBDeviceState,c	;volatile
 33725  015CCA  D001               	goto	l986
 33726  015CCC  0012               	return	
 33727  015CCE                     l986:
 33728                           
 33729                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 33730  015CCE  B265               	btfsc	3941,1,c	;volatile
 33731  015CD0  0012               	return	
 33732                           
 33733                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 33734                           
 33735                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 33736  015CD2  EC75  F06E         	call	_MSDTasks	;wreg free
 33737  015CD6  0012               	return		;funcret
 33738  015CD8                     __end_of_APP_DeviceMSDTasks:
 33739                           	opt stack 0
 33740                           tblptru	equ	0xFF8
 33741                           tblptrh	equ	0xFF7
 33742                           tblptrl	equ	0xFF6
 33743                           tablat	equ	0xFF5
 33744                           prodh	equ	0xFF4
 33745                           prodl	equ	0xFF3
 33746                           intcon	equ	0xFF2
 33747                           postinc0	equ	0xFEE
 33748                           wreg	equ	0xFE8
 33749                           indf1	equ	0xFE7
 33750                           postinc1	equ	0xFE6
 33751                           postdec1	equ	0xFE5
 33752                           plusw1	equ	0xFE3
 33753                           fsr1h	equ	0xFE2
 33754                           fsr1l	equ	0xFE1
 33755                           indf2	equ	0xFDF
 33756                           postinc2	equ	0xFDE
 33757                           postdec2	equ	0xFDD
 33758                           plusw2	equ	0xFDB
 33759                           fsr2h	equ	0xFDA
 33760                           fsr2l	equ	0xFD9
 33761                           status	equ	0xFD8
 33762                           
 33763 ;; *************** function _MSDTasks *****************
 33764 ;; Defined at:
 33765 ;;		line 335 in file "usb_device_msd.c"
 33766 ;; Parameters:    Size  Location     Type
 33767 ;;		None
 33768 ;; Auto vars:     Size  Location     Type
 33769 ;;  i               1   81[BANK0 ] unsigned char 
 33770 ;; Return value:  Size  Location     Type
 33771 ;;                  1    wreg      unsigned char 
 33772 ;; Registers used:
 33773 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 33774 ;; Tracked objects:
 33775 ;;		On entry : 0/0
 33776 ;;		On exit  : 0/0
 33777 ;;		Unchanged: 0/0
 33778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33779 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33780 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33781 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33782 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33783 ;;Total ram usage:        6 bytes
 33784 ;; Hardware stack levels used:    1
 33785 ;; Hardware stack levels required when called:   20
 33786 ;; This function calls:
 33787 ;;		_MSDProcessCommand
 33788 ;;		_USBStallEndpoint
 33789 ;;		_USBTransferOnePacket
 33790 ;; This function is called by:
 33791 ;;		_APP_DeviceMSDTasks
 33792 ;; This function uses a non-reentrant model
 33793 ;;
 33794                           
 33795                           	psect	text132
 33796  00DCEA                     __ptext132:
 33797                           	opt stack 0
 33798  00DCEA                     _MSDTasks:
 33799                           	opt stack 9
 33800                           
 33801                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 33802                           
 33803                           ;incstack = 0
 33804  00DCEA  0E20               	movlw	32
 33805  00DCEC  185E               	xorwf	_USBDeviceState,w,c	;volatile
 33806  00DCEE  A4D8               	btfss	status,2,c
 33807  00DCF0  0012               	return	
 33808                           
 33809                           ;usb_device_msd.c: 345: };usb_device_msd.c: 353: {PIE2bits.USBIE = 0;};
 33810                           
 33811                           ;usb_device_msd.c: 343: {;usb_device_msd.c: 344: return 0x00;;	Return value of _MSDTasks
      +                           is never used
 33812  00DCF2  98A0               	bcf	4000,4,c	;volatile
 33813                           
 33814                           ;usb_device_msd.c: 357: switch(MSD_State)
 33815  00DCF4  D11E               	goto	l570
 33816  00DCF6                     
 33817                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 33818  00DCF6  0101               	movlb	1	; () banked
 33819  00DCF8  513D               	movf	_USBMSDOutHandle& (0+255),w,b
 33820  00DCFA  113E               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 33821  00DCFC  B4D8               	btfsc	status,2,c
 33822  00DCFE  D006               	goto	u16280
 33823                           
 33824                           ; BSR set to: 1
 33825  00DD00  C13D  FFD9         	movff	_USBMSDOutHandle,fsr2l
 33826  00DD04  C13E  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 33827  00DD08  BEDF               	btfsc	indf2,7,c
 33828  00DD0A  D122               	goto	l586
 33829  00DD0C                     u16280:
 33830                           
 33831                           ; BSR set to: 1
 33832                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 33833                           
 33834                           ; BSR set to: 1
 33835  00DD0C  0E00               	movlw	0
 33836  00DD0E  0100               	movlb	0	; () banked
 33837  00DD10  6FB1               	movwf	MSDTasks@i& (0+255),b
 33838  00DD12                     l17026:
 33839                           
 33840                           ; BSR set to: 0
 33841  00DD12  0E1E               	movlw	30
 33842  00DD14  65B1               	cpfsgt	MSDTasks@i& (0+255),b
 33843  00DD16  D001               	goto	l575
 33844  00DD18  D014               	goto	u16300
 33845  00DD1A                     l575:
 33846                           
 33847                           ; BSR set to: 0
 33848                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 33849                           
 33850                           ; BSR set to: 0
 33851  00DD1A  51B1               	movf	MSDTasks@i& (0+255),w,b
 33852  00DD1C  0D01               	mullw	1
 33853  00DD1E  0E40               	movlw	64
 33854  00DD20  24F3               	addwf	prodl,w,c
 33855  00DD22  6ED9               	movwf	fsr2l,c
 33856  00DD24  0E0D               	movlw	13
 33857  00DD26  20F4               	addwfc	prodh,w,c
 33858  00DD28  6EDA               	movwf	fsr2h,c
 33859  00DD2A  51B1               	movf	MSDTasks@i& (0+255),w,b
 33860  00DD2C  0D01               	mullw	1
 33861  00DD2E  0E00               	movlw	low _gblCBW
 33862  00DD30  24F3               	addwf	prodl,w,c
 33863  00DD32  6EE1               	movwf	fsr1l,c
 33864  00DD34  0E02               	movlw	high _gblCBW
 33865  00DD36  20F4               	addwfc	prodh,w,c
 33866  00DD38  6EE2               	movwf	fsr1h,c
 33867  00DD3A  CFDF FFE7          	movff	indf2,indf1
 33868                           
 33869                           ; BSR set to: 0
 33870  00DD3E  2BB1               	incf	MSDTasks@i& (0+255),f,b
 33871  00DD40  D7E8               	goto	l17026
 33872  00DD42                     u16300:
 33873                           
 33874                           ; BSR set to: 0
 33875                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 33876                           
 33877                           ; BSR set to: 0
 33878  00DD42  0101               	movlb	1	; () banked
 33879  00DD44  EE20 F001          	lfsr	2,1
 33880  00DD48  513D               	movf	_USBMSDOutHandle& (0+255),w,b
 33881  00DD4A  26D9               	addwf	fsr2l,f,c
 33882  00DD4C  513E               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 33883  00DD4E  22DA               	addwfc	fsr2h,f,c
 33884  00DD50  0E1F               	movlw	31
 33885  00DD52  18DE               	xorwf	postinc2,w,c
 33886  00DD54  A4D8               	btfss	status,2,c
 33887  00DD56  D077               	goto	l577
 33888                           
 33889                           ; BSR set to: 1
 33890  00DD58  0E55               	movlw	85
 33891  00DD5A  0102               	movlb	2	; () banked
 33892  00DD5C  1900               	xorwf	_gblCBW& (0+255),w,b
 33893  00DD5E  E173               	bnz	l577
 33894  00DD60  0E53               	movlw	83
 33895  00DD62  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 33896  00DD64  E170               	bnz	l577
 33897  00DD66  0E42               	movlw	66
 33898  00DD68  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 33899  00DD6A  E16D               	bnz	l577
 33900  00DD6C  0E43               	movlw	67
 33901  00DD6E  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 33902  00DD70  A4D8               	btfss	status,2,c
 33903  00DD72  D069               	goto	l577
 33904                           
 33905                           ; BSR set to: 2
 33906                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 33907  00DD74  0E01               	movlw	1
 33908  00DD76  0101               	movlb	1	; () banked
 33909  00DD78  6F4E               	movwf	_MSDCBWValid& (0+255),b
 33910                           
 33911                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 33912  00DD7A  0102               	movlb	2	; () banked
 33913  00DD7C  510D               	movf	(_gblCBW+13)& (0+255),w,b
 33914  00DD7E  A4D8               	btfss	status,2,c
 33915  00DD80  D055               	goto	l578
 33916                           
 33917                           ; BSR set to: 2
 33918  00DD82  0E11               	movlw	17
 33919  00DD84  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 33920  00DD86  D052               	goto	l578
 33921                           
 33922                           ; BSR set to: 2
 33923  00DD88  510E               	movf	(_gblCBW+14)& (0+255),w,b
 33924  00DD8A  B4D8               	btfsc	status,2,c
 33925  00DD8C  D04F               	goto	l578
 33926                           
 33927                           ; BSR set to: 2
 33928  00DD8E  C20C  F0AC         	movff	_gblCBW+12,??_MSDTasks
 33929  00DD92  0E3F               	movlw	63
 33930  00DD94  0100               	movlb	0	; () banked
 33931  00DD96  17AC               	andwf	??_MSDTasks& (0+255),f,b
 33932  00DD98  A4D8               	btfss	status,2,c
 33933  00DD9A  D048               	goto	l578
 33934                           
 33935                           ; BSR set to: 0
 33936                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 33937  00DD9C  0E55               	movlw	85
 33938  00DD9E  010D               	movlb	13	; () banked
 33939  00DDA0  6F80               	movwf	128,b	;volatile
 33940  00DDA2  0E53               	movlw	83
 33941  00DDA4  6F81               	movwf	129,b	;volatile
 33942  00DDA6  0E42               	movlw	66
 33943  00DDA8  6F82               	movwf	130,b	;volatile
 33944  00DDAA  0E53               	movlw	83
 33945  00DDAC  6F83               	movwf	131,b	;volatile
 33946                           
 33947                           ; BSR set to: 13
 33948                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 33949  00DDAE  C204  FD84         	movff	_gblCBW+4,3460	;volatile
 33950  00DDB2  C205  FD85         	movff	_gblCBW+5,3461	;volatile
 33951  00DDB6  C206  FD86         	movff	_gblCBW+6,3462	;volatile
 33952  00DDBA  C207  FD87         	movff	_gblCBW+7,3463	;volatile
 33953                           
 33954                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 33955  00DDBE  0E00               	movlw	0
 33956  00DDC0  6F88               	movwf	136,b	;volatile
 33957  00DDC2  0E00               	movlw	0
 33958  00DDC4  6F89               	movwf	137,b	;volatile
 33959  00DDC6  0E00               	movlw	0
 33960  00DDC8  6F8A               	movwf	138,b	;volatile
 33961  00DDCA  0E00               	movlw	0
 33962  00DDCC  6F8B               	movwf	139,b	;volatile
 33963                           
 33964                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 33965  00DDCE  0E00               	movlw	0
 33966  00DDD0  6F8C               	movwf	140,b	;volatile
 33967                           
 33968                           ; BSR set to: 13
 33969                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 33970  00DDD2  0101               	movlb	1	; () banked
 33971  00DDD4  6955               	setf	_MSDCommandState& (0+255),b
 33972                           
 33973                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 33974  00DDD6  0E00               	movlw	0
 33975  00DDD8  6F54               	movwf	_MSDReadState& (0+255),b
 33976                           
 33977                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 33978  00DDDA  0E00               	movlw	0
 33979  00DDDC  6F53               	movwf	_MSDWriteState& (0+255),b
 33980                           
 33981                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 33982  00DDDE  0E00               	movlw	0
 33983  00DDE0  6F52               	movwf	_MSDRetryAttempt& (0+255),b
 33984                           
 33985                           ; BSR set to: 1
 33986                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 33987  00DDE2  0E03               	movlw	3
 33988  00DDE4  0102               	movlb	2	; () banked
 33989  00DDE6  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 33990  00DDE8  B4D8               	btfsc	status,2,c
 33991  00DDEA  D009               	goto	l579
 33992                           
 33993                           ; BSR set to: 2
 33994                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 33995  00DDEC  0101               	movlb	1	; () banked
 33996  00DDEE  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 33997  00DDF0  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 33998  00DDF2  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 33999  00DDF4  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 34000                           
 34001                           ; BSR set to: 1
 34002                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 34003  00DDF6  0E00               	movlw	0
 34004  00DDF8  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 34005                           
 34006                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 34007  00DDFA  0E00               	movlw	0
 34008  00DDFC  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 34009  00DDFE                     l579:
 34010                           
 34011                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 34012                           
 34013                           ; BSR set to: 1
 34014  00DDFE  0102               	movlb	2	; () banked
 34015  00DE00  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 34016  00DE02  D002               	goto	l580
 34017                           
 34018                           ; BSR set to: 2
 34019                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 34020  00DE04  0E01               	movlw	1
 34021  00DE06  D001               	goto	L47
 34022  00DE08                     l580:
 34023                           
 34024                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 34025                           
 34026                           ; BSR set to: 1
 34027  00DE08  0E02               	movlw	2
 34028  00DE0A                     L47:
 34029  00DE0A  0101               	movlb	1	; () banked
 34030  00DE0C  6F56               	movwf	_MSD_State& (0+255),b
 34031                           
 34032                           ; BSR set to: 1
 34033                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 34034                           
 34035                           ; BSR set to: 1
 34036  00DE0E  0102               	movlb	2	; () banked
 34037  00DE10  5108               	movf	(_gblCBW+8)& (0+255),w,b
 34038  00DE12  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 34039  00DE14  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 34040  00DE16  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 34041  00DE18  B4D8               	btfsc	status,2,c
 34042  00DE1A  D002               	goto	l582
 34043                           
 34044                           ; BSR set to: 2
 34045                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 34046  00DE1C  0E00               	movlw	0
 34047  00DE1E  D001               	goto	L48
 34048  00DE20                     l582:
 34049                           
 34050                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 34051                           
 34052                           ; BSR set to: 1
 34053  00DE20  0E01               	movlw	1
 34054  00DE22                     L48:
 34055  00DE22  0101               	movlb	1	; () banked
 34056  00DE24  6F4F               	movwf	_MSDHostNoData& (0+255),b
 34057                           
 34058                           ; BSR set to: 1
 34059                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 34060                           
 34061                           ; BSR set to: 1
 34062  00DE26  C20F  F155         	movff	_gblCBW+15,_MSDCommandState
 34063                           
 34064                           ;usb_device_msd.c: 454: }
 34065  00DE2A  D092               	goto	l586
 34066  00DE2C                     l578:
 34067                           
 34068                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 34069                           
 34070                           ; BSR set to: 1
 34071  00DE2C  0E01               	movlw	1
 34072  00DE2E  0100               	movlb	0	; () banked
 34073  00DE30  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34074  00DE32  0E02               	movlw	2
 34075  00DE34  EC06  F089         	call	_USBStallEndpoint
 34076                           
 34077                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 34078  00DE38  0E00               	movlw	0
 34079  00DE3A  0100               	movlb	0	; () banked
 34080  00DE3C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34081  00DE3E  0E02               	movlw	2
 34082  00DE40  EC06  F089         	call	_USBStallEndpoint
 34083                           
 34084                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 34085  00DE44  D085               	goto	l586
 34086  00DE46                     l577:
 34087                           
 34088                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 34089  00DE46  0E01               	movlw	1
 34090  00DE48  0100               	movlb	0	; () banked
 34091  00DE4A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34092  00DE4C  0E02               	movlw	2
 34093  00DE4E  EC06  F089         	call	_USBStallEndpoint
 34094                           
 34095                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 34096  00DE52  0E00               	movlw	0
 34097  00DE54  0100               	movlb	0	; () banked
 34098  00DE56  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34099  00DE58  0E02               	movlw	2
 34100  00DE5A  EC06  F089         	call	_USBStallEndpoint
 34101                           
 34102                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 34103  00DE5E  0E00               	movlw	0
 34104  00DE60  0101               	movlb	1	; () banked
 34105  00DE62  6F4E               	movwf	_MSDCBWValid& (0+255),b
 34106                           
 34107                           ; BSR set to: 1
 34108                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 34109                           
 34110                           ; BSR set to: 1
 34111  00DE64  D075               	goto	l586
 34112  00DE66                     
 34113                           ; BSR set to: 1
 34114                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 34115                           
 34116                           ; BSR set to: 1
 34117  00DE66  EC76  F083         	call	_MSDProcessCommand	;wreg free
 34118  00DE6A  0AFF               	xorlw	255
 34119  00DE6C  A4D8               	btfss	status,2,c
 34120  00DE6E  D070               	goto	l586
 34121  00DE70  D011               	goto	l591
 34122  00DE72                     
 34123                           ; BSR set to: 1
 34124                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 34125                           
 34126                           ; BSR set to: 1
 34127  00DE72  EC76  F083         	call	_MSDProcessCommand	;wreg free
 34128  00DE76  0AFF               	xorlw	255
 34129  00DE78  A4D8               	btfss	status,2,c
 34130  00DE7A  D06A               	goto	l586
 34131                           
 34132                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 34133  00DE7C  010D               	movlb	13	; () banked
 34134  00DE7E  518C               	movf	140,w,b	;volatile
 34135  00DE80  A4D8               	btfss	status,2,c
 34136  00DE82  D008               	goto	l591
 34137                           
 34138                           ; BSR set to: 13
 34139  00DE84  5188               	movf	136,w,b	;volatile
 34140  00DE86  1189               	iorwf	137,w,b	;volatile
 34141  00DE88  118A               	iorwf	138,w,b	;volatile
 34142  00DE8A  118B               	iorwf	139,w,b	;volatile
 34143  00DE8C  B4D8               	btfsc	status,2,c
 34144  00DE8E  D002               	goto	l591
 34145                           
 34146                           ; BSR set to: 13
 34147                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 34148  00DE90  0E02               	movlw	2
 34149  00DE92  6F8C               	movwf	140,b	;volatile
 34150  00DE94                     l591:
 34151                           
 34152                           ; BSR set to: 13
 34153                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 34154  00DE94  0E03               	movlw	3
 34155  00DE96  D03E               	goto	L46
 34156  00DE98                     
 34157                           ; BSR set to: 1
 34158                           
 34159                           ; BSR set to: 1
 34160  00DE98  C056  F0AD         	movff	_pBDTEntryIn+4,_MSDTasks$2588
 34161  00DE9C  C057  F0AE         	movff	_pBDTEntryIn+5,_MSDTasks$2588+1
 34162                           
 34163                           ; BSR set to: 1
 34164                           
 34165                           ; BSR set to: 1
 34166                           
 34167                           ; BSR set to: 1
 34168  00DEA0  0100               	movlb	0	; () banked
 34169  00DEA2  51AD               	movf	_MSDTasks$2588& (0+255),w,b
 34170  00DEA4  11AE               	iorwf	(_MSDTasks$2588+1)& (0+255),w,b
 34171  00DEA6  B4D8               	btfsc	status,2,c
 34172  00DEA8  D00A               	goto	l593
 34173                           
 34174                           ; BSR set to: 0
 34175  00DEAA  C056  F0AF         	movff	_pBDTEntryIn+4,_MSDTasks$2589
 34176  00DEAE  C057  F0B0         	movff	_pBDTEntryIn+5,_MSDTasks$2589+1
 34177                           
 34178                           ; BSR set to: 0
 34179                           
 34180                           ; BSR set to: 0
 34181                           
 34182                           ; BSR set to: 0
 34183                           
 34184                           ; BSR set to: 0
 34185  00DEB2  C0AF  FFD9         	movff	_MSDTasks$2589,fsr2l
 34186  00DEB6  C0B0  FFDA         	movff	_MSDTasks$2589+1,fsr2h
 34187  00DEBA  BEDF               	btfsc	indf2,7,c
 34188  00DEBC  D049               	goto	l586
 34189  00DEBE                     l593:
 34190                           
 34191                           ; BSR set to: 0
 34192                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 34193                           
 34194                           ; BSR set to: 0
 34195  00DEBE  0E01               	movlw	1
 34196  00DEC0  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34197  00DEC2  0E80               	movlw	128
 34198  00DEC4  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34199  00DEC6  0E0D               	movlw	13
 34200  00DEC8  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34201  00DECA  0E0D               	movlw	13
 34202  00DECC  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34203  00DECE  0E02               	movlw	2
 34204  00DED0  EC8B  F089         	call	_USBTransferOnePacket
 34205  00DED4  C060  F13B         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 34206  00DED8  C061  F13C         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 34207                           
 34208                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 34209  00DEDC  0101               	movlb	1	; () banked
 34210  00DEDE  513D               	movf	_USBMSDOutHandle& (0+255),w,b
 34211  00DEE0  113E               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 34212  00DEE2  B4D8               	btfsc	status,2,c
 34213  00DEE4  D006               	goto	u16470
 34214                           
 34215                           ; BSR set to: 1
 34216  00DEE6  C13D  FFD9         	movff	_USBMSDOutHandle,fsr2l
 34217  00DEEA  C13E  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 34218  00DEEE  BEDF               	btfsc	indf2,7,c
 34219  00DEF0  D010               	goto	l602
 34220  00DEF2                     u16470:
 34221                           
 34222                           ; BSR set to: 1
 34223                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 34224                           
 34225                           ; BSR set to: 1
 34226  00DEF2  0E00               	movlw	0
 34227  00DEF4  0100               	movlb	0	; () banked
 34228  00DEF6  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 34229  00DEF8  0E40               	movlw	64
 34230  00DEFA  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 34231  00DEFC  0E0D               	movlw	13
 34232  00DEFE  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 34233  00DF00  0E40               	movlw	64
 34234  00DF02  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 34235  00DF04  0E02               	movlw	2
 34236  00DF06  EC8B  F089         	call	_USBTransferOnePacket
 34237  00DF0A  C060  F13D         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 34238  00DF0E  C061  F13E         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 34239  00DF12                     l602:
 34240                           
 34241                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 34242  00DF12  0E00               	movlw	0
 34243  00DF14                     L46:
 34244  00DF14  0101               	movlb	1	; () banked
 34245  00DF16  6F56               	movwf	_MSD_State& (0+255),b
 34246                           
 34247                           ;usb_device_msd.c: 513: break;
 34248  00DF18  D01B               	goto	l586
 34249  00DF1A                     
 34250                           ; BSR set to: 1
 34251                           ;usb_device_msd.c: 518: MSD_State=0x00;
 34252                           
 34253                           ; BSR set to: 1
 34254  00DF1A  0E00               	movlw	0
 34255  00DF1C  6F56               	movwf	_MSD_State& (0+255),b
 34256                           
 34257                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 34258  00DF1E  0E02               	movlw	2
 34259  00DF20  010D               	movlb	13	; () banked
 34260  00DF22  6F8C               	movwf	140,b	;volatile
 34261                           
 34262                           ; BSR set to: 13
 34263                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 34264  00DF24  0E00               	movlw	0
 34265  00DF26  0100               	movlb	0	; () banked
 34266  00DF28  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 34267  00DF2A  0E02               	movlw	2
 34268  00DF2C  EC06  F089         	call	_USBStallEndpoint
 34269                           
 34270                           ;usb_device_msd.c: 521: }
 34271  00DF30  D00F               	goto	l586
 34272  00DF32                     l570:
 34273  00DF32  0101               	movlb	1	; () banked
 34274  00DF34  5156               	movf	_MSD_State& (0+255),w,b
 34275                           
 34276                           ; Switch size 1, requested type "space"
 34277                           ; Number of cases is 4, Range of values is 0 to 3
 34278                           ; switch strategies available:
 34279                           ; Name         Instructions Cycles
 34280                           ; simple_byte           13     7 (average)
 34281                           ;	Chosen strategy is simple_byte
 34282  00DF36  0A00               	xorlw	0	; case 0
 34283  00DF38  B4D8               	btfsc	status,2,c
 34284  00DF3A  D6DD               	goto	l571
 34285  00DF3C  0A01               	xorlw	1	; case 1
 34286  00DF3E  B4D8               	btfsc	status,2,c
 34287  00DF40  D792               	goto	l587
 34288  00DF42  0A03               	xorlw	3	; case 2
 34289  00DF44  B4D8               	btfsc	status,2,c
 34290  00DF46  D795               	goto	l589
 34291  00DF48  0A01               	xorlw	1	; case 3
 34292  00DF4A  B4D8               	btfsc	status,2,c
 34293  00DF4C  D7A5               	goto	l592
 34294  00DF4E  D7E5               	goto	l605
 34295  00DF50                     l586:
 34296                           
 34297                           ;usb_device_msd.c: 524: {PIE2bits.USBIE = 1;};
 34298  00DF50  88A0               	bsf	4000,4,c	;volatile
 34299                           
 34300                           ;usb_device_msd.c: 526: return MSD_State;;	Return value of _MSDTasks is never used
 34301  00DF52  0012               	return		;funcret
 34302  00DF54                     __end_of_MSDTasks:
 34303                           	opt stack 0
 34304                           tblptru	equ	0xFF8
 34305                           tblptrh	equ	0xFF7
 34306                           tblptrl	equ	0xFF6
 34307                           tablat	equ	0xFF5
 34308                           prodh	equ	0xFF4
 34309                           prodl	equ	0xFF3
 34310                           intcon	equ	0xFF2
 34311                           postinc0	equ	0xFEE
 34312                           wreg	equ	0xFE8
 34313                           indf1	equ	0xFE7
 34314                           postinc1	equ	0xFE6
 34315                           postdec1	equ	0xFE5
 34316                           plusw1	equ	0xFE3
 34317                           fsr1h	equ	0xFE2
 34318                           fsr1l	equ	0xFE1
 34319                           indf2	equ	0xFDF
 34320                           postinc2	equ	0xFDE
 34321                           postdec2	equ	0xFDD
 34322                           plusw2	equ	0xFDB
 34323                           fsr2h	equ	0xFDA
 34324                           fsr2l	equ	0xFD9
 34325                           status	equ	0xFD8
 34326                           
 34327 ;; *************** function _MSDProcessCommand *****************
 34328 ;; Defined at:
 34329 ;;		line 553 in file "usb_device_msd.c"
 34330 ;; Parameters:    Size  Location     Type
 34331 ;;		None
 34332 ;; Auto vars:     Size  Location     Type
 34333 ;;		None
 34334 ;; Return value:  Size  Location     Type
 34335 ;;                  1    wreg      unsigned char 
 34336 ;; Registers used:
 34337 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34338 ;; Tracked objects:
 34339 ;;		On entry : 0/0
 34340 ;;		On exit  : 0/0
 34341 ;;		Unchanged: 0/0
 34342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34345 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34346 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34347 ;;Total ram usage:        5 bytes
 34348 ;; Hardware stack levels used:    1
 34349 ;; Hardware stack levels required when called:   19
 34350 ;; This function calls:
 34351 ;;		_ExternalFlash_MediaDetect
 34352 ;;		_ExternalFlash_MediaInitialize
 34353 ;;		_MSDProcessCommandMediaAbsent
 34354 ;;		_MSDProcessCommandMediaPresent
 34355 ;; This function is called by:
 34356 ;;		_MSDTasks
 34357 ;; This function uses a non-reentrant model
 34358 ;;
 34359                           
 34360                           	psect	text133
 34361  0106EC                     __ptext133:
 34362                           	opt stack 0
 34363  0106EC                     _MSDProcessCommand:
 34364                           	opt stack 9
 34365                           
 34366                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 34367                           
 34368                           ;incstack = 0
 34369  0106EC  C2AC  F060         	movff	_LUN+21,ExternalFlash_MediaDetect@config
 34370  0106F0  C2AD  F061         	movff	_LUN+22,ExternalFlash_MediaDetect@config+1
 34371  0106F4  EE22  F0A0         	lfsr	2,_LUN+9
 34372  0106F8  D801               	call	u14978
 34373  0106FA  D00A               	goto	u14979
 34374  0106FC                     u14978:
 34375  0106FC  0005               	push	
 34376  0106FE  6EFA               	movwf	pclath,c
 34377  010700  50DE               	movf	postinc2,w,c
 34378  010702  6EFD               	movwf	tosl,c
 34379  010704  50DE               	movf	postinc2,w,c
 34380  010706  6EFE               	movwf	tosh,c
 34381  010708  50DE               	movf	postinc2,w,c
 34382  01070A  6EFF               	movwf	tosu,c
 34383  01070C  50FA               	movf	pclath,w,c
 34384  01070E  0012               	return		;indir
 34385  010710                     u14979:
 34386  010710  0900               	iorlw	0
 34387  010712  B4D8               	btfsc	status,2,c
 34388  010714  D00C               	goto	u14990
 34389  010716  0102               	movlb	2	; () banked
 34390  010718  510D               	movf	(_gblCBW+13)& (0+255),w,b
 34391  01071A  0D01               	mullw	1
 34392  01071C  0E50               	movlw	low _SoftDetach
 34393  01071E  24F3               	addwf	prodl,w,c
 34394  010720  6ED9               	movwf	fsr2l,c
 34395  010722  0E01               	movlw	high _SoftDetach
 34396  010724  20F4               	addwfc	prodh,w,c
 34397  010726  6EDA               	movwf	fsr2h,c
 34398  010728  04DE               	decf	postinc2,w,c
 34399  01072A  A4D8               	btfss	status,2,c
 34400  01072C  D01D               	goto	l608
 34401  01072E                     u14990:
 34402                           
 34403                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 34404                           
 34405                           ; BSR set to: 2
 34406  01072E  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34407  010732  0E01               	movlw	1
 34408  010734  0100               	movlb	0	; () banked
 34409  010736  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34410  010738  0E00               	movlw	0
 34411  01073A  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34412  01073C  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34413  01073E  D003               	goto	u15004
 34414  010740                     u15005:
 34415  010740  90D8               	bcf	status,0,c
 34416  010742  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34417  010744  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34418  010746                     u15004:
 34419  010746  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34420  010748  D7FB               	goto	u15005
 34421  01074A  0100               	movlb	0	; () banked
 34422  01074C  1DA8               	comf	(??_MSDProcessCommand+1)& (0+255),w,b
 34423  01074E  6FAA               	movwf	(??_MSDProcessCommand+3)& (0+255),b
 34424  010750  1DA9               	comf	(??_MSDProcessCommand+2)& (0+255),w,b
 34425  010752  6FAB               	movwf	(??_MSDProcessCommand+4)& (0+255),b
 34426  010754  51AA               	movf	(??_MSDProcessCommand+3)& (0+255),w,b
 34427  010756  0102               	movlb	2	; () banked
 34428  010758  173E               	andwf	_gblMediaPresent& (0+255),f,b
 34429  01075A  0100               	movlb	0	; () banked
 34430  01075C  51AB               	movf	(??_MSDProcessCommand+4)& (0+255),w,b
 34431  01075E  0102               	movlb	2	; () banked
 34432  010760  173F               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 34433                           
 34434                           ; BSR set to: 2
 34435                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 34436  010762  EC5F  F0A3         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34437                           
 34438                           ;usb_device_msd.c: 563: }
 34439  010766  D059               	goto	l615
 34440  010768                     l608:
 34441                           
 34442                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 34443  010768  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34444  01076C  0E01               	movlw	1
 34445  01076E  0100               	movlb	0	; () banked
 34446  010770  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34447  010772  0E00               	movlw	0
 34448  010774  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34449  010776  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34450  010778  D003               	goto	u15014
 34451  01077A                     u15015:
 34452  01077A  90D8               	bcf	status,0,c
 34453  01077C  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34454  01077E  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34455  010780                     u15014:
 34456  010780  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34457  010782  D7FB               	goto	u15015
 34458  010784  0102               	movlb	2	; () banked
 34459  010786  513E               	movf	_gblMediaPresent& (0+255),w,b
 34460  010788  0100               	movlb	0	; () banked
 34461  01078A  17A8               	andwf	(??_MSDProcessCommand+1)& (0+255),f,b
 34462  01078C  0102               	movlb	2	; () banked
 34463  01078E  513F               	movf	(_gblMediaPresent+1)& (0+255),w,b
 34464  010790  0100               	movlb	0	; () banked
 34465  010792  17A9               	andwf	(??_MSDProcessCommand+2)& (0+255),f,b
 34466  010794  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34467  010796  11A9               	iorwf	(??_MSDProcessCommand+2)& (0+255),w,b
 34468  010798  A4D8               	btfss	status,2,c
 34469  01079A  D03D               	goto	l612
 34470                           
 34471                           ; BSR set to: 0
 34472                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 34473  01079C  C2AC  F060         	movff	_LUN+21,ExternalFlash_MediaInitialize@config
 34474  0107A0  C2AD  F061         	movff	_LUN+22,ExternalFlash_MediaInitialize@config+1
 34475  0107A4  D801               	call	u15038
 34476  0107A6  D00B               	goto	u15039
 34477  0107A8                     u15038:
 34478  0107A8  0005               	push	
 34479  0107AA  6EFA               	movwf	pclath,c
 34480  0107AC  0102               	movlb	2	; () banked
 34481  0107AE  5197               	movf	_LUN& (0+255),w,b
 34482  0107B0  6EFD               	movwf	tosl,c
 34483  0107B2  5198               	movf	(_LUN+1)& (0+255),w,b
 34484  0107B4  6EFE               	movwf	tosh,c
 34485  0107B6  5199               	movf	(_LUN+2)& (0+255),w,b
 34486  0107B8  6EFF               	movwf	tosu,c
 34487  0107BA  50FA               	movf	pclath,w,c
 34488  0107BC  0012               	return		;indir
 34489  0107BE                     u15039:
 34490  0107BE  0100               	movlb	0	; () banked
 34491  0107C0  5160               	movf	?_ExternalFlash_MediaInitialize& (0+255),w,b
 34492  0107C2  1161               	iorwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),w,b
 34493  0107C4  B4D8               	btfsc	status,2,c
 34494  0107C6  D024               	goto	l613
 34495                           
 34496                           ; BSR set to: 0
 34497                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 34498  0107C8  C20D  F0A7         	movff	_gblCBW+13,??_MSDProcessCommand
 34499  0107CC  0E01               	movlw	1
 34500  0107CE  6FA8               	movwf	(??_MSDProcessCommand+1)& (0+255),b
 34501  0107D0  0E00               	movlw	0
 34502  0107D2  6FA9               	movwf	(??_MSDProcessCommand+2)& (0+255),b
 34503  0107D4  2BA7               	incf	??_MSDProcessCommand& (0+255),f,b
 34504  0107D6  D003               	goto	u15054
 34505  0107D8                     u15055:
 34506  0107D8  90D8               	bcf	status,0,c
 34507  0107DA  37A8               	rlcf	(??_MSDProcessCommand+1)& (0+255),f,b
 34508  0107DC  37A9               	rlcf	(??_MSDProcessCommand+2)& (0+255),f,b
 34509  0107DE                     u15054:
 34510  0107DE  2FA7               	decfsz	??_MSDProcessCommand& (0+255),f,b
 34511  0107E0  D7FB               	goto	u15055
 34512  0107E2  0100               	movlb	0	; () banked
 34513  0107E4  51A8               	movf	(??_MSDProcessCommand+1)& (0+255),w,b
 34514  0107E6  0102               	movlb	2	; () banked
 34515  0107E8  133E               	iorwf	_gblMediaPresent& (0+255),f,b
 34516  0107EA  0100               	movlb	0	; () banked
 34517  0107EC  51A9               	movf	(??_MSDProcessCommand+2)& (0+255),w,b
 34518  0107EE  0102               	movlb	2	; () banked
 34519  0107F0  133F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 34520                           
 34521                           ; BSR set to: 2
 34522                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 34523  0107F2  0101               	movlb	1	; () banked
 34524  0107F4  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 34525  0107F6  0BF0               	andlw	-16
 34526  0107F8  0906               	iorlw	6
 34527  0107FA  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 34528                           
 34529                           ; BSR set to: 1
 34530                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 34531  0107FC  0E28               	movlw	40
 34532  0107FE  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 34533                           
 34534                           ; BSR set to: 1
 34535                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 34536  010800  0E00               	movlw	0
 34537  010802  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 34538                           
 34539                           ; BSR set to: 1
 34540                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 34541  010804  0E01               	movlw	1
 34542  010806  010D               	movlb	13	; () banked
 34543  010808  6F8C               	movwf	140,b	;volatile
 34544                           
 34545                           ; BSR set to: 13
 34546                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 34547  01080A  ECC5  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34548                           
 34549                           ;usb_device_msd.c: 589: }
 34550  01080E  D005               	goto	l615
 34551  010810                     l613:
 34552                           
 34553                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 34554  010810  EC5F  F0A3         	call	_MSDProcessCommandMediaAbsent	;wreg free
 34555                           
 34556                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 34557  010814  D002               	goto	l615
 34558  010816                     l612:
 34559                           
 34560                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 34561  010816  ECC5  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34562  01081A                     l615:
 34563                           
 34564                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 34565  01081A  0101               	movlb	1	; () banked
 34566  01081C  5155               	movf	_MSDCommandState& (0+255),w,b
 34567  01081E  0012               	return	
 34568  010820                     __end_of_MSDProcessCommand:
 34569                           	opt stack 0
 34570                           tosu	equ	0xFFF
 34571                           tosh	equ	0xFFE
 34572                           tosl	equ	0xFFD
 34573                           pclath	equ	0xFFA
 34574                           tblptru	equ	0xFF8
 34575                           tblptrh	equ	0xFF7
 34576                           tblptrl	equ	0xFF6
 34577                           tablat	equ	0xFF5
 34578                           prodh	equ	0xFF4
 34579                           prodl	equ	0xFF3
 34580                           intcon	equ	0xFF2
 34581                           postinc0	equ	0xFEE
 34582                           wreg	equ	0xFE8
 34583                           indf1	equ	0xFE7
 34584                           postinc1	equ	0xFE6
 34585                           postdec1	equ	0xFE5
 34586                           plusw1	equ	0xFE3
 34587                           fsr1h	equ	0xFE2
 34588                           fsr1l	equ	0xFE1
 34589                           indf2	equ	0xFDF
 34590                           postinc2	equ	0xFDE
 34591                           postdec2	equ	0xFDD
 34592                           plusw2	equ	0xFDB
 34593                           fsr2h	equ	0xFDA
 34594                           fsr2l	equ	0xFD9
 34595                           status	equ	0xFD8
 34596                           
 34597 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 34598 ;; Defined at:
 34599 ;;		line 635 in file "usb_device_msd.c"
 34600 ;; Parameters:    Size  Location     Type
 34601 ;;		None
 34602 ;; Auto vars:     Size  Location     Type
 34603 ;;		None
 34604 ;; Return value:  Size  Location     Type
 34605 ;;                  1    wreg      void 
 34606 ;; Registers used:
 34607 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34608 ;; Tracked objects:
 34609 ;;		On entry : 0/0
 34610 ;;		On exit  : 0/0
 34611 ;;		Unchanged: 0/0
 34612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34615 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34616 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34617 ;;Total ram usage:        0 bytes
 34618 ;; Hardware stack levels used:    1
 34619 ;; Hardware stack levels required when called:   18
 34620 ;; This function calls:
 34621 ;;		_MSDErrorHandler
 34622 ;;		_MSDProcessCommandMediaPresent
 34623 ;;		_ResetSenseData
 34624 ;; This function is called by:
 34625 ;;		_MSDProcessCommand
 34626 ;; This function uses a non-reentrant model
 34627 ;;
 34628                           
 34629                           	psect	text134
 34630  0146BE                     __ptext134:
 34631                           	opt stack 0
 34632  0146BE                     _MSDProcessCommandMediaAbsent:
 34633                           	opt stack 9
 34634                           
 34635                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 34636                           
 34637                           ; BSR set to: 1
 34638                           ;incstack = 0
 34639  0146BE  D01E               	goto	l619
 34640  0146C0                     
 34641                           ;usb_device_msd.c: 646: ResetSenseData();
 34642  0146C0  EC90  F0A3         	call	_ResetSenseData	;wreg free
 34643                           
 34644                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 34645  0146C4  0101               	movlb	1	; () banked
 34646  0146C6  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 34647  0146C8  0BF0               	andlw	-16
 34648  0146CA  0902               	iorlw	2
 34649  0146CC  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 34650                           
 34651                           ; BSR set to: 1
 34652                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 34653  0146CE  0E3A               	movlw	58
 34654  0146D0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 34655                           
 34656                           ; BSR set to: 1
 34657                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 34658  0146D2  0E00               	movlw	0
 34659  0146D4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 34660                           
 34661                           ; BSR set to: 1
 34662                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 34663  0146D6  ECC5  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34664                           
 34665                           ;usb_device_msd.c: 655: break;
 34666  0146DA  0012               	return	
 34667  0146DC                     
 34668                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 34669  0146DC  0E01               	movlw	1
 34670  0146DE  010D               	movlb	13	; () banked
 34671  0146E0  6F8C               	movwf	140,b	;volatile
 34672                           
 34673                           ; BSR set to: 13
 34674                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 34675  0146E2  0101               	movlb	1	; () banked
 34676  0146E4  6955               	setf	_MSDCommandState& (0+255),b
 34677                           
 34678                           ;usb_device_msd.c: 665: break;
 34679  0146E6  0012               	return	
 34680  0146E8                     
 34681                           ; BSR set to: 1
 34682                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 34683                           
 34684                           ; BSR set to: 1
 34685  0146E8  ECC5  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34686                           
 34687                           ;usb_device_msd.c: 671: break;
 34688  0146EC  0012               	return	
 34689  0146EE                     
 34690                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 34691  0146EE  ECC5  F05E         	call	_MSDProcessCommandMediaPresent	;wreg free
 34692                           
 34693                           ;usb_device_msd.c: 677: break;
 34694  0146F2  0012               	return	
 34695  0146F4                     
 34696                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 34697  0146F4  0E7F               	movlw	127
 34698  0146F6  EC59  F086         	call	_MSDErrorHandler
 34699                           
 34700                           ;usb_device_msd.c: 685: }
 34701                           
 34702                           ;usb_device_msd.c: 684: break;
 34703  0146FA  0012               	return	
 34704  0146FC                     l619:
 34705  0146FC  0101               	movlb	1	; () banked
 34706  0146FE  5155               	movf	_MSDCommandState& (0+255),w,b
 34707                           
 34708                           ; Switch size 1, requested type "space"
 34709                           ; Number of cases is 5, Range of values is 0 to 253
 34710                           ; switch strategies available:
 34711                           ; Name         Instructions Cycles
 34712                           ; simple_byte           16     9 (average)
 34713                           ;	Chosen strategy is simple_byte
 34714  014700  0A00               	xorlw	0	; case 0
 34715  014702  B4D8               	btfsc	status,2,c
 34716  014704  D7EB               	goto	l622
 34717  014706  0A03               	xorlw	3	; case 3
 34718  014708  B4D8               	btfsc	status,2,c
 34719  01470A  D7DA               	goto	l620
 34720  01470C  0A11               	xorlw	17	; case 18
 34721  01470E  B4D8               	btfsc	status,2,c
 34722  014710  D7EB               	goto	l624
 34723  014712  0A0C               	xorlw	12	; case 30
 34724  014714  B4D8               	btfsc	status,2,c
 34725  014716  D7E2               	goto	l622
 34726  014718  0AE3               	xorlw	227	; case 253
 34727  01471A  B4D8               	btfsc	status,2,c
 34728  01471C  D7E8               	goto	l625
 34729  01471E  D7EA               	goto	l626
 34730  014720                     __end_of_MSDProcessCommandMediaAbsent:
 34731                           	opt stack 0
 34732                           tosu	equ	0xFFF
 34733                           tosh	equ	0xFFE
 34734                           tosl	equ	0xFFD
 34735                           pclath	equ	0xFFA
 34736                           tblptru	equ	0xFF8
 34737                           tblptrh	equ	0xFF7
 34738                           tblptrl	equ	0xFF6
 34739                           tablat	equ	0xFF5
 34740                           prodh	equ	0xFF4
 34741                           prodl	equ	0xFF3
 34742                           intcon	equ	0xFF2
 34743                           postinc0	equ	0xFEE
 34744                           wreg	equ	0xFE8
 34745                           indf1	equ	0xFE7
 34746                           postinc1	equ	0xFE6
 34747                           postdec1	equ	0xFE5
 34748                           plusw1	equ	0xFE3
 34749                           fsr1h	equ	0xFE2
 34750                           fsr1l	equ	0xFE1
 34751                           indf2	equ	0xFDF
 34752                           postinc2	equ	0xFDE
 34753                           postdec2	equ	0xFDD
 34754                           plusw2	equ	0xFDB
 34755                           fsr2h	equ	0xFDA
 34756                           fsr2l	equ	0xFD9
 34757                           status	equ	0xFD8
 34758                           
 34759 ;; *************** function _MSDProcessCommandMediaPresent *****************
 34760 ;; Defined at:
 34761 ;;		line 712 in file "usb_device_msd.c"
 34762 ;; Parameters:    Size  Location     Type
 34763 ;;		None
 34764 ;; Auto vars:     Size  Location     Type
 34765 ;;  capacity        4   66[BANK0 ] struct .
 34766 ;;  sectorSize      4   62[BANK0 ] struct .
 34767 ;;  i               1   70[BANK0 ] unsigned char 
 34768 ;;  NumBytesInPa    1   61[BANK0 ] unsigned char 
 34769 ;; Return value:  Size  Location     Type
 34770 ;;                  1    wreg      void 
 34771 ;; Registers used:
 34772 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 34773 ;; Tracked objects:
 34774 ;;		On entry : 0/0
 34775 ;;		On exit  : 0/0
 34776 ;;		Unchanged: 0/0
 34777 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34778 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34779 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34780 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34781 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34782 ;;Total ram usage:       14 bytes
 34783 ;; Hardware stack levels used:    1
 34784 ;; Hardware stack levels required when called:   17
 34785 ;; This function calls:
 34786 ;;		_ExternalFlash_CapacityRead
 34787 ;;		_ExternalFlash_SectorSizeRead
 34788 ;;		_ExternalFlash_WriteProtectStateGet
 34789 ;;		_MSDCheckForErrorCases
 34790 ;;		_MSDComputeDeviceInAndResidue
 34791 ;;		_MSDErrorHandler
 34792 ;;		_MSDReadHandler
 34793 ;;		_MSDWriteHandler
 34794 ;;		_ResetSenseData
 34795 ;;		_USBTransferOnePacket
 34796 ;;		_memcpy
 34797 ;; This function is called by:
 34798 ;;		_MSDProcessCommand
 34799 ;;		_MSDProcessCommandMediaAbsent
 34800 ;; This function uses a non-reentrant model
 34801 ;;
 34802                           
 34803                           	psect	text135
 34804  00BD8A                     __ptext135:
 34805                           	opt stack 0
 34806  00BD8A                     _MSDProcessCommandMediaPresent:
 34807                           	opt stack 10
 34808                           
 34809                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 34810                           
 34811                           ;incstack = 0
 34812  00BD8A  D1D0               	goto	l630
 34813  00BD8C                     
 34814                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 34815  00BD8C  ECF3  F073         	call	_MSDReadHandler	;wreg free
 34816  00BD90  0900               	iorlw	0
 34817  00BD92  A4D8               	btfss	status,2,c
 34818  00BD94  0012               	return	
 34819                           
 34820                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 34821  00BD96  0101               	movlb	1	; () banked
 34822  00BD98  6955               	setf	_MSDCommandState& (0+255),b
 34823                           
 34824                           ; BSR set to: 1
 34825                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 34826  00BD9A  0012               	return	
 34827  00BD9C                     
 34828                           ; BSR set to: 1
 34829                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 34830                           
 34831                           ; BSR set to: 1
 34832  00BD9C  ECBF  F067         	call	_MSDWriteHandler	;wreg free
 34833  00BDA0  0900               	iorlw	0
 34834  00BDA2  A4D8               	btfss	status,2,c
 34835  00BDA4  0012               	return	
 34836                           
 34837                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 34838  00BDA6  0101               	movlb	1	; () banked
 34839  00BDA8  6955               	setf	_MSDCommandState& (0+255),b
 34840                           
 34841                           ; BSR set to: 1
 34842                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 34843  00BDAA  0012               	return	
 34844  00BDAC                     
 34845                           ; BSR set to: 1
 34846                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 34847                           
 34848                           ; BSR set to: 1
 34849  00BDAC  054F               	decf	_MSDHostNoData& (0+255),w,b
 34850  00BDAE  A4D8               	btfss	status,2,c
 34851  00BDB0  D002               	goto	l637
 34852                           
 34853                           ; BSR set to: 1
 34854                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 34855  00BDB2  6955               	setf	_MSDCommandState& (0+255),b
 34856                           
 34857                           ;usb_device_msd.c: 751: break;
 34858  00BDB4  0012               	return	
 34859  00BDB6                     l637:
 34860                           
 34861                           ; BSR set to: 1
 34862                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 34863  00BDB6  C212  F13A         	movff	_gblCBW+18,_TransferLength+1
 34864                           
 34865                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 34866  00BDBA  C213  F139         	movff	_gblCBW+19,_TransferLength
 34867                           
 34868                           ; BSR set to: 1
 34869                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 34870  00BDBE  C139  F06A         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 34871  00BDC2  C13A  F06B         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 34872  00BDC6  0100               	movlb	0	; () banked
 34873  00BDC8  6B6C               	clrf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 34874  00BDCA  6B6D               	clrf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 34875  00BDCC  ECE6  F086         	call	_MSDCheckForErrorCases	;wreg free
 34876  00BDD0  0900               	iorlw	0
 34877  00BDD2  A4D8               	btfss	status,2,c
 34878  00BDD4  0012               	return	
 34879                           
 34880                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 34881                           
 34882                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 34883  00BDD6  0E00               	movlw	0
 34884  00BDD8  0100               	movlb	0	; () banked
 34885  00BDDA  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 34886  00BDDC  0E24               	movlw	36
 34887  00BDDE  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 34888  00BDE0  EC89  F096         	call	_MSDComputeDeviceInAndResidue	;wreg free
 34889                           
 34890                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 34891  00BDE4  0E00               	movlw	0
 34892  00BDE6  0100               	movlb	0	; () banked
 34893  00BDE8  6F60               	movwf	memcpy@d1& (0+255),b
 34894  00BDEA  0E06               	movlw	6
 34895  00BDEC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 34896  00BDEE  0E60               	movlw	low _inq_resp
 34897  00BDF0  6F62               	movwf	memcpy@s1& (0+255),b
 34898  00BDF2  0EA1               	movlw	high _inq_resp
 34899  00BDF4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 34900  00BDF6  0E00               	movlw	0
 34901  00BDF8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 34902  00BDFA  0E24               	movlw	36
 34903  00BDFC  6F64               	movwf	memcpy@n& (0+255),b
 34904  00BDFE  ECF2  F0A3         	call	_memcpy	;wreg free
 34905                           
 34906                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 34907  00BE02  0EFD               	movlw	253
 34908  00BE04  0101               	movlb	1	; () banked
 34909  00BE06  6F55               	movwf	_MSDCommandState& (0+255),b
 34910                           
 34911                           ;usb_device_msd.c: 773: break;
 34912  00BE08  0012               	return	
 34913  00BE0A                     
 34914                           ; BSR set to: 1
 34915                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 34916                           
 34917                           ; BSR set to: 1
 34918  00BE0A  C2AC  F060         	movff	_LUN+21,ExternalFlash_CapacityRead@config
 34919  00BE0E  C2AD  F061         	movff	_LUN+22,ExternalFlash_CapacityRead@config+1
 34920  00BE12  EE22  F09A         	lfsr	2,_LUN+3
 34921  00BE16  D801               	call	u12328
 34922  00BE18  D00A               	goto	u12329
 34923  00BE1A                     u12328:
 34924  00BE1A  0005               	push	
 34925  00BE1C  6EFA               	movwf	pclath,c
 34926  00BE1E  50DE               	movf	postinc2,w,c
 34927  00BE20  6EFD               	movwf	tosl,c
 34928  00BE22  50DE               	movf	postinc2,w,c
 34929  00BE24  6EFE               	movwf	tosh,c
 34930  00BE26  50DE               	movf	postinc2,w,c
 34931  00BE28  6EFF               	movwf	tosu,c
 34932  00BE2A  50FA               	movf	pclath,w,c
 34933  00BE2C  0012               	return		;indir
 34934  00BE2E                     u12329:
 34935  00BE2E  C060  F0A2         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 34936  00BE32  C061  F0A3         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 34937  00BE36  C062  F0A4         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 34938  00BE3A  C063  F0A5         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 34939                           
 34940                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 34941  00BE3E  C2AC  F060         	movff	_LUN+21,ExternalFlash_SectorSizeRead@config
 34942  00BE42  C2AD  F061         	movff	_LUN+22,ExternalFlash_SectorSizeRead@config+1
 34943  00BE46  EE22  F09D         	lfsr	2,_LUN+6
 34944  00BE4A  D801               	call	u12338
 34945  00BE4C  D00A               	goto	u12339
 34946  00BE4E                     u12338:
 34947  00BE4E  0005               	push	
 34948  00BE50  6EFA               	movwf	pclath,c
 34949  00BE52  50DE               	movf	postinc2,w,c
 34950  00BE54  6EFD               	movwf	tosl,c
 34951  00BE56  50DE               	movf	postinc2,w,c
 34952  00BE58  6EFE               	movwf	tosh,c
 34953  00BE5A  50DE               	movf	postinc2,w,c
 34954  00BE5C  6EFF               	movwf	tosu,c
 34955  00BE5E  50FA               	movf	pclath,w,c
 34956  00BE60  0012               	return		;indir
 34957  00BE62                     u12339:
 34958  00BE62  0100               	movlb	0	; () banked
 34959  00BE64  C060  F09E         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 34960  00BE68  C061  F09F         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 34961  00BE6C  6BA0               	clrf	(MSDProcessCommandMediaPresent@sectorSize+2)& (0+255),b
 34962  00BE6E  6BA1               	clrf	(MSDProcessCommandMediaPresent@sectorSize+3)& (0+255),b
 34963                           
 34964                           ; BSR set to: 0
 34965                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 34966  00BE70  EE26 F000          	lfsr	2,1536
 34967  00BE74  C0A5  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 34968                           
 34969                           ; BSR set to: 0
 34970                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 34971  00BE78  EE26 F001          	lfsr	2,1537	;volatile
 34972  00BE7C  C0A4  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 34973                           
 34974                           ; BSR set to: 0
 34975                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 34976  00BE80  EE26 F002          	lfsr	2,1538	;volatile
 34977  00BE84  C0A3  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 34978                           
 34979                           ; BSR set to: 0
 34980                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 34981  00BE88  EE26 F003          	lfsr	2,1539	;volatile
 34982  00BE8C  C0A2  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 34983                           
 34984                           ; BSR set to: 0
 34985                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 34986  00BE90  EE26 F004          	lfsr	2,1540	;volatile
 34987  00BE94  C0A1  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 34988                           
 34989                           ; BSR set to: 0
 34990                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 34991  00BE98  EE26 F005          	lfsr	2,1541	;volatile
 34992  00BE9C  C0A0  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 34993                           
 34994                           ; BSR set to: 0
 34995                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 34996  00BEA0  EE26 F006          	lfsr	2,1542	;volatile
 34997  00BEA4  C09F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 34998                           
 34999                           ; BSR set to: 0
 35000                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 35001  00BEA8  EE26 F007          	lfsr	2,1543	;volatile
 35002  00BEAC  C09E  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 35003                           
 35004                           ; BSR set to: 0
 35005                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 35006  00BEB0  0E00               	movlw	0
 35007  00BEB2  0101               	movlb	1	; () banked
 35008  00BEB4  6F3A               	movwf	(_TransferLength+1)& (0+255),b
 35009  00BEB6  0E08               	movlw	8
 35010  00BEB8  6F39               	movwf	_TransferLength& (0+255),b
 35011                           
 35012                           ; BSR set to: 1
 35013                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 35014  00BEBA  0E00               	movlw	0
 35015  00BEBC  0100               	movlb	0	; () banked
 35016  00BEBE  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35017  00BEC0  0E08               	movlw	8
 35018  00BEC2  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35019  00BEC4  EC89  F096         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35020                           
 35021                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 35022  00BEC8  0EFD               	movlw	253
 35023  00BECA  0101               	movlb	1	; () banked
 35024  00BECC  6F55               	movwf	_MSDCommandState& (0+255),b
 35025                           
 35026                           ;usb_device_msd.c: 802: break;
 35027  00BECE  0012               	return	
 35028  00BED0                     
 35029                           ; BSR set to: 1
 35030                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 35031                           
 35032                           ; BSR set to: 1
 35033  00BED0  054F               	decf	_MSDHostNoData& (0+255),w,b
 35034  00BED2  A4D8               	btfss	status,2,c
 35035  00BED4  D002               	goto	l641
 35036                           
 35037                           ; BSR set to: 1
 35038                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 35039  00BED6  6955               	setf	_MSDCommandState& (0+255),b
 35040                           
 35041                           ;usb_device_msd.c: 814: break;
 35042  00BED8  0012               	return	
 35043  00BEDA                     l641:
 35044                           
 35045                           ; BSR set to: 1
 35046                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 35047                           
 35048                           ; BSR set to: 1
 35049  00BEDA  0E00               	movlw	0
 35050  00BEDC  6F3A               	movwf	(_TransferLength+1)& (0+255),b
 35051  00BEDE  0E12               	movlw	18
 35052  00BEE0  6F39               	movwf	_TransferLength& (0+255),b
 35053                           
 35054                           ; BSR set to: 1
 35055                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 35056  00BEE2  0E00               	movlw	0
 35057  00BEE4  0100               	movlb	0	; () banked
 35058  00BEE6  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35059  00BEE8  0E12               	movlw	18
 35060  00BEEA  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35061  00BEEC  EC89  F096         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35062                           
 35063                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 35064  00BEF0  0E00               	movlw	0
 35065  00BEF2  0100               	movlb	0	; () banked
 35066  00BEF4  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35067  00BEF6                     l13770:
 35068                           
 35069                           ; BSR set to: 0
 35070  00BEF6  0E11               	movlw	17
 35071  00BEF8  65A6               	cpfsgt	MSDProcessCommandMediaPresent@i& (0+255),b
 35072  00BEFA  D001               	goto	l642
 35073  00BEFC  D014               	goto	u12360
 35074  00BEFE                     l642:
 35075                           
 35076                           ; BSR set to: 0
 35077                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 35078                           
 35079                           ; BSR set to: 0
 35080  00BEFE  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35081  00BF00  0D01               	mullw	1
 35082  00BF02  0E00               	movlw	low _gblSenseData
 35083  00BF04  24F3               	addwf	prodl,w,c
 35084  00BF06  6ED9               	movwf	fsr2l,c
 35085  00BF08  0E01               	movlw	high _gblSenseData
 35086  00BF0A  20F4               	addwfc	prodh,w,c
 35087  00BF0C  6EDA               	movwf	fsr2h,c
 35088  00BF0E  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35089  00BF10  0D01               	mullw	1
 35090  00BF12  0E00               	movlw	0
 35091  00BF14  24F3               	addwf	prodl,w,c
 35092  00BF16  6EE1               	movwf	fsr1l,c
 35093  00BF18  0E06               	movlw	6
 35094  00BF1A  20F4               	addwfc	prodh,w,c
 35095  00BF1C  6EE2               	movwf	fsr1h,c
 35096  00BF1E  CFDF FFE7          	movff	indf2,indf1
 35097                           
 35098                           ; BSR set to: 0
 35099  00BF22  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35100  00BF24  D7E8               	goto	l13770
 35101  00BF26                     u12360:
 35102                           
 35103                           ; BSR set to: 0
 35104                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 35105                           
 35106                           ; BSR set to: 0
 35107  00BF26  0EFD               	movlw	253
 35108  00BF28  0101               	movlb	1	; () banked
 35109  00BF2A  6F55               	movwf	_MSDCommandState& (0+255),b
 35110                           
 35111                           ;usb_device_msd.c: 827: break;
 35112  00BF2C  0012               	return	
 35113  00BF2E                     l644:
 35114                           
 35115                           ; BSR set to: 1
 35116                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 35117  00BF2E  0E03               	movlw	3
 35118  00BF30  CFE8 F600          	movff	wreg,1536
 35119                           
 35120                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 35121  00BF34  0E00               	movlw	0
 35122  00BF36  CFE8 F601          	movff	wreg,1537	;volatile
 35123                           
 35124                           ; BSR set to: 1
 35125                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 35126  00BF3A  C2AC  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35127  00BF3E  C2AD  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35128  00BF42  EE22  F0A6         	lfsr	2,_LUN+15
 35129  00BF46  D801               	call	u12378
 35130  00BF48  D00A               	goto	u12379
 35131  00BF4A                     u12378:
 35132  00BF4A  0005               	push	
 35133  00BF4C  6EFA               	movwf	pclath,c
 35134  00BF4E  50DE               	movf	postinc2,w,c
 35135  00BF50  6EFD               	movwf	tosl,c
 35136  00BF52  50DE               	movf	postinc2,w,c
 35137  00BF54  6EFE               	movwf	tosh,c
 35138  00BF56  50DE               	movf	postinc2,w,c
 35139  00BF58  6EFF               	movwf	tosu,c
 35140  00BF5A  50FA               	movf	pclath,w,c
 35141  00BF5C  0012               	return		;indir
 35142  00BF5E                     u12379:
 35143  00BF5E  0900               	iorlw	0
 35144  00BF60  A4D8               	btfss	status,2,c
 35145  00BF62  D005               	goto	l646
 35146  00BF64  0E00               	movlw	0
 35147  00BF66  0100               	movlb	0	; () banked
 35148  00BF68  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35149  00BF6A  0E00               	movlw	0
 35150  00BF6C  D004               	goto	L49
 35151  00BF6E                     l646:
 35152                           
 35153                           ; BSR set to: 0
 35154  00BF6E  0E00               	movlw	0
 35155  00BF70  0100               	movlb	0	; () banked
 35156  00BF72  6F9C               	movwf	(_MSDProcessCommandMediaPresent$2606+1)& (0+255),b
 35157  00BF74  0E80               	movlw	128
 35158  00BF76                     L49:
 35159  00BF76  6F9B               	movwf	_MSDProcessCommandMediaPresent$2606& (0+255),b
 35160                           
 35161                           ; BSR set to: 0
 35162                           
 35163                           ; BSR set to: 0
 35164  00BF78  EE26 F002          	lfsr	2,1538	;volatile
 35165  00BF7C  C09B  FFDF         	movff	_MSDProcessCommandMediaPresent$2606,indf2
 35166                           
 35167                           ; BSR set to: 0
 35168                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 35169  00BF80  0E00               	movlw	0
 35170  00BF82  CFE8 F603          	movff	wreg,1539	;volatile
 35171                           
 35172                           ; BSR set to: 0
 35173                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 35174  00BF86  0E00               	movlw	0
 35175  00BF88  0101               	movlb	1	; () banked
 35176  00BF8A  6F3A               	movwf	(_TransferLength+1)& (0+255),b
 35177  00BF8C  0E04               	movlw	4
 35178  00BF8E  6F39               	movwf	_TransferLength& (0+255),b
 35179                           
 35180                           ; BSR set to: 1
 35181                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 35182  00BF90  0E00               	movlw	0
 35183  00BF92  0100               	movlb	0	; () banked
 35184  00BF94  6F61               	movwf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),b
 35185  00BF96  0E04               	movlw	4
 35186  00BF98  6F60               	movwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),b
 35187  00BF9A  EC89  F096         	call	_MSDComputeDeviceInAndResidue	;wreg free
 35188                           
 35189                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 35190  00BF9E  0EFD               	movlw	253
 35191  00BFA0  0101               	movlb	1	; () banked
 35192  00BFA2  6F55               	movwf	_MSDCommandState& (0+255),b
 35193                           
 35194                           ;usb_device_msd.c: 839: break;
 35195  00BFA4  0012               	return	
 35196  00BFA6                     
 35197                           ; BSR set to: 1
 35198                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 35199                           
 35200                           ; BSR set to: 1
 35201  00BFA6  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35202  00BFA8  0BF0               	andlw	-16
 35203  00BFAA  0905               	iorlw	5
 35204  00BFAC  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35205                           
 35206                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 35207  00BFAE  0E20               	movlw	32
 35208  00BFB0  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35209                           
 35210                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 35211  00BFB2  0E00               	movlw	0
 35212  00BFB4  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35213                           
 35214                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 35215  00BFB6  0E01               	movlw	1
 35216  00BFB8  010D               	movlb	13	; () banked
 35217  00BFBA  6F8C               	movwf	140,b	;volatile
 35218                           
 35219                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 35220  00BFBC  0E00               	movlw	0
 35221  00BFBE  6F88               	movwf	136,b	;volatile
 35222  00BFC0  0E00               	movlw	0
 35223  00BFC2  6F89               	movwf	137,b	;volatile
 35224  00BFC4  0E00               	movlw	0
 35225  00BFC6  6F8A               	movwf	138,b	;volatile
 35226  00BFC8  0E00               	movlw	0
 35227  00BFCA  6F8B               	movwf	139,b	;volatile
 35228                           
 35229                           ; BSR set to: 13
 35230                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 35231  00BFCC  0101               	movlb	1	; () banked
 35232  00BFCE  6955               	setf	_MSDCommandState& (0+255),b
 35233                           
 35234                           ;usb_device_msd.c: 848: break;
 35235  00BFD0  0012               	return	
 35236  00BFD2                     
 35237                           ; BSR set to: 1
 35238                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 35239                           
 35240                           ; BSR set to: 1
 35241  00BFD2  0E00               	movlw	0
 35242  00BFD4  0100               	movlb	0	; () banked
 35243  00BFD6  6F6A               	movwf	MSDCheckForErrorCases@DeviceBytes& (0+255),b
 35244  00BFD8  0E00               	movlw	0
 35245  00BFDA  6F6B               	movwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),b
 35246  00BFDC  0E00               	movlw	0
 35247  00BFDE  6F6C               	movwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),b
 35248  00BFE0  0E00               	movlw	0
 35249  00BFE2  6F6D               	movwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),b
 35250  00BFE4  ECE6  F086         	call	_MSDCheckForErrorCases	;wreg free
 35251  00BFE8  0900               	iorlw	0
 35252  00BFEA  A4D8               	btfss	status,2,c
 35253  00BFEC  0012               	return	
 35254                           
 35255                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 35256                           
 35257                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 35258  00BFEE  0101               	movlb	1	; () banked
 35259  00BFF0  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35260  00BFF2  0B0F               	andlw	15
 35261  00BFF4  0A06               	xorlw	6
 35262  00BFF6  A4D8               	btfss	status,2,c
 35263  00BFF8  D007               	goto	l652
 35264                           
 35265                           ; BSR set to: 1
 35266  00BFFA  010D               	movlb	13	; () banked
 35267  00BFFC  058C               	decf	140,w,b	;volatile
 35268  00BFFE  A4D8               	btfss	status,2,c
 35269  00C000  D003               	goto	l652
 35270                           
 35271                           ; BSR set to: 13
 35272                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 35273  00C002  0101               	movlb	1	; () banked
 35274  00C004  6955               	setf	_MSDCommandState& (0+255),b
 35275                           
 35276                           ;usb_device_msd.c: 870: }
 35277  00C006  0012               	return	
 35278  00C008                     l652:
 35279                           
 35280                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 35281                           
 35282                           ; BSR set to: 1
 35283  00C008  EC90  F0A3         	call	_ResetSenseData	;wreg free
 35284                           
 35285                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 35286  00C00C  0E00               	movlw	0
 35287  00C00E  010D               	movlb	13	; () banked
 35288  00C010  6F88               	movwf	136,b	;volatile
 35289  00C012  0E00               	movlw	0
 35290  00C014  6F89               	movwf	137,b	;volatile
 35291  00C016  0E00               	movlw	0
 35292  00C018  6F8A               	movwf	138,b	;volatile
 35293  00C01A  0E00               	movlw	0
 35294  00C01C  6F8B               	movwf	139,b	;volatile
 35295                           
 35296                           ; BSR set to: 13
 35297                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 35298  00C01E  0101               	movlb	1	; () banked
 35299  00C020  6955               	setf	_MSDCommandState& (0+255),b
 35300                           
 35301                           ; BSR set to: 1
 35302                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 35303  00C022  0012               	return	
 35304  00C024                     
 35305                           ; BSR set to: 1
 35306                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 35307                           
 35308                           ; BSR set to: 1
 35309                           
 35310                           ; BSR set to: 1
 35311  00C024  0E00               	movlw	0
 35312  00C026  010D               	movlb	13	; () banked
 35313  00C028  6F88               	movwf	136,b	;volatile
 35314  00C02A  0E00               	movlw	0
 35315  00C02C  6F89               	movwf	137,b	;volatile
 35316  00C02E  0E00               	movlw	0
 35317  00C030  6F8A               	movwf	138,b	;volatile
 35318  00C032  0E00               	movlw	0
 35319  00C034  6F8B               	movwf	139,b	;volatile
 35320                           
 35321                           ; BSR set to: 13
 35322                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 35323  00C036  0101               	movlb	1	; () banked
 35324  00C038  6955               	setf	_MSDCommandState& (0+255),b
 35325                           
 35326                           ;usb_device_msd.c: 885: break;
 35327  00C03A  0012               	return	
 35328  00C03C                     
 35329                           ; BSR set to: 1
 35330                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 35331                           
 35332                           ; BSR set to: 1
 35333  00C03C  513B               	movf	_USBMSDInHandle& (0+255),w,b
 35334  00C03E  113C               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 35335  00C040  B4D8               	btfsc	status,2,c
 35336  00C042  D006               	goto	u12430
 35337                           
 35338                           ; BSR set to: 1
 35339  00C044  C13B  FFD9         	movff	_USBMSDInHandle,fsr2l
 35340  00C048  C13C  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 35341  00C04C  BEDF               	btfsc	indf2,7,c
 35342  00C04E  0012               	return	
 35343  00C050                     u12430:
 35344                           
 35345                           ; BSR set to: 1
 35346                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 35347                           
 35348                           ; BSR set to: 1
 35349  00C050  0102               	movlb	2	; () banked
 35350  00C052  510B               	movf	(_gblCBW+11)& (0+255),w,b
 35351  00C054  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35352  00C056  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35353  00C058  E104               	bnz	u12440
 35354  00C05A  0E40               	movlw	64
 35355  00C05C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 35356  00C05E  A0D8               	btfss	status,0,c
 35357  00C060  D00B               	goto	l660
 35358  00C062                     u12440:
 35359                           
 35360                           ; BSR set to: 2
 35361                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 35362  00C062  0E40               	movlw	64
 35363  00C064  0100               	movlb	0	; () banked
 35364  00C066  6F9D               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),b
 35365                           
 35366                           ; BSR set to: 0
 35367                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 35368  00C068  0E40               	movlw	64
 35369  00C06A  0102               	movlb	2	; () banked
 35370  00C06C  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35371  00C06E  0E00               	movlw	0
 35372  00C070  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35373  00C072  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35374  00C074  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35375                           
 35376                           ;usb_device_msd.c: 900: }
 35377  00C076  D00A               	goto	l661
 35378  00C078                     l660:
 35379                           
 35380                           ; BSR set to: 2
 35381                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 35382  00C078  C208  F09D         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 35383                           
 35384                           ; BSR set to: 2
 35385                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 35386  00C07C  0E00               	movlw	0
 35387  00C07E  6F08               	movwf	(_gblCBW+8)& (0+255),b
 35388  00C080  0E00               	movlw	0
 35389  00C082  6F09               	movwf	(_gblCBW+9)& (0+255),b
 35390  00C084  0E00               	movlw	0
 35391  00C086  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 35392  00C088  0E00               	movlw	0
 35393  00C08A  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 35394  00C08C                     l661:
 35395                           
 35396                           ; BSR set to: 2
 35397                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 35398                           
 35399                           ; BSR set to: 2
 35400  00C08C  0100               	movlb	0	; () banked
 35401  00C08E  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35402  00C090  6F99               	movwf	??_MSDProcessCommandMediaPresent& (0+255),b
 35403  00C092  6B9A               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),b
 35404  00C094  5199               	movf	??_MSDProcessCommandMediaPresent& (0+255),w,b
 35405  00C096  0101               	movlb	1	; () banked
 35406  00C098  5D39               	subwf	_TransferLength& (0+255),w,b
 35407  00C09A  0100               	movlb	0	; () banked
 35408  00C09C  519A               	movf	(??_MSDProcessCommandMediaPresent+1)& (0+255),w,b
 35409  00C09E  0101               	movlb	1	; () banked
 35410  00C0A0  593A               	subwfb	(_TransferLength+1)& (0+255),w,b
 35411  00C0A2  A0D8               	btfss	status,0,c
 35412  00C0A4  D007               	goto	l662
 35413                           
 35414                           ; BSR set to: 1
 35415                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 35416  00C0A6  0100               	movlb	0	; () banked
 35417  00C0A8  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35418  00C0AA  0101               	movlb	1	; () banked
 35419  00C0AC  5F39               	subwf	_TransferLength& (0+255),f,b
 35420  00C0AE  0E00               	movlw	0
 35421  00C0B0  5B3A               	subwfb	(_TransferLength+1)& (0+255),f,b
 35422                           
 35423                           ;usb_device_msd.c: 918: }
 35424  00C0B2  D01E               	goto	u12470
 35425  00C0B4                     l662:
 35426                           
 35427                           ; BSR set to: 1
 35428                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 35429                           
 35430                           ; BSR set to: 1
 35431  00C0B4  0E00               	movlw	0
 35432  00C0B6  0100               	movlb	0	; () banked
 35433  00C0B8  6FA6               	movwf	MSDProcessCommandMediaPresent@i& (0+255),b
 35434  00C0BA  D016               	goto	l664
 35435  00C0BC                     
 35436                           ; BSR set to: 0
 35437                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 35438                           
 35439                           ; BSR set to: 0
 35440  00C0BC  0101               	movlb	1	; () banked
 35441  00C0BE  5139               	movf	_TransferLength& (0+255),w,b
 35442  00C0C0  113A               	iorwf	(_TransferLength+1)& (0+255),w,b
 35443  00C0C2  B4D8               	btfsc	status,2,c
 35444  00C0C4  D004               	goto	l666
 35445                           
 35446                           ; BSR set to: 1
 35447                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 35448  00C0C6  0739               	decf	_TransferLength& (0+255),f,b
 35449  00C0C8  A0D8               	btfss	status,0,c
 35450  00C0CA  073A               	decf	(_TransferLength+1)& (0+255),f,b
 35451                           
 35452                           ;usb_device_msd.c: 932: }
 35453  00C0CC  D00B               	goto	l667
 35454  00C0CE                     l666:
 35455                           
 35456                           ; BSR set to: 1
 35457                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 35458                           
 35459                           ; BSR set to: 1
 35460  00C0CE  0100               	movlb	0	; () banked
 35461  00C0D0  51A6               	movf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35462  00C0D2  0D01               	mullw	1
 35463  00C0D4  0E00               	movlw	0
 35464  00C0D6  24F3               	addwf	prodl,w,c
 35465  00C0D8  6ED9               	movwf	fsr2l,c
 35466  00C0DA  0E06               	movlw	6
 35467  00C0DC  20F4               	addwfc	prodh,w,c
 35468  00C0DE  6EDA               	movwf	fsr2h,c
 35469  00C0E0  0E00               	movlw	0
 35470  00C0E2  6EDF               	movwf	indf2,c
 35471  00C0E4                     l667:
 35472                           
 35473                           ; BSR set to: 0
 35474  00C0E4  0100               	movlb	0	; () banked
 35475  00C0E6  2BA6               	incf	MSDProcessCommandMediaPresent@i& (0+255),f,b
 35476  00C0E8                     l664:
 35477                           
 35478                           ; BSR set to: 0
 35479                           
 35480                           ; BSR set to: 0
 35481  00C0E8  519D               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket& (0+255),w,b
 35482  00C0EA  5DA6               	subwf	MSDProcessCommandMediaPresent@i& (0+255),w,b
 35483  00C0EC  A0D8               	btfss	status,0,c
 35484  00C0EE  D7E6               	goto	l665
 35485  00C0F0                     u12470:
 35486                           
 35487                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 35488                           
 35489                           ; BSR set to: 0
 35490                           
 35491                           ; BSR set to: 0
 35492  00C0F0  0E01               	movlw	1
 35493  00C0F2  0100               	movlb	0	; () banked
 35494  00C0F4  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35495  00C0F6  0E00               	movlw	0
 35496  00C0F8  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 35497  00C0FA  0E06               	movlw	6
 35498  00C0FC  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 35499  00C0FE  C09D  F063         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 35500  00C102  0E02               	movlw	2
 35501  00C104  EC8B  F089         	call	_USBTransferOnePacket
 35502  00C108  C060  F13B         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 35503  00C10C  C061  F13C         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 35504                           
 35505                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 35506  00C110  0102               	movlb	2	; () banked
 35507  00C112  5108               	movf	(_gblCBW+8)& (0+255),w,b
 35508  00C114  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 35509  00C116  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 35510  00C118  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 35511  00C11A  A4D8               	btfss	status,2,c
 35512  00C11C  0012               	return	
 35513                           
 35514                           ; BSR set to: 2
 35515                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 35516  00C11E  0101               	movlb	1	; () banked
 35517  00C120  6955               	setf	_MSDCommandState& (0+255),b
 35518                           
 35519                           ; BSR set to: 1
 35520                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 35521                           
 35522                           ; BSR set to: 1
 35523                           
 35524                           ;usb_device_msd.c: 949: break;
 35525  00C122  0012               	return	
 35526  00C124                     
 35527                           ; BSR set to: 1
 35528                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 35529                           
 35530                           ; BSR set to: 1
 35531                           
 35532                           ;usb_device_msd.c: 954: default:
 35533                           
 35534                           ; BSR set to: 1
 35535  00C124  0E7F               	movlw	127
 35536  00C126  EC59  F086         	call	_MSDErrorHandler
 35537                           
 35538                           ;usb_device_msd.c: 960: }
 35539                           
 35540                           ;usb_device_msd.c: 959: break;
 35541  00C12A  0012               	return	
 35542  00C12C                     l630:
 35543  00C12C  0101               	movlb	1	; () banked
 35544  00C12E  5155               	movf	_MSDCommandState& (0+255),w,b
 35545                           
 35546                           ; Switch size 1, requested type "space"
 35547                           ; Number of cases is 12, Range of values is 0 to 254
 35548                           ; switch strategies available:
 35549                           ; Name         Instructions Cycles
 35550                           ; simple_byte           37    19 (average)
 35551                           ;	Chosen strategy is simple_byte
 35552  00C130  0A00               	xorlw	0	; case 0
 35553  00C132  B4D8               	btfsc	status,2,c
 35554  00C134  D74E               	goto	l650
 35555  00C136  0A03               	xorlw	3	; case 3
 35556  00C138  B4D8               	btfsc	status,2,c
 35557  00C13A  D6CA               	goto	l640
 35558  00C13C  0A11               	xorlw	17	; case 18
 35559  00C13E  B4D8               	btfsc	status,2,c
 35560  00C140  D635               	goto	l636
 35561  00C142  0A08               	xorlw	8	; case 26
 35562  00C144  B4D8               	btfsc	status,2,c
 35563  00C146  D6F3               	goto	l644
 35564  00C148  0A01               	xorlw	1	; case 27
 35565  00C14A  B4D8               	btfsc	status,2,c
 35566  00C14C  D76B               	goto	l654
 35567  00C14E  0A05               	xorlw	5	; case 30
 35568  00C150  B4D8               	btfsc	status,2,c
 35569  00C152  D729               	goto	l649
 35570  00C154  0A3B               	xorlw	59	; case 37
 35571  00C156  B4D8               	btfsc	status,2,c
 35572  00C158  D658               	goto	l639
 35573  00C15A  0A0D               	xorlw	13	; case 40
 35574  00C15C  B4D8               	btfsc	status,2,c
 35575  00C15E  D616               	goto	l631
 35576  00C160  0A02               	xorlw	2	; case 42
 35577  00C162  B4D8               	btfsc	status,2,c
 35578  00C164  D61B               	goto	l634
 35579  00C166  0A05               	xorlw	5	; case 47
 35580  00C168  B4D8               	btfsc	status,2,c
 35581  00C16A  D75C               	goto	l654
 35582  00C16C  0AD2               	xorlw	210	; case 253
 35583  00C16E  B4D8               	btfsc	status,2,c
 35584  00C170  D765               	goto	l656
 35585  00C172  0A03               	xorlw	3	; case 254
 35586  00C174  D7D7               	goto	l670
 35587  00C176                     __end_of_MSDProcessCommandMediaPresent:
 35588                           	opt stack 0
 35589                           tosu	equ	0xFFF
 35590                           tosh	equ	0xFFE
 35591                           tosl	equ	0xFFD
 35592                           pclath	equ	0xFFA
 35593                           tblptru	equ	0xFF8
 35594                           tblptrh	equ	0xFF7
 35595                           tblptrl	equ	0xFF6
 35596                           tablat	equ	0xFF5
 35597                           prodh	equ	0xFF4
 35598                           prodl	equ	0xFF3
 35599                           intcon	equ	0xFF2
 35600                           postinc0	equ	0xFEE
 35601                           wreg	equ	0xFE8
 35602                           indf1	equ	0xFE7
 35603                           postinc1	equ	0xFE6
 35604                           postdec1	equ	0xFE5
 35605                           plusw1	equ	0xFE3
 35606                           fsr1h	equ	0xFE2
 35607                           fsr1l	equ	0xFE1
 35608                           indf2	equ	0xFDF
 35609                           postinc2	equ	0xFDE
 35610                           postdec2	equ	0xFDD
 35611                           plusw2	equ	0xFDB
 35612                           fsr2h	equ	0xFDA
 35613                           fsr2l	equ	0xFD9
 35614                           status	equ	0xFD8
 35615                           
 35616 ;; *************** function _MSDWriteHandler *****************
 35617 ;; Defined at:
 35618 ;;		line 1188 in file "usb_device_msd.c"
 35619 ;; Parameters:    Size  Location     Type
 35620 ;;		None
 35621 ;; Auto vars:     Size  Location     Type
 35622 ;;		None
 35623 ;; Return value:  Size  Location     Type
 35624 ;;                  1    wreg      unsigned char 
 35625 ;; Registers used:
 35626 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 35627 ;; Tracked objects:
 35628 ;;		On entry : 0/0
 35629 ;;		On exit  : 0/0
 35630 ;;		Unchanged: 0/0
 35631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35633 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35634 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35635 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35636 ;;Total ram usage:        5 bytes
 35637 ;; Hardware stack levels used:    1
 35638 ;; Hardware stack levels required when called:   16
 35639 ;; This function calls:
 35640 ;;		_ExternalFlash_SectorWrite
 35641 ;;		_ExternalFlash_WriteProtectStateGet
 35642 ;;		_MSDCheckForErrorCases
 35643 ;;		_USBStallEndpoint
 35644 ;;		_USBTransferOnePacket
 35645 ;; This function is called by:
 35646 ;;		_MSDProcessCommandMediaPresent
 35647 ;; This function uses a non-reentrant model
 35648 ;;
 35649                           
 35650                           	psect	text136
 35651  00CF7E                     __ptext136:
 35652                           	opt stack 0
 35653  00CF7E                     _MSDWriteHandler:
 35654                           	opt stack 10
 35655                           
 35656                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 35657                           
 35658                           ;incstack = 0
 35659  00CF7E  D160               	goto	l700
 35660  00CF80                     l701:
 35661                           
 35662                           ; BSR set to: 1
 35663                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 35664  00CF80  C211  F128         	movff	_gblCBW+17,_LBA+3
 35665                           
 35666                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 35667  00CF84  C212  F127         	movff	_gblCBW+18,_LBA+2
 35668                           
 35669                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 35670  00CF88  C213  F126         	movff	_gblCBW+19,_LBA+1
 35671                           
 35672                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 35673  00CF8C  C214  F125         	movff	_gblCBW+20,_LBA
 35674                           
 35675                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 35676  00CF90  C216  F13A         	movff	_gblCBW+22,_TransferLength+1
 35677                           
 35678                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 35679  00CF94  C217  F139         	movff	_gblCBW+23,_TransferLength
 35680                           
 35681                           ; BSR set to: 1
 35682                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 35683  00CF98  5139               	movf	_TransferLength& (0+255),w,b
 35684  00CF9A  0100               	movlb	0	; () banked
 35685  00CF9C  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35686  00CF9E  0101               	movlb	1	; () banked
 35687  00CFA0  513A               	movf	(_TransferLength+1)& (0+255),w,b
 35688  00CFA2  0100               	movlb	0	; () banked
 35689  00CFA4  6F90               	movwf	(??_MSDWriteHandler+1)& (0+255),b
 35690  00CFA6  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35691  00CFA8  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35692  00CFAA  0E09               	movlw	9
 35693  00CFAC                     u11225:
 35694  00CFAC  90D8               	bcf	status,0,c
 35695  00CFAE  378F               	rlcf	??_MSDWriteHandler& (0+255),f,b
 35696  00CFB0  3790               	rlcf	(??_MSDWriteHandler+1)& (0+255),f,b
 35697  00CFB2  3791               	rlcf	(??_MSDWriteHandler+2)& (0+255),f,b
 35698  00CFB4  3792               	rlcf	(??_MSDWriteHandler+3)& (0+255),f,b
 35699  00CFB6  2EE8               	decfsz	wreg,f,c
 35700  00CFB8  D7F9               	goto	u11225
 35701  00CFBA  C08F  F06A         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 35702  00CFBE  C090  F06B         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 35703  00CFC2  C091  F06C         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 35704  00CFC6  C092  F06D         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 35705  00CFCA  ECE6  F086         	call	_MSDCheckForErrorCases	;wreg free
 35706  00CFCE  0900               	iorlw	0
 35707  00CFD0  A4D8               	btfss	status,2,c
 35708  00CFD2  D148               	goto	l703
 35709                           
 35710                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 35711                           
 35712                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 35713  00CFD4  C2AC  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35714  00CFD8  C2AD  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35715  00CFDC  EE22  F0A6         	lfsr	2,_LUN+15
 35716  00CFE0  D801               	call	u11248
 35717  00CFE2  D00A               	goto	u11249
 35718  00CFE4                     u11248:
 35719  00CFE4  0005               	push	
 35720  00CFE6  6EFA               	movwf	pclath,c
 35721  00CFE8  50DE               	movf	postinc2,w,c
 35722  00CFEA  6EFD               	movwf	tosl,c
 35723  00CFEC  50DE               	movf	postinc2,w,c
 35724  00CFEE  6EFE               	movwf	tosh,c
 35725  00CFF0  50DE               	movf	postinc2,w,c
 35726  00CFF2  6EFF               	movwf	tosu,c
 35727  00CFF4  50FA               	movf	pclath,w,c
 35728  00CFF6  0012               	return		;indir
 35729  00CFF8                     u11249:
 35730  00CFF8  0900               	iorlw	0
 35731  00CFFA  B4D8               	btfsc	status,2,c
 35732  00CFFC  D017               	goto	l704
 35733                           
 35734                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 35735  00CFFE  0E01               	movlw	1
 35736  00D000  010D               	movlb	13	; () banked
 35737  00D002  6F8C               	movwf	140,b	;volatile
 35738                           
 35739                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 35740  00D004  0101               	movlb	1	; () banked
 35741  00D006  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35742  00D008  0BF0               	andlw	-16
 35743  00D00A  0907               	iorlw	7
 35744  00D00C  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35745                           
 35746                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 35747  00D00E  0E27               	movlw	39
 35748  00D010  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35749                           
 35750                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 35751  00D012  0E00               	movlw	0
 35752  00D014  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35753                           
 35754                           ; BSR set to: 1
 35755                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 35756  00D016  0E00               	movlw	0
 35757  00D018  0100               	movlb	0	; () banked
 35758  00D01A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 35759  00D01C  0E02               	movlw	2
 35760  00D01E  EC06  F089         	call	_USBStallEndpoint
 35761                           
 35762                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 35763  00D022  0E00               	movlw	0
 35764  00D024  0101               	movlb	1	; () banked
 35765  00D026  6F53               	movwf	_MSDWriteState& (0+255),b
 35766                           
 35767                           ; BSR set to: 1
 35768                           ;usb_device_msd.c: 1228: return MSDWriteState;
 35769  00D028  5153               	movf	_MSDWriteState& (0+255),w,b
 35770                           
 35771                           ; BSR set to: 1
 35772  00D02A  0012               	return	
 35773  00D02C                     l704:
 35774                           
 35775                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 35776                           
 35777                           ; BSR set to: 1
 35778  00D02C  0E01               	movlw	1
 35779  00D02E  0101               	movlb	1	; () banked
 35780  00D030  6F56               	movwf	_MSD_State& (0+255),b
 35781  00D032                     
 35782                           ; BSR set to: 1
 35783                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 35784                           
 35785                           ; BSR set to: 1
 35786  00D032  5139               	movf	_TransferLength& (0+255),w,b
 35787  00D034  113A               	iorwf	(_TransferLength+1)& (0+255),w,b
 35788  00D036  A4D8               	btfss	status,2,c
 35789  00D038  D002               	goto	l707
 35790                           
 35791                           ; BSR set to: 1
 35792                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 35793  00D03A  0E00               	movlw	0
 35794  00D03C  D0FF               	goto	L53
 35795  00D03E                     l707:
 35796                           
 35797                           ; BSR set to: 1
 35798                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 35799                           
 35800                           ; BSR set to: 1
 35801  00D03E  0E03               	movlw	3
 35802  00D040  6F53               	movwf	_MSDWriteState& (0+255),b
 35803                           
 35804                           ; BSR set to: 1
 35805                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 35806  00D042  0E00               	movlw	0
 35807  00D044  6F3F               	movwf	_ptrNextData& (0+255),b
 35808  00D046  0E06               	movlw	6
 35809  00D048  6F40               	movwf	(_ptrNextData+1)& (0+255),b
 35810                           
 35811                           ; BSR set to: 1
 35812                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 35813  00D04A  0E00               	movlw	0
 35814  00D04C  010D               	movlb	13	; () banked
 35815  00D04E  6F88               	movwf	136,b	;volatile
 35816  00D050  0E02               	movlw	2
 35817  00D052  6F89               	movwf	137,b	;volatile
 35818  00D054  0E00               	movlw	0
 35819  00D056  6F8A               	movwf	138,b	;volatile
 35820  00D058  0E00               	movlw	0
 35821  00D05A  6F8B               	movwf	139,b	;volatile
 35822  00D05C                     l708:
 35823                           
 35824                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 35825  00D05C  010D               	movlb	13	; () banked
 35826  00D05E  5188               	movf	136,w,b	;volatile
 35827  00D060  1189               	iorwf	137,w,b	;volatile
 35828  00D062  118A               	iorwf	138,w,b	;volatile
 35829  00D064  118B               	iorwf	139,w,b	;volatile
 35830  00D066  B4D8               	btfsc	status,2,c
 35831  00D068  D01F               	goto	l709
 35832                           
 35833                           ; BSR set to: 13
 35834                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 35835  00D06A  0101               	movlb	1	; () banked
 35836  00D06C  513D               	movf	_USBMSDOutHandle& (0+255),w,b
 35837  00D06E  113E               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35838  00D070  B4D8               	btfsc	status,2,c
 35839  00D072  D006               	goto	l710
 35840                           
 35841                           ; BSR set to: 1
 35842  00D074  C13D  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35843  00D078  C13E  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35844  00D07C  BEDF               	btfsc	indf2,7,c
 35845  00D07E  D0F2               	goto	l703
 35846  00D080                     l710:
 35847                           
 35848                           ; BSR set to: 1
 35849                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 35850                           
 35851                           ; BSR set to: 1
 35852  00D080  0E00               	movlw	0
 35853  00D082  0100               	movlb	0	; () banked
 35854  00D084  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 35855  00D086  C13F  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 35856  00D08A  C140  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 35857  00D08E  0E40               	movlw	64
 35858  00D090  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 35859  00D092  0E02               	movlw	2
 35860  00D094  EC8B  F089         	call	_USBTransferOnePacket
 35861  00D098  C060  F13D         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 35862  00D09C  C061  F13E         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 35863                           
 35864                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 35865  00D0A0  0E04               	movlw	4
 35866  00D0A2  0101               	movlb	1	; () banked
 35867  00D0A4  6F53               	movwf	_MSDWriteState& (0+255),b
 35868                           
 35869                           ;usb_device_msd.c: 1260: }
 35870  00D0A6  D023               	goto	l711
 35871  00D0A8                     l709:
 35872                           
 35873                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 35874                           
 35875                           ; BSR set to: 1
 35876  00D0A8  C2AC  F060         	movff	_LUN+21,ExternalFlash_WriteProtectStateGet@config
 35877  00D0AC  C2AD  F061         	movff	_LUN+22,ExternalFlash_WriteProtectStateGet@config+1
 35878  00D0B0  EE22  F0A6         	lfsr	2,_LUN+15
 35879  00D0B4  D801               	call	u11308
 35880  00D0B6  D00A               	goto	u11309
 35881  00D0B8                     u11308:
 35882  00D0B8  0005               	push	
 35883  00D0BA  6EFA               	movwf	pclath,c
 35884  00D0BC  50DE               	movf	postinc2,w,c
 35885  00D0BE  6EFD               	movwf	tosl,c
 35886  00D0C0  50DE               	movf	postinc2,w,c
 35887  00D0C2  6EFE               	movwf	tosh,c
 35888  00D0C4  50DE               	movf	postinc2,w,c
 35889  00D0C6  6EFF               	movwf	tosu,c
 35890  00D0C8  50FA               	movf	pclath,w,c
 35891  00D0CA  0012               	return		;indir
 35892  00D0CC                     u11309:
 35893  00D0CC  0900               	iorlw	0
 35894  00D0CE  B4D8               	btfsc	status,2,c
 35895  00D0D0  D00C               	goto	l712
 35896                           
 35897                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 35898  00D0D2  0E01               	movlw	1
 35899  00D0D4  010D               	movlb	13	; () banked
 35900  00D0D6  6F8C               	movwf	140,b	;volatile
 35901                           
 35902                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 35903  00D0D8  0101               	movlb	1	; () banked
 35904  00D0DA  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 35905  00D0DC  0BF0               	andlw	-16
 35906  00D0DE  0902               	iorlw	2
 35907  00D0E0  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 35908                           
 35909                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 35910  00D0E2  0E27               	movlw	39
 35911  00D0E4  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 35912                           
 35913                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 35914  00D0E6  0E00               	movlw	0
 35915  00D0E8  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 35916  00D0EA                     l712:
 35917                           
 35918                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 35919  00D0EA  0E02               	movlw	2
 35920  00D0EC  D0A6               	goto	L90
 35921  00D0EE                     l711:
 35922                           
 35923                           ; BSR set to: 1
 35924                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 35925                           
 35926                           ; BSR set to: 1
 35927                           
 35928                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 35929                           
 35930                           ; BSR set to: 1
 35931  00D0EE  513D               	movf	_USBMSDOutHandle& (0+255),w,b
 35932  00D0F0  113E               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 35933  00D0F2  B4D8               	btfsc	status,2,c
 35934  00D0F4  D006               	goto	l714
 35935                           
 35936                           ; BSR set to: 1
 35937  00D0F6  C13D  FFD9         	movff	_USBMSDOutHandle,fsr2l
 35938  00D0FA  C13E  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 35939  00D0FE  BEDF               	btfsc	indf2,7,c
 35940  00D100  D0B1               	goto	l703
 35941  00D102                     l714:
 35942                           
 35943                           ; BSR set to: 1
 35944                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 35945                           
 35946                           ; BSR set to: 1
 35947  00D102  EE20 F001          	lfsr	2,1
 35948  00D106  513D               	movf	_USBMSDOutHandle& (0+255),w,b
 35949  00D108  26D9               	addwf	fsr2l,f,c
 35950  00D10A  513E               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 35951  00D10C  22DA               	addwfc	fsr2h,f,c
 35952  00D10E  50DF               	movf	indf2,w,c
 35953  00D110  0100               	movlb	0	; () banked
 35954  00D112  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35955  00D114  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 35956  00D118  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35957  00D11A  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35958  00D11C  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 35959  00D11E  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 35960  00D120  0102               	movlb	2	; () banked
 35961  00D122  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 35962  00D124  0100               	movlb	0	; () banked
 35963  00D126  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 35964  00D128  0102               	movlb	2	; () banked
 35965  00D12A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 35966  00D12C  0100               	movlb	0	; () banked
 35967  00D12E  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 35968  00D130  0102               	movlb	2	; () banked
 35969  00D132  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 35970  00D134  0100               	movlb	0	; () banked
 35971  00D136  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 35972  00D138  0102               	movlb	2	; () banked
 35973  00D13A  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 35974                           
 35975                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 35976  00D13C  0101               	movlb	1	; () banked
 35977  00D13E  EE20 F001          	lfsr	2,1
 35978  00D142  513D               	movf	_USBMSDOutHandle& (0+255),w,b
 35979  00D144  26D9               	addwf	fsr2l,f,c
 35980  00D146  513E               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 35981  00D148  22DA               	addwfc	fsr2h,f,c
 35982  00D14A  50DF               	movf	indf2,w,c
 35983  00D14C  0100               	movlb	0	; () banked
 35984  00D14E  6F8F               	movwf	??_MSDWriteHandler& (0+255),b
 35985  00D150  C08F  F090         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 35986  00D154  6B91               	clrf	(??_MSDWriteHandler+2)& (0+255),b
 35987  00D156  6B92               	clrf	(??_MSDWriteHandler+3)& (0+255),b
 35988  00D158  6B93               	clrf	(??_MSDWriteHandler+4)& (0+255),b
 35989  00D15A  5190               	movf	(??_MSDWriteHandler+1)& (0+255),w,b
 35990  00D15C  010D               	movlb	13	; () banked
 35991  00D15E  5F88               	subwf	136,f,b	;volatile
 35992  00D160  0100               	movlb	0	; () banked
 35993  00D162  5191               	movf	(??_MSDWriteHandler+2)& (0+255),w,b
 35994  00D164  010D               	movlb	13	; () banked
 35995  00D166  5B89               	subwfb	137,f,b	;volatile
 35996  00D168  0100               	movlb	0	; () banked
 35997  00D16A  5192               	movf	(??_MSDWriteHandler+3)& (0+255),w,b
 35998  00D16C  010D               	movlb	13	; () banked
 35999  00D16E  5B8A               	subwfb	138,f,b	;volatile
 36000  00D170  0100               	movlb	0	; () banked
 36001  00D172  5193               	movf	(??_MSDWriteHandler+4)& (0+255),w,b
 36002  00D174  010D               	movlb	13	; () banked
 36003  00D176  5B8B               	subwfb	139,f,b	;volatile
 36004                           
 36005                           ; BSR set to: 13
 36006                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 36007  00D178  0E40               	movlw	64
 36008  00D17A  0101               	movlb	1	; () banked
 36009  00D17C  273F               	addwf	_ptrNextData& (0+255),f,b
 36010  00D17E  0E00               	movlw	0
 36011  00D180  2340               	addwfc	(_ptrNextData+1)& (0+255),f,b
 36012                           
 36013                           ; BSR set to: 1
 36014                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 36015  00D182  0E03               	movlw	3
 36016  00D184  D05B               	goto	L53
 36017  00D186                     
 36018                           ; BSR set to: 1
 36019                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 36020                           
 36021                           ; BSR set to: 1
 36022  00D186  010D               	movlb	13	; () banked
 36023  00D188  518C               	movf	140,w,b	;volatile
 36024  00D18A  A4D8               	btfss	status,2,c
 36025  00D18C  D040               	goto	l719
 36026                           
 36027                           ; BSR set to: 13
 36028                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 36029  00D18E  C2AC  F084         	movff	_LUN+21,ExternalFlash_SectorWrite@config
 36030  00D192  C2AD  F085         	movff	_LUN+22,ExternalFlash_SectorWrite@config+1
 36031  00D196  C125  F086         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 36032  00D19A  C126  F087         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 36033  00D19E  C127  F088         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 36034  00D1A2  C128  F089         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 36035  00D1A6  0E00               	movlw	0
 36036  00D1A8  0100               	movlb	0	; () banked
 36037  00D1AA  6F8A               	movwf	ExternalFlash_SectorWrite@buffer& (0+255),b
 36038  00D1AC  0E06               	movlw	6
 36039  00D1AE  6F8B               	movwf	(ExternalFlash_SectorWrite@buffer+1)& (0+255),b
 36040  00D1B0  0101               	movlb	1	; () banked
 36041  00D1B2  5125               	movf	_LBA& (0+255),w,b
 36042  00D1B4  1126               	iorwf	(_LBA+1)& (0+255),w,b
 36043  00D1B6  1127               	iorwf	(_LBA+2)& (0+255),w,b
 36044  00D1B8  1128               	iorwf	(_LBA+3)& (0+255),w,b
 36045  00D1BA  A4D8               	btfss	status,2,c
 36046  00D1BC  D002               	goto	u11350
 36047  00D1BE  0E01               	movlw	1
 36048  00D1C0  D001               	goto	u11360
 36049  00D1C2                     u11350:
 36050  00D1C2  0E00               	movlw	0
 36051  00D1C4                     u11360:
 36052  00D1C4  0100               	movlb	0	; () banked
 36053  00D1C6  6F8C               	movwf	ExternalFlash_SectorWrite@allowWriteToZero& (0+255),b
 36054  00D1C8  EE22  F0A9         	lfsr	2,_LUN+18
 36055  00D1CC  D801               	call	u11378
 36056  00D1CE  D00A               	goto	u11379
 36057  00D1D0                     u11378:
 36058  00D1D0  0005               	push	
 36059  00D1D2  6EFA               	movwf	pclath,c
 36060  00D1D4  50DE               	movf	postinc2,w,c
 36061  00D1D6  6EFD               	movwf	tosl,c
 36062  00D1D8  50DE               	movf	postinc2,w,c
 36063  00D1DA  6EFE               	movwf	tosh,c
 36064  00D1DC  50DE               	movf	postinc2,w,c
 36065  00D1DE  6EFF               	movwf	tosu,c
 36066  00D1E0  50FA               	movf	pclath,w,c
 36067  00D1E2  0012               	return		;indir
 36068  00D1E4                     u11379:
 36069  00D1E4  06E8               	decf	wreg,f,c
 36070  00D1E6  B4D8               	btfsc	status,2,c
 36071  00D1E8  D012               	goto	l719
 36072                           
 36073                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 36074  00D1EA  0E64               	movlw	100
 36075  00D1EC  0101               	movlb	1	; () banked
 36076  00D1EE  6152               	cpfslt	_MSDRetryAttempt& (0+255),b
 36077  00D1F0  D002               	goto	l718
 36078                           
 36079                           ; BSR set to: 1
 36080                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 36081  00D1F2  2B52               	incf	_MSDRetryAttempt& (0+255),f,b
 36082                           
 36083                           ;usb_device_msd.c: 1314: break;
 36084  00D1F4  D037               	goto	l703
 36085  00D1F6                     l718:
 36086                           
 36087                           ; BSR set to: 1
 36088                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 36089                           
 36090                           ; BSR set to: 1
 36091  00D1F6  0E01               	movlw	1
 36092  00D1F8  010D               	movlb	13	; () banked
 36093  00D1FA  6F8C               	movwf	140,b	;volatile
 36094                           
 36095                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 36096  00D1FC  0101               	movlb	1	; () banked
 36097  00D1FE  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 36098  00D200  0BF0               	andlw	-16
 36099  00D202  0903               	iorlw	3
 36100  00D204  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 36101                           
 36102                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 36103  00D206  0E00               	movlw	0
 36104  00D208  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 36105                           
 36106                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 36107  00D20A  0E00               	movlw	0
 36108  00D20C  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 36109  00D20E                     l719:
 36110                           
 36111                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 36112                           
 36113                           ; BSR set to: 1
 36114                           
 36115                           ; BSR set to: 1
 36116                           
 36117                           ; BSR set to: 1
 36118  00D20E  0E01               	movlw	1
 36119  00D210  0101               	movlb	1	; () banked
 36120  00D212  2725               	addwf	_LBA& (0+255),f,b
 36121  00D214  0E00               	movlw	0
 36122  00D216  2326               	addwfc	(_LBA+1)& (0+255),f,b
 36123  00D218  2327               	addwfc	(_LBA+2)& (0+255),f,b
 36124  00D21A  2328               	addwfc	(_LBA+3)& (0+255),f,b
 36125                           
 36126                           ; BSR set to: 1
 36127                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 36128  00D21C  0739               	decf	_TransferLength& (0+255),f,b
 36129  00D21E  A0D8               	btfss	status,0,c
 36130  00D220  073A               	decf	(_TransferLength+1)& (0+255),f,b
 36131                           
 36132                           ; BSR set to: 1
 36133                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 36134  00D222  0E01               	movlw	1
 36135  00D224  D00B               	goto	L53
 36136  00D226                     
 36137                           ; BSR set to: 1
 36138                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 36139                           
 36140                           ; BSR set to: 1
 36141  00D226  0E02               	movlw	2
 36142  00D228  010D               	movlb	13	; () banked
 36143  00D22A  6F8C               	movwf	140,b	;volatile
 36144                           
 36145                           ; BSR set to: 13
 36146                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 36147  00D22C  0E00               	movlw	0
 36148  00D22E  0100               	movlb	0	; () banked
 36149  00D230  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 36150  00D232  0E02               	movlw	2
 36151  00D234  EC06  F089         	call	_USBStallEndpoint
 36152                           
 36153                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 36154  00D238  0E00               	movlw	0
 36155  00D23A                     L90:
 36156  00D23A  0101               	movlb	1	; () banked
 36157  00D23C                     L53:
 36158  00D23C  6F53               	movwf	_MSDWriteState& (0+255),b
 36159                           
 36160                           ; BSR set to: 1
 36161                           ;usb_device_msd.c: 1345: }
 36162                           
 36163                           ;usb_device_msd.c: 1344: break;
 36164  00D23E  D012               	goto	l703
 36165  00D240                     l700:
 36166                           
 36167                           ; BSR set to: 1
 36168  00D240  0101               	movlb	1	; () banked
 36169  00D242  5153               	movf	_MSDWriteState& (0+255),w,b
 36170                           
 36171                           ; Switch size 1, requested type "space"
 36172                           ; Number of cases is 5, Range of values is 0 to 4
 36173                           ; switch strategies available:
 36174                           ; Name         Instructions Cycles
 36175                           ; simple_byte           16     9 (average)
 36176                           ;	Chosen strategy is simple_byte
 36177  00D244  0A00               	xorlw	0	; case 0
 36178  00D246  B4D8               	btfsc	status,2,c
 36179  00D248  D69B               	goto	l701
 36180  00D24A  0A01               	xorlw	1	; case 1
 36181  00D24C  B4D8               	btfsc	status,2,c
 36182  00D24E  D6F1               	goto	l706
 36183  00D250  0A03               	xorlw	3	; case 2
 36184  00D252  B4D8               	btfsc	status,2,c
 36185  00D254  D798               	goto	l715
 36186  00D256  0A01               	xorlw	1	; case 3
 36187  00D258  B4D8               	btfsc	status,2,c
 36188  00D25A  D700               	goto	l708
 36189  00D25C  0A07               	xorlw	7	; case 4
 36190  00D25E  B4D8               	btfsc	status,2,c
 36191  00D260  D746               	goto	l711
 36192  00D262  D7E1               	goto	l720
 36193  00D264                     l703:
 36194                           
 36195                           ;usb_device_msd.c: 1347: return MSDWriteState;
 36196                           
 36197                           ; BSR set to: 1
 36198  00D264  0101               	movlb	1	; () banked
 36199  00D266  5153               	movf	_MSDWriteState& (0+255),w,b
 36200  00D268  0012               	return	
 36201  00D26A                     __end_of_MSDWriteHandler:
 36202                           	opt stack 0
 36203                           tosu	equ	0xFFF
 36204                           tosh	equ	0xFFE
 36205                           tosl	equ	0xFFD
 36206                           pclath	equ	0xFFA
 36207                           tblptru	equ	0xFF8
 36208                           tblptrh	equ	0xFF7
 36209                           tblptrl	equ	0xFF6
 36210                           tablat	equ	0xFF5
 36211                           prodh	equ	0xFF4
 36212                           prodl	equ	0xFF3
 36213                           intcon	equ	0xFF2
 36214                           postinc0	equ	0xFEE
 36215                           wreg	equ	0xFE8
 36216                           indf1	equ	0xFE7
 36217                           postinc1	equ	0xFE6
 36218                           postdec1	equ	0xFE5
 36219                           plusw1	equ	0xFE3
 36220                           fsr1h	equ	0xFE2
 36221                           fsr1l	equ	0xFE1
 36222                           indf2	equ	0xFDF
 36223                           postinc2	equ	0xFDE
 36224                           postdec2	equ	0xFDD
 36225                           plusw2	equ	0xFDB
 36226                           fsr2h	equ	0xFDA
 36227                           fsr2l	equ	0xFD9
 36228                           status	equ	0xFD8
 36229                           
 36230 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 36231 ;; Defined at:
 36232 ;;		line 34 in file "external_flash.c"
 36233 ;; Parameters:    Size  Location     Type
 36234 ;;  config          2    0[BANK0 ] PTR void 
 36235 ;;		 -> NULL(0), 
 36236 ;; Auto vars:     Size  Location     Type
 36237 ;;		None
 36238 ;; Return value:  Size  Location     Type
 36239 ;;                  1    wreg      unsigned char 
 36240 ;; Registers used:
 36241 ;;		wreg
 36242 ;; Tracked objects:
 36243 ;;		On entry : 0/0
 36244 ;;		On exit  : 0/0
 36245 ;;		Unchanged: 0/0
 36246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36247 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36250 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36251 ;;Total ram usage:        2 bytes
 36252 ;; Hardware stack levels used:    1
 36253 ;; Hardware stack levels required when called:   10
 36254 ;; This function calls:
 36255 ;;		Nothing
 36256 ;; This function is called by:
 36257 ;;		_MSDWriteHandler
 36258 ;;		_MSDProcessCommandMediaPresent
 36259 ;; This function uses a non-reentrant model
 36260 ;;
 36261                           
 36262                           	psect	text137
 36263  015DBA                     __ptext137:
 36264                           	opt stack 0
 36265  015DBA                     _ExternalFlash_WriteProtectStateGet:
 36266                           	opt stack 15
 36267                           
 36268                           ;external_flash.c: 37: return 0;
 36269                           
 36270                           ; BSR set to: 1
 36271                           ;incstack = 0
 36272  015DBA  0E00               	movlw	0
 36273  015DBC  0012               	return	
 36274  015DBE                     __end_of_ExternalFlash_WriteProtectStateGet:
 36275                           	opt stack 0
 36276                           tosu	equ	0xFFF
 36277                           tosh	equ	0xFFE
 36278                           tosl	equ	0xFFD
 36279                           pclath	equ	0xFFA
 36280                           tblptru	equ	0xFF8
 36281                           tblptrh	equ	0xFF7
 36282                           tblptrl	equ	0xFF6
 36283                           tablat	equ	0xFF5
 36284                           prodh	equ	0xFF4
 36285                           prodl	equ	0xFF3
 36286                           intcon	equ	0xFF2
 36287                           postinc0	equ	0xFEE
 36288                           wreg	equ	0xFE8
 36289                           indf1	equ	0xFE7
 36290                           postinc1	equ	0xFE6
 36291                           postdec1	equ	0xFE5
 36292                           plusw1	equ	0xFE3
 36293                           fsr1h	equ	0xFE2
 36294                           fsr1l	equ	0xFE1
 36295                           indf2	equ	0xFDF
 36296                           postinc2	equ	0xFDE
 36297                           postdec2	equ	0xFDD
 36298                           plusw2	equ	0xFDB
 36299                           fsr2h	equ	0xFDA
 36300                           fsr2l	equ	0xFD9
 36301                           status	equ	0xFD8
 36302                           
 36303 ;; *************** function _ExternalFlash_SectorWrite *****************
 36304 ;; Defined at:
 36305 ;;		line 56 in file "external_flash.c"
 36306 ;; Parameters:    Size  Location     Type
 36307 ;;  config          2   36[BANK0 ] PTR void 
 36308 ;;		 -> NULL(0), 
 36309 ;;  sector_addr     4   38[BANK0 ] unsigned long 
 36310 ;;  buffer          2   42[BANK0 ] PTR unsigned char 
 36311 ;;		 -> msd_buffer(512), 
 36312 ;;  allowWriteTo    1   44[BANK0 ] unsigned char 
 36313 ;; Auto vars:     Size  Location     Type
 36314 ;;  page            2   45[BANK0 ] unsigned int 
 36315 ;; Return value:  Size  Location     Type
 36316 ;;                  1    wreg      unsigned char 
 36317 ;; Registers used:
 36318 ;;		wreg, status,2, status,0, cstack
 36319 ;; Tracked objects:
 36320 ;;		On entry : 0/0
 36321 ;;		On exit  : 0/0
 36322 ;;		Unchanged: 0/0
 36323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36324 ;;      Params:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36325 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36327 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36328 ;;Total ram usage:       11 bytes
 36329 ;; Hardware stack levels used:    1
 36330 ;; Hardware stack levels required when called:   15
 36331 ;; This function calls:
 36332 ;;		_flash_sector_write
 36333 ;; This function is called by:
 36334 ;;		_MSDWriteHandler
 36335 ;; This function uses a non-reentrant model
 36336 ;;
 36337                           
 36338                           	psect	text138
 36339  01565C                     __ptext138:
 36340                           	opt stack 0
 36341  01565C                     _ExternalFlash_SectorWrite:
 36342                           	opt stack 10
 36343                           
 36344                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 36345                           
 36346                           ;incstack = 0
 36347  01565C  C086  F08D         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 36348  015660  C087  F08E         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 36349                           
 36350                           ;external_flash.c: 61: if(sector_addr >= 8192)
 36351  015664  0100               	movlb	0	; () banked
 36352  015666  5189               	movf	(ExternalFlash_SectorWrite@sector_addr+3)& (0+255),w,b
 36353  015668  1188               	iorwf	(ExternalFlash_SectorWrite@sector_addr+2)& (0+255),w,b
 36354  01566A  E104               	bnz	u10790
 36355  01566C  0E20               	movlw	32
 36356  01566E  5D87               	subwf	(ExternalFlash_SectorWrite@sector_addr+1)& (0+255),w,b
 36357  015670  A0D8               	btfss	status,0,c
 36358  015672  D002               	goto	l1695
 36359  015674                     u10790:
 36360                           
 36361                           ; BSR set to: 0
 36362                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 36363  015674  0E00               	movlw	0
 36364                           
 36365                           ; BSR set to: 0
 36366  015676  0012               	return	
 36367  015678                     l1695:
 36368                           
 36369                           ; BSR set to: 0
 36370                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 36371                           
 36372                           ; BSR set to: 0
 36373  015678  C08D  F07F         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 36374  01567C  C08E  F080         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 36375  015680  C08A  F081         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 36376  015684  C08B  F082         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 36377  015688  EC0B  F0A8         	call	_flash_sector_write	;wreg free
 36378                           
 36379                           ;external_flash.c: 69: return 1;
 36380  01568C  0E01               	movlw	1
 36381  01568E  0012               	return	
 36382  015690                     __end_of_ExternalFlash_SectorWrite:
 36383                           	opt stack 0
 36384                           tosu	equ	0xFFF
 36385                           tosh	equ	0xFFE
 36386                           tosl	equ	0xFFD
 36387                           pclath	equ	0xFFA
 36388                           tblptru	equ	0xFF8
 36389                           tblptrh	equ	0xFF7
 36390                           tblptrl	equ	0xFF6
 36391                           tablat	equ	0xFF5
 36392                           prodh	equ	0xFF4
 36393                           prodl	equ	0xFF3
 36394                           intcon	equ	0xFF2
 36395                           postinc0	equ	0xFEE
 36396                           wreg	equ	0xFE8
 36397                           indf1	equ	0xFE7
 36398                           postinc1	equ	0xFE6
 36399                           postdec1	equ	0xFE5
 36400                           plusw1	equ	0xFE3
 36401                           fsr1h	equ	0xFE2
 36402                           fsr1l	equ	0xFE1
 36403                           indf2	equ	0xFDF
 36404                           postinc2	equ	0xFDE
 36405                           postdec2	equ	0xFDD
 36406                           plusw2	equ	0xFDB
 36407                           fsr2h	equ	0xFDA
 36408                           fsr2l	equ	0xFD9
 36409                           status	equ	0xFD8
 36410                           
 36411 ;; *************** function _flash_sector_write *****************
 36412 ;; Defined at:
 36413 ;;		line 434 in file "flash.c"
 36414 ;; Parameters:    Size  Location     Type
 36415 ;;  page            2   31[BANK0 ] unsigned int 
 36416 ;;  data            2   33[BANK0 ] PTR unsigned char 
 36417 ;;		 -> buffer(512), msd_buffer(512), 
 36418 ;; Auto vars:     Size  Location     Type
 36419 ;;  match           1   35[BANK0 ] enum E7062
 36420 ;; Return value:  Size  Location     Type
 36421 ;;                  1    wreg      void 
 36422 ;; Registers used:
 36423 ;;		wreg, status,2, status,0, cstack
 36424 ;; Tracked objects:
 36425 ;;		On entry : 0/0
 36426 ;;		On exit  : 0/0
 36427 ;;		Unchanged: 0/0
 36428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36430 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36432 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36433 ;;Total ram usage:        5 bytes
 36434 ;; Hardware stack levels used:    1
 36435 ;; Hardware stack levels required when called:   14
 36436 ;; This function calls:
 36437 ;;		__flash_compare_page_to_buffer
 36438 ;;		__flash_write_page_from_buffer
 36439 ;;		__flash_write_to_buffer
 36440 ;; This function is called by:
 36441 ;;		_ExternalFlash_SectorWrite
 36442 ;;		__make_cluster_chain
 36443 ;;		_fat_restore_mbr_fbr
 36444 ;;		_fat_format
 36445 ;; This function uses a non-reentrant model
 36446 ;;
 36447                           
 36448                           	psect	text139
 36449  015016                     __ptext139:
 36450                           	opt stack 0
 36451  015016                     _flash_sector_write:
 36452                           	opt stack 13
 36453                           
 36454                           ;flash.c: 436: flashMatchResult_t match;;flash.c: 439: _flash_write_to_buffer(0, data, 5
      +                          12, FLASH_BUFFER_1);
 36455                           
 36456                           ;incstack = 0
 36457  015016  0E00               	movlw	0
 36458  015018  0100               	movlb	0	; () banked
 36459  01501A  6F74               	movwf	(__flash_write_to_buffer@start+1)& (0+255),b
 36460  01501C  0E00               	movlw	0
 36461  01501E  6F73               	movwf	__flash_write_to_buffer@start& (0+255),b
 36462  015020  C081  F075         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 36463  015024  C082  F076         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 36464  015028  0E02               	movlw	2
 36465  01502A  6F78               	movwf	(__flash_write_to_buffer@data_length+1)& (0+255),b
 36466  01502C  0E00               	movlw	0
 36467  01502E  6F77               	movwf	__flash_write_to_buffer@data_length& (0+255),b
 36468  015030  0E00               	movlw	0
 36469  015032  6F79               	movwf	__flash_write_to_buffer@buffer& (0+255),b
 36470  015034  EC6A  F0A7         	call	__flash_write_to_buffer	;wreg free
 36471                           
 36472                           ;flash.c: 442: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36473  015038  C07F  F073         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 36474  01503C  C080  F074         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 36475  015040  0E00               	movlw	0
 36476  015042  0100               	movlb	0	; () banked
 36477  015044  6F75               	movwf	__flash_compare_page_to_buffer@buffer& (0+255),b
 36478  015046  EC4B  F0A0         	call	__flash_compare_page_to_buffer	;wreg free
 36479  01504A  0100               	movlb	0	; () banked
 36480  01504C  6F83               	movwf	flash_sector_write@match& (0+255),b
 36481                           
 36482                           ; BSR set to: 0
 36483                           ;flash.c: 445: if(match==DATA_DOES_NOT_MATCH)
 36484  01504E  0583               	decf	flash_sector_write@match& (0+255),w,b
 36485  015050  A4D8               	btfss	status,2,c
 36486  015052  0012               	return	
 36487                           
 36488                           ; BSR set to: 0
 36489                           ;flash.c: 446: {;flash.c: 447: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36490  015054  C07F  F073         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 36491  015058  C080  F074         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 36492  01505C  0E00               	movlw	0
 36493  01505E  6F75               	movwf	__flash_write_page_from_buffer@buffer& (0+255),b
 36494  015060  EC36  F0A5         	call	__flash_write_page_from_buffer	;wreg free
 36495  015064  0012               	return	
 36496  015066                     __end_of_flash_sector_write:
 36497                           	opt stack 0
 36498                           tosu	equ	0xFFF
 36499                           tosh	equ	0xFFE
 36500                           tosl	equ	0xFFD
 36501                           pclath	equ	0xFFA
 36502                           tblptru	equ	0xFF8
 36503                           tblptrh	equ	0xFF7
 36504                           tblptrl	equ	0xFF6
 36505                           tablat	equ	0xFF5
 36506                           prodh	equ	0xFF4
 36507                           prodl	equ	0xFF3
 36508                           intcon	equ	0xFF2
 36509                           postinc0	equ	0xFEE
 36510                           wreg	equ	0xFE8
 36511                           indf1	equ	0xFE7
 36512                           postinc1	equ	0xFE6
 36513                           postdec1	equ	0xFE5
 36514                           plusw1	equ	0xFE3
 36515                           fsr1h	equ	0xFE2
 36516                           fsr1l	equ	0xFE1
 36517                           indf2	equ	0xFDF
 36518                           postinc2	equ	0xFDE
 36519                           postdec2	equ	0xFDD
 36520                           plusw2	equ	0xFDB
 36521                           fsr2h	equ	0xFDA
 36522                           fsr2l	equ	0xFD9
 36523                           status	equ	0xFD8
 36524                           
 36525 ;; *************** function __flash_write_to_buffer *****************
 36526 ;; Defined at:
 36527 ;;		line 236 in file "flash.c"
 36528 ;; Parameters:    Size  Location     Type
 36529 ;;  start           2   19[BANK0 ] unsigned int 
 36530 ;;  data            2   21[BANK0 ] PTR unsigned char 
 36531 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36532 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36533 ;;  data_length     2   23[BANK0 ] unsigned int 
 36534 ;;  buffer          1   25[BANK0 ] enum E7058
 36535 ;; Auto vars:     Size  Location     Type
 36536 ;;  command         4   26[BANK0 ] unsigned char [4]
 36537 ;; Return value:  Size  Location     Type
 36538 ;;                  1    wreg      void 
 36539 ;; Registers used:
 36540 ;;		wreg, status,2, status,0, cstack
 36541 ;; Tracked objects:
 36542 ;;		On entry : 0/0
 36543 ;;		On exit  : 0/0
 36544 ;;		Unchanged: 0/0
 36545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36546 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36547 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36549 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36550 ;;Total ram usage:       11 bytes
 36551 ;; Hardware stack levels used:    1
 36552 ;; Hardware stack levels required when called:   13
 36553 ;; This function calls:
 36554 ;;		__flash_is_busy
 36555 ;;		_spi_tx_tx
 36556 ;; This function is called by:
 36557 ;;		_flash_sector_write
 36558 ;;		_flash_partial_write
 36559 ;;		_flash_write_to_buffer
 36560 ;; This function uses a non-reentrant model
 36561 ;;
 36562                           
 36563                           	psect	text140
 36564  014ED4                     __ptext140:
 36565                           	opt stack 0
 36566  014ED4                     __flash_write_to_buffer:
 36567                           	opt stack 13
 36568                           
 36569                           ;flash.c: 238: uint8_t command[4];;flash.c: 241: while(_flash_is_busy());
 36570                           
 36571                           ;incstack = 0
 36572  014ED4  EC70  F0AD         	call	__flash_is_busy	;wreg free
 36573  014ED8  0900               	iorlw	0
 36574  014EDA  A4D8               	btfss	status,2,c
 36575  014EDC  D7FB               	goto	__flash_write_to_buffer
 36576                           
 36577                           ;flash.c: 244: if(buffer==FLASH_BUFFER_1)
 36578  014EDE  0100               	movlb	0	; () banked
 36579  014EE0  5179               	movf	__flash_write_to_buffer@buffer& (0+255),w,b
 36580  014EE2  A4D8               	btfss	status,2,c
 36581  014EE4  D002               	goto	l1581
 36582                           
 36583                           ; BSR set to: 0
 36584                           ;flash.c: 245: command[0] = 0x84;
 36585  014EE6  0E84               	movlw	132
 36586  014EE8  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36587  014EEA                     l1581:
 36588                           
 36589                           ; BSR set to: 0
 36590                           ;flash.c: 246: if(buffer==FLASH_BUFFER_2)
 36591                           
 36592                           ; BSR set to: 0
 36593  014EEA  0579               	decf	__flash_write_to_buffer@buffer& (0+255),w,b
 36594  014EEC  A4D8               	btfss	status,2,c
 36595  014EEE  D002               	goto	l1582
 36596                           
 36597                           ; BSR set to: 0
 36598                           ;flash.c: 247: command[0] = 0x87;
 36599  014EF0  0E87               	movlw	135
 36600  014EF2  6F7A               	movwf	__flash_write_to_buffer@command& (0+255),b
 36601  014EF4                     l1582:
 36602                           
 36603                           ; BSR set to: 0
 36604                           ;flash.c: 249: command[1] = 0x00;
 36605  014EF4  0E00               	movlw	0
 36606  014EF6  6F7B               	movwf	(__flash_write_to_buffer@command+1)& (0+255),b
 36607                           
 36608                           ;flash.c: 250: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36609  014EF8  5174               	movf	(__flash_write_to_buffer@start+1)& (0+255),w,b
 36610  014EFA  6F7C               	movwf	(__flash_write_to_buffer@command+2)& (0+255),b
 36611                           
 36612                           ; BSR set to: 0
 36613                           ;flash.c: 251: command[3] = ((unsigned char)((start)&0xFF));
 36614  014EFC  C073  F07D         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36615                           
 36616                           ; BSR set to: 0
 36617                           ;flash.c: 254: spi_tx_tx(command, 4, data, data_length);
 36618  014F00  0E7A               	movlw	low __flash_write_to_buffer@command
 36619  014F02  6F60               	movwf	spi_tx_tx@command& (0+255),b
 36620  014F04  0E00               	movlw	high __flash_write_to_buffer@command
 36621  014F06  6F61               	movwf	(spi_tx_tx@command+1)& (0+255),b
 36622  014F08  0E00               	movlw	0
 36623  014F0A  6F63               	movwf	(spi_tx_tx@command_length+1)& (0+255),b
 36624  014F0C  0E04               	movlw	4
 36625  014F0E  6F62               	movwf	spi_tx_tx@command_length& (0+255),b
 36626  014F10  C075  F064         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36627  014F14  C076  F065         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36628  014F18  C077  F066         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36629  014F1C  C078  F067         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36630  014F20  ECF2  F09D         	call	_spi_tx_tx	;wreg free
 36631  014F24  0012               	return		;funcret
 36632  014F26                     __end_of__flash_write_to_buffer:
 36633                           	opt stack 0
 36634                           tosu	equ	0xFFF
 36635                           tosh	equ	0xFFE
 36636                           tosl	equ	0xFFD
 36637                           pclath	equ	0xFFA
 36638                           tblptru	equ	0xFF8
 36639                           tblptrh	equ	0xFF7
 36640                           tblptrl	equ	0xFF6
 36641                           tablat	equ	0xFF5
 36642                           prodh	equ	0xFF4
 36643                           prodl	equ	0xFF3
 36644                           intcon	equ	0xFF2
 36645                           postinc0	equ	0xFEE
 36646                           wreg	equ	0xFE8
 36647                           indf1	equ	0xFE7
 36648                           postinc1	equ	0xFE6
 36649                           postdec1	equ	0xFE5
 36650                           plusw1	equ	0xFE3
 36651                           fsr1h	equ	0xFE2
 36652                           fsr1l	equ	0xFE1
 36653                           indf2	equ	0xFDF
 36654                           postinc2	equ	0xFDE
 36655                           postdec2	equ	0xFDD
 36656                           plusw2	equ	0xFDB
 36657                           fsr2h	equ	0xFDA
 36658                           fsr2l	equ	0xFD9
 36659                           status	equ	0xFD8
 36660                           
 36661 ;; *************** function _spi_tx_tx *****************
 36662 ;; Defined at:
 36663 ;;		line 146 in file "spi.c"
 36664 ;; Parameters:    Size  Location     Type
 36665 ;;  command         2    0[BANK0 ] PTR unsigned char 
 36666 ;;		 -> _flash_write_to_buffer@command(4), 
 36667 ;;  command_leng    2    2[BANK0 ] unsigned int 
 36668 ;;  data            2    4[BANK0 ] PTR unsigned char 
 36669 ;;		 -> ConfigFile_buffer(512), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 36670 ;;		 -> _delete_root@deleted_value(1), buffer(512), msd_buffer(512), 
 36671 ;;  data_length     2    6[BANK0 ] unsigned int 
 36672 ;; Auto vars:     Size  Location     Type
 36673 ;;		None
 36674 ;; Return value:  Size  Location     Type
 36675 ;;                  1    wreg      void 
 36676 ;; Registers used:
 36677 ;;		wreg, status,2, status,0
 36678 ;; Tracked objects:
 36679 ;;		On entry : 0/0
 36680 ;;		On exit  : 0/0
 36681 ;;		Unchanged: 0/0
 36682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36683 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36685 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36686 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36687 ;;Total ram usage:       12 bytes
 36688 ;; Hardware stack levels used:    1
 36689 ;; Hardware stack levels required when called:   10
 36690 ;; This function calls:
 36691 ;;		Nothing
 36692 ;; This function is called by:
 36693 ;;		__flash_write_to_buffer
 36694 ;; This function uses a non-reentrant model
 36695 ;;
 36696                           
 36697                           	psect	text141
 36698  013BE4                     __ptext141:
 36699                           	opt stack 0
 36700  013BE4                     _spi_tx_tx:
 36701                           	opt stack 15
 36702                           
 36703                           ;spi.c: 149: DMACON1bits.SSCON1 = 0;
 36704                           
 36705                           ;incstack = 0
 36706  013BE4  9E88               	bcf	3976,7,c	;volatile
 36707                           
 36708                           ;spi.c: 150: DMACON1bits.SSCON0 = 0;
 36709  013BE6  9C88               	bcf	3976,6,c	;volatile
 36710                           
 36711                           ;spi.c: 152: DMACON1bits.TXINC = 1;
 36712  013BE8  8A88               	bsf	3976,5,c	;volatile
 36713                           
 36714                           ;spi.c: 154: DMACON1bits.RXINC = 0;
 36715  013BEA  9888               	bcf	3976,4,c	;volatile
 36716                           
 36717                           ;spi.c: 156: DMACON1bits.DUPLEX1 = 0;
 36718  013BEC  9688               	bcf	3976,3,c	;volatile
 36719                           
 36720                           ;spi.c: 157: DMACON1bits.DUPLEX0 = 1;
 36721  013BEE  8488               	bsf	3976,2,c	;volatile
 36722                           
 36723                           ;spi.c: 159: DMACON1bits.DLYINTEN = 0;
 36724  013BF0  9288               	bcf	3976,1,c	;volatile
 36725                           
 36726                           ;spi.c: 161: DMACON2bits.DLYCYC = 0b0000;
 36727  013BF2  9886               	bcf	3974,4,c	;volatile
 36728  013BF4  9A86               	bcf	3974,5,c	;volatile
 36729  013BF6  9C86               	bcf	3974,6,c	;volatile
 36730  013BF8  9E86               	bcf	3974,7,c	;volatile
 36731                           
 36732                           ;spi.c: 163: DMACON2bits.INTLVL = 0b0000;
 36733  013BFA  9086               	bcf	3974,0,c	;volatile
 36734  013BFC  9286               	bcf	3974,1,c	;volatile
 36735  013BFE  9486               	bcf	3974,2,c	;volatile
 36736  013C00  9686               	bcf	3974,3,c	;volatile
 36737                           
 36738                           ;spi.c: 166: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36739  013C02  0100               	movlb	0	; () banked
 36740  013C04  5161               	movf	(spi_tx_tx@command+1)& (0+255),w,b
 36741  013C06  6E6A               	movwf	3946,c	;volatile
 36742                           
 36743                           ; BSR set to: 0
 36744                           ;spi.c: 167: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36745  013C08  C060  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 36746                           
 36747                           ; BSR set to: 0
 36748                           ;spi.c: 170: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36749  013C0C  0EFF               	movlw	255
 36750  013C0E  6F68               	movwf	??_spi_tx_tx& (0+255),b
 36751  013C10  0EFF               	movlw	255
 36752  013C12  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 36753  013C14  C062  F06A         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 36754  013C18  C063  F06B         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 36755  013C1C  5168               	movf	??_spi_tx_tx& (0+255),w,b
 36756  013C1E  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 36757  013C20  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 36758  013C22  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 36759  013C24  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36760  013C28  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 36761  013C2A  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 36762  013C2C  6E66               	movwf	3942,c	;volatile
 36763                           
 36764                           ; BSR set to: 0
 36765                           ;spi.c: 171: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36766  013C2E  0562               	decf	spi_tx_tx@command_length& (0+255),w,b
 36767  013C30  6E67               	movwf	3943,c	;volatile
 36768                           
 36769                           ; BSR set to: 0
 36770                           ;spi.c: 174: LATDbits.LD7 = 0;
 36771  013C32  9E8C               	bcf	3980,7,c	;volatile
 36772                           
 36773                           ; BSR set to: 0
 36774                           ;spi.c: 177: DMACON1bits.DMAEN = 1;
 36775  013C34  8088               	bsf	3976,0,c	;volatile
 36776  013C36                     
 36777                           ; BSR set to: 0
 36778  013C36  B088               	btfsc	3976,0,c	;volatile
 36779  013C38  D7FE               	goto	l2197
 36780                           
 36781                           ;spi.c: 181: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36782  013C3A  0100               	movlb	0	; () banked
 36783  013C3C  5165               	movf	(spi_tx_tx@data+1)& (0+255),w,b
 36784  013C3E  6E6A               	movwf	3946,c	;volatile
 36785                           
 36786                           ; BSR set to: 0
 36787                           ;spi.c: 182: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36788  013C40  C064  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 36789                           
 36790                           ; BSR set to: 0
 36791                           ;spi.c: 185: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36792  013C44  0EFF               	movlw	255
 36793  013C46  6F68               	movwf	??_spi_tx_tx& (0+255),b
 36794  013C48  0EFF               	movlw	255
 36795  013C4A  6F69               	movwf	(??_spi_tx_tx+1)& (0+255),b
 36796  013C4C  C066  F06A         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 36797  013C50  C067  F06B         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 36798  013C54  5168               	movf	??_spi_tx_tx& (0+255),w,b
 36799  013C56  276A               	addwf	(??_spi_tx_tx+2)& (0+255),f,b
 36800  013C58  5169               	movf	(??_spi_tx_tx+1)& (0+255),w,b
 36801  013C5A  236B               	addwfc	(??_spi_tx_tx+3)& (0+255),f,b
 36802  013C5C  C06B  F06A         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36803  013C60  6B6B               	clrf	(??_spi_tx_tx+3)& (0+255),b
 36804  013C62  516A               	movf	(??_spi_tx_tx+2)& (0+255),w,b
 36805  013C64  6E66               	movwf	3942,c	;volatile
 36806                           
 36807                           ; BSR set to: 0
 36808                           ;spi.c: 186: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36809  013C66  0566               	decf	spi_tx_tx@data_length& (0+255),w,b
 36810  013C68  6E67               	movwf	3943,c	;volatile
 36811                           
 36812                           ; BSR set to: 0
 36813                           ;spi.c: 189: DMACON1bits.DMAEN = 1;
 36814  013C6A  8088               	bsf	3976,0,c	;volatile
 36815  013C6C                     
 36816                           ; BSR set to: 0
 36817  013C6C  B088               	btfsc	3976,0,c	;volatile
 36818  013C6E  D7FE               	goto	l2200
 36819                           
 36820                           ;spi.c: 193: LATDbits.LD7 = 1;
 36821  013C70  8E8C               	bsf	3980,7,c	;volatile
 36822  013C72  0012               	return		;funcret
 36823  013C74                     __end_of_spi_tx_tx:
 36824                           	opt stack 0
 36825                           tosu	equ	0xFFF
 36826                           tosh	equ	0xFFE
 36827                           tosl	equ	0xFFD
 36828                           pclath	equ	0xFFA
 36829                           tblptru	equ	0xFF8
 36830                           tblptrh	equ	0xFF7
 36831                           tblptrl	equ	0xFF6
 36832                           tablat	equ	0xFF5
 36833                           prodh	equ	0xFF4
 36834                           prodl	equ	0xFF3
 36835                           intcon	equ	0xFF2
 36836                           postinc0	equ	0xFEE
 36837                           wreg	equ	0xFE8
 36838                           indf1	equ	0xFE7
 36839                           postinc1	equ	0xFE6
 36840                           postdec1	equ	0xFE5
 36841                           plusw1	equ	0xFE3
 36842                           fsr1h	equ	0xFE2
 36843                           fsr1l	equ	0xFE1
 36844                           indf2	equ	0xFDF
 36845                           postinc2	equ	0xFDE
 36846                           postdec2	equ	0xFDD
 36847                           plusw2	equ	0xFDB
 36848                           fsr2h	equ	0xFDA
 36849                           fsr2l	equ	0xFD9
 36850                           status	equ	0xFD8
 36851                           
 36852 ;; *************** function __flash_write_page_from_buffer *****************
 36853 ;; Defined at:
 36854 ;;		line 258 in file "flash.c"
 36855 ;; Parameters:    Size  Location     Type
 36856 ;;  page            2   19[BANK0 ] unsigned int 
 36857 ;;  buffer          1   21[BANK0 ] enum E7058
 36858 ;; Auto vars:     Size  Location     Type
 36859 ;;  command         4   25[BANK0 ] unsigned char [4]
 36860 ;; Return value:  Size  Location     Type
 36861 ;;                  1    wreg      void 
 36862 ;; Registers used:
 36863 ;;		wreg, status,2, status,0, cstack
 36864 ;; Tracked objects:
 36865 ;;		On entry : 0/0
 36866 ;;		On exit  : 0/0
 36867 ;;		Unchanged: 0/0
 36868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36869 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36870 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36871 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36872 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36873 ;;Total ram usage:       10 bytes
 36874 ;; Hardware stack levels used:    1
 36875 ;; Hardware stack levels required when called:   13
 36876 ;; This function calls:
 36877 ;;		__flash_is_busy
 36878 ;;		_spi_tx
 36879 ;; This function is called by:
 36880 ;;		_flash_sector_write
 36881 ;;		_flash_partial_write
 36882 ;;		_flash_write_page_from_buffer
 36883 ;; This function uses a non-reentrant model
 36884 ;;
 36885                           
 36886                           	psect	text142
 36887  014A6C                     __ptext142:
 36888                           	opt stack 0
 36889  014A6C                     __flash_write_page_from_buffer:
 36890                           	opt stack 13
 36891                           
 36892                           ;flash.c: 260: uint8_t command[4];;flash.c: 263: while(_flash_is_busy());
 36893                           
 36894                           ;incstack = 0
 36895  014A6C  EC70  F0AD         	call	__flash_is_busy	;wreg free
 36896  014A70  0900               	iorlw	0
 36897  014A72  A4D8               	btfss	status,2,c
 36898  014A74  D7FB               	goto	__flash_write_page_from_buffer
 36899                           
 36900                           ;flash.c: 266: if(buffer==FLASH_BUFFER_1)
 36901  014A76  0100               	movlb	0	; () banked
 36902  014A78  5175               	movf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 36903  014A7A  A4D8               	btfss	status,2,c
 36904  014A7C  D002               	goto	l1589
 36905                           
 36906                           ; BSR set to: 0
 36907                           ;flash.c: 267: command[0] = 0x83;
 36908  014A7E  0E83               	movlw	131
 36909  014A80  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 36910  014A82                     l1589:
 36911                           
 36912                           ; BSR set to: 0
 36913                           ;flash.c: 268: if(buffer==FLASH_BUFFER_2)
 36914                           
 36915                           ; BSR set to: 0
 36916  014A82  0575               	decf	__flash_write_page_from_buffer@buffer& (0+255),w,b
 36917  014A84  A4D8               	btfss	status,2,c
 36918  014A86  D002               	goto	l1590
 36919                           
 36920                           ; BSR set to: 0
 36921                           ;flash.c: 269: command[0] = 0x86;
 36922  014A88  0E86               	movlw	134
 36923  014A8A  6F79               	movwf	__flash_write_page_from_buffer@command& (0+255),b
 36924  014A8C                     l1590:
 36925                           
 36926                           ; BSR set to: 0
 36927                           ;flash.c: 271: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 36928                           
 36929                           ; BSR set to: 0
 36930  014A8C  C073  F076         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 36931  014A90  C074  F077         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 36932  014A94  0E07               	movlw	7
 36933  014A96  6F78               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),b
 36934  014A98                     u10185:
 36935  014A98  90D8               	bcf	status,0,c
 36936  014A9A  3377               	rrcf	(??__flash_write_page_from_buffer+1)& (0+255),f,b
 36937  014A9C  3376               	rrcf	??__flash_write_page_from_buffer& (0+255),f,b
 36938  014A9E  2F78               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,b
 36939  014AA0  D7FB               	goto	u10185
 36940  014AA2  5176               	movf	??__flash_write_page_from_buffer& (0+255),w,b
 36941  014AA4  6F7A               	movwf	(__flash_write_page_from_buffer@command+1)& (0+255),b
 36942                           
 36943                           ; BSR set to: 0
 36944                           ;flash.c: 272: command[2] = ((unsigned char)((page<<1)&0xFF));
 36945  014AA6  5173               	movf	__flash_write_page_from_buffer@page& (0+255),w,b
 36946  014AA8  2573               	addwf	__flash_write_page_from_buffer@page& (0+255),w,b
 36947  014AAA  6F7B               	movwf	(__flash_write_page_from_buffer@command+2)& (0+255),b
 36948                           
 36949                           ;flash.c: 273: command[3] = 0x00;
 36950  014AAC  0E00               	movlw	0
 36951  014AAE  6F7C               	movwf	(__flash_write_page_from_buffer@command+3)& (0+255),b
 36952                           
 36953                           ; BSR set to: 0
 36954                           ;flash.c: 276: spi_tx(command, 4);
 36955  014AB0  0E79               	movlw	low __flash_write_page_from_buffer@command
 36956  014AB2  6F60               	movwf	spi_tx@data& (0+255),b
 36957  014AB4  0E00               	movlw	high __flash_write_page_from_buffer@command
 36958  014AB6  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 36959  014AB8  0E00               	movlw	0
 36960  014ABA  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 36961  014ABC  0E04               	movlw	4
 36962  014ABE  6F62               	movwf	spi_tx@length& (0+255),b
 36963  014AC0  EC63  F0A5         	call	_spi_tx	;wreg free
 36964  014AC4  0012               	return		;funcret
 36965  014AC6                     __end_of__flash_write_page_from_buffer:
 36966                           	opt stack 0
 36967                           tosu	equ	0xFFF
 36968                           tosh	equ	0xFFE
 36969                           tosl	equ	0xFFD
 36970                           pclath	equ	0xFFA
 36971                           tblptru	equ	0xFF8
 36972                           tblptrh	equ	0xFF7
 36973                           tblptrl	equ	0xFF6
 36974                           tablat	equ	0xFF5
 36975                           prodh	equ	0xFF4
 36976                           prodl	equ	0xFF3
 36977                           intcon	equ	0xFF2
 36978                           postinc0	equ	0xFEE
 36979                           wreg	equ	0xFE8
 36980                           indf1	equ	0xFE7
 36981                           postinc1	equ	0xFE6
 36982                           postdec1	equ	0xFE5
 36983                           plusw1	equ	0xFE3
 36984                           fsr1h	equ	0xFE2
 36985                           fsr1l	equ	0xFE1
 36986                           indf2	equ	0xFDF
 36987                           postinc2	equ	0xFDE
 36988                           postdec2	equ	0xFDD
 36989                           plusw2	equ	0xFDB
 36990                           fsr2h	equ	0xFDA
 36991                           fsr2l	equ	0xFD9
 36992                           status	equ	0xFD8
 36993                           
 36994 ;; *************** function __flash_compare_page_to_buffer *****************
 36995 ;; Defined at:
 36996 ;;		line 176 in file "flash.c"
 36997 ;; Parameters:    Size  Location     Type
 36998 ;;  page            2   19[BANK0 ] unsigned int 
 36999 ;;  buffer          1   21[BANK0 ] enum E7058
 37000 ;; Auto vars:     Size  Location     Type
 37001 ;;  command         4   27[BANK0 ] unsigned char [4]
 37002 ;;  status          2   25[BANK0 ] unsigned int 
 37003 ;; Return value:  Size  Location     Type
 37004 ;;                  1    wreg      enum E7062
 37005 ;; Registers used:
 37006 ;;		wreg, status,2, status,0, cstack
 37007 ;; Tracked objects:
 37008 ;;		On entry : 0/0
 37009 ;;		On exit  : 0/0
 37010 ;;		Unchanged: 0/0
 37011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37012 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37013 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37014 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37015 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37016 ;;Total ram usage:       12 bytes
 37017 ;; Hardware stack levels used:    1
 37018 ;; Hardware stack levels required when called:   13
 37019 ;; This function calls:
 37020 ;;		__flash_get_status
 37021 ;;		__flash_is_busy
 37022 ;;		_spi_tx
 37023 ;; This function is called by:
 37024 ;;		_flash_sector_write
 37025 ;;		_flash_partial_write
 37026 ;; This function uses a non-reentrant model
 37027 ;;
 37028                           
 37029                           	psect	text143
 37030  014096                     __ptext143:
 37031                           	opt stack 0
 37032  014096                     __flash_compare_page_to_buffer:
 37033                           	opt stack 13
 37034                           
 37035                           ;flash.c: 178: uint8_t command[4];;flash.c: 179: uint16_t status;;flash.c: 182: while(_f
      +                          lash_is_busy());
 37036                           
 37037                           ;incstack = 0
 37038  014096  EC70  F0AD         	call	__flash_is_busy	;wreg free
 37039  01409A  0900               	iorlw	0
 37040  01409C  A4D8               	btfss	status,2,c
 37041  01409E  D7FB               	goto	__flash_compare_page_to_buffer
 37042                           
 37043                           ;flash.c: 185: if(buffer==FLASH_BUFFER_1)
 37044  0140A0  0100               	movlb	0	; () banked
 37045  0140A2  5175               	movf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37046  0140A4  A4D8               	btfss	status,2,c
 37047  0140A6  D002               	goto	l1562
 37048                           
 37049                           ; BSR set to: 0
 37050                           ;flash.c: 186: command[0] = 0x60;
 37051  0140A8  0E60               	movlw	96
 37052  0140AA  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37053  0140AC                     l1562:
 37054                           
 37055                           ; BSR set to: 0
 37056                           ;flash.c: 187: if(buffer==FLASH_BUFFER_2)
 37057                           
 37058                           ; BSR set to: 0
 37059  0140AC  0575               	decf	__flash_compare_page_to_buffer@buffer& (0+255),w,b
 37060  0140AE  A4D8               	btfss	status,2,c
 37061  0140B0  D002               	goto	l1563
 37062                           
 37063                           ; BSR set to: 0
 37064                           ;flash.c: 188: command[0] = 0x60;
 37065  0140B2  0E60               	movlw	96
 37066  0140B4  6F7B               	movwf	__flash_compare_page_to_buffer@command& (0+255),b
 37067  0140B6                     l1563:
 37068                           
 37069                           ; BSR set to: 0
 37070                           ;flash.c: 190: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37071                           
 37072                           ; BSR set to: 0
 37073  0140B6  C073  F076         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 37074  0140BA  C074  F077         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 37075  0140BE  0E07               	movlw	7
 37076  0140C0  6F78               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),b
 37077  0140C2                     u10095:
 37078  0140C2  90D8               	bcf	status,0,c
 37079  0140C4  3377               	rrcf	(??__flash_compare_page_to_buffer+1)& (0+255),f,b
 37080  0140C6  3376               	rrcf	??__flash_compare_page_to_buffer& (0+255),f,b
 37081  0140C8  2F78               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,b
 37082  0140CA  D7FB               	goto	u10095
 37083  0140CC  5176               	movf	??__flash_compare_page_to_buffer& (0+255),w,b
 37084  0140CE  6F7C               	movwf	(__flash_compare_page_to_buffer@command+1)& (0+255),b
 37085                           
 37086                           ; BSR set to: 0
 37087                           ;flash.c: 191: command[2] = ((unsigned char)((page<<1)&0xFF));
 37088  0140D0  5173               	movf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37089  0140D2  2573               	addwf	__flash_compare_page_to_buffer@page& (0+255),w,b
 37090  0140D4  6F7D               	movwf	(__flash_compare_page_to_buffer@command+2)& (0+255),b
 37091                           
 37092                           ;flash.c: 192: command[3] = 0x00;
 37093  0140D6  0E00               	movlw	0
 37094  0140D8  6F7E               	movwf	(__flash_compare_page_to_buffer@command+3)& (0+255),b
 37095                           
 37096                           ; BSR set to: 0
 37097                           ;flash.c: 195: spi_tx(command, 4);
 37098  0140DA  0E7B               	movlw	low __flash_compare_page_to_buffer@command
 37099  0140DC  6F60               	movwf	spi_tx@data& (0+255),b
 37100  0140DE  0E00               	movlw	high __flash_compare_page_to_buffer@command
 37101  0140E0  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 37102  0140E2  0E00               	movlw	0
 37103  0140E4  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 37104  0140E6  0E04               	movlw	4
 37105  0140E8  6F62               	movwf	spi_tx@length& (0+255),b
 37106  0140EA  EC63  F0A5         	call	_spi_tx	;wreg free
 37107  0140EE  EC70  F0AD         	call	__flash_is_busy	;wreg free
 37108  0140F2  0900               	iorlw	0
 37109  0140F4  A4D8               	btfss	status,2,c
 37110  0140F6  D7FB               	goto	l1565
 37111                           
 37112                           ;flash.c: 201: status = _flash_get_status();
 37113  0140F8  EC62  F0AB         	call	__flash_get_status	;wreg free
 37114  0140FC  C06C  F079         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 37115  014100  C06D  F07A         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 37116                           
 37117                           ;flash.c: 204: if(status & 0b0000000001000000)
 37118  014104  0100               	movlb	0	; () banked
 37119  014106  AD79               	btfss	__flash_compare_page_to_buffer@status& (0+255),6,b
 37120  014108  D002               	goto	l1567
 37121                           
 37122                           ; BSR set to: 0
 37123                           ;flash.c: 205: {;flash.c: 207: return DATA_DOES_NOT_MATCH;
 37124  01410A  0E01               	movlw	1
 37125                           
 37126                           ; BSR set to: 0
 37127                           ;flash.c: 208: }
 37128                           
 37129                           ; BSR set to: 0
 37130  01410C  0012               	return	
 37131  01410E                     l1567:
 37132                           
 37133                           ; BSR set to: 0
 37134                           ;flash.c: 209: else;flash.c: 210: {;flash.c: 212: return DATA_DOES_MATCH;
 37135                           
 37136                           ; BSR set to: 0
 37137  01410E  0E00               	movlw	0
 37138                           
 37139                           ; BSR set to: 0
 37140  014110  0012               	return	
 37141  014112                     __end_of__flash_compare_page_to_buffer:
 37142                           	opt stack 0
 37143                           tosu	equ	0xFFF
 37144                           tosh	equ	0xFFE
 37145                           tosl	equ	0xFFD
 37146                           pclath	equ	0xFFA
 37147                           tblptru	equ	0xFF8
 37148                           tblptrh	equ	0xFF7
 37149                           tblptrl	equ	0xFF6
 37150                           tablat	equ	0xFF5
 37151                           prodh	equ	0xFF4
 37152                           prodl	equ	0xFF3
 37153                           intcon	equ	0xFF2
 37154                           postinc0	equ	0xFEE
 37155                           wreg	equ	0xFE8
 37156                           indf1	equ	0xFE7
 37157                           postinc1	equ	0xFE6
 37158                           postdec1	equ	0xFE5
 37159                           plusw1	equ	0xFE3
 37160                           fsr1h	equ	0xFE2
 37161                           fsr1l	equ	0xFE1
 37162                           indf2	equ	0xFDF
 37163                           postinc2	equ	0xFDE
 37164                           postdec2	equ	0xFDD
 37165                           plusw2	equ	0xFDB
 37166                           fsr2h	equ	0xFDA
 37167                           fsr2l	equ	0xFD9
 37168                           status	equ	0xFD8
 37169                           
 37170 ;; *************** function _MSDReadHandler *****************
 37171 ;; Defined at:
 37172 ;;		line 1038 in file "usb_device_msd.c"
 37173 ;; Parameters:    Size  Location     Type
 37174 ;;		None
 37175 ;; Auto vars:     Size  Location     Type
 37176 ;;		None
 37177 ;; Return value:  Size  Location     Type
 37178 ;;                  1    wreg      unsigned char 
 37179 ;; Registers used:
 37180 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 37181 ;; Tracked objects:
 37182 ;;		On entry : 0/0
 37183 ;;		On exit  : 0/0
 37184 ;;		Unchanged: 0/0
 37185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37186 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37187 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37188 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37189 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37190 ;;Total ram usage:        4 bytes
 37191 ;; Hardware stack levels used:    1
 37192 ;; Hardware stack levels required when called:   16
 37193 ;; This function calls:
 37194 ;;		_ExternalFlash_SectorRead
 37195 ;;		_MSDCheckForErrorCases
 37196 ;;		_USBStallEndpoint
 37197 ;;		_USBTransferOnePacket
 37198 ;; This function is called by:
 37199 ;;		_MSDProcessCommandMediaPresent
 37200 ;; This function uses a non-reentrant model
 37201 ;;
 37202                           
 37203                           	psect	text144
 37204  00E7E6                     __ptext144:
 37205                           	opt stack 0
 37206  00E7E6                     _MSDReadHandler:
 37207                           	opt stack 10
 37208                           
 37209                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 37210                           
 37211                           ; BSR set to: 0
 37212                           ;incstack = 0
 37213  00E7E6  D0DF               	goto	l681
 37214  00E7E8                     l682:
 37215                           
 37216                           ; BSR set to: 1
 37217                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 37218  00E7E8  C211  F128         	movff	_gblCBW+17,_LBA+3
 37219                           
 37220                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 37221  00E7EC  C212  F127         	movff	_gblCBW+18,_LBA+2
 37222                           
 37223                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 37224  00E7F0  C213  F126         	movff	_gblCBW+19,_LBA+1
 37225                           
 37226                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 37227  00E7F4  C214  F125         	movff	_gblCBW+20,_LBA
 37228                           
 37229                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 37230  00E7F8  C216  F13A         	movff	_gblCBW+22,_TransferLength+1
 37231                           
 37232                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 37233  00E7FC  C217  F139         	movff	_gblCBW+23,_TransferLength
 37234                           
 37235                           ; BSR set to: 1
 37236                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 37237  00E800  5139               	movf	_TransferLength& (0+255),w,b
 37238  00E802  0100               	movlb	0	; () banked
 37239  00E804  6F95               	movwf	??_MSDReadHandler& (0+255),b
 37240  00E806  0101               	movlb	1	; () banked
 37241  00E808  513A               	movf	(_TransferLength+1)& (0+255),w,b
 37242  00E80A  0100               	movlb	0	; () banked
 37243  00E80C  6F96               	movwf	(??_MSDReadHandler+1)& (0+255),b
 37244  00E80E  6B97               	clrf	(??_MSDReadHandler+2)& (0+255),b
 37245  00E810  6B98               	clrf	(??_MSDReadHandler+3)& (0+255),b
 37246  00E812  0E09               	movlw	9
 37247  00E814                     u11115:
 37248  00E814  90D8               	bcf	status,0,c
 37249  00E816  3795               	rlcf	??_MSDReadHandler& (0+255),f,b
 37250  00E818  3796               	rlcf	(??_MSDReadHandler+1)& (0+255),f,b
 37251  00E81A  3797               	rlcf	(??_MSDReadHandler+2)& (0+255),f,b
 37252  00E81C  3798               	rlcf	(??_MSDReadHandler+3)& (0+255),f,b
 37253  00E81E  2EE8               	decfsz	wreg,f,c
 37254  00E820  D7F9               	goto	u11115
 37255  00E822  C095  F06A         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 37256  00E826  C096  F06B         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 37257  00E82A  C097  F06C         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 37258  00E82E  C098  F06D         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 37259  00E832  ECE6  F086         	call	_MSDCheckForErrorCases	;wreg free
 37260  00E836  0900               	iorlw	0
 37261  00E838  A4D8               	btfss	status,2,c
 37262  00E83A  D0C7               	goto	l684
 37263                           
 37264                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 37265                           
 37266                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 37267  00E83C  0E01               	movlw	1
 37268  00E83E  0101               	movlb	1	; () banked
 37269  00E840  6F54               	movwf	_MSDReadState& (0+255),b
 37270  00E842                     
 37271                           ; BSR set to: 1
 37272                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 37273                           
 37274                           ; BSR set to: 1
 37275  00E842  5139               	movf	_TransferLength& (0+255),w,b
 37276  00E844  113A               	iorwf	(_TransferLength+1)& (0+255),w,b
 37277  00E846  A4D8               	btfss	status,2,c
 37278  00E848  D002               	goto	l686
 37279                           
 37280                           ; BSR set to: 1
 37281                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 37282  00E84A  0E00               	movlw	0
 37283  00E84C  D04A               	goto	L54
 37284  00E84E                     l686:
 37285                           
 37286                           ; BSR set to: 1
 37287                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 37288                           
 37289                           ; BSR set to: 1
 37290  00E84E  0739               	decf	_TransferLength& (0+255),f,b
 37291  00E850  A0D8               	btfss	status,0,c
 37292  00E852  073A               	decf	(_TransferLength+1)& (0+255),f,b
 37293                           
 37294                           ; BSR set to: 1
 37295                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 37296  00E854  0E02               	movlw	2
 37297  00E856  6F54               	movwf	_MSDReadState& (0+255),b
 37298  00E858                     
 37299                           ; BSR set to: 1
 37300                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 37301                           
 37302                           ; BSR set to: 1
 37303  00E858  513B               	movf	_USBMSDInHandle& (0+255),w,b
 37304  00E85A  113C               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37305  00E85C  B4D8               	btfsc	status,2,c
 37306  00E85E  D006               	goto	l688
 37307                           
 37308                           ; BSR set to: 1
 37309  00E860  C13B  FFD9         	movff	_USBMSDInHandle,fsr2l
 37310  00E864  C13C  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37311  00E868  BEDF               	btfsc	indf2,7,c
 37312  00E86A  D0AF               	goto	l684
 37313  00E86C                     l688:
 37314                           
 37315                           ; BSR set to: 1
 37316                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 37317                           
 37318                           ; BSR set to: 1
 37319  00E86C  C2AC  F08B         	movff	_LUN+21,ExternalFlash_SectorRead@config
 37320  00E870  C2AD  F08C         	movff	_LUN+22,ExternalFlash_SectorRead@config+1
 37321  00E874  C125  F08D         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 37322  00E878  C126  F08E         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 37323  00E87C  C127  F08F         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 37324  00E880  C128  F090         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 37325  00E884  0E00               	movlw	0
 37326  00E886  0100               	movlb	0	; () banked
 37327  00E888  6F91               	movwf	ExternalFlash_SectorRead@buffer& (0+255),b
 37328  00E88A  0E06               	movlw	6
 37329  00E88C  6F92               	movwf	(ExternalFlash_SectorRead@buffer+1)& (0+255),b
 37330  00E88E  EE22  F0A3         	lfsr	2,_LUN+12
 37331  00E892  D801               	call	u11168
 37332  00E894  D00A               	goto	u11169
 37333  00E896                     u11168:
 37334  00E896  0005               	push	
 37335  00E898  6EFA               	movwf	pclath,c
 37336  00E89A  50DE               	movf	postinc2,w,c
 37337  00E89C  6EFD               	movwf	tosl,c
 37338  00E89E  50DE               	movf	postinc2,w,c
 37339  00E8A0  6EFE               	movwf	tosh,c
 37340  00E8A2  50DE               	movf	postinc2,w,c
 37341  00E8A4  6EFF               	movwf	tosu,c
 37342  00E8A6  50FA               	movf	pclath,w,c
 37343  00E8A8  0012               	return		;indir
 37344  00E8AA                     u11169:
 37345  00E8AA  06E8               	decf	wreg,f,c
 37346  00E8AC  B4D8               	btfsc	status,2,c
 37347  00E8AE  D01B               	goto	l691
 37348                           
 37349                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 37350  00E8B0  0E64               	movlw	100
 37351  00E8B2  0101               	movlb	1	; () banked
 37352  00E8B4  6152               	cpfslt	_MSDRetryAttempt& (0+255),b
 37353  00E8B6  D002               	goto	l690
 37354                           
 37355                           ; BSR set to: 1
 37356                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 37357  00E8B8  2B52               	incf	_MSDRetryAttempt& (0+255),f,b
 37358                           
 37359                           ;usb_device_msd.c: 1088: break;
 37360  00E8BA  D087               	goto	l684
 37361  00E8BC                     l690:
 37362                           
 37363                           ; BSR set to: 1
 37364                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 37365                           
 37366                           ; BSR set to: 1
 37367  00E8BC  0E02               	movlw	2
 37368  00E8BE  010D               	movlb	13	; () banked
 37369  00E8C0  6F8C               	movwf	140,b	;volatile
 37370                           
 37371                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 37372  00E8C2  0101               	movlb	1	; () banked
 37373  00E8C4  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 37374  00E8C6  0BF0               	andlw	-16
 37375  00E8C8  0903               	iorlw	3
 37376  00E8CA  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 37377                           
 37378                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 37379  00E8CC  0E00               	movlw	0
 37380  00E8CE  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 37381                           
 37382                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 37383  00E8D0  0E00               	movlw	0
 37384  00E8D2  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 37385                           
 37386                           ; BSR set to: 1
 37387                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 37388  00E8D4  0E01               	movlw	1
 37389  00E8D6  0100               	movlb	0	; () banked
 37390  00E8D8  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37391  00E8DA  0E02               	movlw	2
 37392  00E8DC  EC06  F089         	call	_USBStallEndpoint
 37393  00E8E0  D05F               	goto	l13078
 37394  00E8E2                     L54:
 37395  00E8E2  6F54               	movwf	_MSDReadState& (0+255),b
 37396                           
 37397                           ;usb_device_msd.c: 1109: break;
 37398  00E8E4  D072               	goto	l684
 37399  00E8E6                     l691:
 37400                           
 37401                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 37402                           
 37403                           ; BSR set to: 1
 37404                           
 37405                           ; BSR set to: 1
 37406  00E8E6  0E01               	movlw	1
 37407  00E8E8  0101               	movlb	1	; () banked
 37408  00E8EA  2725               	addwf	_LBA& (0+255),f,b
 37409  00E8EC  0E00               	movlw	0
 37410  00E8EE  2326               	addwfc	(_LBA+1)& (0+255),f,b
 37411  00E8F0  2327               	addwfc	(_LBA+2)& (0+255),f,b
 37412  00E8F2  2328               	addwfc	(_LBA+3)& (0+255),f,b
 37413                           
 37414                           ; BSR set to: 1
 37415                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 37416  00E8F4  0E00               	movlw	0
 37417  00E8F6  010D               	movlb	13	; () banked
 37418  00E8F8  6F88               	movwf	136,b	;volatile
 37419  00E8FA  0E02               	movlw	2
 37420  00E8FC  6F89               	movwf	137,b	;volatile
 37421  00E8FE  0E00               	movlw	0
 37422  00E900  6F8A               	movwf	138,b	;volatile
 37423  00E902  0E00               	movlw	0
 37424  00E904  6F8B               	movwf	139,b	;volatile
 37425                           
 37426                           ; BSR set to: 13
 37427                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 37428  00E906  0E00               	movlw	0
 37429  00E908  0101               	movlb	1	; () banked
 37430  00E90A  6F3F               	movwf	_ptrNextData& (0+255),b
 37431  00E90C  0E06               	movlw	6
 37432  00E90E  6F40               	movwf	(_ptrNextData+1)& (0+255),b
 37433                           
 37434                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 37435  00E910  0E03               	movlw	3
 37436  00E912  6F54               	movwf	_MSDReadState& (0+255),b
 37437  00E914                     
 37438                           ; BSR set to: 1
 37439                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 37440                           
 37441                           ; BSR set to: 1
 37442  00E914  010D               	movlb	13	; () banked
 37443  00E916  5188               	movf	136,w,b	;volatile
 37444  00E918  1189               	iorwf	137,w,b	;volatile
 37445  00E91A  118A               	iorwf	138,w,b	;volatile
 37446  00E91C  118B               	iorwf	139,w,b	;volatile
 37447  00E91E  A4D8               	btfss	status,2,c
 37448  00E920  D002               	goto	l693
 37449                           
 37450                           ; BSR set to: 13
 37451                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 37452  00E922  0E01               	movlw	1
 37453  00E924  D03E               	goto	L56
 37454  00E926                     l693:
 37455                           
 37456                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 37457                           
 37458                           ; BSR set to: 1
 37459  00E926  0E04               	movlw	4
 37460  00E928  0101               	movlb	1	; () banked
 37461  00E92A  6F54               	movwf	_MSDReadState& (0+255),b
 37462  00E92C                     
 37463                           ; BSR set to: 1
 37464                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 37465                           
 37466                           ; BSR set to: 1
 37467  00E92C  513B               	movf	_USBMSDInHandle& (0+255),w,b
 37468  00E92E  113C               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 37469  00E930  B4D8               	btfsc	status,2,c
 37470  00E932  D006               	goto	l695
 37471                           
 37472                           ; BSR set to: 1
 37473  00E934  C13B  FFD9         	movff	_USBMSDInHandle,fsr2l
 37474  00E938  C13C  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 37475  00E93C  BEDF               	btfsc	indf2,7,c
 37476  00E93E  D045               	goto	l684
 37477  00E940                     l695:
 37478                           
 37479                           ; BSR set to: 1
 37480                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 37481                           
 37482                           ; BSR set to: 1
 37483  00E940  0E01               	movlw	1
 37484  00E942  0100               	movlb	0	; () banked
 37485  00E944  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 37486  00E946  C13F  F061         	movff	_ptrNextData,USBTransferOnePacket@data
 37487  00E94A  C140  F062         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 37488  00E94E  0E40               	movlw	64
 37489  00E950  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 37490  00E952  0E02               	movlw	2
 37491  00E954  EC8B  F089         	call	_USBTransferOnePacket
 37492  00E958  C060  F13B         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 37493  00E95C  C061  F13C         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 37494                           
 37495                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 37496  00E960  0E03               	movlw	3
 37497  00E962  0101               	movlb	1	; () banked
 37498  00E964  6F54               	movwf	_MSDReadState& (0+255),b
 37499                           
 37500                           ; BSR set to: 1
 37501                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 37502  00E966  0E40               	movlw	64
 37503  00E968  0102               	movlb	2	; () banked
 37504  00E96A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 37505  00E96C  0E00               	movlw	0
 37506  00E96E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 37507  00E970  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 37508  00E972  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 37509                           
 37510                           ; BSR set to: 2
 37511                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 37512  00E974  0E40               	movlw	64
 37513  00E976  010D               	movlb	13	; () banked
 37514  00E978  5F88               	subwf	136,f,b	;volatile
 37515  00E97A  0E00               	movlw	0
 37516  00E97C  5B89               	subwfb	137,f,b	;volatile
 37517  00E97E  5B8A               	subwfb	138,f,b	;volatile
 37518  00E980  5B8B               	subwfb	139,f,b	;volatile
 37519                           
 37520                           ; BSR set to: 13
 37521                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 37522  00E982  0E40               	movlw	64
 37523  00E984  0101               	movlb	1	; () banked
 37524  00E986  273F               	addwf	_ptrNextData& (0+255),f,b
 37525  00E988  0E00               	movlw	0
 37526  00E98A  2340               	addwfc	(_ptrNextData+1)& (0+255),f,b
 37527                           
 37528                           ;usb_device_msd.c: 1149: break;
 37529  00E98C  D01E               	goto	l684
 37530  00E98E                     
 37531                           ; BSR set to: 1
 37532                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 37533                           
 37534                           ; BSR set to: 1
 37535  00E98E  0E02               	movlw	2
 37536  00E990  010D               	movlb	13	; () banked
 37537  00E992  6F8C               	movwf	140,b	;volatile
 37538                           
 37539                           ; BSR set to: 13
 37540                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 37541  00E994  0E01               	movlw	1
 37542  00E996  0100               	movlb	0	; () banked
 37543  00E998  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 37544  00E99A  0E02               	movlw	2
 37545  00E99C  EC06  F089         	call	_USBStallEndpoint
 37546  00E9A0                     l13078:
 37547                           
 37548                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 37549  00E9A0  0E00               	movlw	0
 37550  00E9A2                     L56:
 37551  00E9A2  0101               	movlb	1	; () banked
 37552  00E9A4  D79E               	goto	L54
 37553  00E9A6                     l681:
 37554                           
 37555                           ; BSR set to: 1
 37556  00E9A6  0101               	movlb	1	; () banked
 37557  00E9A8  5154               	movf	_MSDReadState& (0+255),w,b
 37558                           
 37559                           ; Switch size 1, requested type "space"
 37560                           ; Number of cases is 5, Range of values is 0 to 4
 37561                           ; switch strategies available:
 37562                           ; Name         Instructions Cycles
 37563                           ; simple_byte           16     9 (average)
 37564                           ;	Chosen strategy is simple_byte
 37565  00E9AA  0A00               	xorlw	0	; case 0
 37566  00E9AC  B4D8               	btfsc	status,2,c
 37567  00E9AE  D71C               	goto	l682
 37568  00E9B0  0A01               	xorlw	1	; case 1
 37569  00E9B2  B4D8               	btfsc	status,2,c
 37570  00E9B4  D746               	goto	l685
 37571  00E9B6  0A03               	xorlw	3	; case 2
 37572  00E9B8  B4D8               	btfsc	status,2,c
 37573  00E9BA  D74E               	goto	l687
 37574  00E9BC  0A01               	xorlw	1	; case 3
 37575  00E9BE  B4D8               	btfsc	status,2,c
 37576  00E9C0  D7A9               	goto	l692
 37577  00E9C2  0A07               	xorlw	7	; case 4
 37578  00E9C4  B4D8               	btfsc	status,2,c
 37579  00E9C6  D7B2               	goto	l694
 37580  00E9C8  D7E2               	goto	l696
 37581  00E9CA                     l684:
 37582                           
 37583                           ;usb_device_msd.c: 1161: return MSDReadState;
 37584                           
 37585                           ; BSR set to: 1
 37586  00E9CA  0101               	movlb	1	; () banked
 37587  00E9CC  5154               	movf	_MSDReadState& (0+255),w,b
 37588  00E9CE  0012               	return	
 37589  00E9D0                     __end_of_MSDReadHandler:
 37590                           	opt stack 0
 37591                           tosu	equ	0xFFF
 37592                           tosh	equ	0xFFE
 37593                           tosl	equ	0xFFD
 37594                           pclath	equ	0xFFA
 37595                           tblptru	equ	0xFF8
 37596                           tblptrh	equ	0xFF7
 37597                           tblptrl	equ	0xFF6
 37598                           tablat	equ	0xFF5
 37599                           prodh	equ	0xFF4
 37600                           prodl	equ	0xFF3
 37601                           intcon	equ	0xFF2
 37602                           postinc0	equ	0xFEE
 37603                           wreg	equ	0xFE8
 37604                           indf1	equ	0xFE7
 37605                           postinc1	equ	0xFE6
 37606                           postdec1	equ	0xFE5
 37607                           plusw1	equ	0xFE3
 37608                           fsr1h	equ	0xFE2
 37609                           fsr1l	equ	0xFE1
 37610                           indf2	equ	0xFDF
 37611                           postinc2	equ	0xFDE
 37612                           postdec2	equ	0xFDD
 37613                           plusw2	equ	0xFDB
 37614                           fsr2h	equ	0xFDA
 37615                           fsr2l	equ	0xFD9
 37616                           status	equ	0xFD8
 37617                           
 37618 ;; *************** function _MSDCheckForErrorCases *****************
 37619 ;; Defined at:
 37620 ;;		line 1434 in file "usb_device_msd.c"
 37621 ;; Parameters:    Size  Location     Type
 37622 ;;  DeviceBytes     4   10[BANK0 ] unsigned long 
 37623 ;; Auto vars:     Size  Location     Type
 37624 ;;  DeviceNoData    1   16[BANK0 ] unsigned char 
 37625 ;;  MSDErrorCase    1   15[BANK0 ] unsigned char 
 37626 ;;  HostMoreData    1   14[BANK0 ] unsigned char 
 37627 ;; Return value:  Size  Location     Type
 37628 ;;                  1    wreg      unsigned char 
 37629 ;; Registers used:
 37630 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37631 ;; Tracked objects:
 37632 ;;		On entry : 0/0
 37633 ;;		On exit  : 0/0
 37634 ;;		Unchanged: 0/0
 37635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37636 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37637 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37639 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37640 ;;Total ram usage:        7 bytes
 37641 ;; Hardware stack levels used:    1
 37642 ;; Hardware stack levels required when called:   12
 37643 ;; This function calls:
 37644 ;;		_MSDErrorHandler
 37645 ;; This function is called by:
 37646 ;;		_MSDProcessCommandMediaPresent
 37647 ;;		_MSDReadHandler
 37648 ;;		_MSDWriteHandler
 37649 ;; This function uses a non-reentrant model
 37650 ;;
 37651                           
 37652                           	psect	text145
 37653  010DCC                     __ptext145:
 37654                           	opt stack 0
 37655  010DCC                     _MSDCheckForErrorCases:
 37656                           	opt stack 13
 37657                           
 37658                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 37659                           
 37660                           ; BSR set to: 1
 37661                           ;incstack = 0
 37662  010DCC  0100               	movlb	0	; () banked
 37663  010DCE  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37664  010DD0  116B               	iorwf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37665  010DD2  116C               	iorwf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37666  010DD4  116D               	iorwf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37667  010DD6  A4D8               	btfss	status,2,c
 37668  010DD8  D002               	goto	l726
 37669                           
 37670                           ; BSR set to: 0
 37671                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 37672  010DDA  0E01               	movlw	1
 37673  010DDC  D001               	goto	L57
 37674  010DDE                     l726:
 37675                           
 37676                           ; BSR set to: 0
 37677                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 37678                           
 37679                           ; BSR set to: 0
 37680  010DDE  0E00               	movlw	0
 37681  010DE0                     L57:
 37682  010DE0  6F70               	movwf	MSDCheckForErrorCases@DeviceNoData& (0+255),b
 37683                           
 37684                           ; BSR set to: 0
 37685                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 37686                           
 37687                           ; BSR set to: 0
 37688  010DE2  0101               	movlb	1	; () banked
 37689  010DE4  054F               	decf	_MSDHostNoData& (0+255),w,b
 37690  010DE6  A4D8               	btfss	status,2,c
 37691  010DE8  D006               	goto	l728
 37692                           
 37693                           ; BSR set to: 1
 37694  010DEA  0100               	movlb	0	; () banked
 37695  010DEC  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37696  010DEE  A4D8               	btfss	status,2,c
 37697  010DF0  D002               	goto	l728
 37698                           
 37699                           ; BSR set to: 0
 37700                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 37701  010DF2  0E00               	movlw	0
 37702                           
 37703                           ; BSR set to: 0
 37704  010DF4  0012               	return	
 37705  010DF6                     l728:
 37706                           
 37707                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 37708                           
 37709                           ; BSR set to: 0
 37710  010DF6  0100               	movlb	0	; () banked
 37711  010DF8  516A               	movf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37712  010DFA  0102               	movlb	2	; () banked
 37713  010DFC  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 37714  010DFE  E120               	bnz	l12670
 37715  010E00  0100               	movlb	0	; () banked
 37716  010E02  516B               	movf	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37717  010E04  0102               	movlb	2	; () banked
 37718  010E06  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 37719  010E08  E11B               	bnz	l12670
 37720  010E0A  0100               	movlb	0	; () banked
 37721  010E0C  516C               	movf	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37722  010E0E  0102               	movlb	2	; () banked
 37723  010E10  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 37724  010E12  E116               	bnz	l12670
 37725  010E14  0100               	movlb	0	; () banked
 37726  010E16  516D               	movf	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37727  010E18  0102               	movlb	2	; () banked
 37728  010E1A  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 37729  010E1C  A4D8               	btfss	status,2,c
 37730  010E1E  D010               	goto	l734
 37731                           
 37732                           ; BSR set to: 2
 37733                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 37734  010E20  0101               	movlb	1	; () banked
 37735  010E22  0556               	decf	_MSD_State& (0+255),w,b
 37736  010E24  A4D8               	btfss	status,2,c
 37737  010E26  D006               	goto	l731
 37738                           
 37739                           ; BSR set to: 1
 37740                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 37741  010E28  0E2A               	movlw	42
 37742  010E2A  1955               	xorwf	_MSDCommandState& (0+255),w,b
 37743  010E2C  B4D8               	btfsc	status,2,c
 37744  010E2E  D008               	goto	l734
 37745                           
 37746                           ; BSR set to: 1
 37747                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 37748  010E30  0E00               	movlw	0
 37749                           
 37750                           ; BSR set to: 1
 37751  010E32  0012               	return	
 37752  010E34                     l731:
 37753                           
 37754                           ; BSR set to: 1
 37755                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 37756                           
 37757                           ; BSR set to: 1
 37758  010E34  0E2A               	movlw	42
 37759  010E36  1955               	xorwf	_MSDCommandState& (0+255),w,b
 37760  010E38  A4D8               	btfss	status,2,c
 37761  010E3A  D002               	goto	l734
 37762                           
 37763                           ; BSR set to: 1
 37764                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 37765  010E3C  0E00               	movlw	0
 37766                           
 37767                           ; BSR set to: 1
 37768  010E3E  0012               	return	
 37769  010E40                     l734:
 37770  010E40                     l12670:
 37771                           
 37772                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 37773  010E40  0102               	movlb	2	; () banked
 37774  010E42  5108               	movf	(_gblCBW+8)& (0+255),w,b
 37775  010E44  0100               	movlb	0	; () banked
 37776  010E46  5D6A               	subwf	MSDCheckForErrorCases@DeviceBytes& (0+255),w,b
 37777  010E48  0102               	movlb	2	; () banked
 37778  010E4A  5109               	movf	(_gblCBW+9)& (0+255),w,b
 37779  010E4C  0100               	movlb	0	; () banked
 37780  010E4E  596B               	subwfb	(MSDCheckForErrorCases@DeviceBytes+1)& (0+255),w,b
 37781  010E50  0102               	movlb	2	; () banked
 37782  010E52  510A               	movf	(_gblCBW+10)& (0+255),w,b
 37783  010E54  0100               	movlb	0	; () banked
 37784  010E56  596C               	subwfb	(MSDCheckForErrorCases@DeviceBytes+2)& (0+255),w,b
 37785  010E58  0102               	movlb	2	; () banked
 37786  010E5A  510B               	movf	(_gblCBW+11)& (0+255),w,b
 37787  010E5C  0100               	movlb	0	; () banked
 37788  010E5E  596D               	subwfb	(MSDCheckForErrorCases@DeviceBytes+3)& (0+255),w,b
 37789  010E60  B0D8               	btfsc	status,0,c
 37790  010E62  D002               	goto	l735
 37791                           
 37792                           ; BSR set to: 0
 37793                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 37794  010E64  0E01               	movlw	1
 37795  010E66  D001               	goto	L58
 37796  010E68                     l735:
 37797                           
 37798                           ; BSR set to: 0
 37799                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 37800                           
 37801                           ; BSR set to: 0
 37802  010E68  0E00               	movlw	0
 37803  010E6A                     L58:
 37804  010E6A  6F6E               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),b
 37805                           
 37806                           ; BSR set to: 0
 37807                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 37808                           
 37809                           ; BSR set to: 0
 37810  010E6C  0E02               	movlw	2
 37811  010E6E  0101               	movlb	1	; () banked
 37812  010E70  1956               	xorwf	_MSD_State& (0+255),w,b
 37813  010E72  A4D8               	btfss	status,2,c
 37814  010E74  D017               	goto	l737
 37815                           
 37816                           ; BSR set to: 1
 37817                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 37818  010E76  0E2A               	movlw	42
 37819  010E78  1955               	xorwf	_MSDCommandState& (0+255),w,b
 37820  010E7A  B4D8               	btfsc	status,2,c
 37821  010E7C  D006               	goto	l738
 37822                           
 37823                           ; BSR set to: 1
 37824  010E7E  0100               	movlb	0	; () banked
 37825  010E80  5170               	movf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37826  010E82  A4D8               	btfss	status,2,c
 37827  010E84  D002               	goto	l738
 37828  010E86                     u10680:
 37829                           
 37830                           ; BSR set to: 0
 37831                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 37832  010E86  0E05               	movlw	5
 37833  010E88  D025               	goto	L63
 37834  010E8A                     l738:
 37835                           
 37836                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 37837                           
 37838                           ; BSR set to: 0
 37839  010E8A  0101               	movlb	1	; () banked
 37840  010E8C  054F               	decf	_MSDHostNoData& (0+255),w,b
 37841  010E8E  B4D8               	btfsc	status,2,c
 37842  010E90  D014               	goto	u10730
 37843                           
 37844                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 37845                           
 37846                           ; BSR set to: 0
 37847                           
 37848                           ; BSR set to: 1
 37849                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 37850  010E92  0100               	movlb	0	; () banked
 37851  010E94  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37852  010E96  B4D8               	btfsc	status,2,c
 37853  010E98  D003               	goto	u10710
 37854                           
 37855                           ; BSR set to: 0
 37856                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 37857                           
 37858                           ; BSR set to: 0
 37859                           
 37860                           ; BSR set to: 0
 37861                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 37862  010E9A  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 37863  010E9C  A4D8               	btfss	status,2,c
 37864  010E9E  D7F3               	goto	u10680
 37865  010EA0                     u10710:
 37866                           
 37867                           ; BSR set to: 0
 37868                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 37869  010EA0  0E04               	movlw	4
 37870  010EA2  D018               	goto	L63
 37871  010EA4                     l737:
 37872                           
 37873                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 37874                           
 37875                           ; BSR set to: 0
 37876  010EA4  0E2A               	movlw	42
 37877  010EA6  0101               	movlb	1	; () banked
 37878  010EA8  1955               	xorwf	_MSDCommandState& (0+255),w,b
 37879  010EAA  A4D8               	btfss	status,2,c
 37880  010EAC  D002               	goto	l747
 37881                           
 37882                           ; BSR set to: 1
 37883                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 37884  010EAE  0E03               	movlw	3
 37885  010EB0  D005               	goto	L62
 37886  010EB2                     l747:
 37887                           
 37888                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 37889                           
 37890                           ; BSR set to: 0
 37891  010EB2  0101               	movlb	1	; () banked
 37892  010EB4  054F               	decf	_MSDHostNoData& (0+255),w,b
 37893  010EB6  A4D8               	btfss	status,2,c
 37894  010EB8  D003               	goto	l749
 37895  010EBA                     u10730:
 37896                           
 37897                           ; BSR set to: 1
 37898                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 37899  010EBA  0E01               	movlw	1
 37900  010EBC                     L62:
 37901  010EBC  0100               	movlb	0	; () banked
 37902  010EBE  D00A               	goto	L63
 37903  010EC0                     l749:
 37904                           
 37905                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 37906                           
 37907                           ; BSR set to: 0
 37908  010EC0  0100               	movlb	0	; () banked
 37909  010EC2  0570               	decf	MSDCheckForErrorCases@DeviceNoData& (0+255),w,b
 37910  010EC4  B4D8               	btfsc	status,2,c
 37911  010EC6  D003               	goto	u10750
 37912                           
 37913                           ; BSR set to: 0
 37914                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 37915                           
 37916                           ; BSR set to: 0
 37917                           
 37918                           ; BSR set to: 0
 37919                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 37920  010EC8  056E               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice& (0+255),w,b
 37921  010ECA  A4D8               	btfss	status,2,c
 37922  010ECC  D002               	goto	l753
 37923  010ECE                     u10750:
 37924                           
 37925                           ; BSR set to: 0
 37926                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 37927  010ECE  0E02               	movlw	2
 37928  010ED0  D001               	goto	L63
 37929  010ED2                     l753:
 37930                           
 37931                           ; BSR set to: 0
 37932                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 37933                           
 37934                           ; BSR set to: 0
 37935  010ED2  0E03               	movlw	3
 37936  010ED4                     L63:
 37937  010ED4  6F6F               	movwf	MSDCheckForErrorCases@MSDErrorCase& (0+255),b
 37938                           
 37939                           ; BSR set to: 0
 37940                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 37941                           
 37942                           ; BSR set to: 0
 37943                           
 37944                           ; BSR set to: 0
 37945                           
 37946                           ; BSR set to: 0
 37947                           
 37948                           ; BSR set to: 0
 37949                           
 37950                           ; BSR set to: 0
 37951  010ED6  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 37952  010ED8  EC59  F086         	call	_MSDErrorHandler
 37953                           
 37954                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 37955  010EDC  0100               	movlb	0	; () banked
 37956  010EDE  516F               	movf	MSDCheckForErrorCases@MSDErrorCase& (0+255),w,b
 37957  010EE0  0012               	return	
 37958  010EE2                     __end_of_MSDCheckForErrorCases:
 37959                           	opt stack 0
 37960                           tosu	equ	0xFFF
 37961                           tosh	equ	0xFFE
 37962                           tosl	equ	0xFFD
 37963                           pclath	equ	0xFFA
 37964                           tblptru	equ	0xFF8
 37965                           tblptrh	equ	0xFF7
 37966                           tblptrl	equ	0xFF6
 37967                           tablat	equ	0xFF5
 37968                           prodh	equ	0xFF4
 37969                           prodl	equ	0xFF3
 37970                           intcon	equ	0xFF2
 37971                           postinc0	equ	0xFEE
 37972                           wreg	equ	0xFE8
 37973                           indf1	equ	0xFE7
 37974                           postinc1	equ	0xFE6
 37975                           postdec1	equ	0xFE5
 37976                           plusw1	equ	0xFE3
 37977                           fsr1h	equ	0xFE2
 37978                           fsr1l	equ	0xFE1
 37979                           indf2	equ	0xFDF
 37980                           postinc2	equ	0xFDE
 37981                           postdec2	equ	0xFDD
 37982                           plusw2	equ	0xFDB
 37983                           fsr2h	equ	0xFDA
 37984                           fsr2l	equ	0xFD9
 37985                           status	equ	0xFD8
 37986                           
 37987 ;; *************** function _MSDErrorHandler *****************
 37988 ;; Defined at:
 37989 ;;		line 1577 in file "usb_device_msd.c"
 37990 ;; Parameters:    Size  Location     Type
 37991 ;;  ErrorCase       1    wreg     unsigned char 
 37992 ;; Auto vars:     Size  Location     Type
 37993 ;;  ErrorCase       1    8[BANK0 ] unsigned char 
 37994 ;;  OldMSD_State    1    9[BANK0 ] unsigned char 
 37995 ;; Return value:  Size  Location     Type
 37996 ;;                  1    wreg      void 
 37997 ;; Registers used:
 37998 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 37999 ;; Tracked objects:
 38000 ;;		On entry : 0/0
 38001 ;;		On exit  : 0/0
 38002 ;;		Unchanged: 0/0
 38003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38005 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38006 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38007 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38008 ;;Total ram usage:        2 bytes
 38009 ;; Hardware stack levels used:    1
 38010 ;; Hardware stack levels required when called:   11
 38011 ;; This function calls:
 38012 ;;		_ResetSenseData
 38013 ;;		_USBStallEndpoint
 38014 ;; This function is called by:
 38015 ;;		_MSDProcessCommandMediaAbsent
 38016 ;;		_MSDProcessCommandMediaPresent
 38017 ;;		_MSDCheckForErrorCases
 38018 ;; This function uses a non-reentrant model
 38019 ;;
 38020                           
 38021                           	psect	text146
 38022  010CB2                     __ptext146:
 38023                           	opt stack 0
 38024  010CB2                     _MSDErrorHandler:
 38025                           	opt stack 13
 38026                           
 38027                           ;incstack = 0
 38028                           ;MSDErrorHandler@ErrorCase stored from wreg
 38029  010CB2  0100               	movlb	0	; () banked
 38030  010CB4  6F68               	movwf	MSDErrorHandler@ErrorCase& (0+255),b
 38031                           
 38032                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 38033  010CB6  0101               	movlb	1	; () banked
 38034  010CB8  513B               	movf	_USBMSDInHandle& (0+255),w,b
 38035  010CBA  113C               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 38036  010CBC  B4D8               	btfsc	status,2,c
 38037  010CBE  D006               	goto	u10330
 38038                           
 38039                           ; BSR set to: 1
 38040  010CC0  C13B  FFD9         	movff	_USBMSDInHandle,fsr2l
 38041  010CC4  C13C  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 38042  010CC8  BEDF               	btfsc	indf2,7,c
 38043  010CCA  0012               	return	
 38044  010CCC                     u10330:
 38045                           
 38046                           ; BSR set to: 1
 38047                           
 38048                           ; BSR set to: 1
 38049  010CCC  513D               	movf	_USBMSDOutHandle& (0+255),w,b
 38050  010CCE  113E               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 38051  010CD0  B4D8               	btfsc	status,2,c
 38052  010CD2  D006               	goto	l757
 38053                           
 38054                           ; BSR set to: 1
 38055  010CD4  C13D  FFD9         	movff	_USBMSDOutHandle,fsr2l
 38056  010CD8  C13E  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 38057  010CDC  BEDF               	btfsc	indf2,7,c
 38058  010CDE  0012               	return	
 38059  010CE0                     l757:
 38060                           
 38061                           ; BSR set to: 1
 38062                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 38063  010CE0  C156  F069         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 38064                           
 38065                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 38066  010CE4  6955               	setf	_MSDCommandState& (0+255),b
 38067                           
 38068                           ; BSR set to: 1
 38069                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 38070  010CE6  0E00               	movlw	0
 38071  010CE8  6F54               	movwf	_MSDReadState& (0+255),b
 38072                           
 38073                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 38074  010CEA  0E00               	movlw	0
 38075  010CEC  6F53               	movwf	_MSDWriteState& (0+255),b
 38076                           
 38077                           ; BSR set to: 1
 38078                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 38079  010CEE  C208  FD88         	movff	_gblCBW+8,3464	;volatile
 38080  010CF2  C209  FD89         	movff	_gblCBW+9,3465	;volatile
 38081  010CF6  C20A  FD8A         	movff	_gblCBW+10,3466	;volatile
 38082  010CFA  C20B  FD8B         	movff	_gblCBW+11,3467	;volatile
 38083                           
 38084                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 38085  010CFE  0E01               	movlw	1
 38086  010D00  010D               	movlb	13	; () banked
 38087  010D02  6F8C               	movwf	140,b	;volatile
 38088                           
 38089                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 38090  010D04  0E03               	movlw	3
 38091  010D06  0101               	movlb	1	; () banked
 38092  010D08  6F56               	movwf	_MSD_State& (0+255),b
 38093                           
 38094                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 38095  010D0A  D04B               	goto	l763
 38096  010D0C                     
 38097                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 38098                           
 38099                           ; BSR set to: 1
 38100  010D0C  0E02               	movlw	2
 38101  010D0E  010D               	movlb	13	; () banked
 38102  010D10  6F8C               	movwf	140,b	;volatile
 38103                           
 38104                           ;usb_device_msd.c: 1607: break;
 38105  010D12  0012               	return	
 38106  010D14                     
 38107                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 38108                           
 38109                           ; BSR set to: 13
 38110  010D14  0E01               	movlw	1
 38111  010D16  0100               	movlb	0	; () banked
 38112  010D18  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38113  010D1A  0E02               	movlw	2
 38114  010D1C  EC06  F089         	call	_USBStallEndpoint
 38115                           
 38116                           ;usb_device_msd.c: 1611: break;
 38117  010D20  0012               	return	
 38118  010D22                     
 38119                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 38120  010D22  0E02               	movlw	2
 38121  010D24  010D               	movlb	13	; () banked
 38122  010D26  6F8C               	movwf	140,b	;volatile
 38123                           
 38124                           ; BSR set to: 13
 38125                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 38126  010D28  0E01               	movlw	1
 38127  010D2A  0100               	movlb	0	; () banked
 38128  010D2C  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38129  010D2E  0E02               	movlw	2
 38130  010D30  EC06  F089         	call	_USBStallEndpoint
 38131                           
 38132                           ;usb_device_msd.c: 1616: break;
 38133  010D34  0012               	return	
 38134  010D36                     
 38135                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 38136  010D36  0E00               	movlw	0
 38137  010D38  0100               	movlb	0	; () banked
 38138  010D3A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38139  010D3C  0E02               	movlw	2
 38140  010D3E  EC06  F089         	call	_USBStallEndpoint
 38141                           
 38142                           ;usb_device_msd.c: 1620: break;
 38143  010D42  0012               	return	
 38144  010D44                     
 38145                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 38146  010D44  0E02               	movlw	2
 38147  010D46  010D               	movlb	13	; () banked
 38148  010D48  6F8C               	movwf	140,b	;volatile
 38149                           
 38150                           ; BSR set to: 13
 38151                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 38152  010D4A  0E00               	movlw	0
 38153  010D4C  0100               	movlb	0	; () banked
 38154  010D4E  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38155  010D50  0E02               	movlw	2
 38156  010D52  EC06  F089         	call	_USBStallEndpoint
 38157                           
 38158                           ;usb_device_msd.c: 1625: break;
 38159  010D56  0012               	return	
 38160  010D58                     
 38161                           ;usb_device_msd.c: 1628: ResetSenseData();
 38162  010D58  EC90  F0A3         	call	_ResetSenseData	;wreg free
 38163                           
 38164                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 38165  010D5C  0101               	movlb	1	; () banked
 38166  010D5E  5102               	movf	(_gblSenseData+2)& (0+255),w,b
 38167  010D60  0BF0               	andlw	-16
 38168  010D62  0905               	iorlw	5
 38169  010D64  6F02               	movwf	(_gblSenseData+2)& (0+255),b
 38170                           
 38171                           ; BSR set to: 1
 38172                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 38173  010D66  0E20               	movlw	32
 38174  010D68  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 38175                           
 38176                           ; BSR set to: 1
 38177                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 38178  010D6A  0E00               	movlw	0
 38179  010D6C  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 38180                           
 38181                           ; BSR set to: 1
 38182                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 38183  010D6E  0E02               	movlw	2
 38184  010D70  0100               	movlb	0	; () banked
 38185  010D72  1969               	xorwf	MSDErrorHandler@OldMSD_State& (0+255),w,b
 38186  010D74  A4D8               	btfss	status,2,c
 38187  010D76  D00E               	goto	l771
 38188                           
 38189                           ; BSR set to: 0
 38190  010D78  0102               	movlb	2	; () banked
 38191  010D7A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 38192  010D7C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 38193  010D7E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 38194  010D80  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 38195  010D82  B4D8               	btfsc	status,2,c
 38196  010D84  D007               	goto	l771
 38197                           
 38198                           ; BSR set to: 2
 38199                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 38200  010D86  0E00               	movlw	0
 38201  010D88  0100               	movlb	0	; () banked
 38202  010D8A  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38203  010D8C  0E02               	movlw	2
 38204  010D8E  EC06  F089         	call	_USBStallEndpoint
 38205                           
 38206                           ;usb_device_msd.c: 1636: }
 38207  010D92  0012               	return	
 38208  010D94                     l771:
 38209                           
 38210                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 38211  010D94  0E01               	movlw	1
 38212  010D96  0100               	movlb	0	; () banked
 38213  010D98  6F60               	movwf	USBStallEndpoint@dir& (0+255),b
 38214  010D9A  0E02               	movlw	2
 38215  010D9C  EC06  F089         	call	_USBStallEndpoint
 38216                           
 38217                           ;usb_device_msd.c: 1644: }
 38218                           
 38219                           ;usb_device_msd.c: 1643: break;
 38220                           
 38221                           ;usb_device_msd.c: 1642: default:
 38222                           
 38223                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 38224  010DA0  0012               	return	
 38225  010DA2                     l763:
 38226  010DA2  0100               	movlb	0	; () banked
 38227  010DA4  5168               	movf	MSDErrorHandler@ErrorCase& (0+255),w,b
 38228                           
 38229                           ; Switch size 1, requested type "space"
 38230                           ; Number of cases is 6, Range of values is 1 to 127
 38231                           ; switch strategies available:
 38232                           ; Name         Instructions Cycles
 38233                           ; simple_byte           19    10 (average)
 38234                           ;	Chosen strategy is simple_byte
 38235  010DA6  0A01               	xorlw	1	; case 1
 38236  010DA8  B4D8               	btfsc	status,2,c
 38237  010DAA  D7B0               	goto	l764
 38238  010DAC  0A03               	xorlw	3	; case 2
 38239  010DAE  B4D8               	btfsc	status,2,c
 38240  010DB0  D7B1               	goto	l766
 38241  010DB2  0A01               	xorlw	1	; case 3
 38242  010DB4  B4D8               	btfsc	status,2,c
 38243  010DB6  D7B5               	goto	l767
 38244  010DB8  0A07               	xorlw	7	; case 4
 38245  010DBA  B4D8               	btfsc	status,2,c
 38246  010DBC  D7BC               	goto	l768
 38247  010DBE  0A01               	xorlw	1	; case 5
 38248  010DC0  B4D8               	btfsc	status,2,c
 38249  010DC2  D7C0               	goto	l769
 38250  010DC4  0A7A               	xorlw	122	; case 127
 38251  010DC6  A4D8               	btfss	status,2,c
 38252  010DC8  0012               	return	
 38253  010DCA  D7C6               	goto	l770
 38254  010DCC                     __end_of_MSDErrorHandler:
 38255                           	opt stack 0
 38256                           tosu	equ	0xFFF
 38257                           tosh	equ	0xFFE
 38258                           tosl	equ	0xFFD
 38259                           pclath	equ	0xFFA
 38260                           tblptru	equ	0xFF8
 38261                           tblptrh	equ	0xFF7
 38262                           tblptrl	equ	0xFF6
 38263                           tablat	equ	0xFF5
 38264                           prodh	equ	0xFF4
 38265                           prodl	equ	0xFF3
 38266                           intcon	equ	0xFF2
 38267                           postinc0	equ	0xFEE
 38268                           wreg	equ	0xFE8
 38269                           indf1	equ	0xFE7
 38270                           postinc1	equ	0xFE6
 38271                           postdec1	equ	0xFE5
 38272                           plusw1	equ	0xFE3
 38273                           fsr1h	equ	0xFE2
 38274                           fsr1l	equ	0xFE1
 38275                           indf2	equ	0xFDF
 38276                           postinc2	equ	0xFDE
 38277                           postdec2	equ	0xFDD
 38278                           plusw2	equ	0xFDB
 38279                           fsr2h	equ	0xFDA
 38280                           fsr2l	equ	0xFD9
 38281                           status	equ	0xFD8
 38282                           
 38283 ;; *************** function _USBStallEndpoint *****************
 38284 ;; Defined at:
 38285 ;;		line 1073 in file "usb_device.c"
 38286 ;; Parameters:    Size  Location     Type
 38287 ;;  ep              1    wreg     unsigned char 
 38288 ;;  dir             1    0[BANK0 ] unsigned char 
 38289 ;; Auto vars:     Size  Location     Type
 38290 ;;  ep              1    5[BANK0 ] unsigned char 
 38291 ;;  p               2    6[BANK0 ] PTR struct __BDT
 38292 ;;		 -> BDT(48), 
 38293 ;; Return value:  Size  Location     Type
 38294 ;;                  1    wreg      void 
 38295 ;; Registers used:
 38296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 38297 ;; Tracked objects:
 38298 ;;		On entry : 0/0
 38299 ;;		On exit  : 0/0
 38300 ;;		Unchanged: 0/0
 38301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38302 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38303 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38304 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38305 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38306 ;;Total ram usage:        8 bytes
 38307 ;; Hardware stack levels used:    1
 38308 ;; Hardware stack levels required when called:   10
 38309 ;; This function calls:
 38310 ;;		Nothing
 38311 ;; This function is called by:
 38312 ;;		_MSDTasks
 38313 ;;		_MSDReadHandler
 38314 ;;		_MSDWriteHandler
 38315 ;;		_MSDErrorHandler
 38316 ;; This function uses a non-reentrant model
 38317 ;;
 38318                           
 38319                           	psect	text147
 38320  01120C                     __ptext147:
 38321                           	opt stack 0
 38322  01120C                     _USBStallEndpoint:
 38323                           	opt stack 18
 38324                           
 38325                           ;incstack = 0
 38326                           ;USBStallEndpoint@ep stored from wreg
 38327  01120C  0100               	movlb	0	; () banked
 38328  01120E  6F65               	movwf	USBStallEndpoint@ep& (0+255),b
 38329                           
 38330                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 38331  011210  0100               	movlb	0	; () banked
 38332  011212  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38333  011214  A4D8               	btfss	status,2,c
 38334  011216  D02B               	goto	l192
 38335                           
 38336                           ; BSR set to: 0
 38337                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 38338  011218  EE20 F001          	lfsr	2,1
 38339  01121C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 38340  01121E  26D9               	addwf	fsr2l,f,c
 38341  011220  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 38342  011222  22DA               	addwfc	fsr2h,f,c
 38343  011224  0E08               	movlw	8
 38344  011226  6EDF               	movwf	indf2,c
 38345                           
 38346                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 38347  011228  EE20 F002          	lfsr	2,2
 38348  01122C  505C               	movf	_pBDTEntryEP0OutNext,w,c
 38349  01122E  26D9               	addwf	fsr2l,f,c
 38350  011230  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 38351  011232  22DA               	addwfc	fsr2h,f,c
 38352  011234  0E30               	movlw	48
 38353  011236  6EDE               	movwf	postinc2,c
 38354  011238  0E0D               	movlw	13
 38355  01123A  6EDD               	movwf	postdec2,c
 38356                           
 38357                           ; BSR set to: 0
 38358                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 38359  01123C  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38360  011240  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38361  011244  0E0C               	movlw	12
 38362  011246  6EDF               	movwf	indf2,c
 38363                           
 38364                           ; BSR set to: 0
 38365                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 38366  011248  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 38367  01124C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 38368  011250  0E00               	movlw	0
 38369  011252  8EDB               	bsf	plusw2,7,c
 38370                           
 38371                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 38372  011254  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 38373  011258  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38374  01125C  0E04               	movlw	4
 38375  01125E  6EDF               	movwf	indf2,c
 38376                           
 38377                           ; BSR set to: 0
 38378                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 38379  011260  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 38380  011264  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 38381  011268  0E00               	movlw	0
 38382  01126A  8EDB               	bsf	plusw2,7,c
 38383                           
 38384                           ;usb_device.c: 1089: }
 38385  01126C  0012               	return	
 38386  01126E                     l192:
 38387                           
 38388                           ; BSR set to: 0
 38389                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 38390                           
 38391                           ; BSR set to: 0
 38392  01126E  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38393  011270  6F61               	movwf	??_USBStallEndpoint& (0+255),b
 38394  011272  6B62               	clrf	(??_USBStallEndpoint+1)& (0+255),b
 38395  011274  90D8               	bcf	status,0,c
 38396  011276  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38397  011278  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38398  01127A  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38399  01127C  6F63               	movwf	(??_USBStallEndpoint+2)& (0+255),b
 38400  01127E  6B64               	clrf	(??_USBStallEndpoint+3)& (0+255),b
 38401  011280  90D8               	bcf	status,0,c
 38402  011282  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38403  011284  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38404  011286  90D8               	bcf	status,0,c
 38405  011288  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38406  01128A  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38407  01128C  5161               	movf	??_USBStallEndpoint& (0+255),w,b
 38408  01128E  2763               	addwf	(??_USBStallEndpoint+2)& (0+255),f,b
 38409  011290  5162               	movf	(??_USBStallEndpoint+1)& (0+255),w,b
 38410  011292  2364               	addwfc	(??_USBStallEndpoint+3)& (0+255),f,b
 38411  011294  90D8               	bcf	status,0,c
 38412  011296  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38413  011298  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38414  01129A  90D8               	bcf	status,0,c
 38415  01129C  3763               	rlcf	(??_USBStallEndpoint+2)& (0+255),f,b
 38416  01129E  3764               	rlcf	(??_USBStallEndpoint+3)& (0+255),f,b
 38417  0112A0  0E00               	movlw	0
 38418  0112A2  2563               	addwf	(??_USBStallEndpoint+2)& (0+255),w,b
 38419  0112A4  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38420  0112A6  0E0D               	movlw	13
 38421  0112A8  2164               	addwfc	(??_USBStallEndpoint+3)& (0+255),w,b
 38422  0112AA  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38423                           
 38424                           ; BSR set to: 0
 38425                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 38426  0112AC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38427  0112B0  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38428  0112B4  0E00               	movlw	0
 38429  0112B6  84DB               	bsf	plusw2,2,c
 38430                           
 38431                           ; BSR set to: 0
 38432                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 38433  0112B8  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38434  0112BC  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38435  0112C0  0E00               	movlw	0
 38436  0112C2  8EDB               	bsf	plusw2,7,c
 38437                           
 38438                           ; BSR set to: 0
 38439                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 38440  0112C4  5165               	movf	USBStallEndpoint@ep& (0+255),w,b
 38441  0112C6  0D04               	mullw	4
 38442  0112C8  CFF3 F061          	movff	prodl,??_USBStallEndpoint
 38443  0112CC  CFF4 F062          	movff	prodh,??_USBStallEndpoint+1
 38444  0112D0  5160               	movf	USBStallEndpoint@dir& (0+255),w,b
 38445  0112D2  0D02               	mullw	2
 38446  0112D4  50F3               	movf	prodl,w,c
 38447  0112D6  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38448  0112D8  50F4               	movf	prodh,w,c
 38449  0112DA  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38450  0112DC  90D8               	bcf	status,0,c
 38451  0112DE  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38452  0112E0  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38453  0112E2  90D8               	bcf	status,0,c
 38454  0112E4  3761               	rlcf	??_USBStallEndpoint& (0+255),f,b
 38455  0112E6  3762               	rlcf	(??_USBStallEndpoint+1)& (0+255),f,b
 38456  0112E8  0E04               	movlw	4
 38457  0112EA  2761               	addwf	??_USBStallEndpoint& (0+255),f,b
 38458  0112EC  0E00               	movlw	0
 38459  0112EE  2362               	addwfc	(??_USBStallEndpoint+1)& (0+255),f,b
 38460  0112F0  0E00               	movlw	0
 38461  0112F2  2561               	addwf	??_USBStallEndpoint& (0+255),w,b
 38462  0112F4  6F66               	movwf	USBStallEndpoint@p& (0+255),b
 38463  0112F6  0E0D               	movlw	13
 38464  0112F8  2162               	addwfc	(??_USBStallEndpoint+1)& (0+255),w,b
 38465  0112FA  6F67               	movwf	(USBStallEndpoint@p+1)& (0+255),b
 38466                           
 38467                           ; BSR set to: 0
 38468                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 38469  0112FC  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38470  011300  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38471  011304  0E00               	movlw	0
 38472  011306  84DB               	bsf	plusw2,2,c
 38473                           
 38474                           ; BSR set to: 0
 38475                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 38476  011308  C066  FFD9         	movff	USBStallEndpoint@p,fsr2l
 38477  01130C  C067  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 38478  011310  0E00               	movlw	0
 38479  011312  8EDB               	bsf	plusw2,7,c
 38480  011314  0012               	return	
 38481  011316                     __end_of_USBStallEndpoint:
 38482                           	opt stack 0
 38483                           tosu	equ	0xFFF
 38484                           tosh	equ	0xFFE
 38485                           tosl	equ	0xFFD
 38486                           pclath	equ	0xFFA
 38487                           tblptru	equ	0xFF8
 38488                           tblptrh	equ	0xFF7
 38489                           tblptrl	equ	0xFF6
 38490                           tablat	equ	0xFF5
 38491                           prodh	equ	0xFF4
 38492                           prodl	equ	0xFF3
 38493                           intcon	equ	0xFF2
 38494                           postinc0	equ	0xFEE
 38495                           wreg	equ	0xFE8
 38496                           indf1	equ	0xFE7
 38497                           postinc1	equ	0xFE6
 38498                           postdec1	equ	0xFE5
 38499                           plusw1	equ	0xFE3
 38500                           fsr1h	equ	0xFE2
 38501                           fsr1l	equ	0xFE1
 38502                           indf2	equ	0xFDF
 38503                           postinc2	equ	0xFDE
 38504                           postdec2	equ	0xFDD
 38505                           plusw2	equ	0xFDB
 38506                           fsr2h	equ	0xFDA
 38507                           fsr2l	equ	0xFD9
 38508                           status	equ	0xFD8
 38509                           
 38510 ;; *************** function _ResetSenseData *****************
 38511 ;; Defined at:
 38512 ;;		line 1373 in file "usb_device_msd.c"
 38513 ;; Parameters:    Size  Location     Type
 38514 ;;		None
 38515 ;; Auto vars:     Size  Location     Type
 38516 ;;		None
 38517 ;; Return value:  Size  Location     Type
 38518 ;;                  1    wreg      void 
 38519 ;; Registers used:
 38520 ;;		wreg, status,2
 38521 ;; Tracked objects:
 38522 ;;		On entry : 0/0
 38523 ;;		On exit  : 0/0
 38524 ;;		Unchanged: 0/0
 38525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38527 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38528 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38529 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38530 ;;Total ram usage:        0 bytes
 38531 ;; Hardware stack levels used:    1
 38532 ;; Hardware stack levels required when called:   10
 38533 ;; This function calls:
 38534 ;;		Nothing
 38535 ;; This function is called by:
 38536 ;;		_MSDProcessCommandMediaAbsent
 38537 ;;		_MSDProcessCommandMediaPresent
 38538 ;;		_MSDErrorHandler
 38539 ;; This function uses a non-reentrant model
 38540 ;;
 38541                           
 38542                           	psect	text148
 38543  014720                     __ptext148:
 38544                           	opt stack 0
 38545  014720                     _ResetSenseData:
 38546                           	opt stack 16
 38547                           
 38548                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 38549                           
 38550                           ; BSR set to: 0
 38551                           ;incstack = 0
 38552  014720  0101               	movlb	1	; () banked
 38553  014722  9100               	bcf	_gblSenseData& (0+255),0,b
 38554  014724  9300               	bcf	_gblSenseData& (0+255),1,b
 38555  014726  9500               	bcf	_gblSenseData& (0+255),2,b
 38556  014728  9700               	bcf	_gblSenseData& (0+255),3,b
 38557  01472A  8900               	bsf	_gblSenseData& (0+255),4,b
 38558  01472C  8B00               	bsf	_gblSenseData& (0+255),5,b
 38559  01472E  8D00               	bsf	_gblSenseData& (0+255),6,b
 38560                           
 38561                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 38562  014730  9F00               	bcf	_gblSenseData& (0+255),7,b
 38563                           
 38564                           ; BSR set to: 1
 38565                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 38566  014732  0E00               	movlw	0
 38567  014734  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 38568                           
 38569                           ; BSR set to: 1
 38570                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 38571  014736  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 38572  014738  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 38573  01473A  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 38574  01473C  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 38575                           
 38576                           ; BSR set to: 1
 38577                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 38578  01473E  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 38579                           
 38580                           ; BSR set to: 1
 38581                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 38582  014740  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 38583                           
 38584                           ; BSR set to: 1
 38585                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 38586  014742  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 38587                           
 38588                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 38589  014744  0E00               	movlw	0
 38590  014746  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 38591                           
 38592                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 38593  014748  0E00               	movlw	0
 38594  01474A  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 38595                           
 38596                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 38597  01474C  0E00               	movlw	0
 38598  01474E  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 38599                           
 38600                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 38601  014750  0E00               	movlw	0
 38602  014752  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 38603                           
 38604                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 38605  014754  0E0A               	movlw	10
 38606  014756  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 38607                           
 38608                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 38609  014758  0E00               	movlw	0
 38610  01475A  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 38611  01475C  0E00               	movlw	0
 38612  01475E  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 38613  014760  0E00               	movlw	0
 38614  014762  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 38615  014764  0E00               	movlw	0
 38616  014766  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 38617                           
 38618                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 38619  014768  0E00               	movlw	0
 38620  01476A  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 38621                           
 38622                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 38623  01476C  0E00               	movlw	0
 38624  01476E  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 38625                           
 38626                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 38627  014770  0E00               	movlw	0
 38628  014772  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 38629                           
 38630                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 38631  014774  0E00               	movlw	0
 38632  014776  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 38633                           
 38634                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 38635  014778  0E00               	movlw	0
 38636  01477A  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 38637                           
 38638                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 38639  01477C  0E00               	movlw	0
 38640  01477E  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 38641                           
 38642                           ; BSR set to: 1
 38643  014780  0012               	return		;funcret
 38644  014782                     __end_of_ResetSenseData:
 38645                           	opt stack 0
 38646                           tosu	equ	0xFFF
 38647                           tosh	equ	0xFFE
 38648                           tosl	equ	0xFFD
 38649                           pclath	equ	0xFFA
 38650                           tblptru	equ	0xFF8
 38651                           tblptrh	equ	0xFF7
 38652                           tblptrl	equ	0xFF6
 38653                           tablat	equ	0xFF5
 38654                           prodh	equ	0xFF4
 38655                           prodl	equ	0xFF3
 38656                           intcon	equ	0xFF2
 38657                           postinc0	equ	0xFEE
 38658                           wreg	equ	0xFE8
 38659                           indf1	equ	0xFE7
 38660                           postinc1	equ	0xFE6
 38661                           postdec1	equ	0xFE5
 38662                           plusw1	equ	0xFE3
 38663                           fsr1h	equ	0xFE2
 38664                           fsr1l	equ	0xFE1
 38665                           indf2	equ	0xFDF
 38666                           postinc2	equ	0xFDE
 38667                           postdec2	equ	0xFDD
 38668                           plusw2	equ	0xFDB
 38669                           fsr2h	equ	0xFDA
 38670                           fsr2l	equ	0xFD9
 38671                           status	equ	0xFD8
 38672                           
 38673 ;; *************** function _ExternalFlash_SectorRead *****************
 38674 ;; Defined at:
 38675 ;;		line 40 in file "external_flash.c"
 38676 ;; Parameters:    Size  Location     Type
 38677 ;;  config          2   43[BANK0 ] PTR void 
 38678 ;;		 -> NULL(0), 
 38679 ;;  sector_addr     4   45[BANK0 ] unsigned long 
 38680 ;;  buffer          2   49[BANK0 ] PTR unsigned char 
 38681 ;;		 -> msd_buffer(512), 
 38682 ;; Auto vars:     Size  Location     Type
 38683 ;;  page            2   51[BANK0 ] unsigned int 
 38684 ;; Return value:  Size  Location     Type
 38685 ;;                  1    wreg      unsigned char 
 38686 ;; Registers used:
 38687 ;;		wreg, status,2, status,0, cstack
 38688 ;; Tracked objects:
 38689 ;;		On entry : 0/0
 38690 ;;		On exit  : 0/0
 38691 ;;		Unchanged: 0/0
 38692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38693 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38694 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38696 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38697 ;;Total ram usage:       10 bytes
 38698 ;; Hardware stack levels used:    1
 38699 ;; Hardware stack levels required when called:   15
 38700 ;; This function calls:
 38701 ;;		_flash_sector_read
 38702 ;; This function is called by:
 38703 ;;		_MSDReadHandler
 38704 ;; This function uses a non-reentrant model
 38705 ;;
 38706                           
 38707                           	psect	text149
 38708  015690                     __ptext149:
 38709                           	opt stack 0
 38710  015690                     _ExternalFlash_SectorRead:
 38711                           	opt stack 10
 38712                           
 38713                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 38714                           
 38715                           ; BSR set to: 1
 38716                           ;incstack = 0
 38717  015690  C08D  F093         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 38718  015694  C08E  F094         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 38719                           
 38720                           ;external_flash.c: 45: if(sector_addr >= 8192)
 38721  015698  0100               	movlb	0	; () banked
 38722  01569A  5190               	movf	(ExternalFlash_SectorRead@sector_addr+3)& (0+255),w,b
 38723  01569C  118F               	iorwf	(ExternalFlash_SectorRead@sector_addr+2)& (0+255),w,b
 38724  01569E  E104               	bnz	u10780
 38725  0156A0  0E20               	movlw	32
 38726  0156A2  5D8E               	subwf	(ExternalFlash_SectorRead@sector_addr+1)& (0+255),w,b
 38727  0156A4  A0D8               	btfss	status,0,c
 38728  0156A6  D002               	goto	l1691
 38729  0156A8                     u10780:
 38730                           
 38731                           ; BSR set to: 0
 38732                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 38733  0156A8  0E00               	movlw	0
 38734                           
 38735                           ; BSR set to: 0
 38736  0156AA  0012               	return	
 38737  0156AC                     l1691:
 38738                           
 38739                           ; BSR set to: 0
 38740                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 38741                           
 38742                           ; BSR set to: 0
 38743  0156AC  C093  F087         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 38744  0156B0  C094  F088         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 38745  0156B4  C091  F089         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 38746  0156B8  C092  F08A         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 38747  0156BC  EC12  F0AD         	call	_flash_sector_read	;wreg free
 38748                           
 38749                           ;external_flash.c: 53: return 1;
 38750  0156C0  0E01               	movlw	1
 38751  0156C2  0012               	return	
 38752  0156C4                     __end_of_ExternalFlash_SectorRead:
 38753                           	opt stack 0
 38754                           tosu	equ	0xFFF
 38755                           tosh	equ	0xFFE
 38756                           tosl	equ	0xFFD
 38757                           pclath	equ	0xFFA
 38758                           tblptru	equ	0xFF8
 38759                           tblptrh	equ	0xFF7
 38760                           tblptrl	equ	0xFF6
 38761                           tablat	equ	0xFF5
 38762                           prodh	equ	0xFF4
 38763                           prodl	equ	0xFF3
 38764                           intcon	equ	0xFF2
 38765                           postinc0	equ	0xFEE
 38766                           wreg	equ	0xFE8
 38767                           indf1	equ	0xFE7
 38768                           postinc1	equ	0xFE6
 38769                           postdec1	equ	0xFE5
 38770                           plusw1	equ	0xFE3
 38771                           fsr1h	equ	0xFE2
 38772                           fsr1l	equ	0xFE1
 38773                           indf2	equ	0xFDF
 38774                           postinc2	equ	0xFDE
 38775                           postdec2	equ	0xFDD
 38776                           plusw2	equ	0xFDB
 38777                           fsr2h	equ	0xFDA
 38778                           fsr2l	equ	0xFD9
 38779                           status	equ	0xFD8
 38780                           
 38781 ;; *************** function _flash_sector_read *****************
 38782 ;; Defined at:
 38783 ;;		line 426 in file "flash.c"
 38784 ;; Parameters:    Size  Location     Type
 38785 ;;  page            2   39[BANK0 ] unsigned int 
 38786 ;;  data            2   41[BANK0 ] PTR unsigned char 
 38787 ;;		 -> buffer(512), msd_buffer(512), 
 38788 ;; Auto vars:     Size  Location     Type
 38789 ;;		None
 38790 ;; Return value:  Size  Location     Type
 38791 ;;                  1    wreg      void 
 38792 ;; Registers used:
 38793 ;;		wreg, status,2, status,0, cstack
 38794 ;; Tracked objects:
 38795 ;;		On entry : 0/0
 38796 ;;		On exit  : 0/0
 38797 ;;		Unchanged: 0/0
 38798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38799 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38802 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38803 ;;Total ram usage:        4 bytes
 38804 ;; Hardware stack levels used:    1
 38805 ;; Hardware stack levels required when called:   14
 38806 ;; This function calls:
 38807 ;;		__flash_partial_read
 38808 ;; This function is called by:
 38809 ;;		_ExternalFlash_SectorRead
 38810 ;;		__get_available_cluster
 38811 ;;		__find_nth_cluster
 38812 ;;		__make_cluster_chain
 38813 ;;		_fat_find_file
 38814 ;;		_fat_get_format_status
 38815 ;; This function uses a non-reentrant model
 38816 ;;
 38817                           
 38818                           	psect	text150
 38819  015A24                     __ptext150:
 38820                           	opt stack 0
 38821  015A24                     _flash_sector_read:
 38822                           	opt stack 13
 38823                           
 38824                           ;flash.c: 429: _flash_partial_read(page, 0, 512, data);
 38825                           
 38826                           ;incstack = 0
 38827  015A24  C087  F073         	movff	flash_sector_read@page,__flash_partial_read@page
 38828  015A28  C088  F074         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 38829  015A2C  0E00               	movlw	0
 38830  015A2E  0100               	movlb	0	; () banked
 38831  015A30  6F76               	movwf	(__flash_partial_read@start+1)& (0+255),b
 38832  015A32  0E00               	movlw	0
 38833  015A34  6F75               	movwf	__flash_partial_read@start& (0+255),b
 38834  015A36  0E02               	movlw	2
 38835  015A38  6F78               	movwf	(__flash_partial_read@length+1)& (0+255),b
 38836  015A3A  0E00               	movlw	0
 38837  015A3C  6F77               	movwf	__flash_partial_read@length& (0+255),b
 38838  015A3E  C089  F079         	movff	flash_sector_read@data,__flash_partial_read@data
 38839  015A42  C08A  F07A         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 38840  015A46  EC03  F0A1         	call	__flash_partial_read	;wreg free
 38841  015A4A  0012               	return		;funcret
 38842  015A4C                     __end_of_flash_sector_read:
 38843                           	opt stack 0
 38844                           tosu	equ	0xFFF
 38845                           tosh	equ	0xFFE
 38846                           tosl	equ	0xFFD
 38847                           pclath	equ	0xFFA
 38848                           tblptru	equ	0xFF8
 38849                           tblptrh	equ	0xFF7
 38850                           tblptrl	equ	0xFF6
 38851                           tablat	equ	0xFF5
 38852                           prodh	equ	0xFF4
 38853                           prodl	equ	0xFF3
 38854                           intcon	equ	0xFF2
 38855                           postinc0	equ	0xFEE
 38856                           wreg	equ	0xFE8
 38857                           indf1	equ	0xFE7
 38858                           postinc1	equ	0xFE6
 38859                           postdec1	equ	0xFE5
 38860                           plusw1	equ	0xFE3
 38861                           fsr1h	equ	0xFE2
 38862                           fsr1l	equ	0xFE1
 38863                           indf2	equ	0xFDF
 38864                           postinc2	equ	0xFDE
 38865                           postdec2	equ	0xFDD
 38866                           plusw2	equ	0xFDB
 38867                           fsr2h	equ	0xFDA
 38868                           fsr2l	equ	0xFD9
 38869                           status	equ	0xFD8
 38870                           
 38871 ;; *************** function __flash_partial_read *****************
 38872 ;; Defined at:
 38873 ;;		line 309 in file "flash.c"
 38874 ;; Parameters:    Size  Location     Type
 38875 ;;  page            2   19[BANK0 ] unsigned int 
 38876 ;;  start           2   21[BANK0 ] unsigned int 
 38877 ;;  length          2   23[BANK0 ] unsigned int 
 38878 ;;  data            2   25[BANK0 ] PTR unsigned char 
 38879 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 38880 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 38881 ;;		 -> _root_is_available@first_byte(1), buffer(512), msd_buffer(512), 
 38882 ;; Auto vars:     Size  Location     Type
 38883 ;;  command         4   31[BANK0 ] unsigned char [4]
 38884 ;;  address         4   35[BANK0 ] unsigned long 
 38885 ;; Return value:  Size  Location     Type
 38886 ;;                  1    wreg      void 
 38887 ;; Registers used:
 38888 ;;		wreg, status,2, status,0, cstack
 38889 ;; Tracked objects:
 38890 ;;		On entry : 0/0
 38891 ;;		On exit  : 0/0
 38892 ;;		Unchanged: 0/0
 38893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38894 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38895 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38896 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38897 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38898 ;;Total ram usage:       20 bytes
 38899 ;; Hardware stack levels used:    1
 38900 ;; Hardware stack levels required when called:   13
 38901 ;; This function calls:
 38902 ;;		__flash_is_busy
 38903 ;;		_spi_tx_rx
 38904 ;; This function is called by:
 38905 ;;		_flash_sector_read
 38906 ;;		_flash_partial_read
 38907 ;; This function uses a non-reentrant model
 38908 ;;
 38909                           
 38910                           	psect	text151
 38911  014206                     __ptext151:
 38912                           	opt stack 0
 38913  014206                     __flash_partial_read:
 38914                           	opt stack 13
 38915                           
 38916                           ;flash.c: 311: uint32_t address;;flash.c: 312: uint8_t command[4];;flash.c: 315: while(_
      +                          flash_is_busy());
 38917                           
 38918                           ;incstack = 0
 38919  014206  EC70  F0AD         	call	__flash_is_busy	;wreg free
 38920  01420A  0900               	iorlw	0
 38921  01420C  A4D8               	btfss	status,2,c
 38922  01420E  D7FB               	goto	__flash_partial_read
 38923                           
 38924                           ;flash.c: 318: address = page;
 38925  014210  C073  F083         	movff	__flash_partial_read@page,__flash_partial_read@address
 38926  014214  C074  F084         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 38927  014218  0100               	movlb	0	; () banked
 38928  01421A  6B85               	clrf	(__flash_partial_read@address+2)& (0+255),b
 38929  01421C  6B86               	clrf	(__flash_partial_read@address+3)& (0+255),b
 38930                           
 38931                           ; BSR set to: 0
 38932                           ;flash.c: 319: address <<= 9;
 38933  01421E  0E09               	movlw	9
 38934  014220                     u10205:
 38935  014220  90D8               	bcf	status,0,c
 38936  014222  3783               	rlcf	__flash_partial_read@address& (0+255),f,b
 38937  014224  3784               	rlcf	(__flash_partial_read@address+1)& (0+255),f,b
 38938  014226  3785               	rlcf	(__flash_partial_read@address+2)& (0+255),f,b
 38939  014228  3786               	rlcf	(__flash_partial_read@address+3)& (0+255),f,b
 38940  01422A  2EE8               	decfsz	wreg,f,c
 38941  01422C  D7F9               	goto	u10205
 38942                           
 38943                           ; BSR set to: 0
 38944                           ;flash.c: 320: address |= start;
 38945  01422E  5175               	movf	__flash_partial_read@start& (0+255),w,b
 38946  014230  6F7B               	movwf	??__flash_partial_read& (0+255),b
 38947  014232  5176               	movf	(__flash_partial_read@start+1)& (0+255),w,b
 38948  014234  6F7C               	movwf	(??__flash_partial_read+1)& (0+255),b
 38949  014236  6B7D               	clrf	(??__flash_partial_read+2)& (0+255),b
 38950  014238  6B7E               	clrf	(??__flash_partial_read+3)& (0+255),b
 38951  01423A  517B               	movf	??__flash_partial_read& (0+255),w,b
 38952  01423C  1383               	iorwf	__flash_partial_read@address& (0+255),f,b
 38953  01423E  517C               	movf	(??__flash_partial_read+1)& (0+255),w,b
 38954  014240  1384               	iorwf	(__flash_partial_read@address+1)& (0+255),f,b
 38955  014242  517D               	movf	(??__flash_partial_read+2)& (0+255),w,b
 38956  014244  1385               	iorwf	(__flash_partial_read@address+2)& (0+255),f,b
 38957  014246  517E               	movf	(??__flash_partial_read+3)& (0+255),w,b
 38958  014248  1386               	iorwf	(__flash_partial_read@address+3)& (0+255),f,b
 38959                           
 38960                           ; BSR set to: 0
 38961                           ;flash.c: 323: command[0] = 0x03;
 38962  01424A  0E03               	movlw	3
 38963  01424C  6F7F               	movwf	__flash_partial_read@command& (0+255),b
 38964                           
 38965                           ; BSR set to: 0
 38966                           ;flash.c: 324: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 38967  01424E  C085  F080         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 38968                           
 38969                           ; BSR set to: 0
 38970                           ;flash.c: 325: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 38971  014252  5184               	movf	(__flash_partial_read@address+1)& (0+255),w,b
 38972  014254  6F81               	movwf	(__flash_partial_read@command+2)& (0+255),b
 38973                           
 38974                           ; BSR set to: 0
 38975                           ;flash.c: 326: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 38976  014256  C083  F082         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 38977                           
 38978                           ; BSR set to: 0
 38979                           ;flash.c: 329: spi_tx_rx(command, 4, data, length);
 38980  01425A  0E7F               	movlw	low __flash_partial_read@command
 38981  01425C  6F60               	movwf	spi_tx_rx@command& (0+255),b
 38982  01425E  0E00               	movlw	high __flash_partial_read@command
 38983  014260  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 38984  014262  0E00               	movlw	0
 38985  014264  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 38986  014266  0E04               	movlw	4
 38987  014268  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 38988  01426A  C079  F064         	movff	__flash_partial_read@data,spi_tx_rx@data
 38989  01426E  C07A  F065         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 38990  014272  C077  F066         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 38991  014276  C078  F067         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 38992  01427A  ECE8  F09B         	call	_spi_tx_rx	;wreg free
 38993  01427E  0012               	return		;funcret
 38994  014280                     __end_of__flash_partial_read:
 38995                           	opt stack 0
 38996                           tosu	equ	0xFFF
 38997                           tosh	equ	0xFFE
 38998                           tosl	equ	0xFFD
 38999                           pclath	equ	0xFFA
 39000                           tblptru	equ	0xFF8
 39001                           tblptrh	equ	0xFF7
 39002                           tblptrl	equ	0xFF6
 39003                           tablat	equ	0xFF5
 39004                           prodh	equ	0xFF4
 39005                           prodl	equ	0xFF3
 39006                           intcon	equ	0xFF2
 39007                           postinc0	equ	0xFEE
 39008                           wreg	equ	0xFE8
 39009                           indf1	equ	0xFE7
 39010                           postinc1	equ	0xFE6
 39011                           postdec1	equ	0xFE5
 39012                           plusw1	equ	0xFE3
 39013                           fsr1h	equ	0xFE2
 39014                           fsr1l	equ	0xFE1
 39015                           indf2	equ	0xFDF
 39016                           postinc2	equ	0xFDE
 39017                           postdec2	equ	0xFDD
 39018                           plusw2	equ	0xFDB
 39019                           fsr2h	equ	0xFDA
 39020                           fsr2l	equ	0xFD9
 39021                           status	equ	0xFD8
 39022                           
 39023 ;; *************** function __flash_is_busy *****************
 39024 ;; Defined at:
 39025 ;;		line 281 in file "flash.c"
 39026 ;; Parameters:    Size  Location     Type
 39027 ;;		None
 39028 ;; Auto vars:     Size  Location     Type
 39029 ;;  status          2   17[BANK0 ] unsigned int 
 39030 ;; Return value:  Size  Location     Type
 39031 ;;                  1    wreg      unsigned char 
 39032 ;; Registers used:
 39033 ;;		wreg, status,2, status,0, cstack
 39034 ;; Tracked objects:
 39035 ;;		On entry : 0/0
 39036 ;;		On exit  : 0/0
 39037 ;;		Unchanged: 0/0
 39038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39039 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39040 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39042 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39043 ;;Total ram usage:        2 bytes
 39044 ;; Hardware stack levels used:    1
 39045 ;; Hardware stack levels required when called:   12
 39046 ;; This function calls:
 39047 ;;		__flash_get_status
 39048 ;;		__flash_wakeup
 39049 ;; This function is called by:
 39050 ;;		__flash_set_page_size
 39051 ;;		__flash_copy_page_to_buffer
 39052 ;;		__flash_compare_page_to_buffer
 39053 ;;		__flash_write_to_buffer
 39054 ;;		__flash_write_page_from_buffer
 39055 ;;		__flash_partial_read
 39056 ;;		_flash_partial_write
 39057 ;;		__flash_erase_page
 39058 ;;		__flash_buffer_read
 39059 ;;		_flash_is_busy
 39060 ;;		_flash_set_power_state
 39061 ;; This function uses a non-reentrant model
 39062 ;;
 39063                           
 39064                           	psect	text152
 39065  015AE0                     __ptext152:
 39066                           	opt stack 0
 39067  015AE0                     __flash_is_busy:
 39068                           	opt stack 15
 39069                           
 39070                           ;flash.c: 283: uint16_t status;;flash.c: 286: if(power_state!=FLASH_POWER_STATE_NORMAL)
 39071                           
 39072                           ;incstack = 0
 39073  015AE0  0101               	movlb	1	; () banked
 39074  015AE2  514D               	movf	_power_state& (0+255),w,b
 39075  015AE4  A4D8               	btfss	status,2,c
 39076                           
 39077                           ; BSR set to: 1
 39078                           ;flash.c: 287: {;flash.c: 288: _flash_wakeup();
 39079  015AE6  ECE8  F0A5         	call	__flash_wakeup	;wreg free
 39080                           
 39081                           ;flash.c: 289: };flash.c: 292: status = _flash_get_status();
 39082  015AEA  EC62  F0AB         	call	__flash_get_status	;wreg free
 39083  015AEE  C06C  F071         	movff	?__flash_get_status,__flash_is_busy@status
 39084  015AF2  C06D  F072         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 39085                           
 39086                           ;flash.c: 295: if(status & 0b0000000010000000)
 39087  015AF6  0100               	movlb	0	; () banked
 39088  015AF8  AF71               	btfss	__flash_is_busy@status& (0+255),7,b
 39089  015AFA  D002               	goto	l1595
 39090                           
 39091                           ; BSR set to: 0
 39092                           ;flash.c: 296: {;flash.c: 298: return 0;
 39093  015AFC  0E00               	movlw	0
 39094                           
 39095                           ; BSR set to: 0
 39096                           ;flash.c: 299: }
 39097                           
 39098                           ; BSR set to: 0
 39099  015AFE  0012               	return	
 39100  015B00                     l1595:
 39101                           
 39102                           ; BSR set to: 0
 39103                           ;flash.c: 300: else;flash.c: 301: {;flash.c: 303: return 1;
 39104                           
 39105                           ; BSR set to: 0
 39106  015B00  0E01               	movlw	1
 39107                           
 39108                           ; BSR set to: 0
 39109  015B02  0012               	return	
 39110  015B04                     __end_of__flash_is_busy:
 39111                           	opt stack 0
 39112                           tosu	equ	0xFFF
 39113                           tosh	equ	0xFFE
 39114                           tosl	equ	0xFFD
 39115                           pclath	equ	0xFFA
 39116                           tblptru	equ	0xFF8
 39117                           tblptrh	equ	0xFF7
 39118                           tblptrl	equ	0xFF6
 39119                           tablat	equ	0xFF5
 39120                           prodh	equ	0xFF4
 39121                           prodl	equ	0xFF3
 39122                           intcon	equ	0xFF2
 39123                           postinc0	equ	0xFEE
 39124                           wreg	equ	0xFE8
 39125                           indf1	equ	0xFE7
 39126                           postinc1	equ	0xFE6
 39127                           postdec1	equ	0xFE5
 39128                           plusw1	equ	0xFE3
 39129                           fsr1h	equ	0xFE2
 39130                           fsr1l	equ	0xFE1
 39131                           indf2	equ	0xFDF
 39132                           postinc2	equ	0xFDE
 39133                           postdec2	equ	0xFDD
 39134                           plusw2	equ	0xFDB
 39135                           fsr2h	equ	0xFDA
 39136                           fsr2l	equ	0xFD9
 39137                           status	equ	0xFD8
 39138                           
 39139 ;; *************** function __flash_wakeup *****************
 39140 ;; Defined at:
 39141 ;;		line 128 in file "flash.c"
 39142 ;; Parameters:    Size  Location     Type
 39143 ;;		None
 39144 ;; Auto vars:     Size  Location     Type
 39145 ;;  command         1    8[BANK0 ] unsigned char 
 39146 ;; Return value:  Size  Location     Type
 39147 ;;                  1    wreg      void 
 39148 ;; Registers used:
 39149 ;;		wreg, status,2, status,0, cstack
 39150 ;; Tracked objects:
 39151 ;;		On entry : 0/0
 39152 ;;		On exit  : 0/0
 39153 ;;		Unchanged: 0/0
 39154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39156 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39158 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39159 ;;Total ram usage:        1 bytes
 39160 ;; Hardware stack levels used:    1
 39161 ;; Hardware stack levels required when called:   11
 39162 ;; This function calls:
 39163 ;;		_spi_tx
 39164 ;; This function is called by:
 39165 ;;		__flash_is_busy
 39166 ;;		_flash_set_power_state
 39167 ;; This function uses a non-reentrant model
 39168 ;;
 39169                           
 39170                           	psect	text153
 39171  014BD0                     __ptext153:
 39172                           	opt stack 0
 39173  014BD0                     __flash_wakeup:
 39174                           	opt stack 15
 39175                           
 39176                           ;flash.c: 130: uint8_t command;;flash.c: 132: switch(power_state)
 39177                           
 39178                           ; BSR set to: 0
 39179                           ;incstack = 0
 39180  014BD0  D022               	goto	l1544
 39181  014BD2                     
 39182                           ;flash.c: 135: command = 0xAB;
 39183  014BD2  0EAB               	movlw	171
 39184  014BD4  0100               	movlb	0	; () banked
 39185  014BD6  6F68               	movwf	__flash_wakeup@command& (0+255),b
 39186                           
 39187                           ; BSR set to: 0
 39188                           ;flash.c: 136: spi_tx(&command, 1);
 39189  014BD8  0E68               	movlw	low __flash_wakeup@command
 39190  014BDA  6F60               	movwf	spi_tx@data& (0+255),b
 39191  014BDC  0E00               	movlw	high __flash_wakeup@command
 39192  014BDE  6F61               	movwf	(spi_tx@data+1)& (0+255),b
 39193  014BE0  0E00               	movlw	0
 39194  014BE2  6F63               	movwf	(spi_tx@length+1)& (0+255),b
 39195  014BE4  0E01               	movlw	1
 39196  014BE6  6F62               	movwf	spi_tx@length& (0+255),b
 39197  014BE8  EC63  F0A5         	call	_spi_tx	;wreg free
 39198                           
 39199                           ;flash.c: 137: _delay((unsigned long)((35)*(8000000/4000000.0)));
 39200  014BEC  0E17               	movlw	23
 39201  014BEE                     u19917:
 39202  014BEE  2EE8               	decfsz	wreg,f,c
 39203  014BF0  D7FE               	bra	u19917
 39204  014BF2  F000               	nop	
 39205                           
 39206                           ;flash.c: 138: power_state = FLASH_POWER_STATE_NORMAL;
 39207  014BF4  0E00               	movlw	0
 39208  014BF6  0101               	movlb	1	; () banked
 39209  014BF8  6F4D               	movwf	_power_state& (0+255),b
 39210                           
 39211                           ;flash.c: 139: break;
 39212  014BFA  0012               	return	
 39213  014BFC                     l1547:
 39214                           
 39215                           ; BSR set to: 1
 39216                           ;flash.c: 144: LATDbits.LD7 = 0;
 39217  014BFC  9E8C               	bcf	3980,7,c	;volatile
 39218                           
 39219                           ; BSR set to: 1
 39220                           ;flash.c: 145: _delay((unsigned long)((20)*(8000000/4000000.0)));
 39221  014BFE  0E0D               	movlw	13
 39222  014C00                     u19927:
 39223  014C00  2EE8               	decfsz	wreg,f,c
 39224  014C02  D7FE               	bra	u19927
 39225  014C04  F000               	nop	
 39226                           
 39227                           ;flash.c: 146: LATDbits.LD7 = 1;
 39228  014C06  8E8C               	bsf	3980,7,c	;volatile
 39229                           
 39230                           ;flash.c: 147: _delay((unsigned long)((120)*(8000000/4000000.0)));
 39231  014C08  0E50               	movlw	80
 39232  014C0A                     u19937:
 39233  014C0A  2EE8               	decfsz	wreg,f,c
 39234  014C0C  D7FE               	bra	u19937
 39235                           
 39236                           ;flash.c: 148: power_state = FLASH_POWER_STATE_NORMAL;
 39237  014C0E  0E00               	movlw	0
 39238  014C10  0101               	movlb	1	; () banked
 39239  014C12  6F4D               	movwf	_power_state& (0+255),b
 39240                           
 39241                           ; BSR set to: 1
 39242                           ;flash.c: 150: }
 39243                           
 39244                           ;flash.c: 149: break;
 39245  014C14  0012               	return	
 39246  014C16                     l1544:
 39247                           
 39248                           ; BSR set to: 1
 39249  014C16  0101               	movlb	1	; () banked
 39250  014C18  514D               	movf	_power_state& (0+255),w,b
 39251                           
 39252                           ; Switch size 1, requested type "space"
 39253                           ; Number of cases is 2, Range of values is 1 to 2
 39254                           ; switch strategies available:
 39255                           ; Name         Instructions Cycles
 39256                           ; simple_byte            7     4 (average)
 39257                           ;	Chosen strategy is simple_byte
 39258  014C1A  0A01               	xorlw	1	; case 1
 39259  014C1C  B4D8               	btfsc	status,2,c
 39260  014C1E  D7D9               	goto	l1545
 39261  014C20  0A03               	xorlw	3	; case 2
 39262  014C22  A4D8               	btfss	status,2,c
 39263  014C24  0012               	return	
 39264  014C26  D7EA               	goto	l1547
 39265  014C28                     __end_of__flash_wakeup:
 39266                           	opt stack 0
 39267                           tosu	equ	0xFFF
 39268                           tosh	equ	0xFFE
 39269                           tosl	equ	0xFFD
 39270                           pclath	equ	0xFFA
 39271                           tblptru	equ	0xFF8
 39272                           tblptrh	equ	0xFF7
 39273                           tblptrl	equ	0xFF6
 39274                           tablat	equ	0xFF5
 39275                           prodh	equ	0xFF4
 39276                           prodl	equ	0xFF3
 39277                           intcon	equ	0xFF2
 39278                           postinc0	equ	0xFEE
 39279                           wreg	equ	0xFE8
 39280                           indf1	equ	0xFE7
 39281                           postinc1	equ	0xFE6
 39282                           postdec1	equ	0xFE5
 39283                           plusw1	equ	0xFE3
 39284                           fsr1h	equ	0xFE2
 39285                           fsr1l	equ	0xFE1
 39286                           indf2	equ	0xFDF
 39287                           postinc2	equ	0xFDE
 39288                           postdec2	equ	0xFDD
 39289                           plusw2	equ	0xFDB
 39290                           fsr2h	equ	0xFDA
 39291                           fsr2l	equ	0xFD9
 39292                           status	equ	0xFD8
 39293                           
 39294 ;; *************** function _spi_tx *****************
 39295 ;; Defined at:
 39296 ;;		line 108 in file "spi.c"
 39297 ;; Parameters:    Size  Location     Type
 39298 ;;  data            2    0[BANK0 ] PTR unsigned char 
 39299 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 39300 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 39301 ;;  length          2    2[BANK0 ] unsigned int 
 39302 ;; Auto vars:     Size  Location     Type
 39303 ;;		None
 39304 ;; Return value:  Size  Location     Type
 39305 ;;                  1    wreg      void 
 39306 ;; Registers used:
 39307 ;;		wreg, status,2, status,0
 39308 ;; Tracked objects:
 39309 ;;		On entry : 0/0
 39310 ;;		On exit  : 0/0
 39311 ;;		Unchanged: 0/0
 39312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39313 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39315 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39316 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39317 ;;Total ram usage:        8 bytes
 39318 ;; Hardware stack levels used:    1
 39319 ;; Hardware stack levels required when called:   10
 39320 ;; This function calls:
 39321 ;;		Nothing
 39322 ;; This function is called by:
 39323 ;;		__flash_set_page_size
 39324 ;;		__flash_wakeup
 39325 ;;		__flash_copy_page_to_buffer
 39326 ;;		__flash_compare_page_to_buffer
 39327 ;;		__flash_write_page_from_buffer
 39328 ;;		__flash_erase_page
 39329 ;;		_flash_set_power_state
 39330 ;; This function uses a non-reentrant model
 39331 ;;
 39332                           
 39333                           	psect	text154
 39334  014AC6                     __ptext154:
 39335                           	opt stack 0
 39336  014AC6                     _spi_tx:
 39337                           	opt stack 17
 39338                           
 39339                           ;spi.c: 111: DMACON1bits.SSCON1 = 0;
 39340                           
 39341                           ; BSR set to: 1
 39342                           ;incstack = 0
 39343  014AC6  9E88               	bcf	3976,7,c	;volatile
 39344                           
 39345                           ;spi.c: 112: DMACON1bits.SSCON0 = 0;
 39346  014AC8  9C88               	bcf	3976,6,c	;volatile
 39347                           
 39348                           ;spi.c: 114: DMACON1bits.TXINC = 1;
 39349  014ACA  8A88               	bsf	3976,5,c	;volatile
 39350                           
 39351                           ;spi.c: 116: DMACON1bits.RXINC = 0;
 39352  014ACC  9888               	bcf	3976,4,c	;volatile
 39353                           
 39354                           ;spi.c: 118: DMACON1bits.DUPLEX1 = 0;
 39355  014ACE  9688               	bcf	3976,3,c	;volatile
 39356                           
 39357                           ;spi.c: 119: DMACON1bits.DUPLEX0 = 1;
 39358  014AD0  8488               	bsf	3976,2,c	;volatile
 39359                           
 39360                           ;spi.c: 121: DMACON1bits.DLYINTEN = 0;
 39361  014AD2  9288               	bcf	3976,1,c	;volatile
 39362                           
 39363                           ;spi.c: 123: DMACON2bits.DLYCYC = 0b0000;
 39364  014AD4  9886               	bcf	3974,4,c	;volatile
 39365  014AD6  9A86               	bcf	3974,5,c	;volatile
 39366  014AD8  9C86               	bcf	3974,6,c	;volatile
 39367  014ADA  9E86               	bcf	3974,7,c	;volatile
 39368                           
 39369                           ;spi.c: 125: DMACON2bits.INTLVL = 0b0000;
 39370  014ADC  9086               	bcf	3974,0,c	;volatile
 39371  014ADE  9286               	bcf	3974,1,c	;volatile
 39372  014AE0  9486               	bcf	3974,2,c	;volatile
 39373  014AE2  9686               	bcf	3974,3,c	;volatile
 39374                           
 39375                           ;spi.c: 128: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39376  014AE4  0100               	movlb	0	; () banked
 39377  014AE6  5161               	movf	(spi_tx@data+1)& (0+255),w,b
 39378  014AE8  6E6A               	movwf	3946,c	;volatile
 39379                           
 39380                           ; BSR set to: 0
 39381                           ;spi.c: 129: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39382  014AEA  C060  FF6B         	movff	spi_tx@data,3947	;volatile
 39383                           
 39384                           ; BSR set to: 0
 39385                           ;spi.c: 132: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 39386  014AEE  0EFF               	movlw	255
 39387  014AF0  6F64               	movwf	??_spi_tx& (0+255),b
 39388  014AF2  0EFF               	movlw	255
 39389  014AF4  6F65               	movwf	(??_spi_tx+1)& (0+255),b
 39390  014AF6  C062  F066         	movff	spi_tx@length,??_spi_tx+2
 39391  014AFA  C063  F067         	movff	spi_tx@length+1,??_spi_tx+3
 39392  014AFE  5164               	movf	??_spi_tx& (0+255),w,b
 39393  014B00  2766               	addwf	(??_spi_tx+2)& (0+255),f,b
 39394  014B02  5165               	movf	(??_spi_tx+1)& (0+255),w,b
 39395  014B04  2367               	addwfc	(??_spi_tx+3)& (0+255),f,b
 39396  014B06  C067  F066         	movff	??_spi_tx+3,??_spi_tx+2
 39397  014B0A  6B67               	clrf	(??_spi_tx+3)& (0+255),b
 39398  014B0C  5166               	movf	(??_spi_tx+2)& (0+255),w,b
 39399  014B0E  6E66               	movwf	3942,c	;volatile
 39400                           
 39401                           ; BSR set to: 0
 39402                           ;spi.c: 133: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 39403  014B10  0562               	decf	spi_tx@length& (0+255),w,b
 39404  014B12  6E67               	movwf	3943,c	;volatile
 39405                           
 39406                           ; BSR set to: 0
 39407                           ;spi.c: 136: LATDbits.LD7 = 0;
 39408  014B14  9E8C               	bcf	3980,7,c	;volatile
 39409                           
 39410                           ; BSR set to: 0
 39411                           ;spi.c: 137: DMACON1bits.DMAEN = 1;
 39412  014B16  8088               	bsf	3976,0,c	;volatile
 39413  014B18                     
 39414                           ; BSR set to: 0
 39415  014B18  B088               	btfsc	3976,0,c	;volatile
 39416  014B1A  D7FE               	goto	l2191
 39417                           
 39418                           ;spi.c: 139: LATDbits.LD7 = 1;
 39419  014B1C  8E8C               	bsf	3980,7,c	;volatile
 39420  014B1E  0012               	return		;funcret
 39421  014B20                     __end_of_spi_tx:
 39422                           	opt stack 0
 39423                           tosu	equ	0xFFF
 39424                           tosh	equ	0xFFE
 39425                           tosl	equ	0xFFD
 39426                           pclath	equ	0xFFA
 39427                           tblptru	equ	0xFF8
 39428                           tblptrh	equ	0xFF7
 39429                           tblptrl	equ	0xFF6
 39430                           tablat	equ	0xFF5
 39431                           prodh	equ	0xFF4
 39432                           prodl	equ	0xFF3
 39433                           intcon	equ	0xFF2
 39434                           postinc0	equ	0xFEE
 39435                           wreg	equ	0xFE8
 39436                           indf1	equ	0xFE7
 39437                           postinc1	equ	0xFE6
 39438                           postdec1	equ	0xFE5
 39439                           plusw1	equ	0xFE3
 39440                           fsr1h	equ	0xFE2
 39441                           fsr1l	equ	0xFE1
 39442                           indf2	equ	0xFDF
 39443                           postinc2	equ	0xFDE
 39444                           postdec2	equ	0xFDD
 39445                           plusw2	equ	0xFDB
 39446                           fsr2h	equ	0xFDA
 39447                           fsr2l	equ	0xFD9
 39448                           status	equ	0xFD8
 39449                           
 39450 ;; *************** function __flash_get_status *****************
 39451 ;; Defined at:
 39452 ;;		line 117 in file "flash.c"
 39453 ;; Parameters:    Size  Location     Type
 39454 ;;		None
 39455 ;; Auto vars:     Size  Location     Type
 39456 ;;  status          2   15[BANK0 ] unsigned int 
 39457 ;;  command         1   14[BANK0 ] unsigned char 
 39458 ;; Return value:  Size  Location     Type
 39459 ;;                  2   12[BANK0 ] unsigned int 
 39460 ;; Registers used:
 39461 ;;		wreg, status,2, status,0, cstack
 39462 ;; Tracked objects:
 39463 ;;		On entry : 0/0
 39464 ;;		On exit  : 0/0
 39465 ;;		Unchanged: 0/0
 39466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39467 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39468 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39470 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39471 ;;Total ram usage:        5 bytes
 39472 ;; Hardware stack levels used:    1
 39473 ;; Hardware stack levels required when called:   11
 39474 ;; This function calls:
 39475 ;;		_spi_tx_rx
 39476 ;; This function is called by:
 39477 ;;		__flash_compare_page_to_buffer
 39478 ;;		__flash_is_busy
 39479 ;; This function uses a non-reentrant model
 39480 ;;
 39481                           
 39482                           	psect	text155
 39483  0156C4                     __ptext155:
 39484                           	opt stack 0
 39485  0156C4                     __flash_get_status:
 39486                           	opt stack 15
 39487                           
 39488                           ;flash.c: 121: uint8_t command = 0xD7;
 39489                           
 39490                           ;incstack = 0
 39491  0156C4  0ED7               	movlw	215
 39492  0156C6  0100               	movlb	0	; () banked
 39493  0156C8  6F6E               	movwf	__flash_get_status@command& (0+255),b
 39494                           
 39495                           ; BSR set to: 0
 39496                           ;flash.c: 122: uint16_t status;;flash.c: 123: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39497  0156CA  0E6E               	movlw	low __flash_get_status@command
 39498  0156CC  6F60               	movwf	spi_tx_rx@command& (0+255),b
 39499  0156CE  0E00               	movlw	high __flash_get_status@command
 39500  0156D0  6F61               	movwf	(spi_tx_rx@command+1)& (0+255),b
 39501  0156D2  0E00               	movlw	0
 39502  0156D4  6F63               	movwf	(spi_tx_rx@command_length+1)& (0+255),b
 39503  0156D6  0E01               	movlw	1
 39504  0156D8  6F62               	movwf	spi_tx_rx@command_length& (0+255),b
 39505  0156DA  0E6F               	movlw	low __flash_get_status@status
 39506  0156DC  6F64               	movwf	spi_tx_rx@data& (0+255),b
 39507  0156DE  0E00               	movlw	high __flash_get_status@status
 39508  0156E0  6F65               	movwf	(spi_tx_rx@data+1)& (0+255),b
 39509  0156E2  0E00               	movlw	0
 39510  0156E4  6F67               	movwf	(spi_tx_rx@data_length+1)& (0+255),b
 39511  0156E6  0E02               	movlw	2
 39512  0156E8  6F66               	movwf	spi_tx_rx@data_length& (0+255),b
 39513  0156EA  ECE8  F09B         	call	_spi_tx_rx	;wreg free
 39514                           
 39515                           ;flash.c: 124: return status;
 39516  0156EE  C06F  F06C         	movff	__flash_get_status@status,?__flash_get_status
 39517  0156F2  C070  F06D         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39518  0156F6  0012               	return	
 39519  0156F8                     __end_of__flash_get_status:
 39520                           	opt stack 0
 39521                           tosu	equ	0xFFF
 39522                           tosh	equ	0xFFE
 39523                           tosl	equ	0xFFD
 39524                           pclath	equ	0xFFA
 39525                           tblptru	equ	0xFF8
 39526                           tblptrh	equ	0xFF7
 39527                           tblptrl	equ	0xFF6
 39528                           tablat	equ	0xFF5
 39529                           prodh	equ	0xFF4
 39530                           prodl	equ	0xFF3
 39531                           intcon	equ	0xFF2
 39532                           postinc0	equ	0xFEE
 39533                           wreg	equ	0xFE8
 39534                           indf1	equ	0xFE7
 39535                           postinc1	equ	0xFE6
 39536                           postdec1	equ	0xFE5
 39537                           plusw1	equ	0xFE3
 39538                           fsr1h	equ	0xFE2
 39539                           fsr1l	equ	0xFE1
 39540                           indf2	equ	0xFDF
 39541                           postinc2	equ	0xFDE
 39542                           postdec2	equ	0xFDD
 39543                           plusw2	equ	0xFDB
 39544                           fsr2h	equ	0xFDA
 39545                           fsr2l	equ	0xFD9
 39546                           status	equ	0xFD8
 39547                           
 39548 ;; *************** function _spi_tx_rx *****************
 39549 ;; Defined at:
 39550 ;;		line 199 in file "spi.c"
 39551 ;; Parameters:    Size  Location     Type
 39552 ;;  command         2    0[BANK0 ] PTR unsigned char 
 39553 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 39554 ;;  command_leng    2    2[BANK0 ] unsigned int 
 39555 ;;  data            2    4[BANK0 ] PTR unsigned char 
 39556 ;;		 -> ConfigFile_buffer(512), fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), 
 39557 ;;		 -> fat_rename_file@root(32), fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2
      +), 
 39558 ;;		 -> _root_is_available@first_byte(1), buffer(512), _flash_get_status@status(2), msd_buffer(512), 
 39559 ;;  data_length     2    6[BANK0 ] unsigned int 
 39560 ;; Auto vars:     Size  Location     Type
 39561 ;;		None
 39562 ;; Return value:  Size  Location     Type
 39563 ;;                  1    wreg      void 
 39564 ;; Registers used:
 39565 ;;		wreg, status,2, status,0
 39566 ;; Tracked objects:
 39567 ;;		On entry : 0/0
 39568 ;;		On exit  : 0/0
 39569 ;;		Unchanged: 0/0
 39570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39571 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39573 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39574 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39575 ;;Total ram usage:       12 bytes
 39576 ;; Hardware stack levels used:    1
 39577 ;; Hardware stack levels required when called:   10
 39578 ;; This function calls:
 39579 ;;		Nothing
 39580 ;; This function is called by:
 39581 ;;		__flash_get_status
 39582 ;;		__flash_partial_read
 39583 ;;		__flash_buffer_read
 39584 ;; This function uses a non-reentrant model
 39585 ;;
 39586                           
 39587                           	psect	text156
 39588  0137D0                     __ptext156:
 39589                           	opt stack 0
 39590  0137D0                     _spi_tx_rx:
 39591                           	opt stack 15
 39592                           
 39593                           ;spi.c: 202: DMACON1bits.SSCON1 = 0;
 39594                           
 39595                           ;incstack = 0
 39596  0137D0  9E88               	bcf	3976,7,c	;volatile
 39597                           
 39598                           ;spi.c: 203: DMACON1bits.SSCON0 = 0;
 39599  0137D2  9C88               	bcf	3976,6,c	;volatile
 39600                           
 39601                           ;spi.c: 205: DMACON1bits.TXINC = 1;
 39602  0137D4  8A88               	bsf	3976,5,c	;volatile
 39603                           
 39604                           ;spi.c: 207: DMACON1bits.RXINC = 0;
 39605  0137D6  9888               	bcf	3976,4,c	;volatile
 39606                           
 39607                           ;spi.c: 209: DMACON1bits.DUPLEX1 = 0;
 39608  0137D8  9688               	bcf	3976,3,c	;volatile
 39609                           
 39610                           ;spi.c: 210: DMACON1bits.DUPLEX0 = 1;
 39611  0137DA  8488               	bsf	3976,2,c	;volatile
 39612                           
 39613                           ;spi.c: 212: DMACON1bits.DLYINTEN = 0;
 39614  0137DC  9288               	bcf	3976,1,c	;volatile
 39615                           
 39616                           ;spi.c: 214: DMACON2bits.DLYCYC = 0b0000;
 39617  0137DE  9886               	bcf	3974,4,c	;volatile
 39618  0137E0  9A86               	bcf	3974,5,c	;volatile
 39619  0137E2  9C86               	bcf	3974,6,c	;volatile
 39620  0137E4  9E86               	bcf	3974,7,c	;volatile
 39621                           
 39622                           ;spi.c: 216: DMACON2bits.INTLVL = 0b0000;
 39623  0137E6  9086               	bcf	3974,0,c	;volatile
 39624  0137E8  9286               	bcf	3974,1,c	;volatile
 39625  0137EA  9486               	bcf	3974,2,c	;volatile
 39626  0137EC  9686               	bcf	3974,3,c	;volatile
 39627                           
 39628                           ;spi.c: 219: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39629  0137EE  0100               	movlb	0	; () banked
 39630  0137F0  5161               	movf	(spi_tx_rx@command+1)& (0+255),w,b
 39631  0137F2  6E6A               	movwf	3946,c	;volatile
 39632                           
 39633                           ; BSR set to: 0
 39634                           ;spi.c: 220: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39635  0137F4  C060  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39636                           
 39637                           ; BSR set to: 0
 39638                           ;spi.c: 223: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39639  0137F8  0EFF               	movlw	255
 39640  0137FA  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39641  0137FC  0EFF               	movlw	255
 39642  0137FE  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39643  013800  C062  F06A         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39644  013804  C063  F06B         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39645  013808  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39646  01380A  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39647  01380C  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39648  01380E  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39649  013810  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39650  013814  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39651  013816  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39652  013818  6E66               	movwf	3942,c	;volatile
 39653                           
 39654                           ; BSR set to: 0
 39655                           ;spi.c: 224: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39656  01381A  0562               	decf	spi_tx_rx@command_length& (0+255),w,b
 39657  01381C  6E67               	movwf	3943,c	;volatile
 39658                           
 39659                           ; BSR set to: 0
 39660                           ;spi.c: 227: LATDbits.LD7 = 0;
 39661  01381E  9E8C               	bcf	3980,7,c	;volatile
 39662                           
 39663                           ; BSR set to: 0
 39664                           ;spi.c: 230: DMACON1bits.DMAEN = 1;
 39665  013820  8088               	bsf	3976,0,c	;volatile
 39666  013822                     
 39667                           ; BSR set to: 0
 39668  013822  B088               	btfsc	3976,0,c	;volatile
 39669  013824  D7FE               	goto	l2206
 39670                           
 39671                           ;spi.c: 234: DMACON1bits.TXINC = 0;
 39672  013826  9A88               	bcf	3976,5,c	;volatile
 39673                           
 39674                           ;spi.c: 236: DMACON1bits.RXINC = 1;
 39675  013828  8888               	bsf	3976,4,c	;volatile
 39676                           
 39677                           ;spi.c: 238: DMACON1bits.DUPLEX1 = 0;
 39678  01382A  9688               	bcf	3976,3,c	;volatile
 39679                           
 39680                           ;spi.c: 239: DMACON1bits.DUPLEX0 = 0;
 39681  01382C  9488               	bcf	3976,2,c	;volatile
 39682                           
 39683                           ;spi.c: 242: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39684  01382E  0100               	movlb	0	; () banked
 39685  013830  5165               	movf	(spi_tx_rx@data+1)& (0+255),w,b
 39686  013832  6E68               	movwf	3944,c	;volatile
 39687                           
 39688                           ; BSR set to: 0
 39689                           ;spi.c: 243: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39690  013834  C064  FF69         	movff	spi_tx_rx@data,3945	;volatile
 39691                           
 39692                           ; BSR set to: 0
 39693                           ;spi.c: 246: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39694  013838  0EFF               	movlw	255
 39695  01383A  6F68               	movwf	??_spi_tx_rx& (0+255),b
 39696  01383C  0EFF               	movlw	255
 39697  01383E  6F69               	movwf	(??_spi_tx_rx+1)& (0+255),b
 39698  013840  C066  F06A         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 39699  013844  C067  F06B         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 39700  013848  5168               	movf	??_spi_tx_rx& (0+255),w,b
 39701  01384A  276A               	addwf	(??_spi_tx_rx+2)& (0+255),f,b
 39702  01384C  5169               	movf	(??_spi_tx_rx+1)& (0+255),w,b
 39703  01384E  236B               	addwfc	(??_spi_tx_rx+3)& (0+255),f,b
 39704  013850  C06B  F06A         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39705  013854  6B6B               	clrf	(??_spi_tx_rx+3)& (0+255),b
 39706  013856  516A               	movf	(??_spi_tx_rx+2)& (0+255),w,b
 39707  013858  6E66               	movwf	3942,c	;volatile
 39708                           
 39709                           ; BSR set to: 0
 39710                           ;spi.c: 247: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39711  01385A  0566               	decf	spi_tx_rx@data_length& (0+255),w,b
 39712  01385C  6E67               	movwf	3943,c	;volatile
 39713                           
 39714                           ; BSR set to: 0
 39715                           ;spi.c: 250: DMACON1bits.DMAEN = 1;
 39716  01385E  8088               	bsf	3976,0,c	;volatile
 39717  013860                     
 39718                           ; BSR set to: 0
 39719  013860  B088               	btfsc	3976,0,c	;volatile
 39720  013862  D7FE               	goto	l2209
 39721                           
 39722                           ;spi.c: 254: LATDbits.LD7 = 1;
 39723  013864  8E8C               	bsf	3980,7,c	;volatile
 39724  013866  0012               	return		;funcret
 39725  013868                     __end_of_spi_tx_rx:
 39726                           	opt stack 0
 39727                           tosu	equ	0xFFF
 39728                           tosh	equ	0xFFE
 39729                           tosl	equ	0xFFD
 39730                           pclath	equ	0xFFA
 39731                           tblptru	equ	0xFF8
 39732                           tblptrh	equ	0xFF7
 39733                           tblptrl	equ	0xFF6
 39734                           tablat	equ	0xFF5
 39735                           prodh	equ	0xFF4
 39736                           prodl	equ	0xFF3
 39737                           intcon	equ	0xFF2
 39738                           postinc0	equ	0xFEE
 39739                           wreg	equ	0xFE8
 39740                           indf1	equ	0xFE7
 39741                           postinc1	equ	0xFE6
 39742                           postdec1	equ	0xFE5
 39743                           plusw1	equ	0xFE3
 39744                           fsr1h	equ	0xFE2
 39745                           fsr1l	equ	0xFE1
 39746                           indf2	equ	0xFDF
 39747                           postinc2	equ	0xFDE
 39748                           postdec2	equ	0xFDD
 39749                           plusw2	equ	0xFDB
 39750                           fsr2h	equ	0xFDA
 39751                           fsr2l	equ	0xFD9
 39752                           status	equ	0xFD8
 39753                           
 39754 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 39755 ;; Defined at:
 39756 ;;		line 993 in file "usb_device_msd.c"
 39757 ;; Parameters:    Size  Location     Type
 39758 ;;  DiExpected      2    0[BANK0 ] unsigned int 
 39759 ;; Auto vars:     Size  Location     Type
 39760 ;;		None
 39761 ;; Return value:  Size  Location     Type
 39762 ;;                  1    wreg      void 
 39763 ;; Registers used:
 39764 ;;		wreg, status,2, status,0
 39765 ;; Tracked objects:
 39766 ;;		On entry : 0/0
 39767 ;;		On exit  : 0/0
 39768 ;;		Unchanged: 0/0
 39769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39770 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39772 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39773 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39774 ;;Total ram usage:        6 bytes
 39775 ;; Hardware stack levels used:    1
 39776 ;; Hardware stack levels required when called:   10
 39777 ;; This function calls:
 39778 ;;		Nothing
 39779 ;; This function is called by:
 39780 ;;		_MSDProcessCommandMediaPresent
 39781 ;; This function uses a non-reentrant model
 39782 ;;
 39783                           
 39784                           	psect	text157
 39785  012D12                     __ptext157:
 39786                           	opt stack 0
 39787  012D12                     _MSDComputeDeviceInAndResidue:
 39788                           	opt stack 16
 39789                           
 39790                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 39791                           
 39792                           ;incstack = 0
 39793  012D12  0100               	movlb	0	; () banked
 39794  012D14  5160               	movf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 39795  012D16  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 39796  012D18  5161               	movf	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 39797  012D1A  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 39798  012D1C  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 39799  012D1E  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 39800  012D20  5162               	movf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 39801  012D22  0102               	movlb	2	; () banked
 39802  012D24  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 39803  012D26  0100               	movlb	0	; () banked
 39804  012D28  5163               	movf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 39805  012D2A  0102               	movlb	2	; () banked
 39806  012D2C  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 39807  012D2E  0100               	movlb	0	; () banked
 39808  012D30  5164               	movf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 39809  012D32  0102               	movlb	2	; () banked
 39810  012D34  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 39811  012D36  0100               	movlb	0	; () banked
 39812  012D38  5165               	movf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 39813  012D3A  0102               	movlb	2	; () banked
 39814  012D3C  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 39815  012D3E  B0D8               	btfsc	status,0,c
 39816  012D40  D00E               	goto	l675
 39817                           
 39818                           ; BSR set to: 2
 39819                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 39820  012D42  0E00               	movlw	0
 39821  012D44  010D               	movlb	13	; () banked
 39822  012D46  6F88               	movwf	136,b	;volatile
 39823  012D48  0E00               	movlw	0
 39824  012D4A  6F89               	movwf	137,b	;volatile
 39825  012D4C  0E00               	movlw	0
 39826  012D4E  6F8A               	movwf	138,b	;volatile
 39827  012D50  0E00               	movlw	0
 39828  012D52  6F8B               	movwf	139,b	;volatile
 39829                           
 39830                           ; BSR set to: 13
 39831                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 39832  012D54  C208  F139         	movff	_gblCBW+8,_TransferLength
 39833  012D58  C209  F13A         	movff	_gblCBW+9,_TransferLength+1
 39834                           
 39835                           ;usb_device_msd.c: 1002: }
 39836  012D5C  0012               	return	
 39837  012D5E                     l675:
 39838                           
 39839                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 39840                           
 39841                           ; BSR set to: 13
 39842  012D5E  0101               	movlb	1	; () banked
 39843  012D60  5139               	movf	_TransferLength& (0+255),w,b
 39844  012D62  0100               	movlb	0	; () banked
 39845  012D64  5D60               	subwf	MSDComputeDeviceInAndResidue@DiExpected& (0+255),w,b
 39846  012D66  0101               	movlb	1	; () banked
 39847  012D68  513A               	movf	(_TransferLength+1)& (0+255),w,b
 39848  012D6A  0100               	movlb	0	; () banked
 39849  012D6C  5961               	subwfb	(MSDComputeDeviceInAndResidue@DiExpected+1)& (0+255),w,b
 39850  012D6E  B0D8               	btfsc	status,0,c
 39851  012D70  D004               	goto	l677
 39852                           
 39853                           ; BSR set to: 0
 39854                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 39855  012D72  C060  F139         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 39856  012D76  C061  F13A         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 39857  012D7A                     l677:
 39858                           
 39859                           ; BSR set to: 0
 39860                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 39861                           
 39862                           ; BSR set to: 0
 39863  012D7A  0101               	movlb	1	; () banked
 39864  012D7C  5139               	movf	_TransferLength& (0+255),w,b
 39865  012D7E  0100               	movlb	0	; () banked
 39866  012D80  6F62               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),b
 39867  012D82  0101               	movlb	1	; () banked
 39868  012D84  513A               	movf	(_TransferLength+1)& (0+255),w,b
 39869  012D86  0100               	movlb	0	; () banked
 39870  012D88  6F63               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),b
 39871  012D8A  6B64               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),b
 39872  012D8C  6B65               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),b
 39873  012D8E  1F62               	comf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 39874  012D90  1F63               	comf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 39875  012D92  1F64               	comf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 39876  012D94  1F65               	comf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 39877  012D96  2B62               	incf	??_MSDComputeDeviceInAndResidue& (0+255),f,b
 39878  012D98  0E00               	movlw	0
 39879  012D9A  2363               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),f,b
 39880  012D9C  2364               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),f,b
 39881  012D9E  2365               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),f,b
 39882  012DA0  0102               	movlb	2	; () banked
 39883  012DA2  5108               	movf	(_gblCBW+8)& (0+255),w,b
 39884  012DA4  0100               	movlb	0	; () banked
 39885  012DA6  2562               	addwf	??_MSDComputeDeviceInAndResidue& (0+255),w,b
 39886  012DA8  010D               	movlb	13	; () banked
 39887  012DAA  6F88               	movwf	136,b	;volatile
 39888  012DAC  0102               	movlb	2	; () banked
 39889  012DAE  5109               	movf	(_gblCBW+9)& (0+255),w,b
 39890  012DB0  0100               	movlb	0	; () banked
 39891  012DB2  2163               	addwfc	(??_MSDComputeDeviceInAndResidue+1)& (0+255),w,b
 39892  012DB4  010D               	movlb	13	; () banked
 39893  012DB6  6F89               	movwf	137,b	;volatile
 39894  012DB8  0102               	movlb	2	; () banked
 39895  012DBA  510A               	movf	(_gblCBW+10)& (0+255),w,b
 39896  012DBC  0100               	movlb	0	; () banked
 39897  012DBE  2164               	addwfc	(??_MSDComputeDeviceInAndResidue+2)& (0+255),w,b
 39898  012DC0  010D               	movlb	13	; () banked
 39899  012DC2  6F8A               	movwf	138,b	;volatile
 39900  012DC4  0102               	movlb	2	; () banked
 39901  012DC6  510B               	movf	(_gblCBW+11)& (0+255),w,b
 39902  012DC8  0100               	movlb	0	; () banked
 39903  012DCA  2165               	addwfc	(??_MSDComputeDeviceInAndResidue+3)& (0+255),w,b
 39904  012DCC  010D               	movlb	13	; () banked
 39905  012DCE  6F8B               	movwf	139,b	;volatile
 39906  012DD0  0012               	return	
 39907  012DD2                     __end_of_MSDComputeDeviceInAndResidue:
 39908                           	opt stack 0
 39909                           tosu	equ	0xFFF
 39910                           tosh	equ	0xFFE
 39911                           tosl	equ	0xFFD
 39912                           pclath	equ	0xFFA
 39913                           tblptru	equ	0xFF8
 39914                           tblptrh	equ	0xFF7
 39915                           tblptrl	equ	0xFF6
 39916                           tablat	equ	0xFF5
 39917                           prodh	equ	0xFF4
 39918                           prodl	equ	0xFF3
 39919                           intcon	equ	0xFF2
 39920                           postinc0	equ	0xFEE
 39921                           wreg	equ	0xFE8
 39922                           indf1	equ	0xFE7
 39923                           postinc1	equ	0xFE6
 39924                           postdec1	equ	0xFE5
 39925                           plusw1	equ	0xFE3
 39926                           fsr1h	equ	0xFE2
 39927                           fsr1l	equ	0xFE1
 39928                           indf2	equ	0xFDF
 39929                           postinc2	equ	0xFDE
 39930                           postdec2	equ	0xFDD
 39931                           plusw2	equ	0xFDB
 39932                           fsr2h	equ	0xFDA
 39933                           fsr2l	equ	0xFD9
 39934                           status	equ	0xFD8
 39935                           
 39936 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 39937 ;; Defined at:
 39938 ;;		line 18 in file "external_flash.c"
 39939 ;; Parameters:    Size  Location     Type
 39940 ;;  config          2    0[BANK0 ] PTR void 
 39941 ;;		 -> NULL(0), 
 39942 ;; Auto vars:     Size  Location     Type
 39943 ;;		None
 39944 ;; Return value:  Size  Location     Type
 39945 ;;                  2    0[BANK0 ] unsigned int 
 39946 ;; Registers used:
 39947 ;;		wreg, status,2
 39948 ;; Tracked objects:
 39949 ;;		On entry : 0/0
 39950 ;;		On exit  : 0/0
 39951 ;;		Unchanged: 0/0
 39952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39953 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39954 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39956 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39957 ;;Total ram usage:        2 bytes
 39958 ;; Hardware stack levels used:    1
 39959 ;; Hardware stack levels required when called:   10
 39960 ;; This function calls:
 39961 ;;		Nothing
 39962 ;; This function is called by:
 39963 ;;		_MSDProcessCommandMediaPresent
 39964 ;; This function uses a non-reentrant model
 39965 ;;
 39966                           
 39967                           	psect	text158
 39968  015D2E                     __ptext158:
 39969                           	opt stack 0
 39970  015D2E                     _ExternalFlash_SectorSizeRead:
 39971                           	opt stack 16
 39972                           
 39973                           ;external_flash.c: 20: return 512;
 39974                           
 39975                           ; BSR set to: 13
 39976                           ;incstack = 0
 39977  015D2E  0E02               	movlw	2
 39978  015D30  0100               	movlb	0	; () banked
 39979  015D32  6F61               	movwf	(?_ExternalFlash_SectorSizeRead+1)& (0+255),b
 39980  015D34  0E00               	movlw	0
 39981  015D36  6F60               	movwf	?_ExternalFlash_SectorSizeRead& (0+255),b
 39982  015D38  0012               	return	
 39983  015D3A                     __end_of_ExternalFlash_SectorSizeRead:
 39984                           	opt stack 0
 39985                           tosu	equ	0xFFF
 39986                           tosh	equ	0xFFE
 39987                           tosl	equ	0xFFD
 39988                           pclath	equ	0xFFA
 39989                           tblptru	equ	0xFF8
 39990                           tblptrh	equ	0xFF7
 39991                           tblptrl	equ	0xFF6
 39992                           tablat	equ	0xFF5
 39993                           prodh	equ	0xFF4
 39994                           prodl	equ	0xFF3
 39995                           intcon	equ	0xFF2
 39996                           postinc0	equ	0xFEE
 39997                           wreg	equ	0xFE8
 39998                           indf1	equ	0xFE7
 39999                           postinc1	equ	0xFE6
 40000                           postdec1	equ	0xFE5
 40001                           plusw1	equ	0xFE3
 40002                           fsr1h	equ	0xFE2
 40003                           fsr1l	equ	0xFE1
 40004                           indf2	equ	0xFDF
 40005                           postinc2	equ	0xFDE
 40006                           postdec2	equ	0xFDD
 40007                           plusw2	equ	0xFDB
 40008                           fsr2h	equ	0xFDA
 40009                           fsr2l	equ	0xFD9
 40010                           status	equ	0xFD8
 40011                           
 40012 ;; *************** function _ExternalFlash_CapacityRead *****************
 40013 ;; Defined at:
 40014 ;;		line 23 in file "external_flash.c"
 40015 ;; Parameters:    Size  Location     Type
 40016 ;;  config          2    0[BANK0 ] PTR void 
 40017 ;;		 -> NULL(0), 
 40018 ;; Auto vars:     Size  Location     Type
 40019 ;;		None
 40020 ;; Return value:  Size  Location     Type
 40021 ;;                  4    0[BANK0 ] unsigned long 
 40022 ;; Registers used:
 40023 ;;		wreg, status,2
 40024 ;; Tracked objects:
 40025 ;;		On entry : 0/0
 40026 ;;		On exit  : 0/0
 40027 ;;		Unchanged: 0/0
 40028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40029 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40030 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40032 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40033 ;;Total ram usage:        4 bytes
 40034 ;; Hardware stack levels used:    1
 40035 ;; Hardware stack levels required when called:   10
 40036 ;; This function calls:
 40037 ;;		Nothing
 40038 ;; This function is called by:
 40039 ;;		_MSDProcessCommandMediaPresent
 40040 ;; This function uses a non-reentrant model
 40041 ;;
 40042                           
 40043                           	psect	text159
 40044  015CB2                     __ptext159:
 40045                           	opt stack 0
 40046  015CB2                     _ExternalFlash_CapacityRead:
 40047                           	opt stack 16
 40048                           
 40049                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 40050                           
 40051                           ; BSR set to: 0
 40052                           ;incstack = 0
 40053  015CB2  0EFF               	movlw	255
 40054  015CB4  0100               	movlb	0	; () banked
 40055  015CB6  6F60               	movwf	?_ExternalFlash_CapacityRead& (0+255),b
 40056  015CB8  0E1F               	movlw	31
 40057  015CBA  6F61               	movwf	(?_ExternalFlash_CapacityRead+1)& (0+255),b
 40058  015CBC  0E00               	movlw	0
 40059  015CBE  6F62               	movwf	(?_ExternalFlash_CapacityRead+2)& (0+255),b
 40060  015CC0  0E00               	movlw	0
 40061  015CC2  6F63               	movwf	(?_ExternalFlash_CapacityRead+3)& (0+255),b
 40062  015CC4  0012               	return	
 40063  015CC6                     __end_of_ExternalFlash_CapacityRead:
 40064                           	opt stack 0
 40065                           tosu	equ	0xFFF
 40066                           tosh	equ	0xFFE
 40067                           tosl	equ	0xFFD
 40068                           pclath	equ	0xFFA
 40069                           tblptru	equ	0xFF8
 40070                           tblptrh	equ	0xFF7
 40071                           tblptrl	equ	0xFF6
 40072                           tablat	equ	0xFF5
 40073                           prodh	equ	0xFF4
 40074                           prodl	equ	0xFF3
 40075                           intcon	equ	0xFF2
 40076                           postinc0	equ	0xFEE
 40077                           wreg	equ	0xFE8
 40078                           indf1	equ	0xFE7
 40079                           postinc1	equ	0xFE6
 40080                           postdec1	equ	0xFE5
 40081                           plusw1	equ	0xFE3
 40082                           fsr1h	equ	0xFE2
 40083                           fsr1l	equ	0xFE1
 40084                           indf2	equ	0xFDF
 40085                           postinc2	equ	0xFDE
 40086                           postdec2	equ	0xFDD
 40087                           plusw2	equ	0xFDB
 40088                           fsr2h	equ	0xFDA
 40089                           fsr2l	equ	0xFD9
 40090                           status	equ	0xFD8
 40091                           
 40092 ;; *************** function _ExternalFlash_MediaInitialize *****************
 40093 ;; Defined at:
 40094 ;;		line 10 in file "external_flash.c"
 40095 ;; Parameters:    Size  Location     Type
 40096 ;;  config          2    0[BANK0 ] PTR void 
 40097 ;;		 -> NULL(0), 
 40098 ;; Auto vars:     Size  Location     Type
 40099 ;;		None
 40100 ;; Return value:  Size  Location     Type
 40101 ;;                  2    0[BANK0 ] PTR struct .
 40102 ;; Registers used:
 40103 ;;		wreg, status,2, status,0
 40104 ;; Tracked objects:
 40105 ;;		On entry : 0/0
 40106 ;;		On exit  : 0/0
 40107 ;;		Unchanged: 0/0
 40108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40109 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40112 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40113 ;;Total ram usage:        2 bytes
 40114 ;; Hardware stack levels used:    1
 40115 ;; Hardware stack levels required when called:   10
 40116 ;; This function calls:
 40117 ;;		Nothing
 40118 ;; This function is called by:
 40119 ;;		_USBMSDInit
 40120 ;;		_MSDProcessCommand
 40121 ;; This function uses a non-reentrant model
 40122 ;;
 40123                           
 40124                           	psect	text160
 40125  015B6A                     __ptext160:
 40126                           	opt stack 0
 40127  015B6A                     _ExternalFlash_MediaInitialize:
 40128                           	opt stack 0
 40129                           
 40130                           ; BSR set to: 0
 40131                           ;Skip over the trampoline to the duplicate function for level 2
 40132  015B6A  B25F               	btfsc	btemp,1,c
 40133  015B6C  EF35  F0AE         	goto	i2_ExternalFlash_MediaInitialize
 40134  015B70                     _ExternalFlash_MediaInitialize$intlevel0:
 40135                           	opt stack 17
 40136                           
 40137                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 40138                           
 40139                           ;incstack = 0
 40140  015B70  0102               	movlb	2	; () banked
 40141  015B72  8193               	bsf	(_mediaInformation+1)& (0+255),0,b
 40142                           
 40143                           ; BSR set to: 2
 40144                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 40145  015B74  0E02               	movlw	2
 40146  015B76  6F95               	movwf	(_mediaInformation+3)& (0+255),b
 40147  015B78  0E00               	movlw	0
 40148  015B7A  6F94               	movwf	(_mediaInformation+2)& (0+255),b
 40149                           
 40150                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 40151  015B7C  0E00               	movlw	0
 40152  015B7E  6F92               	movwf	_mediaInformation& (0+255),b
 40153                           
 40154                           ; BSR set to: 2
 40155                           ;external_flash.c: 15: return &mediaInformation;
 40156  015B80  0E92               	movlw	low _mediaInformation
 40157  015B82  0100               	movlb	0	; () banked
 40158  015B84  6F60               	movwf	?_ExternalFlash_MediaInitialize& (0+255),b
 40159  015B86  0E02               	movlw	high _mediaInformation
 40160  015B88  6F61               	movwf	(?_ExternalFlash_MediaInitialize+1)& (0+255),b
 40161  015B8A  0012               	return	
 40162  015B8C                     __end_of_ExternalFlash_MediaInitialize:
 40163                           	opt stack 0
 40164                           tosu	equ	0xFFF
 40165                           tosh	equ	0xFFE
 40166                           tosl	equ	0xFFD
 40167                           pclath	equ	0xFFA
 40168                           tblptru	equ	0xFF8
 40169                           tblptrh	equ	0xFF7
 40170                           tblptrl	equ	0xFF6
 40171                           tablat	equ	0xFF5
 40172                           prodh	equ	0xFF4
 40173                           prodl	equ	0xFF3
 40174                           intcon	equ	0xFF2
 40175                           postinc0	equ	0xFEE
 40176                           wreg	equ	0xFE8
 40177                           indf1	equ	0xFE7
 40178                           postinc1	equ	0xFE6
 40179                           postdec1	equ	0xFE5
 40180                           plusw1	equ	0xFE3
 40181                           fsr1h	equ	0xFE2
 40182                           fsr1l	equ	0xFE1
 40183                           indf2	equ	0xFDF
 40184                           postinc2	equ	0xFDE
 40185                           postdec2	equ	0xFDD
 40186                           plusw2	equ	0xFDB
 40187                           fsr2h	equ	0xFDA
 40188                           fsr2l	equ	0xFD9
 40189                           status	equ	0xFD8
 40190                           
 40191 ;; *************** function _ExternalFlash_MediaDetect *****************
 40192 ;; Defined at:
 40193 ;;		line 29 in file "external_flash.c"
 40194 ;; Parameters:    Size  Location     Type
 40195 ;;  config          2    0[BANK0 ] PTR void 
 40196 ;;		 -> NULL(0), 
 40197 ;; Auto vars:     Size  Location     Type
 40198 ;;		None
 40199 ;; Return value:  Size  Location     Type
 40200 ;;                  1    wreg      unsigned char 
 40201 ;; Registers used:
 40202 ;;		wreg
 40203 ;; Tracked objects:
 40204 ;;		On entry : 0/0
 40205 ;;		On exit  : 0/0
 40206 ;;		Unchanged: 0/0
 40207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40208 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40211 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40212 ;;Total ram usage:        2 bytes
 40213 ;; Hardware stack levels used:    1
 40214 ;; Hardware stack levels required when called:   10
 40215 ;; This function calls:
 40216 ;;		Nothing
 40217 ;; This function is called by:
 40218 ;;		_USBMSDInit
 40219 ;;		_MSDProcessCommand
 40220 ;; This function uses a non-reentrant model
 40221 ;;
 40222                           
 40223                           	psect	text161
 40224  015D7A                     __ptext161:
 40225                           	opt stack 0
 40226  015D7A                     _ExternalFlash_MediaDetect:
 40227                           	opt stack 0
 40228                           
 40229                           ; BSR set to: 0
 40230                           ;Skip over the trampoline to the duplicate function for level 2
 40231  015D7A  B25F               	btfsc	btemp,1,c
 40232  015D7C  EFDF  F0AE         	goto	i2_ExternalFlash_MediaDetect
 40233  015D80                     _ExternalFlash_MediaDetect$intlevel0:
 40234                           	opt stack 17
 40235                           
 40236                           ;external_flash.c: 31: return 1;
 40237                           
 40238                           ;incstack = 0
 40239  015D80  0E01               	movlw	1
 40240  015D82  0012               	return	
 40241  015D84                     __end_of_ExternalFlash_MediaDetect:
 40242                           	opt stack 0
 40243                           tosu	equ	0xFFF
 40244                           tosh	equ	0xFFE
 40245                           tosl	equ	0xFFD
 40246                           pclath	equ	0xFFA
 40247                           tblptru	equ	0xFF8
 40248                           tblptrh	equ	0xFF7
 40249                           tblptrl	equ	0xFF6
 40250                           tablat	equ	0xFF5
 40251                           prodh	equ	0xFF4
 40252                           prodl	equ	0xFF3
 40253                           intcon	equ	0xFF2
 40254                           postinc0	equ	0xFEE
 40255                           wreg	equ	0xFE8
 40256                           indf1	equ	0xFE7
 40257                           postinc1	equ	0xFE6
 40258                           postdec1	equ	0xFE5
 40259                           plusw1	equ	0xFE3
 40260                           fsr1h	equ	0xFE2
 40261                           fsr1l	equ	0xFE1
 40262                           indf2	equ	0xFDF
 40263                           postinc2	equ	0xFDE
 40264                           postdec2	equ	0xFDD
 40265                           plusw2	equ	0xFDB
 40266                           fsr2h	equ	0xFDA
 40267                           fsr2l	equ	0xFD9
 40268                           status	equ	0xFD8
 40269                           
 40270 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 40271 ;; Defined at:
 40272 ;;		line 73 in file "app_device_custom_hid.c"
 40273 ;; Parameters:    Size  Location     Type
 40274 ;;		None
 40275 ;; Auto vars:     Size  Location     Type
 40276 ;;  idx             1    0        unsigned char 
 40277 ;; Return value:  Size  Location     Type
 40278 ;;                  1    wreg      void 
 40279 ;; Registers used:
 40280 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40281 ;; Tracked objects:
 40282 ;;		On entry : 0/0
 40283 ;;		On exit  : 0/0
 40284 ;;		Unchanged: 0/0
 40285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40287 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40289 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40290 ;;Total ram usage:        0 bytes
 40291 ;; Hardware stack levels used:    1
 40292 ;; Hardware stack levels required when called:   17
 40293 ;; This function calls:
 40294 ;;		_USBTransferOnePacket
 40295 ;;		_api_parse
 40296 ;;		_api_prepare
 40297 ;; This function is called by:
 40298 ;;		_main
 40299 ;; This function uses a non-reentrant model
 40300 ;;
 40301                           
 40302                           	psect	text162
 40303  013414                     __ptext162:
 40304                           	opt stack 0
 40305  013414                     _APP_DeviceCustomHIDTasks:
 40306                           	opt stack 13
 40307                           
 40308                           ;app_device_custom_hid.c: 75: uint8_t idx;;app_device_custom_hid.c: 80: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 40309                           
 40310                           ;incstack = 0
 40311  013414  0E20               	movlw	32
 40312  013416  605E               	cpfslt	_USBDeviceState,c	;volatile
 40313  013418  D001               	goto	l944
 40314  01341A  0012               	return	
 40315  01341C                     l944:
 40316                           
 40317                           ;app_device_custom_hid.c: 83: };app_device_custom_hid.c: 89: if( UCONbits.SUSPND== 1 )
 40318  01341C  B265               	btfsc	3941,1,c	;volatile
 40319  01341E  0012               	return	
 40320                           
 40321                           ;app_device_custom_hid.c: 92: };app_device_custom_hid.c: 95: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 40322                           
 40323                           ;app_device_custom_hid.c: 90: {;app_device_custom_hid.c: 91: return;
 40324  013420  0101               	movlb	1	; () banked
 40325  013422  5137               	movf	_USBOutHandle& (0+255),w,b
 40326  013424  1138               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 40327  013426  B4D8               	btfsc	status,2,c
 40328  013428  D006               	goto	u17650
 40329                           
 40330                           ; BSR set to: 1
 40331  01342A  C137  FFD9         	movff	_USBOutHandle,fsr2l
 40332  01342E  C138  FFDA         	movff	_USBOutHandle+1,fsr2h
 40333  013432  BEDF               	btfsc	indf2,7,c
 40334  013434  0012               	return	
 40335  013436                     u17650:
 40336                           
 40337                           ; BSR set to: 1
 40338                           ;app_device_custom_hid.c: 96: {;app_device_custom_hid.c: 101: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 40339                           
 40340                           ; BSR set to: 1
 40341  013436  5135               	movf	_USBInHandle& (0+255),w,b
 40342  013438  1136               	iorwf	(_USBInHandle+1)& (0+255),w,b
 40343  01343A  B4D8               	btfsc	status,2,c
 40344  01343C  D006               	goto	u17670
 40345                           
 40346                           ; BSR set to: 1
 40347  01343E  C135  FFD9         	movff	_USBInHandle,fsr2l
 40348  013442  C136  FFDA         	movff	_USBInHandle+1,fsr2h
 40349  013446  BEDF               	btfsc	indf2,7,c
 40350  013448  D01B               	goto	l950
 40351  01344A                     u17670:
 40352                           
 40353                           ; BSR set to: 1
 40354                           ;app_device_custom_hid.c: 102: {;app_device_custom_hid.c: 104: api_prepare((uint8_t*) Re
      +                          ceivedDataBuffer, (uint8_t*) ToSendDataBuffer);
 40355                           
 40356                           ; BSR set to: 1
 40357  01344A  0E80               	movlw	low _ReceivedDataBuffer
 40358  01344C  0100               	movlb	0	; () banked
 40359  01344E  6F70               	movwf	api_prepare@inBuffer& (0+255),b
 40360  013450  0E03               	movlw	high _ReceivedDataBuffer
 40361  013452  6F71               	movwf	(api_prepare@inBuffer+1)& (0+255),b
 40362  013454  0E40               	movlw	low _ToSendDataBuffer
 40363  013456  6F72               	movwf	api_prepare@outBuffer& (0+255),b
 40364  013458  0E03               	movlw	high _ToSendDataBuffer
 40365  01345A  6F73               	movwf	(api_prepare@outBuffer+1)& (0+255),b
 40366  01345C  EC06  F092         	call	_api_prepare	;wreg free
 40367                           
 40368                           ;app_device_custom_hid.c: 106: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 40369  013460  0E01               	movlw	1
 40370  013462  0100               	movlb	0	; () banked
 40371  013464  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40372  013466  0E40               	movlw	low _ToSendDataBuffer
 40373  013468  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40374  01346A  0E03               	movlw	high _ToSendDataBuffer
 40375  01346C  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40376  01346E  0E40               	movlw	64
 40377  013470  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40378  013472  0E01               	movlw	1
 40379  013474  EC8B  F089         	call	_USBTransferOnePacket
 40380  013478  C060  F135         	movff	?_USBTransferOnePacket,_USBInHandle
 40381  01347C  C061  F136         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 40382  013480                     l950:
 40383                           
 40384                           ;app_device_custom_hid.c: 107: };app_device_custom_hid.c: 110: api_parse(ReceivedDataBuf
      +                          fer, 64, ToSendDataBuffer);
 40385  013480  0E80               	movlw	low _ReceivedDataBuffer
 40386  013482  0100               	movlb	0	; () banked
 40387  013484  6FA7               	movwf	api_parse@inBuffer& (0+255),b
 40388  013486  0E03               	movlw	high _ReceivedDataBuffer
 40389  013488  6FA8               	movwf	(api_parse@inBuffer+1)& (0+255),b
 40390  01348A  0E40               	movlw	64
 40391  01348C  6FA9               	movwf	api_parse@receivedDataLength& (0+255),b
 40392  01348E  0E40               	movlw	low _ToSendDataBuffer
 40393  013490  6FAA               	movwf	api_parse@outBuffer& (0+255),b
 40394  013492  0E03               	movlw	high _ToSendDataBuffer
 40395  013494  6FAB               	movwf	(api_parse@outBuffer+1)& (0+255),b
 40396  013496  ECA6  F084         	call	_api_parse	;wreg free
 40397                           
 40398                           ;app_device_custom_hid.c: 114: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 40399  01349A  0E00               	movlw	0
 40400  01349C  0100               	movlb	0	; () banked
 40401  01349E  6F60               	movwf	USBTransferOnePacket@dir& (0+255),b
 40402  0134A0  0E80               	movlw	low _ReceivedDataBuffer
 40403  0134A2  6F61               	movwf	USBTransferOnePacket@data& (0+255),b
 40404  0134A4  0E03               	movlw	high _ReceivedDataBuffer
 40405  0134A6  6F62               	movwf	(USBTransferOnePacket@data+1)& (0+255),b
 40406  0134A8  0E40               	movlw	64
 40407  0134AA  6F63               	movwf	USBTransferOnePacket@len& (0+255),b
 40408  0134AC  0E01               	movlw	1
 40409  0134AE  EC8B  F089         	call	_USBTransferOnePacket
 40410  0134B2  C060  F137         	movff	?_USBTransferOnePacket,_USBOutHandle
 40411  0134B6  C061  F138         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 40412  0134BA  0012               	return	
 40413  0134BC                     __end_of_APP_DeviceCustomHIDTasks:
 40414                           	opt stack 0
 40415                           tosu	equ	0xFFF
 40416                           tosh	equ	0xFFE
 40417                           tosl	equ	0xFFD
 40418                           pclath	equ	0xFFA
 40419                           tblptru	equ	0xFF8
 40420                           tblptrh	equ	0xFF7
 40421                           tblptrl	equ	0xFF6
 40422                           tablat	equ	0xFF5
 40423                           prodh	equ	0xFF4
 40424                           prodl	equ	0xFF3
 40425                           intcon	equ	0xFF2
 40426                           postinc0	equ	0xFEE
 40427                           wreg	equ	0xFE8
 40428                           indf1	equ	0xFE7
 40429                           postinc1	equ	0xFE6
 40430                           postdec1	equ	0xFE5
 40431                           plusw1	equ	0xFE3
 40432                           fsr1h	equ	0xFE2
 40433                           fsr1l	equ	0xFE1
 40434                           indf2	equ	0xFDF
 40435                           postinc2	equ	0xFDE
 40436                           postdec2	equ	0xFDD
 40437                           plusw2	equ	0xFDB
 40438                           fsr2h	equ	0xFDA
 40439                           fsr2l	equ	0xFD9
 40440                           status	equ	0xFD8
 40441                           
 40442 ;; *************** function _api_prepare *****************
 40443 ;; Defined at:
 40444 ;;		line 38 in file "api.c"
 40445 ;; Parameters:    Size  Location     Type
 40446 ;;  inBuffer        2   16[BANK0 ] PTR unsigned char 
 40447 ;;		 -> ReceivedDataBuffer(64), 
 40448 ;;  outBuffer       2   18[BANK0 ] PTR unsigned char 
 40449 ;;		 -> ToSendDataBuffer(64), 
 40450 ;; Auto vars:     Size  Location     Type
 40451 ;;  command         1   20[BANK0 ] enum E6715
 40452 ;; Return value:  Size  Location     Type
 40453 ;;                  1    wreg      void 
 40454 ;; Registers used:
 40455 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 40456 ;; Tracked objects:
 40457 ;;		On entry : 0/0
 40458 ;;		On exit  : 0/0
 40459 ;;		Unchanged: 0/0
 40460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40461 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40462 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40463 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40464 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40465 ;;Total ram usage:        5 bytes
 40466 ;; Hardware stack levels used:    1
 40467 ;; Hardware stack levels required when called:   12
 40468 ;; This function calls:
 40469 ;;		__fill_buffer_get_display
 40470 ;;		__fill_buffer_get_mode_details
 40471 ;;		__fill_buffer_get_status
 40472 ;;		_memcpy
 40473 ;; This function is called by:
 40474 ;;		_APP_DeviceCustomHIDTasks
 40475 ;; This function uses a non-reentrant model
 40476 ;;
 40477                           
 40478                           	psect	text163
 40479  01240C                     __ptext163:
 40480                           	opt stack 0
 40481  01240C                     _api_prepare:
 40482                           	opt stack 17
 40483                           
 40484                           ;api.c: 40: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 40485                           
 40486                           ;incstack = 0
 40487  01240C  C070  FFD9         	movff	api_prepare@inBuffer,fsr2l
 40488  012410  C071  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 40489  012414  50DF               	movf	indf2,w,c
 40490  012416  0100               	movlb	0	; () banked
 40491  012418  6F74               	movwf	api_prepare@command& (0+255),b
 40492                           
 40493                           ; BSR set to: 0
 40494                           ;api.c: 42: if(command>0x7F)
 40495  01241A  0E7F               	movlw	127
 40496  01241C  6574               	cpfsgt	api_prepare@command& (0+255),b
 40497  01241E  D051               	goto	l2257
 40498                           
 40499                           ; BSR set to: 0
 40500                           ;api.c: 49: outBuffer[0] = 0x99;
 40501                           
 40502                           ; BSR set to: 0
 40503                           
 40504                           ;api.c: 45: {;api.c: 48: default:
 40505                           
 40506                           ; BSR set to: 0
 40507                           ;api.c: 43: {;api.c: 44: switch(command)
 40508  012420  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40509  012424  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40510  012428  0E99               	movlw	153
 40511  01242A  6EDF               	movwf	indf2,c
 40512                           
 40513                           ; BSR set to: 0
 40514                           ;api.c: 50: outBuffer[1] = 0x99;
 40515  01242C  EE20 F001          	lfsr	2,1
 40516  012430  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40517  012432  26D9               	addwf	fsr2l,f,c
 40518  012434  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40519  012436  22DA               	addwfc	fsr2h,f,c
 40520  012438  0E99               	movlw	153
 40521  01243A  6EDF               	movwf	indf2,c
 40522                           
 40523                           ;api.c: 51: }
 40524  01243C  0012               	return	
 40525  01243E                     
 40526                           ; BSR set to: 0
 40527                           ;api.c: 64: _fill_buffer_get_status(outBuffer);
 40528                           
 40529                           ; BSR set to: 0
 40530  01243E  C072  F06B         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 40531  012442  C073  F06C         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 40532  012446  ECE9  F072         	call	__fill_buffer_get_status	;wreg free
 40533                           
 40534                           ;api.c: 65: break;
 40535  01244A  0012               	return	
 40536  01244C                     
 40537                           ;api.c: 69: _fill_buffer_get_display(outBuffer, 0);
 40538  01244C  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40539  012450  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40540  012454  0E00               	movlw	0
 40541  012456  0100               	movlb	0	; () banked
 40542  012458  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40543  01245A  ECA3  F097         	call	__fill_buffer_get_display	;wreg free
 40544                           
 40545                           ;api.c: 70: break;
 40546  01245E  0012               	return	
 40547  012460                     
 40548                           ;api.c: 74: _fill_buffer_get_display(outBuffer, 1);
 40549  012460  C072  F064         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 40550  012464  C073  F065         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 40551  012468  0E01               	movlw	1
 40552  01246A  0100               	movlb	0	; () banked
 40553  01246C  6F66               	movwf	__fill_buffer_get_display@secondHalf& (0+255),b
 40554  01246E  ECA3  F097         	call	__fill_buffer_get_display	;wreg free
 40555                           
 40556                           ;api.c: 75: break;
 40557  012472  0012               	return	
 40558  012474                     
 40559                           ;api.c: 79: _fill_buffer_get_mode_details(outBuffer);
 40560  012474  C072  F060         	movff	api_prepare@outBuffer,__fill_buffer_get_mode_details@outBuffer
 40561  012478  C073  F061         	movff	api_prepare@outBuffer+1,__fill_buffer_get_mode_details@outBuffer+1
 40562  01247C  EC87  F078         	call	__fill_buffer_get_mode_details	;wreg free
 40563                           
 40564                           ;api.c: 80: break;
 40565  012480  0012               	return	
 40566  012482                     
 40567                           ;api.c: 84: memcpy(outBuffer, inBuffer, 64);
 40568  012482  C072  F060         	movff	api_prepare@outBuffer,memcpy@d1
 40569  012486  C073  F061         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 40570  01248A  C070  F062         	movff	api_prepare@inBuffer,memcpy@s1
 40571  01248E  C071  F063         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 40572  012492  0E00               	movlw	0
 40573  012494  0100               	movlb	0	; () banked
 40574  012496  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40575  012498  0E40               	movlw	64
 40576  01249A  6F64               	movwf	memcpy@n& (0+255),b
 40577  01249C  ECF2  F0A3         	call	_memcpy	;wreg free
 40578                           
 40579                           ;api.c: 85: break;
 40580  0124A0  0012               	return	
 40581  0124A2                     
 40582                           ;api.c: 88: outBuffer[0] = 0x99;
 40583  0124A2  C072  FFD9         	movff	api_prepare@outBuffer,fsr2l
 40584  0124A6  C073  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 40585  0124AA  0E99               	movlw	153
 40586  0124AC  6EDF               	movwf	indf2,c
 40587                           
 40588                           ;api.c: 89: outBuffer[1] = 0x99;
 40589  0124AE  0100               	movlb	0	; () banked
 40590  0124B0  EE20 F001          	lfsr	2,1
 40591  0124B4  5172               	movf	api_prepare@outBuffer& (0+255),w,b
 40592  0124B6  26D9               	addwf	fsr2l,f,c
 40593  0124B8  5173               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 40594  0124BA  22DA               	addwfc	fsr2h,f,c
 40595  0124BC  0E99               	movlw	153
 40596  0124BE  6EDF               	movwf	indf2,c
 40597                           
 40598                           ;api.c: 90: }
 40599  0124C0  0012               	return	
 40600  0124C2                     l2257:
 40601                           
 40602                           ; BSR set to: 0
 40603                           
 40604                           ; BSR set to: 0
 40605  0124C2  5174               	movf	api_prepare@command& (0+255),w,b
 40606                           
 40607                           ; Switch size 1, requested type "space"
 40608                           ; Number of cases is 6, Range of values is 0 to 32
 40609                           ; switch strategies available:
 40610                           ; Name         Instructions Cycles
 40611                           ; simple_byte           19    10 (average)
 40612                           ;	Chosen strategy is simple_byte
 40613  0124C4  0A00               	xorlw	0	; case 0
 40614  0124C6  B4D8               	btfsc	status,2,c
 40615  0124C8  0012               	return	
 40616  0124CA  0A10               	xorlw	16	; case 16
 40617  0124CC  B4D8               	btfsc	status,2,c
 40618  0124CE  D7B7               	goto	l2260
 40619  0124D0  0A01               	xorlw	1	; case 17
 40620  0124D2  B4D8               	btfsc	status,2,c
 40621  0124D4  D7BB               	goto	l2261
 40622  0124D6  0A03               	xorlw	3	; case 18
 40623  0124D8  B4D8               	btfsc	status,2,c
 40624  0124DA  D7C2               	goto	l2262
 40625  0124DC  0A01               	xorlw	1	; case 19
 40626  0124DE  B4D8               	btfsc	status,2,c
 40627  0124E0  D7C9               	goto	l2263
 40628  0124E2  0A33               	xorlw	51	; case 32
 40629  0124E4  B4D8               	btfsc	status,2,c
 40630  0124E6  D7CD               	goto	l2264
 40631  0124E8  D7DC               	goto	l2265
 40632  0124EA                     __end_of_api_prepare:
 40633                           	opt stack 0
 40634                           tosu	equ	0xFFF
 40635                           tosh	equ	0xFFE
 40636                           tosl	equ	0xFFD
 40637                           pclath	equ	0xFFA
 40638                           tblptru	equ	0xFF8
 40639                           tblptrh	equ	0xFF7
 40640                           tblptrl	equ	0xFF6
 40641                           tablat	equ	0xFF5
 40642                           prodh	equ	0xFF4
 40643                           prodl	equ	0xFF3
 40644                           intcon	equ	0xFF2
 40645                           postinc0	equ	0xFEE
 40646                           wreg	equ	0xFE8
 40647                           indf1	equ	0xFE7
 40648                           postinc1	equ	0xFE6
 40649                           postdec1	equ	0xFE5
 40650                           plusw1	equ	0xFE3
 40651                           fsr1h	equ	0xFE2
 40652                           fsr1l	equ	0xFE1
 40653                           indf2	equ	0xFDF
 40654                           postinc2	equ	0xFDE
 40655                           postdec2	equ	0xFDD
 40656                           plusw2	equ	0xFDB
 40657                           fsr2h	equ	0xFDA
 40658                           fsr2l	equ	0xFD9
 40659                           status	equ	0xFD8
 40660                           
 40661 ;; *************** function __fill_buffer_get_status *****************
 40662 ;; Defined at:
 40663 ;;		line 171 in file "api.c"
 40664 ;; Parameters:    Size  Location     Type
 40665 ;;  outBuffer       2   11[BANK0 ] PTR unsigned char 
 40666 ;;		 -> ToSendDataBuffer(64), 
 40667 ;; Auto vars:     Size  Location     Type
 40668 ;;		None
 40669 ;; Return value:  Size  Location     Type
 40670 ;;                  1    wreg      void 
 40671 ;; Registers used:
 40672 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 40673 ;; Tracked objects:
 40674 ;;		On entry : 0/0
 40675 ;;		On exit  : 0/0
 40676 ;;		Unchanged: 0/0
 40677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40678 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40681 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40682 ;;Total ram usage:        2 bytes
 40683 ;; Hardware stack levels used:    1
 40684 ;; Hardware stack levels required when called:   11
 40685 ;; This function calls:
 40686 ;;		_memcpy
 40687 ;; This function is called by:
 40688 ;;		_api_prepare
 40689 ;; This function uses a non-reentrant model
 40690 ;;
 40691                           
 40692                           	psect	text164
 40693  00E5D2                     __ptext164:
 40694                           	opt stack 0
 40695  00E5D2                     __fill_buffer_get_status:
 40696                           	opt stack 17
 40697                           
 40698                           ;api.c: 174: outBuffer[0] = DATAREQUEST_GET_STATUS;
 40699                           
 40700                           ;incstack = 0
 40701  00E5D2  C06B  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 40702  00E5D6  C06C  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 40703  00E5DA  0E10               	movlw	16
 40704  00E5DC  6EDF               	movwf	indf2,c
 40705                           
 40706                           ;api.c: 177: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 40707  00E5DE  0100               	movlb	0	; () banked
 40708  00E5E0  EE20 F001          	lfsr	2,1
 40709  00E5E4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40710  00E5E6  26D9               	addwf	fsr2l,f,c
 40711  00E5E8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40712  00E5EA  22DA               	addwfc	fsr2h,f,c
 40713  00E5EC  0EBC               	movlw	188
 40714  00E5EE  6EDF               	movwf	indf2,c
 40715                           
 40716                           ; BSR set to: 0
 40717                           ;api.c: 178: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 40718  00E5F0  EE20 F002          	lfsr	2,2
 40719  00E5F4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40720  00E5F6  26D9               	addwf	fsr2l,f,c
 40721  00E5F8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40722  00E5FA  22DA               	addwfc	fsr2h,f,c
 40723  00E5FC  0E26               	movlw	38
 40724  00E5FE  6EDF               	movwf	indf2,c
 40725                           
 40726                           ; BSR set to: 0
 40727                           ;api.c: 181: outBuffer[3] = 0x00;
 40728  00E600  EE20 F003          	lfsr	2,3
 40729  00E604  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40730  00E606  26D9               	addwf	fsr2l,f,c
 40731  00E608  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40732  00E60A  22DA               	addwfc	fsr2h,f,c
 40733  00E60C  0E00               	movlw	0
 40734  00E60E  6EDF               	movwf	indf2,c
 40735                           
 40736                           ; BSR set to: 0
 40737                           ;api.c: 182: outBuffer[4] = 0x06;
 40738  00E610  EE20 F004          	lfsr	2,4
 40739  00E614  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40740  00E616  26D9               	addwf	fsr2l,f,c
 40741  00E618  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40742  00E61A  22DA               	addwfc	fsr2h,f,c
 40743  00E61C  0E06               	movlw	6
 40744  00E61E  6EDF               	movwf	indf2,c
 40745                           
 40746                           ; BSR set to: 0
 40747                           ;api.c: 183: outBuffer[5] = 0x00;
 40748  00E620  EE20 F005          	lfsr	2,5
 40749  00E624  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40750  00E626  26D9               	addwf	fsr2l,f,c
 40751  00E628  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40752  00E62A  22DA               	addwfc	fsr2h,f,c
 40753  00E62C  0E00               	movlw	0
 40754  00E62E  6EDF               	movwf	indf2,c
 40755                           
 40756                           ; BSR set to: 0
 40757                           ;api.c: 186: outBuffer[6] = os.subTimeSlot;
 40758  00E630  EE20 F006          	lfsr	2,6
 40759  00E634  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40760  00E636  26D9               	addwf	fsr2l,f,c
 40761  00E638  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40762  00E63A  22DA               	addwfc	fsr2h,f,c
 40763  00E63C  C164  FFDF         	movff	_os,indf2	;volatile
 40764                           
 40765                           ; BSR set to: 0
 40766                           ;api.c: 187: outBuffer[7] = os.timeSlot;
 40767  00E640  EE20 F007          	lfsr	2,7
 40768  00E644  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40769  00E646  26D9               	addwf	fsr2l,f,c
 40770  00E648  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40771  00E64A  22DA               	addwfc	fsr2h,f,c
 40772  00E64C  C165  FFDF         	movff	_os+1,indf2	;volatile
 40773                           
 40774                           ; BSR set to: 0
 40775                           ;api.c: 188: outBuffer[8] = os.done;
 40776  00E650  EE20 F008          	lfsr	2,8
 40777  00E654  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40778  00E656  26D9               	addwf	fsr2l,f,c
 40779  00E658  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40780  00E65A  22DA               	addwfc	fsr2h,f,c
 40781  00E65C  C166  FFDF         	movff	_os+2,indf2	;volatile
 40782                           
 40783                           ; BSR set to: 0
 40784                           ;api.c: 189: outBuffer[9] = os.encoder1Count;
 40785  00E660  EE20 F009          	lfsr	2,9
 40786  00E664  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40787  00E666  26D9               	addwf	fsr2l,f,c
 40788  00E668  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40789  00E66A  22DA               	addwfc	fsr2h,f,c
 40790  00E66C  C167  FFDF         	movff	_os+3,indf2	;volatile
 40791                           
 40792                           ; BSR set to: 0
 40793                           ;api.c: 190: outBuffer[10] = os.button1;
 40794  00E670  EE20 F00A          	lfsr	2,10
 40795  00E674  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40796  00E676  26D9               	addwf	fsr2l,f,c
 40797  00E678  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40798  00E67A  22DA               	addwfc	fsr2h,f,c
 40799  00E67C  C168  FFDF         	movff	_os+4,indf2	;volatile
 40800                           
 40801                           ; BSR set to: 0
 40802                           ;api.c: 191: outBuffer[11] = os.encoder2Count;
 40803  00E680  EE20 F00B          	lfsr	2,11
 40804  00E684  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40805  00E686  26D9               	addwf	fsr2l,f,c
 40806  00E688  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40807  00E68A  22DA               	addwfc	fsr2h,f,c
 40808  00E68C  C169  FFDF         	movff	_os+5,indf2	;volatile
 40809                           
 40810                           ; BSR set to: 0
 40811                           ;api.c: 192: outBuffer[12] = os.button2;
 40812  00E690  EE20 F00C          	lfsr	2,12
 40813  00E694  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40814  00E696  26D9               	addwf	fsr2l,f,c
 40815  00E698  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40816  00E69A  22DA               	addwfc	fsr2h,f,c
 40817  00E69C  C16A  FFDF         	movff	_os+6,indf2	;volatile
 40818                           
 40819                           ; BSR set to: 0
 40820                           ;api.c: 193: memcpy(&outBuffer[13], &os.current_position_in_steps, 4);
 40821  00E6A0  0E0D               	movlw	13
 40822  00E6A2  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40823  00E6A4  6F60               	movwf	memcpy@d1& (0+255),b
 40824  00E6A6  0E00               	movlw	0
 40825  00E6A8  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40826  00E6AA  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 40827  00E6AC  0E6B               	movlw	low (_os+7)
 40828  00E6AE  6F62               	movwf	memcpy@s1& (0+255),b
 40829  00E6B0  0E01               	movlw	high (_os+7)
 40830  00E6B2  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 40831  00E6B4  0E00               	movlw	0
 40832  00E6B6  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40833  00E6B8  0E04               	movlw	4
 40834  00E6BA  6F64               	movwf	memcpy@n& (0+255),b
 40835  00E6BC  ECF2  F0A3         	call	_memcpy	;wreg free
 40836                           
 40837                           ;api.c: 198: memcpy(&outBuffer[17], &os.current_position_in_degrees, 4);
 40838  00E6C0  0E11               	movlw	17
 40839  00E6C2  0100               	movlb	0	; () banked
 40840  00E6C4  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40841  00E6C6  6F60               	movwf	memcpy@d1& (0+255),b
 40842  00E6C8  0E00               	movlw	0
 40843  00E6CA  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40844  00E6CC  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 40845  00E6CE  0E71               	movlw	low (_os+13)
 40846  00E6D0  6F62               	movwf	memcpy@s1& (0+255),b
 40847  00E6D2  0E01               	movlw	high (_os+13)
 40848  00E6D4  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 40849  00E6D6  0E00               	movlw	0
 40850  00E6D8  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40851  00E6DA  0E04               	movlw	4
 40852  00E6DC  6F64               	movwf	memcpy@n& (0+255),b
 40853  00E6DE  ECF2  F0A3         	call	_memcpy	;wreg free
 40854                           
 40855                           ;api.c: 203: outBuffer[21] = os.displayState;
 40856  00E6E2  0100               	movlb	0	; () banked
 40857  00E6E4  EE20 F015          	lfsr	2,21
 40858  00E6E8  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40859  00E6EA  26D9               	addwf	fsr2l,f,c
 40860  00E6EC  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40861  00E6EE  22DA               	addwfc	fsr2h,f,c
 40862  00E6F0  C173  FFDF         	movff	_os+15,indf2	;volatile
 40863                           
 40864                           ; BSR set to: 0
 40865                           ;api.c: 204: outBuffer[22] = os.beep_count;
 40866  00E6F4  EE20 F016          	lfsr	2,22
 40867  00E6F8  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40868  00E6FA  26D9               	addwf	fsr2l,f,c
 40869  00E6FC  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40870  00E6FE  22DA               	addwfc	fsr2h,f,c
 40871  00E700  C18C  FFDF         	movff	_os+40,indf2	;volatile
 40872                           
 40873                           ; BSR set to: 0
 40874                           ;api.c: 205: outBuffer[23] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_INTERNA
      +                          L])&0xFF));
 40875  00E704  EE20 F017          	lfsr	2,23
 40876  00E708  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40877  00E70A  26D9               	addwf	fsr2l,f,c
 40878  00E70C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40879  00E70E  22DA               	addwfc	fsr2h,f,c
 40880  00E710  C18D  FFDF         	movff	_os+41,indf2	;volatile
 40881                           
 40882                           ; BSR set to: 0
 40883                           ;api.c: 206: outBuffer[24] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_INTERN
      +                          AL])>>8)&0xFF));
 40884  00E714  EE20 F018          	lfsr	2,24
 40885  00E718  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40886  00E71A  26D9               	addwf	fsr2l,f,c
 40887  00E71C  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40888  00E71E  22DA               	addwfc	fsr2h,f,c
 40889  00E720  0101               	movlb	1	; () banked
 40890  00E722  518E               	movf	(_os+42)& (0+255),w,b	;volatile
 40891  00E724  6EDF               	movwf	indf2,c
 40892                           
 40893                           ; BSR set to: 1
 40894                           ;api.c: 207: outBuffer[25] = ((unsigned char)((os.temperature[TEMPERATURE_SOURCE_EXTERNA
      +                          L])&0xFF));
 40895  00E726  0100               	movlb	0	; () banked
 40896  00E728  EE20 F019          	lfsr	2,25
 40897  00E72C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40898  00E72E  26D9               	addwf	fsr2l,f,c
 40899  00E730  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40900  00E732  22DA               	addwfc	fsr2h,f,c
 40901  00E734  C18F  FFDF         	movff	_os+43,indf2	;volatile
 40902                           
 40903                           ; BSR set to: 0
 40904                           ;api.c: 208: outBuffer[26] = ((unsigned char)(((os.temperature[TEMPERATURE_SOURCE_EXTERN
      +                          AL])>>8)&0xFF));
 40905  00E738  EE20 F01A          	lfsr	2,26
 40906  00E73C  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40907  00E73E  26D9               	addwf	fsr2l,f,c
 40908  00E740  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40909  00E742  22DA               	addwfc	fsr2h,f,c
 40910  00E744  0101               	movlb	1	; () banked
 40911  00E746  5190               	movf	(_os+44)& (0+255),w,b	;volatile
 40912  00E748  6EDF               	movwf	indf2,c
 40913                           
 40914                           ; BSR set to: 1
 40915                           ;api.c: 209: outBuffer[27] = os.fan_on;
 40916  00E74A  0100               	movlb	0	; () banked
 40917  00E74C  EE20 F01B          	lfsr	2,27
 40918  00E750  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40919  00E752  26D9               	addwf	fsr2l,f,c
 40920  00E754  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40921  00E756  22DA               	addwfc	fsr2h,f,c
 40922  00E758  C194  FFDF         	movff	_os+48,indf2	;volatile
 40923                           
 40924                           ; BSR set to: 0
 40925                           ;api.c: 210: outBuffer[28] = os.brake_on;
 40926  00E75C  EE20 F01C          	lfsr	2,28
 40927  00E760  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40928  00E762  26D9               	addwf	fsr2l,f,c
 40929  00E764  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40930  00E766  22DA               	addwfc	fsr2h,f,c
 40931  00E768  C195  FFDF         	movff	_os+49,indf2	;volatile
 40932                           
 40933                           ; BSR set to: 0
 40934                           ;api.c: 211: outBuffer[29] = os.busy;
 40935  00E76C  EE20 F01D          	lfsr	2,29
 40936  00E770  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40937  00E772  26D9               	addwf	fsr2l,f,c
 40938  00E774  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40939  00E776  22DA               	addwfc	fsr2h,f,c
 40940  00E778  C174  FFDF         	movff	_os+16,indf2	;volatile
 40941                           
 40942                           ; BSR set to: 0
 40943                           ;api.c: 213: outBuffer[30] = ((unsigned char)((os.manual_speed)&0xFF));
 40944  00E77C  EE20 F01E          	lfsr	2,30
 40945  00E780  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40946  00E782  26D9               	addwf	fsr2l,f,c
 40947  00E784  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40948  00E786  22DA               	addwfc	fsr2h,f,c
 40949  00E788  C189  FFDF         	movff	_os+37,indf2	;volatile
 40950                           
 40951                           ; BSR set to: 0
 40952                           ;api.c: 214: outBuffer[31] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 40953  00E78C  EE20 F01F          	lfsr	2,31
 40954  00E790  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40955  00E792  26D9               	addwf	fsr2l,f,c
 40956  00E794  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40957  00E796  22DA               	addwfc	fsr2h,f,c
 40958  00E798  0101               	movlb	1	; () banked
 40959  00E79A  518A               	movf	(_os+38)& (0+255),w,b	;volatile
 40960  00E79C  6EDF               	movwf	indf2,c
 40961                           
 40962                           ; BSR set to: 1
 40963                           ;api.c: 215: outBuffer[32] = ((unsigned char)((os.absolute_position)&0xFF));
 40964  00E79E  0100               	movlb	0	; () banked
 40965  00E7A0  EE20 F020          	lfsr	2,32
 40966  00E7A4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40967  00E7A6  26D9               	addwf	fsr2l,f,c
 40968  00E7A8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40969  00E7AA  22DA               	addwfc	fsr2h,f,c
 40970  00E7AC  C16F  FFDF         	movff	_os+11,indf2	;volatile
 40971                           
 40972                           ; BSR set to: 0
 40973                           ;api.c: 216: outBuffer[33] = ((unsigned char)(((os.absolute_position)>>8)&0xFF));
 40974  00E7B0  EE20 F021          	lfsr	2,33
 40975  00E7B4  516B               	movf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40976  00E7B6  26D9               	addwf	fsr2l,f,c
 40977  00E7B8  516C               	movf	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40978  00E7BA  22DA               	addwfc	fsr2h,f,c
 40979  00E7BC  0101               	movlb	1	; () banked
 40980  00E7BE  5170               	movf	(_os+12)& (0+255),w,b	;volatile
 40981  00E7C0  6EDF               	movwf	indf2,c
 40982                           
 40983                           ; BSR set to: 1
 40984                           ;api.c: 230: memcpy(&outBuffer[42], &config, 22);
 40985  00E7C2  0E2A               	movlw	42
 40986  00E7C4  0100               	movlb	0	; () banked
 40987  00E7C6  256B               	addwf	__fill_buffer_get_status@outBuffer& (0+255),w,b
 40988  00E7C8  6F60               	movwf	memcpy@d1& (0+255),b
 40989  00E7CA  0E00               	movlw	0
 40990  00E7CC  216C               	addwfc	(__fill_buffer_get_status@outBuffer+1)& (0+255),w,b
 40991  00E7CE  6F61               	movwf	(memcpy@d1+1)& (0+255),b
 40992  00E7D0  0E96               	movlw	low _config
 40993  00E7D2  6F62               	movwf	memcpy@s1& (0+255),b
 40994  00E7D4  0E01               	movlw	high _config
 40995  00E7D6  6F63               	movwf	(memcpy@s1+1)& (0+255),b
 40996  00E7D8  0E00               	movlw	0
 40997  00E7DA  6F65               	movwf	(memcpy@n+1)& (0+255),b
 40998  00E7DC  0E16               	movlw	22
 40999  00E7DE  6F64               	movwf	memcpy@n& (0+255),b
 41000  00E7E0  ECF2  F0A3         	call	_memcpy	;wreg free
 41001  00E7E4  0012               	return		;funcret
 41002  00E7E6                     __end_of__fill_buffer_get_status:
 41003                           	opt stack 0
 41004                           tosu	equ	0xFFF
 41005                           tosh	equ	0xFFE
 41006                           tosl	equ	0xFFD
 41007                           pclath	equ	0xFFA
 41008                           tblptru	equ	0xFF8
 41009                           tblptrh	equ	0xFF7
 41010                           tblptrl	equ	0xFF6
 41011                           tablat	equ	0xFF5
 41012                           prodh	equ	0xFF4
 41013                           prodl	equ	0xFF3
 41014                           intcon	equ	0xFF2
 41015                           postinc0	equ	0xFEE
 41016                           wreg	equ	0xFE8
 41017                           indf1	equ	0xFE7
 41018                           postinc1	equ	0xFE6
 41019                           postdec1	equ	0xFE5
 41020                           plusw1	equ	0xFE3
 41021                           fsr1h	equ	0xFE2
 41022                           fsr1l	equ	0xFE1
 41023                           indf2	equ	0xFDF
 41024                           postinc2	equ	0xFDE
 41025                           postdec2	equ	0xFDD
 41026                           plusw2	equ	0xFDB
 41027                           fsr2h	equ	0xFDA
 41028                           fsr2l	equ	0xFD9
 41029                           status	equ	0xFD8
 41030                           
 41031 ;; *************** function _memcpy *****************
 41032 ;; Defined at:
 41033 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 41034 ;; Parameters:    Size  Location     Type
 41035 ;;  d1              2    0[BANK0 ] PTR void 
 41036 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 41037 ;;		 -> msd_buffer(512), SetupPkt(8), 
 41038 ;;  s1              2    2[BANK0 ] PTR const void 
 41039 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41040 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41041 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41042 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41043 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41044 ;;		 -> config(40), os.current_position_in_degrees(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), 
 41045 ;;		 -> os(50), inq_resp(36), RAM(3759), 
 41046 ;;  n               2    4[BANK0 ] unsigned int 
 41047 ;; Auto vars:     Size  Location     Type
 41048 ;;  s               2    8[BANK0 ] PTR const unsigned char 
 41049 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 41050 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 41051 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 41052 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 41053 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 41054 ;;		 -> config(40), os.current_position_in_degrees(2), os.current_position_in_steps(4), ReceivedDataBuffer(64), 
 41055 ;;		 -> os(50), inq_resp(36), RAM(3759), 
 41056 ;;  d               2    6[BANK0 ] PTR unsigned char 
 41057 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 41058 ;;		 -> msd_buffer(512), SetupPkt(8), 
 41059 ;;  tmp             1   10[BANK0 ] unsigned char 
 41060 ;; Return value:  Size  Location     Type
 41061 ;;                  2    0[BANK0 ] PTR void 
 41062 ;; Registers used:
 41063 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 41064 ;; Tracked objects:
 41065 ;;		On entry : 0/0
 41066 ;;		On exit  : 0/0
 41067 ;;		Unchanged: 0/0
 41068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41069 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41070 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41072 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41073 ;;Total ram usage:       11 bytes
 41074 ;; Hardware stack levels used:    1
 41075 ;; Hardware stack levels required when called:   10
 41076 ;; This function calls:
 41077 ;;		Nothing
 41078 ;; This function is called by:
 41079 ;;		_MSDProcessCommandMediaPresent
 41080 ;;		__display_start
 41081 ;;		_display_prepare
 41082 ;;		__flash_set_page_size
 41083 ;;		_fat_create_file
 41084 ;;		_api_prepare
 41085 ;;		__fill_buffer_get_status
 41086 ;; This function uses a non-reentrant model
 41087 ;;
 41088                           
 41089                           	psect	text165
 41090  0147E4                     __ptext165:
 41091                           	opt stack 0
 41092  0147E4                     _memcpy:
 41093                           	opt stack 17
 41094                           
 41095                           ;incstack = 0
 41096  0147E4  C062  F068         	movff	memcpy@s1,memcpy@s
 41097  0147E8  C063  F069         	movff	memcpy@s1+1,memcpy@s+1
 41098  0147EC  C060  F066         	movff	memcpy@d1,memcpy@d
 41099  0147F0  C061  F067         	movff	memcpy@d1+1,memcpy@d+1
 41100  0147F4  D01D               	goto	l3804
 41101  0147F6                     l13000:
 41102  0147F6  C068  FFF6         	movff	memcpy@s,tblptrl
 41103  0147FA  C069  FFF7         	movff	memcpy@s+1,tblptrh
 41104  0147FE  0E00               	movlw	low (__mediumconst shr (0+16))
 41105  014800  6EF8               	movwf	tblptru,c
 41106  014802  0E0E               	movlw	(high __ramtop+-1)
 41107  014804  64F7               	cpfsgt	tblptrh,c
 41108  014806  D003               	bra	u11097
 41109  014808  0008               	tblrd		*
 41110  01480A  50F5               	movf	tablat,w,c
 41111  01480C  D005               	bra	u11090
 41112  01480E                     u11097:
 41113  01480E  CFF6 FFE9          	movff	tblptrl,fsr0l
 41114  014812  CFF7 FFEA          	movff	tblptrh,fsr0h
 41115  014816  50EF               	movf	indf0,w,c
 41116  014818                     u11090:
 41117  014818  0100               	movlb	0	; () banked
 41118  01481A  6F6A               	movwf	memcpy@tmp& (0+255),b
 41119                           
 41120                           ; BSR set to: 0
 41121  01481C  4B68               	infsnz	memcpy@s& (0+255),f,b
 41122  01481E  2B69               	incf	(memcpy@s+1)& (0+255),f,b
 41123                           
 41124                           ; BSR set to: 0
 41125  014820  C066  FFD9         	movff	memcpy@d,fsr2l
 41126  014824  C067  FFDA         	movff	memcpy@d+1,fsr2h
 41127  014828  C06A  FFDF         	movff	memcpy@tmp,indf2
 41128                           
 41129                           ; BSR set to: 0
 41130  01482C  4B66               	infsnz	memcpy@d& (0+255),f,b
 41131  01482E  2B67               	incf	(memcpy@d+1)& (0+255),f,b
 41132  014830                     l3804:
 41133                           
 41134                           ; BSR set to: 0
 41135  014830  0100               	movlb	0	; () banked
 41136  014832  0764               	decf	memcpy@n& (0+255),f,b
 41137  014834  A0D8               	btfss	status,0,c
 41138  014836  0765               	decf	(memcpy@n+1)& (0+255),f,b
 41139  014838  2964               	incf	memcpy@n& (0+255),w,b
 41140  01483A  E1DD               	bnz	l13000
 41141  01483C  2965               	incf	(memcpy@n+1)& (0+255),w,b
 41142  01483E  B4D8               	btfsc	status,2,c
 41143  014840  0012               	return	
 41144  014842  D7D9               	goto	l3805
 41145  014844                     __end_of_memcpy:
 41146                           	opt stack 0
 41147                           tosu	equ	0xFFF
 41148                           tosh	equ	0xFFE
 41149                           tosl	equ	0xFFD
 41150                           pclath	equ	0xFFA
 41151                           tblptru	equ	0xFF8
 41152                           tblptrh	equ	0xFF7
 41153                           tblptrl	equ	0xFF6
 41154                           tablat	equ	0xFF5
 41155                           prodh	equ	0xFF4
 41156                           prodl	equ	0xFF3
 41157                           intcon	equ	0xFF2
 41158                           indf0	equ	0xFEF
 41159                           postinc0	equ	0xFEE
 41160                           fsr0h	equ	0xFEA
 41161                           fsr0l	equ	0xFE9
 41162                           wreg	equ	0xFE8
 41163                           indf1	equ	0xFE7
 41164                           postinc1	equ	0xFE6
 41165                           postdec1	equ	0xFE5
 41166                           plusw1	equ	0xFE3
 41167                           fsr1h	equ	0xFE2
 41168                           fsr1l	equ	0xFE1
 41169                           indf2	equ	0xFDF
 41170                           postinc2	equ	0xFDE
 41171                           postdec2	equ	0xFDD
 41172                           plusw2	equ	0xFDB
 41173                           fsr2h	equ	0xFDA
 41174                           fsr2l	equ	0xFD9
 41175                           status	equ	0xFD8
 41176                           
 41177 ;; *************** function __fill_buffer_get_mode_details *****************
 41178 ;; Defined at:
 41179 ;;		line 275 in file "api.c"
 41180 ;; Parameters:    Size  Location     Type
 41181 ;;  outBuffer       2    0[BANK0 ] PTR unsigned char 
 41182 ;;		 -> ToSendDataBuffer(64), 
 41183 ;; Auto vars:     Size  Location     Type
 41184 ;;		None
 41185 ;; Return value:  Size  Location     Type
 41186 ;;                  1    wreg      void 
 41187 ;; Registers used:
 41188 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 41189 ;; Tracked objects:
 41190 ;;		On entry : 0/0
 41191 ;;		On exit  : 0/0
 41192 ;;		Unchanged: 0/0
 41193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41194 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41196 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41197 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41198 ;;Total ram usage:        4 bytes
 41199 ;; Hardware stack levels used:    1
 41200 ;; Hardware stack levels required when called:   10
 41201 ;; This function calls:
 41202 ;;		Nothing
 41203 ;; This function is called by:
 41204 ;;		_api_prepare
 41205 ;; This function uses a non-reentrant model
 41206 ;;
 41207                           
 41208                           	psect	text166
 41209  00F10E                     __ptext166:
 41210                           	opt stack 0
 41211  00F10E                     __fill_buffer_get_mode_details:
 41212                           	opt stack 18
 41213                           
 41214                           ;api.c: 278: outBuffer[0] = DATAREQUEST_GET_MODE_DETAILS;
 41215                           
 41216                           ; BSR set to: 0
 41217                           ;incstack = 0
 41218  00F10E  C060  FFD9         	movff	__fill_buffer_get_mode_details@outBuffer,fsr2l
 41219  00F112  C061  FFDA         	movff	__fill_buffer_get_mode_details@outBuffer+1,fsr2h
 41220  00F116  0E13               	movlw	19
 41221  00F118  6EDF               	movwf	indf2,c
 41222                           
 41223                           ;api.c: 281: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41224  00F11A  0100               	movlb	0	; () banked
 41225  00F11C  EE20 F001          	lfsr	2,1
 41226  00F120  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41227  00F122  26D9               	addwf	fsr2l,f,c
 41228  00F124  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41229  00F126  22DA               	addwfc	fsr2h,f,c
 41230  00F128  0EBC               	movlw	188
 41231  00F12A  6EDF               	movwf	indf2,c
 41232                           
 41233                           ; BSR set to: 0
 41234                           ;api.c: 282: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41235  00F12C  EE20 F002          	lfsr	2,2
 41236  00F130  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41237  00F132  26D9               	addwf	fsr2l,f,c
 41238  00F134  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41239  00F136  22DA               	addwfc	fsr2h,f,c
 41240  00F138  0E26               	movlw	38
 41241  00F13A  6EDF               	movwf	indf2,c
 41242                           
 41243                           ; BSR set to: 0
 41244                           ;api.c: 285: outBuffer[3] = os.displayState;
 41245  00F13C  EE20 F003          	lfsr	2,3
 41246  00F140  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41247  00F142  26D9               	addwf	fsr2l,f,c
 41248  00F144  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41249  00F146  22DA               	addwfc	fsr2h,f,c
 41250  00F148  C173  FFDF         	movff	_os+15,indf2	;volatile
 41251                           
 41252                           ;api.c: 287: switch(os.displayState & 0x0F)
 41253  00F14C  D090               	goto	l2300
 41254  00F14E                     
 41255                           ; BSR set to: 0
 41256                           ;api.c: 293: case DISPLAY_STATE_SETUP2:;api.c: 294: outBuffer[4] = os.setup_step_size;
 41257                           
 41258                           ; BSR set to: 0
 41259                           
 41260                           ; BSR set to: 0
 41261  00F14E  EE20 F004          	lfsr	2,4
 41262  00F152  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41263  00F154  26D9               	addwf	fsr2l,f,c
 41264  00F156  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41265  00F158  22DA               	addwfc	fsr2h,f,c
 41266  00F15A  C176  FFDF         	movff	_os+18,indf2	;volatile
 41267                           
 41268                           ;api.c: 295: break;
 41269  00F15E  0012               	return	
 41270  00F160                     
 41271                           ; BSR set to: 0
 41272                           ;api.c: 298: case DISPLAY_STATE_DIVIDE2:;api.c: 300: outBuffer[4] = os.divide_step_size;
 41273                           
 41274                           ; BSR set to: 0
 41275                           
 41276                           ; BSR set to: 0
 41277  00F160  EE20 F004          	lfsr	2,4
 41278  00F164  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41279  00F166  26D9               	addwf	fsr2l,f,c
 41280  00F168  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41281  00F16A  22DA               	addwfc	fsr2h,f,c
 41282  00F16C  C17B  FFDF         	movff	_os+23,indf2	;volatile
 41283                           
 41284                           ;api.c: 301: outBuffer[5] = ((unsigned char)(((os.division)>>8)&0xFF));
 41285  00F170  EE20 F005          	lfsr	2,5
 41286  00F174  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41287  00F176  26D9               	addwf	fsr2l,f,c
 41288  00F178  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41289  00F17A  22DA               	addwfc	fsr2h,f,c
 41290  00F17C  0101               	movlb	1	; () banked
 41291  00F17E  517A               	movf	(_os+22)& (0+255),w,b	;volatile
 41292  00F180  6EDF               	movwf	indf2,c
 41293                           
 41294                           ;api.c: 302: outBuffer[6] = ((unsigned char)((os.division)&0xFF));
 41295  00F182  0100               	movlb	0	; () banked
 41296  00F184  EE20 F006          	lfsr	2,6
 41297  00F188  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41298  00F18A  26D9               	addwf	fsr2l,f,c
 41299  00F18C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41300  00F18E  22DA               	addwfc	fsr2h,f,c
 41301  00F190  C179  FFDF         	movff	_os+21,indf2	;volatile
 41302                           
 41303                           ;api.c: 303: outBuffer[7] = ((unsigned char)(((os.divide_jump_size)>>8)&0xFF));
 41304  00F194  EE20 F007          	lfsr	2,7
 41305  00F198  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41306  00F19A  26D9               	addwf	fsr2l,f,c
 41307  00F19C  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41308  00F19E  22DA               	addwfc	fsr2h,f,c
 41309  00F1A0  0101               	movlb	1	; () banked
 41310  00F1A2  517F               	movf	(_os+27)& (0+255),w,b	;volatile
 41311  00F1A4  6EDF               	movwf	indf2,c
 41312                           
 41313                           ;api.c: 304: outBuffer[8] = ((unsigned char)((os.divide_jump_size)&0xFF));
 41314  00F1A6  0100               	movlb	0	; () banked
 41315  00F1A8  EE20 F008          	lfsr	2,8
 41316  00F1AC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41317  00F1AE  26D9               	addwf	fsr2l,f,c
 41318  00F1B0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41319  00F1B2  22DA               	addwfc	fsr2h,f,c
 41320  00F1B4  C17E  FFDF         	movff	_os+26,indf2	;volatile
 41321                           
 41322                           ;api.c: 305: outBuffer[9] = ((unsigned char)(((os.divide_position)>>8)&0xFF));
 41323  00F1B8  EE20 F009          	lfsr	2,9
 41324  00F1BC  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41325  00F1BE  26D9               	addwf	fsr2l,f,c
 41326  00F1C0  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41327  00F1C2  22DA               	addwfc	fsr2h,f,c
 41328  00F1C4  0101               	movlb	1	; () banked
 41329  00F1C6  517D               	movf	(_os+25)& (0+255),w,b	;volatile
 41330  00F1C8  6EDF               	movwf	indf2,c
 41331                           
 41332                           ;api.c: 306: outBuffer[10] = ((unsigned char)((os.divide_position)&0xFF));
 41333  00F1CA  0100               	movlb	0	; () banked
 41334  00F1CC  EE20 F00A          	lfsr	2,10
 41335  00F1D0  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41336  00F1D2  26D9               	addwf	fsr2l,f,c
 41337  00F1D4  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41338  00F1D6  22DA               	addwfc	fsr2h,f,c
 41339  00F1D8  C17C  FFDF         	movff	_os+24,indf2	;volatile
 41340                           
 41341                           ;api.c: 307: break;
 41342  00F1DC  0012               	return	
 41343  00F1DE                     
 41344                           ; BSR set to: 0
 41345                           ;api.c: 310: case DISPLAY_STATE_ARC2:;api.c: 311: outBuffer[4] = ((unsigned char)(((os.a
      +                          rc_step_size)>>8)&0xFF));
 41346                           
 41347                           ; BSR set to: 0
 41348                           
 41349                           ; BSR set to: 0
 41350  00F1DE  EE20 F004          	lfsr	2,4
 41351  00F1E2  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41352  00F1E4  26D9               	addwf	fsr2l,f,c
 41353  00F1E6  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41354  00F1E8  22DA               	addwfc	fsr2h,f,c
 41355  00F1EA  0101               	movlb	1	; () banked
 41356  00F1EC  5181               	movf	(_os+29)& (0+255),w,b	;volatile
 41357  00F1EE  6EDF               	movwf	indf2,c
 41358                           
 41359                           ;api.c: 312: outBuffer[5] = ((unsigned char)((os.arc_step_size)&0xFF));
 41360  00F1F0  0100               	movlb	0	; () banked
 41361  00F1F2  EE20 F005          	lfsr	2,5
 41362  00F1F6  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41363  00F1F8  26D9               	addwf	fsr2l,f,c
 41364  00F1FA  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41365  00F1FC  22DA               	addwfc	fsr2h,f,c
 41366  00F1FE  C180  FFDF         	movff	_os+28,indf2	;volatile
 41367                           
 41368                           ;api.c: 313: outBuffer[6] = os.arc_direction;
 41369  00F202  EE20 F006          	lfsr	2,6
 41370  00F206  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41371  00F208  26D9               	addwf	fsr2l,f,c
 41372  00F20A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41373  00F20C  22DA               	addwfc	fsr2h,f,c
 41374  00F20E  C188  FFDF         	movff	_os+36,indf2	;volatile
 41375                           
 41376                           ;api.c: 314: outBuffer[7] = ((unsigned char)(((os.arc_speed)>>8)&0xFF));
 41377  00F212  EE20 F007          	lfsr	2,7
 41378  00F216  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41379  00F218  26D9               	addwf	fsr2l,f,c
 41380  00F21A  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41381  00F21C  22DA               	addwfc	fsr2h,f,c
 41382  00F21E  0101               	movlb	1	; () banked
 41383  00F220  5187               	movf	(_os+35)& (0+255),w,b	;volatile
 41384  00F222  6EDF               	movwf	indf2,c
 41385                           
 41386                           ;api.c: 315: outBuffer[8] = ((unsigned char)((os.arc_speed)&0xFF));
 41387  00F224  0100               	movlb	0	; () banked
 41388  00F226  EE20 F008          	lfsr	2,8
 41389  00F22A  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41390  00F22C  26D9               	addwf	fsr2l,f,c
 41391  00F22E  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41392  00F230  22DA               	addwfc	fsr2h,f,c
 41393  00F232  C186  FFDF         	movff	_os+34,indf2	;volatile
 41394                           
 41395                           ; BSR set to: 0
 41396                           ;api.c: 319: break;
 41397                           
 41398                           ;api.c: 318: case DISPLAY_STATE_ZERO:
 41399                           
 41400                           ;api.c: 316: break;
 41401  00F236  0012               	return	
 41402  00F238                     
 41403                           ; BSR set to: 0
 41404                           ;api.c: 322: outBuffer[4] = os.manual_direction;
 41405                           
 41406                           ; BSR set to: 0
 41407  00F238  EE20 F004          	lfsr	2,4
 41408  00F23C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41409  00F23E  26D9               	addwf	fsr2l,f,c
 41410  00F240  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41411  00F242  22DA               	addwfc	fsr2h,f,c
 41412  00F244  C18B  FFDF         	movff	_os+39,indf2	;volatile
 41413                           
 41414                           ;api.c: 323: outBuffer[5] = ((unsigned char)(((os.manual_speed)>>8)&0xFF));
 41415  00F248  EE20 F005          	lfsr	2,5
 41416  00F24C  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41417  00F24E  26D9               	addwf	fsr2l,f,c
 41418  00F250  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41419  00F252  22DA               	addwfc	fsr2h,f,c
 41420  00F254  0101               	movlb	1	; () banked
 41421  00F256  518A               	movf	(_os+38)& (0+255),w,b	;volatile
 41422  00F258  6EDF               	movwf	indf2,c
 41423                           
 41424                           ;api.c: 324: outBuffer[6] = ((unsigned char)((os.manual_speed)&0xFF));
 41425  00F25A  0100               	movlb	0	; () banked
 41426  00F25C  EE20 F006          	lfsr	2,6
 41427  00F260  5160               	movf	__fill_buffer_get_mode_details@outBuffer& (0+255),w,b
 41428  00F262  26D9               	addwf	fsr2l,f,c
 41429  00F264  5161               	movf	(__fill_buffer_get_mode_details@outBuffer+1)& (0+255),w,b
 41430  00F266  22DA               	addwfc	fsr2h,f,c
 41431  00F268  C189  FFDF         	movff	_os+37,indf2	;volatile
 41432                           
 41433                           ; BSR set to: 0
 41434                           ;api.c: 326: }
 41435                           
 41436                           ;api.c: 325: break;
 41437  00F26C  0012               	return	
 41438  00F26E                     l2300:
 41439                           
 41440                           ; BSR set to: 0
 41441                           
 41442                           ; BSR set to: 0
 41443  00F26E  0101               	movlb	1	; () banked
 41444  00F270  5173               	movf	(_os+15)& (0+255),w,b	;volatile
 41445  00F272  0B0F               	andlw	15
 41446  00F274  0100               	movlb	0	; () banked
 41447  00F276  6F62               	movwf	??__fill_buffer_get_mode_details& (0+255),b
 41448  00F278  6B63               	clrf	(??__fill_buffer_get_mode_details+1)& (0+255),b
 41449                           
 41450                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 41451                           ; Switch size 1, requested type "space"
 41452                           ; Number of cases is 1, Range of values is 0 to 0
 41453                           ; switch strategies available:
 41454                           ; Name         Instructions Cycles
 41455                           ; simple_byte            4     3 (average)
 41456                           ;	Chosen strategy is simple_byte
 41457  00F27A  5163               	movf	(??__fill_buffer_get_mode_details+1)& (0+255),w,b
 41458  00F27C  0A00               	xorlw	0	; case 0
 41459  00F27E  A4D8               	btfss	status,2,c
 41460  00F280  0012               	return	
 41461                           
 41462                           ; BSR set to: 0
 41463                           ; Switch size 1, requested type "space"
 41464                           ; Number of cases is 9, Range of values is 0 to 128
 41465                           ; switch strategies available:
 41466                           ; Name         Instructions Cycles
 41467                           ; simple_byte           28    15 (average)
 41468                           ;	Chosen strategy is simple_byte
 41469  00F282  5162               	movf	??__fill_buffer_get_mode_details& (0+255),w,b
 41470  00F284  0A00               	xorlw	0	; case 0
 41471  00F286  B4D8               	btfsc	status,2,c
 41472  00F288  0012               	return	
 41473  00F28A  0A10               	xorlw	16	; case 16
 41474  00F28C  B4D8               	btfsc	status,2,c
 41475  00F28E  D75F               	goto	l2303
 41476  00F290  0A30               	xorlw	48	; case 32
 41477  00F292  B4D8               	btfsc	status,2,c
 41478  00F294  D75C               	goto	l2303
 41479  00F296  0A10               	xorlw	16	; case 48
 41480  00F298  B4D8               	btfsc	status,2,c
 41481  00F29A  D762               	goto	l2305
 41482  00F29C  0A70               	xorlw	112	; case 64
 41483  00F29E  B4D8               	btfsc	status,2,c
 41484  00F2A0  D75F               	goto	l2305
 41485  00F2A2  0A10               	xorlw	16	; case 80
 41486  00F2A4  B4D8               	btfsc	status,2,c
 41487  00F2A6  D79B               	goto	l2307
 41488  00F2A8  0A30               	xorlw	48	; case 96
 41489  00F2AA  B4D8               	btfsc	status,2,c
 41490  00F2AC  D798               	goto	l2307
 41491  00F2AE  0A10               	xorlw	16	; case 112
 41492  00F2B0  B4D8               	btfsc	status,2,c
 41493  00F2B2  0012               	return	
 41494  00F2B4  0AF0               	xorlw	240	; case 128
 41495  00F2B6  A4D8               	btfss	status,2,c
 41496  00F2B8  0012               	return	
 41497  00F2BA  D7BE               	goto	l2310
 41498  00F2BC                     __end_of__fill_buffer_get_mode_details:
 41499                           	opt stack 0
 41500                           tosu	equ	0xFFF
 41501                           tosh	equ	0xFFE
 41502                           tosl	equ	0xFFD
 41503                           pclath	equ	0xFFA
 41504                           tblptru	equ	0xFF8
 41505                           tblptrh	equ	0xFF7
 41506                           tblptrl	equ	0xFF6
 41507                           tablat	equ	0xFF5
 41508                           prodh	equ	0xFF4
 41509                           prodl	equ	0xFF3
 41510                           intcon	equ	0xFF2
 41511                           indf0	equ	0xFEF
 41512                           postinc0	equ	0xFEE
 41513                           fsr0h	equ	0xFEA
 41514                           fsr0l	equ	0xFE9
 41515                           wreg	equ	0xFE8
 41516                           indf1	equ	0xFE7
 41517                           postinc1	equ	0xFE6
 41518                           postdec1	equ	0xFE5
 41519                           plusw1	equ	0xFE3
 41520                           fsr1h	equ	0xFE2
 41521                           fsr1l	equ	0xFE1
 41522                           indf2	equ	0xFDF
 41523                           postinc2	equ	0xFDE
 41524                           postdec2	equ	0xFDD
 41525                           plusw2	equ	0xFDB
 41526                           fsr2h	equ	0xFDA
 41527                           fsr2l	equ	0xFD9
 41528                           status	equ	0xFD8
 41529                           
 41530 ;; *************** function __fill_buffer_get_display *****************
 41531 ;; Defined at:
 41532 ;;		line 234 in file "api.c"
 41533 ;; Parameters:    Size  Location     Type
 41534 ;;  outBuffer       2    4[BANK0 ] PTR unsigned char 
 41535 ;;		 -> ToSendDataBuffer(64), 
 41536 ;;  secondHalf      1    6[BANK0 ] unsigned char 
 41537 ;; Auto vars:     Size  Location     Type
 41538 ;;  position        1   15[BANK0 ] unsigned char 
 41539 ;;  start_line      1   14[BANK0 ] unsigned char 
 41540 ;;  line            1   13[BANK0 ] unsigned char 
 41541 ;;  cntr            1   12[BANK0 ] unsigned char 
 41542 ;; Return value:  Size  Location     Type
 41543 ;;                  1    wreg      void 
 41544 ;; Registers used:
 41545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 41546 ;; Tracked objects:
 41547 ;;		On entry : 0/0
 41548 ;;		On exit  : 0/0
 41549 ;;		Unchanged: 0/0
 41550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41551 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41552 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41553 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41554 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41555 ;;Total ram usage:       12 bytes
 41556 ;; Hardware stack levels used:    1
 41557 ;; Hardware stack levels required when called:   11
 41558 ;; This function calls:
 41559 ;;		_display_get_character
 41560 ;; This function is called by:
 41561 ;;		_api_prepare
 41562 ;; This function uses a non-reentrant model
 41563 ;;
 41564                           
 41565                           	psect	text167
 41566  012F46                     __ptext167:
 41567                           	opt stack 0
 41568  012F46                     __fill_buffer_get_display:
 41569                           	opt stack 17
 41570                           
 41571                           ;api.c: 236: uint8_t cntr;;api.c: 237: uint8_t line;;api.c: 238: uint8_t start_line;;api
      +                          .c: 239: uint8_t position;;api.c: 242: if(secondHalf)
 41572                           
 41573                           ; BSR set to: 0
 41574                           ;incstack = 0
 41575  012F46  0100               	movlb	0	; () banked
 41576  012F48  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41577  012F4A  B4D8               	btfsc	status,2,c
 41578  012F4C  D006               	goto	l2288
 41579                           
 41580                           ; BSR set to: 0
 41581                           ;api.c: 243: {;api.c: 244: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 41582  012F4E  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41583  012F52  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41584  012F56  0E12               	movlw	18
 41585  012F58  D005               	goto	L64
 41586  012F5A                     l2288:
 41587                           
 41588                           ; BSR set to: 0
 41589                           ;api.c: 246: else;api.c: 247: {;api.c: 248: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 41590                           
 41591                           ; BSR set to: 0
 41592  012F5A  C064  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 41593  012F5E  C065  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 41594  012F62  0E11               	movlw	17
 41595  012F64                     L64:
 41596  012F64  6EDF               	movwf	indf2,c
 41597                           
 41598                           ; BSR set to: 0
 41599                           ;api.c: 249: };api.c: 252: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41600                           
 41601                           ; BSR set to: 0
 41602  012F66  EE20 F001          	lfsr	2,1
 41603  012F6A  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41604  012F6C  26D9               	addwf	fsr2l,f,c
 41605  012F6E  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41606  012F70  22DA               	addwfc	fsr2h,f,c
 41607  012F72  0EBC               	movlw	188
 41608  012F74  6EDF               	movwf	indf2,c
 41609                           
 41610                           ; BSR set to: 0
 41611                           ;api.c: 253: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41612  012F76  EE20 F002          	lfsr	2,2
 41613  012F7A  5164               	movf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41614  012F7C  26D9               	addwf	fsr2l,f,c
 41615  012F7E  5165               	movf	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41616  012F80  22DA               	addwfc	fsr2h,f,c
 41617  012F82  0E26               	movlw	38
 41618  012F84  6EDF               	movwf	indf2,c
 41619                           
 41620                           ; BSR set to: 0
 41621                           ;api.c: 256: cntr = 3;
 41622  012F86  0E03               	movlw	3
 41623  012F88  6F6C               	movwf	__fill_buffer_get_display@cntr& (0+255),b
 41624                           
 41625                           ; BSR set to: 0
 41626                           ;api.c: 257: if(secondHalf)
 41627  012F8A  5166               	movf	__fill_buffer_get_display@secondHalf& (0+255),w,b
 41628  012F8C  B4D8               	btfsc	status,2,c
 41629  012F8E  D002               	goto	l2290
 41630                           
 41631                           ; BSR set to: 0
 41632                           ;api.c: 258: {;api.c: 259: start_line = 2;
 41633  012F90  0E02               	movlw	2
 41634  012F92  D001               	goto	L65
 41635  012F94                     l2290:
 41636                           
 41637                           ; BSR set to: 0
 41638                           ;api.c: 261: else;api.c: 262: {;api.c: 263: start_line = 0;
 41639                           
 41640                           ; BSR set to: 0
 41641  012F94  0E00               	movlw	0
 41642  012F96                     L65:
 41643  012F96  6F6E               	movwf	__fill_buffer_get_display@start_line& (0+255),b
 41644                           
 41645                           ; BSR set to: 0
 41646                           ;api.c: 264: };api.c: 265: for(line=start_line; line<start_line+2; ++line)
 41647                           
 41648                           ; BSR set to: 0
 41649  012F98  C06E  F06D         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 41650  012F9C  D01B               	goto	l2292
 41651  012F9E                     
 41652                           ; BSR set to: 0
 41653                           ;api.c: 266: {;api.c: 267: for(position=0; position<20; ++position)
 41654                           
 41655                           ; BSR set to: 0
 41656  012F9E  0E00               	movlw	0
 41657  012FA0  6F6F               	movwf	__fill_buffer_get_display@position& (0+255),b
 41658  012FA2                     l16504:
 41659                           
 41660                           ; BSR set to: 0
 41661  012FA2  0E13               	movlw	19
 41662  012FA4  656F               	cpfsgt	__fill_buffer_get_display@position& (0+255),b
 41663  012FA6  D001               	goto	l2294
 41664  012FA8  D014               	goto	u15660
 41665  012FAA                     l2294:
 41666                           
 41667                           ; BSR set to: 0
 41668                           ;api.c: 268: {;api.c: 269: outBuffer[cntr] = (uint8_t) display_get_character(line, posit
      +                          ion);
 41669                           
 41670                           ; BSR set to: 0
 41671  012FAA  C06F  F060         	movff	__fill_buffer_get_display@position,display_get_character@position
 41672  012FAE  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41673  012FB0  EC26  F0AC         	call	_display_get_character
 41674  012FB4  0100               	movlb	0	; () banked
 41675  012FB6  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41676  012FB8  516C               	movf	__fill_buffer_get_display@cntr& (0+255),w,b
 41677  012FBA  0D01               	mullw	1
 41678  012FBC  50F3               	movf	prodl,w,c
 41679  012FBE  2564               	addwf	__fill_buffer_get_display@outBuffer& (0+255),w,b
 41680  012FC0  6ED9               	movwf	fsr2l,c
 41681  012FC2  50F4               	movf	prodh,w,c
 41682  012FC4  2165               	addwfc	(__fill_buffer_get_display@outBuffer+1)& (0+255),w,b
 41683  012FC6  6EDA               	movwf	fsr2h,c
 41684  012FC8  C067  FFDF         	movff	??__fill_buffer_get_display,indf2
 41685                           
 41686                           ; BSR set to: 0
 41687                           ;api.c: 270: ++cntr;
 41688  012FCC  2B6C               	incf	__fill_buffer_get_display@cntr& (0+255),f,b
 41689                           
 41690                           ; BSR set to: 0
 41691  012FCE  2B6F               	incf	__fill_buffer_get_display@position& (0+255),f,b
 41692  012FD0  D7E8               	goto	l16504
 41693  012FD2                     u15660:
 41694                           
 41695                           ; BSR set to: 0
 41696                           
 41697                           ; BSR set to: 0
 41698  012FD2  2B6D               	incf	__fill_buffer_get_display@line& (0+255),f,b
 41699  012FD4                     l2292:
 41700                           
 41701                           ; BSR set to: 0
 41702                           
 41703                           ; BSR set to: 0
 41704  012FD4  516E               	movf	__fill_buffer_get_display@start_line& (0+255),w,b
 41705  012FD6  6F67               	movwf	??__fill_buffer_get_display& (0+255),b
 41706  012FD8  6B68               	clrf	(??__fill_buffer_get_display+1)& (0+255),b
 41707  012FDA  0E02               	movlw	2
 41708  012FDC  2767               	addwf	??__fill_buffer_get_display& (0+255),f,b
 41709  012FDE  0E00               	movlw	0
 41710  012FE0  2368               	addwfc	(??__fill_buffer_get_display+1)& (0+255),f,b
 41711  012FE2  516D               	movf	__fill_buffer_get_display@line& (0+255),w,b
 41712  012FE4  6F69               	movwf	(??__fill_buffer_get_display+2)& (0+255),b
 41713  012FE6  6B6A               	clrf	(??__fill_buffer_get_display+3)& (0+255),b
 41714  012FE8  5167               	movf	??__fill_buffer_get_display& (0+255),w,b
 41715  012FEA  5D69               	subwf	(??__fill_buffer_get_display+2)& (0+255),w,b
 41716  012FEC  516A               	movf	(??__fill_buffer_get_display+3)& (0+255),w,b
 41717  012FEE  0A80               	xorlw	128
 41718  012FF0  6F6B               	movwf	(??__fill_buffer_get_display+4)& (0+255),b
 41719  012FF2  5168               	movf	(??__fill_buffer_get_display+1)& (0+255),w,b
 41720  012FF4  0A80               	xorlw	128
 41721  012FF6  596B               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,b
 41722  012FF8  B0D8               	btfsc	status,0,c
 41723  012FFA  0012               	return	
 41724  012FFC  D7D0               	goto	l2293
 41725  012FFE                     __end_of__fill_buffer_get_display:
 41726                           	opt stack 0
 41727                           tosu	equ	0xFFF
 41728                           tosh	equ	0xFFE
 41729                           tosl	equ	0xFFD
 41730                           pclath	equ	0xFFA
 41731                           tblptru	equ	0xFF8
 41732                           tblptrh	equ	0xFF7
 41733                           tblptrl	equ	0xFF6
 41734                           tablat	equ	0xFF5
 41735                           prodh	equ	0xFF4
 41736                           prodl	equ	0xFF3
 41737                           intcon	equ	0xFF2
 41738                           indf0	equ	0xFEF
 41739                           postinc0	equ	0xFEE
 41740                           fsr0h	equ	0xFEA
 41741                           fsr0l	equ	0xFE9
 41742                           wreg	equ	0xFE8
 41743                           indf1	equ	0xFE7
 41744                           postinc1	equ	0xFE6
 41745                           postdec1	equ	0xFE5
 41746                           plusw1	equ	0xFE3
 41747                           fsr1h	equ	0xFE2
 41748                           fsr1l	equ	0xFE1
 41749                           indf2	equ	0xFDF
 41750                           postinc2	equ	0xFDE
 41751                           postdec2	equ	0xFDD
 41752                           plusw2	equ	0xFDB
 41753                           fsr2h	equ	0xFDA
 41754                           fsr2l	equ	0xFD9
 41755                           status	equ	0xFD8
 41756                           
 41757 ;; *************** function _display_get_character *****************
 41758 ;; Defined at:
 41759 ;;		line 628 in file "display.c"
 41760 ;; Parameters:    Size  Location     Type
 41761 ;;  line            1    wreg     unsigned char 
 41762 ;;  position        1    0[BANK0 ] unsigned char 
 41763 ;; Auto vars:     Size  Location     Type
 41764 ;;  line            1    3[BANK0 ] unsigned char 
 41765 ;; Return value:  Size  Location     Type
 41766 ;;                  1    wreg      unsigned char 
 41767 ;; Registers used:
 41768 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 41769 ;; Tracked objects:
 41770 ;;		On entry : 0/0
 41771 ;;		On exit  : 0/0
 41772 ;;		Unchanged: 0/0
 41773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41774 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41775 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41776 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41777 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41778 ;;Total ram usage:        4 bytes
 41779 ;; Hardware stack levels used:    1
 41780 ;; Hardware stack levels required when called:   10
 41781 ;; This function calls:
 41782 ;;		Nothing
 41783 ;; This function is called by:
 41784 ;;		__fill_buffer_get_display
 41785 ;; This function uses a non-reentrant model
 41786 ;;
 41787                           
 41788                           	psect	text168
 41789  01584C                     __ptext168:
 41790                           	opt stack 0
 41791  01584C                     _display_get_character:
 41792                           	opt stack 17
 41793                           
 41794                           ; BSR set to: 0
 41795                           ;incstack = 0
 41796                           ;display_get_character@line stored from wreg
 41797  01584C  0100               	movlb	0	; () banked
 41798  01584E  6F63               	movwf	display_get_character@line& (0+255),b
 41799                           
 41800                           ;display.c: 630: return display_content[line][position];
 41801  015850  0100               	movlb	0	; () banked
 41802  015852  5163               	movf	display_get_character@line& (0+255),w,b
 41803  015854  0D14               	mullw	20
 41804  015856  0E42               	movlw	low _display_content
 41805  015858  6F61               	movwf	??_display_get_character& (0+255),b
 41806  01585A  0E02               	movlw	high _display_content
 41807  01585C  6F62               	movwf	(??_display_get_character+1)& (0+255),b
 41808  01585E  50F3               	movf	prodl,w,c
 41809  015860  2761               	addwf	??_display_get_character& (0+255),f,b
 41810  015862  50F4               	movf	prodh,w,c
 41811  015864  2362               	addwfc	(??_display_get_character+1)& (0+255),f,b
 41812  015866  5160               	movf	display_get_character@position& (0+255),w,b
 41813  015868  0D01               	mullw	1
 41814  01586A  50F3               	movf	prodl,w,c
 41815  01586C  2561               	addwf	??_display_get_character& (0+255),w,b
 41816  01586E  6ED9               	movwf	fsr2l,c
 41817  015870  50F4               	movf	prodh,w,c
 41818  015872  2162               	addwfc	(??_display_get_character+1)& (0+255),w,b
 41819  015874  6EDA               	movwf	fsr2h,c
 41820  015876  50DF               	movf	indf2,w,c
 41821  015878  0012               	return	
 41822  01587A                     __end_of_display_get_character:
 41823                           	opt stack 0
 41824                           tosu	equ	0xFFF
 41825                           tosh	equ	0xFFE
 41826                           tosl	equ	0xFFD
 41827                           pclath	equ	0xFFA
 41828                           tblptru	equ	0xFF8
 41829                           tblptrh	equ	0xFF7
 41830                           tblptrl	equ	0xFF6
 41831                           tablat	equ	0xFF5
 41832                           prodh	equ	0xFF4
 41833                           prodl	equ	0xFF3
 41834                           intcon	equ	0xFF2
 41835                           indf0	equ	0xFEF
 41836                           postinc0	equ	0xFEE
 41837                           fsr0h	equ	0xFEA
 41838                           fsr0l	equ	0xFE9
 41839                           wreg	equ	0xFE8
 41840                           indf1	equ	0xFE7
 41841                           postinc1	equ	0xFE6
 41842                           postdec1	equ	0xFE5
 41843                           plusw1	equ	0xFE3
 41844                           fsr1h	equ	0xFE2
 41845                           fsr1l	equ	0xFE1
 41846                           indf2	equ	0xFDF
 41847                           postinc2	equ	0xFDE
 41848                           postdec2	equ	0xFDD
 41849                           plusw2	equ	0xFDB
 41850                           fsr2h	equ	0xFDA
 41851                           fsr2l	equ	0xFD9
 41852                           status	equ	0xFD8
 41853                           
 41854 ;; *************** function _api_parse *****************
 41855 ;; Defined at:
 41856 ;;		line 94 in file "api.c"
 41857 ;; Parameters:    Size  Location     Type
 41858 ;;  inBuffer        2   71[BANK0 ] PTR unsigned char 
 41859 ;;		 -> ReceivedDataBuffer(64), 
 41860 ;;  receivedData    1   73[BANK0 ] unsigned char 
 41861 ;;  outBuffer       2   74[BANK0 ] PTR unsigned char 
 41862 ;;		 -> ToSendDataBuffer(64), 
 41863 ;; Auto vars:     Size  Location     Type
 41864 ;;  out_idx_ptr     2   78[BANK0 ] PTR unsigned char 
 41865 ;;		 -> api_parse@out_idx(1), 
 41866 ;;  in_idx          1   81[BANK0 ] unsigned char 
 41867 ;;  out_idx         1   80[BANK0 ] unsigned char 
 41868 ;; Return value:  Size  Location     Type
 41869 ;;                  1    wreg      void 
 41870 ;; Registers used:
 41871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 41872 ;; Tracked objects:
 41873 ;;		On entry : 0/0
 41874 ;;		On exit  : 0/0
 41875 ;;		Unchanged: 0/0
 41876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41877 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41878 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41880 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41881 ;;Total ram usage:       11 bytes
 41882 ;; Hardware stack levels used:    1
 41883 ;; Hardware stack levels required when called:   16
 41884 ;; This function calls:
 41885 ;;		__parse_command_long
 41886 ;;		__parse_command_short
 41887 ;; This function is called by:
 41888 ;;		_APP_DeviceCustomHIDTasks
 41889 ;; This function uses a non-reentrant model
 41890 ;;
 41891                           
 41892                           	psect	text169
 41893  01094C                     __ptext169:
 41894                           	opt stack 0
 41895  01094C                     _api_parse:
 41896                           	opt stack 13
 41897                           
 41898                           ;api.c: 98: uint8_t in_idx;;api.c: 99: uint8_t out_idx;;api.c: 100: uint8_t *out_idx_ptr
      +                          ;;api.c: 102: out_idx = 0;
 41899                           
 41900                           ; BSR set to: 0
 41901                           ;incstack = 0
 41902  01094C  0E00               	movlw	0
 41903  01094E  0100               	movlb	0	; () banked
 41904  010950  6FB0               	movwf	api_parse@out_idx& (0+255),b
 41905                           
 41906                           ; BSR set to: 0
 41907                           ;api.c: 103: out_idx_ptr = &out_idx;
 41908  010952  0EB0               	movlw	low api_parse@out_idx
 41909  010954  6FAE               	movwf	api_parse@out_idx_ptr& (0+255),b
 41910  010956  0E00               	movlw	high api_parse@out_idx
 41911  010958  6FAF               	movwf	(api_parse@out_idx_ptr+1)& (0+255),b
 41912                           
 41913                           ; BSR set to: 0
 41914                           ;api.c: 105: if(inBuffer[0]>0x7F)
 41915  01095A  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41916  01095E  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41917  010962  0E7F               	movlw	127
 41918  010964  64DF               	cpfsgt	indf2,c
 41919  010966  D001               	goto	l2269
 41920  010968  0012               	return	
 41921  01096A                     l2269:
 41922                           
 41923                           ; BSR set to: 0
 41924                           ;api.c: 110: };api.c: 112: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 41925                           
 41926                           ; BSR set to: 0
 41927  01096A  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41928  01096E  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41929  010972  0E20               	movlw	32
 41930  010974  18DE               	xorwf	postinc2,w,c
 41931  010976  B4D8               	btfsc	status,2,c
 41932  010978  0012               	return	
 41933                           
 41934                           ; BSR set to: 0
 41935                           ;api.c: 117: };api.c: 119: if(inBuffer[0]==DATAREQUEST_GET_COMMAND_RESPONSE)
 41936                           
 41937                           ; BSR set to: 0
 41938                           
 41939                           ; BSR set to: 0
 41940                           ;api.c: 113: {;api.c: 116: return;
 41941  01097A  C0A7  FFD9         	movff	api_parse@inBuffer,fsr2l
 41942  01097E  C0A8  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 41943  010982  50DF               	movf	indf2,w,c
 41944  010984  A4D8               	btfss	status,2,c
 41945  010986  D018               	goto	l2272
 41946                           
 41947                           ; BSR set to: 0
 41948                           ;api.c: 120: {;api.c: 122: outBuffer[0] = DATAREQUEST_GET_COMMAND_RESPONSE;
 41949  010988  C0AA  FFD9         	movff	api_parse@outBuffer,fsr2l
 41950  01098C  C0AB  FFDA         	movff	api_parse@outBuffer+1,fsr2h
 41951  010990  0E00               	movlw	0
 41952  010992  6EDF               	movwf	indf2,c
 41953                           
 41954                           ; BSR set to: 0
 41955                           ;api.c: 125: outBuffer[1] = ((unsigned char)((0x26BC)&0xFF));
 41956  010994  EE20 F001          	lfsr	2,1
 41957  010998  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 41958  01099A  26D9               	addwf	fsr2l,f,c
 41959  01099C  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 41960  01099E  22DA               	addwfc	fsr2h,f,c
 41961  0109A0  0EBC               	movlw	188
 41962  0109A2  6EDF               	movwf	indf2,c
 41963                           
 41964                           ; BSR set to: 0
 41965                           ;api.c: 126: outBuffer[2] = ((unsigned char)(((0x26BC)>>8)&0xFF));
 41966  0109A4  EE20 F002          	lfsr	2,2
 41967  0109A8  51AA               	movf	api_parse@outBuffer& (0+255),w,b
 41968  0109AA  26D9               	addwf	fsr2l,f,c
 41969  0109AC  51AB               	movf	(api_parse@outBuffer+1)& (0+255),w,b
 41970  0109AE  22DA               	addwfc	fsr2h,f,c
 41971  0109B0  0E26               	movlw	38
 41972  0109B2  6EDF               	movwf	indf2,c
 41973                           
 41974                           ; BSR set to: 0
 41975                           ;api.c: 129: out_idx = 3;
 41976  0109B4  0E03               	movlw	3
 41977  0109B6  6FB0               	movwf	api_parse@out_idx& (0+255),b
 41978  0109B8                     l2272:
 41979                           
 41980                           ; BSR set to: 0
 41981                           ;api.c: 130: };api.c: 132: in_idx = 1;
 41982                           
 41983                           ; BSR set to: 0
 41984  0109B8  0E01               	movlw	1
 41985  0109BA  6FB1               	movwf	api_parse@in_idx& (0+255),b
 41986                           
 41987                           ;api.c: 133: while(in_idx<receivedDataLength)
 41988  0109BC  D057               	goto	l2278
 41989  0109BE                     
 41990                           ; BSR set to: 0
 41991                           ;api.c: 134: {;api.c: 136: if(inBuffer[in_idx]==COMMAND_STOP_PARSING)
 41992                           
 41993                           ; BSR set to: 0
 41994  0109BE  51B1               	movf	api_parse@in_idx& (0+255),w,b
 41995  0109C0  0D01               	mullw	1
 41996  0109C2  50F3               	movf	prodl,w,c
 41997  0109C4  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 41998  0109C6  6ED9               	movwf	fsr2l,c
 41999  0109C8  50F4               	movf	prodh,w,c
 42000  0109CA  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42001  0109CC  6EDA               	movwf	fsr2h,c
 42002  0109CE  0E99               	movlw	153
 42003  0109D0  18DE               	xorwf	postinc2,w,c
 42004  0109D2  B4D8               	btfsc	status,2,c
 42005  0109D4  0012               	return	
 42006  0109D6  D02F               	goto	l2276
 42007  0109D8                     
 42008                           ; BSR set to: 0
 42009                           ;api.c: 144: _parse_command_short(inBuffer[in_idx]);
 42010                           
 42011                           ; BSR set to: 0
 42012  0109D8  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42013  0109DA  0D01               	mullw	1
 42014  0109DC  50F3               	movf	prodl,w,c
 42015  0109DE  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42016  0109E0  6ED9               	movwf	fsr2l,c
 42017  0109E2  50F4               	movf	prodh,w,c
 42018  0109E4  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42019  0109E6  6EDA               	movwf	fsr2h,c
 42020  0109E8  50DF               	movf	indf2,w,c
 42021  0109EA  EC6E  F07C         	call	__parse_command_short
 42022  0109EE  D00B               	goto	l17204
 42023  0109F0                     
 42024                           ; BSR set to: 0
 42025                           ;api.c: 149: _parse_command_short(inBuffer[in_idx]);
 42026                           
 42027                           ; BSR set to: 0
 42028  0109F0  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42029  0109F2  0D01               	mullw	1
 42030  0109F4  50F3               	movf	prodl,w,c
 42031  0109F6  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42032  0109F8  6ED9               	movwf	fsr2l,c
 42033  0109FA  50F4               	movf	prodh,w,c
 42034  0109FC  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42035  0109FE  6EDA               	movwf	fsr2h,c
 42036  010A00  50DF               	movf	indf2,w,c
 42037  010A02  EC6E  F07C         	call	__parse_command_short
 42038  010A06                     l17204:
 42039                           
 42040                           ;api.c: 150: ++in_idx;
 42041  010A06  0100               	movlb	0	; () banked
 42042  010A08  2BB1               	incf	api_parse@in_idx& (0+255),f,b
 42043                           
 42044                           ;api.c: 151: break;
 42045  010A0A  D030               	goto	l2278
 42046  010A0C                     
 42047                           ; BSR set to: 0
 42048                           ;api.c: 154: in_idx += _parse_command_long(&inBuffer[in_idx], outBuffer, out_idx_ptr);
 42049                           
 42050                           ; BSR set to: 0
 42051  010A0C  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42052  010A0E  0D01               	mullw	1
 42053  010A10  50F3               	movf	prodl,w,c
 42054  010A12  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42055  010A14  6FA0               	movwf	__parse_command_long@data& (0+255),b
 42056  010A16  50F4               	movf	prodh,w,c
 42057  010A18  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42058  010A1A  6FA1               	movwf	(__parse_command_long@data+1)& (0+255),b
 42059  010A1C  C0AA  F0A2         	movff	api_parse@outBuffer,__parse_command_long@out_buffer
 42060  010A20  C0AB  F0A3         	movff	api_parse@outBuffer+1,__parse_command_long@out_buffer+1
 42061  010A24  C0AE  F0A4         	movff	api_parse@out_idx_ptr,__parse_command_long@out_idx_ptr
 42062  010A28  C0AF  F0A5         	movff	api_parse@out_idx_ptr+1,__parse_command_long@out_idx_ptr+1
 42063  010A2C  EC82  F09E         	call	__parse_command_long	;wreg free
 42064  010A30  0100               	movlb	0	; () banked
 42065  010A32  27B1               	addwf	api_parse@in_idx& (0+255),f,b
 42066                           
 42067                           ;api.c: 155: break;
 42068  010A34  D01B               	goto	l2278
 42069  010A36                     l2276:
 42070                           
 42071                           ; BSR set to: 0
 42072                           
 42073                           ; BSR set to: 0
 42074  010A36  51B1               	movf	api_parse@in_idx& (0+255),w,b
 42075  010A38  0D01               	mullw	1
 42076  010A3A  50F3               	movf	prodl,w,c
 42077  010A3C  25A7               	addwf	api_parse@inBuffer& (0+255),w,b
 42078  010A3E  6ED9               	movwf	fsr2l,c
 42079  010A40  50F4               	movf	prodh,w,c
 42080  010A42  21A8               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 42081  010A44  6EDA               	movwf	fsr2h,c
 42082  010A46  50DF               	movf	indf2,w,c
 42083  010A48  0BF0               	andlw	240
 42084  010A4A  6FAC               	movwf	??_api_parse& (0+255),b
 42085  010A4C  6BAD               	clrf	(??_api_parse+1)& (0+255),b
 42086                           
 42087                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 42088                           ; Switch size 1, requested type "space"
 42089                           ; Number of cases is 1, Range of values is 0 to 0
 42090                           ; switch strategies available:
 42091                           ; Name         Instructions Cycles
 42092                           ; simple_byte            4     3 (average)
 42093                           ;	Chosen strategy is simple_byte
 42094  010A4E  51AD               	movf	(??_api_parse+1)& (0+255),w,b
 42095  010A50  0A00               	xorlw	0	; case 0
 42096  010A52  A4D8               	btfss	status,2,c
 42097  010A54  0012               	return	
 42098                           
 42099                           ; BSR set to: 0
 42100                           ; Switch size 1, requested type "space"
 42101                           ; Number of cases is 3, Range of values is 32 to 144
 42102                           ; switch strategies available:
 42103                           ; Name         Instructions Cycles
 42104                           ; simple_byte           10     6 (average)
 42105                           ;	Chosen strategy is simple_byte
 42106  010A56  51AC               	movf	??_api_parse& (0+255),w,b
 42107  010A58  0A20               	xorlw	32	; case 32
 42108  010A5A  B4D8               	btfsc	status,2,c
 42109  010A5C  D7BD               	goto	l2277
 42110  010A5E  0A10               	xorlw	16	; case 48
 42111  010A60  B4D8               	btfsc	status,2,c
 42112  010A62  D7C6               	goto	l2279
 42113  010A64  0AA0               	xorlw	160	; case 144
 42114  010A66  A4D8               	btfss	status,2,c
 42115  010A68  0012               	return	
 42116  010A6A  D7D0               	goto	l2280
 42117  010A6C                     l2278:
 42118                           
 42119                           ; BSR set to: 0
 42120                           
 42121                           ; BSR set to: 0
 42122                           
 42123                           ; BSR set to: 0
 42124  010A6C  51A9               	movf	api_parse@receivedDataLength& (0+255),w,b
 42125  010A6E  5DB1               	subwf	api_parse@in_idx& (0+255),w,b
 42126  010A70  B0D8               	btfsc	status,0,c
 42127  010A72  0012               	return	
 42128  010A74  D7A4               	goto	l2274
 42129  010A76                     __end_of_api_parse:
 42130                           	opt stack 0
 42131                           tosu	equ	0xFFF
 42132                           tosh	equ	0xFFE
 42133                           tosl	equ	0xFFD
 42134                           pclath	equ	0xFFA
 42135                           tblptru	equ	0xFF8
 42136                           tblptrh	equ	0xFF7
 42137                           tblptrl	equ	0xFF6
 42138                           tablat	equ	0xFF5
 42139                           prodh	equ	0xFF4
 42140                           prodl	equ	0xFF3
 42141                           intcon	equ	0xFF2
 42142                           indf0	equ	0xFEF
 42143                           postinc0	equ	0xFEE
 42144                           fsr0h	equ	0xFEA
 42145                           fsr0l	equ	0xFE9
 42146                           wreg	equ	0xFE8
 42147                           indf1	equ	0xFE7
 42148                           postinc1	equ	0xFE6
 42149                           postdec1	equ	0xFE5
 42150                           plusw1	equ	0xFE3
 42151                           fsr1h	equ	0xFE2
 42152                           fsr1l	equ	0xFE1
 42153                           indf2	equ	0xFDF
 42154                           postinc2	equ	0xFDE
 42155                           postdec2	equ	0xFDD
 42156                           plusw2	equ	0xFDB
 42157                           fsr2h	equ	0xFDA
 42158                           fsr2l	equ	0xFD9
 42159                           status	equ	0xFD8
 42160                           
 42161 ;; *************** function __parse_command_short *****************
 42162 ;; Defined at:
 42163 ;;		line 329 in file "api.c"
 42164 ;; Parameters:    Size  Location     Type
 42165 ;;  cmd             1    wreg     unsigned char 
 42166 ;; Auto vars:     Size  Location     Type
 42167 ;;  cmd             1   62[BANK0 ] unsigned char 
 42168 ;; Return value:  Size  Location     Type
 42169 ;;                  1    wreg      void 
 42170 ;; Registers used:
 42171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 42172 ;; Tracked objects:
 42173 ;;		On entry : 0/0
 42174 ;;		On exit  : 0/0
 42175 ;;		Unchanged: 0/0
 42176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42177 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42178 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42179 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42180 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42181 ;;Total ram usage:        1 bytes
 42182 ;; Hardware stack levels used:    1
 42183 ;; Hardware stack levels required when called:   14
 42184 ;; This function calls:
 42185 ;;		_motor_clear_command_cue
 42186 ;;		_motor_goto_steps
 42187 ;;		_motor_move_endless
 42188 ;;		_motor_set_zero
 42189 ;;		_motor_stop
 42190 ;; This function is called by:
 42191 ;;		_api_parse
 42192 ;; This function uses a non-reentrant model
 42193 ;;
 42194                           
 42195                           	psect	text170
 42196  00F8DC                     __ptext170:
 42197                           	opt stack 0
 42198  00F8DC                     __parse_command_short:
 42199                           	opt stack 14
 42200                           
 42201                           ; BSR set to: 0
 42202                           ;incstack = 0
 42203                           ;__parse_command_short@cmd stored from wreg
 42204  00F8DC  0100               	movlb	0	; () banked
 42205  00F8DE  6F9E               	movwf	__parse_command_short@cmd& (0+255),b
 42206                           
 42207                           ;api.c: 331: switch(cmd)
 42208  00F8E0  D072               	goto	l2314
 42209  00F8E2                     
 42210                           ;api.c: 349: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42211  00F8E2  0E01               	movlw	1
 42212  00F8E4  0101               	movlb	1	; () banked
 42213  00F8E6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42214                           
 42215                           ;api.c: 350: break;
 42216  00F8E8  0012               	return	
 42217  00F8EA                     
 42218                           ;api.c: 353: os.displayState = DISPLAY_STATE_SETUP1_CONFIRM;
 42219                           
 42220                           ; BSR set to: 1
 42221  00F8EA  0E11               	movlw	17
 42222  00F8EC  0101               	movlb	1	; () banked
 42223  00F8EE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42224                           
 42225                           ;api.c: 354: break;
 42226  00F8F0  0012               	return	
 42227  00F8F2                     
 42228                           ;api.c: 357: os.displayState = DISPLAY_STATE_DIVIDE1_CONFIRM;
 42229                           
 42230                           ; BSR set to: 1
 42231  00F8F2  0E31               	movlw	49
 42232  00F8F4  0101               	movlb	1	; () banked
 42233  00F8F6  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42234                           
 42235                           ;api.c: 358: break;
 42236  00F8F8  0012               	return	
 42237  00F8FA                     
 42238                           ;api.c: 361: os.displayState = DISPLAY_STATE_ARC1_CONFIRM;
 42239                           
 42240                           ; BSR set to: 1
 42241  00F8FA  0E51               	movlw	81
 42242  00F8FC  0101               	movlb	1	; () banked
 42243  00F8FE  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42244                           
 42245                           ;api.c: 362: break;
 42246  00F900  0012               	return	
 42247  00F902                     
 42248                           ;api.c: 365: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42249                           
 42250                           ; BSR set to: 1
 42251  00F902  0E82               	movlw	130
 42252  00F904  0101               	movlb	1	; () banked
 42253  00F906  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42254                           
 42255                           ;api.c: 366: break;
 42256  00F908  0012               	return	
 42257  00F90A                     
 42258                           ;api.c: 369: os.displayState = DISPLAY_STATE_ZERO_NORMAL;
 42259                           
 42260                           ; BSR set to: 1
 42261  00F90A  0E71               	movlw	113
 42262  00F90C  0101               	movlb	1	; () banked
 42263  00F90E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42264                           
 42265                           ;api.c: 370: break;
 42266  00F910  0012               	return	
 42267  00F912                     
 42268                           ;api.c: 373: motor_set_zero(MOTOR_DIRECTION_CCW);
 42269                           
 42270                           ; BSR set to: 1
 42271  00F912  0EFF               	movlw	255
 42272  00F914  EC49  F0AA         	call	_motor_set_zero
 42273                           
 42274                           ;api.c: 374: break;
 42275  00F918  0012               	return	
 42276  00F91A                     
 42277                           ;api.c: 377: motor_set_zero(MOTOR_DIRECTION_CW);
 42278  00F91A  0E01               	movlw	1
 42279  00F91C  EC49  F0AA         	call	_motor_set_zero
 42280                           
 42281                           ;api.c: 378: break;
 42282  00F920  0012               	return	
 42283  00F922                     
 42284                           ;api.c: 381: motor_goto_steps(MOTOR_DIRECTION_SHORTEST, 0, 0xFFFF, MOTOR_OVERSHOOT_WITH_
      +                          OVERSHOOT);
 42285  00F922  0E00               	movlw	0
 42286  00F924  0100               	movlb	0	; () banked
 42287  00F926  6F92               	movwf	motor_goto_steps@position& (0+255),b
 42288  00F928  0E00               	movlw	0
 42289  00F92A  6F93               	movwf	(motor_goto_steps@position+1)& (0+255),b
 42290  00F92C  0E00               	movlw	0
 42291  00F92E  6F94               	movwf	(motor_goto_steps@position+2)& (0+255),b
 42292  00F930  0E00               	movlw	0
 42293  00F932  6F95               	movwf	(motor_goto_steps@position+3)& (0+255),b
 42294  00F934  0EFF               	movlw	255
 42295  00F936  6F97               	movwf	(motor_goto_steps@speed+1)& (0+255),b
 42296  00F938  6996               	setf	motor_goto_steps@speed& (0+255),b
 42297  00F93A  0E00               	movlw	0
 42298  00F93C  6F98               	movwf	motor_goto_steps@overshoot& (0+255),b
 42299  00F93E  0E00               	movlw	0
 42300  00F940  EC4E  F09B         	call	_motor_goto_steps
 42301                           
 42302                           ;api.c: 383: os.displayState = DISPLAY_STATE_MAIN_ZERO;
 42303  00F944  0E05               	movlw	5
 42304  00F946  0101               	movlb	1	; () banked
 42305  00F948  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42306                           
 42307                           ; BSR set to: 1
 42308                           ;api.c: 384: os.divide_position = 0;
 42309  00F94A  0E00               	movlw	0
 42310  00F94C  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 42311  00F94E  0E00               	movlw	0
 42312  00F950  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 42313  00F952                     
 42314                           ;api.c: 387: --os.encoder2Count;
 42315                           
 42316                           ; BSR set to: 1
 42317  00F952  0101               	movlb	1	; () banked
 42318  00F954  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 42319                           
 42320                           ;api.c: 388: break;
 42321  00F956  0012               	return	
 42322  00F958                     
 42323                           ;api.c: 391: ++os.encoder2Count;
 42324                           
 42325                           ; BSR set to: 1
 42326  00F958  0101               	movlb	1	; () banked
 42327  00F95A  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 42328                           
 42329                           ;api.c: 392: break;
 42330  00F95C  0012               	return	
 42331  00F95E                     
 42332                           ;api.c: 395: ++os.button2;
 42333                           
 42334                           ; BSR set to: 1
 42335  00F95E  0101               	movlb	1	; () banked
 42336  00F960  2B6A               	incf	(_os+6)& (0+255),f,b	;volatile
 42337                           
 42338                           ;api.c: 396: break;
 42339  00F962  0012               	return	
 42340  00F964                     
 42341                           ;api.c: 399: --os.encoder1Count;
 42342                           
 42343                           ; BSR set to: 1
 42344  00F964  0101               	movlb	1	; () banked
 42345  00F966  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 42346                           
 42347                           ;api.c: 400: break;
 42348  00F968  0012               	return	
 42349  00F96A                     
 42350                           ;api.c: 403: ++os.encoder1Count;
 42351                           
 42352                           ; BSR set to: 1
 42353  00F96A  0101               	movlb	1	; () banked
 42354  00F96C  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 42355                           
 42356                           ;api.c: 404: break;
 42357  00F96E  0012               	return	
 42358  00F970                     
 42359                           ;api.c: 407: ++os.button1;
 42360                           
 42361                           ; BSR set to: 1
 42362  00F970  0101               	movlb	1	; () banked
 42363  00F972  2B68               	incf	(_os+4)& (0+255),f,b	;volatile
 42364                           
 42365                           ;api.c: 408: break;
 42366  00F974  0012               	return	
 42367  00F976                     
 42368                           ;api.c: 411: if(!os.busy)
 42369                           
 42370                           ; BSR set to: 1
 42371  00F976  0101               	movlb	1	; () banked
 42372  00F978  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42373  00F97A  A4D8               	btfss	status,2,c
 42374  00F97C  0012               	return	
 42375                           
 42376                           ; BSR set to: 1
 42377                           ;api.c: 412: {;api.c: 413: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42378  00F97E  0E84               	movlw	132
 42379  00F980  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42380                           
 42381                           ; BSR set to: 1
 42382                           ;api.c: 414: motor_move_endless(MOTOR_DIRECTION_CCW, os.manual_speed);
 42383  00F982  C189  F08C         	movff	_os+37,motor_move_endless@speed	;volatile
 42384  00F986  C18A  F08D         	movff	_os+38,motor_move_endless@speed+1	;volatile
 42385  00F98A  0EFF               	movlw	255
 42386  00F98C  EC3D  F0AC         	call	_motor_move_endless
 42387                           
 42388                           ;api.c: 415: };api.c: 416: break;
 42389  00F990  0012               	return	
 42390  00F992                     
 42391                           ;api.c: 419: if(!os.busy)
 42392  00F992  0101               	movlb	1	; () banked
 42393  00F994  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42394  00F996  A4D8               	btfss	status,2,c
 42395  00F998  0012               	return	
 42396                           
 42397                           ; BSR set to: 1
 42398                           ;api.c: 420: {;api.c: 421: os.displayState = DISPLAY_STATE_MANUAL_BUSY;
 42399  00F99A  0E84               	movlw	132
 42400  00F99C  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42401                           
 42402                           ; BSR set to: 1
 42403                           ;api.c: 422: motor_move_endless(MOTOR_DIRECTION_CW, os.manual_speed);
 42404  00F99E  C189  F08C         	movff	_os+37,motor_move_endless@speed	;volatile
 42405  00F9A2  C18A  F08D         	movff	_os+38,motor_move_endless@speed+1	;volatile
 42406  00F9A6  0E01               	movlw	1
 42407  00F9A8  EC3D  F0AC         	call	_motor_move_endless
 42408                           
 42409                           ;api.c: 423: };api.c: 424: break;
 42410  00F9AC  0012               	return	
 42411  00F9AE                     
 42412                           ;api.c: 427: if(os.busy)
 42413  00F9AE  0101               	movlb	1	; () banked
 42414  00F9B0  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42415  00F9B2  B4D8               	btfsc	status,2,c
 42416  00F9B4  0012               	return	
 42417                           
 42418                           ; BSR set to: 1
 42419                           ;api.c: 428: {;api.c: 429: motor_stop();
 42420  00F9B6  EC33  F0A8         	call	_motor_stop	;wreg free
 42421                           
 42422                           ;api.c: 430: motor_clear_command_cue();
 42423  00F9BA  EC9D  F0AE         	call	_motor_clear_command_cue	;wreg free
 42424                           
 42425                           ;api.c: 431: os.displayState = DISPLAY_STATE_MANUAL_CANCEL;
 42426  00F9BE  0E82               	movlw	130
 42427  00F9C0  0101               	movlb	1	; () banked
 42428  00F9C2  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42429                           
 42430                           ; BSR set to: 1
 42431                           ;api.c: 434: }
 42432                           
 42433                           ; BSR set to: 1
 42434                           ;api.c: 432: };api.c: 433: break;
 42435  00F9C4  0012               	return	
 42436  00F9C6                     l2314:
 42437                           
 42438                           ; BSR set to: 1
 42439  00F9C6  0100               	movlb	0	; () banked
 42440  00F9C8  519E               	movf	__parse_command_short@cmd& (0+255),w,b
 42441                           
 42442                           ; Switch size 1, requested type "space"
 42443                           ; Number of cases is 18, Range of values is 32 to 56
 42444                           ; switch strategies available:
 42445                           ; Name         Instructions Cycles
 42446                           ; simple_byte           55    28 (average)
 42447                           ;	Chosen strategy is simple_byte
 42448  00F9CA  0A20               	xorlw	32	; case 32
 42449  00F9CC  B4D8               	btfsc	status,2,c
 42450  00F9CE  D789               	goto	l2315
 42451  00F9D0  0A01               	xorlw	1	; case 33
 42452  00F9D2  B4D8               	btfsc	status,2,c
 42453  00F9D4  D78A               	goto	l2317
 42454  00F9D6  0A03               	xorlw	3	; case 34
 42455  00F9D8  B4D8               	btfsc	status,2,c
 42456  00F9DA  D78B               	goto	l2318
 42457  00F9DC  0A01               	xorlw	1	; case 35
 42458  00F9DE  B4D8               	btfsc	status,2,c
 42459  00F9E0  D78C               	goto	l2319
 42460  00F9E2  0A07               	xorlw	7	; case 36
 42461  00F9E4  B4D8               	btfsc	status,2,c
 42462  00F9E6  D78D               	goto	l2320
 42463  00F9E8  0A01               	xorlw	1	; case 37
 42464  00F9EA  B4D8               	btfsc	status,2,c
 42465  00F9EC  D78E               	goto	l2321
 42466  00F9EE  0A03               	xorlw	3	; case 38
 42467  00F9F0  B4D8               	btfsc	status,2,c
 42468  00F9F2  D78F               	goto	l2322
 42469  00F9F4  0A01               	xorlw	1	; case 39
 42470  00F9F6  B4D8               	btfsc	status,2,c
 42471  00F9F8  D790               	goto	l2323
 42472  00F9FA  0A0F               	xorlw	15	; case 40
 42473  00F9FC  B4D8               	btfsc	status,2,c
 42474  00F9FE  D791               	goto	l2324
 42475  00FA00  0A18               	xorlw	24	; case 48
 42476  00FA02  B4D8               	btfsc	status,2,c
 42477  00FA04  D7A6               	goto	l2325
 42478  00FA06  0A01               	xorlw	1	; case 49
 42479  00FA08  B4D8               	btfsc	status,2,c
 42480  00FA0A  D7A6               	goto	l2326
 42481  00FA0C  0A03               	xorlw	3	; case 50
 42482  00FA0E  B4D8               	btfsc	status,2,c
 42483  00FA10  D7A6               	goto	l2327
 42484  00FA12  0A01               	xorlw	1	; case 51
 42485  00FA14  B4D8               	btfsc	status,2,c
 42486  00FA16  D7A6               	goto	l2328
 42487  00FA18  0A07               	xorlw	7	; case 52
 42488  00FA1A  B4D8               	btfsc	status,2,c
 42489  00FA1C  D7A6               	goto	l2329
 42490  00FA1E  0A01               	xorlw	1	; case 53
 42491  00FA20  B4D8               	btfsc	status,2,c
 42492  00FA22  D7A6               	goto	l2330
 42493  00FA24  0A03               	xorlw	3	; case 54
 42494  00FA26  B4D8               	btfsc	status,2,c
 42495  00FA28  D7A6               	goto	l2331
 42496  00FA2A  0A01               	xorlw	1	; case 55
 42497  00FA2C  B4D8               	btfsc	status,2,c
 42498  00FA2E  D7B1               	goto	l2333
 42499  00FA30  0A0F               	xorlw	15	; case 56
 42500  00FA32  A4D8               	btfss	status,2,c
 42501  00FA34  0012               	return	
 42502  00FA36  D7BB               	goto	l2335
 42503  00FA38                     __end_of__parse_command_short:
 42504                           	opt stack 0
 42505                           tosu	equ	0xFFF
 42506                           tosh	equ	0xFFE
 42507                           tosl	equ	0xFFD
 42508                           pclath	equ	0xFFA
 42509                           tblptru	equ	0xFF8
 42510                           tblptrh	equ	0xFF7
 42511                           tblptrl	equ	0xFF6
 42512                           tablat	equ	0xFF5
 42513                           prodh	equ	0xFF4
 42514                           prodl	equ	0xFF3
 42515                           intcon	equ	0xFF2
 42516                           indf0	equ	0xFEF
 42517                           postinc0	equ	0xFEE
 42518                           fsr0h	equ	0xFEA
 42519                           fsr0l	equ	0xFE9
 42520                           wreg	equ	0xFE8
 42521                           indf1	equ	0xFE7
 42522                           postinc1	equ	0xFE6
 42523                           postdec1	equ	0xFE5
 42524                           plusw1	equ	0xFE3
 42525                           fsr1h	equ	0xFE2
 42526                           fsr1l	equ	0xFE1
 42527                           indf2	equ	0xFDF
 42528                           postinc2	equ	0xFDE
 42529                           postdec2	equ	0xFDD
 42530                           plusw2	equ	0xFDB
 42531                           fsr2h	equ	0xFDA
 42532                           fsr2l	equ	0xFD9
 42533                           status	equ	0xFD8
 42534                           
 42535 ;; *************** function _motor_stop *****************
 42536 ;; Defined at:
 42537 ;;		line 853 in file "motor.c"
 42538 ;; Parameters:    Size  Location     Type
 42539 ;;		None
 42540 ;; Auto vars:     Size  Location     Type
 42541 ;;		None
 42542 ;; Return value:  Size  Location     Type
 42543 ;;                  1    wreg      void 
 42544 ;; Registers used:
 42545 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 42546 ;; Tracked objects:
 42547 ;;		On entry : 0/0
 42548 ;;		On exit  : 0/0
 42549 ;;		Unchanged: 0/0
 42550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42553 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42554 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42555 ;;Total ram usage:        2 bytes
 42556 ;; Hardware stack levels used:    1
 42557 ;; Hardware stack levels required when called:   10
 42558 ;; This function calls:
 42559 ;;		Nothing
 42560 ;; This function is called by:
 42561 ;;		__parse_command_short
 42562 ;;		_encoder_statemachine
 42563 ;; This function uses a non-reentrant model
 42564 ;;
 42565                           
 42566                           	psect	text171
 42567  015066                     __ptext171:
 42568                           	opt stack 0
 42569  015066                     _motor_stop:
 42570                           	opt stack 19
 42571                           
 42572                           ;motor.c: 856: INTCONbits.GIE = 0;
 42573                           
 42574                           ;incstack = 0
 42575  015066  9EF2               	bcf	intcon,7,c	;volatile
 42576                           
 42577                           ;motor.c: 859: motor_move_type=MOTOR_MOVE_TYPE_NORMAL;
 42578  015068  0E00               	movlw	0
 42579  01506A  0101               	movlb	1	; () banked
 42580  01506C  6F49               	movwf	_motor_move_type& (0+255),b
 42581                           
 42582                           ; BSR set to: 1
 42583                           ;motor.c: 860: motor_final_stepcount = motor_current_stepcount + motor_steps_lookup[moto
      +                          r_current_speed];
 42584  01506E  90D8               	bcf	status,0,c
 42585  015070  0100               	movlb	0	; () banked
 42586  015072  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 42587  015074  6EF6               	movwf	tblptrl,c
 42588  015076  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 42589  015078  6EF7               	movwf	tblptrh,c
 42590  01507A  0E61               	movlw	low _motor_steps_lookup
 42591  01507C  26F6               	addwf	tblptrl,f,c
 42592  01507E  0E94               	movlw	high _motor_steps_lookup
 42593  015080  22F7               	addwfc	tblptrh,f,c
 42594  015082                     	if	1	;There are 3 active tblptr bytes
 42595  015082  6AF8               	clrf	tblptru,c
 42596  015084  0E00               	movlw	low (__mediumconst shr (0+16))
 42597  015086  22F8               	addwfc	tblptru,f,c
 42598  015088                     	endif
 42599  015088  0009               	tblrd		*+
 42600  01508A  CFF5 F060          	movff	tablat,??_motor_stop
 42601  01508E  0009               	tblrd		*+
 42602  015090  CFF5 F061          	movff	tablat,??_motor_stop+1
 42603  015094  5160               	movf	??_motor_stop& (0+255),w,b
 42604  015096  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 42605  015098  0101               	movlb	1	; () banked
 42606  01509A  6F21               	movwf	_motor_final_stepcount& (0+255),b	;volatile
 42607  01509C  0100               	movlb	0	; () banked
 42608  01509E  5161               	movf	(??_motor_stop+1)& (0+255),w,b
 42609  0150A0  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 42610  0150A2  0101               	movlb	1	; () banked
 42611  0150A4  6F22               	movwf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 42612  0150A6  0E00               	movlw	0
 42613  0150A8  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 42614  0150AA  6F23               	movwf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 42615  0150AC  0E00               	movlw	0
 42616  0150AE  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 42617  0150B0  6F24               	movwf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 42618                           
 42619                           ; BSR set to: 1
 42620                           ;motor.c: 863: INTCONbits.GIE = 1;
 42621  0150B2  8EF2               	bsf	intcon,7,c	;volatile
 42622                           
 42623                           ; BSR set to: 1
 42624  0150B4  0012               	return		;funcret
 42625  0150B6                     __end_of_motor_stop:
 42626                           	opt stack 0
 42627                           tosu	equ	0xFFF
 42628                           tosh	equ	0xFFE
 42629                           tosl	equ	0xFFD
 42630                           pclath	equ	0xFFA
 42631                           tblptru	equ	0xFF8
 42632                           tblptrh	equ	0xFF7
 42633                           tblptrl	equ	0xFF6
 42634                           tablat	equ	0xFF5
 42635                           prodh	equ	0xFF4
 42636                           prodl	equ	0xFF3
 42637                           intcon	equ	0xFF2
 42638                           indf0	equ	0xFEF
 42639                           postinc0	equ	0xFEE
 42640                           fsr0h	equ	0xFEA
 42641                           fsr0l	equ	0xFE9
 42642                           wreg	equ	0xFE8
 42643                           indf1	equ	0xFE7
 42644                           postinc1	equ	0xFE6
 42645                           postdec1	equ	0xFE5
 42646                           plusw1	equ	0xFE3
 42647                           fsr1h	equ	0xFE2
 42648                           fsr1l	equ	0xFE1
 42649                           indf2	equ	0xFDF
 42650                           postinc2	equ	0xFDE
 42651                           postdec2	equ	0xFDD
 42652                           plusw2	equ	0xFDB
 42653                           fsr2h	equ	0xFDA
 42654                           fsr2l	equ	0xFD9
 42655                           status	equ	0xFD8
 42656                           
 42657 ;; *************** function _motor_set_zero *****************
 42658 ;; Defined at:
 42659 ;;		line 968 in file "motor.c"
 42660 ;; Parameters:    Size  Location     Type
 42661 ;;  direction       1    wreg     enum E6622
 42662 ;; Auto vars:     Size  Location     Type
 42663 ;;  direction       1   10[BANK0 ] enum E6622
 42664 ;; Return value:  Size  Location     Type
 42665 ;;                  1    wreg      void 
 42666 ;; Registers used:
 42667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42668 ;; Tracked objects:
 42669 ;;		On entry : 0/0
 42670 ;;		On exit  : 0/0
 42671 ;;		Unchanged: 0/0
 42672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42674 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42676 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42677 ;;Total ram usage:        1 bytes
 42678 ;; Hardware stack levels used:    1
 42679 ;; Hardware stack levels required when called:   13
 42680 ;; This function calls:
 42681 ;;		__motor_move_back_forth
 42682 ;; This function is called by:
 42683 ;;		__parse_command_short
 42684 ;;		_encoder_statemachine
 42685 ;; This function uses a non-reentrant model
 42686 ;;
 42687                           
 42688                           	psect	text172
 42689  015492                     __ptext172:
 42690                           	opt stack 0
 42691  015492                     _motor_set_zero:
 42692                           	opt stack 16
 42693                           
 42694                           ; BSR set to: 1
 42695                           ;incstack = 0
 42696                           ;motor_set_zero@direction stored from wreg
 42697  015492  0100               	movlb	0	; () banked
 42698  015494  6F6A               	movwf	motor_set_zero@direction& (0+255),b
 42699                           
 42700                           ;motor.c: 971: os.approach_direction = direction;
 42701  015496  C06A  F178         	movff	motor_set_zero@direction,_os+20	;volatile
 42702                           
 42703                           ;motor.c: 972: os.displayState = DISPLAY_STATE_MAIN_SETUP;
 42704  01549A  0E01               	movlw	1
 42705  01549C  0101               	movlb	1	; () banked
 42706  01549E  6F73               	movwf	(_os+15)& (0+255),b	;volatile
 42707                           
 42708                           ; BSR set to: 1
 42709                           ;motor.c: 973: os.current_position_in_steps = 0;
 42710  0154A0  0E00               	movlw	0
 42711  0154A2  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 42712  0154A4  0E00               	movlw	0
 42713  0154A6  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 42714  0154A8  0E00               	movlw	0
 42715  0154AA  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 42716  0154AC  0E00               	movlw	0
 42717  0154AE  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 42718                           
 42719                           ; BSR set to: 1
 42720                           ;motor.c: 974: os.absolute_position = 0;
 42721  0154B0  0E00               	movlw	0
 42722  0154B2  6F70               	movwf	(_os+12)& (0+255),b	;volatile
 42723  0154B4  0E00               	movlw	0
 42724  0154B6  6F6F               	movwf	(_os+11)& (0+255),b	;volatile
 42725                           
 42726                           ; BSR set to: 1
 42727                           ;motor.c: 975: os.current_position_in_degrees = 0;
 42728  0154B8  0E00               	movlw	0
 42729  0154BA  6F72               	movwf	(_os+14)& (0+255),b	;volatile
 42730  0154BC  0E00               	movlw	0
 42731  0154BE  6F71               	movwf	(_os+13)& (0+255),b	;volatile
 42732                           
 42733                           ; BSR set to: 1
 42734                           ;motor.c: 976: os.divide_position = 0;
 42735  0154C0  0E00               	movlw	0
 42736  0154C2  6F7D               	movwf	(_os+25)& (0+255),b	;volatile
 42737  0154C4  0E00               	movlw	0
 42738  0154C6  6F7C               	movwf	(_os+24)& (0+255),b	;volatile
 42739                           
 42740                           ; BSR set to: 1
 42741                           ;motor.c: 979: _motor_move_back_forth();
 42742  0154C8  ECB5  F099         	call	__motor_move_back_forth	;wreg free
 42743  0154CC  0012               	return		;funcret
 42744  0154CE                     __end_of_motor_set_zero:
 42745                           	opt stack 0
 42746                           tosu	equ	0xFFF
 42747                           tosh	equ	0xFFE
 42748                           tosl	equ	0xFFD
 42749                           pclath	equ	0xFFA
 42750                           tblptru	equ	0xFF8
 42751                           tblptrh	equ	0xFF7
 42752                           tblptrl	equ	0xFF6
 42753                           tablat	equ	0xFF5
 42754                           prodh	equ	0xFF4
 42755                           prodl	equ	0xFF3
 42756                           intcon	equ	0xFF2
 42757                           indf0	equ	0xFEF
 42758                           postinc0	equ	0xFEE
 42759                           fsr0h	equ	0xFEA
 42760                           fsr0l	equ	0xFE9
 42761                           wreg	equ	0xFE8
 42762                           indf1	equ	0xFE7
 42763                           postinc1	equ	0xFE6
 42764                           postdec1	equ	0xFE5
 42765                           plusw1	equ	0xFE3
 42766                           fsr1h	equ	0xFE2
 42767                           fsr1l	equ	0xFE1
 42768                           indf2	equ	0xFDF
 42769                           postinc2	equ	0xFDE
 42770                           postdec2	equ	0xFDD
 42771                           plusw2	equ	0xFDB
 42772                           fsr2h	equ	0xFDA
 42773                           fsr2l	equ	0xFD9
 42774                           status	equ	0xFD8
 42775                           
 42776 ;; *************** function __motor_move_back_forth *****************
 42777 ;; Defined at:
 42778 ;;		line 296 in file "motor.c"
 42779 ;; Parameters:    Size  Location     Type
 42780 ;;		None
 42781 ;; Auto vars:     Size  Location     Type
 42782 ;;  return_value    1    9[BANK0 ] enum E6639
 42783 ;;  return_value    1    8[BANK0 ] enum E6639
 42784 ;; Return value:  Size  Location     Type
 42785 ;;                  1    wreg      enum E6639
 42786 ;; Registers used:
 42787 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42788 ;; Tracked objects:
 42789 ;;		On entry : 0/0
 42790 ;;		On exit  : 0/0
 42791 ;;		Unchanged: 0/0
 42792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42794 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42796 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42797 ;;Total ram usage:        2 bytes
 42798 ;; Hardware stack levels used:    1
 42799 ;; Hardware stack levels required when called:   12
 42800 ;; This function calls:
 42801 ;;		__motor_schedule_command
 42802 ;;		_motor_items_in_cue
 42803 ;; This function is called by:
 42804 ;;		_motor_set_zero
 42805 ;; This function uses a non-reentrant model
 42806 ;;
 42807                           
 42808                           	psect	text173
 42809  01336A                     __ptext173:
 42810                           	opt stack 0
 42811  01336A                     __motor_move_back_forth:
 42812                           	opt stack 16
 42813                           
 42814                           ;motor.c: 298: motorReturnValue_t return_value_1;;motor.c: 299: motorReturnValue_t retur
      +                          n_value_2;;motor.c: 301: if(os.busy || motor_items_in_cue()!=0)
 42815                           
 42816                           ;incstack = 0
 42817  01336A  0101               	movlb	1	; () banked
 42818  01336C  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 42819  01336E  A4D8               	btfss	status,2,c
 42820  013370  0012               	return	
 42821                           
 42822                           ; BSR set to: 1
 42823  013372  ECA3  F0AE         	call	_motor_items_in_cue	;wreg free
 42824  013376  0900               	iorlw	0
 42825  013378  A4D8               	btfss	status,2,c
 42826  01337A  0012               	return	
 42827                           
 42828                           ;motor.c: 305: };motor.c: 307: if(config.overshoot_in_steps==0)
 42829                           
 42830                           ;motor.c: 302: {;motor.c: 304: return MOTOR_RETURN_VALUE_BUSY;;	Return value of __motor_
      +                          move_back_forth is never used
 42831  01337C  0101               	movlb	1	; () banked
 42832  01337E  519B               	movf	(_config+5)& (0+255),w,b
 42833  013380  119C               	iorwf	(_config+6)& (0+255),w,b
 42834  013382  B4D8               	btfsc	status,2,c
 42835  013384  0012               	return	
 42836                           
 42837                           ; BSR set to: 1
 42838                           ;motor.c: 311: };motor.c: 313: if(os.approach_direction==MOTOR_DIRECTION_CW)
 42839                           
 42840                           ; BSR set to: 1
 42841                           
 42842                           ; BSR set to: 1
 42843                           ;motor.c: 308: {;motor.c: 310: return MOTOR_RETURN_VALUE_OK;;	Return value of __motor_mo
      +                          ve_back_forth is never used
 42844  013386  0578               	decf	(_os+20)& (0+255),w,b	;volatile
 42845  013388  A4D8               	btfss	status,2,c
 42846  01338A  D022               	goto	l2487
 42847                           
 42848                           ; BSR set to: 1
 42849                           ;motor.c: 314: {;motor.c: 315: return_value_1 = _motor_schedule_command(MOTOR_DIRECTION_
      +                          CCW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42850  01338C  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42851  013390  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42852  013394  0100               	movlb	0	; () banked
 42853  013396  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42854  013398  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42855  01339A  0EFF               	movlw	255
 42856  01339C  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42857  01339E  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42858  0133A0  0E00               	movlw	0
 42859  0133A2  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42860  0133A4  0EFF               	movlw	255
 42861  0133A6  EC78  F08E         	call	__motor_schedule_command
 42862  0133AA  0100               	movlb	0	; () banked
 42863  0133AC  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 42864                           
 42865                           ;motor.c: 316: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CW, config.overs
      +                          hoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42866  0133AE  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42867  0133B2  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42868  0133B6  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42869  0133B8  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42870  0133BA  0EFF               	movlw	255
 42871  0133BC  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42872  0133BE  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42873  0133C0  0E00               	movlw	0
 42874  0133C2  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42875  0133C4  0E01               	movlw	1
 42876  0133C6  EC78  F08E         	call	__motor_schedule_command
 42877  0133CA  0100               	movlb	0	; () banked
 42878  0133CC  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 42879                           
 42880                           ;motor.c: 317: }
 42881  0133CE  0012               	return	
 42882  0133D0                     l2487:
 42883                           
 42884                           ;motor.c: 318: else;motor.c: 319: {;motor.c: 320: return_value_1 = _motor_schedule_comma
      +                          nd(MOTOR_DIRECTION_CW, config.overshoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42885                           
 42886                           ; BSR set to: 0
 42887  0133D0  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42888  0133D4  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42889  0133D8  0100               	movlb	0	; () banked
 42890  0133DA  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42891  0133DC  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42892  0133DE  0EFF               	movlw	255
 42893  0133E0  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42894  0133E2  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42895  0133E4  0E00               	movlw	0
 42896  0133E6  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42897  0133E8  0E01               	movlw	1
 42898  0133EA  EC78  F08E         	call	__motor_schedule_command
 42899  0133EE  0100               	movlb	0	; () banked
 42900  0133F0  6F68               	movwf	__motor_move_back_forth@return_value_1& (0+255),b
 42901                           
 42902                           ;motor.c: 321: return_value_2 = _motor_schedule_command(MOTOR_DIRECTION_CCW, config.over
      +                          shoot_in_steps, 0xFFFF, MOTOR_MOVE_TYPE_NORMAL);
 42903  0133F2  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 42904  0133F6  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 42905  0133FA  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 42906  0133FC  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 42907  0133FE  0EFF               	movlw	255
 42908  013400  6F65               	movwf	(__motor_schedule_command@speed+1)& (0+255),b
 42909  013402  6964               	setf	__motor_schedule_command@speed& (0+255),b
 42910  013404  0E00               	movlw	0
 42911  013406  6F66               	movwf	__motor_schedule_command@type& (0+255),b
 42912  013408  0EFF               	movlw	255
 42913  01340A  EC78  F08E         	call	__motor_schedule_command
 42914  01340E  0100               	movlb	0	; () banked
 42915  013410  6F69               	movwf	__motor_move_back_forth@return_value_2& (0+255),b
 42916                           
 42917                           ; BSR set to: 0
 42918                           ;motor.c: 330: else;motor.c: 331: {;motor.c: 332: return return_value_2;;	Return value o
      +                          f __motor_move_back_forth is never used
 42919                           
 42920                           ; BSR set to: 0
 42921                           ;motor.c: 329: }
 42922                           
 42923                           ; BSR set to: 0
 42924                           ;motor.c: 327: {;motor.c: 328: return return_value_1;;	Return value of __motor_move_back
      +                          _forth is never used
 42925                           
 42926                           ; BSR set to: 0
 42927                           
 42928                           ; BSR set to: 0
 42929  013412  0012               	return	
 42930  013414                     __end_of__motor_move_back_forth:
 42931                           	opt stack 0
 42932                           tosu	equ	0xFFF
 42933                           tosh	equ	0xFFE
 42934                           tosl	equ	0xFFD
 42935                           pclath	equ	0xFFA
 42936                           tblptru	equ	0xFF8
 42937                           tblptrh	equ	0xFF7
 42938                           tblptrl	equ	0xFF6
 42939                           tablat	equ	0xFF5
 42940                           prodh	equ	0xFF4
 42941                           prodl	equ	0xFF3
 42942                           intcon	equ	0xFF2
 42943                           indf0	equ	0xFEF
 42944                           postinc0	equ	0xFEE
 42945                           fsr0h	equ	0xFEA
 42946                           fsr0l	equ	0xFE9
 42947                           wreg	equ	0xFE8
 42948                           indf1	equ	0xFE7
 42949                           postinc1	equ	0xFE6
 42950                           postdec1	equ	0xFE5
 42951                           plusw1	equ	0xFE3
 42952                           fsr1h	equ	0xFE2
 42953                           fsr1l	equ	0xFE1
 42954                           indf2	equ	0xFDF
 42955                           postinc2	equ	0xFDE
 42956                           postdec2	equ	0xFDD
 42957                           plusw2	equ	0xFDB
 42958                           fsr2h	equ	0xFDA
 42959                           fsr2l	equ	0xFD9
 42960                           status	equ	0xFD8
 42961                           
 42962 ;; *************** function _motor_move_endless *****************
 42963 ;; Defined at:
 42964 ;;		line 1100 in file "motor.c"
 42965 ;; Parameters:    Size  Location     Type
 42966 ;;  direction       1    wreg     enum E6622
 42967 ;;  speed           2   44[BANK0 ] unsigned int 
 42968 ;; Auto vars:     Size  Location     Type
 42969 ;;  direction       1   46[BANK0 ] enum E6622
 42970 ;; Return value:  Size  Location     Type
 42971 ;;                  1    wreg      enum E6782
 42972 ;; Registers used:
 42973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 42974 ;; Tracked objects:
 42975 ;;		On entry : 0/0
 42976 ;;		On exit  : 0/0
 42977 ;;		Unchanged: 0/0
 42978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42979 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42980 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42981 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42982 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42983 ;;Total ram usage:        3 bytes
 42984 ;; Hardware stack levels used:    1
 42985 ;; Hardware stack levels required when called:   13
 42986 ;; This function calls:
 42987 ;;		__motor_move_steps
 42988 ;; This function is called by:
 42989 ;;		__parse_command_short
 42990 ;;		_encoder_statemachine
 42991 ;; This function uses a non-reentrant model
 42992 ;;
 42993                           
 42994                           	psect	text174
 42995  01587A                     __ptext174:
 42996                           	opt stack 0
 42997  01587A                     _motor_move_endless:
 42998                           	opt stack 16
 42999                           
 43000                           ;incstack = 0
 43001                           ;motor_move_endless@direction stored from wreg
 43002  01587A  0100               	movlb	0	; () banked
 43003  01587C  6F8E               	movwf	motor_move_endless@direction& (0+255),b
 43004                           
 43005                           ;motor.c: 1102: return _motor_move_steps(direction, 0xFFFFFFFF, speed, MOTOR_OVERSHOOT_N
      +                          O_OVERSHOOT, MOTOR_MOVE_TYPE_ENDLESS);;	Return value of _motor_move_endless is never use
      +                          d
 43006  01587E  0EFF               	movlw	255
 43007  015880  0100               	movlb	0	; () banked
 43008  015882  6F7D               	movwf	__motor_move_steps@distance_in_steps& (0+255),b
 43009  015884  0EFF               	movlw	255
 43010  015886  6F7E               	movwf	(__motor_move_steps@distance_in_steps+1)& (0+255),b
 43011  015888  0EFF               	movlw	255
 43012  01588A  6F7F               	movwf	(__motor_move_steps@distance_in_steps+2)& (0+255),b
 43013  01588C  0EFF               	movlw	255
 43014  01588E  6F80               	movwf	(__motor_move_steps@distance_in_steps+3)& (0+255),b
 43015  015890  C08C  F081         	movff	motor_move_endless@speed,__motor_move_steps@speed
 43016  015894  C08D  F082         	movff	motor_move_endless@speed+1,__motor_move_steps@speed+1
 43017  015898  0E01               	movlw	1
 43018  01589A  6F83               	movwf	__motor_move_steps@overshoot& (0+255),b
 43019  01589C  0E01               	movlw	1
 43020  01589E  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43021  0158A0  518E               	movf	motor_move_endless@direction& (0+255),w,b
 43022  0158A2  ECC2  F076         	call	__motor_move_steps
 43023  0158A6  0012               	return	
 43024  0158A8                     __end_of_motor_move_endless:
 43025                           	opt stack 0
 43026                           tosu	equ	0xFFF
 43027                           tosh	equ	0xFFE
 43028                           tosl	equ	0xFFD
 43029                           pclath	equ	0xFFA
 43030                           tblptru	equ	0xFF8
 43031                           tblptrh	equ	0xFF7
 43032                           tblptrl	equ	0xFF6
 43033                           tablat	equ	0xFF5
 43034                           prodh	equ	0xFF4
 43035                           prodl	equ	0xFF3
 43036                           intcon	equ	0xFF2
 43037                           indf0	equ	0xFEF
 43038                           postinc0	equ	0xFEE
 43039                           fsr0h	equ	0xFEA
 43040                           fsr0l	equ	0xFE9
 43041                           wreg	equ	0xFE8
 43042                           indf1	equ	0xFE7
 43043                           postinc1	equ	0xFE6
 43044                           postdec1	equ	0xFE5
 43045                           plusw1	equ	0xFE3
 43046                           fsr1h	equ	0xFE2
 43047                           fsr1l	equ	0xFE1
 43048                           indf2	equ	0xFDF
 43049                           postinc2	equ	0xFDE
 43050                           postdec2	equ	0xFDD
 43051                           plusw2	equ	0xFDB
 43052                           fsr2h	equ	0xFDA
 43053                           fsr2l	equ	0xFD9
 43054                           status	equ	0xFD8
 43055                           
 43056 ;; *************** function _motor_goto_steps *****************
 43057 ;; Defined at:
 43058 ;;		line 1023 in file "motor.c"
 43059 ;; Parameters:    Size  Location     Type
 43060 ;;  direction       1    wreg     enum E6622
 43061 ;;  position        4   50[BANK0 ] unsigned long 
 43062 ;;  speed           2   54[BANK0 ] unsigned int 
 43063 ;;  overshoot       1   56[BANK0 ] enum E6635
 43064 ;; Auto vars:     Size  Location     Type
 43065 ;;  direction       1   61[BANK0 ] enum E6622
 43066 ;;  distance_in_    4   57[BANK0 ] unsigned long 
 43067 ;; Return value:  Size  Location     Type
 43068 ;;                  1    wreg      enum E6782
 43069 ;; Registers used:
 43070 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43071 ;; Tracked objects:
 43072 ;;		On entry : 0/0
 43073 ;;		On exit  : 0/0
 43074 ;;		Unchanged: 0/0
 43075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43076 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43077 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43079 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43080 ;;Total ram usage:       12 bytes
 43081 ;; Hardware stack levels used:    1
 43082 ;; Hardware stack levels required when called:   13
 43083 ;; This function calls:
 43084 ;;		__motor_calculate_distance
 43085 ;;		__motor_decide_direction
 43086 ;;		__motor_move_steps
 43087 ;; This function is called by:
 43088 ;;		__parse_command_short
 43089 ;;		_motor_divide_jump
 43090 ;;		_motor_divide_jump_to_nearest
 43091 ;;		_encoder_statemachine
 43092 ;; This function uses a non-reentrant model
 43093 ;;
 43094                           
 43095                           	psect	text175
 43096  01369C                     __ptext175:
 43097                           	opt stack 0
 43098  01369C                     _motor_goto_steps:
 43099                           	opt stack 16
 43100                           
 43101                           ;incstack = 0
 43102                           ;motor_goto_steps@direction stored from wreg
 43103  01369C  0100               	movlb	0	; () banked
 43104  01369E  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43105                           
 43106                           ;motor.c: 1025: uint32_t distance_in_steps;;motor.c: 1027: if(position>=config.full_circ
      +                          le_in_steps)
 43107  0136A0  0101               	movlb	1	; () banked
 43108  0136A2  5196               	movf	_config& (0+255),w,b
 43109  0136A4  0100               	movlb	0	; () banked
 43110  0136A6  5D92               	subwf	motor_goto_steps@position& (0+255),w,b
 43111  0136A8  0101               	movlb	1	; () banked
 43112  0136AA  5197               	movf	(_config+1)& (0+255),w,b
 43113  0136AC  0100               	movlb	0	; () banked
 43114  0136AE  5993               	subwfb	(motor_goto_steps@position+1)& (0+255),w,b
 43115  0136B0  0101               	movlb	1	; () banked
 43116  0136B2  5198               	movf	(_config+2)& (0+255),w,b
 43117  0136B4  0100               	movlb	0	; () banked
 43118  0136B6  5994               	subwfb	(motor_goto_steps@position+2)& (0+255),w,b
 43119  0136B8  0101               	movlb	1	; () banked
 43120  0136BA  5199               	movf	(_config+3)& (0+255),w,b
 43121  0136BC  0100               	movlb	0	; () banked
 43122  0136BE  5995               	subwfb	(motor_goto_steps@position+3)& (0+255),w,b
 43123  0136C0  B0D8               	btfsc	status,0,c
 43124  0136C2  0012               	return	
 43125                           
 43126                           ; BSR set to: 0
 43127                           ;motor.c: 1031: };motor.c: 1034: if(direction==MOTOR_DIRECTION_SHORTEST)
 43128                           
 43129                           ; BSR set to: 0
 43130                           
 43131                           ; BSR set to: 0
 43132                           ;motor.c: 1028: {;motor.c: 1030: return MOTOR_RETURN_VALUE_INVALID_POSITION;;	Return val
      +                          ue of _motor_goto_steps is never used
 43133  0136C4  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43134  0136C6  A4D8               	btfss	status,2,c
 43135  0136C8  D00E               	goto	l2645
 43136                           
 43137                           ; BSR set to: 0
 43138                           ;motor.c: 1035: {;motor.c: 1036: direction = _motor_decide_direction(position, overshoot
      +                          );
 43139  0136CA  C092  F07D         	movff	motor_goto_steps@position,__motor_decide_direction@target_position_in_steps
 43140  0136CE  C093  F07E         	movff	motor_goto_steps@position+1,__motor_decide_direction@target_position_in_steps+1
 43141  0136D2  C094  F07F         	movff	motor_goto_steps@position+2,__motor_decide_direction@target_position_in_steps+2
 43142  0136D6  C095  F080         	movff	motor_goto_steps@position+3,__motor_decide_direction@target_position_in_steps+3
 43143  0136DA  C098  F081         	movff	motor_goto_steps@overshoot,__motor_decide_direction@overshoot
 43144  0136DE  EC30  F07A         	call	__motor_decide_direction	;wreg free
 43145  0136E2  0100               	movlb	0	; () banked
 43146  0136E4  6F9D               	movwf	motor_goto_steps@direction& (0+255),b
 43147  0136E6                     l2645:
 43148                           
 43149                           ; BSR set to: 0
 43150                           ;motor.c: 1037: };motor.c: 1040: distance_in_steps = _motor_calculate_distance(direction
      +                          , position);
 43151                           
 43152                           ; BSR set to: 0
 43153  0136E6  C092  F060         	movff	motor_goto_steps@position,__motor_calculate_distance@target_position
 43154  0136EA  C093  F061         	movff	motor_goto_steps@position+1,__motor_calculate_distance@target_position+1
 43155  0136EE  C094  F062         	movff	motor_goto_steps@position+2,__motor_calculate_distance@target_position+2
 43156  0136F2  C095  F063         	movff	motor_goto_steps@position+3,__motor_calculate_distance@target_position+3
 43157  0136F6  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43158  0136F8  ECB8  F090         	call	__motor_calculate_distance
 43159  0136FC  C060  F099         	movff	?__motor_calculate_distance,motor_goto_steps@distance_in_steps
 43160  013700  C061  F09A         	movff	?__motor_calculate_distance+1,motor_goto_steps@distance_in_steps+1
 43161  013704  C062  F09B         	movff	?__motor_calculate_distance+2,motor_goto_steps@distance_in_steps+2
 43162  013708  C063  F09C         	movff	?__motor_calculate_distance+3,motor_goto_steps@distance_in_steps+3
 43163                           
 43164                           ;motor.c: 1043: return _motor_move_steps(direction, distance_in_steps, speed, overshoot,
      +                           MOTOR_MOVE_TYPE_NORMAL);;	Return value of _motor_goto_steps is never used
 43165  01370C  C099  F07D         	movff	motor_goto_steps@distance_in_steps,__motor_move_steps@distance_in_steps
 43166  013710  C09A  F07E         	movff	motor_goto_steps@distance_in_steps+1,__motor_move_steps@distance_in_steps+1
 43167  013714  C09B  F07F         	movff	motor_goto_steps@distance_in_steps+2,__motor_move_steps@distance_in_steps+2
 43168  013718  C09C  F080         	movff	motor_goto_steps@distance_in_steps+3,__motor_move_steps@distance_in_steps+3
 43169  01371C  C096  F081         	movff	motor_goto_steps@speed,__motor_move_steps@speed
 43170  013720  C097  F082         	movff	motor_goto_steps@speed+1,__motor_move_steps@speed+1
 43171  013724  C098  F083         	movff	motor_goto_steps@overshoot,__motor_move_steps@overshoot
 43172  013728  0E00               	movlw	0
 43173  01372A  0100               	movlb	0	; () banked
 43174  01372C  6F84               	movwf	__motor_move_steps@type& (0+255),b
 43175  01372E  519D               	movf	motor_goto_steps@direction& (0+255),w,b
 43176  013730  ECC2  F076         	call	__motor_move_steps
 43177  013734  0012               	return	
 43178  013736                     __end_of_motor_goto_steps:
 43179                           	opt stack 0
 43180                           tosu	equ	0xFFF
 43181                           tosh	equ	0xFFE
 43182                           tosl	equ	0xFFD
 43183                           pclath	equ	0xFFA
 43184                           tblptru	equ	0xFF8
 43185                           tblptrh	equ	0xFF7
 43186                           tblptrl	equ	0xFF6
 43187                           tablat	equ	0xFF5
 43188                           prodh	equ	0xFF4
 43189                           prodl	equ	0xFF3
 43190                           intcon	equ	0xFF2
 43191                           indf0	equ	0xFEF
 43192                           postinc0	equ	0xFEE
 43193                           fsr0h	equ	0xFEA
 43194                           fsr0l	equ	0xFE9
 43195                           wreg	equ	0xFE8
 43196                           indf1	equ	0xFE7
 43197                           postinc1	equ	0xFE6
 43198                           postdec1	equ	0xFE5
 43199                           plusw1	equ	0xFE3
 43200                           fsr1h	equ	0xFE2
 43201                           fsr1l	equ	0xFE1
 43202                           indf2	equ	0xFDF
 43203                           postinc2	equ	0xFDE
 43204                           postdec2	equ	0xFDD
 43205                           plusw2	equ	0xFDB
 43206                           fsr2h	equ	0xFDA
 43207                           fsr2l	equ	0xFD9
 43208                           status	equ	0xFD8
 43209                           
 43210 ;; *************** function __motor_decide_direction *****************
 43211 ;; Defined at:
 43212 ;;		line 336 in file "motor.c"
 43213 ;; Parameters:    Size  Location     Type
 43214 ;;  target_posit    4   29[BANK0 ] unsigned long 
 43215 ;;  overshoot       1   33[BANK0 ] enum E6635
 43216 ;; Auto vars:     Size  Location     Type
 43217 ;;  distance_to_    4   46[BANK0 ] unsigned long 
 43218 ;;  distance_to_    4   42[BANK0 ] unsigned long 
 43219 ;;  distance_to_    4   38[BANK0 ] long 
 43220 ;;  distance_to_    4   34[BANK0 ] long 
 43221 ;; Return value:  Size  Location     Type
 43222 ;;                  1    wreg      enum E6622
 43223 ;; Registers used:
 43224 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 43225 ;; Tracked objects:
 43226 ;;		On entry : 0/0
 43227 ;;		On exit  : 0/0
 43228 ;;		Unchanged: 0/0
 43229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43230 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43231 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43233 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43234 ;;Total ram usage:       21 bytes
 43235 ;; Hardware stack levels used:    1
 43236 ;; Hardware stack levels required when called:   12
 43237 ;; This function calls:
 43238 ;;		__motor_calculate_distance
 43239 ;;		__motor_distance_to_limit
 43240 ;; This function is called by:
 43241 ;;		_motor_goto_steps
 43242 ;;		_motor_goto_degrees_float
 43243 ;;		_motor_goto_degrees_int
 43244 ;; This function uses a non-reentrant model
 43245 ;;
 43246                           
 43247                           	psect	text176
 43248  00F460                     __ptext176:
 43249                           	opt stack 0
 43250  00F460                     __motor_decide_direction:
 43251                           	opt stack 16
 43252                           
 43253                           ;motor.c: 343: uint32_t distance_to_target_cw;;motor.c: 344: uint32_t distance_to_target
      +                          _ccw;;motor.c: 346: int32_t distance_to_limit_cw;;motor.c: 347: int32_t distance_to_limi
      +                          t_ccw;;motor.c: 350: distance_to_target_cw = _motor_calculate_distance(MOTOR_DIRECTION_C
      +                          W, target_position_in_steps);
 43254                           
 43255                           ;incstack = 0
 43256  00F460  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43257  00F464  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43258  00F468  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43259  00F46C  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43260  00F470  0E01               	movlw	1
 43261  00F472  ECB8  F090         	call	__motor_calculate_distance
 43262  00F476  C060  F08A         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_cw
 43263  00F47A  C061  F08B         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_cw+1
 43264  00F47E  C062  F08C         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_cw+2
 43265  00F482  C063  F08D         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_cw+3
 43266                           
 43267                           ;motor.c: 351: distance_to_target_ccw = _motor_calculate_distance(MOTOR_DIRECTION_CCW, t
      +                          arget_position_in_steps);
 43268  00F486  C07D  F060         	movff	__motor_decide_direction@target_position_in_steps,__motor_calculate_distance@targ
      +                          et_position
 43269  00F48A  C07E  F061         	movff	__motor_decide_direction@target_position_in_steps+1,__motor_calculate_distance@ta
      +                          rget_position+1
 43270  00F48E  C07F  F062         	movff	__motor_decide_direction@target_position_in_steps+2,__motor_calculate_distance@ta
      +                          rget_position+2
 43271  00F492  C080  F063         	movff	__motor_decide_direction@target_position_in_steps+3,__motor_calculate_distance@ta
      +                          rget_position+3
 43272  00F496  0EFF               	movlw	255
 43273  00F498  ECB8  F090         	call	__motor_calculate_distance
 43274  00F49C  C060  F08E         	movff	?__motor_calculate_distance,__motor_decide_direction@distance_to_target_ccw
 43275  00F4A0  C061  F08F         	movff	?__motor_calculate_distance+1,__motor_decide_direction@distance_to_target_ccw+1
 43276  00F4A4  C062  F090         	movff	?__motor_calculate_distance+2,__motor_decide_direction@distance_to_target_ccw+2
 43277  00F4A8  C063  F091         	movff	?__motor_calculate_distance+3,__motor_decide_direction@distance_to_target_ccw+3
 43278                           
 43279                           ;motor.c: 354: distance_to_limit_cw = _motor_distance_to_limit(MOTOR_DIRECTION_CW);
 43280  00F4AC  0E01               	movlw	1
 43281  00F4AE  EC13  F07F         	call	__motor_distance_to_limit
 43282  00F4B2  C06C  F082         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_cw
 43283  00F4B6  C06D  F083         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_cw+1
 43284  00F4BA  C06E  F084         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_cw+2
 43285  00F4BE  C06F  F085         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_cw+3
 43286                           
 43287                           ;motor.c: 355: distance_to_limit_ccw = _motor_distance_to_limit(MOTOR_DIRECTION_CCW);
 43288  00F4C2  0EFF               	movlw	255
 43289  00F4C4  EC13  F07F         	call	__motor_distance_to_limit
 43290  00F4C8  C06C  F086         	movff	?__motor_distance_to_limit,__motor_decide_direction@distance_to_limit_ccw
 43291  00F4CC  C06D  F087         	movff	?__motor_distance_to_limit+1,__motor_decide_direction@distance_to_limit_ccw+1
 43292  00F4D0  C06E  F088         	movff	?__motor_distance_to_limit+2,__motor_decide_direction@distance_to_limit_ccw+2
 43293  00F4D4  C06F  F089         	movff	?__motor_distance_to_limit+3,__motor_decide_direction@distance_to_limit_ccw+3
 43294                           
 43295                           ;motor.c: 359: if((distance_to_target_cw>distance_to_limit_cw) && (distance_to_target_cc
      +                          w>distance_to_limit_ccw))
 43296  00F4D8  0100               	movlb	0	; () banked
 43297  00F4DA  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43298  00F4DC  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43299  00F4DE  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43300  00F4E0  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43301  00F4E2  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43302  00F4E4  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43303  00F4E6  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43304  00F4E8  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43305  00F4EA  B0D8               	btfsc	status,0,c
 43306  00F4EC  D00C               	goto	l2493
 43307                           
 43308                           ; BSR set to: 0
 43309  00F4EE  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43310  00F4F0  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43311  00F4F2  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43312  00F4F4  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43313  00F4F6  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43314  00F4F8  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43315  00F4FA  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43316  00F4FC  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43317  00F4FE  B0D8               	btfsc	status,0,c
 43318  00F500  D002               	goto	l2493
 43319                           
 43320                           ; BSR set to: 0
 43321                           ;motor.c: 360: {;motor.c: 361: return MOTOR_DIRECTION_SHORTEST;
 43322  00F502  0E00               	movlw	0
 43323                           
 43324                           ; BSR set to: 0
 43325  00F504  0012               	return	
 43326  00F506                     l2493:
 43327                           
 43328                           ; BSR set to: 0
 43329                           ;motor.c: 362: };motor.c: 363: if(distance_to_target_cw>distance_to_limit_cw)
 43330                           
 43331                           ; BSR set to: 0
 43332  00F506  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43333  00F508  5D82               	subwf	__motor_decide_direction@distance_to_limit_cw& (0+255),w,b
 43334  00F50A  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43335  00F50C  5983               	subwfb	(__motor_decide_direction@distance_to_limit_cw+1)& (0+255),w,b
 43336  00F50E  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43337  00F510  5984               	subwfb	(__motor_decide_direction@distance_to_limit_cw+2)& (0+255),w,b
 43338  00F512  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43339  00F514  5985               	subwfb	(__motor_decide_direction@distance_to_limit_cw+3)& (0+255),w,b
 43340  00F516  B0D8               	btfsc	status,0,c
 43341  00F518  D002               	goto	l2495
 43342                           
 43343                           ; BSR set to: 0
 43344                           ;motor.c: 364: {;motor.c: 365: return MOTOR_DIRECTION_CCW;
 43345  00F51A  0EFF               	movlw	255
 43346                           
 43347                           ; BSR set to: 0
 43348  00F51C  0012               	return	
 43349  00F51E                     l2495:
 43350                           
 43351                           ; BSR set to: 0
 43352                           ;motor.c: 366: };motor.c: 367: if(distance_to_target_ccw>distance_to_limit_ccw)
 43353                           
 43354                           ; BSR set to: 0
 43355  00F51E  518E               	movf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43356  00F520  5D86               	subwf	__motor_decide_direction@distance_to_limit_ccw& (0+255),w,b
 43357  00F522  518F               	movf	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43358  00F524  5987               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+1)& (0+255),w,b
 43359  00F526  5190               	movf	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43360  00F528  5988               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+2)& (0+255),w,b
 43361  00F52A  5191               	movf	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43362  00F52C  5989               	subwfb	(__motor_decide_direction@distance_to_limit_ccw+3)& (0+255),w,b
 43363  00F52E  B0D8               	btfsc	status,0,c
 43364  00F530  D002               	goto	l2496
 43365                           
 43366                           ; BSR set to: 0
 43367                           ;motor.c: 368: {;motor.c: 369: return MOTOR_DIRECTION_CW;
 43368  00F532  0E01               	movlw	1
 43369                           
 43370                           ; BSR set to: 0
 43371  00F534  0012               	return	
 43372  00F536                     l2496:
 43373                           
 43374                           ; BSR set to: 0
 43375                           ;motor.c: 370: };motor.c: 374: if(overshoot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)
 43376                           
 43377                           ; BSR set to: 0
 43378  00F536  5181               	movf	__motor_decide_direction@overshoot& (0+255),w,b
 43379  00F538  A4D8               	btfss	status,2,c
 43380  00F53A  D04E               	goto	l2499
 43381                           
 43382                           ; BSR set to: 0
 43383                           ;motor.c: 375: {;motor.c: 376: if(os.approach_direction==MOTOR_DIRECTION_CW)
 43384  00F53C  0101               	movlb	1	; () banked
 43385  00F53E  0578               	decf	(_os+20)& (0+255),w,b	;volatile
 43386  00F540  A4D8               	btfss	status,2,c
 43387  00F542  D023               	goto	l2498
 43388                           
 43389                           ; BSR set to: 1
 43390                           ;motor.c: 377: {;motor.c: 379: distance_to_target_ccw += config.overshoot_in_steps;
 43391  00F544  519B               	movf	(_config+5)& (0+255),w,b
 43392  00F546  0100               	movlb	0	; () banked
 43393  00F548  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43394  00F54A  0101               	movlb	1	; () banked
 43395  00F54C  519C               	movf	(_config+6)& (0+255),w,b
 43396  00F54E  0100               	movlb	0	; () banked
 43397  00F550  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43398  00F552  0E00               	movlw	0
 43399  00F554  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43400  00F556  0E00               	movlw	0
 43401  00F558  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43402                           
 43403                           ;motor.c: 380: distance_to_target_ccw += config.overshoot_in_steps;
 43404  00F55A  0101               	movlb	1	; () banked
 43405  00F55C  519B               	movf	(_config+5)& (0+255),w,b
 43406  00F55E  0100               	movlb	0	; () banked
 43407  00F560  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43408  00F562  0101               	movlb	1	; () banked
 43409  00F564  519C               	movf	(_config+6)& (0+255),w,b
 43410  00F566  0100               	movlb	0	; () banked
 43411  00F568  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43412  00F56A  0E00               	movlw	0
 43413  00F56C  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43414  00F56E  0E00               	movlw	0
 43415  00F570  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43416                           
 43417                           ;motor.c: 381: distance_to_target_ccw += config.overshoot_cost_in_steps;
 43418  00F572  0101               	movlb	1	; () banked
 43419  00F574  519D               	movf	(_config+7)& (0+255),w,b
 43420  00F576  0100               	movlb	0	; () banked
 43421  00F578  278E               	addwf	__motor_decide_direction@distance_to_target_ccw& (0+255),f,b
 43422  00F57A  0101               	movlb	1	; () banked
 43423  00F57C  519E               	movf	(_config+8)& (0+255),w,b
 43424  00F57E  0100               	movlb	0	; () banked
 43425  00F580  238F               	addwfc	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),f,b
 43426  00F582  0E00               	movlw	0
 43427  00F584  2390               	addwfc	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),f,b
 43428  00F586  0E00               	movlw	0
 43429  00F588  2391               	addwfc	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),f,b
 43430  00F58A                     l2498:
 43431                           
 43432                           ;motor.c: 382: };motor.c: 383: if(os.approach_direction==MOTOR_DIRECTION_CCW)
 43433                           
 43434                           ; BSR set to: 0
 43435  00F58A  0101               	movlb	1	; () banked
 43436  00F58C  2978               	incf	(_os+20)& (0+255),w,b	;volatile
 43437  00F58E  A4D8               	btfss	status,2,c
 43438  00F590  D023               	goto	l2499
 43439                           
 43440                           ; BSR set to: 1
 43441                           ;motor.c: 384: {;motor.c: 386: distance_to_target_cw += config.overshoot_in_steps;
 43442  00F592  519B               	movf	(_config+5)& (0+255),w,b
 43443  00F594  0100               	movlb	0	; () banked
 43444  00F596  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43445  00F598  0101               	movlb	1	; () banked
 43446  00F59A  519C               	movf	(_config+6)& (0+255),w,b
 43447  00F59C  0100               	movlb	0	; () banked
 43448  00F59E  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43449  00F5A0  0E00               	movlw	0
 43450  00F5A2  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43451  00F5A4  0E00               	movlw	0
 43452  00F5A6  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43453                           
 43454                           ;motor.c: 387: distance_to_target_cw += config.overshoot_in_steps;
 43455  00F5A8  0101               	movlb	1	; () banked
 43456  00F5AA  519B               	movf	(_config+5)& (0+255),w,b
 43457  00F5AC  0100               	movlb	0	; () banked
 43458  00F5AE  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43459  00F5B0  0101               	movlb	1	; () banked
 43460  00F5B2  519C               	movf	(_config+6)& (0+255),w,b
 43461  00F5B4  0100               	movlb	0	; () banked
 43462  00F5B6  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43463  00F5B8  0E00               	movlw	0
 43464  00F5BA  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43465  00F5BC  0E00               	movlw	0
 43466  00F5BE  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43467                           
 43468                           ;motor.c: 388: distance_to_target_cw += config.overshoot_cost_in_steps;
 43469  00F5C0  0101               	movlb	1	; () banked
 43470  00F5C2  519D               	movf	(_config+7)& (0+255),w,b
 43471  00F5C4  0100               	movlb	0	; () banked
 43472  00F5C6  278A               	addwf	__motor_decide_direction@distance_to_target_cw& (0+255),f,b
 43473  00F5C8  0101               	movlb	1	; () banked
 43474  00F5CA  519E               	movf	(_config+8)& (0+255),w,b
 43475  00F5CC  0100               	movlb	0	; () banked
 43476  00F5CE  238B               	addwfc	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),f,b
 43477  00F5D0  0E00               	movlw	0
 43478  00F5D2  238C               	addwfc	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),f,b
 43479  00F5D4  0E00               	movlw	0
 43480  00F5D6  238D               	addwfc	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),f,b
 43481  00F5D8                     l2499:
 43482                           
 43483                           ;motor.c: 389: };motor.c: 390: };motor.c: 393: if(distance_to_target_ccw<distance_to_tar
      +                          get_cw)
 43484                           
 43485                           ; BSR set to: 0
 43486                           
 43487                           ; BSR set to: 0
 43488  00F5D8  0100               	movlb	0	; () banked
 43489  00F5DA  518A               	movf	__motor_decide_direction@distance_to_target_cw& (0+255),w,b
 43490  00F5DC  5D8E               	subwf	__motor_decide_direction@distance_to_target_ccw& (0+255),w,b
 43491  00F5DE  518B               	movf	(__motor_decide_direction@distance_to_target_cw+1)& (0+255),w,b
 43492  00F5E0  598F               	subwfb	(__motor_decide_direction@distance_to_target_ccw+1)& (0+255),w,b
 43493  00F5E2  518C               	movf	(__motor_decide_direction@distance_to_target_cw+2)& (0+255),w,b
 43494  00F5E4  5990               	subwfb	(__motor_decide_direction@distance_to_target_ccw+2)& (0+255),w,b
 43495  00F5E6  518D               	movf	(__motor_decide_direction@distance_to_target_cw+3)& (0+255),w,b
 43496  00F5E8  5991               	subwfb	(__motor_decide_direction@distance_to_target_ccw+3)& (0+255),w,b
 43497  00F5EA  B0D8               	btfsc	status,0,c
 43498  00F5EC  D002               	goto	l2500
 43499                           
 43500                           ; BSR set to: 0
 43501                           ;motor.c: 394: {;motor.c: 395: return MOTOR_DIRECTION_CCW;
 43502  00F5EE  0EFF               	movlw	255
 43503                           
 43504                           ; BSR set to: 0
 43505                           ;motor.c: 396: }
 43506                           
 43507                           ; BSR set to: 0
 43508  00F5F0  0012               	return	
 43509  00F5F2                     l2500:
 43510                           
 43511                           ; BSR set to: 0
 43512                           ;motor.c: 397: else;motor.c: 398: {;motor.c: 399: return MOTOR_DIRECTION_CW;
 43513                           
 43514                           ; BSR set to: 0
 43515  00F5F2  0E01               	movlw	1
 43516                           
 43517                           ; BSR set to: 0
 43518  00F5F4  0012               	return	
 43519  00F5F6                     __end_of__motor_decide_direction:
 43520                           	opt stack 0
 43521                           tosu	equ	0xFFF
 43522                           tosh	equ	0xFFE
 43523                           tosl	equ	0xFFD
 43524                           pclath	equ	0xFFA
 43525                           tblptru	equ	0xFF8
 43526                           tblptrh	equ	0xFF7
 43527                           tblptrl	equ	0xFF6
 43528                           tablat	equ	0xFF5
 43529                           prodh	equ	0xFF4
 43530                           prodl	equ	0xFF3
 43531                           intcon	equ	0xFF2
 43532                           indf0	equ	0xFEF
 43533                           postinc0	equ	0xFEE
 43534                           fsr0h	equ	0xFEA
 43535                           fsr0l	equ	0xFE9
 43536                           wreg	equ	0xFE8
 43537                           indf1	equ	0xFE7
 43538                           postinc1	equ	0xFE6
 43539                           postdec1	equ	0xFE5
 43540                           plusw1	equ	0xFE3
 43541                           fsr1h	equ	0xFE2
 43542                           fsr1l	equ	0xFE1
 43543                           indf2	equ	0xFDF
 43544                           postinc2	equ	0xFDE
 43545                           postdec2	equ	0xFDD
 43546                           plusw2	equ	0xFDB
 43547                           fsr2h	equ	0xFDA
 43548                           fsr2l	equ	0xFD9
 43549                           status	equ	0xFD8
 43550                           
 43551 ;; *************** function __motor_calculate_distance *****************
 43552 ;; Defined at:
 43553 ;;		line 482 in file "motor.c"
 43554 ;; Parameters:    Size  Location     Type
 43555 ;;  direction       1    wreg     enum E6622
 43556 ;;  target_posit    4    0[BANK0 ] unsigned long 
 43557 ;; Auto vars:     Size  Location     Type
 43558 ;;  direction       1    8[BANK0 ] enum E6622
 43559 ;;  distance        4    9[BANK0 ] unsigned long 
 43560 ;; Return value:  Size  Location     Type
 43561 ;;                  4    0[BANK0 ] unsigned long 
 43562 ;; Registers used:
 43563 ;;		wreg, status,2, status,0
 43564 ;; Tracked objects:
 43565 ;;		On entry : 0/0
 43566 ;;		On exit  : 0/0
 43567 ;;		Unchanged: 0/0
 43568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43569 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43570 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43571 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43572 ;;      Totals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43573 ;;Total ram usage:       13 bytes
 43574 ;; Hardware stack levels used:    1
 43575 ;; Hardware stack levels required when called:   10
 43576 ;; This function calls:
 43577 ;;		Nothing
 43578 ;; This function is called by:
 43579 ;;		__motor_decide_direction
 43580 ;;		_motor_goto_steps
 43581 ;;		_motor_goto_degrees_float
 43582 ;;		_motor_goto_degrees_int
 43583 ;; This function uses a non-reentrant model
 43584 ;;
 43585                           
 43586                           	psect	text177
 43587  012170                     __ptext177:
 43588                           	opt stack 0
 43589  012170                     __motor_calculate_distance:
 43590                           	opt stack 17
 43591                           
 43592                           ; BSR set to: 0
 43593                           ;incstack = 0
 43594                           ;__motor_calculate_distance@direction stored from wreg
 43595  012170  0100               	movlb	0	; () banked
 43596  012172  6F68               	movwf	__motor_calculate_distance@direction& (0+255),b
 43597                           
 43598                           ;motor.c: 484: uint32_t distance;;motor.c: 487: if(direction==MOTOR_DIRECTION_CW)
 43599  012174  0100               	movlb	0	; () banked
 43600  012176  0568               	decf	__motor_calculate_distance@direction& (0+255),w,b
 43601  012178  A4D8               	btfss	status,2,c
 43602  01217A  D01C               	goto	l2520
 43603                           
 43604                           ; BSR set to: 0
 43605                           ;motor.c: 488: {;motor.c: 489: distance = target_position - os.current_position_in_steps
      +                          ;
 43606  01217C  C16B  F064         	movff	_os+7,??__motor_calculate_distance	;volatile
 43607  012180  C16C  F065         	movff	_os+8,??__motor_calculate_distance+1	;volatile
 43608  012184  C16D  F066         	movff	_os+9,??__motor_calculate_distance+2	;volatile
 43609  012188  C16E  F067         	movff	_os+10,??__motor_calculate_distance+3	;volatile
 43610  01218C  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43611  01218E  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43612  012190  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43613  012192  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43614  012194  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43615  012196  0E00               	movlw	0
 43616  012198  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43617  01219A  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43618  01219C  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43619  01219E  5160               	movf	__motor_calculate_distance@target_position& (0+255),w,b
 43620  0121A0  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43621  0121A2  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43622  0121A4  5161               	movf	(__motor_calculate_distance@target_position+1)& (0+255),w,b
 43623  0121A6  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43624  0121A8  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43625  0121AA  5162               	movf	(__motor_calculate_distance@target_position+2)& (0+255),w,b
 43626  0121AC  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43627  0121AE  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43628  0121B0  5163               	movf	(__motor_calculate_distance@target_position+3)& (0+255),w,b
 43629  0121B2  D023               	goto	L91
 43630  0121B4                     l2520:
 43631                           
 43632                           ; BSR set to: 0
 43633                           ;motor.c: 496: else;motor.c: 497: {;motor.c: 498: distance = os.current_position_in_step
      +                          s - target_position;
 43634                           
 43635                           ; BSR set to: 0
 43636  0121B4  C060  F064         	movff	__motor_calculate_distance@target_position,??__motor_calculate_distance
 43637  0121B8  C061  F065         	movff	__motor_calculate_distance@target_position+1,??__motor_calculate_distance+1
 43638  0121BC  C062  F066         	movff	__motor_calculate_distance@target_position+2,??__motor_calculate_distance+2
 43639  0121C0  C063  F067         	movff	__motor_calculate_distance@target_position+3,??__motor_calculate_distance+3
 43640  0121C4  1F64               	comf	??__motor_calculate_distance& (0+255),f,b
 43641  0121C6  1F65               	comf	(??__motor_calculate_distance+1)& (0+255),f,b
 43642  0121C8  1F66               	comf	(??__motor_calculate_distance+2)& (0+255),f,b
 43643  0121CA  1F67               	comf	(??__motor_calculate_distance+3)& (0+255),f,b
 43644  0121CC  2B64               	incf	??__motor_calculate_distance& (0+255),f,b
 43645  0121CE  0E00               	movlw	0
 43646  0121D0  2365               	addwfc	(??__motor_calculate_distance+1)& (0+255),f,b
 43647  0121D2  2366               	addwfc	(??__motor_calculate_distance+2)& (0+255),f,b
 43648  0121D4  2367               	addwfc	(??__motor_calculate_distance+3)& (0+255),f,b
 43649  0121D6  0101               	movlb	1	; () banked
 43650  0121D8  516B               	movf	(_os+7)& (0+255),w,b	;volatile
 43651  0121DA  0100               	movlb	0	; () banked
 43652  0121DC  2564               	addwf	??__motor_calculate_distance& (0+255),w,b
 43653  0121DE  6F69               	movwf	__motor_calculate_distance@distance& (0+255),b
 43654  0121E0  0101               	movlb	1	; () banked
 43655  0121E2  516C               	movf	(_os+8)& (0+255),w,b	;volatile
 43656  0121E4  0100               	movlb	0	; () banked
 43657  0121E6  2165               	addwfc	(??__motor_calculate_distance+1)& (0+255),w,b
 43658  0121E8  6F6A               	movwf	(__motor_calculate_distance@distance+1)& (0+255),b
 43659  0121EA  0101               	movlb	1	; () banked
 43660  0121EC  516D               	movf	(_os+9)& (0+255),w,b	;volatile
 43661  0121EE  0100               	movlb	0	; () banked
 43662  0121F0  2166               	addwfc	(??__motor_calculate_distance+2)& (0+255),w,b
 43663  0121F2  6F6B               	movwf	(__motor_calculate_distance@distance+2)& (0+255),b
 43664  0121F4  0101               	movlb	1	; () banked
 43665  0121F6  516E               	movf	(_os+10)& (0+255),w,b	;volatile
 43666  0121F8  0100               	movlb	0	; () banked
 43667  0121FA                     L91:
 43668  0121FA  2167               	addwfc	(??__motor_calculate_distance+3)& (0+255),w,b
 43669  0121FC  6F6C               	movwf	(__motor_calculate_distance@distance+3)& (0+255),b
 43670                           
 43671                           ;motor.c: 499: if(distance>config.full_circle_in_steps)
 43672  0121FE  5169               	movf	__motor_calculate_distance@distance& (0+255),w,b
 43673  012200  0101               	movlb	1	; () banked
 43674  012202  5D96               	subwf	_config& (0+255),w,b
 43675  012204  0100               	movlb	0	; () banked
 43676  012206  516A               	movf	(__motor_calculate_distance@distance+1)& (0+255),w,b
 43677  012208  0101               	movlb	1	; () banked
 43678  01220A  5997               	subwfb	(_config+1)& (0+255),w,b
 43679  01220C  0100               	movlb	0	; () banked
 43680  01220E  516B               	movf	(__motor_calculate_distance@distance+2)& (0+255),w,b
 43681  012210  0101               	movlb	1	; () banked
 43682  012212  5998               	subwfb	(_config+2)& (0+255),w,b
 43683  012214  0100               	movlb	0	; () banked
 43684  012216  516C               	movf	(__motor_calculate_distance@distance+3)& (0+255),w,b
 43685  012218  0101               	movlb	1	; () banked
 43686  01221A  5999               	subwfb	(_config+3)& (0+255),w,b
 43687  01221C  B0D8               	btfsc	status,0,c
 43688  01221E  D00F               	goto	l2523
 43689                           
 43690                           ; BSR set to: 1
 43691                           ;motor.c: 500: {;motor.c: 502: distance += config.full_circle_in_steps;
 43692  012220  5196               	movf	_config& (0+255),w,b
 43693  012222  0100               	movlb	0	; () banked
 43694  012224  2769               	addwf	__motor_calculate_distance@distance& (0+255),f,b
 43695  012226  0101               	movlb	1	; () banked
 43696  012228  5197               	movf	(_config+1)& (0+255),w,b
 43697  01222A  0100               	movlb	0	; () banked
 43698  01222C  236A               	addwfc	(__motor_calculate_distance@distance+1)& (0+255),f,b
 43699  01222E  0101               	movlb	1	; () banked
 43700  012230  5198               	movf	(_config+2)& (0+255),w,b
 43701  012232  0100               	movlb	0	; () banked
 43702  012234  236B               	addwfc	(__motor_calculate_distance@distance+2)& (0+255),f,b
 43703  012236  0101               	movlb	1	; () banked
 43704  012238  5199               	movf	(_config+3)& (0+255),w,b
 43705  01223A  0100               	movlb	0	; () banked
 43706  01223C  236C               	addwfc	(__motor_calculate_distance@distance+3)& (0+255),f,b
 43707  01223E                     l2523:
 43708                           
 43709                           ;motor.c: 503: };motor.c: 504: };motor.c: 506: return distance;
 43710                           
 43711                           ; BSR set to: 0
 43712                           
 43713                           ; BSR set to: 0
 43714  01223E  C069  F060         	movff	__motor_calculate_distance@distance,?__motor_calculate_distance
 43715  012242  C06A  F061         	movff	__motor_calculate_distance@distance+1,?__motor_calculate_distance+1
 43716  012246  C06B  F062         	movff	__motor_calculate_distance@distance+2,?__motor_calculate_distance+2
 43717  01224A  C06C  F063         	movff	__motor_calculate_distance@distance+3,?__motor_calculate_distance+3
 43718  01224E  0012               	return	
 43719  012250                     __end_of__motor_calculate_distance:
 43720                           	opt stack 0
 43721                           tosu	equ	0xFFF
 43722                           tosh	equ	0xFFE
 43723                           tosl	equ	0xFFD
 43724                           pclath	equ	0xFFA
 43725                           tblptru	equ	0xFF8
 43726                           tblptrh	equ	0xFF7
 43727                           tblptrl	equ	0xFF6
 43728                           tablat	equ	0xFF5
 43729                           prodh	equ	0xFF4
 43730                           prodl	equ	0xFF3
 43731                           intcon	equ	0xFF2
 43732                           indf0	equ	0xFEF
 43733                           postinc0	equ	0xFEE
 43734                           fsr0h	equ	0xFEA
 43735                           fsr0l	equ	0xFE9
 43736                           wreg	equ	0xFE8
 43737                           indf1	equ	0xFE7
 43738                           postinc1	equ	0xFE6
 43739                           postdec1	equ	0xFE5
 43740                           plusw1	equ	0xFE3
 43741                           fsr1h	equ	0xFE2
 43742                           fsr1l	equ	0xFE1
 43743                           indf2	equ	0xFDF
 43744                           postinc2	equ	0xFDE
 43745                           postdec2	equ	0xFDD
 43746                           plusw2	equ	0xFDB
 43747                           fsr2h	equ	0xFDA
 43748                           fsr2l	equ	0xFD9
 43749                           status	equ	0xFD8
 43750                           
 43751 ;; *************** function _motor_clear_command_cue *****************
 43752 ;; Defined at:
 43753 ;;		line 613 in file "motor.c"
 43754 ;; Parameters:    Size  Location     Type
 43755 ;;		None
 43756 ;; Auto vars:     Size  Location     Type
 43757 ;;		None
 43758 ;; Return value:  Size  Location     Type
 43759 ;;                  1    wreg      void 
 43760 ;; Registers used:
 43761 ;;		wreg, status,2
 43762 ;; Tracked objects:
 43763 ;;		On entry : 0/0
 43764 ;;		On exit  : 0/0
 43765 ;;		Unchanged: 0/0
 43766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43767 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43770 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43771 ;;Total ram usage:        0 bytes
 43772 ;; Hardware stack levels used:    1
 43773 ;; Hardware stack levels required when called:   10
 43774 ;; This function calls:
 43775 ;;		Nothing
 43776 ;; This function is called by:
 43777 ;;		__parse_command_short
 43778 ;; This function uses a non-reentrant model
 43779 ;;
 43780                           
 43781                           	psect	text178
 43782  015D3A                     __ptext178:
 43783                           	opt stack 0
 43784  015D3A                     _motor_clear_command_cue:
 43785                           	opt stack 17
 43786                           
 43787                           ;motor.c: 616: motor_cue_read_index = 0;
 43788                           
 43789                           ;incstack = 0
 43790  015D3A  0E00               	movlw	0
 43791  015D3C  0101               	movlb	1	; () banked
 43792  015D3E  6F4B               	movwf	_motor_cue_read_index& (0+255),b
 43793                           
 43794                           ;motor.c: 617: motor_cue_write_index = 0;
 43795  015D40  0E00               	movlw	0
 43796  015D42  6F4A               	movwf	_motor_cue_write_index& (0+255),b
 43797                           
 43798                           ; BSR set to: 1
 43799  015D44  0012               	return		;funcret
 43800  015D46                     __end_of_motor_clear_command_cue:
 43801                           	opt stack 0
 43802                           tosu	equ	0xFFF
 43803                           tosh	equ	0xFFE
 43804                           tosl	equ	0xFFD
 43805                           pclath	equ	0xFFA
 43806                           tblptru	equ	0xFF8
 43807                           tblptrh	equ	0xFF7
 43808                           tblptrl	equ	0xFF6
 43809                           tablat	equ	0xFF5
 43810                           prodh	equ	0xFF4
 43811                           prodl	equ	0xFF3
 43812                           intcon	equ	0xFF2
 43813                           indf0	equ	0xFEF
 43814                           postinc0	equ	0xFEE
 43815                           fsr0h	equ	0xFEA
 43816                           fsr0l	equ	0xFE9
 43817                           wreg	equ	0xFE8
 43818                           indf1	equ	0xFE7
 43819                           postinc1	equ	0xFE6
 43820                           postdec1	equ	0xFE5
 43821                           plusw1	equ	0xFE3
 43822                           fsr1h	equ	0xFE2
 43823                           fsr1l	equ	0xFE1
 43824                           indf2	equ	0xFDF
 43825                           postinc2	equ	0xFDE
 43826                           postdec2	equ	0xFDD
 43827                           plusw2	equ	0xFDB
 43828                           fsr2h	equ	0xFDA
 43829                           fsr2l	equ	0xFD9
 43830                           status	equ	0xFD8
 43831                           
 43832 ;; *************** function __parse_command_long *****************
 43833 ;; Defined at:
 43834 ;;		line 437 in file "api.c"
 43835 ;; Parameters:    Size  Location     Type
 43836 ;;  data            2   64[BANK0 ] PTR unsigned char 
 43837 ;;		 -> ReceivedDataBuffer(64), 
 43838 ;;  out_buffer      2   66[BANK0 ] PTR unsigned char 
 43839 ;;		 -> ToSendDataBuffer(64), 
 43840 ;;  out_idx_ptr     2   68[BANK0 ] PTR unsigned char 
 43841 ;;		 -> api_parse@out_idx(1), 
 43842 ;; Auto vars:     Size  Location     Type
 43843 ;;  length          1   70[BANK0 ] unsigned char 
 43844 ;; Return value:  Size  Location     Type
 43845 ;;                  1    wreg      unsigned char 
 43846 ;; Registers used:
 43847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 43848 ;; Tracked objects:
 43849 ;;		On entry : 0/0
 43850 ;;		On exit  : 0/0
 43851 ;;		Unchanged: 0/0
 43852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43853 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43854 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43856 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43857 ;;Total ram usage:        7 bytes
 43858 ;; Hardware stack levels used:    1
 43859 ;; Hardware stack levels required when called:   15
 43860 ;; This function calls:
 43861 ;;		__parse_jump_steps
 43862 ;;		__parse_jump_steps_with_overshoot
 43863 ;;		__parse_set_manual_speed
 43864 ;; This function is called by:
 43865 ;;		_api_parse
 43866 ;; This function uses a non-reentrant model
 43867 ;;
 43868                           
 43869                           	psect	text179
 43870  013D04                     __ptext179:
 43871                           	opt stack 0
 43872  013D04                     __parse_command_long:
 43873                           	opt stack 13
 43874                           
 43875                           ;api.c: 439: uint8_t length = 65;
 43876                           
 43877                           ; BSR set to: 1
 43878                           ;incstack = 0
 43879  013D04  0E41               	movlw	65
 43880  013D06  0100               	movlb	0	; () banked
 43881  013D08  6FA6               	movwf	__parse_command_long@length& (0+255),b
 43882                           
 43883                           ;api.c: 441: switch(data[0])
 43884  013D0A  D02F               	goto	l2340
 43885  013D0C                     
 43886                           ; BSR set to: 0
 43887                           ;api.c: 448: length = _parse_jump_steps(data, out_buffer, out_idx_ptr);
 43888                           
 43889                           ; BSR set to: 0
 43890  013D0C  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps@data
 43891  013D10  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps@data+1
 43892  013D14  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps@out_buffer
 43893  013D18  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps@out_buffer+1
 43894  013D1C  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps@out_idx_ptr
 43895  013D20  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps@out_idx_ptr+1
 43896  013D24  ECC5  F07D         	call	__parse_jump_steps	;wreg free
 43897  013D28  D01D               	goto	L67
 43898  013D2A                     
 43899                           ; BSR set to: 0
 43900                           ;api.c: 452: length = _parse_jump_steps_with_overshoot(data, out_buffer, out_idx_ptr);
 43901                           
 43902                           ; BSR set to: 0
 43903  013D2A  C0A0  F094         	movff	__parse_command_long@data,__parse_jump_steps_with_overshoot@data
 43904  013D2E  C0A1  F095         	movff	__parse_command_long@data+1,__parse_jump_steps_with_overshoot@data+1
 43905  013D32  C0A2  F096         	movff	__parse_command_long@out_buffer,__parse_jump_steps_with_overshoot@out_buffer
 43906  013D36  C0A3  F097         	movff	__parse_command_long@out_buffer+1,__parse_jump_steps_with_overshoot@out_buffer+1
 43907  013D3A  C0A4  F098         	movff	__parse_command_long@out_idx_ptr,__parse_jump_steps_with_overshoot@out_idx_ptr
 43908  013D3E  C0A5  F099         	movff	__parse_command_long@out_idx_ptr+1,__parse_jump_steps_with_overshoot@out_idx_ptr+
      +                          1
 43909  013D42  EC1C  F07D         	call	__parse_jump_steps_with_overshoot	;wreg free
 43910  013D46  D00E               	goto	L67
 43911  013D48                     
 43912                           ; BSR set to: 0
 43913                           ;api.c: 456: length = _parse_set_manual_speed(data, out_buffer, out_idx_ptr);
 43914                           
 43915                           ; BSR set to: 0
 43916  013D48  C0A0  F064         	movff	__parse_command_long@data,__parse_set_manual_speed@data
 43917  013D4C  C0A1  F065         	movff	__parse_command_long@data+1,__parse_set_manual_speed@data+1
 43918  013D50  C0A2  F066         	movff	__parse_command_long@out_buffer,__parse_set_manual_speed@out_buffer
 43919  013D54  C0A3  F067         	movff	__parse_command_long@out_buffer+1,__parse_set_manual_speed@out_buffer+1
 43920  013D58  C0A4  F068         	movff	__parse_command_long@out_idx_ptr,__parse_set_manual_speed@out_idx_ptr
 43921  013D5C  C0A5  F069         	movff	__parse_command_long@out_idx_ptr+1,__parse_set_manual_speed@out_idx_ptr+1
 43922  013D60  EC4A  F09F         	call	__parse_set_manual_speed	;wreg free
 43923  013D64                     L67:
 43924  013D64  0100               	movlb	0	; () banked
 43925  013D66  6FA6               	movwf	__parse_command_long@length& (0+255),b
 43926                           
 43927                           ; BSR set to: 0
 43928                           ;api.c: 458: }
 43929                           
 43930                           ;api.c: 457: break;
 43931  013D68  D00E               	goto	l2342
 43932  013D6A                     l2340:
 43933                           
 43934                           ; BSR set to: 0
 43935                           
 43936                           ; BSR set to: 0
 43937  013D6A  C0A0  FFD9         	movff	__parse_command_long@data,fsr2l
 43938  013D6E  C0A1  FFDA         	movff	__parse_command_long@data+1,fsr2h
 43939  013D72  50DF               	movf	indf2,w,c
 43940                           
 43941                           ; Switch size 1, requested type "space"
 43942                           ; Number of cases is 3, Range of values is 144 to 146
 43943                           ; switch strategies available:
 43944                           ; Name         Instructions Cycles
 43945                           ; simple_byte           10     6 (average)
 43946                           ;	Chosen strategy is simple_byte
 43947  013D74  0A90               	xorlw	144	; case 144
 43948  013D76  B4D8               	btfsc	status,2,c
 43949  013D78  D7C9               	goto	l2341
 43950  013D7A  0A01               	xorlw	1	; case 145
 43951  013D7C  B4D8               	btfsc	status,2,c
 43952  013D7E  D7D5               	goto	l2343
 43953  013D80  0A03               	xorlw	3	; case 146
 43954  013D82  B4D8               	btfsc	status,2,c
 43955  013D84  D7E1               	goto	l2344
 43956  013D86                     l2342:
 43957                           
 43958                           ; BSR set to: 0
 43959                           ;api.c: 462: return length;
 43960                           
 43961                           ; BSR set to: 0
 43962  013D86  51A6               	movf	__parse_command_long@length& (0+255),w,b
 43963  013D88  0012               	return	
 43964  013D8A                     __end_of__parse_command_long:
 43965                           	opt stack 0
 43966                           tosu	equ	0xFFF
 43967                           tosh	equ	0xFFE
 43968                           tosl	equ	0xFFD
 43969                           pclath	equ	0xFFA
 43970                           tblptru	equ	0xFF8
 43971                           tblptrh	equ	0xFF7
 43972                           tblptrl	equ	0xFF6
 43973                           tablat	equ	0xFF5
 43974                           prodh	equ	0xFF4
 43975                           prodl	equ	0xFF3
 43976                           intcon	equ	0xFF2
 43977                           indf0	equ	0xFEF
 43978                           postinc0	equ	0xFEE
 43979                           fsr0h	equ	0xFEA
 43980                           fsr0l	equ	0xFE9
 43981                           wreg	equ	0xFE8
 43982                           indf1	equ	0xFE7
 43983                           postinc1	equ	0xFE6
 43984                           postdec1	equ	0xFE5
 43985                           plusw1	equ	0xFE3
 43986                           fsr1h	equ	0xFE2
 43987                           fsr1l	equ	0xFE1
 43988                           indf2	equ	0xFDF
 43989                           postinc2	equ	0xFDE
 43990                           postdec2	equ	0xFDD
 43991                           plusw2	equ	0xFDB
 43992                           fsr2h	equ	0xFDA
 43993                           fsr2l	equ	0xFD9
 43994                           status	equ	0xFD8
 43995                           
 43996 ;; *************** function __parse_set_manual_speed *****************
 43997 ;; Defined at:
 43998 ;;		line 557 in file "api.c"
 43999 ;; Parameters:    Size  Location     Type
 44000 ;;  data            2    4[BANK0 ] PTR unsigned char 
 44001 ;;		 -> ReceivedDataBuffer(64), 
 44002 ;;  out_buffer      2    6[BANK0 ] PTR unsigned char 
 44003 ;;		 -> ToSendDataBuffer(64), 
 44004 ;;  out_idx_ptr     2    8[BANK0 ] PTR unsigned char 
 44005 ;;		 -> api_parse@out_idx(1), 
 44006 ;; Auto vars:     Size  Location     Type
 44007 ;;  new_speed       2   11[BANK0 ] unsigned int 
 44008 ;; Return value:  Size  Location     Type
 44009 ;;                  1    wreg      unsigned char 
 44010 ;; Registers used:
 44011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44012 ;; Tracked objects:
 44013 ;;		On entry : 0/0
 44014 ;;		On exit  : 0/0
 44015 ;;		Unchanged: 0/0
 44016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44017 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44018 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44019 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44020 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44021 ;;Total ram usage:        9 bytes
 44022 ;; Hardware stack levels used:    1
 44023 ;; Hardware stack levels required when called:   12
 44024 ;; This function calls:
 44025 ;;		_motor_set_manual_speed
 44026 ;; This function is called by:
 44027 ;;		__parse_command_long
 44028 ;; This function uses a non-reentrant model
 44029 ;;
 44030                           
 44031                           	psect	text180
 44032  013E94                     __ptext180:
 44033                           	opt stack 0
 44034  013E94                     __parse_set_manual_speed:
 44035                           	opt stack 15
 44036                           
 44037                           ;api.c: 561: uint16_t new_speed;;api.c: 563: new_speed = data[1];
 44038                           
 44039                           ; BSR set to: 0
 44040                           ;incstack = 0
 44041  013E94  0100               	movlb	0	; () banked
 44042  013E96  EE20 F001          	lfsr	2,1
 44043  013E9A  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44044  013E9C  26D9               	addwf	fsr2l,f,c
 44045  013E9E  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44046  013EA0  22DA               	addwfc	fsr2h,f,c
 44047  013EA2  50DF               	movf	indf2,w,c
 44048  013EA4  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 44049  013EA6  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44050  013EA8  6F6B               	movwf	__parse_set_manual_speed@new_speed& (0+255),b
 44051  013EAA  6B6C               	clrf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44052                           
 44053                           ; BSR set to: 0
 44054                           ;api.c: 564: new_speed <<= 8;
 44055  013EAC  516B               	movf	__parse_set_manual_speed@new_speed& (0+255),w,b
 44056  013EAE  6F6C               	movwf	(__parse_set_manual_speed@new_speed+1)& (0+255),b
 44057  013EB0  6B6B               	clrf	__parse_set_manual_speed@new_speed& (0+255),b
 44058                           
 44059                           ; BSR set to: 0
 44060                           ;api.c: 565: new_speed |= data[2];
 44061  013EB2  EE20 F002          	lfsr	2,2
 44062  013EB6  5164               	movf	__parse_set_manual_speed@data& (0+255),w,b
 44063  013EB8  26D9               	addwf	fsr2l,f,c
 44064  013EBA  5165               	movf	(__parse_set_manual_speed@data+1)& (0+255),w,b
 44065  013EBC  22DA               	addwfc	fsr2h,f,c
 44066  013EBE  50DF               	movf	indf2,w,c
 44067  013EC0  6F6A               	movwf	??__parse_set_manual_speed& (0+255),b
 44068  013EC2  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44069  013EC4  136B               	iorwf	__parse_set_manual_speed@new_speed& (0+255),f,b
 44070                           
 44071                           ; BSR set to: 0
 44072                           ;api.c: 567: motor_set_manual_speed(new_speed);
 44073  013EC6  C06B  F062         	movff	__parse_set_manual_speed@new_speed,motor_set_manual_speed@new_speed
 44074  013ECA  C06C  F063         	movff	__parse_set_manual_speed@new_speed+1,motor_set_manual_speed@new_speed+1
 44075  013ECE  EC5B  F0A8         	call	_motor_set_manual_speed	;wreg free
 44076                           
 44077                           ;api.c: 570: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<63))
 44078  013ED2  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44079  013ED6  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44080  013EDA  50DF               	movf	indf2,w,c
 44081  013EDC  B4D8               	btfsc	status,2,c
 44082  013EDE  D01A               	goto	l2360
 44083  013EE0  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44084  013EE4  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44085  013EE8  0E3F               	movlw	63
 44086  013EEA  60DF               	cpfslt	indf2,c
 44087  013EEC  D013               	goto	l2360
 44088                           
 44089                           ;api.c: 571: {;api.c: 572: out_buffer[(*out_idx_ptr)++] = COMMAND_SET_MANUAL_SPEED;
 44090  013EEE  C068  FFD9         	movff	__parse_set_manual_speed@out_idx_ptr,fsr2l
 44091  013EF2  C069  FFDA         	movff	__parse_set_manual_speed@out_idx_ptr+1,fsr2h
 44092  013EF6  CFDF F06A          	movff	indf2,??__parse_set_manual_speed
 44093  013EFA  0E01               	movlw	1
 44094  013EFC  26DF               	addwf	indf2,f,c
 44095  013EFE  0100               	movlb	0	; () banked
 44096  013F00  516A               	movf	??__parse_set_manual_speed& (0+255),w,b
 44097  013F02  0D01               	mullw	1
 44098  013F04  50F3               	movf	prodl,w,c
 44099  013F06  2566               	addwf	__parse_set_manual_speed@out_buffer& (0+255),w,b
 44100  013F08  6ED9               	movwf	fsr2l,c
 44101  013F0A  50F4               	movf	prodh,w,c
 44102  013F0C  2167               	addwfc	(__parse_set_manual_speed@out_buffer+1)& (0+255),w,b
 44103  013F0E  6EDA               	movwf	fsr2h,c
 44104  013F10  0E92               	movlw	146
 44105  013F12  6EDF               	movwf	indf2,c
 44106  013F14                     l2360:
 44107                           
 44108                           ;api.c: 573: };api.c: 575: return 3;
 44109                           
 44110                           ; BSR set to: 0
 44111  013F14  0E03               	movlw	3
 44112  013F16  0012               	return	
 44113  013F18                     __end_of__parse_set_manual_speed:
 44114                           	opt stack 0
 44115                           tosu	equ	0xFFF
 44116                           tosh	equ	0xFFE
 44117                           tosl	equ	0xFFD
 44118                           pclath	equ	0xFFA
 44119                           tblptru	equ	0xFF8
 44120                           tblptrh	equ	0xFF7
 44121                           tblptrl	equ	0xFF6
 44122                           tablat	equ	0xFF5
 44123                           prodh	equ	0xFF4
 44124                           prodl	equ	0xFF3
 44125                           intcon	equ	0xFF2
 44126                           indf0	equ	0xFEF
 44127                           postinc0	equ	0xFEE
 44128                           fsr0h	equ	0xFEA
 44129                           fsr0l	equ	0xFE9
 44130                           wreg	equ	0xFE8
 44131                           indf1	equ	0xFE7
 44132                           postinc1	equ	0xFE6
 44133                           postdec1	equ	0xFE5
 44134                           plusw1	equ	0xFE3
 44135                           fsr1h	equ	0xFE2
 44136                           fsr1l	equ	0xFE1
 44137                           indf2	equ	0xFDF
 44138                           postinc2	equ	0xFDE
 44139                           postdec2	equ	0xFDD
 44140                           plusw2	equ	0xFDB
 44141                           fsr2h	equ	0xFDA
 44142                           fsr2l	equ	0xFD9
 44143                           status	equ	0xFD8
 44144                           
 44145 ;; *************** function _motor_set_manual_speed *****************
 44146 ;; Defined at:
 44147 ;;		line 882 in file "motor.c"
 44148 ;; Parameters:    Size  Location     Type
 44149 ;;  new_speed       2    2[BANK0 ] unsigned int 
 44150 ;; Auto vars:     Size  Location     Type
 44151 ;;		None
 44152 ;; Return value:  Size  Location     Type
 44153 ;;                  1    wreg      void 
 44154 ;; Registers used:
 44155 ;;		wreg, status,2, status,0, cstack
 44156 ;; Tracked objects:
 44157 ;;		On entry : 0/0
 44158 ;;		On exit  : 0/0
 44159 ;;		Unchanged: 0/0
 44160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44161 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44164 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44165 ;;Total ram usage:        2 bytes
 44166 ;; Hardware stack levels used:    1
 44167 ;; Hardware stack levels required when called:   11
 44168 ;; This function calls:
 44169 ;;		_motor_change_speed
 44170 ;; This function is called by:
 44171 ;;		__parse_set_manual_speed
 44172 ;;		_motor_increase_manual_speed
 44173 ;;		_motor_decrease_manual_speed
 44174 ;; This function uses a non-reentrant model
 44175 ;;
 44176                           
 44177                           	psect	text181
 44178  0150B6                     __ptext181:
 44179                           	opt stack 0
 44180  0150B6                     _motor_set_manual_speed:
 44181                           	opt stack 17
 44182                           
 44183                           ;motor.c: 884: if(new_speed>config.maximum_speed_manual)
 44184                           
 44185                           ;incstack = 0
 44186  0150B6  0100               	movlb	0	; () banked
 44187  0150B8  5162               	movf	motor_set_manual_speed@new_speed& (0+255),w,b
 44188  0150BA  0101               	movlb	1	; () banked
 44189  0150BC  5DA9               	subwf	(_config+19)& (0+255),w,b
 44190  0150BE  0100               	movlb	0	; () banked
 44191  0150C0  5163               	movf	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44192  0150C2  0101               	movlb	1	; () banked
 44193  0150C4  59AA               	subwfb	(_config+20)& (0+255),w,b
 44194  0150C6  B0D8               	btfsc	status,0,c
 44195  0150C8  D005               	goto	l2606
 44196                           
 44197                           ; BSR set to: 1
 44198                           ;motor.c: 885: {;motor.c: 886: os.manual_speed = config.maximum_speed_manual;
 44199  0150CA  C1A9  F189         	movff	_config+19,_os+37	;volatile
 44200  0150CE  C1AA  F18A         	movff	_config+20,_os+38	;volatile
 44201                           
 44202                           ;motor.c: 887: }
 44203  0150D2  D012               	goto	l2609
 44204  0150D4                     l2606:
 44205                           
 44206                           ; BSR set to: 1
 44207                           ;motor.c: 888: else if(new_speed<config.minimum_speed)
 44208                           
 44209                           ; BSR set to: 1
 44210  0150D4  519F               	movf	(_config+9)& (0+255),w,b
 44211  0150D6  0100               	movlb	0	; () banked
 44212  0150D8  5D62               	subwf	motor_set_manual_speed@new_speed& (0+255),w,b
 44213  0150DA  0101               	movlb	1	; () banked
 44214  0150DC  51A0               	movf	(_config+10)& (0+255),w,b
 44215  0150DE  0100               	movlb	0	; () banked
 44216  0150E0  5963               	subwfb	(motor_set_manual_speed@new_speed+1)& (0+255),w,b
 44217  0150E2  B0D8               	btfsc	status,0,c
 44218  0150E4  D005               	goto	l2608
 44219                           
 44220                           ; BSR set to: 0
 44221                           ;motor.c: 889: {;motor.c: 890: os.manual_speed = config.minimum_speed;
 44222  0150E6  C19F  F189         	movff	_config+9,_os+37	;volatile
 44223  0150EA  C1A0  F18A         	movff	_config+10,_os+38	;volatile
 44224                           
 44225                           ;motor.c: 891: }
 44226  0150EE  D004               	goto	l2609
 44227  0150F0                     l2608:
 44228                           
 44229                           ; BSR set to: 0
 44230                           ;motor.c: 892: else;motor.c: 893: {;motor.c: 894: os.manual_speed = new_speed;
 44231  0150F0  C062  F189         	movff	motor_set_manual_speed@new_speed,_os+37	;volatile
 44232  0150F4  C063  F18A         	movff	motor_set_manual_speed@new_speed+1,_os+38	;volatile
 44233  0150F8                     l2609:
 44234                           
 44235                           ;motor.c: 895: };motor.c: 896: motor_change_speed(new_speed);
 44236                           
 44237                           ; BSR set to: 0
 44238                           
 44239                           ; BSR set to: 0
 44240  0150F8  C062  F060         	movff	motor_set_manual_speed@new_speed,motor_change_speed@new_speed
 44241  0150FC  C063  F061         	movff	motor_set_manual_speed@new_speed+1,motor_change_speed@new_speed+1
 44242  015100  ECC2  F0AE         	call	_motor_change_speed	;wreg free
 44243  015104  0012               	return		;funcret
 44244  015106                     __end_of_motor_set_manual_speed:
 44245                           	opt stack 0
 44246                           tosu	equ	0xFFF
 44247                           tosh	equ	0xFFE
 44248                           tosl	equ	0xFFD
 44249                           pclath	equ	0xFFA
 44250                           tblptru	equ	0xFF8
 44251                           tblptrh	equ	0xFF7
 44252                           tblptrl	equ	0xFF6
 44253                           tablat	equ	0xFF5
 44254                           prodh	equ	0xFF4
 44255                           prodl	equ	0xFF3
 44256                           intcon	equ	0xFF2
 44257                           indf0	equ	0xFEF
 44258                           postinc0	equ	0xFEE
 44259                           fsr0h	equ	0xFEA
 44260                           fsr0l	equ	0xFE9
 44261                           wreg	equ	0xFE8
 44262                           indf1	equ	0xFE7
 44263                           postinc1	equ	0xFE6
 44264                           postdec1	equ	0xFE5
 44265                           plusw1	equ	0xFE3
 44266                           fsr1h	equ	0xFE2
 44267                           fsr1l	equ	0xFE1
 44268                           indf2	equ	0xFDF
 44269                           postinc2	equ	0xFDE
 44270                           postdec2	equ	0xFDD
 44271                           plusw2	equ	0xFDB
 44272                           fsr2h	equ	0xFDA
 44273                           fsr2l	equ	0xFD9
 44274                           status	equ	0xFD8
 44275                           
 44276 ;; *************** function _motor_change_speed *****************
 44277 ;; Defined at:
 44278 ;;		line 899 in file "motor.c"
 44279 ;; Parameters:    Size  Location     Type
 44280 ;;  new_speed       2    0[BANK0 ] unsigned int 
 44281 ;; Auto vars:     Size  Location     Type
 44282 ;;		None
 44283 ;; Return value:  Size  Location     Type
 44284 ;;                  1    wreg      void 
 44285 ;; Registers used:
 44286 ;;		None
 44287 ;; Tracked objects:
 44288 ;;		On entry : 0/0
 44289 ;;		On exit  : 0/0
 44290 ;;		Unchanged: 0/0
 44291 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44292 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44293 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44294 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44295 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44296 ;;Total ram usage:        2 bytes
 44297 ;; Hardware stack levels used:    1
 44298 ;; Hardware stack levels required when called:   10
 44299 ;; This function calls:
 44300 ;;		Nothing
 44301 ;; This function is called by:
 44302 ;;		_motor_set_manual_speed
 44303 ;;		_encoder_statemachine
 44304 ;; This function uses a non-reentrant model
 44305 ;;
 44306                           
 44307                           	psect	text182
 44308  015D84                     __ptext182:
 44309                           	opt stack 0
 44310  015D84                     _motor_change_speed:
 44311                           	opt stack 17
 44312                           
 44313                           ;motor.c: 901: motor_maximum_speed = new_speed;
 44314                           
 44315                           ;incstack = 0
 44316  015D84  C060  F133         	movff	motor_change_speed@new_speed,_motor_maximum_speed
 44317  015D88  C061  F134         	movff	motor_change_speed@new_speed+1,_motor_maximum_speed+1
 44318  015D8C  0012               	return		;funcret
 44319  015D8E                     __end_of_motor_change_speed:
 44320                           	opt stack 0
 44321                           tosu	equ	0xFFF
 44322                           tosh	equ	0xFFE
 44323                           tosl	equ	0xFFD
 44324                           pclath	equ	0xFFA
 44325                           tblptru	equ	0xFF8
 44326                           tblptrh	equ	0xFF7
 44327                           tblptrl	equ	0xFF6
 44328                           tablat	equ	0xFF5
 44329                           prodh	equ	0xFF4
 44330                           prodl	equ	0xFF3
 44331                           intcon	equ	0xFF2
 44332                           indf0	equ	0xFEF
 44333                           postinc0	equ	0xFEE
 44334                           fsr0h	equ	0xFEA
 44335                           fsr0l	equ	0xFE9
 44336                           wreg	equ	0xFE8
 44337                           indf1	equ	0xFE7
 44338                           postinc1	equ	0xFE6
 44339                           postdec1	equ	0xFE5
 44340                           plusw1	equ	0xFE3
 44341                           fsr1h	equ	0xFE2
 44342                           fsr1l	equ	0xFE1
 44343                           indf2	equ	0xFDF
 44344                           postinc2	equ	0xFDE
 44345                           postdec2	equ	0xFDD
 44346                           plusw2	equ	0xFDB
 44347                           fsr2h	equ	0xFDA
 44348                           fsr2l	equ	0xFD9
 44349                           status	equ	0xFD8
 44350                           
 44351 ;; *************** function __parse_jump_steps_with_overshoot *****************
 44352 ;; Defined at:
 44353 ;;		line 523 in file "api.c"
 44354 ;; Parameters:    Size  Location     Type
 44355 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44356 ;;		 -> ReceivedDataBuffer(64), 
 44357 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44358 ;;		 -> ToSendDataBuffer(64), 
 44359 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44360 ;;		 -> api_parse@out_idx(1), 
 44361 ;; Auto vars:     Size  Location     Type
 44362 ;;  number_of_st    4   60[BANK0 ] long 
 44363 ;;  return_value    1   59[BANK0 ] unsigned char 
 44364 ;; Return value:  Size  Location     Type
 44365 ;;                  1    wreg      unsigned char 
 44366 ;; Registers used:
 44367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44368 ;; Tracked objects:
 44369 ;;		On entry : 0/0
 44370 ;;		On exit  : 0/0
 44371 ;;		Unchanged: 0/0
 44372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44373 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44374 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44375 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44376 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44377 ;;Total ram usage:       12 bytes
 44378 ;; Hardware stack levels used:    1
 44379 ;; Hardware stack levels required when called:   14
 44380 ;; This function calls:
 44381 ;;		_motor_move_steps
 44382 ;; This function is called by:
 44383 ;;		__parse_command_long
 44384 ;; This function uses a non-reentrant model
 44385 ;;
 44386                           
 44387                           	psect	text183
 44388  00FA38                     __ptext183:
 44389                           	opt stack 0
 44390  00FA38                     __parse_jump_steps_with_overshoot:
 44391                           	opt stack 13
 44392                           
 44393                           ;api.c: 526: uint8_t return_value;;api.c: 527: int32_t number_of_steps;;api.c: 529: numb
      +                          er_of_steps = data[1];
 44394                           
 44395                           ;incstack = 0
 44396  00FA38  0100               	movlb	0	; () banked
 44397  00FA3A  EE20 F001          	lfsr	2,1
 44398  00FA3E  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44399  00FA40  26D9               	addwf	fsr2l,f,c
 44400  00FA42  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44401  00FA44  22DA               	addwfc	fsr2h,f,c
 44402  00FA46  50DF               	movf	indf2,w,c
 44403  00FA48  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44404  00FA4A  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44405  00FA4C  6F9C               	movwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44406  00FA4E  6B9D               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),b
 44407  00FA50  6B9E               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),b
 44408  00FA52  6B9F               	clrf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),b
 44409                           
 44410                           ; BSR set to: 0
 44411                           ;api.c: 530: number_of_steps <<= 8;
 44412  00FA54  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44413  00FA58  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44414  00FA5C  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44415  00FA60  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44416                           
 44417                           ; BSR set to: 0
 44418                           ;api.c: 531: number_of_steps |= data[2];
 44419  00FA62  EE20 F002          	lfsr	2,2
 44420  00FA66  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44421  00FA68  26D9               	addwf	fsr2l,f,c
 44422  00FA6A  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44423  00FA6C  22DA               	addwfc	fsr2h,f,c
 44424  00FA6E  50DF               	movf	indf2,w,c
 44425  00FA70  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44426  00FA72  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44427  00FA74  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44428                           
 44429                           ;api.c: 532: number_of_steps <<= 8;
 44430  00FA76  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44431  00FA7A  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44432  00FA7E  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44433  00FA82  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44434                           
 44435                           ; BSR set to: 0
 44436                           ;api.c: 533: number_of_steps |= data[3];
 44437  00FA84  EE20 F003          	lfsr	2,3
 44438  00FA88  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44439  00FA8A  26D9               	addwf	fsr2l,f,c
 44440  00FA8C  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44441  00FA8E  22DA               	addwfc	fsr2h,f,c
 44442  00FA90  50DF               	movf	indf2,w,c
 44443  00FA92  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44444  00FA94  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44445  00FA96  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44446                           
 44447                           ; BSR set to: 0
 44448                           ;api.c: 534: number_of_steps <<= 8;
 44449  00FA98  C09E  F09F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+3
 44450  00FA9C  C09D  F09E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,__parse_jump_steps_with_overs
      +                          hoot@number_of_steps+2
 44451  00FAA0  C09C  F09D         	movff	__parse_jump_steps_with_overshoot@number_of_steps,__parse_jump_steps_with_oversho
      +                          ot@number_of_steps+1
 44452  00FAA4  6B9C               	clrf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44453                           
 44454                           ;api.c: 535: number_of_steps |= data[4];
 44455  00FAA6  EE20 F004          	lfsr	2,4
 44456  00FAAA  5194               	movf	__parse_jump_steps_with_overshoot@data& (0+255),w,b
 44457  00FAAC  26D9               	addwf	fsr2l,f,c
 44458  00FAAE  5195               	movf	(__parse_jump_steps_with_overshoot@data+1)& (0+255),w,b
 44459  00FAB0  22DA               	addwfc	fsr2h,f,c
 44460  00FAB2  50DF               	movf	indf2,w,c
 44461  00FAB4  6F9A               	movwf	??__parse_jump_steps_with_overshoot& (0+255),b
 44462  00FAB6  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44463  00FAB8  139C               	iorwf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),f,b
 44464                           
 44465                           ; BSR set to: 0
 44466                           ;api.c: 537: if(number_of_steps>0)
 44467  00FABA  BF9F               	btfsc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),7,b
 44468  00FABC  D018               	goto	l2354
 44469  00FABE  519F               	movf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),w,b
 44470  00FAC0  119E               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),w,b
 44471  00FAC2  119D               	iorwf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),w,b
 44472  00FAC4  E103               	bnz	u14260
 44473  00FAC6  059C               	decf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),w,b
 44474  00FAC8  A0D8               	btfss	status,0,c
 44475  00FACA  D011               	goto	l2354
 44476  00FACC                     u14260:
 44477                           
 44478                           ; BSR set to: 0
 44479                           ;api.c: 538: {;api.c: 539: motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t) number_of_ste
      +                          ps, 0xFFFF, MOTOR_OVERSHOOT_WITH_OVERSHOOT);
 44480  00FACC  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44481  00FAD0  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44482  00FAD4  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44483  00FAD8  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44484  00FADC  0EFF               	movlw	255
 44485  00FADE  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44486  00FAE0  6990               	setf	motor_move_steps@speed& (0+255),b
 44487  00FAE2  0E00               	movlw	0
 44488  00FAE4  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44489  00FAE6  0E01               	movlw	1
 44490  00FAE8  EC54  F0AC         	call	_motor_move_steps
 44491                           
 44492                           ;api.c: 540: }
 44493  00FAEC  D019               	goto	l2355
 44494  00FAEE                     l2354:
 44495                           
 44496                           ;api.c: 541: else;api.c: 542: {;api.c: 543: number_of_steps = -number_of_steps;
 44497  00FAEE  0100               	movlb	0	; () banked
 44498  00FAF0  1F9F               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44499  00FAF2  1F9E               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44500  00FAF4  1F9D               	comf	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44501  00FAF6  6D9C               	negf	__parse_jump_steps_with_overshoot@number_of_steps& (0+255),b
 44502  00FAF8  0E00               	movlw	0
 44503  00FAFA  239D               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+1)& (0+255),f,b
 44504  00FAFC  239E               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+2)& (0+255),f,b
 44505  00FAFE  239F               	addwfc	(__parse_jump_steps_with_overshoot@number_of_steps+3)& (0+255),f,b
 44506                           
 44507                           ; BSR set to: 0
 44508                           ;api.c: 544: motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_steps, 0xFFFF, M
      +                          OTOR_OVERSHOOT_WITH_OVERSHOOT);
 44509  00FB00  C09C  F08C         	movff	__parse_jump_steps_with_overshoot@number_of_steps,motor_move_steps@distance
 44510  00FB04  C09D  F08D         	movff	__parse_jump_steps_with_overshoot@number_of_steps+1,motor_move_steps@distance+1
 44511  00FB08  C09E  F08E         	movff	__parse_jump_steps_with_overshoot@number_of_steps+2,motor_move_steps@distance+2
 44512  00FB0C  C09F  F08F         	movff	__parse_jump_steps_with_overshoot@number_of_steps+3,motor_move_steps@distance+3
 44513  00FB10  0EFF               	movlw	255
 44514  00FB12  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44515  00FB14  6990               	setf	motor_move_steps@speed& (0+255),b
 44516  00FB16  0E00               	movlw	0
 44517  00FB18  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44518  00FB1A  0EFF               	movlw	255
 44519  00FB1C  EC54  F0AC         	call	_motor_move_steps
 44520  00FB20                     l2355:
 44521                           
 44522                           ;api.c: 545: };api.c: 548: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 44523  00FB20  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44524  00FB24  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44525  00FB28  50DF               	movf	indf2,w,c
 44526  00FB2A  B4D8               	btfsc	status,2,c
 44527  00FB2C  D02C               	goto	l2356
 44528  00FB2E  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44529  00FB32  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44530  00FB36  0E3E               	movlw	62
 44531  00FB38  60DF               	cpfslt	indf2,c
 44532  00FB3A  D025               	goto	l2356
 44533                           
 44534                           ;api.c: 549: {;api.c: 550: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS_WITH_OVERSH
      +                          OOT;
 44535  00FB3C  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44536  00FB40  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44537  00FB44  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44538  00FB48  0E01               	movlw	1
 44539  00FB4A  26DF               	addwf	indf2,f,c
 44540  00FB4C  0100               	movlb	0	; () banked
 44541  00FB4E  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44542  00FB50  0D01               	mullw	1
 44543  00FB52  50F3               	movf	prodl,w,c
 44544  00FB54  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44545  00FB56  6ED9               	movwf	fsr2l,c
 44546  00FB58  50F4               	movf	prodh,w,c
 44547  00FB5A  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44548  00FB5C  6EDA               	movwf	fsr2h,c
 44549  00FB5E  0E91               	movlw	145
 44550  00FB60  6EDF               	movwf	indf2,c
 44551                           
 44552                           ;api.c: 551: out_buffer[(*out_idx_ptr)++] = return_value;
 44553  00FB62  C098  FFD9         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr,fsr2l
 44554  00FB66  C099  FFDA         	movff	__parse_jump_steps_with_overshoot@out_idx_ptr+1,fsr2h
 44555  00FB6A  CFDF F09A          	movff	indf2,??__parse_jump_steps_with_overshoot
 44556  00FB6E  0E01               	movlw	1
 44557  00FB70  26DF               	addwf	indf2,f,c
 44558  00FB72  519A               	movf	??__parse_jump_steps_with_overshoot& (0+255),w,b
 44559  00FB74  0D01               	mullw	1
 44560  00FB76  50F3               	movf	prodl,w,c
 44561  00FB78  2596               	addwf	__parse_jump_steps_with_overshoot@out_buffer& (0+255),w,b
 44562  00FB7A  6ED9               	movwf	fsr2l,c
 44563  00FB7C  50F4               	movf	prodh,w,c
 44564  00FB7E  2197               	addwfc	(__parse_jump_steps_with_overshoot@out_buffer+1)& (0+255),w,b
 44565  00FB80  6EDA               	movwf	fsr2h,c
 44566  00FB82  C09B  FFDF         	movff	__parse_jump_steps_with_overshoot@return_value,indf2
 44567  00FB86                     l2356:
 44568                           
 44569                           ;api.c: 552: };api.c: 554: return 5;
 44570                           
 44571                           ; BSR set to: 0
 44572  00FB86  0E05               	movlw	5
 44573  00FB88  0012               	return	
 44574  00FB8A                     __end_of__parse_jump_steps_with_overshoot:
 44575                           	opt stack 0
 44576                           tosu	equ	0xFFF
 44577                           tosh	equ	0xFFE
 44578                           tosl	equ	0xFFD
 44579                           pclath	equ	0xFFA
 44580                           tblptru	equ	0xFF8
 44581                           tblptrh	equ	0xFF7
 44582                           tblptrl	equ	0xFF6
 44583                           tablat	equ	0xFF5
 44584                           prodh	equ	0xFF4
 44585                           prodl	equ	0xFF3
 44586                           intcon	equ	0xFF2
 44587                           indf0	equ	0xFEF
 44588                           postinc0	equ	0xFEE
 44589                           fsr0h	equ	0xFEA
 44590                           fsr0l	equ	0xFE9
 44591                           wreg	equ	0xFE8
 44592                           indf1	equ	0xFE7
 44593                           postinc1	equ	0xFE6
 44594                           postdec1	equ	0xFE5
 44595                           plusw1	equ	0xFE3
 44596                           fsr1h	equ	0xFE2
 44597                           fsr1l	equ	0xFE1
 44598                           indf2	equ	0xFDF
 44599                           postinc2	equ	0xFDE
 44600                           postdec2	equ	0xFDD
 44601                           plusw2	equ	0xFDB
 44602                           fsr2h	equ	0xFDA
 44603                           fsr2l	equ	0xFD9
 44604                           status	equ	0xFD8
 44605                           
 44606 ;; *************** function __parse_jump_steps *****************
 44607 ;; Defined at:
 44608 ;;		line 488 in file "api.c"
 44609 ;; Parameters:    Size  Location     Type
 44610 ;;  data            2   52[BANK0 ] PTR unsigned char 
 44611 ;;		 -> ReceivedDataBuffer(64), 
 44612 ;;  out_buffer      2   54[BANK0 ] PTR unsigned char 
 44613 ;;		 -> ToSendDataBuffer(64), 
 44614 ;;  out_idx_ptr     2   56[BANK0 ] PTR unsigned char 
 44615 ;;		 -> api_parse@out_idx(1), 
 44616 ;; Auto vars:     Size  Location     Type
 44617 ;;  number_of_st    4   60[BANK0 ] long 
 44618 ;;  return_value    1   59[BANK0 ] unsigned char 
 44619 ;; Return value:  Size  Location     Type
 44620 ;;                  1    wreg      unsigned char 
 44621 ;; Registers used:
 44622 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44623 ;; Tracked objects:
 44624 ;;		On entry : 0/0
 44625 ;;		On exit  : 0/0
 44626 ;;		Unchanged: 0/0
 44627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44628 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44629 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44630 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44631 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44632 ;;Total ram usage:       12 bytes
 44633 ;; Hardware stack levels used:    1
 44634 ;; Hardware stack levels required when called:   14
 44635 ;; This function calls:
 44636 ;;		_motor_move_steps
 44637 ;; This function is called by:
 44638 ;;		__parse_command_long
 44639 ;; This function uses a non-reentrant model
 44640 ;;
 44641                           
 44642                           	psect	text184
 44643  00FB8A                     __ptext184:
 44644                           	opt stack 0
 44645  00FB8A                     __parse_jump_steps:
 44646                           	opt stack 13
 44647                           
 44648                           ;api.c: 492: uint8_t return_value;;api.c: 493: int32_t number_of_steps;;api.c: 495: numb
      +                          er_of_steps = data[1];
 44649                           
 44650                           ;incstack = 0
 44651  00FB8A  0100               	movlb	0	; () banked
 44652  00FB8C  EE20 F001          	lfsr	2,1
 44653  00FB90  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44654  00FB92  26D9               	addwf	fsr2l,f,c
 44655  00FB94  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44656  00FB96  22DA               	addwfc	fsr2h,f,c
 44657  00FB98  50DF               	movf	indf2,w,c
 44658  00FB9A  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44659  00FB9C  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44660  00FB9E  6F9C               	movwf	__parse_jump_steps@number_of_steps& (0+255),b
 44661  00FBA0  6B9D               	clrf	(__parse_jump_steps@number_of_steps+1)& (0+255),b
 44662  00FBA2  6B9E               	clrf	(__parse_jump_steps@number_of_steps+2)& (0+255),b
 44663  00FBA4  6B9F               	clrf	(__parse_jump_steps@number_of_steps+3)& (0+255),b
 44664                           
 44665                           ; BSR set to: 0
 44666                           ;api.c: 496: number_of_steps <<= 8;
 44667  00FBA6  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44668  00FBAA  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44669  00FBAE  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44670  00FBB2  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44671                           
 44672                           ; BSR set to: 0
 44673                           ;api.c: 497: number_of_steps |= data[2];
 44674  00FBB4  EE20 F002          	lfsr	2,2
 44675  00FBB8  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44676  00FBBA  26D9               	addwf	fsr2l,f,c
 44677  00FBBC  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44678  00FBBE  22DA               	addwfc	fsr2h,f,c
 44679  00FBC0  50DF               	movf	indf2,w,c
 44680  00FBC2  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44681  00FBC4  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44682  00FBC6  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44683                           
 44684                           ;api.c: 498: number_of_steps <<= 8;
 44685  00FBC8  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44686  00FBCC  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44687  00FBD0  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44688  00FBD4  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44689                           
 44690                           ; BSR set to: 0
 44691                           ;api.c: 499: number_of_steps |= data[3];
 44692  00FBD6  EE20 F003          	lfsr	2,3
 44693  00FBDA  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44694  00FBDC  26D9               	addwf	fsr2l,f,c
 44695  00FBDE  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44696  00FBE0  22DA               	addwfc	fsr2h,f,c
 44697  00FBE2  50DF               	movf	indf2,w,c
 44698  00FBE4  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44699  00FBE6  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44700  00FBE8  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44701                           
 44702                           ; BSR set to: 0
 44703                           ;api.c: 500: number_of_steps <<= 8;
 44704  00FBEA  C09E  F09F         	movff	__parse_jump_steps@number_of_steps+2,__parse_jump_steps@number_of_steps+3
 44705  00FBEE  C09D  F09E         	movff	__parse_jump_steps@number_of_steps+1,__parse_jump_steps@number_of_steps+2
 44706  00FBF2  C09C  F09D         	movff	__parse_jump_steps@number_of_steps,__parse_jump_steps@number_of_steps+1
 44707  00FBF6  6B9C               	clrf	__parse_jump_steps@number_of_steps& (0+255),b
 44708                           
 44709                           ;api.c: 501: number_of_steps |= data[4];
 44710  00FBF8  EE20 F004          	lfsr	2,4
 44711  00FBFC  5194               	movf	__parse_jump_steps@data& (0+255),w,b
 44712  00FBFE  26D9               	addwf	fsr2l,f,c
 44713  00FC00  5195               	movf	(__parse_jump_steps@data+1)& (0+255),w,b
 44714  00FC02  22DA               	addwfc	fsr2h,f,c
 44715  00FC04  50DF               	movf	indf2,w,c
 44716  00FC06  6F9A               	movwf	??__parse_jump_steps& (0+255),b
 44717  00FC08  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44718  00FC0A  139C               	iorwf	__parse_jump_steps@number_of_steps& (0+255),f,b
 44719                           
 44720                           ; BSR set to: 0
 44721                           ;api.c: 503: if(number_of_steps>0)
 44722  00FC0C  BF9F               	btfsc	(__parse_jump_steps@number_of_steps+3)& (0+255),7,b
 44723  00FC0E  D018               	goto	l2348
 44724  00FC10  519F               	movf	(__parse_jump_steps@number_of_steps+3)& (0+255),w,b
 44725  00FC12  119E               	iorwf	(__parse_jump_steps@number_of_steps+2)& (0+255),w,b
 44726  00FC14  119D               	iorwf	(__parse_jump_steps@number_of_steps+1)& (0+255),w,b
 44727  00FC16  E103               	bnz	u14230
 44728  00FC18  059C               	decf	__parse_jump_steps@number_of_steps& (0+255),w,b
 44729  00FC1A  A0D8               	btfss	status,0,c
 44730  00FC1C  D011               	goto	l2348
 44731  00FC1E                     u14230:
 44732                           
 44733                           ; BSR set to: 0
 44734                           ;api.c: 504: {;api.c: 505: return_value = motor_move_steps(MOTOR_DIRECTION_CW, (uint32_t
      +                          ) number_of_steps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 44735  00FC1E  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 44736  00FC22  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 44737  00FC26  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 44738  00FC2A  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 44739  00FC2E  0EFF               	movlw	255
 44740  00FC30  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44741  00FC32  6990               	setf	motor_move_steps@speed& (0+255),b
 44742  00FC34  0E01               	movlw	1
 44743  00FC36  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44744  00FC38  0E01               	movlw	1
 44745  00FC3A  EC54  F0AC         	call	_motor_move_steps
 44746  00FC3E  D018               	goto	L68
 44747  00FC40                     l2348:
 44748                           
 44749                           ; BSR set to: 0
 44750                           ;api.c: 507: else;api.c: 508: {;api.c: 509: number_of_steps = -number_of_steps;
 44751                           
 44752                           ; BSR set to: 0
 44753  00FC40  1F9F               	comf	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 44754  00FC42  1F9E               	comf	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 44755  00FC44  1F9D               	comf	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 44756  00FC46  6D9C               	negf	__parse_jump_steps@number_of_steps& (0+255),b
 44757  00FC48  0E00               	movlw	0
 44758  00FC4A  239D               	addwfc	(__parse_jump_steps@number_of_steps+1)& (0+255),f,b
 44759  00FC4C  239E               	addwfc	(__parse_jump_steps@number_of_steps+2)& (0+255),f,b
 44760  00FC4E  239F               	addwfc	(__parse_jump_steps@number_of_steps+3)& (0+255),f,b
 44761                           
 44762                           ; BSR set to: 0
 44763                           ;api.c: 510: return_value = motor_move_steps(MOTOR_DIRECTION_CCW, (uint32_t) number_of_s
      +                          teps, 0xFFFF, MOTOR_OVERSHOOT_NO_OVERSHOOT);
 44764  00FC50  C09C  F08C         	movff	__parse_jump_steps@number_of_steps,motor_move_steps@distance
 44765  00FC54  C09D  F08D         	movff	__parse_jump_steps@number_of_steps+1,motor_move_steps@distance+1
 44766  00FC58  C09E  F08E         	movff	__parse_jump_steps@number_of_steps+2,motor_move_steps@distance+2
 44767  00FC5C  C09F  F08F         	movff	__parse_jump_steps@number_of_steps+3,motor_move_steps@distance+3
 44768  00FC60  0EFF               	movlw	255
 44769  00FC62  6F91               	movwf	(motor_move_steps@speed+1)& (0+255),b
 44770  00FC64  6990               	setf	motor_move_steps@speed& (0+255),b
 44771  00FC66  0E01               	movlw	1
 44772  00FC68  6F92               	movwf	motor_move_steps@overshoot& (0+255),b
 44773  00FC6A  0EFF               	movlw	255
 44774  00FC6C  EC54  F0AC         	call	_motor_move_steps
 44775  00FC70                     L68:
 44776  00FC70  0100               	movlb	0	; () banked
 44777  00FC72  6F9B               	movwf	__parse_jump_steps@return_value& (0+255),b
 44778                           
 44779                           ; BSR set to: 0
 44780                           ;api.c: 511: };api.c: 514: if(((*out_idx_ptr)>0) && ((*out_idx_ptr)<62))
 44781                           
 44782                           ; BSR set to: 0
 44783  00FC74  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 44784  00FC78  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 44785  00FC7C  50DF               	movf	indf2,w,c
 44786  00FC7E  B4D8               	btfsc	status,2,c
 44787  00FC80  D02B               	goto	l2350
 44788                           
 44789                           ; BSR set to: 0
 44790  00FC82  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 44791  00FC86  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 44792  00FC8A  0E3E               	movlw	62
 44793  00FC8C  60DF               	cpfslt	indf2,c
 44794  00FC8E  D024               	goto	l2350
 44795                           
 44796                           ; BSR set to: 0
 44797                           ;api.c: 515: {;api.c: 516: out_buffer[(*out_idx_ptr)++] = COMMAND_JUMP_STEPS;
 44798  00FC90  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 44799  00FC94  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 44800  00FC98  CFDF F09A          	movff	indf2,??__parse_jump_steps
 44801  00FC9C  0E01               	movlw	1
 44802  00FC9E  26DF               	addwf	indf2,f,c
 44803  00FCA0  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44804  00FCA2  0D01               	mullw	1
 44805  00FCA4  50F3               	movf	prodl,w,c
 44806  00FCA6  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 44807  00FCA8  6ED9               	movwf	fsr2l,c
 44808  00FCAA  50F4               	movf	prodh,w,c
 44809  00FCAC  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 44810  00FCAE  6EDA               	movwf	fsr2h,c
 44811  00FCB0  0E90               	movlw	144
 44812  00FCB2  6EDF               	movwf	indf2,c
 44813                           
 44814                           ;api.c: 517: out_buffer[(*out_idx_ptr)++] = return_value;
 44815  00FCB4  C098  FFD9         	movff	__parse_jump_steps@out_idx_ptr,fsr2l
 44816  00FCB8  C099  FFDA         	movff	__parse_jump_steps@out_idx_ptr+1,fsr2h
 44817  00FCBC  CFDF F09A          	movff	indf2,??__parse_jump_steps
 44818  00FCC0  0E01               	movlw	1
 44819  00FCC2  26DF               	addwf	indf2,f,c
 44820  00FCC4  519A               	movf	??__parse_jump_steps& (0+255),w,b
 44821  00FCC6  0D01               	mullw	1
 44822  00FCC8  50F3               	movf	prodl,w,c
 44823  00FCCA  2596               	addwf	__parse_jump_steps@out_buffer& (0+255),w,b
 44824  00FCCC  6ED9               	movwf	fsr2l,c
 44825  00FCCE  50F4               	movf	prodh,w,c
 44826  00FCD0  2197               	addwfc	(__parse_jump_steps@out_buffer+1)& (0+255),w,b
 44827  00FCD2  6EDA               	movwf	fsr2h,c
 44828  00FCD4  C09B  FFDF         	movff	__parse_jump_steps@return_value,indf2
 44829  00FCD8                     l2350:
 44830                           
 44831                           ; BSR set to: 0
 44832                           ;api.c: 518: };api.c: 520: return 5;
 44833                           
 44834                           ; BSR set to: 0
 44835  00FCD8  0E05               	movlw	5
 44836  00FCDA  0012               	return	
 44837  00FCDC                     __end_of__parse_jump_steps:
 44838                           	opt stack 0
 44839                           tosu	equ	0xFFF
 44840                           tosh	equ	0xFFE
 44841                           tosl	equ	0xFFD
 44842                           pclath	equ	0xFFA
 44843                           tblptru	equ	0xFF8
 44844                           tblptrh	equ	0xFF7
 44845                           tblptrl	equ	0xFF6
 44846                           tablat	equ	0xFF5
 44847                           prodh	equ	0xFF4
 44848                           prodl	equ	0xFF3
 44849                           intcon	equ	0xFF2
 44850                           indf0	equ	0xFEF
 44851                           postinc0	equ	0xFEE
 44852                           fsr0h	equ	0xFEA
 44853                           fsr0l	equ	0xFE9
 44854                           wreg	equ	0xFE8
 44855                           indf1	equ	0xFE7
 44856                           postinc1	equ	0xFE6
 44857                           postdec1	equ	0xFE5
 44858                           plusw1	equ	0xFE3
 44859                           fsr1h	equ	0xFE2
 44860                           fsr1l	equ	0xFE1
 44861                           indf2	equ	0xFDF
 44862                           postinc2	equ	0xFDE
 44863                           postdec2	equ	0xFDD
 44864                           plusw2	equ	0xFDB
 44865                           fsr2h	equ	0xFDA
 44866                           fsr2l	equ	0xFD9
 44867                           status	equ	0xFD8
 44868                           
 44869 ;; *************** function _motor_move_steps *****************
 44870 ;; Defined at:
 44871 ;;		line 986 in file "motor.c"
 44872 ;; Parameters:    Size  Location     Type
 44873 ;;  direction       1    wreg     enum E6622
 44874 ;;  distance        4   44[BANK0 ] unsigned long 
 44875 ;;  speed           2   48[BANK0 ] unsigned int 
 44876 ;;  overshoot       1   50[BANK0 ] enum E6635
 44877 ;; Auto vars:     Size  Location     Type
 44878 ;;  direction       1   51[BANK0 ] enum E6622
 44879 ;; Return value:  Size  Location     Type
 44880 ;;                  1    wreg      enum E6782
 44881 ;; Registers used:
 44882 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44883 ;; Tracked objects:
 44884 ;;		On entry : 0/0
 44885 ;;		On exit  : 0/0
 44886 ;;		Unchanged: 0/0
 44887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44888 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44889 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44891 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44892 ;;Total ram usage:        8 bytes
 44893 ;; Hardware stack levels used:    1
 44894 ;; Hardware stack levels required when called:   13
 44895 ;; This function calls:
 44896 ;;		__motor_move_steps
 44897 ;; This function is called by:
 44898 ;;		__parse_jump_steps
 44899 ;;		__parse_jump_steps_with_overshoot
 44900 ;;		_motor_arc_move
 44901 ;; This function uses a non-reentrant model
 44902 ;;
 44903                           
 44904                           	psect	text185
 44905  0158A8                     __ptext185:
 44906                           	opt stack 0
 44907  0158A8                     _motor_move_steps:
 44908                           	opt stack 15
 44909                           
 44910                           ; BSR set to: 0
 44911                           ;incstack = 0
 44912                           ;motor_move_steps@direction stored from wreg
 44913  0158A8  0100               	movlb	0	; () banked
 44914  0158AA  6F93               	movwf	motor_move_steps@direction& (0+255),b
 44915                           
 44916                           ;motor.c: 989: return _motor_move_steps(direction, distance, speed, overshoot, MOTOR_MOV
      +                          E_TYPE_NORMAL);
 44917  0158AC  C08C  F07D         	movff	motor_move_steps@distance,__motor_move_steps@distance_in_steps
 44918  0158B0  C08D  F07E         	movff	motor_move_steps@distance+1,__motor_move_steps@distance_in_steps+1
 44919  0158B4  C08E  F07F         	movff	motor_move_steps@distance+2,__motor_move_steps@distance_in_steps+2
 44920  0158B8  C08F  F080         	movff	motor_move_steps@distance+3,__motor_move_steps@distance_in_steps+3
 44921  0158BC  C090  F081         	movff	motor_move_steps@speed,__motor_move_steps@speed
 44922  0158C0  C091  F082         	movff	motor_move_steps@speed+1,__motor_move_steps@speed+1
 44923  0158C4  C092  F083         	movff	motor_move_steps@overshoot,__motor_move_steps@overshoot
 44924  0158C8  0E00               	movlw	0
 44925  0158CA  0100               	movlb	0	; () banked
 44926  0158CC  6F84               	movwf	__motor_move_steps@type& (0+255),b
 44927  0158CE  5193               	movf	motor_move_steps@direction& (0+255),w,b
 44928  0158D0  ECC2  F076         	call	__motor_move_steps
 44929  0158D4  0012               	return	
 44930  0158D6                     __end_of_motor_move_steps:
 44931                           	opt stack 0
 44932                           tosu	equ	0xFFF
 44933                           tosh	equ	0xFFE
 44934                           tosl	equ	0xFFD
 44935                           pclath	equ	0xFFA
 44936                           tblptru	equ	0xFF8
 44937                           tblptrh	equ	0xFF7
 44938                           tblptrl	equ	0xFF6
 44939                           tablat	equ	0xFF5
 44940                           prodh	equ	0xFF4
 44941                           prodl	equ	0xFF3
 44942                           intcon	equ	0xFF2
 44943                           indf0	equ	0xFEF
 44944                           postinc0	equ	0xFEE
 44945                           fsr0h	equ	0xFEA
 44946                           fsr0l	equ	0xFE9
 44947                           wreg	equ	0xFE8
 44948                           indf1	equ	0xFE7
 44949                           postinc1	equ	0xFE6
 44950                           postdec1	equ	0xFE5
 44951                           plusw1	equ	0xFE3
 44952                           fsr1h	equ	0xFE2
 44953                           fsr1l	equ	0xFE1
 44954                           indf2	equ	0xFDF
 44955                           postinc2	equ	0xFDE
 44956                           postdec2	equ	0xFDD
 44957                           plusw2	equ	0xFDB
 44958                           fsr2h	equ	0xFDA
 44959                           fsr2l	equ	0xFD9
 44960                           status	equ	0xFD8
 44961                           
 44962 ;; *************** function __motor_move_steps *****************
 44963 ;; Defined at:
 44964 ;;		line 187 in file "motor.c"
 44965 ;; Parameters:    Size  Location     Type
 44966 ;;  direction       1    wreg     enum E6622
 44967 ;;  distance_in_    4   29[BANK0 ] unsigned long 
 44968 ;;  speed           2   33[BANK0 ] unsigned int 
 44969 ;;  overshoot       1   35[BANK0 ] enum E6635
 44970 ;;  type            1   36[BANK0 ] enum E6631
 44971 ;; Auto vars:     Size  Location     Type
 44972 ;;  direction       1   43[BANK0 ] enum E6622
 44973 ;;  distance_to_    4   39[BANK0 ] long 
 44974 ;;  return_value    1   38[BANK0 ] enum E6639
 44975 ;;  return_value    1   37[BANK0 ] enum E6639
 44976 ;; Return value:  Size  Location     Type
 44977 ;;                  1    wreg      enum E6639
 44978 ;; Registers used:
 44979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 44980 ;; Tracked objects:
 44981 ;;		On entry : 0/0
 44982 ;;		On exit  : 0/0
 44983 ;;		Unchanged: 0/0
 44984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44985 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44986 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44988 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44989 ;;Total ram usage:       15 bytes
 44990 ;; Hardware stack levels used:    1
 44991 ;; Hardware stack levels required when called:   12
 44992 ;; This function calls:
 44993 ;;		__motor_distance_to_limit
 44994 ;;		__motor_schedule_command
 44995 ;;		_motor_items_in_cue
 44996 ;; This function is called by:
 44997 ;;		_motor_move_steps
 44998 ;;		_motor_move_degrees_int
 44999 ;;		_motor_goto_steps
 45000 ;;		_motor_move_endless
 45001 ;;		_motor_move_degrees_float
 45002 ;;		_motor_goto_degrees_float
 45003 ;;		_motor_goto_degrees_int
 45004 ;; This function uses a non-reentrant model
 45005 ;;
 45006                           
 45007                           	psect	text186
 45008  00ED84                     __ptext186:
 45009                           	opt stack 0
 45010  00ED84                     __motor_move_steps:
 45011                           	opt stack 16
 45012                           
 45013                           ;incstack = 0
 45014                           ;__motor_move_steps@direction stored from wreg
 45015  00ED84  0100               	movlb	0	; () banked
 45016  00ED86  6F8B               	movwf	__motor_move_steps@direction& (0+255),b
 45017                           
 45018                           ;motor.c: 189: int32_t distance_to_limit;;motor.c: 190: motorReturnValue_t return_value_
      +                          1;;motor.c: 191: motorReturnValue_t return_value_2;;motor.c: 193: if(os.busy || motor_it
      +                          ems_in_cue()!=0)
 45019  00ED88  0101               	movlb	1	; () banked
 45020  00ED8A  5174               	movf	(_os+16)& (0+255),w,b	;volatile
 45021  00ED8C  A4D8               	btfss	status,2,c
 45022  00ED8E  D005               	goto	u11610
 45023                           
 45024                           ; BSR set to: 1
 45025  00ED90  ECA3  F0AE         	call	_motor_items_in_cue	;wreg free
 45026  00ED94  0900               	iorlw	0
 45027  00ED96  B4D8               	btfsc	status,2,c
 45028  00ED98  D002               	goto	l2463
 45029  00ED9A                     u11610:
 45030                           
 45031                           ;motor.c: 194: {;motor.c: 196: return MOTOR_RETURN_VALUE_BUSY;
 45032  00ED9A  0E01               	movlw	1
 45033  00ED9C  0012               	return	
 45034  00ED9E                     l2463:
 45035                           
 45036                           ;motor.c: 197: };motor.c: 199: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45037  00ED9E  0100               	movlb	0	; () banked
 45038  00EDA0  058B               	decf	__motor_move_steps@direction& (0+255),w,b
 45039  00EDA2  B4D8               	btfsc	status,2,c
 45040  00EDA4  D005               	goto	l2467
 45041                           
 45042                           ; BSR set to: 0
 45043  00EDA6  298B               	incf	__motor_move_steps@direction& (0+255),w,b
 45044  00EDA8  B4D8               	btfsc	status,2,c
 45045  00EDAA  D002               	goto	l2467
 45046                           
 45047                           ; BSR set to: 0
 45048                           ;motor.c: 200: {;motor.c: 202: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45049  00EDAC  0E04               	movlw	4
 45050                           
 45051                           ; BSR set to: 0
 45052  00EDAE  0012               	return	
 45053  00EDB0                     l2467:
 45054                           
 45055                           ; BSR set to: 0
 45056                           ;motor.c: 203: };motor.c: 205: if(distance_in_steps==0)
 45057                           
 45058                           ; BSR set to: 0
 45059  00EDB0  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45060  00EDB2  117E               	iorwf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45061  00EDB4  117F               	iorwf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45062  00EDB6  1180               	iorwf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45063  00EDB8  A4D8               	btfss	status,2,c
 45064  00EDBA  D002               	goto	l2468
 45065                           
 45066                           ; BSR set to: 0
 45067                           ;motor.c: 206: {;motor.c: 208: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45068  00EDBC  0E03               	movlw	3
 45069                           
 45070                           ; BSR set to: 0
 45071  00EDBE  0012               	return	
 45072  00EDC0                     l2468:
 45073                           
 45074                           ; BSR set to: 0
 45075                           ;motor.c: 209: };motor.c: 211: if(speed==0)
 45076                           
 45077                           ; BSR set to: 0
 45078  00EDC0  5181               	movf	__motor_move_steps@speed& (0+255),w,b
 45079  00EDC2  1182               	iorwf	(__motor_move_steps@speed+1)& (0+255),w,b
 45080  00EDC4  A4D8               	btfss	status,2,c
 45081  00EDC6  D002               	goto	l2469
 45082                           
 45083                           ; BSR set to: 0
 45084                           ;motor.c: 212: {;motor.c: 214: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45085  00EDC8  0E02               	movlw	2
 45086                           
 45087                           ; BSR set to: 0
 45088  00EDCA  0012               	return	
 45089  00EDCC                     l2469:
 45090                           
 45091                           ; BSR set to: 0
 45092                           ;motor.c: 215: };motor.c: 217: if(!((type==MOTOR_MOVE_TYPE_NORMAL) || (type==MOTOR_MOVE_
      +                          TYPE_ENDLESS)))
 45093                           
 45094                           ; BSR set to: 0
 45095  00EDCC  5184               	movf	__motor_move_steps@type& (0+255),w,b
 45096  00EDCE  B4D8               	btfsc	status,2,c
 45097  00EDD0  D005               	goto	l2470
 45098                           
 45099                           ; BSR set to: 0
 45100  00EDD2  0584               	decf	__motor_move_steps@type& (0+255),w,b
 45101  00EDD4  B4D8               	btfsc	status,2,c
 45102  00EDD6  D002               	goto	l2470
 45103                           
 45104                           ; BSR set to: 0
 45105                           ;motor.c: 218: {;motor.c: 220: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45106  00EDD8  0E05               	movlw	5
 45107                           
 45108                           ; BSR set to: 0
 45109  00EDDA  0012               	return	
 45110  00EDDC                     l2470:
 45111                           
 45112                           ; BSR set to: 0
 45113                           ;motor.c: 221: };motor.c: 223: if(!((overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT) || (oversh
      +                          oot==MOTOR_OVERSHOOT_WITH_OVERSHOOT)))
 45114                           
 45115                           ; BSR set to: 0
 45116  00EDDC  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45117  00EDDE  B4D8               	btfsc	status,2,c
 45118  00EDE0  D005               	goto	l2471
 45119                           
 45120                           ; BSR set to: 0
 45121  00EDE2  5183               	movf	__motor_move_steps@overshoot& (0+255),w,b
 45122  00EDE4  B4D8               	btfsc	status,2,c
 45123  00EDE6  D002               	goto	l2471
 45124                           
 45125                           ; BSR set to: 0
 45126                           ;motor.c: 224: {;motor.c: 226: return MOTOR_RETURN_VALUE_INVALID_OVERSHOOT;
 45127  00EDE8  0E06               	movlw	6
 45128                           
 45129                           ; BSR set to: 0
 45130  00EDEA  0012               	return	
 45131  00EDEC                     l2471:
 45132                           
 45133                           ; BSR set to: 0
 45134                           ;motor.c: 227: };motor.c: 233: distance_to_limit = _motor_distance_to_limit(direction);
 45135                           
 45136                           ; BSR set to: 0
 45137  00EDEC  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45138  00EDEE  EC13  F07F         	call	__motor_distance_to_limit
 45139  00EDF2  C06C  F087         	movff	?__motor_distance_to_limit,__motor_move_steps@distance_to_limit
 45140  00EDF6  C06D  F088         	movff	?__motor_distance_to_limit+1,__motor_move_steps@distance_to_limit+1
 45141  00EDFA  C06E  F089         	movff	?__motor_distance_to_limit+2,__motor_move_steps@distance_to_limit+2
 45142  00EDFE  C06F  F08A         	movff	?__motor_distance_to_limit+3,__motor_move_steps@distance_to_limit+3
 45143                           
 45144                           ;motor.c: 236: if(distance_to_limit<=0)
 45145  00EE02  0100               	movlb	0	; () banked
 45146  00EE04  BF8A               	btfsc	(__motor_move_steps@distance_to_limit+3)& (0+255),7,b
 45147  00EE06  D007               	goto	u11700
 45148  00EE08  518A               	movf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45149  00EE0A  1189               	iorwf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45150  00EE0C  1188               	iorwf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45151  00EE0E  E105               	bnz	l13338
 45152  00EE10  0587               	decf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45153  00EE12  B0D8               	btfsc	status,0,c
 45154  00EE14  D002               	goto	l2472
 45155  00EE16                     u11700:
 45156                           
 45157                           ; BSR set to: 0
 45158                           ;motor.c: 237: {;motor.c: 238: return MOTOR_RETURN_VALUE_LIMIT_VIOLATED;
 45159  00EE16  0E07               	movlw	7
 45160                           
 45161                           ; BSR set to: 0
 45162  00EE18  0012               	return	
 45163  00EE1A                     l2472:
 45164  00EE1A                     l13338:
 45165                           
 45166                           ; BSR set to: 0
 45167                           ;motor.c: 239: };motor.c: 242: if(distance_to_limit!=2147483647)
 45168  00EE1A  2987               	incf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45169  00EE1C  E108               	bnz	u11710
 45170  00EE1E  2988               	incf	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45171  00EE20  E106               	bnz	u11710
 45172  00EE22  2989               	incf	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45173  00EE24  E104               	bnz	u11710
 45174  00EE26  0E7F               	movlw	127
 45175  00EE28  198A               	xorwf	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45176  00EE2A  B4D8               	btfsc	status,2,c
 45177  00EE2C  D002               	goto	l2473
 45178  00EE2E                     u11710:
 45179                           
 45180                           ; BSR set to: 0
 45181                           ;motor.c: 243: {;motor.c: 244: type = MOTOR_MOVE_TYPE_NORMAL;
 45182  00EE2E  0E00               	movlw	0
 45183  00EE30  6F84               	movwf	__motor_move_steps@type& (0+255),b
 45184  00EE32                     l2473:
 45185                           
 45186                           ; BSR set to: 0
 45187                           ;motor.c: 245: };motor.c: 248: if(distance_in_steps>((uint32_t) distance_to_limit))
 45188                           
 45189                           ; BSR set to: 0
 45190  00EE32  517D               	movf	__motor_move_steps@distance_in_steps& (0+255),w,b
 45191  00EE34  5D87               	subwf	__motor_move_steps@distance_to_limit& (0+255),w,b
 45192  00EE36  517E               	movf	(__motor_move_steps@distance_in_steps+1)& (0+255),w,b
 45193  00EE38  5988               	subwfb	(__motor_move_steps@distance_to_limit+1)& (0+255),w,b
 45194  00EE3A  517F               	movf	(__motor_move_steps@distance_in_steps+2)& (0+255),w,b
 45195  00EE3C  5989               	subwfb	(__motor_move_steps@distance_to_limit+2)& (0+255),w,b
 45196  00EE3E  5180               	movf	(__motor_move_steps@distance_in_steps+3)& (0+255),w,b
 45197  00EE40  598A               	subwfb	(__motor_move_steps@distance_to_limit+3)& (0+255),w,b
 45198  00EE42  B0D8               	btfsc	status,0,c
 45199  00EE44  D008               	goto	l2474
 45200                           
 45201                           ; BSR set to: 0
 45202                           ;motor.c: 249: {;motor.c: 250: distance_in_steps = (uint32_t) distance_to_limit;
 45203  00EE46  C087  F07D         	movff	__motor_move_steps@distance_to_limit,__motor_move_steps@distance_in_steps
 45204  00EE4A  C088  F07E         	movff	__motor_move_steps@distance_to_limit+1,__motor_move_steps@distance_in_steps+1
 45205  00EE4E  C089  F07F         	movff	__motor_move_steps@distance_to_limit+2,__motor_move_steps@distance_in_steps+2
 45206  00EE52  C08A  F080         	movff	__motor_move_steps@distance_to_limit+3,__motor_move_steps@distance_in_steps+3
 45207  00EE56                     l2474:
 45208                           
 45209                           ; BSR set to: 0
 45210                           ;motor.c: 251: };motor.c: 255: if(overshoot==MOTOR_OVERSHOOT_NO_OVERSHOOT)
 45211                           
 45212                           ; BSR set to: 0
 45213  00EE56  0583               	decf	__motor_move_steps@overshoot& (0+255),w,b
 45214  00EE58  A4D8               	btfss	status,2,c
 45215  00EE5A  D012               	goto	l2475
 45216                           
 45217                           ; BSR set to: 0
 45218                           ;motor.c: 256: {;motor.c: 258: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45219  00EE5C  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45220  00EE60  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45221  00EE64  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45222  00EE68  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45223  00EE6C  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45224  00EE70  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45225  00EE74  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45226  00EE78  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45227  00EE7A  EC78  F08E         	call	__motor_schedule_command
 45228  00EE7E  0012               	return	
 45229  00EE80                     l2475:
 45230                           
 45231                           ;motor.c: 260: };motor.c: 264: if(direction==os.approach_direction)
 45232  00EE80  0100               	movlb	0	; () banked
 45233  00EE82  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45234  00EE84  0101               	movlb	1	; () banked
 45235  00EE86  1978               	xorwf	(_os+20)& (0+255),w,b	;volatile
 45236  00EE88  A4D8               	btfss	status,2,c
 45237  00EE8A  D013               	goto	l2476
 45238                           
 45239                           ; BSR set to: 1
 45240                           ;motor.c: 265: {;motor.c: 266: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45241  00EE8C  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45242  00EE90  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45243  00EE94  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45244  00EE98  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45245  00EE9C  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45246  00EEA0  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45247  00EEA4  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45248  00EEA8  0100               	movlb	0	; () banked
 45249  00EEAA  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45250  00EEAC  EC78  F08E         	call	__motor_schedule_command
 45251  00EEB0  0012               	return	
 45252  00EEB2                     l2476:
 45253                           
 45254                           ;motor.c: 267: };motor.c: 272: if(config.overshoot_in_steps==0)
 45255  00EEB2  0101               	movlb	1	; () banked
 45256  00EEB4  519B               	movf	(_config+5)& (0+255),w,b
 45257  00EEB6  119C               	iorwf	(_config+6)& (0+255),w,b
 45258  00EEB8  A4D8               	btfss	status,2,c
 45259  00EEBA  D013               	goto	l2477
 45260                           
 45261                           ; BSR set to: 1
 45262                           ;motor.c: 273: {;motor.c: 274: return _motor_schedule_command(direction, distance_in_ste
      +                          ps, speed, type);
 45263  00EEBC  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45264  00EEC0  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45265  00EEC4  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45266  00EEC8  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45267  00EECC  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45268  00EED0  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45269  00EED4  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45270  00EED8  0100               	movlb	0	; () banked
 45271  00EEDA  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45272  00EEDC  EC78  F08E         	call	__motor_schedule_command
 45273  00EEE0  0012               	return	
 45274  00EEE2                     l2477:
 45275                           
 45276                           ;motor.c: 275: };motor.c: 280: distance_in_steps += config.overshoot_in_steps;
 45277  00EEE2  0101               	movlb	1	; () banked
 45278  00EEE4  519B               	movf	(_config+5)& (0+255),w,b
 45279  00EEE6  0100               	movlb	0	; () banked
 45280  00EEE8  277D               	addwf	__motor_move_steps@distance_in_steps& (0+255),f,b
 45281  00EEEA  0101               	movlb	1	; () banked
 45282  00EEEC  519C               	movf	(_config+6)& (0+255),w,b
 45283  00EEEE  0100               	movlb	0	; () banked
 45284  00EEF0  237E               	addwfc	(__motor_move_steps@distance_in_steps+1)& (0+255),f,b
 45285  00EEF2  0E00               	movlw	0
 45286  00EEF4  237F               	addwfc	(__motor_move_steps@distance_in_steps+2)& (0+255),f,b
 45287  00EEF6  0E00               	movlw	0
 45288  00EEF8  2380               	addwfc	(__motor_move_steps@distance_in_steps+3)& (0+255),f,b
 45289                           
 45290                           ; BSR set to: 0
 45291                           ;motor.c: 281: return_value_1 = _motor_schedule_command(direction, distance_in_steps, sp
      +                          eed, type);
 45292  00EEFA  C07D  F060         	movff	__motor_move_steps@distance_in_steps,__motor_schedule_command@distance_in_steps
 45293  00EEFE  C07E  F061         	movff	__motor_move_steps@distance_in_steps+1,__motor_schedule_command@distance_in_steps
      +                          +1
 45294  00EF02  C07F  F062         	movff	__motor_move_steps@distance_in_steps+2,__motor_schedule_command@distance_in_steps
      +                          +2
 45295  00EF06  C080  F063         	movff	__motor_move_steps@distance_in_steps+3,__motor_schedule_command@distance_in_steps
      +                          +3
 45296  00EF0A  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45297  00EF0E  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45298  00EF12  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45299  00EF16  518B               	movf	__motor_move_steps@direction& (0+255),w,b
 45300  00EF18  EC78  F08E         	call	__motor_schedule_command
 45301  00EF1C  0100               	movlb	0	; () banked
 45302  00EF1E  6F85               	movwf	__motor_move_steps@return_value_1& (0+255),b
 45303                           
 45304                           ; BSR set to: 0
 45305                           ;motor.c: 282: return_value_2 = _motor_schedule_command(os.approach_direction, (uint32_t
      +                          ) config.overshoot_in_steps, speed, type);
 45306  00EF20  C19B  F060         	movff	_config+5,__motor_schedule_command@distance_in_steps
 45307  00EF24  C19C  F061         	movff	_config+6,__motor_schedule_command@distance_in_steps+1
 45308  00EF28  6B62               	clrf	(__motor_schedule_command@distance_in_steps+2)& (0+255),b
 45309  00EF2A  6B63               	clrf	(__motor_schedule_command@distance_in_steps+3)& (0+255),b
 45310  00EF2C  C081  F064         	movff	__motor_move_steps@speed,__motor_schedule_command@speed
 45311  00EF30  C082  F065         	movff	__motor_move_steps@speed+1,__motor_schedule_command@speed+1
 45312  00EF34  C084  F066         	movff	__motor_move_steps@type,__motor_schedule_command@type
 45313  00EF38  0101               	movlb	1	; () banked
 45314  00EF3A  5178               	movf	(_os+20)& (0+255),w,b	;volatile
 45315  00EF3C  EC78  F08E         	call	__motor_schedule_command
 45316  00EF40  0100               	movlb	0	; () banked
 45317  00EF42  6F86               	movwf	__motor_move_steps@return_value_2& (0+255),b
 45318                           
 45319                           ; BSR set to: 0
 45320                           ;motor.c: 286: if(return_value_1 > return_value_2)
 45321  00EF44  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45322  00EF46  5D86               	subwf	__motor_move_steps@return_value_2& (0+255),w,b
 45323  00EF48  B0D8               	btfsc	status,0,c
 45324  00EF4A  D002               	goto	l2478
 45325                           
 45326                           ; BSR set to: 0
 45327                           ;motor.c: 287: {;motor.c: 288: return return_value_1;
 45328  00EF4C  5185               	movf	__motor_move_steps@return_value_1& (0+255),w,b
 45329                           
 45330                           ; BSR set to: 0
 45331                           ;motor.c: 289: }
 45332                           
 45333                           ; BSR set to: 0
 45334  00EF4E  0012               	return	
 45335  00EF50                     l2478:
 45336                           
 45337                           ; BSR set to: 0
 45338                           ;motor.c: 290: else;motor.c: 291: {;motor.c: 292: return return_value_2;
 45339                           
 45340                           ; BSR set to: 0
 45341  00EF50  5186               	movf	__motor_move_steps@return_value_2& (0+255),w,b
 45342                           
 45343                           ; BSR set to: 0
 45344  00EF52  0012               	return	
 45345  00EF54                     __end_of__motor_move_steps:
 45346                           	opt stack 0
 45347                           tosu	equ	0xFFF
 45348                           tosh	equ	0xFFE
 45349                           tosl	equ	0xFFD
 45350                           pclath	equ	0xFFA
 45351                           tblptru	equ	0xFF8
 45352                           tblptrh	equ	0xFF7
 45353                           tblptrl	equ	0xFF6
 45354                           tablat	equ	0xFF5
 45355                           prodh	equ	0xFF4
 45356                           prodl	equ	0xFF3
 45357                           intcon	equ	0xFF2
 45358                           indf0	equ	0xFEF
 45359                           postinc0	equ	0xFEE
 45360                           fsr0h	equ	0xFEA
 45361                           fsr0l	equ	0xFE9
 45362                           wreg	equ	0xFE8
 45363                           indf1	equ	0xFE7
 45364                           postinc1	equ	0xFE6
 45365                           postdec1	equ	0xFE5
 45366                           plusw1	equ	0xFE3
 45367                           fsr1h	equ	0xFE2
 45368                           fsr1l	equ	0xFE1
 45369                           indf2	equ	0xFDF
 45370                           postinc2	equ	0xFDE
 45371                           postdec2	equ	0xFDD
 45372                           plusw2	equ	0xFDB
 45373                           fsr2h	equ	0xFDA
 45374                           fsr2l	equ	0xFD9
 45375                           status	equ	0xFD8
 45376                           
 45377 ;; *************** function __motor_schedule_command *****************
 45378 ;; Defined at:
 45379 ;;		line 135 in file "motor.c"
 45380 ;; Parameters:    Size  Location     Type
 45381 ;;  direction       1    wreg     enum E6622
 45382 ;;  distance_in_    4    0[BANK0 ] unsigned long 
 45383 ;;  speed           2    4[BANK0 ] unsigned int 
 45384 ;;  type            1    6[BANK0 ] enum E6631
 45385 ;; Auto vars:     Size  Location     Type
 45386 ;;  direction       1    7[BANK0 ] enum E6622
 45387 ;; Return value:  Size  Location     Type
 45388 ;;                  1    wreg      enum E6639
 45389 ;; Registers used:
 45390 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 45391 ;; Tracked objects:
 45392 ;;		On entry : 0/0
 45393 ;;		On exit  : 0/0
 45394 ;;		Unchanged: 0/0
 45395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45396 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45397 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45398 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45399 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45400 ;;Total ram usage:        8 bytes
 45401 ;; Hardware stack levels used:    1
 45402 ;; Hardware stack levels required when called:   11
 45403 ;; This function calls:
 45404 ;;		_motor_items_in_cue
 45405 ;; This function is called by:
 45406 ;;		__motor_move_steps
 45407 ;;		__motor_move_back_forth
 45408 ;; This function uses a non-reentrant model
 45409 ;;
 45410                           
 45411                           	psect	text187
 45412  011CF0                     __ptext187:
 45413                           	opt stack 0
 45414  011CF0                     __motor_schedule_command:
 45415                           	opt stack 16
 45416                           
 45417                           ;incstack = 0
 45418                           ;__motor_schedule_command@direction stored from wreg
 45419  011CF0  0100               	movlb	0	; () banked
 45420  011CF2  6F67               	movwf	__motor_schedule_command@direction& (0+255),b
 45421                           
 45422                           ;motor.c: 137: if(motor_items_in_cue()==8-1)
 45423  011CF4  ECA3  F0AE         	call	_motor_items_in_cue	;wreg free
 45424  011CF8  0A07               	xorlw	7
 45425  011CFA  A4D8               	btfss	status,2,c
 45426  011CFC  D002               	goto	l2454
 45427                           
 45428                           ;motor.c: 138: {;motor.c: 140: return MOTOR_RETURN_VALUE_BUFFER_FULL;
 45429  011CFE  0E08               	movlw	8
 45430  011D00  0012               	return	
 45431  011D02                     l2454:
 45432                           
 45433                           ;motor.c: 141: };motor.c: 143: if((direction!=MOTOR_DIRECTION_CW) && (direction!=MOTOR_D
      +                          IRECTION_CCW))
 45434  011D02  0100               	movlb	0	; () banked
 45435  011D04  0567               	decf	__motor_schedule_command@direction& (0+255),w,b
 45436  011D06  B4D8               	btfsc	status,2,c
 45437  011D08  D005               	goto	l2456
 45438                           
 45439                           ; BSR set to: 0
 45440  011D0A  2967               	incf	__motor_schedule_command@direction& (0+255),w,b
 45441  011D0C  B4D8               	btfsc	status,2,c
 45442  011D0E  D002               	goto	l2456
 45443                           
 45444                           ; BSR set to: 0
 45445                           ;motor.c: 144: {;motor.c: 146: return MOTOR_RETURN_VALUE_INVALID_DIRECTION;
 45446  011D10  0E04               	movlw	4
 45447                           
 45448                           ; BSR set to: 0
 45449  011D12  0012               	return	
 45450  011D14                     l2456:
 45451                           
 45452                           ; BSR set to: 0
 45453                           ;motor.c: 147: };motor.c: 149: if(distance_in_steps==0)
 45454                           
 45455                           ; BSR set to: 0
 45456  011D14  5160               	movf	__motor_schedule_command@distance_in_steps& (0+255),w,b
 45457  011D16  1161               	iorwf	(__motor_schedule_command@distance_in_steps+1)& (0+255),w,b
 45458  011D18  1162               	iorwf	(__motor_schedule_command@distance_in_steps+2)& (0+255),w,b
 45459  011D1A  1163               	iorwf	(__motor_schedule_command@distance_in_steps+3)& (0+255),w,b
 45460  011D1C  A4D8               	btfss	status,2,c
 45461  011D1E  D002               	goto	l2457
 45462                           
 45463                           ; BSR set to: 0
 45464                           ;motor.c: 150: {;motor.c: 152: return MOTOR_RETURN_VALUE_INVALID_DISTANCE;
 45465  011D20  0E03               	movlw	3
 45466                           
 45467                           ; BSR set to: 0
 45468  011D22  0012               	return	
 45469  011D24                     l2457:
 45470                           
 45471                           ; BSR set to: 0
 45472                           ;motor.c: 153: };motor.c: 155: if((type!=MOTOR_MOVE_TYPE_NORMAL) && (type!=MOTOR_MOVE_TY
      +                          PE_ENDLESS))
 45473                           
 45474                           ; BSR set to: 0
 45475  011D24  5166               	movf	__motor_schedule_command@type& (0+255),w,b
 45476  011D26  B4D8               	btfsc	status,2,c
 45477  011D28  D005               	goto	l2458
 45478                           
 45479                           ; BSR set to: 0
 45480  011D2A  0566               	decf	__motor_schedule_command@type& (0+255),w,b
 45481  011D2C  B4D8               	btfsc	status,2,c
 45482  011D2E  D002               	goto	l2458
 45483                           
 45484                           ; BSR set to: 0
 45485                           ;motor.c: 156: {;motor.c: 158: return MOTOR_RETURN_VALUE_INVALID_MOVE_TYPE;
 45486  011D30  0E05               	movlw	5
 45487                           
 45488                           ; BSR set to: 0
 45489  011D32  0012               	return	
 45490  011D34                     l2458:
 45491                           
 45492                           ; BSR set to: 0
 45493                           ;motor.c: 159: };motor.c: 161: if(speed==0)
 45494                           
 45495                           ; BSR set to: 0
 45496  011D34  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45497  011D36  1165               	iorwf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45498  011D38  A4D8               	btfss	status,2,c
 45499  011D3A  D002               	goto	l2459
 45500                           
 45501                           ; BSR set to: 0
 45502                           ;motor.c: 162: {;motor.c: 164: return MOTOR_RETURN_VALUE_INVALID_SPEED;
 45503  011D3C  0E02               	movlw	2
 45504                           
 45505                           ; BSR set to: 0
 45506  011D3E  0012               	return	
 45507  011D40                     l2459:
 45508                           
 45509                           ; BSR set to: 0
 45510                           ;motor.c: 165: };motor.c: 168: if(speed>config.maximum_speed)
 45511                           
 45512                           ; BSR set to: 0
 45513  011D40  5164               	movf	__motor_schedule_command@speed& (0+255),w,b
 45514  011D42  0101               	movlb	1	; () banked
 45515  011D44  5DA1               	subwf	(_config+11)& (0+255),w,b
 45516  011D46  0100               	movlb	0	; () banked
 45517  011D48  5165               	movf	(__motor_schedule_command@speed+1)& (0+255),w,b
 45518  011D4A  0101               	movlb	1	; () banked
 45519  011D4C  59A2               	subwfb	(_config+12)& (0+255),w,b
 45520  011D4E  B0D8               	btfsc	status,0,c
 45521  011D50  D004               	goto	l2460
 45522                           
 45523                           ; BSR set to: 1
 45524                           ;motor.c: 169: {;motor.c: 170: speed = config.maximum_speed;
 45525  011D52  C1A1  F064         	movff	_config+11,__motor_schedule_command@speed
 45526  011D56  C1A2  F065         	movff	_config+12,__motor_schedule_command@speed+1
 45527  011D5A                     l2460:
 45528                           
 45529                           ; BSR set to: 1
 45530                           ;motor.c: 171: };motor.c: 174: motor_command_cue[motor_cue_write_index].direction = dire
      +                          ction;
 45531                           
 45532                           ; BSR set to: 1
 45533  011D5A  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45534  011D5C  0D08               	mullw	8
 45535  011D5E  0E00               	movlw	low _motor_command_cue
 45536  011D60  24F3               	addwf	prodl,w,c
 45537  011D62  6ED9               	movwf	fsr2l,c
 45538  011D64  0E03               	movlw	high _motor_command_cue
 45539  011D66  20F4               	addwfc	prodh,w,c
 45540  011D68  6EDA               	movwf	fsr2h,c
 45541  011D6A  C067  FFDF         	movff	__motor_schedule_command@direction,indf2
 45542                           
 45543                           ;motor.c: 175: motor_command_cue[motor_cue_write_index].distance = distance_in_steps;
 45544  011D6E  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45545  011D70  0D08               	mullw	8
 45546  011D72  0E01               	movlw	1
 45547  011D74  26F3               	addwf	prodl,f,c
 45548  011D76  0E00               	movlw	0
 45549  011D78  22F4               	addwfc	prodh,f,c
 45550  011D7A  0E00               	movlw	low _motor_command_cue
 45551  011D7C  24F3               	addwf	prodl,w,c
 45552  011D7E  6ED9               	movwf	fsr2l,c
 45553  011D80  0E03               	movlw	high _motor_command_cue
 45554  011D82  20F4               	addwfc	prodh,w,c
 45555  011D84  6EDA               	movwf	fsr2h,c
 45556  011D86  C060  FFDE         	movff	__motor_schedule_command@distance_in_steps,postinc2
 45557  011D8A  C061  FFDE         	movff	__motor_schedule_command@distance_in_steps+1,postinc2
 45558  011D8E  C062  FFDE         	movff	__motor_schedule_command@distance_in_steps+2,postinc2
 45559  011D92  C063  FFDE         	movff	__motor_schedule_command@distance_in_steps+3,postinc2
 45560                           
 45561                           ;motor.c: 176: motor_command_cue[motor_cue_write_index].speed = speed;
 45562  011D96  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45563  011D98  0D08               	mullw	8
 45564  011D9A  0E05               	movlw	5
 45565  011D9C  26F3               	addwf	prodl,f,c
 45566  011D9E  0E00               	movlw	0
 45567  011DA0  22F4               	addwfc	prodh,f,c
 45568  011DA2  0E00               	movlw	low _motor_command_cue
 45569  011DA4  24F3               	addwf	prodl,w,c
 45570  011DA6  6ED9               	movwf	fsr2l,c
 45571  011DA8  0E03               	movlw	high _motor_command_cue
 45572  011DAA  20F4               	addwfc	prodh,w,c
 45573  011DAC  6EDA               	movwf	fsr2h,c
 45574  011DAE  C064  FFDE         	movff	__motor_schedule_command@speed,postinc2
 45575  011DB2  C065  FFDD         	movff	__motor_schedule_command@speed+1,postdec2
 45576                           
 45577                           ;motor.c: 177: motor_command_cue[motor_cue_write_index].type = type;
 45578  011DB6  514A               	movf	_motor_cue_write_index& (0+255),w,b
 45579  011DB8  0D08               	mullw	8
 45580  011DBA  0E07               	movlw	7
 45581  011DBC  26F3               	addwf	prodl,f,c
 45582  011DBE  0E00               	movlw	0
 45583  011DC0  22F4               	addwfc	prodh,f,c
 45584  011DC2  0E00               	movlw	low _motor_command_cue
 45585  011DC4  24F3               	addwf	prodl,w,c
 45586  011DC6  6ED9               	movwf	fsr2l,c
 45587  011DC8  0E03               	movlw	high _motor_command_cue
 45588  011DCA  20F4               	addwfc	prodh,w,c
 45589  011DCC  6EDA               	movwf	fsr2h,c
 45590  011DCE  C066  FFDF         	movff	__motor_schedule_command@type,indf2
 45591                           
 45592                           ; BSR set to: 1
 45593                           ;motor.c: 180: ++motor_cue_write_index;
 45594  011DD2  2B4A               	incf	_motor_cue_write_index& (0+255),f,b
 45595                           
 45596                           ; BSR set to: 1
 45597                           ;motor.c: 181: motor_cue_write_index &= 0b111;
 45598  011DD4  0E07               	movlw	7
 45599  011DD6  174A               	andwf	_motor_cue_write_index& (0+255),f,b
 45600                           
 45601                           ; BSR set to: 1
 45602                           ;motor.c: 184: return MOTOR_RETURN_VALUE_OK;
 45603  011DD8  0E00               	movlw	0
 45604  011DDA  0012               	return	
 45605  011DDC                     __end_of__motor_schedule_command:
 45606                           	opt stack 0
 45607                           tosu	equ	0xFFF
 45608                           tosh	equ	0xFFE
 45609                           tosl	equ	0xFFD
 45610                           pclath	equ	0xFFA
 45611                           tblptru	equ	0xFF8
 45612                           tblptrh	equ	0xFF7
 45613                           tblptrl	equ	0xFF6
 45614                           tablat	equ	0xFF5
 45615                           prodh	equ	0xFF4
 45616                           prodl	equ	0xFF3
 45617                           intcon	equ	0xFF2
 45618                           indf0	equ	0xFEF
 45619                           postinc0	equ	0xFEE
 45620                           fsr0h	equ	0xFEA
 45621                           fsr0l	equ	0xFE9
 45622                           wreg	equ	0xFE8
 45623                           indf1	equ	0xFE7
 45624                           postinc1	equ	0xFE6
 45625                           postdec1	equ	0xFE5
 45626                           plusw1	equ	0xFE3
 45627                           fsr1h	equ	0xFE2
 45628                           fsr1l	equ	0xFE1
 45629                           indf2	equ	0xFDF
 45630                           postinc2	equ	0xFDE
 45631                           postdec2	equ	0xFDD
 45632                           plusw2	equ	0xFDB
 45633                           fsr2h	equ	0xFDA
 45634                           fsr2l	equ	0xFD9
 45635                           status	equ	0xFD8
 45636                           
 45637 ;; *************** function _motor_items_in_cue *****************
 45638 ;; Defined at:
 45639 ;;		line 608 in file "motor.c"
 45640 ;; Parameters:    Size  Location     Type
 45641 ;;		None
 45642 ;; Auto vars:     Size  Location     Type
 45643 ;;		None
 45644 ;; Return value:  Size  Location     Type
 45645 ;;                  1    wreg      unsigned char 
 45646 ;; Registers used:
 45647 ;;		wreg, status,2, status,0
 45648 ;; Tracked objects:
 45649 ;;		On entry : 0/0
 45650 ;;		On exit  : 0/0
 45651 ;;		Unchanged: 0/0
 45652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45653 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45654 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45655 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45656 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45657 ;;Total ram usage:        0 bytes
 45658 ;; Hardware stack levels used:    1
 45659 ;; Hardware stack levels required when called:   10
 45660 ;; This function calls:
 45661 ;;		Nothing
 45662 ;; This function is called by:
 45663 ;;		__motor_schedule_command
 45664 ;;		__motor_move_steps
 45665 ;;		__motor_move_back_forth
 45666 ;;		_motor_process_cue
 45667 ;; This function uses a non-reentrant model
 45668 ;;
 45669                           
 45670                           	psect	text188
 45671  015D46                     __ptext188:
 45672                           	opt stack 0
 45673  015D46                     _motor_items_in_cue:
 45674                           	opt stack 19
 45675                           
 45676                           ;motor.c: 610: return ((motor_cue_write_index-motor_cue_read_index) & 0b111);
 45677                           
 45678                           ;incstack = 0
 45679  015D46  0101               	movlb	1	; () banked
 45680  015D48  514B               	movf	_motor_cue_read_index& (0+255),w,b
 45681  015D4A  0800               	sublw	0
 45682  015D4C  254A               	addwf	_motor_cue_write_index& (0+255),w,b
 45683  015D4E  0B07               	andlw	7
 45684  015D50  0012               	return	
 45685  015D52                     __end_of_motor_items_in_cue:
 45686                           	opt stack 0
 45687                           tosu	equ	0xFFF
 45688                           tosh	equ	0xFFE
 45689                           tosl	equ	0xFFD
 45690                           pclath	equ	0xFFA
 45691                           tblptru	equ	0xFF8
 45692                           tblptrh	equ	0xFF7
 45693                           tblptrl	equ	0xFF6
 45694                           tablat	equ	0xFF5
 45695                           prodh	equ	0xFF4
 45696                           prodl	equ	0xFF3
 45697                           intcon	equ	0xFF2
 45698                           indf0	equ	0xFEF
 45699                           postinc0	equ	0xFEE
 45700                           fsr0h	equ	0xFEA
 45701                           fsr0l	equ	0xFE9
 45702                           wreg	equ	0xFE8
 45703                           indf1	equ	0xFE7
 45704                           postinc1	equ	0xFE6
 45705                           postdec1	equ	0xFE5
 45706                           plusw1	equ	0xFE3
 45707                           fsr1h	equ	0xFE2
 45708                           fsr1l	equ	0xFE1
 45709                           indf2	equ	0xFDF
 45710                           postinc2	equ	0xFDE
 45711                           postdec2	equ	0xFDD
 45712                           plusw2	equ	0xFDB
 45713                           fsr2h	equ	0xFDA
 45714                           fsr2l	equ	0xFD9
 45715                           status	equ	0xFD8
 45716                           
 45717 ;; *************** function __motor_distance_to_limit *****************
 45718 ;; Defined at:
 45719 ;;		line 448 in file "motor.c"
 45720 ;; Parameters:    Size  Location     Type
 45721 ;;  direction       1    wreg     enum E6622
 45722 ;; Auto vars:     Size  Location     Type
 45723 ;;  direction       1   24[BANK0 ] enum E6622
 45724 ;;  absolute_pos    4   25[BANK0 ] long 
 45725 ;;  distance_to_    4   20[BANK0 ] long 
 45726 ;; Return value:  Size  Location     Type
 45727 ;;                  4   12[BANK0 ] long 
 45728 ;; Registers used:
 45729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 45730 ;; Tracked objects:
 45731 ;;		On entry : 0/0
 45732 ;;		On exit  : 0/0
 45733 ;;		Unchanged: 0/0
 45734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45735 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45736 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45737 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45738 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45739 ;;Total ram usage:       17 bytes
 45740 ;; Hardware stack levels used:    1
 45741 ;; Hardware stack levels required when called:   11
 45742 ;; This function calls:
 45743 ;;		___lmul
 45744 ;; This function is called by:
 45745 ;;		__motor_move_steps
 45746 ;;		__motor_decide_direction
 45747 ;; This function uses a non-reentrant model
 45748 ;;
 45749                           
 45750                           	psect	text189
 45751  00FE26                     __ptext189:
 45752                           	opt stack 0
 45753  00FE26                     __motor_distance_to_limit:
 45754                           	opt stack 16
 45755                           
 45756                           ; BSR set to: 1
 45757                           ;incstack = 0
 45758                           ;__motor_distance_to_limit@direction stored from wreg
 45759  00FE26  0100               	movlb	0	; () banked
 45760  00FE28  6F78               	movwf	__motor_distance_to_limit@direction& (0+255),b
 45761                           
 45762                           ;motor.c: 451: int32_t absolute_position_in_steps;;motor.c: 452: int32_t distance_to_lim
      +                          it_in_steps;;motor.c: 455: if(direction==MOTOR_DIRECTION_CCW && config.use_ccw_limit==0)
 45763  00FE2A  0100               	movlb	0	; () banked
 45764  00FE2C  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 45765  00FE2E  A4D8               	btfss	status,2,c
 45766  00FE30  D00E               	goto	l2513
 45767                           
 45768                           ; BSR set to: 0
 45769  00FE32  0101               	movlb	1	; () banked
 45770  00FE34  51B5               	movf	(_config+31)& (0+255),w,b
 45771  00FE36  A4D8               	btfss	status,2,c
 45772  00FE38  D00A               	goto	l2513
 45773                           
 45774                           ; BSR set to: 1
 45775                           ;motor.c: 456: {;motor.c: 457: return 2147483647;
 45776  00FE3A  0EFF               	movlw	255
 45777  00FE3C  0100               	movlb	0	; () banked
 45778  00FE3E  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 45779  00FE40  0EFF               	movlw	255
 45780  00FE42  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 45781  00FE44  0EFF               	movlw	255
 45782  00FE46  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 45783  00FE48  0E7F               	movlw	127
 45784  00FE4A  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 45785                           
 45786                           ; BSR set to: 0
 45787  00FE4C  0012               	return	
 45788  00FE4E                     l2513:
 45789                           
 45790                           ;motor.c: 458: };motor.c: 459: if(direction==MOTOR_DIRECTION_CW && config.use_cw_limit==
      +                          0)
 45791                           
 45792                           ; BSR set to: 0
 45793  00FE4E  0100               	movlb	0	; () banked
 45794  00FE50  0578               	decf	__motor_distance_to_limit@direction& (0+255),w,b
 45795  00FE52  A4D8               	btfss	status,2,c
 45796  00FE54  D00E               	goto	l2515
 45797                           
 45798                           ; BSR set to: 0
 45799  00FE56  0101               	movlb	1	; () banked
 45800  00FE58  51AC               	movf	(_config+22)& (0+255),w,b
 45801  00FE5A  A4D8               	btfss	status,2,c
 45802  00FE5C  D00A               	goto	l2515
 45803                           
 45804                           ; BSR set to: 1
 45805                           ;motor.c: 460: {;motor.c: 461: return 2147483647;
 45806  00FE5E  0EFF               	movlw	255
 45807  00FE60  0100               	movlb	0	; () banked
 45808  00FE62  6F6C               	movwf	?__motor_distance_to_limit& (0+255),b
 45809  00FE64  0EFF               	movlw	255
 45810  00FE66  6F6D               	movwf	(?__motor_distance_to_limit+1)& (0+255),b
 45811  00FE68  0EFF               	movlw	255
 45812  00FE6A  6F6E               	movwf	(?__motor_distance_to_limit+2)& (0+255),b
 45813  00FE6C  0E7F               	movlw	127
 45814  00FE6E  6F6F               	movwf	(?__motor_distance_to_limit+3)& (0+255),b
 45815                           
 45816                           ; BSR set to: 0
 45817  00FE70  0012               	return	
 45818  00FE72                     l2515:
 45819                           
 45820                           ;motor.c: 462: };motor.c: 465: absolute_position_in_steps = os.absolute_position;
 45821                           
 45822                           ; BSR set to: 0
 45823  00FE72  EE21  F06F         	lfsr	2,_os+11	;volatile
 45824  00FE76  CFDE F079          	movff	postinc2,__motor_distance_to_limit@absolute_position_in_steps
 45825  00FE7A  CFDD F07A          	movff	postdec2,__motor_distance_to_limit@absolute_position_in_steps+1
 45826  00FE7E  0100               	movlb	0	; () banked
 45827  00FE80  0E00               	movlw	0
 45828  00FE82  BF7A               	btfsc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),7,b
 45829  00FE84  0EFF               	movlw	-1
 45830  00FE86  6F7B               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),b
 45831  00FE88  6F7C               	movwf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),b
 45832                           
 45833                           ; BSR set to: 0
 45834                           ;motor.c: 466: absolute_position_in_steps *= config.full_circle_in_steps;
 45835  00FE8A  C079  F060         	movff	__motor_distance_to_limit@absolute_position_in_steps,___lmul@multiplier
 45836  00FE8E  C07A  F061         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,___lmul@multiplier+1
 45837  00FE92  C07B  F062         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,___lmul@multiplier+2
 45838  00FE96  C07C  F063         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,___lmul@multiplier+3
 45839  00FE9A  C196  F064         	movff	_config,___lmul@multiplicand
 45840  00FE9E  C197  F065         	movff	_config+1,___lmul@multiplicand+1
 45841  00FEA2  C198  F066         	movff	_config+2,___lmul@multiplicand+2
 45842  00FEA6  C199  F067         	movff	_config+3,___lmul@multiplicand+3
 45843  00FEAA  EC14  F0A6         	call	___lmul	;wreg free
 45844  00FEAE  C060  F079         	movff	?___lmul,__motor_distance_to_limit@absolute_position_in_steps
 45845  00FEB2  C061  F07A         	movff	?___lmul+1,__motor_distance_to_limit@absolute_position_in_steps+1
 45846  00FEB6  C062  F07B         	movff	?___lmul+2,__motor_distance_to_limit@absolute_position_in_steps+2
 45847  00FEBA  C063  F07C         	movff	?___lmul+3,__motor_distance_to_limit@absolute_position_in_steps+3
 45848                           
 45849                           ;motor.c: 467: absolute_position_in_steps += os.current_position_in_steps;
 45850  00FEBE  EE21  F06B         	lfsr	2,_os+7	;volatile
 45851  00FEC2  50DE               	movf	postinc2,w,c
 45852  00FEC4  0100               	movlb	0	; () banked
 45853  00FEC6  2779               	addwf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),f,b
 45854  00FEC8  50DE               	movf	postinc2,w,c
 45855  00FECA  237A               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),f,b
 45856  00FECC  50DE               	movf	postinc2,w,c
 45857  00FECE  237B               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),f,b
 45858  00FED0  50DD               	movf	postdec2,w,c
 45859  00FED2  237C               	addwfc	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),f,b
 45860                           
 45861                           ; BSR set to: 0
 45862                           ;motor.c: 470: if(direction==MOTOR_DIRECTION_CCW)
 45863  00FED4  2978               	incf	__motor_distance_to_limit@direction& (0+255),w,b
 45864  00FED6  A4D8               	btfss	status,2,c
 45865  00FED8  D01C               	goto	l2516
 45866                           
 45867                           ; BSR set to: 0
 45868                           ;motor.c: 471: {;motor.c: 472: distance_to_limit_in_steps = absolute_position_in_steps -
      +                           config.ccw_limit_in_steps;
 45869  00FEDA  C1BA  F070         	movff	_config+36,??__motor_distance_to_limit
 45870  00FEDE  C1BB  F071         	movff	_config+37,??__motor_distance_to_limit+1
 45871  00FEE2  C1BC  F072         	movff	_config+38,??__motor_distance_to_limit+2
 45872  00FEE6  C1BD  F073         	movff	_config+39,??__motor_distance_to_limit+3
 45873  00FEEA  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 45874  00FEEC  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 45875  00FEEE  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 45876  00FEF0  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 45877  00FEF2  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 45878  00FEF4  0E00               	movlw	0
 45879  00FEF6  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 45880  00FEF8  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 45881  00FEFA  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 45882  00FEFC  5179               	movf	__motor_distance_to_limit@absolute_position_in_steps& (0+255),w,b
 45883  00FEFE  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 45884  00FF00  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 45885  00FF02  517A               	movf	(__motor_distance_to_limit@absolute_position_in_steps+1)& (0+255),w,b
 45886  00FF04  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 45887  00FF06  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 45888  00FF08  517B               	movf	(__motor_distance_to_limit@absolute_position_in_steps+2)& (0+255),w,b
 45889  00FF0A  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 45890  00FF0C  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 45891  00FF0E  517C               	movf	(__motor_distance_to_limit@absolute_position_in_steps+3)& (0+255),w,b
 45892  00FF10  D023               	goto	L69
 45893  00FF12                     l2516:
 45894                           
 45895                           ; BSR set to: 0
 45896                           ;motor.c: 474: else;motor.c: 475: {;motor.c: 476: distance_to_limit_in_steps = config.cw
      +                          _limit_in_steps - absolute_position_in_steps;
 45897                           
 45898                           ; BSR set to: 0
 45899  00FF12  C079  F070         	movff	__motor_distance_to_limit@absolute_position_in_steps,??__motor_distance_to_limit
 45900  00FF16  C07A  F071         	movff	__motor_distance_to_limit@absolute_position_in_steps+1,??__motor_distance_to_limi
      +                          t+1
 45901  00FF1A  C07B  F072         	movff	__motor_distance_to_limit@absolute_position_in_steps+2,??__motor_distance_to_limi
      +                          t+2
 45902  00FF1E  C07C  F073         	movff	__motor_distance_to_limit@absolute_position_in_steps+3,??__motor_distance_to_limi
      +                          t+3
 45903  00FF22  1F70               	comf	??__motor_distance_to_limit& (0+255),f,b
 45904  00FF24  1F71               	comf	(??__motor_distance_to_limit+1)& (0+255),f,b
 45905  00FF26  1F72               	comf	(??__motor_distance_to_limit+2)& (0+255),f,b
 45906  00FF28  1F73               	comf	(??__motor_distance_to_limit+3)& (0+255),f,b
 45907  00FF2A  2B70               	incf	??__motor_distance_to_limit& (0+255),f,b
 45908  00FF2C  0E00               	movlw	0
 45909  00FF2E  2371               	addwfc	(??__motor_distance_to_limit+1)& (0+255),f,b
 45910  00FF30  2372               	addwfc	(??__motor_distance_to_limit+2)& (0+255),f,b
 45911  00FF32  2373               	addwfc	(??__motor_distance_to_limit+3)& (0+255),f,b
 45912  00FF34  0101               	movlb	1	; () banked
 45913  00FF36  51B1               	movf	(_config+27)& (0+255),w,b
 45914  00FF38  0100               	movlb	0	; () banked
 45915  00FF3A  2570               	addwf	??__motor_distance_to_limit& (0+255),w,b
 45916  00FF3C  6F74               	movwf	__motor_distance_to_limit@distance_to_limit_in_steps& (0+255),b
 45917  00FF3E  0101               	movlb	1	; () banked
 45918  00FF40  51B2               	movf	(_config+28)& (0+255),w,b
 45919  00FF42  0100               	movlb	0	; () banked
 45920  00FF44  2171               	addwfc	(??__motor_distance_to_limit+1)& (0+255),w,b
 45921  00FF46  6F75               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+1)& (0+255),b
 45922  00FF48  0101               	movlb	1	; () banked
 45923  00FF4A  51B3               	movf	(_config+29)& (0+255),w,b
 45924  00FF4C  0100               	movlb	0	; () banked
 45925  00FF4E  2172               	addwfc	(??__motor_distance_to_limit+2)& (0+255),w,b
 45926  00FF50  6F76               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+2)& (0+255),b
 45927  00FF52  0101               	movlb	1	; () banked
 45928  00FF54  51B4               	movf	(_config+30)& (0+255),w,b
 45929  00FF56  0100               	movlb	0	; () banked
 45930  00FF58                     L69:
 45931  00FF58  2173               	addwfc	(??__motor_distance_to_limit+3)& (0+255),w,b
 45932  00FF5A  6F77               	movwf	(__motor_distance_to_limit@distance_to_limit_in_steps+3)& (0+255),b
 45933                           
 45934                           ; BSR set to: 0
 45935                           ;motor.c: 477: };motor.c: 479: return distance_to_limit_in_steps;
 45936                           
 45937                           ; BSR set to: 0
 45938  00FF5C  C074  F06C         	movff	__motor_distance_to_limit@distance_to_limit_in_steps,?__motor_distance_to_limit
 45939  00FF60  C075  F06D         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+1,?__motor_distance_to_limit
      +                          +1
 45940  00FF64  C076  F06E         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+2,?__motor_distance_to_limit
      +                          +2
 45941  00FF68  C077  F06F         	movff	__motor_distance_to_limit@distance_to_limit_in_steps+3,?__motor_distance_to_limit
      +                          +3
 45942  00FF6C  0012               	return	
 45943  00FF6E                     __end_of__motor_distance_to_limit:
 45944                           	opt stack 0
 45945                           tosu	equ	0xFFF
 45946                           tosh	equ	0xFFE
 45947                           tosl	equ	0xFFD
 45948                           pclath	equ	0xFFA
 45949                           tblptru	equ	0xFF8
 45950                           tblptrh	equ	0xFF7
 45951                           tblptrl	equ	0xFF6
 45952                           tablat	equ	0xFF5
 45953                           prodh	equ	0xFF4
 45954                           prodl	equ	0xFF3
 45955                           intcon	equ	0xFF2
 45956                           indf0	equ	0xFEF
 45957                           postinc0	equ	0xFEE
 45958                           fsr0h	equ	0xFEA
 45959                           fsr0l	equ	0xFE9
 45960                           wreg	equ	0xFE8
 45961                           indf1	equ	0xFE7
 45962                           postinc1	equ	0xFE6
 45963                           postdec1	equ	0xFE5
 45964                           plusw1	equ	0xFE3
 45965                           fsr1h	equ	0xFE2
 45966                           fsr1l	equ	0xFE1
 45967                           indf2	equ	0xFDF
 45968                           postinc2	equ	0xFDE
 45969                           postdec2	equ	0xFDD
 45970                           plusw2	equ	0xFDB
 45971                           fsr2h	equ	0xFDA
 45972                           fsr2l	equ	0xFD9
 45973                           status	equ	0xFD8
 45974                           
 45975 ;; *************** function ___lmul *****************
 45976 ;; Defined at:
 45977 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 45978 ;; Parameters:    Size  Location     Type
 45979 ;;  multiplier      4    0[BANK0 ] unsigned long 
 45980 ;;  multiplicand    4    4[BANK0 ] unsigned long 
 45981 ;; Auto vars:     Size  Location     Type
 45982 ;;  product         4    8[BANK0 ] unsigned long 
 45983 ;; Return value:  Size  Location     Type
 45984 ;;                  4    0[BANK0 ] unsigned long 
 45985 ;; Registers used:
 45986 ;;		wreg, status,2, status,0
 45987 ;; Tracked objects:
 45988 ;;		On entry : 0/0
 45989 ;;		On exit  : 0/0
 45990 ;;		Unchanged: 0/0
 45991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 45992 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45993 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45995 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 45996 ;;Total ram usage:       12 bytes
 45997 ;; Hardware stack levels used:    1
 45998 ;; Hardware stack levels required when called:   10
 45999 ;; This function calls:
 46000 ;;		Nothing
 46001 ;; This function is called by:
 46002 ;;		__motor_distance_to_limit
 46003 ;;		__motor_get_speed_in_degrees
 46004 ;;		_atol
 46005 ;; This function uses a non-reentrant model
 46006 ;;
 46007                           
 46008                           	psect	text190
 46009  014C28                     __ptext190:
 46010                           	opt stack 0
 46011  014C28                     ___lmul:
 46012                           	opt stack 16
 46013                           
 46014                           ; BSR set to: 0
 46015                           ;incstack = 0
 46016  014C28  0E00               	movlw	0
 46017  014C2A  0100               	movlb	0	; () banked
 46018  014C2C  6F68               	movwf	___lmul@product& (0+255),b
 46019  014C2E  0E00               	movlw	0
 46020  014C30  6F69               	movwf	(___lmul@product+1)& (0+255),b
 46021  014C32  0E00               	movlw	0
 46022  014C34  6F6A               	movwf	(___lmul@product+2)& (0+255),b
 46023  014C36  0E00               	movlw	0
 46024  014C38  6F6B               	movwf	(___lmul@product+3)& (0+255),b
 46025  014C3A                     
 46026                           ; BSR set to: 0
 46027                           
 46028                           ; BSR set to: 0
 46029  014C3A  A160               	btfss	___lmul@multiplier& (0+255),0,b
 46030  014C3C  D008               	goto	l3090
 46031                           
 46032                           ; BSR set to: 0
 46033  014C3E  5164               	movf	___lmul@multiplicand& (0+255),w,b
 46034  014C40  2768               	addwf	___lmul@product& (0+255),f,b
 46035  014C42  5165               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 46036  014C44  2369               	addwfc	(___lmul@product+1)& (0+255),f,b
 46037  014C46  5166               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 46038  014C48  236A               	addwfc	(___lmul@product+2)& (0+255),f,b
 46039  014C4A  5167               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 46040  014C4C  236B               	addwfc	(___lmul@product+3)& (0+255),f,b
 46041  014C4E                     l3090:
 46042                           
 46043                           ; BSR set to: 0
 46044                           
 46045                           ; BSR set to: 0
 46046  014C4E  90D8               	bcf	status,0,c
 46047  014C50  3764               	rlcf	___lmul@multiplicand& (0+255),f,b
 46048  014C52  3765               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 46049  014C54  3766               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 46050  014C56  3767               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 46051                           
 46052                           ; BSR set to: 0
 46053  014C58  90D8               	bcf	status,0,c
 46054  014C5A  3363               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 46055  014C5C  3362               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 46056  014C5E  3361               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 46057  014C60  3360               	rrcf	___lmul@multiplier& (0+255),f,b
 46058  014C62  5160               	movf	___lmul@multiplier& (0+255),w,b
 46059  014C64  1161               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 46060  014C66  1162               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 46061  014C68  1163               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 46062  014C6A  A4D8               	btfss	status,2,c
 46063  014C6C  D7E6               	goto	l3089
 46064                           
 46065                           ; BSR set to: 0
 46066  014C6E  C068  F060         	movff	___lmul@product,?___lmul
 46067  014C72  C069  F061         	movff	___lmul@product+1,?___lmul+1
 46068  014C76  C06A  F062         	movff	___lmul@product+2,?___lmul+2
 46069  014C7A  C06B  F063         	movff	___lmul@product+3,?___lmul+3
 46070                           
 46071                           ; BSR set to: 0
 46072  014C7E  0012               	return		;funcret
 46073  014C80                     __end_of___lmul:
 46074                           	opt stack 0
 46075                           tosu	equ	0xFFF
 46076                           tosh	equ	0xFFE
 46077                           tosl	equ	0xFFD
 46078                           pclath	equ	0xFFA
 46079                           tblptru	equ	0xFF8
 46080                           tblptrh	equ	0xFF7
 46081                           tblptrl	equ	0xFF6
 46082                           tablat	equ	0xFF5
 46083                           prodh	equ	0xFF4
 46084                           prodl	equ	0xFF3
 46085                           intcon	equ	0xFF2
 46086                           indf0	equ	0xFEF
 46087                           postinc0	equ	0xFEE
 46088                           fsr0h	equ	0xFEA
 46089                           fsr0l	equ	0xFE9
 46090                           wreg	equ	0xFE8
 46091                           indf1	equ	0xFE7
 46092                           postinc1	equ	0xFE6
 46093                           postdec1	equ	0xFE5
 46094                           plusw1	equ	0xFE3
 46095                           fsr1h	equ	0xFE2
 46096                           fsr1l	equ	0xFE1
 46097                           indf2	equ	0xFDF
 46098                           postinc2	equ	0xFDE
 46099                           postdec2	equ	0xFDD
 46100                           plusw2	equ	0xFDB
 46101                           fsr2h	equ	0xFDA
 46102                           fsr2l	equ	0xFD9
 46103                           status	equ	0xFD8
 46104                           
 46105 ;; *************** function _USBTransferOnePacket *****************
 46106 ;; Defined at:
 46107 ;;		line 995 in file "usb_device.c"
 46108 ;; Parameters:    Size  Location     Type
 46109 ;;  ep              1    wreg     unsigned char 
 46110 ;;  dir             1    0[BANK0 ] unsigned char 
 46111 ;;  data            2    1[BANK0 ] PTR unsigned char 
 46112 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 46113 ;;		 -> msd_cbw(31), NULL(0), 
 46114 ;;  len             1    3[BANK0 ] unsigned char 
 46115 ;; Auto vars:     Size  Location     Type
 46116 ;;  ep              1    8[BANK0 ] unsigned char 
 46117 ;;  handle          2    9[BANK0 ] PTR volatile struct __BD
 46118 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 46119 ;; Return value:  Size  Location     Type
 46120 ;;                  2    0[BANK0 ] PTR void 
 46121 ;; Registers used:
 46122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 46123 ;; Tracked objects:
 46124 ;;		On entry : 0/0
 46125 ;;		On exit  : 0/0
 46126 ;;		Unchanged: 0/0
 46127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46128 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46129 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46130 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46131 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46132 ;;Total ram usage:       11 bytes
 46133 ;; Hardware stack levels used:    1
 46134 ;; Hardware stack levels required when called:   10
 46135 ;; This function calls:
 46136 ;;		Nothing
 46137 ;; This function is called by:
 46138 ;;		_MSDTasks
 46139 ;;		_MSDProcessCommandMediaPresent
 46140 ;;		_MSDReadHandler
 46141 ;;		_MSDWriteHandler
 46142 ;;		_APP_DeviceCustomHIDTasks
 46143 ;; This function uses a non-reentrant model
 46144 ;;
 46145                           
 46146                           	psect	text191
 46147  011316                     __ptext191:
 46148                           	opt stack 0
 46149  011316                     _USBTransferOnePacket:
 46150                           	opt stack 18
 46151                           
 46152                           ; BSR set to: 0
 46153                           ;incstack = 0
 46154                           ;USBTransferOnePacket@ep stored from wreg
 46155  011316  0100               	movlb	0	; () banked
 46156  011318  6F68               	movwf	USBTransferOnePacket@ep& (0+255),b
 46157                           
 46158                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 46159  01131A  0100               	movlb	0	; () banked
 46160  01131C  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46161  01131E  B4D8               	btfsc	status,2,c
 46162  011320  D007               	goto	l184
 46163                           
 46164                           ; BSR set to: 0
 46165                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 46166  011322  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46167  011324  0D02               	mullw	2
 46168  011326  0E52               	movlw	low _pBDTEntryIn
 46169  011328  24F3               	addwf	prodl,w,c
 46170  01132A  6ED9               	movwf	fsr2l,c
 46171  01132C  0E00               	movlw	high _pBDTEntryIn
 46172  01132E  D006               	goto	L70
 46173  011330                     l184:
 46174                           
 46175                           ; BSR set to: 0
 46176                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 46177                           
 46178                           ; BSR set to: 0
 46179  011330  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46180  011332  0D02               	mullw	2
 46181  011334  0E1B               	movlw	low _pBDTEntryOut
 46182  011336  24F3               	addwf	prodl,w,c
 46183  011338  6ED9               	movwf	fsr2l,c
 46184  01133A  0E01               	movlw	high _pBDTEntryOut
 46185  01133C                     L70:
 46186  01133C  20F4               	addwfc	prodh,w,c
 46187  01133E  6EDA               	movwf	fsr2h,c
 46188  011340  CFDE F069          	movff	postinc2,USBTransferOnePacket@handle
 46189  011344  CFDD F06A          	movff	postdec2,USBTransferOnePacket@handle+1
 46190                           
 46191                           ; BSR set to: 0
 46192                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 46193                           
 46194                           ; BSR set to: 0
 46195  011348  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46196  01134A  116A               	iorwf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46197  01134C  A4D8               	btfss	status,2,c
 46198  01134E  D005               	goto	l186
 46199                           
 46200                           ; BSR set to: 0
 46201                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 46202  011350  0E00               	movlw	0
 46203  011352  6F60               	movwf	?_USBTransferOnePacket& (0+255),b
 46204  011354  0E00               	movlw	0
 46205  011356  6F61               	movwf	(?_USBTransferOnePacket+1)& (0+255),b
 46206                           
 46207                           ; BSR set to: 0
 46208  011358  0012               	return	
 46209  01135A                     l186:
 46210                           
 46211                           ; BSR set to: 0
 46212                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 46213                           
 46214                           ; BSR set to: 0
 46215  01135A  EE20 F002          	lfsr	2,2
 46216  01135E  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46217  011360  26D9               	addwf	fsr2l,f,c
 46218  011362  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46219  011364  22DA               	addwfc	fsr2h,f,c
 46220  011366  C061  FFDE         	movff	USBTransferOnePacket@data,postinc2
 46221  01136A  C062  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 46222                           
 46223                           ;usb_device.c: 1030: handle->CNT = len;
 46224  01136E  EE20 F001          	lfsr	2,1
 46225  011372  5169               	movf	USBTransferOnePacket@handle& (0+255),w,b
 46226  011374  26D9               	addwf	fsr2l,f,c
 46227  011376  516A               	movf	(USBTransferOnePacket@handle+1)& (0+255),w,b
 46228  011378  22DA               	addwfc	fsr2h,f,c
 46229  01137A  C063  FFDF         	movff	USBTransferOnePacket@len,indf2
 46230                           
 46231                           ; BSR set to: 0
 46232                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 46233  01137E  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46234  011382  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46235  011386  0E40               	movlw	64
 46236  011388  16DF               	andwf	indf2,f,c
 46237                           
 46238                           ; BSR set to: 0
 46239                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 46240  01138A  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46241  01138E  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46242  011392  0E00               	movlw	0
 46243  011394  86DB               	bsf	plusw2,3,c
 46244                           
 46245                           ; BSR set to: 0
 46246                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 46247  011396  C069  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 46248  01139A  C06A  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 46249  01139E  0E00               	movlw	0
 46250  0113A0  8EDB               	bsf	plusw2,7,c
 46251                           
 46252                           ; BSR set to: 0
 46253                           ;usb_device.c: 1036: if(dir != 0)
 46254  0113A2  5160               	movf	USBTransferOnePacket@dir& (0+255),w,b
 46255  0113A4  B4D8               	btfsc	status,2,c
 46256  0113A6  D018               	goto	l188
 46257                           
 46258                           ; BSR set to: 0
 46259                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 46260  0113A8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46261  0113AA  0D02               	mullw	2
 46262  0113AC  0E52               	movlw	low _pBDTEntryIn
 46263  0113AE  24F3               	addwf	prodl,w,c
 46264  0113B0  6ED9               	movwf	fsr2l,c
 46265  0113B2  0E00               	movlw	high _pBDTEntryIn
 46266  0113B4  20F4               	addwfc	prodh,w,c
 46267  0113B6  6EDA               	movwf	fsr2h,c
 46268  0113B8  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46269  0113BC  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46270  0113C0  0E04               	movlw	4
 46271  0113C2  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46272  0113C4  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46273  0113C6  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46274  0113C8  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46275  0113CA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46276  0113CC  0D02               	mullw	2
 46277  0113CE  0E52               	movlw	low _pBDTEntryIn
 46278  0113D0  24F3               	addwf	prodl,w,c
 46279  0113D2  6ED9               	movwf	fsr2l,c
 46280  0113D4  0E00               	movlw	high _pBDTEntryIn
 46281  0113D6  D017               	goto	L71
 46282  0113D8                     l188:
 46283                           
 46284                           ; BSR set to: 0
 46285                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 46286                           
 46287                           ; BSR set to: 0
 46288  0113D8  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46289  0113DA  0D02               	mullw	2
 46290  0113DC  0E1B               	movlw	low _pBDTEntryOut
 46291  0113DE  24F3               	addwf	prodl,w,c
 46292  0113E0  6ED9               	movwf	fsr2l,c
 46293  0113E2  0E01               	movlw	high _pBDTEntryOut
 46294  0113E4  20F4               	addwfc	prodh,w,c
 46295  0113E6  6EDA               	movwf	fsr2h,c
 46296  0113E8  CFDE F064          	movff	postinc2,??_USBTransferOnePacket
 46297  0113EC  CFDD F065          	movff	postdec2,??_USBTransferOnePacket+1
 46298  0113F0  0E04               	movlw	4
 46299  0113F2  1964               	xorwf	??_USBTransferOnePacket& (0+255),w,b
 46300  0113F4  6F66               	movwf	(??_USBTransferOnePacket+2)& (0+255),b
 46301  0113F6  5165               	movf	(??_USBTransferOnePacket+1)& (0+255),w,b
 46302  0113F8  6F67               	movwf	(??_USBTransferOnePacket+3)& (0+255),b
 46303  0113FA  5168               	movf	USBTransferOnePacket@ep& (0+255),w,b
 46304  0113FC  0D02               	mullw	2
 46305  0113FE  0E1B               	movlw	low _pBDTEntryOut
 46306  011400  24F3               	addwf	prodl,w,c
 46307  011402  6ED9               	movwf	fsr2l,c
 46308  011404  0E01               	movlw	high _pBDTEntryOut
 46309  011406                     L71:
 46310  011406  20F4               	addwfc	prodh,w,c
 46311  011408  6EDA               	movwf	fsr2h,c
 46312  01140A  C066  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 46313  01140E  C067  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 46314                           
 46315                           ; BSR set to: 0
 46316                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 46317                           
 46318                           ; BSR set to: 0
 46319  011412  C069  F060         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 46320  011416  C06A  F061         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 46321  01141A  0012               	return	
 46322  01141C                     __end_of_USBTransferOnePacket:
 46323                           	opt stack 0
 46324                           tosu	equ	0xFFF
 46325                           tosh	equ	0xFFE
 46326                           tosl	equ	0xFFD
 46327                           pclath	equ	0xFFA
 46328                           tblptru	equ	0xFF8
 46329                           tblptrh	equ	0xFF7
 46330                           tblptrl	equ	0xFF6
 46331                           tablat	equ	0xFF5
 46332                           prodh	equ	0xFF4
 46333                           prodl	equ	0xFF3
 46334                           intcon	equ	0xFF2
 46335                           indf0	equ	0xFEF
 46336                           postinc0	equ	0xFEE
 46337                           fsr0h	equ	0xFEA
 46338                           fsr0l	equ	0xFE9
 46339                           wreg	equ	0xFE8
 46340                           indf1	equ	0xFE7
 46341                           postinc1	equ	0xFE6
 46342                           postdec1	equ	0xFE5
 46343                           plusw1	equ	0xFE3
 46344                           fsr1h	equ	0xFE2
 46345                           fsr1l	equ	0xFE1
 46346                           indf2	equ	0xFDF
 46347                           postinc2	equ	0xFDE
 46348                           postdec2	equ	0xFDD
 46349                           plusw2	equ	0xFDB
 46350                           fsr2h	equ	0xFDA
 46351                           fsr2l	equ	0xFD9
 46352                           status	equ	0xFD8
 46353                           
 46354 ;; *************** function _SYS_InterruptHigh *****************
 46355 ;; Defined at:
 46356 ;;		line 162 in file "system.c"
 46357 ;; Parameters:    Size  Location     Type
 46358 ;;		None
 46359 ;; Auto vars:     Size  Location     Type
 46360 ;;		None
 46361 ;; Return value:  Size  Location     Type
 46362 ;;                  1    wreg      void 
 46363 ;; Registers used:
 46364 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 46365 ;; Tracked objects:
 46366 ;;		On entry : 0/0
 46367 ;;		On exit  : 0/0
 46368 ;;		Unchanged: 0/0
 46369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46370 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46372 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46373 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46374 ;;Total ram usage:       14 bytes
 46375 ;; Hardware stack levels used:    1
 46376 ;; Hardware stack levels required when called:    9
 46377 ;; This function calls:
 46378 ;;		_USBDeviceTasks
 46379 ;;		_motor_isr
 46380 ;;		_tmr0_isr
 46381 ;; This function is called by:
 46382 ;;		Interrupt level 2
 46383 ;; This function uses a non-reentrant model
 46384 ;;
 46385                           
 46386                           	psect	intcode
 46387  009008                     __pintcode:
 46388                           	opt stack 0
 46389  009008                     _SYS_InterruptHigh:
 46390                           	opt stack 9
 46391                           
 46392                           ; BSR set to: 0
 46393                           ;incstack = 0
 46394  009008  825F               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 46395  00900A  CFFA F03E          	movff	pclath,??_SYS_InterruptHigh
 46396  00900E  CFFB F03F          	movff	pclatu,??_SYS_InterruptHigh+1
 46397  009012  CFE9 F040          	movff	fsr0l,??_SYS_InterruptHigh+2
 46398  009016  CFEA F041          	movff	fsr0h,??_SYS_InterruptHigh+3
 46399  00901A  CFE1 F042          	movff	fsr1l,??_SYS_InterruptHigh+4
 46400  00901E  CFE2 F043          	movff	fsr1h,??_SYS_InterruptHigh+5
 46401  009022  CFD9 F044          	movff	fsr2l,??_SYS_InterruptHigh+6
 46402  009026  CFDA F045          	movff	fsr2h,??_SYS_InterruptHigh+7
 46403  00902A  CFF3 F046          	movff	prodl,??_SYS_InterruptHigh+8
 46404  00902E  CFF4 F047          	movff	prodh,??_SYS_InterruptHigh+9
 46405  009032  CFF6 F048          	movff	tblptrl,??_SYS_InterruptHigh+10
 46406  009036  CFF7 F049          	movff	tblptrh,??_SYS_InterruptHigh+11
 46407  00903A  CFF8 F04A          	movff	tblptru,??_SYS_InterruptHigh+12
 46408  00903E  CFF5 F04B          	movff	tablat,??_SYS_InterruptHigh+13
 46409                           
 46410                           ;system.c: 165: USBDeviceTasks();
 46411  009042  ECB7  F07F         	call	_USBDeviceTasks	;wreg free
 46412                           
 46413                           ;system.c: 169: if(PIR1bits.TMR2IF)
 46414  009046  B29E               	btfsc	3998,1,c	;volatile
 46415                           
 46416                           ;system.c: 170: {;system.c: 171: motor_isr();
 46417  009048  ECDF  F05B         	call	_motor_isr	;wreg free
 46418                           
 46419                           ;system.c: 172: };system.c: 174: if(INTCONbits.T0IF)
 46420  00904C  B4F2               	btfsc	intcon,2,c	;volatile
 46421                           
 46422                           ;system.c: 175: {;system.c: 176: tmr0_isr();
 46423  00904E  ECA2  F0AA         	call	_tmr0_isr	;wreg free
 46424  009052  C04B  FFF5         	movff	??_SYS_InterruptHigh+13,tablat
 46425  009056  C04A  FFF8         	movff	??_SYS_InterruptHigh+12,tblptru
 46426  00905A  C049  FFF7         	movff	??_SYS_InterruptHigh+11,tblptrh
 46427  00905E  C048  FFF6         	movff	??_SYS_InterruptHigh+10,tblptrl
 46428  009062  C047  FFF4         	movff	??_SYS_InterruptHigh+9,prodh
 46429  009066  C046  FFF3         	movff	??_SYS_InterruptHigh+8,prodl
 46430  00906A  C045  FFDA         	movff	??_SYS_InterruptHigh+7,fsr2h
 46431  00906E  C044  FFD9         	movff	??_SYS_InterruptHigh+6,fsr2l
 46432  009072  C043  FFE2         	movff	??_SYS_InterruptHigh+5,fsr1h
 46433  009076  C042  FFE1         	movff	??_SYS_InterruptHigh+4,fsr1l
 46434  00907A  C041  FFEA         	movff	??_SYS_InterruptHigh+3,fsr0h
 46435  00907E  C040  FFE9         	movff	??_SYS_InterruptHigh+2,fsr0l
 46436  009082  C03F  FFFB         	movff	??_SYS_InterruptHigh+1,pclatu
 46437  009086  C03E  FFFA         	movff	??_SYS_InterruptHigh,pclath
 46438  00908A  925F               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 46439  00908C  0011               	retfie		f
 46440  00908E                     __end_of_SYS_InterruptHigh:
 46441                           	opt stack 0
 46442                           tosu	equ	0xFFF
 46443                           tosh	equ	0xFFE
 46444                           tosl	equ	0xFFD
 46445                           pclatu	equ	0xFFB
 46446                           pclath	equ	0xFFA
 46447                           tblptru	equ	0xFF8
 46448                           tblptrh	equ	0xFF7
 46449                           tblptrl	equ	0xFF6
 46450                           tablat	equ	0xFF5
 46451                           prodh	equ	0xFF4
 46452                           prodl	equ	0xFF3
 46453                           intcon	equ	0xFF2
 46454                           indf0	equ	0xFEF
 46455                           postinc0	equ	0xFEE
 46456                           fsr0h	equ	0xFEA
 46457                           fsr0l	equ	0xFE9
 46458                           wreg	equ	0xFE8
 46459                           indf1	equ	0xFE7
 46460                           postinc1	equ	0xFE6
 46461                           postdec1	equ	0xFE5
 46462                           plusw1	equ	0xFE3
 46463                           fsr1h	equ	0xFE2
 46464                           fsr1l	equ	0xFE1
 46465                           indf2	equ	0xFDF
 46466                           postinc2	equ	0xFDE
 46467                           postdec2	equ	0xFDD
 46468                           plusw2	equ	0xFDB
 46469                           fsr2h	equ	0xFDA
 46470                           fsr2l	equ	0xFD9
 46471                           status	equ	0xFD8
 46472                           
 46473 ;; *************** function _tmr0_isr *****************
 46474 ;; Defined at:
 46475 ;;		line 24 in file "os.c"
 46476 ;; Parameters:    Size  Location     Type
 46477 ;;		None
 46478 ;; Auto vars:     Size  Location     Type
 46479 ;;		None
 46480 ;; Return value:  Size  Location     Type
 46481 ;;                  1    wreg      void 
 46482 ;; Registers used:
 46483 ;;		wreg, status,2, status,0, cstack
 46484 ;; Tracked objects:
 46485 ;;		On entry : 0/0
 46486 ;;		On exit  : 0/0
 46487 ;;		Unchanged: 0/0
 46488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46492 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46493 ;;Total ram usage:        0 bytes
 46494 ;; Hardware stack levels used:    1
 46495 ;; Hardware stack levels required when called:    1
 46496 ;; This function calls:
 46497 ;;		_encoder_run
 46498 ;; This function is called by:
 46499 ;;		_SYS_InterruptHigh
 46500 ;; This function uses a non-reentrant model
 46501 ;;
 46502                           
 46503                           	psect	text193
 46504  015544                     __ptext193:
 46505                           	opt stack 0
 46506  015544                     _tmr0_isr:
 46507                           	opt stack 16
 46508                           
 46509                           ;os.c: 27: if(INTCONbits.T0IF)
 46510                           
 46511                           ;incstack = 0
 46512  015544  A4F2               	btfss	intcon,2,c	;volatile
 46513  015546  0012               	return	
 46514                           
 46515                           ;os.c: 28: {;os.c: 30: TMR0H = 0xFA;
 46516  015548  0EFA               	movlw	250
 46517  01554A  6ED7               	movwf	4055,c	;volatile
 46518                           
 46519                           ;os.c: 31: TMR0L = 0x24;
 46520  01554C  0E24               	movlw	36
 46521  01554E  6ED6               	movwf	4054,c	;volatile
 46522                           
 46523                           ;os.c: 34: INTCONbits.T0IF = 0;
 46524  015550  94F2               	bcf	intcon,2,c	;volatile
 46525                           
 46526                           ;os.c: 37: encoder_run();
 46527  015552  EC88  F08D         	call	_encoder_run	;wreg free
 46528                           
 46529                           ;os.c: 40: ++os.subTimeSlot;
 46530  015556  0101               	movlb	1	; () banked
 46531  015558  2B64               	incf	_os& (0+255),f,b	;volatile
 46532                           
 46533                           ; BSR set to: 1
 46534                           ;os.c: 41: if(os.subTimeSlot>=10)
 46535  01555A  0E09               	movlw	9
 46536  01555C  6564               	cpfsgt	_os& (0+255),b	;volatile
 46537  01555E  0012               	return	
 46538                           
 46539                           ; BSR set to: 1
 46540                           ;os.c: 42: {;os.c: 43: if(os.done)
 46541  015560  5166               	movf	(_os+2)& (0+255),w,b	;volatile
 46542  015562  B4D8               	btfsc	status,2,c
 46543  015564  0012               	return	
 46544                           
 46545                           ; BSR set to: 1
 46546                           ;os.c: 44: {;os.c: 45: ++os.timeSlot;
 46547  015566  2B65               	incf	(_os+1)& (0+255),f,b	;volatile
 46548                           
 46549                           ; BSR set to: 1
 46550                           ;os.c: 46: if(os.timeSlot==16)
 46551  015568  0E10               	movlw	16
 46552  01556A  1965               	xorwf	(_os+1)& (0+255),w,b	;volatile
 46553  01556C  A4D8               	btfss	status,2,c
 46554  01556E  D002               	goto	i2l1066
 46555                           
 46556                           ; BSR set to: 1
 46557                           ;os.c: 47: {;os.c: 48: os.timeSlot = 0;
 46558  015570  0E00               	movlw	0
 46559  015572  6F65               	movwf	(_os+1)& (0+255),b	;volatile
 46560  015574                     i2l1066:
 46561                           
 46562                           ; BSR set to: 1
 46563                           ;os.c: 49: };os.c: 50: os.subTimeSlot = 0;
 46564  015574  0E00               	movlw	0
 46565  015576  6F64               	movwf	_os& (0+255),b	;volatile
 46566                           
 46567                           ;os.c: 51: os.done = 0;
 46568  015578  0E00               	movlw	0
 46569  01557A  6F66               	movwf	(_os+2)& (0+255),b	;volatile
 46570                           
 46571                           ; BSR set to: 1
 46572                           
 46573                           ; BSR set to: 1
 46574  01557C  0012               	return	
 46575  01557E                     __end_of_tmr0_isr:
 46576                           	opt stack 0
 46577                           tosu	equ	0xFFF
 46578                           tosh	equ	0xFFE
 46579                           tosl	equ	0xFFD
 46580                           pclatu	equ	0xFFB
 46581                           pclath	equ	0xFFA
 46582                           tblptru	equ	0xFF8
 46583                           tblptrh	equ	0xFF7
 46584                           tblptrl	equ	0xFF6
 46585                           tablat	equ	0xFF5
 46586                           prodh	equ	0xFF4
 46587                           prodl	equ	0xFF3
 46588                           intcon	equ	0xFF2
 46589                           indf0	equ	0xFEF
 46590                           postinc0	equ	0xFEE
 46591                           fsr0h	equ	0xFEA
 46592                           fsr0l	equ	0xFE9
 46593                           wreg	equ	0xFE8
 46594                           indf1	equ	0xFE7
 46595                           postinc1	equ	0xFE6
 46596                           postdec1	equ	0xFE5
 46597                           plusw1	equ	0xFE3
 46598                           fsr1h	equ	0xFE2
 46599                           fsr1l	equ	0xFE1
 46600                           indf2	equ	0xFDF
 46601                           postinc2	equ	0xFDE
 46602                           postdec2	equ	0xFDD
 46603                           plusw2	equ	0xFDB
 46604                           fsr2h	equ	0xFDA
 46605                           fsr2l	equ	0xFD9
 46606                           status	equ	0xFD8
 46607                           
 46608 ;; *************** function _encoder_run *****************
 46609 ;; Defined at:
 46610 ;;		line 103 in file "encoder.c"
 46611 ;; Parameters:    Size  Location     Type
 46612 ;;		None
 46613 ;; Auto vars:     Size  Location     Type
 46614 ;;		None
 46615 ;; Return value:  Size  Location     Type
 46616 ;;                  1    wreg      void 
 46617 ;; Registers used:
 46618 ;;		wreg, status,2, status,0
 46619 ;; Tracked objects:
 46620 ;;		On entry : 0/0
 46621 ;;		On exit  : 0/0
 46622 ;;		Unchanged: 0/0
 46623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 46624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46627 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 46628 ;;Total ram usage:        0 bytes
 46629 ;; Hardware stack levels used:    1
 46630 ;; This function calls:
 46631 ;;		Nothing
 46632 ;; This function is called by:
 46633 ;;		_tmr0_isr
 46634 ;; This function uses a non-reentrant model
 46635 ;;
 46636                           
 46637                           	psect	text194
 46638  011B10                     __ptext194:
 46639                           	opt stack 0
 46640  011B10                     _encoder_run:
 46641                           	opt stack 16
 46642                           
 46643                           ;encoder.c: 105: if(enc1 != (PORTE&0b00000111))
 46644                           
 46645                           ;incstack = 0
 46646  011B10  5084               	movf	3972,w,c	;volatile
 46647  011B12  0B07               	andlw	7
 46648  011B14  0101               	movlb	1	; () banked
 46649  011B16  1946               	xorwf	_enc1& (0+255),w,b
 46650  011B18  B4D8               	btfsc	status,2,c
 46651  011B1A  D033               	goto	i2l2745
 46652                           
 46653                           ; BSR set to: 1
 46654                           ;encoder.c: 106: {;encoder.c: 108: if(PORTEbits.RE0 && PORTEbits.RE2 && (!(enc1&0b000000
      +                          01)))
 46655  011B1C  B084               	btfsc	3972,0,c	;volatile
 46656                           
 46657                           ; BSR set to: 1
 46658  011B1E  A484               	btfss	3972,2,c	;volatile
 46659  011B20  D00D               	goto	i2l2748
 46660                           
 46661                           ; BSR set to: 1
 46662  011B22  B146               	btfsc	_enc1& (0+255),0,b
 46663  011B24  D00B               	goto	i2l2748
 46664                           
 46665                           ; BSR set to: 1
 46666                           ;encoder.c: 109: {;encoder.c: 110: if(os.encoder1Count<127)
 46667  011B26  0E7F               	movlw	127
 46668  011B28  1967               	xorwf	(_os+3)& (0+255),w,b	;volatile
 46669  011B2A  B4D8               	btfsc	status,2,c
 46670  011B2C  D007               	goto	i2l2748
 46671                           
 46672                           ; BSR set to: 1
 46673                           ;encoder.c: 111: {;encoder.c: 112: ++os.encoder1Count;
 46674  011B2E  2B67               	incf	(_os+3)& (0+255),f,b	;volatile
 46675                           
 46676                           ; BSR set to: 1
 46677                           ;encoder.c: 113: if(config.beep_duration)
 46678  011B30  51AB               	movf	(_config+21)& (0+255),w,b
 46679  011B32  B4D8               	btfsc	status,2,c
 46680  011B34  D003               	goto	i2l2748
 46681                           
 46682                           ; BSR set to: 1
 46683                           ;encoder.c: 114: {;encoder.c: 115: LATCbits.LC7 = 1;
 46684  011B36  8E8B               	bsf	3979,7,c	;volatile
 46685                           
 46686                           ;encoder.c: 116: os.beep_count = config.beep_duration;
 46687  011B38  C1AB  F18C         	movff	_config+21,_os+40	;volatile
 46688  011B3C                     i2l2748:
 46689                           
 46690                           ; BSR set to: 1
 46691                           ;encoder.c: 117: };encoder.c: 118: };encoder.c: 119: };encoder.c: 121: if(PORTEbits.RE2 
      +                          && PORTEbits.RE0 && (!(enc1&0b00000100)))
 46692                           
 46693                           ; BSR set to: 1
 46694                           
 46695                           ; BSR set to: 1
 46696  011B3C  B484               	btfsc	3972,2,c	;volatile
 46697                           
 46698                           ; BSR set to: 1
 46699  011B3E  A084               	btfss	3972,0,c	;volatile
 46700  011B40  D00E               	goto	i2l2751
 46701                           
 46702                           ; BSR set to: 1
 46703  011B42  B546               	btfsc	_enc1& (0+255),2,b
 46704  011B44  D00C               	goto	i2l2751
 46705                           
 46706                           ; BSR set to: 1
 46707                           ;encoder.c: 122: {;encoder.c: 123: if(os.encoder1Count>-128)
 46708  011B46  5167               	movf	(_os+3)& (0+255),w,b	;volatile
 46709  011B48  0A80               	xorlw	128
 46710  011B4A  0FFF               	addlw	255
 46711  011B4C  A0D8               	btfss	status,0,c
 46712  011B4E  D007               	goto	i2l2751
 46713                           
 46714                           ; BSR set to: 1
 46715                           ;encoder.c: 124: {;encoder.c: 125: --os.encoder1Count;
 46716  011B50  0767               	decf	(_os+3)& (0+255),f,b	;volatile
 46717                           
 46718                           ; BSR set to: 1
 46719                           ;encoder.c: 126: if(config.beep_duration)
 46720  011B52  51AB               	movf	(_config+21)& (0+255),w,b
 46721  011B54  B4D8               	btfsc	status,2,c
 46722  011B56  D003               	goto	i2l2751
 46723                           
 46724                           ; BSR set to: 1
 46725                           ;encoder.c: 127: {;encoder.c: 128: LATCbits.LC7 = 1;
 46726  011B58  8E8B               	bsf	3979,7,c	;volatile
 46727                           
 46728                           ;encoder.c: 129: os.beep_count = config.beep_duration;
 46729  011B5A  C1AB  F18C         	movff	_config+21,_os+40	;volatile
 46730  011B5E                     i2l2751:
 46731                           
 46732                           ; BSR set to: 1
 46733                           ;encoder.c: 130: };encoder.c: 131: };encoder.c: 132: };encoder.c: 134: if(PORTEbits.RE1 
      +                          && (!(enc1&0b00000010)))
 46734                           
 46735                           ; BSR set to: 1
 46736                           
 46737                           ; BSR set to: 1
 46738  011B5E  B284               	btfsc	3972,1,c	;volatile
 46739                           
 46740                           ; BSR set to: 1
 46741  011B60  B346               	btfsc	_enc1& (0+255),1,b
 46742  011B62  D008               	goto	i2l2753
 46743                           
 46744                           ; BSR set to: 1
 46745                           ;encoder.c: 135: {;encoder.c: 136: os.button1 = 1;
 46746  011B64  0E01               	movlw	1
 46747  011B66  6F68               	movwf	(_os+4)& (0+255),b	;volatile
 46748                           
 46749                           ;encoder.c: 137: if(config.beep_duration)
 46750  011B68  51AB               	movf	(_config+21)& (0+255),w,b
 46751  011B6A  B4D8               	btfsc	status,2,c
 46752  011B6C  D003               	goto	i2l2753
 46753                           
 46754                           ; BSR set to: 1
 46755                           ;encoder.c: 138: {;encoder.c: 139: LATCbits.LC7 = 1;
 46756  011B6E  8E8B               	bsf	3979,7,c	;volatile
 46757                           
 46758                           ;encoder.c: 140: os.beep_count = config.beep_duration;
 46759  011B70  C1AB  F18C         	movff	_config+21,_os+40	;volatile
 46760  011B74                     i2l2753:
 46761                           
 46762                           ; BSR set to: 1
 46763                           ;encoder.c: 141: };encoder.c: 142: };encoder.c: 144: if((!PORTEbits.RE1) && (enc1&0b0000
      +                          0010))
 46764                           
 46765                           ; BSR set to: 1
 46766  011B74  A284               	btfss	3972,1,c	;volatile
 46767                           
 46768                           ; BSR set to: 1
 46769  011B76  A346               	btfss	_enc1& (0+255),1,b
 46770  011B78  D001               	goto	i2l2754
 46771                           
 46772                           ; BSR set to: 1
 46773                           ;encoder.c: 145: {;encoder.c: 146: os.button1 = -1;
 46774  011B7A  6968               	setf	(_os+4)& (0+255),b	;volatile
 46775  011B7C                     i2l2754:
 46776                           
 46777                           ; BSR set to: 1
 46778                           ;encoder.c: 147: };encoder.c: 149: enc1 = PORTE & 0b00000111;
 46779                           
 46780                           ; BSR set to: 1
 46781  011B7C  5084               	movf	3972,w,c	;volatile
 46782  011B7E  0B07               	andlw	7
 46783  011B80  6F46               	movwf	_enc1& (0+255),b
 46784  011B82                     i2l2745:
 46785                           
 46786                           ; BSR set to: 1
 46787                           ;encoder.c: 150: };encoder.c: 152: if(enc2 != (PORTA&0b00000111))
 46788  011B82  5080               	movf	3968,w,c	;volatile
 46789  011B84  0B07               	andlw	7
 46790  011B86  1945               	xorwf	_enc2& (0+255),w,b
 46791  011B88  B4D8               	btfsc	status,2,c
 46792  011B8A  D033               	goto	i2l2755
 46793                           
 46794                           ; BSR set to: 1
 46795                           ;encoder.c: 153: {;encoder.c: 155: if(PORTAbits.RA2 && PORTAbits.RA0 && (!(enc2&0b000001
      +                          00)))
 46796  011B8C  B480               	btfsc	3968,2,c	;volatile
 46797                           
 46798                           ; BSR set to: 1
 46799  011B8E  A080               	btfss	3968,0,c	;volatile
 46800  011B90  D00D               	goto	i2l2758
 46801                           
 46802                           ; BSR set to: 1
 46803  011B92  B545               	btfsc	_enc2& (0+255),2,b
 46804  011B94  D00B               	goto	i2l2758
 46805                           
 46806                           ; BSR set to: 1
 46807                           ;encoder.c: 156: {;encoder.c: 157: if(os.encoder2Count<127)
 46808  011B96  0E7F               	movlw	127
 46809  011B98  1969               	xorwf	(_os+5)& (0+255),w,b	;volatile
 46810  011B9A  B4D8               	btfsc	status,2,c
 46811  011B9C  D007               	goto	i2l2758
 46812                           
 46813                           ; BSR set to: 1
 46814                           ;encoder.c: 158: {;encoder.c: 159: ++os.encoder2Count;
 46815  011B9E  2B69               	incf	(_os+5)& (0+255),f,b	;volatile
 46816                           
 46817                           ; BSR set to: 1
 46818                           ;encoder.c: 160: if(config.beep_duration)
 46819  011BA0  51AB               	movf	(_config+21)& (0+255),w,b
 46820  011BA2  B4D8               	btfsc	status,2,c
 46821  011BA4  D003               	goto	i2l2758
 46822                           
 46823                           ; BSR set to: 1
 46824                           ;encoder.c: 161: {;encoder.c: 162: LATCbits.LC7 = 1;
 46825  011BA6  8E8B               	bsf	3979,7,c	;volatile
 46826                           
 46827                           ;encoder.c: 163: os.beep_count = config.beep_duration;
 46828  011BA8  C1AB  F18C         	movff	_config+21,_os+40	;volatile
 46829  011BAC                     i2l2758:
 46830                           
 46831                           ; BSR set to: 1
 46832                           ;encoder.c: 164: };encoder.c: 165: };encoder.c: 166: };encoder.c: 168: if(PORTAbits.RA0 
      +                          && PORTAbits.RA2 && (!(enc2&0b00000001)))
 46833                           
 46834                           ; BSR set to: 1
 46835                           
 46836                           ; BSR set to: 1
 46837  011BAC  B080               	btfsc	3968,0,c	;volatile
 46838                           
 46839                           ; BSR set to: 1
 46840  011BAE  A480               	btfss	3968,2,c	;volatile
 46841  011BB0  D00E               	goto	i2l2761
 46842                           
 46843                           ; BSR set to: 1
 46844  011BB2  B145               	btfsc	_enc2& (0+255),0,b
 46845  011BB4  D00C               	goto	i2l2761
 46846                           
 46847                           ; BSR set to: 1
 46848                           ;encoder.c: 169: {;encoder.c: 170: if(os.encoder2Count>-128)
 46849  011BB6  5169               	movf	(_os+5)& (0+255),w,b	;volatile
 46850  011BB8  0A80               	xorlw	128
 46851  011BBA  0FFF               	addlw	255
 46852  011BBC  A0D8               	btfss	status,0,c
 46853  011BBE  D007               	goto	i2l2761
 46854                           
 46855                           ; BSR set to: 1
 46856                           ;encoder.c: 171: {;encoder.c: 172: --os.encoder2Count;
 46857  011BC0  0769               	decf	(_os+5)& (0+255),f,b	;volatile
 46858                           
 46859                           ; BSR set to: 1
 46860                           ;encoder.c: 173: if(config.beep_duration)
 46861  011BC2  51AB               	movf	(_config+21)& (0+255),w,b
 46862  011BC4  B4D8               	btfsc	status,2,c
 46863  011BC6  D003               	goto	i2l2761
 46864                           
 46865                           ; BSR set to: 1
 46866                           ;encoder.c: 174: {;encoder.c: 175: LATCbits.LC7 = 1;
 46867  011BC8  8E8B               	bsf	3979,7,c	;volatile
 46868                           
 46869                           ;encoder.c: 176: os.beep_count = config.beep_duration;
 46870  011BCA  C1AB  F18C         	movff	_config+21,_os+40	;volatile
 46871  011BCE                     i2l2761:
 46872                           
 46873                           ; BSR set to: 1
 46874                           ;encoder.c: 177: };encoder.c: 178: };encoder.c: 179: };encoder.c: 181: if(PORTAbits.RA1 
      +                          && (!(enc2&0b00000010)))
 46875                           
 46876                           ; BSR set to: 1
 46877                           
 46878                           ; BSR set to: 1
 46879  011BCE  B280               	btfsc	3968,1,c	;volatile
 46880                           
 46881                           ; BSR set to: 1
 46882  011BD0  B345               	btfsc	_enc2& (0+255),1,b
 46883  011BD2  D008               	goto	i2l2763
 46884                           
 46885                           ; BSR set to: 1
 46886                           ;encoder.c: 182: {;encoder.c: 183: os.button2 = 1;
 46887  011BD4  0E01               	movlw	1
 46888  011BD6  6F6A               	movwf	(_os+6)& (0+255),b	;volatile
 46889                           
 46890                           ;encoder.c: 184: if(config.beep_duration)
 46891  011BD8  51AB               	movf	(_config+21)& (0+255),w,b
 46892  011BDA  B4D8               	btfsc	status,2,c
 46893  011BDC  D003               	goto	i2l2763
 46894                           
 46895                           ; BSR set to: 1
 46896                           ;encoder.c: 185: {;encoder.c: 186: LATCbits.LC7 = 1;
 46897  011BDE  8E8B               	bsf	3979,7,c	;volatile
 46898                           
 46899                           ;encoder.c: 187: os.beep_count = config.beep_duration;
 46900  011BE0  C1AB  F18C         	movff	_config+21,_os+40	;volatile
 46901  011BE4                     i2l2763:
 46902                           
 46903                           ; BSR set to: 1
 46904                           ;encoder.c: 188: };encoder.c: 189: };encoder.c: 191: if((!PORTAbits.RA1) && (enc2&0b0000
      +                          0010))
 46905                           
 46906                           ; BSR set to: 1
 46907  011BE4  A280               	btfss	3968,1,c	;volatile
 46908                           
 46909                           ; BSR set to: 1
 46910  011BE6  A345               	btfss	_enc2& (0+255),1,b
 46911  011BE8  D001               	goto	i2l2764
 46912                           
 46913                           ; BSR set to: 1
 46914                           ;encoder.c: 192: {;encoder.c: 193: os.button2 = -1;
 46915  011BEA  696A               	setf	(_os+6)& (0+255),b	;volatile
 46916  011BEC                     i2l2764:
 46917                           
 46918                           ; BSR set to: 1
 46919                           ;encoder.c: 194: };encoder.c: 196: enc2 = PORTA & 0b00000111;
 46920                           
 46921                           ; BSR set to: 1
 46922  011BEC  5080               	movf	3968,w,c	;volatile
 46923  011BEE  0B07               	andlw	7
 46924  011BF0  6F45               	movwf	_enc2& (0+255),b
 46925  011BF2                     i2l2755:
 46926                           
 46927                           ; BSR set to: 1
 46928                           ;encoder.c: 197: };encoder.c: 200: if(os.beep_count)
 46929                           
 46930                           ; BSR set to: 1
 46931  011BF2  518C               	movf	(_os+40)& (0+255),w,b	;volatile
 46932  011BF4  B4D8               	btfsc	status,2,c
 46933  011BF6  0012               	return	
 46934                           
 46935                           ; BSR set to: 1
 46936                           ;encoder.c: 201: {;encoder.c: 202: --os.beep_count;
 46937  011BF8  078C               	decf	(_os+40)& (0+255),f,b	;volatile
 46938                           
 46939                           ; BSR set to: 1
 46940                           ;encoder.c: 203: if(!os.beep_count)
 46941  011BFA  518C               	movf	(_os+40)& (0+255),w,b	;volatile
 46942  011BFC  A4D8               	btfss	status,2,c
 46943  011BFE  0012               	return	
 46944                           
 46945                           ; BSR set to: 1
 46946                           ;encoder.c: 204: {;encoder.c: 205: LATCbits.LC7 = 0;
 46947  011C00  9E8B               	bcf	3979,7,c	;volatile
 46948                           
 46949                           ; BSR set to: 1
 46950  011C02  0012               	return	
 46951  011C04                     __end_of_encoder_run:
 46952                           	opt stack 0
 46953                           tosu	equ	0xFFF
 46954                           tosh	equ	0xFFE
 46955                           tosl	equ	0xFFD
 46956                           pclatu	equ	0xFFB
 46957                           pclath	equ	0xFFA
 46958                           tblptru	equ	0xFF8
 46959                           tblptrh	equ	0xFF7
 46960                           tblptrl	equ	0xFF6
 46961                           tablat	equ	0xFF5
 46962                           prodh	equ	0xFF4
 46963                           prodl	equ	0xFF3
 46964                           intcon	equ	0xFF2
 46965                           indf0	equ	0xFEF
 46966                           postinc0	equ	0xFEE
 46967                           fsr0h	equ	0xFEA
 46968                           fsr0l	equ	0xFE9
 46969                           wreg	equ	0xFE8
 46970                           indf1	equ	0xFE7
 46971                           postinc1	equ	0xFE6
 46972                           postdec1	equ	0xFE5
 46973                           plusw1	equ	0xFE3
 46974                           fsr1h	equ	0xFE2
 46975                           fsr1l	equ	0xFE1
 46976                           indf2	equ	0xFDF
 46977                           postinc2	equ	0xFDE
 46978                           postdec2	equ	0xFDD
 46979                           plusw2	equ	0xFDB
 46980                           fsr2h	equ	0xFDA
 46981                           fsr2l	equ	0xFD9
 46982                           status	equ	0xFD8
 46983                           
 46984 ;; *************** function _motor_isr *****************
 46985 ;; Defined at:
 46986 ;;		line 672 in file "motor.c"
 46987 ;; Parameters:    Size  Location     Type
 46988 ;;		None
 46989 ;; Auto vars:     Size  Location     Type
 46990 ;;  steps_remain    4   57[COMRAM] unsigned long 
 46991 ;;  steps_until_    2   55[COMRAM] unsigned int 
 46992 ;;  steps_until_    2   53[COMRAM] unsigned int 
 46993 ;; Return value:  Size  Location     Type
 46994 ;;                  1    wreg      void 
 46995 ;; Registers used:
 46996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 46997 ;; Tracked objects:
 46998 ;;		On entry : 0/0
 46999 ;;		On exit  : 0/0
 47000 ;;		Unchanged: 0/0
 47001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 47002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47003 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47004 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47005 ;;      Totals:        24       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 47006 ;;Total ram usage:       24 bytes
 47007 ;; Hardware stack levels used:    1
 47008 ;; Hardware stack levels required when called:    4
 47009 ;; This function calls:
 47010 ;;		_i2c_eeprom_save_position
 47011 ;; This function is called by:
 47012 ;;		_SYS_InterruptHigh
 47013 ;; This function uses a non-reentrant model
 47014 ;;
 47015                           
 47016                           	psect	text195
 47017  00B7BE                     __ptext195:
 47018                           	opt stack 0
 47019  00B7BE                     _motor_isr:
 47020                           	opt stack 13
 47021                           
 47022                           ;motor.c: 674: uint32_t steps_remaining;;motor.c: 675: uint16_t steps_until_standstill;;
      +                          motor.c: 676: uint16_t steps_until_standstill_if_accelerate;;motor.c: 679: PIR1bits.TMR2
      +                          IF = 0;
 47023                           
 47024                           ; BSR set to: 1
 47025                           ;incstack = 0
 47026  00B7BE  929E               	bcf	3998,1,c	;volatile
 47027                           
 47028                           ;motor.c: 682: if(motor_move_type==MOTOR_MOVE_TYPE_ENDLESS)
 47029  00B7C0  0101               	movlb	1	; () banked
 47030  00B7C2  0549               	decf	_motor_move_type& (0+255),w,b
 47031  00B7C4  A4D8               	btfss	status,2,c
 47032  00B7C6  D004               	goto	i2l2571
 47033                           
 47034                           ; BSR set to: 1
 47035                           ;motor.c: 683: {;motor.c: 684: motor_final_stepcount = 0xFFFFFFFF;
 47036  00B7C8  6921               	setf	_motor_final_stepcount& (0+255),b	;volatile
 47037  00B7CA  6922               	setf	(_motor_final_stepcount+1)& (0+255),b	;volatile
 47038  00B7CC  6923               	setf	(_motor_final_stepcount+2)& (0+255),b	;volatile
 47039  00B7CE  6924               	setf	(_motor_final_stepcount+3)& (0+255),b	;volatile
 47040  00B7D0                     i2l2571:
 47041                           
 47042                           ; BSR set to: 1
 47043                           ;motor.c: 685: };motor.c: 687: if(motor_mode==MOTOR_MODE_MANUAL)
 47044                           
 47045                           ; BSR set to: 1
 47046  00B7D0  5147               	movf	_motor_mode& (0+255),w,b	;volatile
 47047  00B7D2  A4D8               	btfss	status,2,c
 47048  00B7D4  D01A               	goto	i2l2576
 47049                           
 47050                           ; BSR set to: 1
 47051                           ;motor.c: 688: {;motor.c: 690: if(LATBbits.LB1)
 47052  00B7D6  A28A               	btfss	3978,1,c	;volatile
 47053  00B7D8  D017               	goto	i2l2573
 47054                           
 47055                           ; BSR set to: 1
 47056                           ;motor.c: 691: {;motor.c: 693: LATBbits.LB1 = 0;
 47057  00B7DA  928A               	bcf	3978,1,c	;volatile
 47058                           
 47059                           ; BSR set to: 1
 47060                           ;motor.c: 696: if(motor_current_stepcount==motor_final_stepcount)
 47061  00B7DC  5121               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47062  00B7DE  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 47063  00B7E0  E109               	bnz	i2u1901_41
 47064  00B7E2  5122               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47065  00B7E4  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 47066  00B7E6  E106               	bnz	i2u1901_41
 47067  00B7E8  5123               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47068  00B7EA  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 47069  00B7EC  E103               	bnz	i2u1901_41
 47070  00B7EE  5124               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47071  00B7F0  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 47072  00B7F2  A4D8               	btfss	status,2,c
 47073  00B7F4                     i2u1901_41:
 47074  00B7F4  0012               	return	
 47075                           
 47076                           ; BSR set to: 1
 47077                           ;motor.c: 697: {;motor.c: 700: T2CONbits.TMR2ON = 0;
 47078  00B7F6  94CA               	bcf	4042,2,c	;volatile
 47079                           
 47080                           ;motor.c: 702: PIR1bits.TMR2IF = 0;
 47081  00B7F8  929E               	bcf	3998,1,c	;volatile
 47082                           
 47083                           ;motor.c: 703: PIE1bits.TMR2IE = 0;
 47084  00B7FA  929D               	bcf	3997,1,c	;volatile
 47085                           
 47086                           ; BSR set to: 1
 47087                           ;motor.c: 705: i2c_eeprom_save_position();
 47088  00B7FC  EC28  F0AE         	call	_i2c_eeprom_save_position	;wreg free
 47089                           
 47090                           ;motor.c: 707: os.busy = 0;
 47091  00B800  0E00               	movlw	0
 47092  00B802  0101               	movlb	1	; () banked
 47093  00B804  6F74               	movwf	(_os+16)& (0+255),b	;volatile
 47094                           
 47095                           ; BSR set to: 1
 47096                           ;motor.c: 708: };motor.c: 711: return;
 47097                           
 47098                           ; BSR set to: 1
 47099  00B806  0012               	return	
 47100  00B808                     i2l2573:
 47101                           
 47102                           ; BSR set to: 1
 47103                           ;motor.c: 713: else;motor.c: 714: {;motor.c: 716: LATBbits.LB1 = 1;
 47104  00B808  828A               	bsf	3978,1,c	;volatile
 47105  00B80A                     i2l2576:
 47106                           
 47107                           ; BSR set to: 1
 47108                           ;motor.c: 717: };motor.c: 718: };motor.c: 720: ++motor_current_stepcount;
 47109                           
 47110                           ; BSR set to: 1
 47111                           
 47112                           ; BSR set to: 1
 47113  00B80A  0E01               	movlw	1
 47114  00B80C  2658               	addwf	_motor_current_stepcount,f,c	;volatile
 47115  00B80E  0E00               	movlw	0
 47116  00B810  2259               	addwfc	_motor_current_stepcount+1,f,c	;volatile
 47117  00B812  225A               	addwfc	_motor_current_stepcount+2,f,c	;volatile
 47118  00B814  225B               	addwfc	_motor_current_stepcount+3,f,c	;volatile
 47119                           
 47120                           ;motor.c: 723: os.current_position_in_steps += motor_direction;
 47121  00B816  5148               	movf	_motor_direction& (0+255),w,b
 47122  00B818  6E26               	movwf	??_motor_isr& (0+255),c
 47123  00B81A  0E00               	movlw	0
 47124  00B81C  BE26               	btfsc	??_motor_isr& (0+255),7,c
 47125  00B81E  0EFF               	movlw	255
 47126  00B820  6E27               	movwf	(??_motor_isr+1)& (0+255),c
 47127  00B822  6E28               	movwf	(??_motor_isr+2)& (0+255),c
 47128  00B824  6E29               	movwf	(??_motor_isr+3)& (0+255),c
 47129  00B826  5026               	movf	??_motor_isr,w,c
 47130  00B828  276B               	addwf	(_os+7)& (0+255),f,b	;volatile
 47131  00B82A  5027               	movf	??_motor_isr+1,w,c
 47132  00B82C  236C               	addwfc	(_os+8)& (0+255),f,b	;volatile
 47133  00B82E  5028               	movf	??_motor_isr+2,w,c
 47134  00B830  236D               	addwfc	(_os+9)& (0+255),f,b	;volatile
 47135  00B832  5029               	movf	??_motor_isr+3,w,c
 47136  00B834  236E               	addwfc	(_os+10)& (0+255),f,b	;volatile
 47137                           
 47138                           ;motor.c: 724: if(os.current_position_in_steps==config.full_circle_in_steps)
 47139  00B836  5196               	movf	_config& (0+255),w,b
 47140  00B838  196B               	xorwf	(_os+7)& (0+255),w,b	;volatile
 47141  00B83A  E114               	bnz	i2l19024
 47142  00B83C  5197               	movf	(_config+1)& (0+255),w,b
 47143  00B83E  196C               	xorwf	(_os+8)& (0+255),w,b	;volatile
 47144  00B840  E111               	bnz	i2l19024
 47145  00B842  5198               	movf	(_config+2)& (0+255),w,b
 47146  00B844  196D               	xorwf	(_os+9)& (0+255),w,b	;volatile
 47147  00B846  E10E               	bnz	i2l19024
 47148  00B848  5199               	movf	(_config+3)& (0+255),w,b
 47149  00B84A  196E               	xorwf	(_os+10)& (0+255),w,b	;volatile
 47150  00B84C  A4D8               	btfss	status,2,c
 47151  00B84E  D00A               	goto	i2l2577
 47152                           
 47153                           ; BSR set to: 1
 47154                           ;motor.c: 725: {;motor.c: 726: os.current_position_in_steps = 0;
 47155  00B850  0E00               	movlw	0
 47156  00B852  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 47157  00B854  0E00               	movlw	0
 47158  00B856  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 47159  00B858  0E00               	movlw	0
 47160  00B85A  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 47161  00B85C  0E00               	movlw	0
 47162  00B85E  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 47163                           
 47164                           ; BSR set to: 1
 47165                           ;motor.c: 727: ++os.absolute_position;
 47166  00B860  4B6F               	infsnz	(_os+11)& (0+255),f,b	;volatile
 47167  00B862  2B70               	incf	(_os+12)& (0+255),f,b	;volatile
 47168  00B864                     i2l2577:
 47169  00B864                     i2l19024:
 47170                           
 47171                           ; BSR set to: 1
 47172                           ;motor.c: 728: };motor.c: 729: if(os.current_position_in_steps==0xFFFFFFFF)
 47173  00B864  296B               	incf	(_os+7)& (0+255),w,b	;volatile
 47174  00B866  E116               	bnz	i2l19030
 47175  00B868  296C               	incf	(_os+8)& (0+255),w,b	;volatile
 47176  00B86A  E114               	bnz	i2l19030
 47177  00B86C  296D               	incf	(_os+9)& (0+255),w,b	;volatile
 47178  00B86E  E112               	bnz	i2l19030
 47179  00B870  296E               	incf	(_os+10)& (0+255),w,b	;volatile
 47180  00B872  A4D8               	btfss	status,2,c
 47181  00B874  D00F               	goto	i2l2578
 47182                           
 47183                           ; BSR set to: 1
 47184                           ;motor.c: 730: {;motor.c: 731: os.current_position_in_steps = (config.full_circle_in_ste
      +                          ps-1);
 47185  00B876  0EFF               	movlw	255
 47186  00B878  2596               	addwf	_config& (0+255),w,b
 47187  00B87A  6F6B               	movwf	(_os+7)& (0+255),b	;volatile
 47188  00B87C  0EFF               	movlw	255
 47189  00B87E  2197               	addwfc	(_config+1)& (0+255),w,b
 47190  00B880  6F6C               	movwf	(_os+8)& (0+255),b	;volatile
 47191  00B882  0EFF               	movlw	255
 47192  00B884  2198               	addwfc	(_config+2)& (0+255),w,b
 47193  00B886  6F6D               	movwf	(_os+9)& (0+255),b	;volatile
 47194  00B888  0EFF               	movlw	255
 47195  00B88A  2199               	addwfc	(_config+3)& (0+255),w,b
 47196  00B88C  6F6E               	movwf	(_os+10)& (0+255),b	;volatile
 47197                           
 47198                           ; BSR set to: 1
 47199                           ;motor.c: 732: --os.absolute_position;
 47200  00B88E  076F               	decf	(_os+11)& (0+255),f,b	;volatile
 47201  00B890  A0D8               	btfss	status,0,c
 47202  00B892  0770               	decf	(_os+12)& (0+255),f,b	;volatile
 47203  00B894                     i2l2578:
 47204  00B894                     i2l19030:
 47205                           
 47206                           ; BSR set to: 1
 47207                           ;motor.c: 733: };motor.c: 736: if(motor_current_stepcount==motor_next_speed_check)
 47208  00B894  0102               	movlb	2	; () banked
 47209  00B896  512C               	movf	_motor_next_speed_check& (0+255),w,b	;volatile
 47210  00B898  1858               	xorwf	_motor_current_stepcount,w,c	;volatile
 47211  00B89A  E109               	bnz	i2u1904_41
 47212  00B89C  512D               	movf	(_motor_next_speed_check+1)& (0+255),w,b	;volatile
 47213  00B89E  1859               	xorwf	_motor_current_stepcount+1,w,c	;volatile
 47214  00B8A0  E106               	bnz	i2u1904_41
 47215  00B8A2  512E               	movf	(_motor_next_speed_check+2)& (0+255),w,b	;volatile
 47216  00B8A4  185A               	xorwf	_motor_current_stepcount+2,w,c	;volatile
 47217  00B8A6  E103               	bnz	i2u1904_41
 47218  00B8A8  512F               	movf	(_motor_next_speed_check+3)& (0+255),w,b	;volatile
 47219  00B8AA  185B               	xorwf	_motor_current_stepcount+3,w,c	;volatile
 47220  00B8AC  A4D8               	btfss	status,2,c
 47221  00B8AE                     i2u1904_41:
 47222  00B8AE  0012               	return	
 47223                           
 47224                           ; BSR set to: 2
 47225                           ;motor.c: 737: {;motor.c: 739: steps_remaining = motor_final_stepcount - motor_current_s
      +                          tepcount;
 47226  00B8B0  C058  F026         	movff	_motor_current_stepcount,??_motor_isr	;volatile
 47227  00B8B4  C059  F027         	movff	_motor_current_stepcount+1,??_motor_isr+1	;volatile
 47228  00B8B8  C05A  F028         	movff	_motor_current_stepcount+2,??_motor_isr+2	;volatile
 47229  00B8BC  C05B  F029         	movff	_motor_current_stepcount+3,??_motor_isr+3	;volatile
 47230  00B8C0  1E26               	comf	??_motor_isr,f,c
 47231  00B8C2  1E27               	comf	??_motor_isr+1,f,c
 47232  00B8C4  1E28               	comf	??_motor_isr+2,f,c
 47233  00B8C6  1E29               	comf	??_motor_isr+3,f,c
 47234  00B8C8  2A26               	incf	??_motor_isr,f,c
 47235  00B8CA  0E00               	movlw	0
 47236  00B8CC  2227               	addwfc	??_motor_isr+1,f,c
 47237  00B8CE  2228               	addwfc	??_motor_isr+2,f,c
 47238  00B8D0  2229               	addwfc	??_motor_isr+3,f,c
 47239  00B8D2  0101               	movlb	1	; () banked
 47240  00B8D4  5121               	movf	_motor_final_stepcount& (0+255),w,b	;volatile
 47241  00B8D6  2426               	addwf	??_motor_isr,w,c
 47242  00B8D8  6E3A               	movwf	motor_isr@steps_remaining,c
 47243  00B8DA  5122               	movf	(_motor_final_stepcount+1)& (0+255),w,b	;volatile
 47244  00B8DC  2027               	addwfc	??_motor_isr+1,w,c
 47245  00B8DE  6E3B               	movwf	motor_isr@steps_remaining+1,c
 47246  00B8E0  5123               	movf	(_motor_final_stepcount+2)& (0+255),w,b	;volatile
 47247  00B8E2  2028               	addwfc	??_motor_isr+2,w,c
 47248  00B8E4  6E3C               	movwf	motor_isr@steps_remaining+2,c
 47249  00B8E6  5124               	movf	(_motor_final_stepcount+3)& (0+255),w,b	;volatile
 47250  00B8E8  2029               	addwfc	??_motor_isr+3,w,c
 47251  00B8EA  6E3D               	movwf	motor_isr@steps_remaining+3,c
 47252                           
 47253                           ; BSR set to: 1
 47254                           ;motor.c: 740: steps_until_standstill = motor_steps_lookup[motor_current_speed];
 47255  00B8EC  90D8               	bcf	status,0,c
 47256  00B8EE  0100               	movlb	0	; () banked
 47257  00B8F0  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47258  00B8F2  6EF6               	movwf	tblptrl,c
 47259  00B8F4  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47260  00B8F6  6EF7               	movwf	tblptrh,c
 47261  00B8F8  0E61               	movlw	low _motor_steps_lookup
 47262  00B8FA  26F6               	addwf	tblptrl,f,c
 47263  00B8FC  0E94               	movlw	high _motor_steps_lookup
 47264  00B8FE  22F7               	addwfc	tblptrh,f,c
 47265  00B900                     	if	1	;There are 3 active tblptr bytes
 47266  00B900  6AF8               	clrf	tblptru,c
 47267  00B902  0E00               	movlw	low (__mediumconst shr (0+16))
 47268  00B904  22F8               	addwfc	tblptru,f,c
 47269  00B906                     	endif
 47270  00B906  0009               	tblrd		*+
 47271  00B908  CFF5 F036          	movff	tablat,motor_isr@steps_until_standstill
 47272  00B90C  000A               	tblrd		*-
 47273  00B90E  CFF5 F037          	movff	tablat,motor_isr@steps_until_standstill+1
 47274                           
 47275                           ; BSR set to: 0
 47276                           ;motor.c: 741: steps_until_standstill_if_accelerate = motor_steps_lookup[motor_current_s
      +                          peed+2];
 47277  00B912  C0FE  F026         	movff	_motor_current_speed,??_motor_isr	;volatile
 47278  00B916  C0FF  F027         	movff	_motor_current_speed+1,??_motor_isr+1	;volatile
 47279  00B91A  90D8               	bcf	status,0,c
 47280  00B91C  3626               	rlcf	??_motor_isr,f,c
 47281  00B91E  3627               	rlcf	??_motor_isr+1,f,c
 47282  00B920  0E04               	movlw	4
 47283  00B922  2626               	addwf	??_motor_isr,f,c
 47284  00B924  0E00               	movlw	0
 47285  00B926  2227               	addwfc	??_motor_isr+1,f,c
 47286  00B928  0E61               	movlw	low _motor_steps_lookup
 47287  00B92A  2426               	addwf	??_motor_isr,w,c
 47288  00B92C  6EF6               	movwf	tblptrl,c
 47289  00B92E  0E94               	movlw	high _motor_steps_lookup
 47290  00B930  2027               	addwfc	??_motor_isr+1,w,c
 47291  00B932  6EF7               	movwf	tblptrh,c
 47292  00B934                     	if	1	;There are 3 active tblptr bytes
 47293  00B934  6AF8               	clrf	tblptru,c
 47294  00B936  0E00               	movlw	low (__mediumconst shr (0+16))
 47295  00B938  22F8               	addwfc	tblptru,f,c
 47296  00B93A                     	endif
 47297  00B93A  0009               	tblrd		*+
 47298  00B93C  CFF5 F038          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate
 47299  00B940  000A               	tblrd		*-
 47300  00B942  CFF5 F039          	movff	tablat,motor_isr@steps_until_standstill_if_accelerate+1
 47301                           
 47302                           ;motor.c: 743: if((motor_current_speed>motor_maximum_speed) || (steps_until_standstill>=
      +                          steps_remaining))
 47303  00B946  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47304  00B948  0101               	movlb	1	; () banked
 47305  00B94A  5D33               	subwf	_motor_maximum_speed& (0+255),w,b
 47306  00B94C  0100               	movlb	0	; () banked
 47307  00B94E  51FF               	movf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47308  00B950  0101               	movlb	1	; () banked
 47309  00B952  5934               	subwfb	(_motor_maximum_speed+1)& (0+255),w,b
 47310  00B954  A0D8               	btfss	status,0,c
 47311  00B956  D010               	goto	i2u1906_40
 47312                           
 47313                           ; BSR set to: 1
 47314  00B958  5036               	movf	motor_isr@steps_until_standstill,w,c
 47315  00B95A  6E26               	movwf	??_motor_isr& (0+255),c
 47316  00B95C  5037               	movf	motor_isr@steps_until_standstill+1,w,c
 47317  00B95E  6E27               	movwf	(??_motor_isr+1)& (0+255),c
 47318  00B960  6A28               	clrf	(??_motor_isr+2)& (0+255),c
 47319  00B962  6A29               	clrf	(??_motor_isr+3)& (0+255),c
 47320  00B964  503A               	movf	motor_isr@steps_remaining,w,c
 47321  00B966  5C26               	subwf	??_motor_isr,w,c
 47322  00B968  503B               	movf	motor_isr@steps_remaining+1,w,c
 47323  00B96A  5827               	subwfb	??_motor_isr+1,w,c
 47324  00B96C  503C               	movf	motor_isr@steps_remaining+2,w,c
 47325  00B96E  5828               	subwfb	??_motor_isr+2,w,c
 47326  00B970  503D               	movf	motor_isr@steps_remaining+3,w,c
 47327  00B972  5829               	subwfb	??_motor_isr+3,w,c
 47328  00B974  A0D8               	btfss	status,0,c
 47329  00B976  D0E5               	goto	i2l2580
 47330  00B978                     i2u1906_40:
 47331                           
 47332                           ; BSR set to: 1
 47333                           ;motor.c: 744: {;motor.c: 746: if(motor_current_speed>0)
 47334                           
 47335                           ; BSR set to: 1
 47336  00B978  0100               	movlb	0	; () banked
 47337  00B97A  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47338  00B97C  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47339  00B97E  B4D8               	btfsc	status,2,c
 47340  00B980  D003               	goto	i2l2583
 47341                           
 47342                           ; BSR set to: 0
 47343                           ;motor.c: 747: {;motor.c: 748: --motor_current_speed;
 47344  00B982  07FE               	decf	_motor_current_speed& (0+255),f,b	;volatile
 47345  00B984  A0D8               	btfss	status,0,c
 47346  00B986  07FF               	decf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 47347  00B988                     i2l2583:
 47348                           
 47349                           ; BSR set to: 0
 47350                           ;motor.c: 749: };motor.c: 752: if((motor_mode==MOTOR_MODE_PWM) && (motor_postscaler_look
      +                          up[motor_current_speed]>0))
 47351                           
 47352                           ; BSR set to: 0
 47353  00B988  0101               	movlb	1	; () banked
 47354  00B98A  0547               	decf	_motor_mode& (0+255),w,b	;volatile
 47355  00B98C  A4D8               	btfss	status,2,c
 47356  00B98E  D026               	goto	i2l2584
 47357                           
 47358                           ; BSR set to: 1
 47359  00B990  0E2F               	movlw	low _motor_postscaler_lookup
 47360  00B992  0100               	movlb	0	; () banked
 47361  00B994  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47362  00B996  6EF6               	movwf	tblptrl,c
 47363  00B998  0E98               	movlw	high _motor_postscaler_lookup
 47364  00B99A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47365  00B99C  6EF7               	movwf	tblptrh,c
 47366  00B99E                     	if	1	;There are 3 active tblptr bytes
 47367  00B99E  6AF8               	clrf	tblptru,c
 47368  00B9A0  0E00               	movlw	low (__mediumconst shr (0+16))
 47369  00B9A2  22F8               	addwfc	tblptru,f,c
 47370  00B9A4                     	endif
 47371  00B9A4  0008               	tblrd		*
 47372  00B9A6  50F5               	movf	tablat,w,c
 47373  00B9A8  0900               	iorlw	0
 47374  00B9AA  B4D8               	btfsc	status,2,c
 47375  00B9AC  D017               	goto	i2l2584
 47376                           
 47377                           ; BSR set to: 0
 47378                           ;motor.c: 753: {;motor.c: 755: motor_mode = MOTOR_MODE_MANUAL;
 47379  00B9AE  0E00               	movlw	0
 47380  00B9B0  0101               	movlb	1	; () banked
 47381  00B9B2  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 47382                           
 47383                           ; BSR set to: 1
 47384                           ;motor.c: 758: LATBbits.LB1 = 1;
 47385  00B9B4  828A               	bsf	3978,1,c	;volatile
 47386                           
 47387                           ;motor.c: 759: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 47388  00B9B6  0E55               	movlw	85
 47389  00B9B8  6EA7               	movwf	4007,c	;volsfr
 47390  00B9BA  0EAA               	movlw	170
 47391  00B9BC  6EA7               	movwf	4007,c	;volsfr
 47392                           
 47393                           ; BSR set to: 1
 47394  00B9BE  010E               	movlb	14	; () banked
 47395  00B9C0  91BF               	bcf	191,0,b	;volatile
 47396                           
 47397                           ;motor.c: 760: RPOR4 = 0;
 47398  00B9C2  0E00               	movlw	0
 47399  00B9C4  6FC4               	movwf	196,b	;volatile
 47400                           
 47401                           ;motor.c: 761: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 47402  00B9C6  0E55               	movlw	85
 47403  00B9C8  6EA7               	movwf	4007,c	;volsfr
 47404  00B9CA  0EAA               	movlw	170
 47405  00B9CC  6EA7               	movwf	4007,c	;volsfr
 47406                           
 47407                           ; BSR set to: 14
 47408  00B9CE  81BF               	bsf	191,0,b	;volatile
 47409                           
 47410                           ;motor.c: 764: TMR2 = 0;
 47411  00B9D0  0E00               	movlw	0
 47412  00B9D2  6ECC               	movwf	4044,c	;volatile
 47413                           
 47414                           ; BSR set to: 14
 47415                           ;motor.c: 767: CCP1CONbits.CCP1M = 0b0000;
 47416  00B9D4  90BA               	bcf	4026,0,c	;volatile
 47417  00B9D6  92BA               	bcf	4026,1,c	;volatile
 47418  00B9D8  94BA               	bcf	4026,2,c	;volatile
 47419  00B9DA  96BA               	bcf	4026,3,c	;volatile
 47420  00B9DC                     i2l2584:
 47421                           
 47422                           ;motor.c: 768: };motor.c: 772: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_s
      +                          peed];
 47423                           
 47424                           ; BSR set to: 14
 47425  00B9DC  0EFD               	movlw	low _motor_prescaler_lookup
 47426  00B9DE  0100               	movlb	0	; () banked
 47427  00B9E0  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47428  00B9E2  6EF6               	movwf	tblptrl,c
 47429  00B9E4  0E9B               	movlw	high _motor_prescaler_lookup
 47430  00B9E6  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47431  00B9E8  6EF7               	movwf	tblptrh,c
 47432  00B9EA                     	if	1	;There are 3 active tblptr bytes
 47433  00B9EA  6AF8               	clrf	tblptru,c
 47434  00B9EC  0E00               	movlw	low (__mediumconst shr (0+16))
 47435  00B9EE  22F8               	addwfc	tblptru,f,c
 47436  00B9F0                     	endif
 47437  00B9F0  0008               	tblrd		*
 47438  00B9F2  CFF5 F026          	movff	tablat,??_motor_isr
 47439  00B9F6  50CA               	movf	4042,w,c	;volatile
 47440  00B9F8  1826               	xorwf	??_motor_isr,w,c
 47441  00B9FA  0BFC               	andlw	-4
 47442  00B9FC  1826               	xorwf	??_motor_isr,w,c
 47443  00B9FE  6ECA               	movwf	4042,c	;volatile
 47444                           
 47445                           ; BSR set to: 0
 47446                           ;motor.c: 774: PR2 = motor_period_lookup[motor_current_speed];
 47447  00BA00  0E16               	movlw	low _motor_period_lookup
 47448  00BA02  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47449  00BA04  6EF6               	movwf	tblptrl,c
 47450  00BA06  0E9A               	movlw	high _motor_period_lookup
 47451  00BA08  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47452  00BA0A  6EF7               	movwf	tblptrh,c
 47453  00BA0C                     	if	1	;There are 3 active tblptr bytes
 47454  00BA0C  6AF8               	clrf	tblptru,c
 47455  00BA0E  0E00               	movlw	low (__mediumconst shr (0+16))
 47456  00BA10  22F8               	addwfc	tblptru,f,c
 47457  00BA12                     	endif
 47458  00BA12  0008               	tblrd		*
 47459  00BA14  CFF5 FFCB          	movff	tablat,4043	;volatile
 47460                           
 47461                           ; BSR set to: 0
 47462                           ;motor.c: 776: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 47463  00BA18  0E2F               	movlw	low _motor_postscaler_lookup
 47464  00BA1A  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47465  00BA1C  6EF6               	movwf	tblptrl,c
 47466  00BA1E  0E98               	movlw	high _motor_postscaler_lookup
 47467  00BA20  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47468  00BA22  6EF7               	movwf	tblptrh,c
 47469  00BA24                     	if	1	;There are 3 active tblptr bytes
 47470  00BA24  6AF8               	clrf	tblptru,c
 47471  00BA26  0E00               	movlw	low (__mediumconst shr (0+16))
 47472  00BA28  22F8               	addwfc	tblptru,f,c
 47473  00BA2A                     	endif
 47474  00BA2A  0008               	tblrd		*
 47475  00BA2C  CFF5 F026          	movff	tablat,??_motor_isr
 47476  00BA30  4626               	rlncf	??_motor_isr,f,c
 47477  00BA32  4626               	rlncf	??_motor_isr,f,c
 47478  00BA34  4626               	rlncf	??_motor_isr,f,c
 47479  00BA36  50CA               	movf	4042,w,c	;volatile
 47480  00BA38  1826               	xorwf	??_motor_isr,w,c
 47481  00BA3A  0B87               	andlw	-121
 47482  00BA3C  1826               	xorwf	??_motor_isr,w,c
 47483  00BA3E  6ECA               	movwf	4042,c	;volatile
 47484                           
 47485                           ; BSR set to: 0
 47486                           ;motor.c: 778: CCPR1L = PR2>>1;
 47487  00BA40  90D8               	bcf	status,0,c
 47488  00BA42  30CB               	rrcf	4043,w,c	;volatile
 47489  00BA44  6EBB               	movwf	4027,c	;volatile
 47490                           
 47491                           ; BSR set to: 0
 47492                           ;motor.c: 781: if(motor_current_speed>0)
 47493  00BA46  51FE               	movf	_motor_current_speed& (0+255),w,b	;volatile
 47494  00BA48  11FF               	iorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47495  00BA4A  B4D8               	btfsc	status,2,c
 47496  00BA4C  D059               	goto	i2l2585
 47497                           
 47498                           ; BSR set to: 0
 47499                           ;motor.c: 782: {;motor.c: 783: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed] - motor_steps_lookup[motor_current_speed-1];
 47500  00BA4E  0EFE               	movlw	254
 47501  00BA50  6E26               	movwf	??_motor_isr& (0+255),c
 47502  00BA52  0EFF               	movlw	255
 47503  00BA54  6E27               	movwf	(??_motor_isr+1)& (0+255),c
 47504  00BA56  C0FE  F028         	movff	_motor_current_speed,??_motor_isr+2	;volatile
 47505  00BA5A  C0FF  F029         	movff	_motor_current_speed+1,??_motor_isr+3	;volatile
 47506  00BA5E  90D8               	bcf	status,0,c
 47507  00BA60  3628               	rlcf	??_motor_isr+2,f,c
 47508  00BA62  3629               	rlcf	??_motor_isr+3,f,c
 47509  00BA64  5026               	movf	??_motor_isr,w,c
 47510  00BA66  2628               	addwf	??_motor_isr+2,f,c
 47511  00BA68  5027               	movf	??_motor_isr+1,w,c
 47512  00BA6A  2229               	addwfc	??_motor_isr+3,f,c
 47513  00BA6C  0E61               	movlw	low _motor_steps_lookup
 47514  00BA6E  2428               	addwf	??_motor_isr+2,w,c
 47515  00BA70  6EF6               	movwf	tblptrl,c
 47516  00BA72  0E94               	movlw	high _motor_steps_lookup
 47517  00BA74  2029               	addwfc	??_motor_isr+3,w,c
 47518  00BA76  6EF7               	movwf	tblptrh,c
 47519  00BA78                     	if	1	;There are 3 active tblptr bytes
 47520  00BA78  6AF8               	clrf	tblptru,c
 47521  00BA7A  0E00               	movlw	low (__mediumconst shr (0+16))
 47522  00BA7C  22F8               	addwfc	tblptru,f,c
 47523  00BA7E                     	endif
 47524  00BA7E  0009               	tblrd		*+
 47525  00BA80  CFF5 F02A          	movff	tablat,??_motor_isr+4
 47526  00BA84  0009               	tblrd		*+
 47527  00BA86  CFF5 F02B          	movff	tablat,??_motor_isr+5
 47528  00BA8A  502A               	movf	??_motor_isr+4,w,c
 47529  00BA8C  6E2C               	movwf	(??_motor_isr+6)& (0+255),c
 47530  00BA8E  502B               	movf	??_motor_isr+5,w,c
 47531  00BA90  6E2D               	movwf	(??_motor_isr+7)& (0+255),c
 47532  00BA92  6A2E               	clrf	(??_motor_isr+8)& (0+255),c
 47533  00BA94  6A2F               	clrf	(??_motor_isr+9)& (0+255),c
 47534  00BA96  1E2C               	comf	??_motor_isr+6,f,c
 47535  00BA98  1E2D               	comf	??_motor_isr+7,f,c
 47536  00BA9A  1E2E               	comf	??_motor_isr+8,f,c
 47537  00BA9C  1E2F               	comf	??_motor_isr+9,f,c
 47538  00BA9E  2A2C               	incf	??_motor_isr+6,f,c
 47539  00BAA0  0E00               	movlw	0
 47540  00BAA2  222D               	addwfc	??_motor_isr+7,f,c
 47541  00BAA4  222E               	addwfc	??_motor_isr+8,f,c
 47542  00BAA6  222F               	addwfc	??_motor_isr+9,f,c
 47543  00BAA8  90D8               	bcf	status,0,c
 47544  00BAAA  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47545  00BAAC  6EF6               	movwf	tblptrl,c
 47546  00BAAE  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47547  00BAB0  6EF7               	movwf	tblptrh,c
 47548  00BAB2  0E61               	movlw	low _motor_steps_lookup
 47549  00BAB4  26F6               	addwf	tblptrl,f,c
 47550  00BAB6  0E94               	movlw	high _motor_steps_lookup
 47551  00BAB8  22F7               	addwfc	tblptrh,f,c
 47552  00BABA                     	if	1	;There are 3 active tblptr bytes
 47553  00BABA  6AF8               	clrf	tblptru,c
 47554  00BABC  0E00               	movlw	low (__mediumconst shr (0+16))
 47555  00BABE  22F8               	addwfc	tblptru,f,c
 47556  00BAC0                     	endif
 47557  00BAC0  0009               	tblrd		*+
 47558  00BAC2  CFF5 F030          	movff	tablat,??_motor_isr+10
 47559  00BAC6  0009               	tblrd		*+
 47560  00BAC8  CFF5 F031          	movff	tablat,??_motor_isr+11
 47561  00BACC  5030               	movf	??_motor_isr+10,w,c
 47562  00BACE  242C               	addwf	??_motor_isr+6,w,c
 47563  00BAD0  6E32               	movwf	(??_motor_isr+12)& (0+255),c
 47564  00BAD2  5031               	movf	??_motor_isr+11,w,c
 47565  00BAD4  202D               	addwfc	??_motor_isr+7,w,c
 47566  00BAD6  6E33               	movwf	(??_motor_isr+13)& (0+255),c
 47567  00BAD8  0E00               	movlw	0
 47568  00BADA  202E               	addwfc	??_motor_isr+8,w,c
 47569  00BADC  6E34               	movwf	(??_motor_isr+14)& (0+255),c
 47570  00BADE  0E00               	movlw	0
 47571  00BAE0  202F               	addwfc	??_motor_isr+9,w,c
 47572  00BAE2  6E35               	movwf	(??_motor_isr+15)& (0+255),c
 47573  00BAE4  5058               	movf	_motor_current_stepcount,w,c	;volatile
 47574  00BAE6  2432               	addwf	??_motor_isr+12,w,c
 47575  00BAE8  0102               	movlb	2	; () banked
 47576  00BAEA  6F2C               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47577  00BAEC  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 47578  00BAEE  2033               	addwfc	??_motor_isr+13,w,c
 47579  00BAF0  6F2D               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47580  00BAF2  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 47581  00BAF4  2034               	addwfc	??_motor_isr+14,w,c
 47582  00BAF6  6F2E               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47583  00BAF8  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 47584  00BAFA  2035               	addwfc	??_motor_isr+15,w,c
 47585  00BAFC  6F2F               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47586                           
 47587                           ;motor.c: 784: }
 47588  00BAFE  0012               	return	
 47589  00BB00                     i2l2585:
 47590                           
 47591                           ;motor.c: 785: else;motor.c: 786: {;motor.c: 787: motor_next_speed_check = motor_current
      +                          _stepcount + motor_steps_lookup[motor_current_speed];
 47592                           
 47593                           ; BSR set to: 2
 47594  00BB00  90D8               	bcf	status,0,c
 47595  00BB02  0100               	movlb	0	; () banked
 47596  00BB04  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47597  00BB06  6EF6               	movwf	tblptrl,c
 47598  00BB08  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47599  00BB0A  6EF7               	movwf	tblptrh,c
 47600  00BB0C  0E61               	movlw	low _motor_steps_lookup
 47601  00BB0E  26F6               	addwf	tblptrl,f,c
 47602  00BB10  0E94               	movlw	high _motor_steps_lookup
 47603  00BB12  22F7               	addwfc	tblptrh,f,c
 47604  00BB14                     	if	1	;There are 3 active tblptr bytes
 47605  00BB14  6AF8               	clrf	tblptru,c
 47606  00BB16  0E00               	movlw	low (__mediumconst shr (0+16))
 47607  00BB18  22F8               	addwfc	tblptru,f,c
 47608  00BB1A                     	endif
 47609  00BB1A  0009               	tblrd		*+
 47610  00BB1C  CFF5 F026          	movff	tablat,??_motor_isr
 47611  00BB20  0009               	tblrd		*+
 47612  00BB22  CFF5 F027          	movff	tablat,??_motor_isr+1
 47613  00BB26  5026               	movf	??_motor_isr,w,c
 47614  00BB28  2458               	addwf	_motor_current_stepcount,w,c	;volatile
 47615  00BB2A  0102               	movlb	2	; () banked
 47616  00BB2C  6F2C               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47617  00BB2E  5027               	movf	??_motor_isr+1,w,c
 47618  00BB30  2059               	addwfc	_motor_current_stepcount+1,w,c	;volatile
 47619  00BB32  6F2D               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47620  00BB34  0E00               	movlw	0
 47621  00BB36  205A               	addwfc	_motor_current_stepcount+2,w,c	;volatile
 47622  00BB38  6F2E               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47623  00BB3A  0E00               	movlw	0
 47624  00BB3C  205B               	addwfc	_motor_current_stepcount+3,w,c	;volatile
 47625  00BB3E  6F2F               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47626                           
 47627                           ; BSR set to: 2
 47628                           ;motor.c: 788: };motor.c: 789: }
 47629  00BB40  0012               	return	
 47630  00BB42                     i2l2580:
 47631                           
 47632                           ;motor.c: 790: else if((motor_current_speed==motor_maximum_speed) || (steps_until_stands
      +                          till_if_accelerate>=steps_remaining))
 47633                           
 47634                           ; BSR set to: 2
 47635  00BB42  0101               	movlb	1	; () banked
 47636  00BB44  5133               	movf	_motor_maximum_speed& (0+255),w,b
 47637  00BB46  0100               	movlb	0	; () banked
 47638  00BB48  19FE               	xorwf	_motor_current_speed& (0+255),w,b	;volatile
 47639  00BB4A  E106               	bnz	i2u1911_40
 47640  00BB4C  0101               	movlb	1	; () banked
 47641  00BB4E  5134               	movf	(_motor_maximum_speed+1)& (0+255),w,b
 47642  00BB50  0100               	movlb	0	; () banked
 47643  00BB52  19FF               	xorwf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47644  00BB54  B4D8               	btfsc	status,2,c
 47645  00BB56  D010               	goto	i2u1912_40
 47646  00BB58                     i2u1911_40:
 47647                           
 47648                           ; BSR set to: 0
 47649  00BB58  5038               	movf	motor_isr@steps_until_standstill_if_accelerate,w,c
 47650  00BB5A  6E26               	movwf	??_motor_isr& (0+255),c
 47651  00BB5C  5039               	movf	motor_isr@steps_until_standstill_if_accelerate+1,w,c
 47652  00BB5E  6E27               	movwf	(??_motor_isr+1)& (0+255),c
 47653  00BB60  6A28               	clrf	(??_motor_isr+2)& (0+255),c
 47654  00BB62  6A29               	clrf	(??_motor_isr+3)& (0+255),c
 47655  00BB64  503A               	movf	motor_isr@steps_remaining,w,c
 47656  00BB66  5C26               	subwf	??_motor_isr,w,c
 47657  00BB68  503B               	movf	motor_isr@steps_remaining+1,w,c
 47658  00BB6A  5827               	subwfb	??_motor_isr+1,w,c
 47659  00BB6C  503C               	movf	motor_isr@steps_remaining+2,w,c
 47660  00BB6E  5828               	subwfb	??_motor_isr+2,w,c
 47661  00BB70  503D               	movf	motor_isr@steps_remaining+3,w,c
 47662  00BB72  5829               	subwfb	??_motor_isr+3,w,c
 47663  00BB74  A0D8               	btfss	status,0,c
 47664  00BB76  D055               	goto	i2l2588
 47665  00BB78                     i2u1912_40:
 47666                           
 47667                           ; BSR set to: 0
 47668                           ;motor.c: 791: {;motor.c: 794: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 47669                           
 47670                           ; BSR set to: 0
 47671  00BB78  90D8               	bcf	status,0,c
 47672  00BB7A  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47673  00BB7C  6EF6               	movwf	tblptrl,c
 47674  00BB7E  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47675  00BB80  6EF7               	movwf	tblptrh,c
 47676  00BB82  0E61               	movlw	low _motor_steps_lookup
 47677  00BB84  26F6               	addwf	tblptrl,f,c
 47678  00BB86  0E94               	movlw	high _motor_steps_lookup
 47679  00BB88  22F7               	addwfc	tblptrh,f,c
 47680  00BB8A                     	if	1	;There are 3 active tblptr bytes
 47681  00BB8A  6AF8               	clrf	tblptru,c
 47682  00BB8C  0E00               	movlw	low (__mediumconst shr (0+16))
 47683  00BB8E  22F8               	addwfc	tblptru,f,c
 47684  00BB90                     	endif
 47685  00BB90  0009               	tblrd		*+
 47686  00BB92  CFF5 F026          	movff	tablat,??_motor_isr
 47687  00BB96  0009               	tblrd		*+
 47688  00BB98  CFF5 F027          	movff	tablat,??_motor_isr+1
 47689  00BB9C  5026               	movf	??_motor_isr,w,c
 47690  00BB9E  6E28               	movwf	(??_motor_isr+2)& (0+255),c
 47691  00BBA0  5027               	movf	??_motor_isr+1,w,c
 47692  00BBA2  6E29               	movwf	(??_motor_isr+3)& (0+255),c
 47693  00BBA4  6A2A               	clrf	(??_motor_isr+4)& (0+255),c
 47694  00BBA6  6A2B               	clrf	(??_motor_isr+5)& (0+255),c
 47695  00BBA8  1E28               	comf	??_motor_isr+2,f,c
 47696  00BBAA  1E29               	comf	??_motor_isr+3,f,c
 47697  00BBAC  1E2A               	comf	??_motor_isr+4,f,c
 47698  00BBAE  1E2B               	comf	??_motor_isr+5,f,c
 47699  00BBB0  2A28               	incf	??_motor_isr+2,f,c
 47700  00BBB2  0E00               	movlw	0
 47701  00BBB4  2229               	addwfc	??_motor_isr+3,f,c
 47702  00BBB6  222A               	addwfc	??_motor_isr+4,f,c
 47703  00BBB8  222B               	addwfc	??_motor_isr+5,f,c
 47704  00BBBA  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 47705  00BBBE  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 47706  00BBC2  90D8               	bcf	status,0,c
 47707  00BBC4  362C               	rlcf	??_motor_isr+6,f,c
 47708  00BBC6  362D               	rlcf	??_motor_isr+7,f,c
 47709  00BBC8  0E02               	movlw	2
 47710  00BBCA  262C               	addwf	??_motor_isr+6,f,c
 47711  00BBCC  0E00               	movlw	0
 47712  00BBCE  222D               	addwfc	??_motor_isr+7,f,c
 47713  00BBD0  0E61               	movlw	low _motor_steps_lookup
 47714  00BBD2  242C               	addwf	??_motor_isr+6,w,c
 47715  00BBD4  6EF6               	movwf	tblptrl,c
 47716  00BBD6  0E94               	movlw	high _motor_steps_lookup
 47717  00BBD8  202D               	addwfc	??_motor_isr+7,w,c
 47718  00BBDA  6EF7               	movwf	tblptrh,c
 47719  00BBDC                     	if	1	;There are 3 active tblptr bytes
 47720  00BBDC  6AF8               	clrf	tblptru,c
 47721  00BBDE  0E00               	movlw	low (__mediumconst shr (0+16))
 47722  00BBE0  22F8               	addwfc	tblptru,f,c
 47723  00BBE2                     	endif
 47724  00BBE2  0009               	tblrd		*+
 47725  00BBE4  CFF5 F02E          	movff	tablat,??_motor_isr+8
 47726  00BBE8  0009               	tblrd		*+
 47727  00BBEA  CFF5 F02F          	movff	tablat,??_motor_isr+9
 47728  00BBEE  502E               	movf	??_motor_isr+8,w,c
 47729  00BBF0  2428               	addwf	??_motor_isr+2,w,c
 47730  00BBF2  6E30               	movwf	(??_motor_isr+10)& (0+255),c
 47731  00BBF4  502F               	movf	??_motor_isr+9,w,c
 47732  00BBF6  2029               	addwfc	??_motor_isr+3,w,c
 47733  00BBF8  6E31               	movwf	(??_motor_isr+11)& (0+255),c
 47734  00BBFA  0E00               	movlw	0
 47735  00BBFC  202A               	addwfc	??_motor_isr+4,w,c
 47736  00BBFE  6E32               	movwf	(??_motor_isr+12)& (0+255),c
 47737  00BC00  0E00               	movlw	0
 47738  00BC02  202B               	addwfc	??_motor_isr+5,w,c
 47739  00BC04  6E33               	movwf	(??_motor_isr+13)& (0+255),c
 47740  00BC06  5058               	movf	_motor_current_stepcount,w,c	;volatile
 47741  00BC08  2430               	addwf	??_motor_isr+10,w,c
 47742  00BC0A  0102               	movlb	2	; () banked
 47743  00BC0C  6F2C               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47744  00BC0E  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 47745  00BC10  2031               	addwfc	??_motor_isr+11,w,c
 47746  00BC12  6F2D               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47747  00BC14  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 47748  00BC16  2032               	addwfc	??_motor_isr+12,w,c
 47749  00BC18  6F2E               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47750  00BC1A  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 47751  00BC1C  2033               	addwfc	??_motor_isr+13,w,c
 47752  00BC1E  6F2F               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47753                           
 47754                           ;motor.c: 795: }
 47755  00BC20  0012               	return	
 47756  00BC22                     i2l2588:
 47757                           
 47758                           ;motor.c: 796: else;motor.c: 797: {;motor.c: 799: ++motor_current_speed;
 47759                           
 47760                           ; BSR set to: 2
 47761  00BC22  0100               	movlb	0	; () banked
 47762  00BC24  4BFE               	infsnz	_motor_current_speed& (0+255),f,b	;volatile
 47763  00BC26  2BFF               	incf	(_motor_current_speed+1)& (0+255),f,b	;volatile
 47764                           
 47765                           ; BSR set to: 0
 47766                           ;motor.c: 803: T2CONbits.T2CKPS = motor_prescaler_lookup[motor_current_speed];
 47767  00BC28  0EFD               	movlw	low _motor_prescaler_lookup
 47768  00BC2A  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47769  00BC2C  6EF6               	movwf	tblptrl,c
 47770  00BC2E  0E9B               	movlw	high _motor_prescaler_lookup
 47771  00BC30  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47772  00BC32  6EF7               	movwf	tblptrh,c
 47773  00BC34                     	if	1	;There are 3 active tblptr bytes
 47774  00BC34  6AF8               	clrf	tblptru,c
 47775  00BC36  0E00               	movlw	low (__mediumconst shr (0+16))
 47776  00BC38  22F8               	addwfc	tblptru,f,c
 47777  00BC3A                     	endif
 47778  00BC3A  0008               	tblrd		*
 47779  00BC3C  CFF5 F026          	movff	tablat,??_motor_isr
 47780  00BC40  50CA               	movf	4042,w,c	;volatile
 47781  00BC42  1826               	xorwf	??_motor_isr,w,c
 47782  00BC44  0BFC               	andlw	-4
 47783  00BC46  1826               	xorwf	??_motor_isr,w,c
 47784  00BC48  6ECA               	movwf	4042,c	;volatile
 47785                           
 47786                           ; BSR set to: 0
 47787                           ;motor.c: 805: PR2 = motor_period_lookup[motor_current_speed];
 47788  00BC4A  0E16               	movlw	low _motor_period_lookup
 47789  00BC4C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47790  00BC4E  6EF6               	movwf	tblptrl,c
 47791  00BC50  0E9A               	movlw	high _motor_period_lookup
 47792  00BC52  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47793  00BC54  6EF7               	movwf	tblptrh,c
 47794  00BC56                     	if	1	;There are 3 active tblptr bytes
 47795  00BC56  6AF8               	clrf	tblptru,c
 47796  00BC58  0E00               	movlw	low (__mediumconst shr (0+16))
 47797  00BC5A  22F8               	addwfc	tblptru,f,c
 47798  00BC5C                     	endif
 47799  00BC5C  0008               	tblrd		*
 47800  00BC5E  CFF5 FFCB          	movff	tablat,4043	;volatile
 47801                           
 47802                           ; BSR set to: 0
 47803                           ;motor.c: 807: T2CONbits.T2OUTPS = motor_postscaler_lookup[motor_current_speed];
 47804  00BC62  0E2F               	movlw	low _motor_postscaler_lookup
 47805  00BC64  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47806  00BC66  6EF6               	movwf	tblptrl,c
 47807  00BC68  0E98               	movlw	high _motor_postscaler_lookup
 47808  00BC6A  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47809  00BC6C  6EF7               	movwf	tblptrh,c
 47810  00BC6E                     	if	1	;There are 3 active tblptr bytes
 47811  00BC6E  6AF8               	clrf	tblptru,c
 47812  00BC70  0E00               	movlw	low (__mediumconst shr (0+16))
 47813  00BC72  22F8               	addwfc	tblptru,f,c
 47814  00BC74                     	endif
 47815  00BC74  0008               	tblrd		*
 47816  00BC76  CFF5 F026          	movff	tablat,??_motor_isr
 47817  00BC7A  4626               	rlncf	??_motor_isr,f,c
 47818  00BC7C  4626               	rlncf	??_motor_isr,f,c
 47819  00BC7E  4626               	rlncf	??_motor_isr,f,c
 47820  00BC80  50CA               	movf	4042,w,c	;volatile
 47821  00BC82  1826               	xorwf	??_motor_isr,w,c
 47822  00BC84  0B87               	andlw	-121
 47823  00BC86  1826               	xorwf	??_motor_isr,w,c
 47824  00BC88  6ECA               	movwf	4042,c	;volatile
 47825                           
 47826                           ; BSR set to: 0
 47827                           ;motor.c: 809: CCPR1L = PR2>>1;
 47828  00BC8A  90D8               	bcf	status,0,c
 47829  00BC8C  30CB               	rrcf	4043,w,c	;volatile
 47830  00BC8E  6EBB               	movwf	4027,c	;volatile
 47831                           
 47832                           ; BSR set to: 0
 47833                           ;motor.c: 811: if((motor_mode==MOTOR_MODE_MANUAL) && (motor_postscaler_lookup[motor_curr
      +                          ent_speed]==0))
 47834  00BC90  0101               	movlb	1	; () banked
 47835  00BC92  5147               	movf	_motor_mode& (0+255),w,b	;volatile
 47836  00BC94  A4D8               	btfss	status,2,c
 47837  00BC96  D023               	goto	i2l2592
 47838                           
 47839                           ; BSR set to: 1
 47840  00BC98  0E2F               	movlw	low _motor_postscaler_lookup
 47841  00BC9A  0100               	movlb	0	; () banked
 47842  00BC9C  25FE               	addwf	_motor_current_speed& (0+255),w,b	;volatile
 47843  00BC9E  6EF6               	movwf	tblptrl,c
 47844  00BCA0  0E98               	movlw	high _motor_postscaler_lookup
 47845  00BCA2  21FF               	addwfc	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47846  00BCA4  6EF7               	movwf	tblptrh,c
 47847  00BCA6                     	if	1	;There are 3 active tblptr bytes
 47848  00BCA6  6AF8               	clrf	tblptru,c
 47849  00BCA8  0E00               	movlw	low (__mediumconst shr (0+16))
 47850  00BCAA  22F8               	addwfc	tblptru,f,c
 47851  00BCAC                     	endif
 47852  00BCAC  0008               	tblrd		*
 47853  00BCAE  50F5               	movf	tablat,w,c
 47854  00BCB0  0900               	iorlw	0
 47855  00BCB2  A4D8               	btfss	status,2,c
 47856  00BCB4  D014               	goto	i2l2592
 47857                           
 47858                           ; BSR set to: 0
 47859                           ;motor.c: 812: {;motor.c: 814: motor_mode = MOTOR_MODE_PWM;
 47860  00BCB6  0E01               	movlw	1
 47861  00BCB8  0101               	movlb	1	; () banked
 47862  00BCBA  6F47               	movwf	_motor_mode& (0+255),b	;volatile
 47863                           
 47864                           ;motor.c: 817: CCP1CONbits.CCP1M = 0b1100;
 47865  00BCBC  50BA               	movf	4026,w,c	;volatile
 47866  00BCBE  0BF0               	andlw	-16
 47867  00BCC0  090C               	iorlw	12
 47868  00BCC2  6EBA               	movwf	4026,c	;volatile
 47869                           
 47870                           ;motor.c: 820: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 47871  00BCC4  0E55               	movlw	85
 47872  00BCC6  6EA7               	movwf	4007,c	;volsfr
 47873  00BCC8  0EAA               	movlw	170
 47874  00BCCA  6EA7               	movwf	4007,c	;volsfr
 47875                           
 47876                           ; BSR set to: 1
 47877  00BCCC  010E               	movlb	14	; () banked
 47878  00BCCE  91BF               	bcf	191,0,b	;volatile
 47879                           
 47880                           ;motor.c: 821: RPOR4 = 14;
 47881  00BCD0  0E0E               	movlw	14
 47882  00BCD2  6FC4               	movwf	196,b	;volatile
 47883                           
 47884                           ;motor.c: 822: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 47885  00BCD4  0E55               	movlw	85
 47886  00BCD6  6EA7               	movwf	4007,c	;volsfr
 47887  00BCD8  0EAA               	movlw	170
 47888  00BCDA  6EA7               	movwf	4007,c	;volsfr
 47889                           
 47890                           ; BSR set to: 14
 47891  00BCDC  81BF               	bsf	191,0,b	;volatile
 47892  00BCDE                     i2l2592:
 47893                           
 47894                           ;motor.c: 823: };motor.c: 826: motor_next_speed_check = motor_current_stepcount + motor_
      +                          steps_lookup[motor_current_speed+1] - motor_steps_lookup[motor_current_speed];
 47895                           
 47896                           ; BSR set to: 14
 47897  00BCDE  90D8               	bcf	status,0,c
 47898  00BCE0  0100               	movlb	0	; () banked
 47899  00BCE2  35FE               	rlcf	_motor_current_speed& (0+255),w,b	;volatile
 47900  00BCE4  6EF6               	movwf	tblptrl,c
 47901  00BCE6  35FF               	rlcf	(_motor_current_speed+1)& (0+255),w,b	;volatile
 47902  00BCE8  6EF7               	movwf	tblptrh,c
 47903  00BCEA  0E61               	movlw	low _motor_steps_lookup
 47904  00BCEC  26F6               	addwf	tblptrl,f,c
 47905  00BCEE  0E94               	movlw	high _motor_steps_lookup
 47906  00BCF0  22F7               	addwfc	tblptrh,f,c
 47907  00BCF2                     	if	1	;There are 3 active tblptr bytes
 47908  00BCF2  6AF8               	clrf	tblptru,c
 47909  00BCF4  0E00               	movlw	low (__mediumconst shr (0+16))
 47910  00BCF6  22F8               	addwfc	tblptru,f,c
 47911  00BCF8                     	endif
 47912  00BCF8  0009               	tblrd		*+
 47913  00BCFA  CFF5 F026          	movff	tablat,??_motor_isr
 47914  00BCFE  0009               	tblrd		*+
 47915  00BD00  CFF5 F027          	movff	tablat,??_motor_isr+1
 47916  00BD04  5026               	movf	??_motor_isr,w,c
 47917  00BD06  6E28               	movwf	(??_motor_isr+2)& (0+255),c
 47918  00BD08  5027               	movf	??_motor_isr+1,w,c
 47919  00BD0A  6E29               	movwf	(??_motor_isr+3)& (0+255),c
 47920  00BD0C  6A2A               	clrf	(??_motor_isr+4)& (0+255),c
 47921  00BD0E  6A2B               	clrf	(??_motor_isr+5)& (0+255),c
 47922  00BD10  1E28               	comf	??_motor_isr+2,f,c
 47923  00BD12  1E29               	comf	??_motor_isr+3,f,c
 47924  00BD14  1E2A               	comf	??_motor_isr+4,f,c
 47925  00BD16  1E2B               	comf	??_motor_isr+5,f,c
 47926  00BD18  2A28               	incf	??_motor_isr+2,f,c
 47927  00BD1A  0E00               	movlw	0
 47928  00BD1C  2229               	addwfc	??_motor_isr+3,f,c
 47929  00BD1E  222A               	addwfc	??_motor_isr+4,f,c
 47930  00BD20  222B               	addwfc	??_motor_isr+5,f,c
 47931  00BD22  C0FE  F02C         	movff	_motor_current_speed,??_motor_isr+6	;volatile
 47932  00BD26  C0FF  F02D         	movff	_motor_current_speed+1,??_motor_isr+7	;volatile
 47933  00BD2A  90D8               	bcf	status,0,c
 47934  00BD2C  362C               	rlcf	??_motor_isr+6,f,c
 47935  00BD2E  362D               	rlcf	??_motor_isr+7,f,c
 47936  00BD30  0E02               	movlw	2
 47937  00BD32  262C               	addwf	??_motor_isr+6,f,c
 47938  00BD34  0E00               	movlw	0
 47939  00BD36  222D               	addwfc	??_motor_isr+7,f,c
 47940  00BD38  0E61               	movlw	low _motor_steps_lookup
 47941  00BD3A  242C               	addwf	??_motor_isr+6,w,c
 47942  00BD3C  6EF6               	movwf	tblptrl,c
 47943  00BD3E  0E94               	movlw	high _motor_steps_lookup
 47944  00BD40  202D               	addwfc	??_motor_isr+7,w,c
 47945  00BD42  6EF7               	movwf	tblptrh,c
 47946  00BD44                     	if	1	;There are 3 active tblptr bytes
 47947  00BD44  6AF8               	clrf	tblptru,c
 47948  00BD46  0E00               	movlw	low (__mediumconst shr (0+16))
 47949  00BD48  22F8               	addwfc	tblptru,f,c
 47950  00BD4A                     	endif
 47951  00BD4A  0009               	tblrd		*+
 47952  00BD4C  CFF5 F02E          	movff	tablat,??_motor_isr+8
 47953  00BD50  0009               	tblrd		*+
 47954  00BD52  CFF5 F02F          	movff	tablat,??_motor_isr+9
 47955  00BD56  502E               	movf	??_motor_isr+8,w,c
 47956  00BD58  2428               	addwf	??_motor_isr+2,w,c
 47957  00BD5A  6E30               	movwf	(??_motor_isr+10)& (0+255),c
 47958  00BD5C  502F               	movf	??_motor_isr+9,w,c
 47959  00BD5E  2029               	addwfc	??_motor_isr+3,w,c
 47960  00BD60  6E31               	movwf	(??_motor_isr+11)& (0+255),c
 47961  00BD62  0E00               	movlw	0
 47962  00BD64  202A               	addwfc	??_motor_isr+4,w,c
 47963  00BD66  6E32               	movwf	(??_motor_isr+12)& (0+255),c
 47964  00BD68  0E00               	movlw	0
 47965  00BD6A  202B               	addwfc	??_motor_isr+5,w,c
 47966  00BD6C  6E33               	movwf	(??_motor_isr+13)& (0+255),c
 47967  00BD6E  5058               	movf	_motor_current_stepcount,w,c	;volatile
 47968  00BD70  2430               	addwf	??_motor_isr+10,w,c
 47969  00BD72  0102               	movlb	2	; () banked
 47970  00BD74  6F2C               	movwf	_motor_next_speed_check& (0+255),b	;volatile
 47971  00BD76  5059               	movf	_motor_current_stepcount+1,w,c	;volatile
 47972  00BD78  2031               	addwfc	??_motor_isr+11,w,c
 47973  00BD7A  6F2D               	movwf	(_motor_next_speed_check+1)& (0+255),b	;volatile
 47974  00BD7C  505A               	movf	_motor_current_stepcount+2,w,c	;volatile
 47975  00BD7E  2032               	addwfc	??_motor_isr+12,w,c
 47976  00BD80  6F2E               	movwf	(_motor_next_speed_check+2)& (0+255),b	;volatile
 47977  00BD82  505B               	movf	_motor_current_stepcount+3,w,c	;volatile
 47978  00BD84  2033               	addwfc	??_motor_isr+13,w,c
 47979  00BD86  6F2F               	movwf	(_motor_next_speed_check+3)& (0+255),b	;volatile
 47980                           
 47981                           ; BSR set to: 2
 47982                           
 47983                           ; BSR set to: 2
 47984  00BD88  0012               	return	
 47985  00BD8A                     __end_of_motor_isr:
 47986                           	opt stack 0
 47987                           tosu	equ	0xFFF
 47988                           tosh	equ	0xFFE
 47989                           tosl	equ	0xFFD
 47990                           pclatu	equ	0xFFB
 47991                           pclath	equ	0xFFA
 47992                           tblptru	equ	0xFF8
 47993                           tblptrh	equ	0xFF7
 47994                           tblptrl	equ	0xFF6
 47995                           tablat	equ	0xFF5
 47996                           prodh	equ	0xFF4
 47997                           prodl	equ	0xFF3
 47998                           intcon	equ	0xFF2
 47999                           indf0	equ	0xFEF
 48000                           postinc0	equ	0xFEE
 48001                           fsr0h	equ	0xFEA
 48002                           fsr0l	equ	0xFE9
 48003                           wreg	equ	0xFE8
 48004                           indf1	equ	0xFE7
 48005                           postinc1	equ	0xFE6
 48006                           postdec1	equ	0xFE5
 48007                           plusw1	equ	0xFE3
 48008                           fsr1h	equ	0xFE2
 48009                           fsr1l	equ	0xFE1
 48010                           indf2	equ	0xFDF
 48011                           postinc2	equ	0xFDE
 48012                           postdec2	equ	0xFDD
 48013                           plusw2	equ	0xFDB
 48014                           fsr2h	equ	0xFDA
 48015                           fsr2l	equ	0xFD9
 48016                           status	equ	0xFD8
 48017                           
 48018 ;; *************** function _i2c_eeprom_save_position *****************
 48019 ;; Defined at:
 48020 ;;		line 295 in file "i2c.c"
 48021 ;; Parameters:    Size  Location     Type
 48022 ;;		None
 48023 ;; Auto vars:     Size  Location     Type
 48024 ;;		None
 48025 ;; Return value:  Size  Location     Type
 48026 ;;                  1    wreg      void 
 48027 ;; Registers used:
 48028 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48029 ;; Tracked objects:
 48030 ;;		On entry : 0/0
 48031 ;;		On exit  : 0/0
 48032 ;;		Unchanged: 0/0
 48033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48038 ;;Total ram usage:        0 bytes
 48039 ;; Hardware stack levels used:    1
 48040 ;; Hardware stack levels required when called:    3
 48041 ;; This function calls:
 48042 ;;		_i2c_eeprom_write
 48043 ;; This function is called by:
 48044 ;;		_motor_isr
 48045 ;; This function uses a non-reentrant model
 48046 ;;
 48047                           
 48048                           	psect	text196
 48049  015C50                     __ptext196:
 48050                           	opt stack 0
 48051  015C50                     _i2c_eeprom_save_position:
 48052                           	opt stack 13
 48053                           
 48054                           ;i2c.c: 304: i2c_eeprom_write(0x200, &os.current_position_in_steps, 6);
 48055                           
 48056                           ;incstack = 0
 48057  015C50  0E02               	movlw	2
 48058  015C52  6E0C               	movwf	i2c_eeprom_write@address+1,c
 48059  015C54  0E00               	movlw	0
 48060  015C56  6E0B               	movwf	i2c_eeprom_write@address,c
 48061  015C58  0E6B               	movlw	low (_os+7)
 48062  015C5A  6E0D               	movwf	i2c_eeprom_write@data,c
 48063  015C5C  0E01               	movlw	high (_os+7)
 48064  015C5E  6E0E               	movwf	i2c_eeprom_write@data+1,c
 48065  015C60  0E06               	movlw	6
 48066  015C62  6E0F               	movwf	i2c_eeprom_write@length,c
 48067  015C64  EC8C  F09F         	call	_i2c_eeprom_write	;wreg free
 48068  015C68  0012               	return		;funcret
 48069  015C6A                     __end_of_i2c_eeprom_save_position:
 48070                           	opt stack 0
 48071                           tosu	equ	0xFFF
 48072                           tosh	equ	0xFFE
 48073                           tosl	equ	0xFFD
 48074                           pclatu	equ	0xFFB
 48075                           pclath	equ	0xFFA
 48076                           tblptru	equ	0xFF8
 48077                           tblptrh	equ	0xFF7
 48078                           tblptrl	equ	0xFF6
 48079                           tablat	equ	0xFF5
 48080                           prodh	equ	0xFF4
 48081                           prodl	equ	0xFF3
 48082                           intcon	equ	0xFF2
 48083                           indf0	equ	0xFEF
 48084                           postinc0	equ	0xFEE
 48085                           fsr0h	equ	0xFEA
 48086                           fsr0l	equ	0xFE9
 48087                           wreg	equ	0xFE8
 48088                           indf1	equ	0xFE7
 48089                           postinc1	equ	0xFE6
 48090                           postdec1	equ	0xFE5
 48091                           plusw1	equ	0xFE3
 48092                           fsr1h	equ	0xFE2
 48093                           fsr1l	equ	0xFE1
 48094                           indf2	equ	0xFDF
 48095                           postinc2	equ	0xFDE
 48096                           postdec2	equ	0xFDD
 48097                           plusw2	equ	0xFDB
 48098                           fsr2h	equ	0xFDA
 48099                           fsr2l	equ	0xFD9
 48100                           status	equ	0xFD8
 48101                           
 48102 ;; *************** function _i2c_eeprom_write *****************
 48103 ;; Defined at:
 48104 ;;		line 258 in file "i2c.c"
 48105 ;; Parameters:    Size  Location     Type
 48106 ;;  address         2   10[COMRAM] unsigned int 
 48107 ;;  data            2   12[COMRAM] PTR unsigned char 
 48108 ;;		 -> i2c_eeprom_writeInt16@data(2), i2c_eeprom_writeUint32@data(4), i2c_eeprom_writeUint16@data(2), os.current_positi
      +on_in_steps(4), 
 48109 ;;		 -> os(50), 
 48110 ;;  length          1   14[COMRAM] unsigned char 
 48111 ;; Auto vars:     Size  Location     Type
 48112 ;;  dat            17   18[COMRAM] unsigned char [17]
 48113 ;;  cntr            1   36[COMRAM] unsigned char 
 48114 ;;  slave_addres    1   35[COMRAM] unsigned char 
 48115 ;; Return value:  Size  Location     Type
 48116 ;;                  1    wreg      void 
 48117 ;; Registers used:
 48118 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48119 ;; Tracked objects:
 48120 ;;		On entry : 0/0
 48121 ;;		On exit  : 0/0
 48122 ;;		Unchanged: 0/0
 48123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48124 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48125 ;;      Locals:        19       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48126 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48127 ;;      Totals:        27       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48128 ;;Total ram usage:       27 bytes
 48129 ;; Hardware stack levels used:    1
 48130 ;; Hardware stack levels required when called:    2
 48131 ;; This function calls:
 48132 ;;		i2__i2c_eeprom_busy
 48133 ;;		i2__i2c_write
 48134 ;; This function is called by:
 48135 ;;		_i2c_eeprom_save_position
 48136 ;;		_i2c_eeprom_writeUint16
 48137 ;;		_i2c_eeprom_writeUint32
 48138 ;;		_i2c_eeprom_writeInt16
 48139 ;; This function uses a non-reentrant model
 48140 ;;
 48141                           
 48142                           	psect	text197
 48143  013F18                     __ptext197:
 48144                           	opt stack 0
 48145  013F18                     _i2c_eeprom_write:
 48146                           	opt stack 13
 48147                           
 48148                           ;i2c.c: 260: uint8_t cntr;;i2c.c: 261: uint8_t slave_address;;i2c.c: 262: uint8_t dat[17
      +                          ];;i2c.c: 264: slave_address = 0b10100000 | ((address&0b0000011100000000)>>7);
 48149                           
 48150                           ;incstack = 0
 48151  013F18  C00B  F010         	movff	i2c_eeprom_write@address,??_i2c_eeprom_write
 48152  013F1C  C00C  F011         	movff	i2c_eeprom_write@address+1,??_i2c_eeprom_write+1
 48153  013F20  0E07               	movlw	7
 48154  013F22  6E12               	movwf	(??_i2c_eeprom_write+2)& (0+255),c
 48155  013F24                     i2u1506_45:
 48156  013F24  90D8               	bcf	status,0,c
 48157  013F26  3211               	rrcf	??_i2c_eeprom_write+1,f,c
 48158  013F28  3210               	rrcf	??_i2c_eeprom_write,f,c
 48159  013F2A  2E12               	decfsz	(??_i2c_eeprom_write+2)& (0+255),f,c
 48160  013F2C  D7FB               	goto	i2u1506_45
 48161  013F2E  5010               	movf	??_i2c_eeprom_write,w,c
 48162  013F30  0B0E               	andlw	14
 48163  013F32  09A0               	iorlw	160
 48164  013F34  6E24               	movwf	i2c_eeprom_write@slave_address,c
 48165                           
 48166                           ;i2c.c: 265: dat[0] = address & 0xFF;
 48167  013F36  C00B  F013         	movff	i2c_eeprom_write@address,i2c_eeprom_write@dat
 48168                           
 48169                           ;i2c.c: 267: length &= 0b00001111;
 48170  013F3A  0E0F               	movlw	15
 48171  013F3C  160F               	andwf	i2c_eeprom_write@length,f,c
 48172                           
 48173                           ;i2c.c: 268: for(cntr=0; cntr<length; ++cntr)
 48174  013F3E  0E00               	movlw	0
 48175  013F40  6E25               	movwf	i2c_eeprom_write@cntr,c
 48176  013F42  D018               	goto	i2l1211
 48177  013F44                     
 48178                           ;i2c.c: 269: {;i2c.c: 270: dat[cntr+1] = data[cntr];
 48179  013F44  5025               	movf	i2c_eeprom_write@cntr,w,c
 48180  013F46  0D01               	mullw	1
 48181  013F48  50F3               	movf	prodl,w,c
 48182  013F4A  240D               	addwf	i2c_eeprom_write@data,w,c
 48183  013F4C  6ED9               	movwf	fsr2l,c
 48184  013F4E  50F4               	movf	prodh,w,c
 48185  013F50  200E               	addwfc	i2c_eeprom_write@data+1,w,c
 48186  013F52  6EDA               	movwf	fsr2h,c
 48187  013F54  5025               	movf	i2c_eeprom_write@cntr,w,c
 48188  013F56  6E10               	movwf	??_i2c_eeprom_write& (0+255),c
 48189  013F58  6A11               	clrf	(??_i2c_eeprom_write+1)& (0+255),c
 48190  013F5A  0E01               	movlw	1
 48191  013F5C  2610               	addwf	??_i2c_eeprom_write,f,c
 48192  013F5E  0E00               	movlw	0
 48193  013F60  2211               	addwfc	??_i2c_eeprom_write+1,f,c
 48194  013F62  0E13               	movlw	low i2c_eeprom_write@dat
 48195  013F64  2410               	addwf	??_i2c_eeprom_write,w,c
 48196  013F66  6EE1               	movwf	fsr1l,c
 48197  013F68  0E00               	movlw	high i2c_eeprom_write@dat
 48198  013F6A  2011               	addwfc	??_i2c_eeprom_write+1,w,c
 48199  013F6C  6EE2               	movwf	fsr1h,c
 48200  013F6E  CFDF FFE7          	movff	indf2,indf1
 48201  013F72  2A25               	incf	i2c_eeprom_write@cntr,f,c
 48202  013F74                     i2l1211:
 48203  013F74  500F               	movf	i2c_eeprom_write@length,w,c
 48204  013F76  5C25               	subwf	i2c_eeprom_write@cntr,w,c
 48205  013F78  A0D8               	btfss	status,0,c
 48206  013F7A  D7E4               	goto	i2l1212
 48207  013F7C                     i2u1507_40:
 48208                           
 48209                           ;i2c.c: 271: };i2c.c: 274: while(_i2c_eeprom_busy());
 48210  013F7C  EC39  F0AD         	call	i2__i2c_eeprom_busy	;wreg free
 48211  013F80  0900               	iorlw	0
 48212  013F82  A4D8               	btfss	status,2,c
 48213  013F84  D7FB               	goto	i2u1507_40
 48214                           
 48215                           ;i2c.c: 276: _i2c_write(slave_address, &dat[0], length+1);
 48216  013F86  0E13               	movlw	low i2c_eeprom_write@dat
 48217  013F88  6E06               	movwf	i2__i2c_write@data,c
 48218  013F8A  0E00               	movlw	high i2c_eeprom_write@dat
 48219  013F8C  6E07               	movwf	i2__i2c_write@data+1,c
 48220  013F8E  280F               	incf	i2c_eeprom_write@length,w,c
 48221  013F90  6E08               	movwf	i2__i2c_write@length,c
 48222  013F92  5024               	movf	i2c_eeprom_write@slave_address,w,c
 48223  013F94  EC3E  F0A9         	call	i2__i2c_write
 48224  013F98  0012               	return		;funcret
 48225  013F9A                     __end_of_i2c_eeprom_write:
 48226                           	opt stack 0
 48227                           tosu	equ	0xFFF
 48228                           tosh	equ	0xFFE
 48229                           tosl	equ	0xFFD
 48230                           pclatu	equ	0xFFB
 48231                           pclath	equ	0xFFA
 48232                           tblptru	equ	0xFF8
 48233                           tblptrh	equ	0xFF7
 48234                           tblptrl	equ	0xFF6
 48235                           tablat	equ	0xFF5
 48236                           prodh	equ	0xFF4
 48237                           prodl	equ	0xFF3
 48238                           intcon	equ	0xFF2
 48239                           indf0	equ	0xFEF
 48240                           postinc0	equ	0xFEE
 48241                           fsr0h	equ	0xFEA
 48242                           fsr0l	equ	0xFE9
 48243                           wreg	equ	0xFE8
 48244                           indf1	equ	0xFE7
 48245                           postinc1	equ	0xFE6
 48246                           postdec1	equ	0xFE5
 48247                           plusw1	equ	0xFE3
 48248                           fsr1h	equ	0xFE2
 48249                           fsr1l	equ	0xFE1
 48250                           indf2	equ	0xFDF
 48251                           postinc2	equ	0xFDE
 48252                           postdec2	equ	0xFDD
 48253                           plusw2	equ	0xFDB
 48254                           fsr2h	equ	0xFDA
 48255                           fsr2l	equ	0xFD9
 48256                           status	equ	0xFD8
 48257                           
 48258 ;; *************** function i2__i2c_write *****************
 48259 ;; Defined at:
 48260 ;;		line 88 in file "i2c.c"
 48261 ;; Parameters:    Size  Location     Type
 48262 ;;  slave_addres    1    wreg     unsigned char 
 48263 ;;  data            2    5[COMRAM] PTR unsigned char 
 48264 ;;		 -> i2c_display_program_custom_character@data_array(11), _ic2_display_set_cgram_address@data_array(3), _ic2_display_
      +set_ddram_address@data_array(2), i2c_display_init@init_sequence(9), 
 48265 ;;		 -> _i2c_display_send_init_sequence@init_sequence(9), i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_
      +readByte@addr(1), 
 48266 ;;		 -> i2c_eeprom_writeByte@dat(2), i2c_adc_start@configuration_byte(1), 
 48267 ;;  length          1    7[COMRAM] unsigned char 
 48268 ;; Auto vars:     Size  Location     Type
 48269 ;;  slave_addres    1    8[COMRAM] unsigned char 
 48270 ;;  _i2c_write      1    9[COMRAM] unsigned char 
 48271 ;; Return value:  Size  Location     Type
 48272 ;;                  1    wreg      void 
 48273 ;; Registers used:
 48274 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 48275 ;; Tracked objects:
 48276 ;;		On entry : 0/0
 48277 ;;		On exit  : 0/0
 48278 ;;		Unchanged: 0/0
 48279 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48280 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48281 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48282 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48283 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48284 ;;Total ram usage:        5 bytes
 48285 ;; Hardware stack levels used:    1
 48286 ;; Hardware stack levels required when called:    1
 48287 ;; This function calls:
 48288 ;;		i2__i2c_send
 48289 ;;		i2__i2c_start
 48290 ;;		i2__i2c_stop
 48291 ;;		i2__i2c_wait_idle
 48292 ;; This function is called by:
 48293 ;;		_i2c_eeprom_write
 48294 ;; This function uses a non-reentrant model
 48295 ;;
 48296                           
 48297                           	psect	text198
 48298  01527C                     __ptext198:
 48299                           	opt stack 0
 48300  01527C                     i2__i2c_write:
 48301                           	opt stack 13
 48302                           
 48303                           ;incstack = 0
 48304                           ;i2__i2c_write@slave_address stored from wreg
 48305  01527C  6E09               	movwf	i2__i2c_write@slave_address,c
 48306                           
 48307                           ;i2c.c: 90: uint8_t cntr;;i2c.c: 92: _i2c_wait_idle();
 48308  01527E  EC40  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48309                           
 48310                           ;i2c.c: 93: _i2c_start();
 48311  015282  ECD3  F0AE         	call	i2__i2c_start	;wreg free
 48312                           
 48313                           ;i2c.c: 94: _i2c_wait_idle();
 48314  015286  EC40  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48315                           
 48316                           ;i2c.c: 95: _i2c_send(slave_address);
 48317  01528A  5009               	movf	i2__i2c_write@slave_address,w,c
 48318  01528C  ECD7  F0AE         	call	i2__i2c_send
 48319                           
 48320                           ;i2c.c: 96: _i2c_wait_idle();
 48321  015290  EC40  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48322                           
 48323                           ;i2c.c: 98: for(cntr=0; cntr<length; ++cntr)
 48324  015294  0E00               	movlw	0
 48325  015296  6E0A               	movwf	i2__i2c_write@cntr,c
 48326  015298  D00E               	goto	i2l1160
 48327  01529A                     
 48328                           ;i2c.c: 99: {;i2c.c: 100: _i2c_send(data[cntr]);
 48329  01529A  500A               	movf	i2__i2c_write@cntr,w,c
 48330  01529C  0D01               	mullw	1
 48331  01529E  50F3               	movf	prodl,w,c
 48332  0152A0  2406               	addwf	i2__i2c_write@data,w,c
 48333  0152A2  6ED9               	movwf	fsr2l,c
 48334  0152A4  50F4               	movf	prodh,w,c
 48335  0152A6  2007               	addwfc	i2__i2c_write@data+1,w,c
 48336  0152A8  6EDA               	movwf	fsr2h,c
 48337  0152AA  50DF               	movf	indf2,w,c
 48338  0152AC  ECD7  F0AE         	call	i2__i2c_send
 48339                           
 48340                           ;i2c.c: 101: _i2c_wait_idle();
 48341  0152B0  EC40  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48342  0152B4  2A0A               	incf	i2__i2c_write@cntr,f,c
 48343  0152B6                     i2l1160:
 48344  0152B6  5008               	movf	i2__i2c_write@length,w,c
 48345  0152B8  5C0A               	subwf	i2__i2c_write@cntr,w,c
 48346  0152BA  A0D8               	btfss	status,0,c
 48347  0152BC  D7EE               	goto	i2l1161
 48348                           
 48349                           ;i2c.c: 102: };i2c.c: 104: _i2c_stop();
 48350  0152BE  ECCF  F0AE         	call	i2__i2c_stop	;wreg free
 48351  0152C2  0012               	return		;funcret
 48352  0152C4                     __end_ofi2__i2c_write:
 48353                           	opt stack 0
 48354                           tosu	equ	0xFFF
 48355                           tosh	equ	0xFFE
 48356                           tosl	equ	0xFFD
 48357                           pclatu	equ	0xFFB
 48358                           pclath	equ	0xFFA
 48359                           tblptru	equ	0xFF8
 48360                           tblptrh	equ	0xFF7
 48361                           tblptrl	equ	0xFF6
 48362                           tablat	equ	0xFF5
 48363                           prodh	equ	0xFF4
 48364                           prodl	equ	0xFF3
 48365                           intcon	equ	0xFF2
 48366                           indf0	equ	0xFEF
 48367                           postinc0	equ	0xFEE
 48368                           fsr0h	equ	0xFEA
 48369                           fsr0l	equ	0xFE9
 48370                           wreg	equ	0xFE8
 48371                           indf1	equ	0xFE7
 48372                           postinc1	equ	0xFE6
 48373                           postdec1	equ	0xFE5
 48374                           plusw1	equ	0xFE3
 48375                           fsr1h	equ	0xFE2
 48376                           fsr1l	equ	0xFE1
 48377                           indf2	equ	0xFDF
 48378                           postinc2	equ	0xFDE
 48379                           postdec2	equ	0xFDD
 48380                           plusw2	equ	0xFDB
 48381                           fsr2h	equ	0xFDA
 48382                           fsr2l	equ	0xFD9
 48383                           status	equ	0xFD8
 48384                           
 48385 ;; *************** function i2__i2c_eeprom_busy *****************
 48386 ;; Defined at:
 48387 ;;		line 173 in file "i2c.c"
 48388 ;; Parameters:    Size  Location     Type
 48389 ;;		None
 48390 ;; Auto vars:     Size  Location     Type
 48391 ;;  _i2c_eeprom_    1    5[COMRAM] unsigned char 
 48392 ;; Return value:  Size  Location     Type
 48393 ;;                  1    wreg      unsigned char 
 48394 ;; Registers used:
 48395 ;;		wreg, status,2, status,0, cstack
 48396 ;; Tracked objects:
 48397 ;;		On entry : 0/0
 48398 ;;		On exit  : 0/0
 48399 ;;		Unchanged: 0/0
 48400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48402 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48404 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48405 ;;Total ram usage:        1 bytes
 48406 ;; Hardware stack levels used:    1
 48407 ;; Hardware stack levels required when called:    1
 48408 ;; This function calls:
 48409 ;;		i2__i2c_send
 48410 ;;		i2__i2c_start
 48411 ;;		i2__i2c_stop
 48412 ;;		i2__i2c_wait_idle
 48413 ;; This function is called by:
 48414 ;;		_i2c_eeprom_write
 48415 ;; This function uses a non-reentrant model
 48416 ;;
 48417                           
 48418                           	psect	text199
 48419  015A72                     __ptext199:
 48420                           	opt stack 0
 48421  015A72                     i2__i2c_eeprom_busy:
 48422                           	opt stack 13
 48423                           
 48424                           ;i2c.c: 175: uint8_t busy;;i2c.c: 176: _i2c_wait_idle();
 48425                           
 48426                           ;incstack = 0
 48427  015A72  EC40  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48428                           
 48429                           ;i2c.c: 177: _i2c_start();
 48430  015A76  ECD3  F0AE         	call	i2__i2c_start	;wreg free
 48431                           
 48432                           ;i2c.c: 178: _i2c_wait_idle();
 48433  015A7A  EC40  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48434                           
 48435                           ;i2c.c: 179: _i2c_send(0b10100000);
 48436  015A7E  0EA0               	movlw	160
 48437  015A80  ECD7  F0AE         	call	i2__i2c_send
 48438                           
 48439                           ;i2c.c: 180: _i2c_wait_idle();
 48440  015A84  EC40  F0A6         	call	i2__i2c_wait_idle	;wreg free
 48441                           
 48442                           ;i2c.c: 184: busy = SSP1CON2bits.ACKSTAT;
 48443  015A88  0E00               	movlw	0
 48444  015A8A  BCC5               	btfsc	4037,6,c	;volatile
 48445  015A8C  0E01               	movlw	1
 48446  015A8E  6E06               	movwf	i2__i2c_eeprom_busy@busy,c
 48447                           
 48448                           ;i2c.c: 185: _i2c_stop();
 48449  015A90  ECCF  F0AE         	call	i2__i2c_stop	;wreg free
 48450                           
 48451                           ;i2c.c: 187: return 0;
 48452  015A94  0E00               	movlw	0
 48453  015A96  0012               	return	
 48454  015A98                     __end_ofi2__i2c_eeprom_busy:
 48455                           	opt stack 0
 48456                           tosu	equ	0xFFF
 48457                           tosh	equ	0xFFE
 48458                           tosl	equ	0xFFD
 48459                           pclatu	equ	0xFFB
 48460                           pclath	equ	0xFFA
 48461                           tblptru	equ	0xFF8
 48462                           tblptrh	equ	0xFF7
 48463                           tblptrl	equ	0xFF6
 48464                           tablat	equ	0xFF5
 48465                           prodh	equ	0xFF4
 48466                           prodl	equ	0xFF3
 48467                           intcon	equ	0xFF2
 48468                           indf0	equ	0xFEF
 48469                           postinc0	equ	0xFEE
 48470                           fsr0h	equ	0xFEA
 48471                           fsr0l	equ	0xFE9
 48472                           wreg	equ	0xFE8
 48473                           indf1	equ	0xFE7
 48474                           postinc1	equ	0xFE6
 48475                           postdec1	equ	0xFE5
 48476                           plusw1	equ	0xFE3
 48477                           fsr1h	equ	0xFE2
 48478                           fsr1l	equ	0xFE1
 48479                           indf2	equ	0xFDF
 48480                           postinc2	equ	0xFDE
 48481                           postdec2	equ	0xFDD
 48482                           plusw2	equ	0xFDB
 48483                           fsr2h	equ	0xFDA
 48484                           fsr2l	equ	0xFD9
 48485                           status	equ	0xFD8
 48486                           
 48487 ;; *************** function i2__i2c_wait_idle *****************
 48488 ;; Defined at:
 48489 ;;		line 44 in file "i2c.c"
 48490 ;; Parameters:    Size  Location     Type
 48491 ;;		None
 48492 ;; Auto vars:     Size  Location     Type
 48493 ;;		None
 48494 ;; Return value:  Size  Location     Type
 48495 ;;                  1    wreg      void 
 48496 ;; Registers used:
 48497 ;;		wreg, status,2, status,0
 48498 ;; Tracked objects:
 48499 ;;		On entry : 0/0
 48500 ;;		On exit  : 0/0
 48501 ;;		Unchanged: 0/0
 48502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48505 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48506 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48507 ;;Total ram usage:        5 bytes
 48508 ;; Hardware stack levels used:    1
 48509 ;; This function calls:
 48510 ;;		Nothing
 48511 ;; This function is called by:
 48512 ;;		i2__i2c_write
 48513 ;;		i2__i2c_eeprom_busy
 48514 ;; This function uses a non-reentrant model
 48515 ;;
 48516                           
 48517                           	psect	text200
 48518  014C80                     __ptext200:
 48519                           	opt stack 0
 48520  014C80                     i2__i2c_wait_idle:
 48521                           	opt stack 13
 48522                           
 48523                           ;i2c.c: 46: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 48524                           
 48525                           ;incstack = 0
 48526  014C80  A4C7               	btfss	4039,2,c	;volatile
 48527  014C82  D003               	goto	i2u1356_40
 48528  014C84  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48529  014C86  2A01               	incf	??i2__i2c_wait_idle& (0+255),f,c
 48530  014C88  D001               	goto	i2u1356_48
 48531  014C8A                     i2u1356_40:
 48532  014C8A  6A01               	clrf	??i2__i2c_wait_idle& (0+255),c
 48533  014C8C                     i2u1356_48:
 48534  014C8C  A0C5               	btfss	4037,0,c	;volatile
 48535  014C8E  D003               	goto	i2u1357_40
 48536  014C90  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48537  014C92  2A02               	incf	(??i2__i2c_wait_idle+1)& (0+255),f,c
 48538  014C94  D001               	goto	i2u1357_48
 48539  014C96                     i2u1357_40:
 48540  014C96  6A02               	clrf	(??i2__i2c_wait_idle+1)& (0+255),c
 48541  014C98                     i2u1357_48:
 48542  014C98  A2C5               	btfss	4037,1,c	;volatile
 48543  014C9A  D003               	goto	i2u1358_40
 48544  014C9C  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48545  014C9E  2A03               	incf	(??i2__i2c_wait_idle+2)& (0+255),f,c
 48546  014CA0  D001               	goto	i2u1358_48
 48547  014CA2                     i2u1358_40:
 48548  014CA2  6A03               	clrf	(??i2__i2c_wait_idle+2)& (0+255),c
 48549  014CA4                     i2u1358_48:
 48550  014CA4  A4C5               	btfss	4037,2,c	;volatile
 48551  014CA6  D003               	goto	i2u1359_40
 48552  014CA8  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48553  014CAA  2A04               	incf	(??i2__i2c_wait_idle+3)& (0+255),f,c
 48554  014CAC  D001               	goto	i2u1359_48
 48555  014CAE                     i2u1359_40:
 48556  014CAE  6A04               	clrf	(??i2__i2c_wait_idle+3)& (0+255),c
 48557  014CB0                     i2u1359_48:
 48558  014CB0  A6C5               	btfss	4037,3,c	;volatile
 48559  014CB2  D003               	goto	i2u1360_40
 48560  014CB4  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 48561  014CB6  2A05               	incf	(??i2__i2c_wait_idle+4)& (0+255),f,c
 48562  014CB8  D001               	goto	i2u1360_48
 48563  014CBA                     i2u1360_40:
 48564  014CBA  6A05               	clrf	(??i2__i2c_wait_idle+4)& (0+255),c
 48565  014CBC                     i2u1360_48:
 48566  014CBC  A8C5               	btfss	4037,4,c	;volatile
 48567  014CBE  D002               	goto	i2u1361_40
 48568  014CC0  0E01               	movlw	1
 48569  014CC2  D001               	goto	i2u1361_46
 48570  014CC4                     i2u1361_40:
 48571  014CC4  0E00               	movlw	0
 48572  014CC6                     i2u1361_46:
 48573  014CC6  1005               	iorwf	??i2__i2c_wait_idle+4,w,c
 48574  014CC8  1004               	iorwf	??i2__i2c_wait_idle+3,w,c
 48575  014CCA  1003               	iorwf	??i2__i2c_wait_idle+2,w,c
 48576  014CCC  1002               	iorwf	??i2__i2c_wait_idle+1,w,c
 48577  014CCE  1001               	iorwf	??i2__i2c_wait_idle,w,c
 48578  014CD0  0900               	iorlw	0
 48579  014CD2  B4D8               	btfsc	status,2,c
 48580  014CD4  0012               	return	
 48581  014CD6  D7D4               	goto	i2__i2c_wait_idle
 48582  014CD8                     __end_ofi2__i2c_wait_idle:
 48583                           	opt stack 0
 48584                           tosu	equ	0xFFF
 48585                           tosh	equ	0xFFE
 48586                           tosl	equ	0xFFD
 48587                           pclatu	equ	0xFFB
 48588                           pclath	equ	0xFFA
 48589                           tblptru	equ	0xFF8
 48590                           tblptrh	equ	0xFF7
 48591                           tblptrl	equ	0xFF6
 48592                           tablat	equ	0xFF5
 48593                           prodh	equ	0xFF4
 48594                           prodl	equ	0xFF3
 48595                           intcon	equ	0xFF2
 48596                           indf0	equ	0xFEF
 48597                           postinc0	equ	0xFEE
 48598                           fsr0h	equ	0xFEA
 48599                           fsr0l	equ	0xFE9
 48600                           wreg	equ	0xFE8
 48601                           indf1	equ	0xFE7
 48602                           postinc1	equ	0xFE6
 48603                           postdec1	equ	0xFE5
 48604                           plusw1	equ	0xFE3
 48605                           fsr1h	equ	0xFE2
 48606                           fsr1l	equ	0xFE1
 48607                           indf2	equ	0xFDF
 48608                           postinc2	equ	0xFDE
 48609                           postdec2	equ	0xFDD
 48610                           plusw2	equ	0xFDB
 48611                           fsr2h	equ	0xFDA
 48612                           fsr2l	equ	0xFD9
 48613                           status	equ	0xFD8
 48614                           
 48615 ;; *************** function i2__i2c_stop *****************
 48616 ;; Defined at:
 48617 ;;		line 67 in file "i2c.c"
 48618 ;; Parameters:    Size  Location     Type
 48619 ;;		None
 48620 ;; Auto vars:     Size  Location     Type
 48621 ;;		None
 48622 ;; Return value:  Size  Location     Type
 48623 ;;                  1    wreg      void 
 48624 ;; Registers used:
 48625 ;;		None
 48626 ;; Tracked objects:
 48627 ;;		On entry : 0/0
 48628 ;;		On exit  : 0/0
 48629 ;;		Unchanged: 0/0
 48630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48635 ;;Total ram usage:        0 bytes
 48636 ;; Hardware stack levels used:    1
 48637 ;; This function calls:
 48638 ;;		Nothing
 48639 ;; This function is called by:
 48640 ;;		i2__i2c_write
 48641 ;;		i2__i2c_eeprom_busy
 48642 ;; This function uses a non-reentrant model
 48643 ;;
 48644                           
 48645                           	psect	text201
 48646  015D9E                     __ptext201:
 48647                           	opt stack 0
 48648  015D9E                     i2__i2c_stop:
 48649                           	opt stack 13
 48650                           
 48651                           ;i2c.c: 69: SSP1CON2bits.PEN = 1;
 48652                           
 48653                           ;incstack = 0
 48654  015D9E  84C5               	bsf	4037,2,c	;volatile
 48655  015DA0  A4C5               	btfss	4037,2,c	;volatile
 48656  015DA2  0012               	return	
 48657  015DA4  D7FD               	goto	i2l1143
 48658  015DA6                     __end_ofi2__i2c_stop:
 48659                           	opt stack 0
 48660                           tosu	equ	0xFFF
 48661                           tosh	equ	0xFFE
 48662                           tosl	equ	0xFFD
 48663                           pclatu	equ	0xFFB
 48664                           pclath	equ	0xFFA
 48665                           tblptru	equ	0xFF8
 48666                           tblptrh	equ	0xFF7
 48667                           tblptrl	equ	0xFF6
 48668                           tablat	equ	0xFF5
 48669                           prodh	equ	0xFF4
 48670                           prodl	equ	0xFF3
 48671                           intcon	equ	0xFF2
 48672                           indf0	equ	0xFEF
 48673                           postinc0	equ	0xFEE
 48674                           fsr0h	equ	0xFEA
 48675                           fsr0l	equ	0xFE9
 48676                           wreg	equ	0xFE8
 48677                           indf1	equ	0xFE7
 48678                           postinc1	equ	0xFE6
 48679                           postdec1	equ	0xFE5
 48680                           plusw1	equ	0xFE3
 48681                           fsr1h	equ	0xFE2
 48682                           fsr1l	equ	0xFE1
 48683                           indf2	equ	0xFDF
 48684                           postinc2	equ	0xFDE
 48685                           postdec2	equ	0xFDD
 48686                           plusw2	equ	0xFDB
 48687                           fsr2h	equ	0xFDA
 48688                           fsr2l	equ	0xFD9
 48689                           status	equ	0xFD8
 48690                           
 48691 ;; *************** function i2__i2c_start *****************
 48692 ;; Defined at:
 48693 ;;		line 49 in file "i2c.c"
 48694 ;; Parameters:    Size  Location     Type
 48695 ;;		None
 48696 ;; Auto vars:     Size  Location     Type
 48697 ;;		None
 48698 ;; Return value:  Size  Location     Type
 48699 ;;                  1    wreg      void 
 48700 ;; Registers used:
 48701 ;;		None
 48702 ;; Tracked objects:
 48703 ;;		On entry : 0/0
 48704 ;;		On exit  : 0/0
 48705 ;;		Unchanged: 0/0
 48706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48707 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48708 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48709 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48710 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48711 ;;Total ram usage:        0 bytes
 48712 ;; Hardware stack levels used:    1
 48713 ;; This function calls:
 48714 ;;		Nothing
 48715 ;; This function is called by:
 48716 ;;		i2__i2c_write
 48717 ;;		i2__i2c_eeprom_busy
 48718 ;; This function uses a non-reentrant model
 48719 ;;
 48720                           
 48721                           	psect	text202
 48722  015DA6                     __ptext202:
 48723                           	opt stack 0
 48724  015DA6                     i2__i2c_start:
 48725                           	opt stack 13
 48726                           
 48727                           ;i2c.c: 51: SSP1CON2bits.SEN=1;
 48728                           
 48729                           ;incstack = 0
 48730  015DA6  80C5               	bsf	4037,0,c	;volatile
 48731  015DA8  A0C5               	btfss	4037,0,c	;volatile
 48732  015DAA  0012               	return	
 48733  015DAC  D7FD               	goto	i2l1128
 48734  015DAE                     __end_ofi2__i2c_start:
 48735                           	opt stack 0
 48736                           tosu	equ	0xFFF
 48737                           tosh	equ	0xFFE
 48738                           tosl	equ	0xFFD
 48739                           pclatu	equ	0xFFB
 48740                           pclath	equ	0xFFA
 48741                           tblptru	equ	0xFF8
 48742                           tblptrh	equ	0xFF7
 48743                           tblptrl	equ	0xFF6
 48744                           tablat	equ	0xFF5
 48745                           prodh	equ	0xFF4
 48746                           prodl	equ	0xFF3
 48747                           intcon	equ	0xFF2
 48748                           indf0	equ	0xFEF
 48749                           postinc0	equ	0xFEE
 48750                           fsr0h	equ	0xFEA
 48751                           fsr0l	equ	0xFE9
 48752                           wreg	equ	0xFE8
 48753                           indf1	equ	0xFE7
 48754                           postinc1	equ	0xFE6
 48755                           postdec1	equ	0xFE5
 48756                           plusw1	equ	0xFE3
 48757                           fsr1h	equ	0xFE2
 48758                           fsr1l	equ	0xFE1
 48759                           indf2	equ	0xFDF
 48760                           postinc2	equ	0xFDE
 48761                           postdec2	equ	0xFDD
 48762                           plusw2	equ	0xFDB
 48763                           fsr2h	equ	0xFDA
 48764                           fsr2l	equ	0xFD9
 48765                           status	equ	0xFD8
 48766                           
 48767 ;; *************** function i2__i2c_send *****************
 48768 ;; Defined at:
 48769 ;;		line 55 in file "i2c.c"
 48770 ;; Parameters:    Size  Location     Type
 48771 ;;  dat             1    wreg     unsigned char 
 48772 ;; Auto vars:     Size  Location     Type
 48773 ;;  dat             1    0[COMRAM] unsigned char 
 48774 ;; Return value:  Size  Location     Type
 48775 ;;                  1    wreg      void 
 48776 ;; Registers used:
 48777 ;;		wreg
 48778 ;; Tracked objects:
 48779 ;;		On entry : 0/0
 48780 ;;		On exit  : 0/0
 48781 ;;		Unchanged: 0/0
 48782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48783 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48784 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48785 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48786 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48787 ;;Total ram usage:        1 bytes
 48788 ;; Hardware stack levels used:    1
 48789 ;; This function calls:
 48790 ;;		Nothing
 48791 ;; This function is called by:
 48792 ;;		i2__i2c_write
 48793 ;;		i2__i2c_eeprom_busy
 48794 ;; This function uses a non-reentrant model
 48795 ;;
 48796                           
 48797                           	psect	text203
 48798  015DAE                     __ptext203:
 48799                           	opt stack 0
 48800  015DAE                     i2__i2c_send:
 48801                           	opt stack 13
 48802                           
 48803                           ;incstack = 0
 48804                           ;i2__i2c_send@dat stored from wreg
 48805  015DAE  6E01               	movwf	i2__i2c_send@dat,c
 48806                           
 48807                           ;i2c.c: 57: SSP1BUF = dat;
 48808  015DB0  C001  FFC9         	movff	i2__i2c_send@dat,4041	;volatile
 48809  015DB4  0012               	return		;funcret
 48810  015DB6                     __end_ofi2__i2c_send:
 48811                           	opt stack 0
 48812                           tosu	equ	0xFFF
 48813                           tosh	equ	0xFFE
 48814                           tosl	equ	0xFFD
 48815                           pclatu	equ	0xFFB
 48816                           pclath	equ	0xFFA
 48817                           tblptru	equ	0xFF8
 48818                           tblptrh	equ	0xFF7
 48819                           tblptrl	equ	0xFF6
 48820                           tablat	equ	0xFF5
 48821                           prodh	equ	0xFF4
 48822                           prodl	equ	0xFF3
 48823                           intcon	equ	0xFF2
 48824                           indf0	equ	0xFEF
 48825                           postinc0	equ	0xFEE
 48826                           fsr0h	equ	0xFEA
 48827                           fsr0l	equ	0xFE9
 48828                           wreg	equ	0xFE8
 48829                           indf1	equ	0xFE7
 48830                           postinc1	equ	0xFE6
 48831                           postdec1	equ	0xFE5
 48832                           plusw1	equ	0xFE3
 48833                           fsr1h	equ	0xFE2
 48834                           fsr1l	equ	0xFE1
 48835                           indf2	equ	0xFDF
 48836                           postinc2	equ	0xFDE
 48837                           postdec2	equ	0xFDD
 48838                           plusw2	equ	0xFDB
 48839                           fsr2h	equ	0xFDA
 48840                           fsr2l	equ	0xFD9
 48841                           status	equ	0xFD8
 48842                           
 48843 ;; *************** function _USBDeviceTasks *****************
 48844 ;; Defined at:
 48845 ;;		line 477 in file "usb_device.c"
 48846 ;; Parameters:    Size  Location     Type
 48847 ;;		None
 48848 ;; Auto vars:     Size  Location     Type
 48849 ;;  i               1   30[COMRAM] unsigned char 
 48850 ;; Return value:  Size  Location     Type
 48851 ;;                  1    wreg      void 
 48852 ;; Registers used:
 48853 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 48854 ;; Tracked objects:
 48855 ;;		On entry : 0/0
 48856 ;;		On exit  : 0/0
 48857 ;;		Unchanged: 0/0
 48858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 48859 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48860 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48861 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48862 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 48863 ;;Total ram usage:        1 bytes
 48864 ;; Hardware stack levels used:    1
 48865 ;; Hardware stack levels required when called:    8
 48866 ;; This function calls:
 48867 ;;		_USBCtrlEPAllowStatusStage
 48868 ;;		_USBCtrlEPService
 48869 ;;		_USBIncrement1msInternalTimers
 48870 ;;		_USBStallHandler
 48871 ;;		_USBSuspend
 48872 ;;		_USBWakeFromSuspend
 48873 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 48874 ;;		i2_USBDeviceInit
 48875 ;; This function is called by:
 48876 ;;		_SYS_InterruptHigh
 48877 ;; This function uses a non-reentrant model
 48878 ;;
 48879                           
 48880                           	psect	text204
 48881  00FF6E                     __ptext204:
 48882                           	opt stack 0
 48883  00FF6E                     _USBDeviceTasks:
 48884                           	opt stack 9
 48885                           
 48886                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 48887                           
 48888                           ;incstack = 0
 48889  00FF6E  045E               	decf	_USBDeviceState,w,c	;volatile
 48890  00FF70  B4D8               	btfsc	status,2,c
 48891                           
 48892                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 48893  00FF72  BA65               	btfsc	3941,5,c	;volatile
 48894  00FF74  D007               	goto	i2l155
 48895                           
 48896                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 48897  00FF76  0E00               	movlw	0
 48898  00FF78  6E62               	movwf	3938,c	;volatile
 48899                           
 48900                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 48901  00FF7A  010F               	movlb	15	; () banked
 48902  00FF7C  8136               	bsf	54,0,b	;volatile
 48903                           
 48904                           ; BSR set to: 15
 48905                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 48906  00FF7E  8936               	bsf	54,4,b	;volatile
 48907                           
 48908                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 48909  00FF80  0E02               	movlw	2
 48910  00FF82  6E5E               	movwf	_USBDeviceState,c	;volatile
 48911  00FF84                     i2l155:
 48912                           
 48913                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 48914                           
 48915                           ; BSR set to: 15
 48916                           
 48917                           ; BSR set to: 15
 48918  00FF84  A462               	btfss	3938,2,c	;volatile
 48919  00FF86  D006               	goto	i2l156
 48920  00FF88  010F               	movlb	15	; () banked
 48921  00FF8A  A536               	btfss	54,2,b	;volatile
 48922  00FF8C  D003               	goto	i2l156
 48923                           
 48924                           ; BSR set to: 15
 48925                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 48926  00FF8E  9462               	bcf	3938,2,c	;volatile
 48927                           
 48928                           ; BSR set to: 15
 48929                           ;usb_device.c: 640: USBWakeFromSuspend();
 48930  00FF90  ECF7  F0AA         	call	_USBWakeFromSuspend	;wreg free
 48931  00FF94                     i2l156:
 48932                           
 48933                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 48934  00FF94  A265               	btfss	3941,1,c	;volatile
 48935  00FF96  D002               	goto	i2l157
 48936                           
 48937                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 48938  00FF98  98A1               	bcf	4001,4,c	;volatile
 48939                           
 48940                           ;usb_device.c: 650: return;
 48941  00FF9A  0012               	return	
 48942  00FF9C                     i2l157:
 48943                           
 48944                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 48945  00FF9C  A062               	btfss	3938,0,c	;volatile
 48946  00FF9E  D009               	goto	i2l159
 48947  00FFA0  010F               	movlb	15	; () banked
 48948  00FFA2  A136               	btfss	54,0,b	;volatile
 48949  00FFA4  D006               	goto	i2l159
 48950                           
 48951                           ; BSR set to: 15
 48952                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 48953  00FFA6  ECFC  F080         	call	i2_USBDeviceInit	;wreg free
 48954                           
 48955                           ;usb_device.c: 669: {PIE2bits.USBIE = 1;};
 48956  00FFAA  88A0               	bsf	4000,4,c	;volatile
 48957                           
 48958                           ;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 48959  00FFAC  0E04               	movlw	4
 48960  00FFAE  6E5E               	movwf	_USBDeviceState,c	;volatile
 48961                           
 48962                           ;usb_device.c: 681: (UIR &= 0xFE);
 48963  00FFB0  9062               	bcf	3938,0,c	;volatile
 48964  00FFB2                     i2l159:
 48965                           
 48966                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 48967  00FFB2  A862               	btfss	3938,4,c	;volatile
 48968  00FFB4  D004               	goto	i2l160
 48969  00FFB6  010F               	movlb	15	; () banked
 48970  00FFB8  B936               	btfsc	54,4,b	;volatile
 48971                           
 48972                           ; BSR set to: 15
 48973                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 48974  00FFBA  ECF7  F0AB         	call	_USBSuspend	;wreg free
 48975  00FFBE                     i2l160:
 48976                           
 48977                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 48978  00FFBE  AC62               	btfss	3938,6,c	;volatile
 48979  00FFC0  D01C               	goto	i2l164
 48980                           
 48981                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 48982  00FFC2  010F               	movlb	15	; () banked
 48983  00FFC4  AD36               	btfss	54,6,b	;volatile
 48984  00FFC6  D00E               	goto	i2l162
 48985                           
 48986                           ; BSR set to: 15
 48987                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 48988  00FFC8  0E00               	movlw	0
 48989  00FFCA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 48990  00FFCC  0E73               	movlw	115
 48991  00FFCE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 48992  00FFD0  0E00               	movlw	0
 48993  00FFD2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 48994  00FFD4  0E00               	movlw	0
 48995  00FFD6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 48996  00FFD8  0E00               	movlw	0
 48997  00FFDA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 48998  00FFDC  0E01               	movlw	1
 48999  00FFDE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49000  00FFE0  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49001  00FFE4                     i2l162:
 49002                           
 49003                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 49004  00FFE4  9C62               	bcf	3938,6,c	;volatile
 49005                           
 49006                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 49007  00FFE6  ECC6  F0AD         	call	_USBIncrement1msInternalTimers	;wreg free
 49008                           
 49009                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 49010  00FFEA  0101               	movlb	1	; () banked
 49011  00FFEC  515D               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49012  00FFEE  A4D8               	btfss	status,2,c
 49013                           
 49014                           ; BSR set to: 1
 49015                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 49016  00FFF0  075D               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b	;volatile
 49017                           
 49018                           ; BSR set to: 1
 49019                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 49020                           
 49021                           ; BSR set to: 1
 49022  00FFF2  515D               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b	;volatile
 49023  00FFF4  B4D8               	btfsc	status,2,c
 49024                           
 49025                           ; BSR set to: 1
 49026                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 49027  00FFF6  ECC6  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 49028  00FFFA                     i2l164:
 49029                           
 49030                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 49031  00FFFA  AA62               	btfss	3938,5,c	;volatile
 49032  00FFFC  D004               	goto	i2l165
 49033  00FFFE  010F               	movlb	15	; () banked
 49034  010000  BB36               	btfsc	54,5,b	;volatile
 49035                           
 49036                           ; BSR set to: 15
 49037                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 49038  010002  ECC8  F0A9         	call	_USBStallHandler	;wreg free
 49039  010006                     i2l165:
 49040                           
 49041                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 49042  010006  A262               	btfss	3938,1,c	;volatile
 49043  010008  D012               	goto	i2l166
 49044  01000A  010F               	movlb	15	; () banked
 49045  01000C  A336               	btfss	54,1,b	;volatile
 49046  01000E  D00F               	goto	i2l166
 49047                           
 49048                           ; BSR set to: 15
 49049                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 49050  010010  0E7F               	movlw	127
 49051  010012  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49052  010014  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49053  010016  0E00               	movlw	0
 49054  010018  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49055  01001A  0E00               	movlw	0
 49056  01001C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49057  01001E  0E00               	movlw	0
 49058  010020  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49059  010022  0E01               	movlw	1
 49060  010024  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49061  010026  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49062                           
 49063                           ;usb_device.c: 759: {UEIR = 0;};
 49064  01002A  0E00               	movlw	0
 49065  01002C  6E63               	movwf	3939,c	;volatile
 49066  01002E                     i2l166:
 49067                           
 49068                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 49069  01002E  0E04               	movlw	4
 49070  010030  605E               	cpfslt	_USBDeviceState,c	;volatile
 49071  010032  D002               	goto	i2l167
 49072                           
 49073                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 49074  010034  98A1               	bcf	4001,4,c	;volatile
 49075                           
 49076                           ;usb_device.c: 777: return;
 49077  010036  0012               	return	
 49078  010038                     i2l167:
 49079                           
 49080                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 49081  010038  010F               	movlb	15	; () banked
 49082  01003A  A736               	btfss	54,3,b	;volatile
 49083  01003C  D039               	goto	i2u1754_40
 49084                           
 49085                           ; BSR set to: 15
 49086                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 49087  01003E  0E00               	movlw	0
 49088  010040  6E1F               	movwf	USBDeviceTasks@i,c
 49089  010042                     i2l18018:
 49090                           
 49091                           ; BSR set to: 15
 49092  010042  0E03               	movlw	3
 49093  010044  641F               	cpfsgt	USBDeviceTasks@i,c
 49094  010046  D001               	goto	i2l169
 49095  010048  D033               	goto	i2u1754_40
 49096  01004A                     i2l169:
 49097                           
 49098                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 49099  01004A  A662               	btfss	3938,3,c	;volatile
 49100  01004C  D031               	goto	i2u1754_40
 49101                           
 49102                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 49103  01004E  CF64 F1C2          	movff	3940,_USTATcopy	;volatile
 49104                           
 49105                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 49106  010052  0101               	movlb	1	; () banked
 49107  010054  31C2               	rrcf	_USTATcopy& (0+255),w,b	;volatile
 49108  010056  32E8               	rrcf	wreg,f,c
 49109  010058  32E8               	rrcf	wreg,f,c
 49110  01005A  0B0F               	andlw	15
 49111  01005C  6F5F               	movwf	_endpoint_number& (0+255),b	;volatile
 49112                           
 49113                           ; BSR set to: 1
 49114                           ;usb_device.c: 793: (UIR &= 0xF7);
 49115  01005E  9662               	bcf	3938,3,c	;volatile
 49116                           
 49117                           ; BSR set to: 1
 49118                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 49119  010060  B5C2               	btfsc	_USTATcopy& (0+255),2,b	;volatile
 49120  010062  D007               	goto	i2l172
 49121                           
 49122                           ; BSR set to: 1
 49123                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 49124  010064  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49125  010066  0D01               	mullw	1
 49126  010068  0E2D               	movlw	low _ep_data_out
 49127  01006A  24F3               	addwf	prodl,w,c
 49128  01006C  6ED9               	movwf	fsr2l,c
 49129  01006E  0E01               	movlw	high _ep_data_out
 49130  010070  D006               	goto	L72
 49131  010072                     i2l172:
 49132                           
 49133                           ; BSR set to: 1
 49134                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 49135                           
 49136                           ; BSR set to: 1
 49137  010072  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49138  010074  0D01               	mullw	1
 49139  010076  0E30               	movlw	low _ep_data_in
 49140  010078  24F3               	addwf	prodl,w,c
 49141  01007A  6ED9               	movwf	fsr2l,c
 49142  01007C  0E01               	movlw	high _ep_data_in
 49143  01007E                     L72:
 49144  01007E  20F4               	addwfc	prodh,w,c
 49145  010080  6EDA               	movwf	fsr2h,c
 49146  010082  70DF               	btg	indf2,0,c
 49147                           
 49148                           ; BSR set to: 1
 49149                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 49150                           
 49151                           ; BSR set to: 1
 49152  010084  515F               	movf	_endpoint_number& (0+255),w,b	;volatile
 49153  010086  A4D8               	btfss	status,2,c
 49154  010088  D003               	goto	i2l174
 49155                           
 49156                           ; BSR set to: 1
 49157                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 49158  01008A  EC9B  F09B         	call	_USBCtrlEPService	;wreg free
 49159                           
 49160                           ;usb_device.c: 813: }
 49161  01008E  D00E               	goto	i2l176
 49162  010090                     i2l174:
 49163                           
 49164                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 49165  010090  0E00               	movlw	0
 49166  010092  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49167  010094  0E72               	movlw	114
 49168  010096  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49169  010098  0EC2               	movlw	low _USTATcopy
 49170  01009A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49171  01009C  0E01               	movlw	high _USTATcopy
 49172  01009E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49173  0100A0  0E00               	movlw	0
 49174  0100A2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49175  0100A4  0E00               	movlw	0
 49176  0100A6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49177  0100A8  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49178  0100AC                     i2l176:
 49179  0100AC  2A1F               	incf	USBDeviceTasks@i,f,c
 49180  0100AE  D7C9               	goto	i2l18018
 49181  0100B0                     i2u1754_40:
 49182                           
 49183                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 49184  0100B0  98A1               	bcf	4001,4,c	;volatile
 49185  0100B2  0012               	return		;funcret
 49186  0100B4                     __end_of_USBDeviceTasks:
 49187                           	opt stack 0
 49188                           tosu	equ	0xFFF
 49189                           tosh	equ	0xFFE
 49190                           tosl	equ	0xFFD
 49191                           pclatu	equ	0xFFB
 49192                           pclath	equ	0xFFA
 49193                           tblptru	equ	0xFF8
 49194                           tblptrh	equ	0xFF7
 49195                           tblptrl	equ	0xFF6
 49196                           tablat	equ	0xFF5
 49197                           prodh	equ	0xFF4
 49198                           prodl	equ	0xFF3
 49199                           intcon	equ	0xFF2
 49200                           indf0	equ	0xFEF
 49201                           postinc0	equ	0xFEE
 49202                           fsr0h	equ	0xFEA
 49203                           fsr0l	equ	0xFE9
 49204                           wreg	equ	0xFE8
 49205                           indf1	equ	0xFE7
 49206                           postinc1	equ	0xFE6
 49207                           postdec1	equ	0xFE5
 49208                           plusw1	equ	0xFE3
 49209                           fsr1h	equ	0xFE2
 49210                           fsr1l	equ	0xFE1
 49211                           indf2	equ	0xFDF
 49212                           postinc2	equ	0xFDE
 49213                           postdec2	equ	0xFDD
 49214                           plusw2	equ	0xFDB
 49215                           fsr2h	equ	0xFDA
 49216                           fsr2l	equ	0xFD9
 49217                           status	equ	0xFD8
 49218                           
 49219 ;; *************** function i2_USBDeviceInit *****************
 49220 ;; Defined at:
 49221 ;;		line 277 in file "usb_device.c"
 49222 ;; Parameters:    Size  Location     Type
 49223 ;;		None
 49224 ;; Auto vars:     Size  Location     Type
 49225 ;;  USBDeviceIni    1    8[COMRAM] unsigned char 
 49226 ;; Return value:  Size  Location     Type
 49227 ;;                  1    wreg      void 
 49228 ;; Registers used:
 49229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 49230 ;; Tracked objects:
 49231 ;;		On entry : 0/0
 49232 ;;		On exit  : 0/0
 49233 ;;		Unchanged: 0/0
 49234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49236 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49238 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49239 ;;Total ram usage:        1 bytes
 49240 ;; Hardware stack levels used:    1
 49241 ;; Hardware stack levels required when called:    1
 49242 ;; This function calls:
 49243 ;;		i2_memset
 49244 ;; This function is called by:
 49245 ;;		_USBDeviceTasks
 49246 ;; This function uses a non-reentrant model
 49247 ;;
 49248                           
 49249                           	psect	text205
 49250  0101F8                     __ptext205:
 49251                           	opt stack 0
 49252  0101F8                     i2_USBDeviceInit:
 49253                           	opt stack 15
 49254                           
 49255                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 49256                           
 49257                           ;incstack = 0
 49258  0101F8  98A0               	bcf	4000,4,c	;volatile
 49259                           
 49260                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 49261  0101FA  0E00               	movlw	0
 49262  0101FC  6E63               	movwf	3939,c	;volatile
 49263                           
 49264                           ;usb_device.c: 291: {UIR = 0;};
 49265  0101FE  0E00               	movlw	0
 49266  010200  6E62               	movwf	3938,c	;volatile
 49267                           
 49268                           ;usb_device.c: 294: UEP0 = 0;
 49269  010202  0E00               	movlw	0
 49270  010204  010F               	movlb	15	; () banked
 49271  010206  6F26               	movwf	38,b	;volatile
 49272                           
 49273                           ; BSR set to: 15
 49274                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 49275  010208  0E27               	movlw	39
 49276  01020A  6E01               	movwf	i2memset@p1,c
 49277  01020C  0E0F               	movlw	15
 49278  01020E  6E02               	movwf	i2memset@p1+1,c
 49279  010210  0E00               	movlw	0
 49280  010212  6E04               	movwf	i2memset@c+1,c
 49281  010214  0E00               	movlw	0
 49282  010216  6E03               	movwf	i2memset@c,c
 49283  010218  0E00               	movlw	0
 49284  01021A  6E06               	movwf	i2memset@n+1,c
 49285  01021C  0E02               	movlw	2
 49286  01021E  6E05               	movwf	i2memset@n,c
 49287  010220  EC81  F0AC         	call	i2_memset	;wreg free
 49288                           
 49289                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 49290  010224  0E16               	movlw	22
 49291  010226  010F               	movlb	15	; () banked
 49292  010228  6F39               	movwf	57,b	;volatile
 49293                           
 49294                           ; BSR set to: 15
 49295  01022A  0E9F               	movlw	159
 49296  01022C  6F37               	movwf	55,b	;volatile
 49297                           
 49298                           ; BSR set to: 15
 49299  01022E  0E7B               	movlw	123
 49300  010230  6F36               	movwf	54,b	;volatile
 49301                           
 49302                           ; BSR set to: 15
 49303                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 49304  010232  0E00               	movlw	0
 49305  010234  6E09               	movwf	i2USBDeviceInit@i,c
 49306  010236                     i2l17812:
 49307                           
 49308                           ; BSR set to: 15
 49309  010236  0E0B               	movlw	11
 49310  010238  6409               	cpfsgt	i2USBDeviceInit@i,c
 49311  01023A  D001               	goto	i2l145
 49312  01023C  D00E               	goto	i2u1722_40
 49313  01023E                     i2l145:
 49314                           
 49315                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 49316                           
 49317                           ; BSR set to: 15
 49318  01023E  5009               	movf	i2USBDeviceInit@i,w,c
 49319  010240  0D04               	mullw	4
 49320  010242  0E00               	movlw	0
 49321  010244  24F3               	addwf	prodl,w,c
 49322  010246  6ED9               	movwf	fsr2l,c
 49323  010248  0E0D               	movlw	13
 49324  01024A  20F4               	addwfc	prodh,w,c
 49325  01024C  6EDA               	movwf	fsr2h,c
 49326  01024E  6ADE               	clrf	postinc2,c
 49327  010250  6ADE               	clrf	postinc2,c
 49328  010252  6ADE               	clrf	postinc2,c
 49329  010254  6ADD               	clrf	postdec2,c
 49330  010256  2A09               	incf	i2USBDeviceInit@i,f,c
 49331  010258  D7EE               	goto	i2l17812
 49332  01025A                     i2u1722_40:
 49333                           
 49334                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 49335  01025A  8C65               	bsf	3941,6,c	;volatile
 49336                           
 49337                           ;usb_device.c: 316: UADDR = 0x00;
 49338  01025C  0E00               	movlw	0
 49339  01025E  010F               	movlb	15	; () banked
 49340  010260  6F38               	movwf	56,b	;volatile
 49341                           
 49342                           ; BSR set to: 15
 49343                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 49344  010262  9865               	bcf	3941,4,c	;volatile
 49345                           
 49346                           ; BSR set to: 15
 49347                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 49348  010264  9C65               	bcf	3941,6,c	;volatile
 49349  010266                     
 49350                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 49351                           
 49352                           ; BSR set to: 15
 49353  010266  9662               	bcf	3938,3,c	;volatile
 49354                           
 49355                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 49356  010268  0E00               	movlw	0
 49357  01026A  6E4F               	movwf	_inPipes+3,c	;volatile
 49358                           
 49359                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 49360  01026C  0E00               	movlw	0
 49361  01026E  0101               	movlb	1	; () banked
 49362  010270  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 49363                           
 49364                           ; BSR set to: 1
 49365                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 49366  010272  0E00               	movlw	0
 49367  010274  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 49368  010276  0E00               	movlw	0
 49369  010278  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 49370                           
 49371                           ; BSR set to: 1
 49372                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 49373  01027A  B662               	btfsc	3938,3,c	;volatile
 49374  01027C  D7F4               	goto	i2l147
 49375                           
 49376                           ; BSR set to: 1
 49377                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 49378                           
 49379                           ; BSR set to: 1
 49380  01027E  0E01               	movlw	1
 49381  010280  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 49382                           
 49383                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 49384  010282  0E01               	movlw	1
 49385  010284  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 49386                           
 49387                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 49388  010286  0E00               	movlw	0
 49389  010288  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 49390                           
 49391                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 49392  01028A  0E00               	movlw	0
 49393  01028C  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 49394                           
 49395                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 49396  01028E  0E00               	movlw	0
 49397  010290  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49398                           
 49399                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 49400  010292  0E00               	movlw	0
 49401  010294  6E09               	movwf	i2USBDeviceInit@i,c
 49402  010296                     i2l17840:
 49403                           
 49404                           ; BSR set to: 1
 49405  010296  0E02               	movlw	2
 49406  010298  6409               	cpfsgt	i2USBDeviceInit@i,c
 49407  01029A  D001               	goto	i2l149
 49408  01029C  D02E               	goto	i2u1725_40
 49409  01029E                     i2l149:
 49410                           
 49411                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 49412                           
 49413                           ; BSR set to: 1
 49414  01029E  5009               	movf	i2USBDeviceInit@i,w,c
 49415  0102A0  0D02               	mullw	2
 49416  0102A2  0E52               	movlw	low _pBDTEntryIn
 49417  0102A4  24F3               	addwf	prodl,w,c
 49418  0102A6  6ED9               	movwf	fsr2l,c
 49419  0102A8  0E00               	movlw	high _pBDTEntryIn
 49420  0102AA  20F4               	addwfc	prodh,w,c
 49421  0102AC  6EDA               	movwf	fsr2h,c
 49422  0102AE  0E00               	movlw	0
 49423  0102B0  6EDE               	movwf	postinc2,c
 49424  0102B2  0E00               	movlw	0
 49425  0102B4  6EDD               	movwf	postdec2,c
 49426                           
 49427                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 49428  0102B6  5009               	movf	i2USBDeviceInit@i,w,c
 49429  0102B8  0D02               	mullw	2
 49430  0102BA  0E1B               	movlw	low _pBDTEntryOut
 49431  0102BC  24F3               	addwf	prodl,w,c
 49432  0102BE  6ED9               	movwf	fsr2l,c
 49433  0102C0  0E01               	movlw	high _pBDTEntryOut
 49434  0102C2  20F4               	addwfc	prodh,w,c
 49435  0102C4  6EDA               	movwf	fsr2h,c
 49436  0102C6  0E00               	movlw	0
 49437  0102C8  6EDE               	movwf	postinc2,c
 49438  0102CA  0E00               	movlw	0
 49439  0102CC  6EDD               	movwf	postdec2,c
 49440                           
 49441                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 49442  0102CE  5009               	movf	i2USBDeviceInit@i,w,c
 49443  0102D0  0D01               	mullw	1
 49444  0102D2  0E30               	movlw	low _ep_data_in
 49445  0102D4  24F3               	addwf	prodl,w,c
 49446  0102D6  6ED9               	movwf	fsr2l,c
 49447  0102D8  0E01               	movlw	high _ep_data_in
 49448  0102DA  20F4               	addwfc	prodh,w,c
 49449  0102DC  6EDA               	movwf	fsr2h,c
 49450  0102DE  0E00               	movlw	0
 49451  0102E0  6EDF               	movwf	indf2,c
 49452                           
 49453                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 49454  0102E2  5009               	movf	i2USBDeviceInit@i,w,c
 49455  0102E4  0D01               	mullw	1
 49456  0102E6  0E2D               	movlw	low _ep_data_out
 49457  0102E8  24F3               	addwf	prodl,w,c
 49458  0102EA  6ED9               	movwf	fsr2l,c
 49459  0102EC  0E01               	movlw	high _ep_data_out
 49460  0102EE  20F4               	addwfc	prodh,w,c
 49461  0102F0  6EDA               	movwf	fsr2h,c
 49462  0102F2  0E00               	movlw	0
 49463  0102F4  6EDF               	movwf	indf2,c
 49464  0102F6  2A09               	incf	i2USBDeviceInit@i,f,c
 49465  0102F8  D7CE               	goto	i2l17840
 49466  0102FA                     i2u1725_40:
 49467                           
 49468                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 49469  0102FA  0E08               	movlw	8
 49470  0102FC  6E52               	movwf	_pBDTEntryIn,c
 49471  0102FE  0E0D               	movlw	13
 49472  010300  6E53               	movwf	_pBDTEntryIn+1,c
 49473                           
 49474                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 49475  010302  0E16               	movlw	22
 49476  010304  010F               	movlb	15	; () banked
 49477  010306  6F26               	movwf	38,b	;volatile
 49478                           
 49479                           ; BSR set to: 15
 49480                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 49481  010308  0E0D               	movlw	13
 49482  01030A  010D               	movlb	13	; () banked
 49483  01030C  6F03               	movwf	3,b	;volatile
 49484  01030E  0E30               	movlw	48
 49485  010310  6F02               	movwf	2,b	;volatile
 49486                           
 49487                           ; BSR set to: 13
 49488                           ;usb_device.c: 359: BDT[0].CNT = 8;
 49489  010312  0E08               	movlw	8
 49490  010314  6F01               	movwf	1,b	;volatile
 49491                           
 49492                           ; BSR set to: 13
 49493                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 49494  010316  0E04               	movlw	4
 49495  010318  6F00               	movwf	0,b	;volatile
 49496                           
 49497                           ; BSR set to: 13
 49498                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 49499  01031A  8F00               	bsf	0,7,b	;volatile
 49500                           
 49501                           ; BSR set to: 13
 49502                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 49503  01031C  0E00               	movlw	0
 49504  01031E  0101               	movlb	1	; () banked
 49505  010320  6FC3               	movwf	_USBActiveConfiguration& (0+255),b	;volatile
 49506                           
 49507                           ; BSR set to: 1
 49508                           ;usb_device.c: 366: USB1msTickCount = 0;
 49509  010322  0E00               	movlw	0
 49510  010324  6F29               	movwf	_USB1msTickCount& (0+255),b	;volatile
 49511  010326  0E00               	movlw	0
 49512  010328  6F2A               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
 49513  01032A  0E00               	movlw	0
 49514  01032C  6F2B               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
 49515  01032E  0E00               	movlw	0
 49516  010330  6F2C               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
 49517                           
 49518                           ; BSR set to: 1
 49519                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 49520  010332  0E00               	movlw	0
 49521  010334  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49522                           
 49523                           ; BSR set to: 1
 49524                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 49525  010336  0E00               	movlw	0
 49526  010338  6E5E               	movwf	_USBDeviceState,c	;volatile
 49527                           
 49528                           ; BSR set to: 1
 49529  01033A  0012               	return		;funcret
 49530  01033C                     __end_ofi2_USBDeviceInit:
 49531                           	opt stack 0
 49532                           tosu	equ	0xFFF
 49533                           tosh	equ	0xFFE
 49534                           tosl	equ	0xFFD
 49535                           pclatu	equ	0xFFB
 49536                           pclath	equ	0xFFA
 49537                           tblptru	equ	0xFF8
 49538                           tblptrh	equ	0xFF7
 49539                           tblptrl	equ	0xFF6
 49540                           tablat	equ	0xFF5
 49541                           prodh	equ	0xFF4
 49542                           prodl	equ	0xFF3
 49543                           intcon	equ	0xFF2
 49544                           indf0	equ	0xFEF
 49545                           postinc0	equ	0xFEE
 49546                           fsr0h	equ	0xFEA
 49547                           fsr0l	equ	0xFE9
 49548                           wreg	equ	0xFE8
 49549                           indf1	equ	0xFE7
 49550                           postinc1	equ	0xFE6
 49551                           postdec1	equ	0xFE5
 49552                           plusw1	equ	0xFE3
 49553                           fsr1h	equ	0xFE2
 49554                           fsr1l	equ	0xFE1
 49555                           indf2	equ	0xFDF
 49556                           postinc2	equ	0xFDE
 49557                           postdec2	equ	0xFDD
 49558                           plusw2	equ	0xFDB
 49559                           fsr2h	equ	0xFDA
 49560                           fsr2l	equ	0xFD9
 49561                           status	equ	0xFD8
 49562                           
 49563 ;; *************** function _USBWakeFromSuspend *****************
 49564 ;; Defined at:
 49565 ;;		line 2305 in file "usb_device.c"
 49566 ;; Parameters:    Size  Location     Type
 49567 ;;		None
 49568 ;; Auto vars:     Size  Location     Type
 49569 ;;		None
 49570 ;; Return value:  Size  Location     Type
 49571 ;;                  1    wreg      void 
 49572 ;; Registers used:
 49573 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49574 ;; Tracked objects:
 49575 ;;		On entry : 0/0
 49576 ;;		On exit  : 0/0
 49577 ;;		Unchanged: 0/0
 49578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49583 ;;Total ram usage:        0 bytes
 49584 ;; Hardware stack levels used:    1
 49585 ;; Hardware stack levels required when called:    4
 49586 ;; This function calls:
 49587 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49588 ;; This function is called by:
 49589 ;;		_USBDeviceTasks
 49590 ;; This function uses a non-reentrant model
 49591 ;;
 49592                           
 49593                           	psect	text206
 49594  0155EE                     __ptext206:
 49595                           	opt stack 0
 49596  0155EE                     _USBWakeFromSuspend:
 49597                           	opt stack 12
 49598                           
 49599                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 49600                           
 49601                           ; BSR set to: 1
 49602                           ;incstack = 0
 49603  0155EE  0E00               	movlw	0
 49604  0155F0  0101               	movlb	1	; () banked
 49605  0155F2  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49606                           
 49607                           ; BSR set to: 1
 49608                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 49609  0155F4  0E00               	movlw	0
 49610  0155F6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49611  0155F8  0E74               	movlw	116
 49612  0155FA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49613  0155FC  0E00               	movlw	0
 49614  0155FE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49615  015600  0E00               	movlw	0
 49616  015602  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49617  015604  0E00               	movlw	0
 49618  015606  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49619  015608  0E00               	movlw	0
 49620  01560A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49621  01560C  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49622                           
 49623                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 49624  015610  9265               	bcf	3941,1,c	;volatile
 49625                           
 49626                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 49627  015612  010F               	movlb	15	; () banked
 49628  015614  9536               	bcf	54,2,b	;volatile
 49629                           
 49630                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 49631  015616  D001               	goto	i2l315
 49632  015618                     
 49633                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 49634                           
 49635                           ; BSR set to: 15
 49636  015618  9462               	bcf	3938,2,c	;volatile
 49637  01561A                     i2l315:
 49638  01561A  B462               	btfsc	3938,2,c	;volatile
 49639  01561C  D7FD               	goto	i2l316
 49640                           
 49641                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 49642  01561E  0E00               	movlw	0
 49643  015620  0101               	movlb	1	; () banked
 49644  015622  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49645                           
 49646                           ; BSR set to: 1
 49647  015624  0012               	return		;funcret
 49648  015626                     __end_of_USBWakeFromSuspend:
 49649                           	opt stack 0
 49650                           tosu	equ	0xFFF
 49651                           tosh	equ	0xFFE
 49652                           tosl	equ	0xFFD
 49653                           pclatu	equ	0xFFB
 49654                           pclath	equ	0xFFA
 49655                           tblptru	equ	0xFF8
 49656                           tblptrh	equ	0xFF7
 49657                           tblptrl	equ	0xFF6
 49658                           tablat	equ	0xFF5
 49659                           prodh	equ	0xFF4
 49660                           prodl	equ	0xFF3
 49661                           intcon	equ	0xFF2
 49662                           indf0	equ	0xFEF
 49663                           postinc0	equ	0xFEE
 49664                           fsr0h	equ	0xFEA
 49665                           fsr0l	equ	0xFE9
 49666                           wreg	equ	0xFE8
 49667                           indf1	equ	0xFE7
 49668                           postinc1	equ	0xFE6
 49669                           postdec1	equ	0xFE5
 49670                           plusw1	equ	0xFE3
 49671                           fsr1h	equ	0xFE2
 49672                           fsr1l	equ	0xFE1
 49673                           indf2	equ	0xFDF
 49674                           postinc2	equ	0xFDE
 49675                           postdec2	equ	0xFDD
 49676                           plusw2	equ	0xFDB
 49677                           fsr2h	equ	0xFDA
 49678                           fsr2l	equ	0xFD9
 49679                           status	equ	0xFD8
 49680                           
 49681 ;; *************** function _USBSuspend *****************
 49682 ;; Defined at:
 49683 ;;		line 2247 in file "usb_device.c"
 49684 ;; Parameters:    Size  Location     Type
 49685 ;;		None
 49686 ;; Auto vars:     Size  Location     Type
 49687 ;;		None
 49688 ;; Return value:  Size  Location     Type
 49689 ;;                  1    wreg      void 
 49690 ;; Registers used:
 49691 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 49692 ;; Tracked objects:
 49693 ;;		On entry : 0/0
 49694 ;;		On exit  : 0/0
 49695 ;;		Unchanged: 0/0
 49696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49697 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49699 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49700 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49701 ;;Total ram usage:        0 bytes
 49702 ;; Hardware stack levels used:    1
 49703 ;; Hardware stack levels required when called:    4
 49704 ;; This function calls:
 49705 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 49706 ;; This function is called by:
 49707 ;;		_USBDeviceTasks
 49708 ;; This function uses a non-reentrant model
 49709 ;;
 49710                           
 49711                           	psect	text207
 49712  0157EE                     __ptext207:
 49713                           	opt stack 0
 49714  0157EE                     _USBSuspend:
 49715                           	opt stack 12
 49716                           
 49717                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 49718                           
 49719                           ; BSR set to: 1
 49720                           ;incstack = 0
 49721  0157EE  010F               	movlb	15	; () banked
 49722  0157F0  8536               	bsf	54,2,b	;volatile
 49723                           
 49724                           ; BSR set to: 15
 49725                           ;usb_device.c: 2273: (UIR &= 0xEF);
 49726  0157F2  9862               	bcf	3938,4,c	;volatile
 49727                           
 49728                           ; BSR set to: 15
 49729                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 49730  0157F4  8265               	bsf	3941,1,c	;volatile
 49731                           
 49732                           ; BSR set to: 15
 49733                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 49734  0157F6  0E01               	movlw	1
 49735  0157F8  0101               	movlb	1	; () banked
 49736  0157FA  6F60               	movwf	_USBBusIsSuspended& (0+255),b	;volatile
 49737                           
 49738                           ; BSR set to: 1
 49739                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 49740  0157FC  0E00               	movlw	0
 49741  0157FE  6F57               	movwf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49742                           
 49743                           ; BSR set to: 1
 49744                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 49745  015800  0E00               	movlw	0
 49746  015802  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 49747  015804  0E75               	movlw	117
 49748  015806  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 49749  015808  0E00               	movlw	0
 49750  01580A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 49751  01580C  0E00               	movlw	0
 49752  01580E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 49753  015810  0E00               	movlw	0
 49754  015812  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 49755  015814  0E00               	movlw	0
 49756  015816  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 49757  015818  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 49758  01581C  0012               	return		;funcret
 49759  01581E                     __end_of_USBSuspend:
 49760                           	opt stack 0
 49761                           tosu	equ	0xFFF
 49762                           tosh	equ	0xFFE
 49763                           tosl	equ	0xFFD
 49764                           pclatu	equ	0xFFB
 49765                           pclath	equ	0xFFA
 49766                           tblptru	equ	0xFF8
 49767                           tblptrh	equ	0xFF7
 49768                           tblptrl	equ	0xFF6
 49769                           tablat	equ	0xFF5
 49770                           prodh	equ	0xFF4
 49771                           prodl	equ	0xFF3
 49772                           intcon	equ	0xFF2
 49773                           indf0	equ	0xFEF
 49774                           postinc0	equ	0xFEE
 49775                           fsr0h	equ	0xFEA
 49776                           fsr0l	equ	0xFE9
 49777                           wreg	equ	0xFE8
 49778                           indf1	equ	0xFE7
 49779                           postinc1	equ	0xFE6
 49780                           postdec1	equ	0xFE5
 49781                           plusw1	equ	0xFE3
 49782                           fsr1h	equ	0xFE2
 49783                           fsr1l	equ	0xFE1
 49784                           indf2	equ	0xFDF
 49785                           postinc2	equ	0xFDE
 49786                           postdec2	equ	0xFDD
 49787                           plusw2	equ	0xFDB
 49788                           fsr2h	equ	0xFDA
 49789                           fsr2l	equ	0xFD9
 49790                           status	equ	0xFD8
 49791                           
 49792 ;; *************** function _USBStallHandler *****************
 49793 ;; Defined at:
 49794 ;;		line 2204 in file "usb_device.c"
 49795 ;; Parameters:    Size  Location     Type
 49796 ;;		None
 49797 ;; Auto vars:     Size  Location     Type
 49798 ;;		None
 49799 ;; Return value:  Size  Location     Type
 49800 ;;                  1    wreg      void 
 49801 ;; Registers used:
 49802 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 49803 ;; Tracked objects:
 49804 ;;		On entry : 0/0
 49805 ;;		On exit  : 0/0
 49806 ;;		Unchanged: 0/0
 49807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49810 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49811 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49812 ;;Total ram usage:        1 bytes
 49813 ;; Hardware stack levels used:    1
 49814 ;; This function calls:
 49815 ;;		Nothing
 49816 ;; This function is called by:
 49817 ;;		_USBDeviceTasks
 49818 ;; This function uses a non-reentrant model
 49819 ;;
 49820                           
 49821                           	psect	text208
 49822  015390                     __ptext208:
 49823                           	opt stack 0
 49824  015390                     _USBStallHandler:
 49825                           	opt stack 16
 49826                           
 49827                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 49828                           
 49829                           ;incstack = 0
 49830  015390  010F               	movlb	15	; () banked
 49831  015392  A126               	btfss	38,0,b	;volatile
 49832  015394  D01D               	goto	i2l307
 49833                           
 49834                           ; BSR set to: 15
 49835                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 49836  015396  C143  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49837  01539A  C144  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49838  01539E  0E80               	movlw	128
 49839  0153A0  18DE               	xorwf	postinc2,w,c
 49840  0153A2  A4D8               	btfss	status,2,c
 49841  0153A4  D014               	goto	i2l308
 49842                           
 49843                           ; BSR set to: 15
 49844  0153A6  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 49845  0153AA  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 49846  0153AE  0E84               	movlw	132
 49847  0153B0  18DE               	xorwf	postinc2,w,c
 49848  0153B2  A4D8               	btfss	status,2,c
 49849  0153B4  D00C               	goto	i2l308
 49850                           
 49851                           ; BSR set to: 15
 49852                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 49853  0153B6  C143  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49854  0153BA  C144  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49855  0153BE  0E0C               	movlw	12
 49856  0153C0  6EDF               	movwf	indf2,c
 49857                           
 49858                           ; BSR set to: 15
 49859                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 49860  0153C2  C143  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 49861  0153C6  C144  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 49862  0153CA  0E00               	movlw	0
 49863  0153CC  8EDB               	bsf	plusw2,7,c
 49864  0153CE                     i2l308:
 49865                           
 49866                           ; BSR set to: 15
 49867                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 49868                           
 49869                           ; BSR set to: 15
 49870  0153CE  9126               	bcf	38,0,b	;volatile
 49871  0153D0                     i2l307:
 49872                           
 49873                           ; BSR set to: 15
 49874                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 49875  0153D0  9A62               	bcf	3938,5,c	;volatile
 49876                           
 49877                           ; BSR set to: 15
 49878  0153D2  0012               	return		;funcret
 49879  0153D4                     __end_of_USBStallHandler:
 49880                           	opt stack 0
 49881                           tosu	equ	0xFFF
 49882                           tosh	equ	0xFFE
 49883                           tosl	equ	0xFFD
 49884                           pclatu	equ	0xFFB
 49885                           pclath	equ	0xFFA
 49886                           tblptru	equ	0xFF8
 49887                           tblptrh	equ	0xFF7
 49888                           tblptrl	equ	0xFF6
 49889                           tablat	equ	0xFF5
 49890                           prodh	equ	0xFF4
 49891                           prodl	equ	0xFF3
 49892                           intcon	equ	0xFF2
 49893                           indf0	equ	0xFEF
 49894                           postinc0	equ	0xFEE
 49895                           fsr0h	equ	0xFEA
 49896                           fsr0l	equ	0xFE9
 49897                           wreg	equ	0xFE8
 49898                           indf1	equ	0xFE7
 49899                           postinc1	equ	0xFE6
 49900                           postdec1	equ	0xFE5
 49901                           plusw1	equ	0xFE3
 49902                           fsr1h	equ	0xFE2
 49903                           fsr1l	equ	0xFE1
 49904                           indf2	equ	0xFDF
 49905                           postinc2	equ	0xFDE
 49906                           postdec2	equ	0xFDD
 49907                           plusw2	equ	0xFDB
 49908                           fsr2h	equ	0xFDA
 49909                           fsr2l	equ	0xFD9
 49910                           status	equ	0xFD8
 49911                           
 49912 ;; *************** function _USBIncrement1msInternalTimers *****************
 49913 ;; Defined at:
 49914 ;;		line 3027 in file "usb_device.c"
 49915 ;; Parameters:    Size  Location     Type
 49916 ;;		None
 49917 ;; Auto vars:     Size  Location     Type
 49918 ;;		None
 49919 ;; Return value:  Size  Location     Type
 49920 ;;                  1    wreg      void 
 49921 ;; Registers used:
 49922 ;;		wreg, status,2, status,0
 49923 ;; Tracked objects:
 49924 ;;		On entry : 0/0
 49925 ;;		On exit  : 0/0
 49926 ;;		Unchanged: 0/0
 49927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 49928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 49932 ;;Total ram usage:        0 bytes
 49933 ;; Hardware stack levels used:    1
 49934 ;; This function calls:
 49935 ;;		Nothing
 49936 ;; This function is called by:
 49937 ;;		_USBDeviceTasks
 49938 ;; This function uses a non-reentrant model
 49939 ;;
 49940                           
 49941                           	psect	text209
 49942  015B8C                     __ptext209:
 49943                           	opt stack 0
 49944  015B8C                     _USBIncrement1msInternalTimers:
 49945                           	opt stack 16
 49946                           
 49947                           ;usb_device.c: 3035: USB1msTickCount++;
 49948                           
 49949                           ; BSR set to: 15
 49950                           ;incstack = 0
 49951  015B8C  0E01               	movlw	1
 49952  015B8E  0101               	movlb	1	; () banked
 49953  015B90  2729               	addwf	_USB1msTickCount& (0+255),f,b	;volatile
 49954  015B92  0E00               	movlw	0
 49955  015B94  232A               	addwfc	(_USB1msTickCount+1)& (0+255),f,b	;volatile
 49956  015B96  232B               	addwfc	(_USB1msTickCount+2)& (0+255),f,b	;volatile
 49957  015B98  232C               	addwfc	(_USB1msTickCount+3)& (0+255),f,b	;volatile
 49958                           
 49959                           ; BSR set to: 1
 49960                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 49961  015B9A  5160               	movf	_USBBusIsSuspended& (0+255),w,b	;volatile
 49962  015B9C  A4D8               	btfss	status,2,c
 49963  015B9E  0012               	return	
 49964                           
 49965                           ; BSR set to: 1
 49966                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 49967  015BA0  2B57               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b	;volatile
 49968                           
 49969                           ; BSR set to: 1
 49970                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 49971  015BA2  5157               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b	;volatile
 49972  015BA4  A4D8               	btfss	status,2,c
 49973  015BA6  0012               	return	
 49974                           
 49975                           ; BSR set to: 1
 49976                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 49977  015BA8  6957               	setf	_USBTicksSinceSuspendEnd& (0+255),b	;volatile
 49978                           
 49979                           ; BSR set to: 1
 49980  015BAA  0012               	return	
 49981  015BAC                     __end_of_USBIncrement1msInternalTimers:
 49982                           	opt stack 0
 49983                           tosu	equ	0xFFF
 49984                           tosh	equ	0xFFE
 49985                           tosl	equ	0xFFD
 49986                           pclatu	equ	0xFFB
 49987                           pclath	equ	0xFFA
 49988                           tblptru	equ	0xFF8
 49989                           tblptrh	equ	0xFF7
 49990                           tblptrl	equ	0xFF6
 49991                           tablat	equ	0xFF5
 49992                           prodh	equ	0xFF4
 49993                           prodl	equ	0xFF3
 49994                           intcon	equ	0xFF2
 49995                           indf0	equ	0xFEF
 49996                           postinc0	equ	0xFEE
 49997                           fsr0h	equ	0xFEA
 49998                           fsr0l	equ	0xFE9
 49999                           wreg	equ	0xFE8
 50000                           indf1	equ	0xFE7
 50001                           postinc1	equ	0xFE6
 50002                           postdec1	equ	0xFE5
 50003                           plusw1	equ	0xFE3
 50004                           fsr1h	equ	0xFE2
 50005                           fsr1l	equ	0xFE1
 50006                           indf2	equ	0xFDF
 50007                           postinc2	equ	0xFDE
 50008                           postdec2	equ	0xFDD
 50009                           plusw2	equ	0xFDB
 50010                           fsr2h	equ	0xFDA
 50011                           fsr2l	equ	0xFD9
 50012                           status	equ	0xFD8
 50013                           
 50014 ;; *************** function _USBCtrlEPService *****************
 50015 ;; Defined at:
 50016 ;;		line 2374 in file "usb_device.c"
 50017 ;; Parameters:    Size  Location     Type
 50018 ;;		None
 50019 ;; Auto vars:     Size  Location     Type
 50020 ;;		None
 50021 ;; Return value:  Size  Location     Type
 50022 ;;                  1    wreg      void 
 50023 ;; Registers used:
 50024 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 50025 ;; Tracked objects:
 50026 ;;		On entry : 0/0
 50027 ;;		On exit  : 0/0
 50028 ;;		Unchanged: 0/0
 50029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50032 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50033 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50034 ;;Total ram usage:        1 bytes
 50035 ;; Hardware stack levels used:    1
 50036 ;; Hardware stack levels required when called:    7
 50037 ;; This function calls:
 50038 ;;		_USBCtrlTrfInHandler
 50039 ;;		_USBCtrlTrfOutHandler
 50040 ;;		_USBCtrlTrfSetupHandler
 50041 ;;		i2_memcpy
 50042 ;; This function is called by:
 50043 ;;		_USBDeviceTasks
 50044 ;; This function uses a non-reentrant model
 50045 ;;
 50046                           
 50047                           	psect	text210
 50048  013736                     __ptext210:
 50049                           	opt stack 0
 50050  013736                     _USBCtrlEPService:
 50051                           	opt stack 9
 50052                           
 50053                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 50054                           
 50055                           ; BSR set to: 1
 50056                           ;incstack = 0
 50057  013736  0E2D               	movlw	45
 50058  013738  0101               	movlb	1	; () banked
 50059  01373A  6F5D               	movwf	_USBStatusStageTimeoutCounter& (0+255),b	;volatile
 50060                           
 50061                           ; BSR set to: 1
 50062                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 50063  01373C  C1C2  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50064  013740  0EFD               	movlw	253
 50065  013742  161E               	andwf	??_USBCtrlEPService,f,c
 50066  013744  A4D8               	btfss	status,2,c
 50067  013746  D03B               	goto	i2l321
 50068                           
 50069                           ; BSR set to: 1
 50070                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 50071  013748  C1C2  F01E         	movff	_USTATcopy,??_USBCtrlEPService	;volatile
 50072  01374C  90D8               	bcf	status,0,c
 50073  01374E  321E               	rrcf	??_USBCtrlEPService,f,c
 50074  013750  0E3F               	movlw	63
 50075  013752  161E               	andwf	??_USBCtrlEPService,f,c
 50076  013754  501E               	movf	??_USBCtrlEPService,w,c
 50077  013756  0D04               	mullw	4
 50078  013758  0E00               	movlw	0
 50079  01375A  24F3               	addwf	prodl,w,c
 50080  01375C  6F43               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 50081  01375E  0E0D               	movlw	13
 50082  013760  20F4               	addwfc	prodh,w,c
 50083  013762  6F44               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 50084                           
 50085                           ; BSR set to: 1
 50086                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 50087  013764  C143  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 50088  013768  C144  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 50089                           
 50090                           ; BSR set to: 1
 50091                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 50092  01376C  0E04               	movlw	4
 50093  01376E  185C               	xorwf	_pBDTEntryEP0OutNext,w,c
 50094  013770  6E5C               	movwf	_pBDTEntryEP0OutNext,c
 50095  013772  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50096  013774  6E5D               	movwf	_pBDTEntryEP0OutNext+1,c
 50097                           
 50098                           ; BSR set to: 1
 50099                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 50100  013776  C143  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 50101  01377A  C144  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 50102  01377E  30DF               	rrcf	223,w,c
 50103  013780  32E8               	rrcf	wreg,f,c
 50104  013782  0B0F               	andlw	15
 50105  013784  0A0D               	xorlw	13
 50106  013786  A4D8               	btfss	status,2,c
 50107  013788  D017               	goto	i2l322
 50108                           
 50109                           ; BSR set to: 1
 50110                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 50111  01378A  0E30               	movlw	48
 50112  01378C  6E01               	movwf	i2memcpy@d1,c
 50113  01378E  0E0D               	movlw	13
 50114  013790  6E02               	movwf	i2memcpy@d1+1,c
 50115  013792  EE20 F002          	lfsr	2,2
 50116  013796  5143               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 50117  013798  26D9               	addwf	fsr2l,f,c
 50118  01379A  5144               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 50119  01379C  22DA               	addwfc	fsr2h,f,c
 50120  01379E  CFDE F003          	movff	postinc2,i2memcpy@s1
 50121  0137A2  CFDD F004          	movff	postdec2,i2memcpy@s1+1
 50122  0137A6  0E00               	movlw	0
 50123  0137A8  6E06               	movwf	i2memcpy@n+1,c
 50124  0137AA  0E08               	movlw	8
 50125  0137AC  6E05               	movwf	i2memcpy@n,c
 50126  0137AE  EC81  F0A4         	call	i2_memcpy	;wreg free
 50127                           
 50128                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 50129  0137B2  EC3A  F09E         	call	_USBCtrlTrfSetupHandler	;wreg free
 50130                           
 50131                           ;usb_device.c: 2411: }
 50132  0137B6  0012               	return	
 50133  0137B8                     i2l322:
 50134                           
 50135                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 50136  0137B8  EC22  F0A4         	call	_USBCtrlTrfOutHandler	;wreg free
 50137                           
 50138                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 50139  0137BC  0012               	return	
 50140  0137BE                     i2l321:
 50141                           
 50142                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 50143  0137BE  0101               	movlb	1	; () banked
 50144  0137C0  51C2               	movf	_USTATcopy& (0+255),w,b	;volatile
 50145  0137C2  0BFD               	andlw	253
 50146  0137C4  0A04               	xorlw	4
 50147  0137C6  A4D8               	btfss	status,2,c
 50148  0137C8  0012               	return	
 50149                           
 50150                           ; BSR set to: 1
 50151                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 50152  0137CA  EC28  F096         	call	_USBCtrlTrfInHandler	;wreg free
 50153  0137CE  0012               	return	
 50154  0137D0                     __end_of_USBCtrlEPService:
 50155                           	opt stack 0
 50156                           tosu	equ	0xFFF
 50157                           tosh	equ	0xFFE
 50158                           tosl	equ	0xFFD
 50159                           pclatu	equ	0xFFB
 50160                           pclath	equ	0xFFA
 50161                           tblptru	equ	0xFF8
 50162                           tblptrh	equ	0xFF7
 50163                           tblptrl	equ	0xFF6
 50164                           tablat	equ	0xFF5
 50165                           prodh	equ	0xFF4
 50166                           prodl	equ	0xFF3
 50167                           intcon	equ	0xFF2
 50168                           indf0	equ	0xFEF
 50169                           postinc0	equ	0xFEE
 50170                           fsr0h	equ	0xFEA
 50171                           fsr0l	equ	0xFE9
 50172                           wreg	equ	0xFE8
 50173                           indf1	equ	0xFE7
 50174                           postinc1	equ	0xFE6
 50175                           postdec1	equ	0xFE5
 50176                           plusw1	equ	0xFE3
 50177                           fsr1h	equ	0xFE2
 50178                           fsr1l	equ	0xFE1
 50179                           indf2	equ	0xFDF
 50180                           postinc2	equ	0xFDE
 50181                           postdec2	equ	0xFDD
 50182                           plusw2	equ	0xFDB
 50183                           fsr2h	equ	0xFDA
 50184                           fsr2l	equ	0xFD9
 50185                           status	equ	0xFD8
 50186                           
 50187 ;; *************** function i2_memcpy *****************
 50188 ;; Defined at:
 50189 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 50190 ;; Parameters:    Size  Location     Type
 50191 ;;  d1              2    0[COMRAM] PTR void 
 50192 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 50193 ;;		 -> msd_buffer(512), SetupPkt(8), 
 50194 ;;  s1              2    2[COMRAM] PTR const void 
 50195 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50196 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50197 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50198 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50199 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50200 ;;		 -> config(40), ReceivedDataBuffer(64), os(50), inq_resp(36), 
 50201 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 50202 ;;  n               2    4[COMRAM] unsigned int 
 50203 ;; Auto vars:     Size  Location     Type
 50204 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
 50205 ;;		 -> configFile_used_extention(3), configFile_used_name(8), flash_command_pagesize_528(4), flash_command_pagesize_512
      +(4), 
 50206 ;;		 -> STR_6(6), STR_5(9), STR_4(7), STR_3(9), 
 50207 ;;		 -> dc_manual(80), dc_zero(80), STR_2(7), STR_1(9), 
 50208 ;;		 -> dc_arc2(80), dc_arc1(80), dc_divide2(80), dc_divide1(80), 
 50209 ;;		 -> dc_setup2(80), dc_setup1(80), dc_main(80), dc_startup(80), 
 50210 ;;		 -> config(40), ReceivedDataBuffer(64), os(50), inq_resp(36), 
 50211 ;;		 -> CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 50212 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
 50213 ;;		 -> fat_create_file@root_entry(32), _flash_set_page_size@command(4), display_content(80), ToSendDataBuffer(64), 
 50214 ;;		 -> msd_buffer(512), SetupPkt(8), 
 50215 ;;  memcpy          1   10[COMRAM] unsigned char 
 50216 ;; Return value:  Size  Location     Type
 50217 ;;                  2    0[COMRAM] PTR void 
 50218 ;; Registers used:
 50219 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 50220 ;; Tracked objects:
 50221 ;;		On entry : 0/0
 50222 ;;		On exit  : 0/0
 50223 ;;		Unchanged: 0/0
 50224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50225 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50226 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50228 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50229 ;;Total ram usage:       11 bytes
 50230 ;; Hardware stack levels used:    1
 50231 ;; This function calls:
 50232 ;;		Nothing
 50233 ;; This function is called by:
 50234 ;;		_USBCtrlEPService
 50235 ;; This function uses a non-reentrant model
 50236 ;;
 50237                           
 50238                           	psect	text211
 50239  014902                     __ptext211:
 50240                           	opt stack 0
 50241  014902                     i2_memcpy:
 50242                           	opt stack 15
 50243                           
 50244                           ;incstack = 0
 50245  014902  C003  F009         	movff	i2memcpy@s1,i2memcpy@s
 50246  014906  C004  F00A         	movff	i2memcpy@s1+1,i2memcpy@s+1
 50247  01490A  C001  F007         	movff	i2memcpy@d1,i2memcpy@d
 50248  01490E  C002  F008         	movff	i2memcpy@d1+1,i2memcpy@d+1
 50249  014912  D01C               	goto	i2l3804
 50250  014914                     i2l16928:
 50251  014914  C009  FFF6         	movff	i2memcpy@s,tblptrl
 50252  014918  C00A  FFF7         	movff	i2memcpy@s+1,tblptrh
 50253  01491C  0E00               	movlw	low (__mediumconst shr (0+16))
 50254  01491E  6EF8               	movwf	tblptru,c
 50255  014920  0E0E               	movlw	(high __ramtop+-1)
 50256  014922  64F7               	cpfsgt	tblptrh,c
 50257  014924  D003               	bra	i2u1614_47
 50258  014926  0008               	tblrd		*
 50259  014928  50F5               	movf	tablat,w,c
 50260  01492A  D005               	bra	i2u1614_40
 50261  01492C                     i2u1614_47:
 50262  01492C  CFF6 FFE9          	movff	tblptrl,fsr0l
 50263  014930  CFF7 FFEA          	movff	tblptrh,fsr0h
 50264  014934  50EF               	movf	indf0,w,c
 50265  014936                     i2u1614_40:
 50266  014936  6E0B               	movwf	i2memcpy@tmp,c
 50267  014938  4A09               	infsnz	i2memcpy@s,f,c
 50268  01493A  2A0A               	incf	i2memcpy@s+1,f,c
 50269  01493C  C007  FFD9         	movff	i2memcpy@d,fsr2l
 50270  014940  C008  FFDA         	movff	i2memcpy@d+1,fsr2h
 50271  014944  C00B  FFDF         	movff	i2memcpy@tmp,indf2
 50272  014948  4A07               	infsnz	i2memcpy@d,f,c
 50273  01494A  2A08               	incf	i2memcpy@d+1,f,c
 50274  01494C                     i2l3804:
 50275  01494C  0605               	decf	i2memcpy@n,f,c
 50276  01494E  A0D8               	btfss	status,0,c
 50277  014950  0606               	decf	i2memcpy@n+1,f,c
 50278  014952  2805               	incf	i2memcpy@n,w,c
 50279  014954  E1DF               	bnz	i2l16928
 50280  014956  2806               	incf	i2memcpy@n+1,w,c
 50281  014958  B4D8               	btfsc	status,2,c
 50282  01495A  0012               	return	
 50283  01495C  D7DB               	goto	i2l3805
 50284  01495E                     __end_ofi2_memcpy:
 50285                           	opt stack 0
 50286                           tosu	equ	0xFFF
 50287                           tosh	equ	0xFFE
 50288                           tosl	equ	0xFFD
 50289                           pclatu	equ	0xFFB
 50290                           pclath	equ	0xFFA
 50291                           tblptru	equ	0xFF8
 50292                           tblptrh	equ	0xFF7
 50293                           tblptrl	equ	0xFF6
 50294                           tablat	equ	0xFF5
 50295                           prodh	equ	0xFF4
 50296                           prodl	equ	0xFF3
 50297                           intcon	equ	0xFF2
 50298                           indf0	equ	0xFEF
 50299                           postinc0	equ	0xFEE
 50300                           fsr0h	equ	0xFEA
 50301                           fsr0l	equ	0xFE9
 50302                           wreg	equ	0xFE8
 50303                           indf1	equ	0xFE7
 50304                           postinc1	equ	0xFE6
 50305                           postdec1	equ	0xFE5
 50306                           plusw1	equ	0xFE3
 50307                           fsr1h	equ	0xFE2
 50308                           fsr1l	equ	0xFE1
 50309                           indf2	equ	0xFDF
 50310                           postinc2	equ	0xFDE
 50311                           postdec2	equ	0xFDD
 50312                           plusw2	equ	0xFDB
 50313                           fsr2h	equ	0xFDA
 50314                           fsr2l	equ	0xFD9
 50315                           status	equ	0xFD8
 50316                           
 50317 ;; *************** function _USBCtrlTrfSetupHandler *****************
 50318 ;; Defined at:
 50319 ;;		line 2467 in file "usb_device.c"
 50320 ;; Parameters:    Size  Location     Type
 50321 ;;		None
 50322 ;; Auto vars:     Size  Location     Type
 50323 ;;		None
 50324 ;; Return value:  Size  Location     Type
 50325 ;;                  1    wreg      void 
 50326 ;; Registers used:
 50327 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50328 ;; Tracked objects:
 50329 ;;		On entry : 0/0
 50330 ;;		On exit  : 0/0
 50331 ;;		Unchanged: 0/0
 50332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50333 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50334 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50336 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50337 ;;Total ram usage:        0 bytes
 50338 ;; Hardware stack levels used:    1
 50339 ;; Hardware stack levels required when called:    6
 50340 ;; This function calls:
 50341 ;;		_USBCheckStdRequest
 50342 ;;		_USBCtrlEPServiceComplete
 50343 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50344 ;; This function is called by:
 50345 ;;		_USBCtrlEPService
 50346 ;; This function uses a non-reentrant model
 50347 ;;
 50348                           
 50349                           	psect	text212
 50350  013C74                     __ptext212:
 50351                           	opt stack 0
 50352  013C74                     _USBCtrlTrfSetupHandler:
 50353                           	opt stack 9
 50354                           
 50355                           ;usb_device.c: 2472: shortPacketStatus = 0;
 50356                           
 50357                           ;incstack = 0
 50358  013C74  0E00               	movlw	0
 50359  013C76  0101               	movlb	1	; () banked
 50360  013C78  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 50361                           
 50362                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 50363  013C7A  0E00               	movlw	0
 50364  013C7C  6F5C               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 50365                           
 50366                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 50367  013C7E  0E00               	movlw	0
 50368  013C80  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 50369                           
 50370                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 50371  013C82  0E00               	movlw	0
 50372  013C84  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 50373                           
 50374                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 50375  013C86  0E00               	movlw	0
 50376  013C88  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 50377                           
 50378                           ;usb_device.c: 2477: controlTransferState = 0;
 50379  013C8A  0E00               	movlw	0
 50380  013C8C  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50381                           
 50382                           ; BSR set to: 1
 50383                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50384  013C8E  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 50385  013C92  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50386  013C96  0E7F               	movlw	127
 50387  013C98  16DF               	andwf	indf2,f,c
 50388                           
 50389                           ; BSR set to: 1
 50390                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50391  013C9A  0E04               	movlw	4
 50392  013C9C  1852               	xorwf	_pBDTEntryIn,w,c
 50393  013C9E  6E52               	movwf	_pBDTEntryIn,c
 50394  013CA0  5053               	movf	_pBDTEntryIn+1,w,c
 50395  013CA2  6E53               	movwf	_pBDTEntryIn+1,c
 50396                           
 50397                           ; BSR set to: 1
 50398                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 50399  013CA4  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 50400  013CA8  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50401  013CAC  0E7F               	movlw	127
 50402  013CAE  16DF               	andwf	indf2,f,c
 50403                           
 50404                           ; BSR set to: 1
 50405                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 50406  013CB0  0E04               	movlw	4
 50407  013CB2  1852               	xorwf	_pBDTEntryIn,w,c
 50408  013CB4  6E52               	movwf	_pBDTEntryIn,c
 50409  013CB6  5053               	movf	_pBDTEntryIn+1,w,c
 50410  013CB8  6E53               	movwf	_pBDTEntryIn+1,c
 50411                           
 50412                           ; BSR set to: 1
 50413                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 50414  013CBA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50415  013CBE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50416  013CC2  0E7F               	movlw	127
 50417  013CC4  16DF               	andwf	indf2,f,c
 50418                           
 50419                           ; BSR set to: 1
 50420                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 50421  013CC6  0E00               	movlw	0
 50422  013CC8  6E4F               	movwf	_inPipes+3,c	;volatile
 50423                           
 50424                           ; BSR set to: 1
 50425                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 50426  013CCA  0E00               	movlw	0
 50427  013CCC  6E51               	movwf	_inPipes+5,c	;volatile
 50428  013CCE  0E00               	movlw	0
 50429  013CD0  6E50               	movwf	_inPipes+4,c	;volatile
 50430                           
 50431                           ; BSR set to: 1
 50432                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 50433  013CD2  0E00               	movlw	0
 50434  013CD4  6F15               	movwf	(_outPipes+3)& (0+255),b	;volatile
 50435                           
 50436                           ; BSR set to: 1
 50437                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 50438  013CD6  0E00               	movlw	0
 50439  013CD8  6F17               	movwf	(_outPipes+5)& (0+255),b	;volatile
 50440  013CDA  0E00               	movlw	0
 50441  013CDC  6F16               	movwf	(_outPipes+4)& (0+255),b	;volatile
 50442                           
 50443                           ; BSR set to: 1
 50444                           ;usb_device.c: 2502: USBCheckStdRequest();
 50445  013CDE  EC50  F093         	call	_USBCheckStdRequest	;wreg free
 50446                           
 50447                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 50448  013CE2  0E00               	movlw	0
 50449  013CE4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 50450  013CE6  0E03               	movlw	3
 50451  013CE8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 50452  013CEA  0E00               	movlw	0
 50453  013CEC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 50454  013CEE  0E00               	movlw	0
 50455  013CF0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 50456  013CF2  0E00               	movlw	0
 50457  013CF4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 50458  013CF6  0E00               	movlw	0
 50459  013CF8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 50460  013CFA  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 50461                           
 50462                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 50463  013CFE  EC0B  F08D         	call	_USBCtrlEPServiceComplete	;wreg free
 50464  013D02  0012               	return		;funcret
 50465  013D04                     __end_of_USBCtrlTrfSetupHandler:
 50466                           	opt stack 0
 50467                           tosu	equ	0xFFF
 50468                           tosh	equ	0xFFE
 50469                           tosl	equ	0xFFD
 50470                           pclatu	equ	0xFFB
 50471                           pclath	equ	0xFFA
 50472                           tblptru	equ	0xFF8
 50473                           tblptrh	equ	0xFF7
 50474                           tblptrl	equ	0xFF6
 50475                           tablat	equ	0xFF5
 50476                           prodh	equ	0xFF4
 50477                           prodl	equ	0xFF3
 50478                           intcon	equ	0xFF2
 50479                           indf0	equ	0xFEF
 50480                           postinc0	equ	0xFEE
 50481                           fsr0h	equ	0xFEA
 50482                           fsr0l	equ	0xFE9
 50483                           wreg	equ	0xFE8
 50484                           indf1	equ	0xFE7
 50485                           postinc1	equ	0xFE6
 50486                           postdec1	equ	0xFE5
 50487                           plusw1	equ	0xFE3
 50488                           fsr1h	equ	0xFE2
 50489                           fsr1l	equ	0xFE1
 50490                           indf2	equ	0xFDF
 50491                           postinc2	equ	0xFDE
 50492                           postdec2	equ	0xFDD
 50493                           plusw2	equ	0xFDB
 50494                           fsr2h	equ	0xFDA
 50495                           fsr2l	equ	0xFD9
 50496                           status	equ	0xFD8
 50497                           
 50498 ;; *************** function _USBCtrlEPServiceComplete *****************
 50499 ;; Defined at:
 50500 ;;		line 1618 in file "usb_device.c"
 50501 ;; Parameters:    Size  Location     Type
 50502 ;;		None
 50503 ;; Auto vars:     Size  Location     Type
 50504 ;;		None
 50505 ;; Return value:  Size  Location     Type
 50506 ;;                  1    wreg      void 
 50507 ;; Registers used:
 50508 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50509 ;; Tracked objects:
 50510 ;;		On entry : 0/0
 50511 ;;		On exit  : 0/0
 50512 ;;		Unchanged: 0/0
 50513 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50515 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50516 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50517 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50518 ;;Total ram usage:        0 bytes
 50519 ;; Hardware stack levels used:    1
 50520 ;; Hardware stack levels required when called:    2
 50521 ;; This function calls:
 50522 ;;		_USBCtrlEPAllowDataStage
 50523 ;;		_USBCtrlEPAllowStatusStage
 50524 ;; This function is called by:
 50525 ;;		_USBCtrlTrfSetupHandler
 50526 ;; This function uses a non-reentrant model
 50527 ;;
 50528                           
 50529                           	psect	text213
 50530  011A16                     __ptext213:
 50531                           	opt stack 0
 50532  011A16                     _USBCtrlEPServiceComplete:
 50533                           	opt stack 12
 50534                           
 50535                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 50536                           
 50537                           ;incstack = 0
 50538  011A16  9865               	bcf	3941,4,c	;volatile
 50539                           
 50540                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 50541  011A18  BE4F               	btfsc	_inPipes+3,7,c	;volatile
 50542  011A1A  D03A               	goto	i2l231
 50543                           
 50544                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 50545  011A1C  0101               	movlb	1	; () banked
 50546  011A1E  AF15               	btfss	(_outPipes+3)& (0+255),7,b	;volatile
 50547  011A20  D00C               	goto	i2l232
 50548                           
 50549                           ; BSR set to: 1
 50550                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 50551  011A22  0E02               	movlw	2
 50552  011A24  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50553                           
 50554                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 50555  011A26  5158               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 50556  011A28  B4D8               	btfsc	status,2,c
 50557                           
 50558                           ; BSR set to: 1
 50559                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 50560  011A2A  EC34  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 50561                           
 50562                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 50563  011A2E  0E00               	movlw	0
 50564  011A30  0101               	movlb	1	; () banked
 50565  011A32  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50566                           
 50567                           ; BSR set to: 1
 50568                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 50569  011A34  0E00               	movlw	0
 50570  011A36  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50571                           
 50572                           ;usb_device.c: 1654: }
 50573  011A38  0012               	return	
 50574  011A3A                     i2l232:
 50575                           
 50576                           ; BSR set to: 1
 50577                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 50578                           
 50579                           ; BSR set to: 1
 50580  011A3A  EE20 F001          	lfsr	2,1
 50581  011A3E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 50582  011A40  26D9               	addwf	fsr2l,f,c
 50583  011A42  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50584  011A44  22DA               	addwfc	fsr2h,f,c
 50585  011A46  0E08               	movlw	8
 50586  011A48  6EDF               	movwf	indf2,c
 50587                           
 50588                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50589  011A4A  EE20 F002          	lfsr	2,2
 50590  011A4E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 50591  011A50  26D9               	addwf	fsr2l,f,c
 50592  011A52  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50593  011A54  22DA               	addwfc	fsr2h,f,c
 50594  011A56  0E30               	movlw	48
 50595  011A58  6EDE               	movwf	postinc2,c
 50596  011A5A  0E0D               	movlw	13
 50597  011A5C  6EDD               	movwf	postdec2,c
 50598                           
 50599                           ; BSR set to: 1
 50600                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 50601  011A5E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50602  011A62  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50603  011A66  0E0C               	movlw	12
 50604  011A68  6EDF               	movwf	indf2,c
 50605                           
 50606                           ; BSR set to: 1
 50607                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50608  011A6A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50609  011A6E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50610  011A72  0E00               	movlw	0
 50611  011A74  8EDB               	bsf	plusw2,7,c
 50612                           
 50613                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 50614  011A76  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 50615  011A7A  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50616  011A7E  0E04               	movlw	4
 50617  011A80  6EDF               	movwf	indf2,c
 50618                           
 50619                           ; BSR set to: 1
 50620                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50621  011A82  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 50622  011A86  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50623  011A8A  0E00               	movlw	0
 50624  011A8C  8EDB               	bsf	plusw2,7,c
 50625                           
 50626                           ; BSR set to: 1
 50627                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 50628  011A8E  0012               	return	
 50629  011A90                     i2l231:
 50630                           
 50631                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 50632  011A90  010D               	movlb	13	; () banked
 50633  011A92  AF30               	btfss	48,7,b	;volatile
 50634  011A94  D012               	goto	i2l236
 50635                           
 50636                           ; BSR set to: 13
 50637                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 50638  011A96  0E01               	movlw	1
 50639  011A98  0101               	movlb	1	; () banked
 50640  011A9A  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50641                           
 50642                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 50643  011A9C  5159               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 50644  011A9E  B4D8               	btfsc	status,2,c
 50645                           
 50646                           ; BSR set to: 1
 50647                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 50648  011AA0  EC34  F09C         	call	_USBCtrlEPAllowDataStage	;wreg free
 50649                           
 50650                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 50651  011AA4  0E00               	movlw	0
 50652  011AA6  0101               	movlb	1	; () banked
 50653  011AA8  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50654                           
 50655                           ; BSR set to: 1
 50656                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 50657  011AAA  0E00               	movlw	0
 50658  011AAC  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50659                           
 50660                           ; BSR set to: 1
 50661                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 50662  011AAE  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 50663  011AB0  A4D8               	btfss	status,2,c
 50664  011AB2  0012               	return	
 50665                           
 50666                           ; BSR set to: 1
 50667                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 50668  011AB4  ECC6  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 50669                           
 50670                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 50671  011AB8  0012               	return	
 50672  011ABA                     i2l236:
 50673                           
 50674                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 50675  011ABA  0E02               	movlw	2
 50676  011ABC  0101               	movlb	1	; () banked
 50677  011ABE  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 50678                           
 50679                           ; BSR set to: 1
 50680                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 50681  011AC0  EE20 F001          	lfsr	2,1
 50682  011AC4  505C               	movf	_pBDTEntryEP0OutNext,w,c
 50683  011AC6  26D9               	addwf	fsr2l,f,c
 50684  011AC8  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50685  011ACA  22DA               	addwfc	fsr2h,f,c
 50686  011ACC  0E08               	movlw	8
 50687  011ACE  6EDF               	movwf	indf2,c
 50688                           
 50689                           ; BSR set to: 1
 50690                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 50691  011AD0  EE20 F002          	lfsr	2,2
 50692  011AD4  505C               	movf	_pBDTEntryEP0OutNext,w,c
 50693  011AD6  26D9               	addwf	fsr2l,f,c
 50694  011AD8  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50695  011ADA  22DA               	addwfc	fsr2h,f,c
 50696  011ADC  0E30               	movlw	48
 50697  011ADE  6EDE               	movwf	postinc2,c
 50698  011AE0  0E0D               	movlw	13
 50699  011AE2  6EDD               	movwf	postdec2,c
 50700                           
 50701                           ; BSR set to: 1
 50702                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 50703  011AE4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50704  011AE8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50705  011AEC  0E04               	movlw	4
 50706  011AEE  6EDF               	movwf	indf2,c
 50707                           
 50708                           ; BSR set to: 1
 50709                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50710  011AF0  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50711  011AF4  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50712  011AF8  0E00               	movlw	0
 50713  011AFA  8EDB               	bsf	plusw2,7,c
 50714                           
 50715                           ; BSR set to: 1
 50716                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 50717  011AFC  0E00               	movlw	0
 50718  011AFE  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 50719                           
 50720                           ; BSR set to: 1
 50721                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 50722  011B00  0E00               	movlw	0
 50723  011B02  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 50724                           
 50725                           ; BSR set to: 1
 50726                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 50727  011B04  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 50728  011B06  A4D8               	btfss	status,2,c
 50729  011B08  0012               	return	
 50730                           
 50731                           ; BSR set to: 1
 50732                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 50733  011B0A  ECC6  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 50734  011B0E  0012               	return	
 50735  011B10                     __end_of_USBCtrlEPServiceComplete:
 50736                           	opt stack 0
 50737                           tosu	equ	0xFFF
 50738                           tosh	equ	0xFFE
 50739                           tosl	equ	0xFFD
 50740                           pclatu	equ	0xFFB
 50741                           pclath	equ	0xFFA
 50742                           tblptru	equ	0xFF8
 50743                           tblptrh	equ	0xFF7
 50744                           tblptrl	equ	0xFF6
 50745                           tablat	equ	0xFF5
 50746                           prodh	equ	0xFF4
 50747                           prodl	equ	0xFF3
 50748                           intcon	equ	0xFF2
 50749                           indf0	equ	0xFEF
 50750                           postinc0	equ	0xFEE
 50751                           fsr0h	equ	0xFEA
 50752                           fsr0l	equ	0xFE9
 50753                           wreg	equ	0xFE8
 50754                           indf1	equ	0xFE7
 50755                           postinc1	equ	0xFE6
 50756                           postdec1	equ	0xFE5
 50757                           plusw1	equ	0xFE3
 50758                           fsr1h	equ	0xFE2
 50759                           fsr1l	equ	0xFE1
 50760                           indf2	equ	0xFDF
 50761                           postinc2	equ	0xFDE
 50762                           postdec2	equ	0xFDD
 50763                           plusw2	equ	0xFDB
 50764                           fsr2h	equ	0xFDA
 50765                           fsr2l	equ	0xFD9
 50766                           status	equ	0xFD8
 50767                           
 50768 ;; *************** function _USBCtrlEPAllowDataStage *****************
 50769 ;; Defined at:
 50770 ;;		line 1490 in file "usb_device.c"
 50771 ;; Parameters:    Size  Location     Type
 50772 ;;		None
 50773 ;; Auto vars:     Size  Location     Type
 50774 ;;		None
 50775 ;; Return value:  Size  Location     Type
 50776 ;;                  1    wreg      void 
 50777 ;; Registers used:
 50778 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 50779 ;; Tracked objects:
 50780 ;;		On entry : 0/0
 50781 ;;		On exit  : 0/0
 50782 ;;		Unchanged: 0/0
 50783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50784 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50785 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50786 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50787 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50788 ;;Total ram usage:        0 bytes
 50789 ;; Hardware stack levels used:    1
 50790 ;; Hardware stack levels required when called:    1
 50791 ;; This function calls:
 50792 ;;		_USBCtrlTrfTxService
 50793 ;; This function is called by:
 50794 ;;		_USBCtrlEPServiceComplete
 50795 ;; This function uses a non-reentrant model
 50796 ;;
 50797                           
 50798                           	psect	text214
 50799  013868                     __ptext214:
 50800                           	opt stack 0
 50801  013868                     _USBCtrlEPAllowDataStage:
 50802                           	opt stack 12
 50803                           
 50804                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 50805                           
 50806                           ;incstack = 0
 50807  013868  0E00               	movlw	0
 50808  01386A  0101               	movlb	1	; () banked
 50809  01386C  6F59               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 50810                           
 50811                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 50812  01386E  0E00               	movlw	0
 50813  013870  6F58               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 50814                           
 50815                           ; BSR set to: 1
 50816                           ;usb_device.c: 1495: if(controlTransferState == 2)
 50817  013872  0E02               	movlw	2
 50818  013874  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 50819  013876  A4D8               	btfss	status,2,c
 50820  013878  D01F               	goto	i2l220
 50821                           
 50822                           ; BSR set to: 1
 50823                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 50824  01387A  EE20 F001          	lfsr	2,1
 50825  01387E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 50826  013880  26D9               	addwf	fsr2l,f,c
 50827  013882  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50828  013884  22DA               	addwfc	fsr2h,f,c
 50829  013886  0E08               	movlw	8
 50830  013888  6EDF               	movwf	indf2,c
 50831                           
 50832                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 50833  01388A  EE20 F002          	lfsr	2,2
 50834  01388E  505C               	movf	_pBDTEntryEP0OutNext,w,c
 50835  013890  26D9               	addwf	fsr2l,f,c
 50836  013892  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 50837  013894  22DA               	addwfc	fsr2h,f,c
 50838  013896  0E38               	movlw	56
 50839  013898  6EDE               	movwf	postinc2,c
 50840  01389A  0E0D               	movlw	13
 50841  01389C  6EDD               	movwf	postdec2,c
 50842                           
 50843                           ; BSR set to: 1
 50844                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 50845  01389E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50846  0138A2  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50847  0138A6  0E48               	movlw	72
 50848  0138A8  6EDF               	movwf	indf2,c
 50849                           
 50850                           ; BSR set to: 1
 50851                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 50852  0138AA  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 50853  0138AE  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 50854  0138B2  0E00               	movlw	0
 50855  0138B4  8EDB               	bsf	plusw2,7,c
 50856                           
 50857                           ;usb_device.c: 1502: }
 50858  0138B6  0012               	return	
 50859  0138B8                     i2l220:
 50860                           
 50861                           ; BSR set to: 1
 50862                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 50863                           
 50864                           ; BSR set to: 1
 50865  0138B8  5050               	movf	_inPipes+4,w,c	;volatile
 50866  0138BA  010D               	movlb	13	; () banked
 50867  0138BC  5D36               	subwf	54,w,b	;volatile
 50868  0138BE  5051               	movf	_inPipes+5,w,c	;volatile
 50869  0138C0  5937               	subwfb	55,w,b	;volatile
 50870  0138C2  B0D8               	btfsc	status,0,c
 50871  0138C4  D004               	goto	i2l222
 50872                           
 50873                           ; BSR set to: 13
 50874                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 50875  0138C6  CD36 F050          	movff	3382,_inPipes+4	;volatile
 50876  0138CA  CD37 F051          	movff	3383,_inPipes+5	;volatile
 50877  0138CE                     i2l222:
 50878                           
 50879                           ; BSR set to: 13
 50880                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 50881                           
 50882                           ; BSR set to: 13
 50883  0138CE  EC27  F094         	call	_USBCtrlTrfTxService	;wreg free
 50884                           
 50885                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 50886  0138D2  EE20 F002          	lfsr	2,2
 50887  0138D6  5052               	movf	_pBDTEntryIn,w,c
 50888  0138D8  26D9               	addwf	fsr2l,f,c
 50889  0138DA  5053               	movf	_pBDTEntryIn+1,w,c
 50890  0138DC  22DA               	addwfc	fsr2h,f,c
 50891  0138DE  0E38               	movlw	56
 50892  0138E0  6EDE               	movwf	postinc2,c
 50893  0138E2  0E0D               	movlw	13
 50894  0138E4  6EDD               	movwf	postdec2,c
 50895                           
 50896                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 50897  0138E6  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 50898  0138EA  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50899  0138EE  0E48               	movlw	72
 50900  0138F0  6EDF               	movwf	indf2,c
 50901                           
 50902                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 50903  0138F2  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 50904  0138F6  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 50905  0138FA  0E00               	movlw	0
 50906  0138FC  8EDB               	bsf	plusw2,7,c
 50907  0138FE  0012               	return	
 50908  013900                     __end_of_USBCtrlEPAllowDataStage:
 50909                           	opt stack 0
 50910                           tosu	equ	0xFFF
 50911                           tosh	equ	0xFFE
 50912                           tosl	equ	0xFFD
 50913                           pclatu	equ	0xFFB
 50914                           pclath	equ	0xFFA
 50915                           tblptru	equ	0xFF8
 50916                           tblptrh	equ	0xFF7
 50917                           tblptrl	equ	0xFF6
 50918                           tablat	equ	0xFF5
 50919                           prodh	equ	0xFF4
 50920                           prodl	equ	0xFF3
 50921                           intcon	equ	0xFF2
 50922                           indf0	equ	0xFEF
 50923                           postinc0	equ	0xFEE
 50924                           fsr0h	equ	0xFEA
 50925                           fsr0l	equ	0xFE9
 50926                           wreg	equ	0xFE8
 50927                           indf1	equ	0xFE7
 50928                           postinc1	equ	0xFE6
 50929                           postdec1	equ	0xFE5
 50930                           plusw1	equ	0xFE3
 50931                           fsr1h	equ	0xFE2
 50932                           fsr1l	equ	0xFE1
 50933                           indf2	equ	0xFDF
 50934                           postinc2	equ	0xFDE
 50935                           postdec2	equ	0xFDD
 50936                           plusw2	equ	0xFDB
 50937                           fsr2h	equ	0xFDA
 50938                           fsr2l	equ	0xFD9
 50939                           status	equ	0xFD8
 50940                           
 50941 ;; *************** function _USBCheckStdRequest *****************
 50942 ;; Defined at:
 50943 ;;		line 2688 in file "usb_device.c"
 50944 ;; Parameters:    Size  Location     Type
 50945 ;;		None
 50946 ;; Auto vars:     Size  Location     Type
 50947 ;;		None
 50948 ;; Return value:  Size  Location     Type
 50949 ;;                  1    wreg      void 
 50950 ;; Registers used:
 50951 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 50952 ;; Tracked objects:
 50953 ;;		On entry : 0/0
 50954 ;;		On exit  : 0/0
 50955 ;;		Unchanged: 0/0
 50956 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 50957 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50958 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50959 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50960 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 50961 ;;Total ram usage:        0 bytes
 50962 ;; Hardware stack levels used:    1
 50963 ;; Hardware stack levels required when called:    5
 50964 ;; This function calls:
 50965 ;;		_USBStdFeatureReqHandler
 50966 ;;		_USBStdGetDscHandler
 50967 ;;		_USBStdGetStatusHandler
 50968 ;;		_USBStdSetCfgHandler
 50969 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 50970 ;; This function is called by:
 50971 ;;		_USBCtrlTrfSetupHandler
 50972 ;; This function uses a non-reentrant model
 50973 ;;
 50974                           
 50975                           	psect	text215
 50976  0126A0                     __ptext215:
 50977                           	opt stack 0
 50978  0126A0                     _USBCheckStdRequest:
 50979                           	opt stack 9
 50980                           
 50981                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 50982                           
 50983                           ;incstack = 0
 50984  0126A0  010D               	movlb	13	; () banked
 50985  0126A2  3930               	swapf	48,w,b	;volatile
 50986  0126A4  32E8               	rrcf	wreg,f,c
 50987  0126A6  0B03               	andlw	3
 50988  0126A8  0900               	iorlw	0
 50989  0126AA  A4D8               	btfss	status,2,c
 50990  0126AC  0012               	return	
 50991  0126AE  D042               	goto	i2l355
 50992  0126B0                     i2l356:
 50993                           
 50994                           ; BSR set to: 13
 50995                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 50996  0126B0  8E4F               	bsf	_inPipes+3,7,c	;volatile
 50997                           
 50998                           ; BSR set to: 13
 50999                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 51000  0126B2  0E08               	movlw	8
 51001  0126B4  6E5E               	movwf	_USBDeviceState,c	;volatile
 51002                           
 51003                           ;usb_device.c: 2698: break;
 51004  0126B6  0012               	return	
 51005  0126B8                     
 51006                           ; BSR set to: 13
 51007                           ;usb_device.c: 2700: USBStdGetDscHandler();
 51008                           
 51009                           ; BSR set to: 13
 51010  0126B8  EC10  F084         	call	_USBStdGetDscHandler	;wreg free
 51011                           
 51012                           ;usb_device.c: 2701: break;
 51013  0126BC  0012               	return	
 51014  0126BE                     
 51015                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 51016  0126BE  EC75  F092         	call	_USBStdSetCfgHandler	;wreg free
 51017                           
 51018                           ;usb_device.c: 2704: break;
 51019  0126C2  0012               	return	
 51020  0126C4                     
 51021                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 51022  0126C4  0EC3               	movlw	low _USBActiveConfiguration
 51023  0126C6  6E4C               	movwf	_inPipes,c	;volatile
 51024  0126C8  0E01               	movlw	high _USBActiveConfiguration
 51025  0126CA  6E4D               	movwf	_inPipes+1,c	;volatile
 51026                           
 51027                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51028  0126CC  804F               	bsf	_inPipes+3,0,c	;volatile
 51029                           
 51030                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 51031  0126CE  0E01               	movlw	1
 51032  0126D0  6E50               	movwf	_inPipes+4,c	;volatile
 51033                           
 51034                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 51035  0126D2  8E4F               	bsf	_inPipes+3,7,c	;volatile
 51036                           
 51037                           ;usb_device.c: 2710: break;
 51038  0126D4  0012               	return	
 51039  0126D6                     
 51040                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 51041  0126D6  ECB1  F09A         	call	_USBStdGetStatusHandler	;wreg free
 51042                           
 51043                           ;usb_device.c: 2713: break;
 51044  0126DA  0012               	return	
 51045  0126DC                     
 51046                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 51047  0126DC  ECFD  F06B         	call	_USBStdFeatureReqHandler	;wreg free
 51048                           
 51049                           ;usb_device.c: 2717: break;
 51050  0126E0  0012               	return	
 51051  0126E2                     
 51052                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 51053  0126E2  010D               	movlb	13	; () banked
 51054  0126E4  5134               	movf	52,w,b	;volatile
 51055  0126E6  0D01               	mullw	1
 51056  0126E8  0EBE               	movlw	low _USBAlternateInterface
 51057  0126EA  24F3               	addwf	prodl,w,c
 51058  0126EC  6E4C               	movwf	_inPipes,c	;volatile
 51059  0126EE  0E01               	movlw	high _USBAlternateInterface
 51060  0126F0  20F4               	addwfc	prodh,w,c
 51061  0126F2  6E4D               	movwf	_inPipes+1,c	;volatile
 51062                           
 51063                           ; BSR set to: 13
 51064                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51065  0126F4  804F               	bsf	_inPipes+3,0,c	;volatile
 51066                           
 51067                           ; BSR set to: 13
 51068                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 51069  0126F6  0E01               	movlw	1
 51070  0126F8  6E50               	movwf	_inPipes+4,c	;volatile
 51071                           
 51072                           ; BSR set to: 13
 51073                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 51074  0126FA  8E4F               	bsf	_inPipes+3,7,c	;volatile
 51075                           
 51076                           ;usb_device.c: 2723: break;
 51077  0126FC  0012               	return	
 51078  0126FE                     i2l365:
 51079                           
 51080                           ; BSR set to: 13
 51081                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 51082  0126FE  8E4F               	bsf	_inPipes+3,7,c	;volatile
 51083                           
 51084                           ; BSR set to: 13
 51085                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 51086  012700  5134               	movf	52,w,b	;volatile
 51087  012702  0D01               	mullw	1
 51088  012704  0EBE               	movlw	low _USBAlternateInterface
 51089  012706  24F3               	addwf	prodl,w,c
 51090  012708  6ED9               	movwf	fsr2l,c
 51091  01270A  0E01               	movlw	high _USBAlternateInterface
 51092  01270C  20F4               	addwfc	prodh,w,c
 51093  01270E  6EDA               	movwf	fsr2h,c
 51094  012710  CD32 FFDF          	movff	3378,indf2	;volatile
 51095                           
 51096                           ;usb_device.c: 2727: break;
 51097  012714  0012               	return	
 51098  012716                     
 51099                           ; BSR set to: 13
 51100                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 51101                           
 51102                           ; BSR set to: 13
 51103  012716  0E00               	movlw	0
 51104  012718  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51105  01271A  0E02               	movlw	2
 51106  01271C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51107  01271E  0E00               	movlw	0
 51108  012720  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51109  012722  0E00               	movlw	0
 51110  012724  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51111  012726  0E00               	movlw	0
 51112  012728  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51113  01272A  0E00               	movlw	0
 51114  01272C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51115  01272E  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51116                           
 51117                           ;usb_device.c: 2734: }
 51118                           
 51119                           ;usb_device.c: 2733: break;
 51120                           
 51121                           ;usb_device.c: 2732: default:
 51122                           
 51123                           ;usb_device.c: 2731: case 12:
 51124                           
 51125                           ;usb_device.c: 2730: break;
 51126  012732  0012               	return	
 51127  012734                     i2l355:
 51128  012734  010D               	movlb	13	; () banked
 51129  012736  5131               	movf	49,w,b	;volatile
 51130                           
 51131                           ; Switch size 1, requested type "space"
 51132                           ; Number of cases is 11, Range of values is 0 to 12
 51133                           ; switch strategies available:
 51134                           ; Name         Instructions Cycles
 51135                           ; simple_byte           34    18 (average)
 51136                           ;	Chosen strategy is simple_byte
 51137  012738  0A00               	xorlw	0	; case 0
 51138  01273A  B4D8               	btfsc	status,2,c
 51139  01273C  D7CC               	goto	i2l361
 51140  01273E  0A01               	xorlw	1	; case 1
 51141  012740  B4D8               	btfsc	status,2,c
 51142  012742  D7CC               	goto	i2l362
 51143  012744  0A02               	xorlw	2	; case 3
 51144  012746  B4D8               	btfsc	status,2,c
 51145  012748  D7C9               	goto	i2l362
 51146  01274A  0A06               	xorlw	6	; case 5
 51147  01274C  B4D8               	btfsc	status,2,c
 51148  01274E  D7B0               	goto	i2l356
 51149  012750  0A03               	xorlw	3	; case 6
 51150  012752  B4D8               	btfsc	status,2,c
 51151  012754  D7B1               	goto	i2l358
 51152  012756  0A01               	xorlw	1	; case 7
 51153  012758  B4D8               	btfsc	status,2,c
 51154  01275A  D7DD               	goto	i2l366
 51155  01275C  0A0F               	xorlw	15	; case 8
 51156  01275E  B4D8               	btfsc	status,2,c
 51157  012760  D7B1               	goto	i2l360
 51158  012762  0A01               	xorlw	1	; case 9
 51159  012764  B4D8               	btfsc	status,2,c
 51160  012766  D7AB               	goto	i2l359
 51161  012768  0A03               	xorlw	3	; case 10
 51162  01276A  B4D8               	btfsc	status,2,c
 51163  01276C  D7BA               	goto	i2l364
 51164  01276E  0A01               	xorlw	1	; case 11
 51165  012770  B4D8               	btfsc	status,2,c
 51166  012772  D7C5               	goto	i2l365
 51167  012774  0A07               	xorlw	7	; case 12
 51168  012776  0012               	return	
 51169  012778                     __end_of_USBCheckStdRequest:
 51170                           	opt stack 0
 51171                           tosu	equ	0xFFF
 51172                           tosh	equ	0xFFE
 51173                           tosl	equ	0xFFD
 51174                           pclatu	equ	0xFFB
 51175                           pclath	equ	0xFFA
 51176                           tblptru	equ	0xFF8
 51177                           tblptrh	equ	0xFF7
 51178                           tblptrl	equ	0xFF6
 51179                           tablat	equ	0xFF5
 51180                           prodh	equ	0xFF4
 51181                           prodl	equ	0xFF3
 51182                           intcon	equ	0xFF2
 51183                           indf0	equ	0xFEF
 51184                           postinc0	equ	0xFEE
 51185                           fsr0h	equ	0xFEA
 51186                           fsr0l	equ	0xFE9
 51187                           wreg	equ	0xFE8
 51188                           indf1	equ	0xFE7
 51189                           postinc1	equ	0xFE6
 51190                           postdec1	equ	0xFE5
 51191                           plusw1	equ	0xFE3
 51192                           fsr1h	equ	0xFE2
 51193                           fsr1l	equ	0xFE1
 51194                           indf2	equ	0xFDF
 51195                           postinc2	equ	0xFDE
 51196                           postdec2	equ	0xFDD
 51197                           plusw2	equ	0xFDB
 51198                           fsr2h	equ	0xFDA
 51199                           fsr2l	equ	0xFD9
 51200                           status	equ	0xFD8
 51201                           
 51202 ;; *************** function _USBStdSetCfgHandler *****************
 51203 ;; Defined at:
 51204 ;;		line 1970 in file "usb_device.c"
 51205 ;; Parameters:    Size  Location     Type
 51206 ;;		None
 51207 ;; Auto vars:     Size  Location     Type
 51208 ;;  i               1   23[COMRAM] unsigned char 
 51209 ;; Return value:  Size  Location     Type
 51210 ;;                  1    wreg      void 
 51211 ;; Registers used:
 51212 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 51213 ;; Tracked objects:
 51214 ;;		On entry : 0/0
 51215 ;;		On exit  : 0/0
 51216 ;;		Unchanged: 0/0
 51217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51218 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51219 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51220 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51221 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51222 ;;Total ram usage:        1 bytes
 51223 ;; Hardware stack levels used:    1
 51224 ;; Hardware stack levels required when called:    4
 51225 ;; This function calls:
 51226 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 51227 ;;		i2_memset
 51228 ;; This function is called by:
 51229 ;;		_USBCheckStdRequest
 51230 ;; This function uses a non-reentrant model
 51231 ;;
 51232                           
 51233                           	psect	text216
 51234  0124EA                     __ptext216:
 51235                           	opt stack 0
 51236  0124EA                     _USBStdSetCfgHandler:
 51237                           	opt stack 9
 51238                           
 51239                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 51240                           
 51241                           ;incstack = 0
 51242  0124EA  8E4F               	bsf	_inPipes+3,7,c	;volatile
 51243                           
 51244                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 51245  0124EC  0E27               	movlw	39
 51246  0124EE  6E01               	movwf	i2memset@p1,c
 51247  0124F0  0E0F               	movlw	15
 51248  0124F2  6E02               	movwf	i2memset@p1+1,c
 51249  0124F4  0E00               	movlw	0
 51250  0124F6  6E04               	movwf	i2memset@c+1,c
 51251  0124F8  0E00               	movlw	0
 51252  0124FA  6E03               	movwf	i2memset@c,c
 51253  0124FC  0E00               	movlw	0
 51254  0124FE  6E06               	movwf	i2memset@n+1,c
 51255  012500  0E02               	movlw	2
 51256  012502  6E05               	movwf	i2memset@n,c
 51257  012504  EC81  F0AC         	call	i2_memset	;wreg free
 51258                           
 51259                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 51260  012508  0E00               	movlw	0
 51261  01250A  6E01               	movwf	i2memset@p1,c
 51262  01250C  0E0D               	movlw	13
 51263  01250E  6E02               	movwf	i2memset@p1+1,c
 51264  012510  0E00               	movlw	0
 51265  012512  6E04               	movwf	i2memset@c+1,c
 51266  012514  0E00               	movlw	0
 51267  012516  6E03               	movwf	i2memset@c,c
 51268  012518  0E00               	movlw	0
 51269  01251A  6E06               	movwf	i2memset@n+1,c
 51270  01251C  0E30               	movlw	48
 51271  01251E  6E05               	movwf	i2memset@n,c
 51272  012520  EC81  F0AC         	call	i2_memset	;wreg free
 51273                           
 51274                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 51275  012524  8C65               	bsf	3941,6,c	;volatile
 51276                           
 51277                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 51278  012526  0E00               	movlw	0
 51279  012528  6E18               	movwf	USBStdSetCfgHandler@i,c
 51280  01252A                     i2l13538:
 51281  01252A  0E02               	movlw	2
 51282  01252C  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 51283  01252E  D001               	goto	i2l272
 51284  012530  D016               	goto	i2u1197_40
 51285  012532                     i2l272:
 51286                           
 51287                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 51288  012532  5018               	movf	USBStdSetCfgHandler@i,w,c
 51289  012534  0D01               	mullw	1
 51290  012536  0E30               	movlw	low _ep_data_in
 51291  012538  24F3               	addwf	prodl,w,c
 51292  01253A  6ED9               	movwf	fsr2l,c
 51293  01253C  0E01               	movlw	high _ep_data_in
 51294  01253E  20F4               	addwfc	prodh,w,c
 51295  012540  6EDA               	movwf	fsr2h,c
 51296  012542  0E00               	movlw	0
 51297  012544  6EDF               	movwf	indf2,c
 51298                           
 51299                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 51300  012546  5018               	movf	USBStdSetCfgHandler@i,w,c
 51301  012548  0D01               	mullw	1
 51302  01254A  0E2D               	movlw	low _ep_data_out
 51303  01254C  24F3               	addwf	prodl,w,c
 51304  01254E  6ED9               	movwf	fsr2l,c
 51305  012550  0E01               	movlw	high _ep_data_out
 51306  012552  20F4               	addwfc	prodh,w,c
 51307  012554  6EDA               	movwf	fsr2h,c
 51308  012556  0E00               	movlw	0
 51309  012558  6EDF               	movwf	indf2,c
 51310  01255A  2A18               	incf	USBStdSetCfgHandler@i,f,c
 51311  01255C  D7E6               	goto	i2l13538
 51312  01255E                     i2u1197_40:
 51313                           
 51314                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 51315  01255E  0EBE               	movlw	low _USBAlternateInterface
 51316  012560  6E01               	movwf	i2memset@p1,c
 51317  012562  0E01               	movlw	high _USBAlternateInterface
 51318  012564  6E02               	movwf	i2memset@p1+1,c
 51319  012566  0E00               	movlw	0
 51320  012568  6E04               	movwf	i2memset@c+1,c
 51321  01256A  0E00               	movlw	0
 51322  01256C  6E03               	movwf	i2memset@c,c
 51323  01256E  0E00               	movlw	0
 51324  012570  6E06               	movwf	i2memset@n+1,c
 51325  012572  0E02               	movlw	2
 51326  012574  6E05               	movwf	i2memset@n,c
 51327  012576  EC81  F0AC         	call	i2_memset	;wreg free
 51328                           
 51329                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 51330  01257A  9C65               	bcf	3941,6,c	;volatile
 51331                           
 51332                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 51333  01257C  0E08               	movlw	8
 51334  01257E  6E52               	movwf	_pBDTEntryIn,c
 51335  012580  0E0D               	movlw	13
 51336  012582  6E53               	movwf	_pBDTEntryIn+1,c
 51337                           
 51338                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 51339  012584  0E00               	movlw	0
 51340  012586  0101               	movlb	1	; () banked
 51341  012588  6F43               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 51342  01258A  0E0D               	movlw	13
 51343  01258C  6F44               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 51344                           
 51345                           ; BSR set to: 1
 51346                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 51347  01258E  C143  F05C         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 51348  012592  C144  F05D         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 51349                           
 51350                           ; BSR set to: 1
 51351                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 51352  012596  CD32 F1C3          	movff	3378,_USBActiveConfiguration	;volatile
 51353                           
 51354                           ; BSR set to: 1
 51355                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 51356  01259A  51C3               	movf	_USBActiveConfiguration& (0+255),w,b	;volatile
 51357  01259C  A4D8               	btfss	status,2,c
 51358  01259E  D003               	goto	i2l274
 51359                           
 51360                           ; BSR set to: 1
 51361                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 51362  0125A0  0E10               	movlw	16
 51363  0125A2  6E5E               	movwf	_USBDeviceState,c	;volatile
 51364                           
 51365                           ;usb_device.c: 2015: }
 51366  0125A4  0012               	return	
 51367  0125A6                     i2l274:
 51368                           
 51369                           ; BSR set to: 1
 51370                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 51371                           
 51372                           ; BSR set to: 1
 51373  0125A6  0E00               	movlw	0
 51374  0125A8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 51375  0125AA  0E01               	movlw	1
 51376  0125AC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 51377  0125AE  0EC3               	movlw	low _USBActiveConfiguration
 51378  0125B0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 51379  0125B2  0E01               	movlw	high _USBActiveConfiguration
 51380  0125B4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 51381  0125B6  0E00               	movlw	0
 51382  0125B8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 51383  0125BA  0E01               	movlw	1
 51384  0125BC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 51385  0125BE  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 51386                           
 51387                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 51388  0125C2  0E20               	movlw	32
 51389  0125C4  6E5E               	movwf	_USBDeviceState,c	;volatile
 51390  0125C6  0012               	return	
 51391  0125C8                     __end_of_USBStdSetCfgHandler:
 51392                           	opt stack 0
 51393                           tosu	equ	0xFFF
 51394                           tosh	equ	0xFFE
 51395                           tosl	equ	0xFFD
 51396                           pclatu	equ	0xFFB
 51397                           pclath	equ	0xFFA
 51398                           tblptru	equ	0xFF8
 51399                           tblptrh	equ	0xFF7
 51400                           tblptrl	equ	0xFF6
 51401                           tablat	equ	0xFF5
 51402                           prodh	equ	0xFF4
 51403                           prodl	equ	0xFF3
 51404                           intcon	equ	0xFF2
 51405                           indf0	equ	0xFEF
 51406                           postinc0	equ	0xFEE
 51407                           fsr0h	equ	0xFEA
 51408                           fsr0l	equ	0xFE9
 51409                           wreg	equ	0xFE8
 51410                           indf1	equ	0xFE7
 51411                           postinc1	equ	0xFE6
 51412                           postdec1	equ	0xFE5
 51413                           plusw1	equ	0xFE3
 51414                           fsr1h	equ	0xFE2
 51415                           fsr1l	equ	0xFE1
 51416                           indf2	equ	0xFDF
 51417                           postinc2	equ	0xFDE
 51418                           postdec2	equ	0xFDD
 51419                           plusw2	equ	0xFDB
 51420                           fsr2h	equ	0xFDA
 51421                           fsr2l	equ	0xFD9
 51422                           status	equ	0xFD8
 51423                           
 51424 ;; *************** function i2_memset *****************
 51425 ;; Defined at:
 51426 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 51427 ;; Parameters:    Size  Location     Type
 51428 ;;  p1              2    0[COMRAM] PTR void 
 51429 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51430 ;;  c               2    2[COMRAM] int 
 51431 ;;  n               2    4[COMRAM] unsigned int 
 51432 ;; Auto vars:     Size  Location     Type
 51433 ;;  memset          2    6[COMRAM] PTR unsigned char 
 51434 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 51435 ;; Return value:  Size  Location     Type
 51436 ;;                  2    0[COMRAM] PTR void 
 51437 ;; Registers used:
 51438 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 51439 ;; Tracked objects:
 51440 ;;		On entry : 0/0
 51441 ;;		On exit  : 0/0
 51442 ;;		Unchanged: 0/0
 51443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51444 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51445 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51447 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51448 ;;Total ram usage:        8 bytes
 51449 ;; Hardware stack levels used:    1
 51450 ;; This function calls:
 51451 ;;		Nothing
 51452 ;; This function is called by:
 51453 ;;		_USBStdSetCfgHandler
 51454 ;;		i2_USBDeviceInit
 51455 ;; This function uses a non-reentrant model
 51456 ;;
 51457                           
 51458                           	psect	text217
 51459  015902                     __ptext217:
 51460                           	opt stack 0
 51461  015902                     i2_memset:
 51462                           	opt stack 15
 51463                           
 51464                           ;incstack = 0
 51465  015902  C001  F007         	movff	i2memset@p1,i2memset@p
 51466  015906  C002  F008         	movff	i2memset@p1+1,i2memset@p+1
 51467  01590A  D008               	goto	i2l3810
 51468  01590C                     i2l13468:
 51469  01590C  C007  FFD9         	movff	i2memset@p,fsr2l
 51470  015910  C008  FFDA         	movff	i2memset@p+1,fsr2h
 51471  015914  C003  FFDF         	movff	i2memset@c,indf2
 51472  015918  4A07               	infsnz	i2memset@p,f,c
 51473  01591A  2A08               	incf	i2memset@p+1,f,c
 51474  01591C                     i2l3810:
 51475  01591C  0605               	decf	i2memset@n,f,c
 51476  01591E  A0D8               	btfss	status,0,c
 51477  015920  0606               	decf	i2memset@n+1,f,c
 51478  015922  2805               	incf	i2memset@n,w,c
 51479  015924  E1F3               	bnz	i2l13468
 51480  015926  2806               	incf	i2memset@n+1,w,c
 51481  015928  B4D8               	btfsc	status,2,c
 51482  01592A  0012               	return	
 51483  01592C  D7EF               	goto	i2l3811
 51484  01592E                     __end_ofi2_memset:
 51485                           	opt stack 0
 51486                           tosu	equ	0xFFF
 51487                           tosh	equ	0xFFE
 51488                           tosl	equ	0xFFD
 51489                           pclatu	equ	0xFFB
 51490                           pclath	equ	0xFFA
 51491                           tblptru	equ	0xFF8
 51492                           tblptrh	equ	0xFF7
 51493                           tblptrl	equ	0xFF6
 51494                           tablat	equ	0xFF5
 51495                           prodh	equ	0xFF4
 51496                           prodl	equ	0xFF3
 51497                           intcon	equ	0xFF2
 51498                           indf0	equ	0xFEF
 51499                           postinc0	equ	0xFEE
 51500                           fsr0h	equ	0xFEA
 51501                           fsr0l	equ	0xFE9
 51502                           wreg	equ	0xFE8
 51503                           indf1	equ	0xFE7
 51504                           postinc1	equ	0xFE6
 51505                           postdec1	equ	0xFE5
 51506                           plusw1	equ	0xFE3
 51507                           fsr1h	equ	0xFE2
 51508                           fsr1l	equ	0xFE1
 51509                           indf2	equ	0xFDF
 51510                           postinc2	equ	0xFDE
 51511                           postdec2	equ	0xFDD
 51512                           plusw2	equ	0xFDB
 51513                           fsr2h	equ	0xFDA
 51514                           fsr2l	equ	0xFD9
 51515                           status	equ	0xFD8
 51516                           
 51517 ;; *************** function _USBStdGetStatusHandler *****************
 51518 ;; Defined at:
 51519 ;;		line 2131 in file "usb_device.c"
 51520 ;; Parameters:    Size  Location     Type
 51521 ;;		None
 51522 ;; Auto vars:     Size  Location     Type
 51523 ;;  p               2    1[COMRAM] PTR struct __BDT
 51524 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 51525 ;; Return value:  Size  Location     Type
 51526 ;;                  1    wreg      void 
 51527 ;; Registers used:
 51528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 51529 ;; Tracked objects:
 51530 ;;		On entry : 0/0
 51531 ;;		On exit  : 0/0
 51532 ;;		Unchanged: 0/0
 51533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51534 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51537 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51538 ;;Total ram usage:        3 bytes
 51539 ;; Hardware stack levels used:    1
 51540 ;; This function calls:
 51541 ;;		Nothing
 51542 ;; This function is called by:
 51543 ;;		_USBCheckStdRequest
 51544 ;; This function uses a non-reentrant model
 51545 ;;
 51546                           
 51547                           	psect	text218
 51548  013562                     __ptext218:
 51549                           	opt stack 0
 51550  013562                     _USBStdGetStatusHandler:
 51551                           	opt stack 13
 51552                           
 51553                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 51554                           
 51555                           ;incstack = 0
 51556  013562  0E00               	movlw	0
 51557  013564  010D               	movlb	13	; () banked
 51558  013566  6F38               	movwf	56,b	;volatile
 51559                           
 51560                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 51561  013568  0E00               	movlw	0
 51562  01356A  6F39               	movwf	57,b	;volatile
 51563                           
 51564                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 51565  01356C  D035               	goto	i2l293
 51566  01356E                     i2l294:
 51567                           
 51568                           ; BSR set to: 13
 51569                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 51570  01356E  8E4F               	bsf	_inPipes+3,7,c	;volatile
 51571                           
 51572                           ; BSR set to: 13
 51573                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 51574                           
 51575                           ; BSR set to: 13
 51576                           
 51577                           ; BSR set to: 13
 51578                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 51579                           
 51580                           ;usb_device.c: 2144: if(0 == 1)
 51581  013570  0101               	movlb	1	; () banked
 51582  013572  0561               	decf	_RemoteWakeup& (0+255),w,b	;volatile
 51583  013574  A4D8               	btfss	status,2,c
 51584  013576  D03B               	goto	i2l297
 51585                           
 51586                           ; BSR set to: 1
 51587                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 51588  013578  010D               	movlb	13	; () banked
 51589  01357A  8338               	bsf	56,1,b	;volatile
 51590                           
 51591                           ; BSR set to: 13
 51592                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 51593  01357C  D038               	goto	i2l297
 51594  01357E                     i2l298:
 51595                           
 51596                           ; BSR set to: 13
 51597                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 51598  01357E  8E4F               	bsf	_inPipes+3,7,c	;volatile
 51599                           
 51600                           ;usb_device.c: 2156: break;
 51601  013580  D036               	goto	i2l297
 51602  013582                     i2l299:
 51603                           
 51604                           ; BSR set to: 13
 51605                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 51606  013582  8E4F               	bsf	_inPipes+3,7,c	;volatile
 51607                           
 51608                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 51609  013584  BF34               	btfsc	52,7,b	;volatile
 51610  013586  D00A               	goto	i2l300
 51611                           
 51612                           ; BSR set to: 13
 51613                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 51614  013588  5134               	movf	52,w,b	;volatile
 51615  01358A  0B0F               	andlw	15
 51616  01358C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 51617  01358E  5001               	movf	??_USBStdGetStatusHandler,w,c
 51618  013590  0D02               	mullw	2
 51619  013592  0E1B               	movlw	low _pBDTEntryOut
 51620  013594  24F3               	addwf	prodl,w,c
 51621  013596  6ED9               	movwf	fsr2l,c
 51622  013598  0E01               	movlw	high _pBDTEntryOut
 51623  01359A  D009               	goto	L73
 51624  01359C                     i2l300:
 51625                           
 51626                           ; BSR set to: 13
 51627                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 51628                           
 51629                           ; BSR set to: 13
 51630  01359C  5134               	movf	52,w,b	;volatile
 51631  01359E  0B0F               	andlw	15
 51632  0135A0  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 51633  0135A2  5001               	movf	??_USBStdGetStatusHandler,w,c
 51634  0135A4  0D02               	mullw	2
 51635  0135A6  0E52               	movlw	low _pBDTEntryIn
 51636  0135A8  24F3               	addwf	prodl,w,c
 51637  0135AA  6ED9               	movwf	fsr2l,c
 51638  0135AC  0E00               	movlw	high _pBDTEntryIn
 51639  0135AE                     L73:
 51640  0135AE  20F4               	addwfc	prodh,w,c
 51641  0135B0  6EDA               	movwf	fsr2h,c
 51642  0135B2  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 51643  0135B6  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 51644                           
 51645                           ; BSR set to: 13
 51646                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 51647                           
 51648                           ; BSR set to: 13
 51649  0135BA  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 51650  0135BE  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 51651  0135C2  AEDF               	btfss	indf2,7,c
 51652  0135C4  D014               	goto	i2l297
 51653                           
 51654                           ; BSR set to: 13
 51655  0135C6  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 51656  0135CA  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 51657  0135CE  A4DF               	btfss	indf2,2,c
 51658  0135D0  D00E               	goto	i2l297
 51659                           
 51660                           ; BSR set to: 13
 51661                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 51662  0135D2  0E01               	movlw	1
 51663  0135D4  6F38               	movwf	56,b	;volatile
 51664                           
 51665                           ; BSR set to: 13
 51666                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 51667                           
 51668                           ; BSR set to: 13
 51669                           ;usb_device.c: 2176: break;
 51670  0135D6  D00B               	goto	i2l297
 51671  0135D8                     i2l293:
 51672                           
 51673                           ; BSR set to: 13
 51674                           
 51675                           ; BSR set to: 13
 51676  0135D8  5130               	movf	48,w,b	;volatile
 51677  0135DA  0B1F               	andlw	31
 51678                           
 51679                           ; Switch size 1, requested type "space"
 51680                           ; Number of cases is 3, Range of values is 0 to 2
 51681                           ; switch strategies available:
 51682                           ; Name         Instructions Cycles
 51683                           ; simple_byte           10     6 (average)
 51684                           ;	Chosen strategy is simple_byte
 51685  0135DC  0A00               	xorlw	0	; case 0
 51686  0135DE  B4D8               	btfsc	status,2,c
 51687  0135E0  D7C6               	goto	i2l294
 51688  0135E2  0A01               	xorlw	1	; case 1
 51689  0135E4  B4D8               	btfsc	status,2,c
 51690  0135E6  D7CB               	goto	i2l298
 51691  0135E8  0A03               	xorlw	3	; case 2
 51692  0135EA  B4D8               	btfsc	status,2,c
 51693  0135EC  D7CA               	goto	i2l299
 51694  0135EE                     i2l297:
 51695                           
 51696                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 51697  0135EE  AE4F               	btfss	_inPipes+3,7,c	;volatile
 51698  0135F0  0012               	return	
 51699                           
 51700                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 51701  0135F2  0E38               	movlw	56
 51702  0135F4  6E4C               	movwf	_inPipes,c	;volatile
 51703  0135F6  0E0D               	movlw	13
 51704  0135F8  6E4D               	movwf	_inPipes+1,c	;volatile
 51705                           
 51706                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 51707  0135FA  804F               	bsf	_inPipes+3,0,c	;volatile
 51708                           
 51709                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 51710  0135FC  0E02               	movlw	2
 51711  0135FE  6E50               	movwf	_inPipes+4,c	;volatile
 51712  013600  0012               	return	
 51713  013602                     __end_of_USBStdGetStatusHandler:
 51714                           	opt stack 0
 51715                           tosu	equ	0xFFF
 51716                           tosh	equ	0xFFE
 51717                           tosl	equ	0xFFD
 51718                           pclatu	equ	0xFFB
 51719                           pclath	equ	0xFFA
 51720                           tblptru	equ	0xFF8
 51721                           tblptrh	equ	0xFF7
 51722                           tblptrl	equ	0xFF6
 51723                           tablat	equ	0xFF5
 51724                           prodh	equ	0xFF4
 51725                           prodl	equ	0xFF3
 51726                           intcon	equ	0xFF2
 51727                           indf0	equ	0xFEF
 51728                           postinc0	equ	0xFEE
 51729                           fsr0h	equ	0xFEA
 51730                           fsr0l	equ	0xFE9
 51731                           wreg	equ	0xFE8
 51732                           indf1	equ	0xFE7
 51733                           postinc1	equ	0xFE6
 51734                           postdec1	equ	0xFE5
 51735                           plusw1	equ	0xFE3
 51736                           fsr1h	equ	0xFE2
 51737                           fsr1l	equ	0xFE1
 51738                           indf2	equ	0xFDF
 51739                           postinc2	equ	0xFDE
 51740                           postdec2	equ	0xFDD
 51741                           plusw2	equ	0xFDB
 51742                           fsr2h	equ	0xFDA
 51743                           fsr2l	equ	0xFD9
 51744                           status	equ	0xFD8
 51745                           
 51746 ;; *************** function _USBStdGetDscHandler *****************
 51747 ;; Defined at:
 51748 ;;		line 2045 in file "usb_device.c"
 51749 ;; Parameters:    Size  Location     Type
 51750 ;;		None
 51751 ;; Auto vars:     Size  Location     Type
 51752 ;;		None
 51753 ;; Return value:  Size  Location     Type
 51754 ;;                  1    wreg      void 
 51755 ;; Registers used:
 51756 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 51757 ;; Tracked objects:
 51758 ;;		On entry : 0/0
 51759 ;;		On exit  : 0/0
 51760 ;;		Unchanged: 0/0
 51761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 51762 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51763 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51764 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51765 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 51766 ;;Total ram usage:        2 bytes
 51767 ;; Hardware stack levels used:    1
 51768 ;; This function calls:
 51769 ;;		Nothing
 51770 ;; This function is called by:
 51771 ;;		_USBCheckStdRequest
 51772 ;; This function uses a non-reentrant model
 51773 ;;
 51774                           
 51775                           	psect	text219
 51776  010820                     __ptext219:
 51777                           	opt stack 0
 51778  010820                     _USBStdGetDscHandler:
 51779                           	opt stack 13
 51780                           
 51781                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 51782                           
 51783                           ;incstack = 0
 51784  010820  0E80               	movlw	128
 51785  010822  010D               	movlb	13	; () banked
 51786  010824  1930               	xorwf	48,w,b	;volatile
 51787  010826  A4D8               	btfss	status,2,c
 51788  010828  0012               	return	
 51789                           
 51790                           ; BSR set to: 13
 51791                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 51792  01082A  0EC0               	movlw	192
 51793  01082C  6E4F               	movwf	_inPipes+3,c	;volatile
 51794                           
 51795                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 51796  01082E  D082               	goto	i2l280
 51797  010830                     
 51798                           ; BSR set to: 13
 51799                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 51800                           
 51801                           ; BSR set to: 13
 51802  010830  0E5B               	movlw	low _device_dsc
 51803  010832  6E4C               	movwf	_inPipes,c	;volatile
 51804  010834  0EA2               	movlw	high _device_dsc
 51805  010836  6E4D               	movwf	_inPipes+1,c	;volatile
 51806                           
 51807                           ; BSR set to: 13
 51808                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 51809  010838  0E00               	movlw	0
 51810  01083A  6E51               	movwf	_inPipes+5,c	;volatile
 51811  01083C  0E12               	movlw	18
 51812  01083E  6E50               	movwf	_inPipes+4,c	;volatile
 51813                           
 51814                           ;usb_device.c: 2060: break;
 51815  010840  0012               	return	
 51816  010842                     
 51817                           ; BSR set to: 13
 51818                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 51819                           
 51820                           ; BSR set to: 13
 51821  010842  5132               	movf	50,w,b	;volatile
 51822  010844  A4D8               	btfss	status,2,c
 51823  010846  D042               	goto	i2l284
 51824                           
 51825                           ; BSR set to: 13
 51826                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 51827  010848  5132               	movf	50,w,b	;volatile
 51828  01084A  0D02               	mullw	2
 51829  01084C  0EEC               	movlw	low _USB_CD_Ptr
 51830  01084E  24F3               	addwf	prodl,w,c
 51831  010850  6EF6               	movwf	tblptrl,c
 51832  010852  0E9D               	movlw	high _USB_CD_Ptr
 51833  010854  20F4               	addwfc	prodh,w,c
 51834  010856  6EF7               	movwf	tblptrh,c
 51835  010858                     	if	1	;There are 3 active tblptr bytes
 51836  010858  6AF8               	clrf	tblptru,c
 51837  01085A  0E00               	movlw	low (__mediumconst shr (0+16))
 51838  01085C  22F8               	addwfc	tblptru,f,c
 51839  01085E                     	endif
 51840  01085E  0009               	tblrd		*+
 51841  010860  CFF5 F04C          	movff	tablat,_inPipes	;volatile
 51842  010864  000A               	tblrd		*-
 51843  010866  CFF5 F04D          	movff	tablat,_inPipes+1	;volatile
 51844                           
 51845                           ; BSR set to: 13
 51846                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 51847  01086A  0E02               	movlw	2
 51848  01086C  244C               	addwf	_inPipes,w,c	;volatile
 51849  01086E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51850  010870  0E00               	movlw	0
 51851  010872  204D               	addwfc	_inPipes+1,w,c	;volatile
 51852  010874  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 51853  010876  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 51854  01087A  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 51855  01087E  0E00               	movlw	low (__mediumconst shr (0+16))
 51856  010880  6EF8               	movwf	tblptru,c
 51857  010882  0E0E               	movlw	(high __ramtop+-1)
 51858  010884  64F7               	cpfsgt	tblptrh,c
 51859  010886  D003               	bra	i2u1201_47
 51860  010888  0008               	tblrd		*
 51861  01088A  50F5               	movf	tablat,w,c
 51862  01088C  D005               	bra	i2u1201_40
 51863  01088E                     i2u1201_47:
 51864  01088E  CFF6 FFE9          	movff	tblptrl,fsr0l
 51865  010892  CFF7 FFEA          	movff	tblptrh,fsr0h
 51866  010896  50EF               	movf	indf0,w,c
 51867  010898                     i2u1201_40:
 51868  010898  6E50               	movwf	_inPipes+4,c	;volatile
 51869                           
 51870                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 51871  01089A  0E03               	movlw	3
 51872  01089C  244C               	addwf	_inPipes,w,c	;volatile
 51873  01089E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51874  0108A0  0E00               	movlw	0
 51875  0108A2  204D               	addwfc	_inPipes+1,w,c	;volatile
 51876  0108A4  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 51877  0108A6  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 51878  0108AA  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 51879  0108AE  0E00               	movlw	low (__mediumconst shr (0+16))
 51880  0108B0  6EF8               	movwf	tblptru,c
 51881  0108B2  0E0E               	movlw	(high __ramtop+-1)
 51882  0108B4  64F7               	cpfsgt	tblptrh,c
 51883  0108B6  D003               	bra	i2u1202_47
 51884  0108B8  0008               	tblrd		*
 51885  0108BA  50F5               	movf	tablat,w,c
 51886  0108BC  D005               	bra	i2u1202_40
 51887  0108BE                     i2u1202_47:
 51888  0108BE  CFF6 FFE9          	movff	tblptrl,fsr0l
 51889  0108C2  CFF7 FFEA          	movff	tblptrh,fsr0h
 51890  0108C6  50EF               	movf	indf0,w,c
 51891  0108C8                     i2u1202_40:
 51892  0108C8  6E51               	movwf	_inPipes+5,c	;volatile
 51893                           
 51894                           ;usb_device.c: 2078: }
 51895  0108CA  0012               	return	
 51896  0108CC                     i2l284:
 51897                           
 51898                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 51899  0108CC  0E00               	movlw	0
 51900  0108CE  6E4F               	movwf	_inPipes+3,c	;volatile
 51901                           
 51902                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 51903  0108D0  0012               	return	
 51904  0108D2                     
 51905                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 51906  0108D2  0E04               	movlw	4
 51907  0108D4  010D               	movlb	13	; () banked
 51908  0108D6  6132               	cpfslt	50,b	;volatile
 51909  0108D8  D027               	goto	i2l287
 51910                           
 51911                           ; BSR set to: 13
 51912                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 51913  0108DA  5132               	movf	50,w,b	;volatile
 51914  0108DC  0D02               	mullw	2
 51915  0108DE  0EE4               	movlw	low _USB_SD_Ptr
 51916  0108E0  24F3               	addwf	prodl,w,c
 51917  0108E2  6EF6               	movwf	tblptrl,c
 51918  0108E4  0E9D               	movlw	high _USB_SD_Ptr
 51919  0108E6  20F4               	addwfc	prodh,w,c
 51920  0108E8  6EF7               	movwf	tblptrh,c
 51921  0108EA                     	if	1	;There are 3 active tblptr bytes
 51922  0108EA  6AF8               	clrf	tblptru,c
 51923  0108EC  0E00               	movlw	low (__mediumconst shr (0+16))
 51924  0108EE  22F8               	addwfc	tblptru,f,c
 51925  0108F0                     	endif
 51926  0108F0  0009               	tblrd		*+
 51927  0108F2  CFF5 F04C          	movff	tablat,_inPipes	;volatile
 51928  0108F6  000A               	tblrd		*-
 51929  0108F8  CFF5 F04D          	movff	tablat,_inPipes+1	;volatile
 51930                           
 51931                           ; BSR set to: 13
 51932                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 51933  0108FC  C04C  FFF6         	movff	_inPipes,tblptrl	;volatile
 51934  010900  C04D  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 51935  010904  0E00               	movlw	low (__mediumconst shr (0+16))
 51936  010906  6EF8               	movwf	tblptru,c
 51937  010908  0E0E               	movlw	(high __ramtop+-1)
 51938  01090A  64F7               	cpfsgt	tblptrh,c
 51939  01090C  D003               	bra	i2u1204_47
 51940  01090E  0008               	tblrd		*
 51941  010910  50F5               	movf	tablat,w,c
 51942  010912  D005               	bra	i2u1204_40
 51943  010914                     i2u1204_47:
 51944  010914  CFF6 FFE9          	movff	tblptrl,fsr0l
 51945  010918  CFF7 FFEA          	movff	tblptrh,fsr0h
 51946  01091C  50EF               	movf	indf0,w,c
 51947  01091E                     i2u1204_40:
 51948  01091E  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 51949  010920  5001               	movf	??_USBStdGetDscHandler,w,c
 51950  010922  6E50               	movwf	_inPipes+4,c	;volatile
 51951  010924  6A51               	clrf	_inPipes+5,c	;volatile
 51952                           
 51953                           ;usb_device.c: 2094: }
 51954  010926  0012               	return	
 51955  010928                     i2l287:
 51956                           
 51957                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 51958  010928  0E00               	movlw	0
 51959  01092A  6E4F               	movwf	_inPipes+3,c	;volatile
 51960                           
 51961                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 51962  01092C  0012               	return	
 51963  01092E                     
 51964                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 51965  01092E  0E00               	movlw	0
 51966  010930  6E4F               	movwf	_inPipes+3,c	;volatile
 51967                           
 51968                           ;usb_device.c: 2112: }
 51969                           
 51970                           ;usb_device.c: 2111: break;
 51971  010932  0012               	return	
 51972  010934                     i2l280:
 51973  010934  010D               	movlb	13	; () banked
 51974  010936  5133               	movf	51,w,b	;volatile
 51975                           
 51976                           ; Switch size 1, requested type "space"
 51977                           ; Number of cases is 3, Range of values is 1 to 3
 51978                           ; switch strategies available:
 51979                           ; Name         Instructions Cycles
 51980                           ; simple_byte           10     6 (average)
 51981                           ;	Chosen strategy is simple_byte
 51982  010938  0A01               	xorlw	1	; case 1
 51983  01093A  B4D8               	btfsc	status,2,c
 51984  01093C  D779               	goto	i2l281
 51985  01093E  0A03               	xorlw	3	; case 2
 51986  010940  B4D8               	btfsc	status,2,c
 51987  010942  D77F               	goto	i2l283
 51988  010944  0A01               	xorlw	1	; case 3
 51989  010946  B4D8               	btfsc	status,2,c
 51990  010948  D7C4               	goto	i2l286
 51991  01094A  D7F1               	goto	i2l289
 51992  01094C                     __end_of_USBStdGetDscHandler:
 51993                           	opt stack 0
 51994                           tosu	equ	0xFFF
 51995                           tosh	equ	0xFFE
 51996                           tosl	equ	0xFFD
 51997                           pclatu	equ	0xFFB
 51998                           pclath	equ	0xFFA
 51999                           tblptru	equ	0xFF8
 52000                           tblptrh	equ	0xFF7
 52001                           tblptrl	equ	0xFF6
 52002                           tablat	equ	0xFF5
 52003                           prodh	equ	0xFF4
 52004                           prodl	equ	0xFF3
 52005                           intcon	equ	0xFF2
 52006                           indf0	equ	0xFEF
 52007                           postinc0	equ	0xFEE
 52008                           fsr0h	equ	0xFEA
 52009                           fsr0l	equ	0xFE9
 52010                           wreg	equ	0xFE8
 52011                           indf1	equ	0xFE7
 52012                           postinc1	equ	0xFE6
 52013                           postdec1	equ	0xFE5
 52014                           plusw1	equ	0xFE3
 52015                           fsr1h	equ	0xFE2
 52016                           fsr1l	equ	0xFE1
 52017                           indf2	equ	0xFDF
 52018                           postinc2	equ	0xFDE
 52019                           postdec2	equ	0xFDD
 52020                           plusw2	equ	0xFDB
 52021                           fsr2h	equ	0xFDA
 52022                           fsr2l	equ	0xFD9
 52023                           status	equ	0xFD8
 52024                           
 52025 ;; *************** function _USBStdFeatureReqHandler *****************
 52026 ;; Defined at:
 52027 ;;		line 2756 in file "usb_device.c"
 52028 ;; Parameters:    Size  Location     Type
 52029 ;;		None
 52030 ;; Auto vars:     Size  Location     Type
 52031 ;;  p               2   27[COMRAM] PTR struct __BDT
 52032 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 52033 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 52034 ;;		 -> UEP0(1), 
 52035 ;;  current_ep_d    1   26[COMRAM] struct .
 52036 ;; Return value:  Size  Location     Type
 52037 ;;                  1    wreg      void 
 52038 ;; Registers used:
 52039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52040 ;; Tracked objects:
 52041 ;;		On entry : 0/0
 52042 ;;		On exit  : 0/0
 52043 ;;		Unchanged: 0/0
 52044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52045 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52046 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52047 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52048 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52049 ;;Total ram usage:        6 bytes
 52050 ;; Hardware stack levels used:    1
 52051 ;; Hardware stack levels required when called:    4
 52052 ;; This function calls:
 52053 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52054 ;; This function is called by:
 52055 ;;		_USBCheckStdRequest
 52056 ;; This function uses a non-reentrant model
 52057 ;;
 52058                           
 52059                           	psect	text220
 52060  00D7FA                     __ptext220:
 52061                           	opt stack 0
 52062  00D7FA                     _USBStdFeatureReqHandler:
 52063                           	opt stack 9
 52064                           
 52065                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 52066                           
 52067                           ;incstack = 0
 52068  00D7FA  010D               	movlb	13	; () banked
 52069  00D7FC  0532               	decf	50,w,b	;volatile
 52070  00D7FE  A4D8               	btfss	status,2,c
 52071  00D800  D00F               	goto	i2l373
 52072                           
 52073                           ; BSR set to: 13
 52074  00D802  5130               	movf	48,w,b	;volatile
 52075  00D804  0B1F               	andlw	31
 52076  00D806  0900               	iorlw	0
 52077  00D808  A4D8               	btfss	status,2,c
 52078  00D80A  D00A               	goto	i2l373
 52079                           
 52080                           ; BSR set to: 13
 52081                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 52082  00D80C  8E4F               	bsf	_inPipes+3,7,c	;volatile
 52083                           
 52084                           ; BSR set to: 13
 52085                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 52086  00D80E  0E03               	movlw	3
 52087  00D810  1931               	xorwf	49,w,b	;volatile
 52088  00D812  A4D8               	btfss	status,2,c
 52089  00D814  D002               	goto	i2l372
 52090                           
 52091                           ; BSR set to: 13
 52092                           ;usb_device.c: 2806: RemoteWakeup = 1;
 52093  00D816  0E01               	movlw	1
 52094  00D818  D001               	goto	L74
 52095  00D81A                     i2l372:
 52096                           
 52097                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 52098                           
 52099                           ; BSR set to: 1
 52100  00D81A  0E00               	movlw	0
 52101  00D81C                     L74:
 52102  00D81C  0101               	movlb	1	; () banked
 52103  00D81E  6F61               	movwf	_RemoteWakeup& (0+255),b	;volatile
 52104  00D820                     i2l373:
 52105                           
 52106                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 52107                           
 52108                           ; BSR set to: 1
 52109  00D820  010D               	movlb	13	; () banked
 52110  00D822  5132               	movf	50,w,b	;volatile
 52111  00D824  A4D8               	btfss	status,2,c
 52112  00D826  0012               	return	
 52113                           
 52114                           ; BSR set to: 13
 52115  00D828  5130               	movf	48,w,b	;volatile
 52116  00D82A  0B1F               	andlw	31
 52117  00D82C  0A02               	xorlw	2
 52118  00D82E  A4D8               	btfss	status,2,c
 52119  00D830  0012               	return	
 52120                           
 52121                           ; BSR set to: 13
 52122  00D832  5134               	movf	52,w,b	;volatile
 52123  00D834  0B0F               	andlw	15
 52124  00D836  0900               	iorlw	0
 52125  00D838  B4D8               	btfsc	status,2,c
 52126  00D83A  0012               	return	
 52127                           
 52128                           ; BSR set to: 13
 52129  00D83C  5134               	movf	52,w,b	;volatile
 52130  00D83E  0B0F               	andlw	15
 52131  00D840  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52132  00D842  0E03               	movlw	3
 52133  00D844  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 52134  00D846  0012               	return	
 52135                           
 52136                           ; BSR set to: 13
 52137  00D848  0E20               	movlw	32
 52138  00D84A  185E               	xorwf	_USBDeviceState,w,c	;volatile
 52139  00D84C  A4D8               	btfss	status,2,c
 52140  00D84E  0012               	return	
 52141                           
 52142                           ; BSR set to: 13
 52143                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 52144  00D850  8E4F               	bsf	_inPipes+3,7,c	;volatile
 52145                           
 52146                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 52147  00D852  BF34               	btfsc	52,7,b	;volatile
 52148  00D854  D019               	goto	i2l375
 52149                           
 52150                           ; BSR set to: 13
 52151                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 52152  00D856  5134               	movf	52,w,b	;volatile
 52153  00D858  0B0F               	andlw	15
 52154  00D85A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52155  00D85C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52156  00D85E  0D02               	mullw	2
 52157  00D860  0E1B               	movlw	low _pBDTEntryOut
 52158  00D862  24F3               	addwf	prodl,w,c
 52159  00D864  6ED9               	movwf	fsr2l,c
 52160  00D866  0E01               	movlw	high _pBDTEntryOut
 52161  00D868  20F4               	addwfc	prodh,w,c
 52162  00D86A  6EDA               	movwf	fsr2h,c
 52163  00D86C  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52164  00D870  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52165                           
 52166                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 52167  00D874  5134               	movf	52,w,b	;volatile
 52168  00D876  0B0F               	andlw	15
 52169  00D878  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52170  00D87A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52171  00D87C  0D01               	mullw	1
 52172  00D87E  0E2D               	movlw	low _ep_data_out
 52173  00D880  24F3               	addwf	prodl,w,c
 52174  00D882  6ED9               	movwf	fsr2l,c
 52175  00D884  0E01               	movlw	high _ep_data_out
 52176  00D886  D018               	goto	L75
 52177  00D888                     i2l375:
 52178                           
 52179                           ; BSR set to: 13
 52180                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 52181                           
 52182                           ; BSR set to: 13
 52183  00D888  5134               	movf	52,w,b	;volatile
 52184  00D88A  0B0F               	andlw	15
 52185  00D88C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52186  00D88E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52187  00D890  0D02               	mullw	2
 52188  00D892  0E52               	movlw	low _pBDTEntryIn
 52189  00D894  24F3               	addwf	prodl,w,c
 52190  00D896  6ED9               	movwf	fsr2l,c
 52191  00D898  0E00               	movlw	high _pBDTEntryIn
 52192  00D89A  20F4               	addwfc	prodh,w,c
 52193  00D89C  6EDA               	movwf	fsr2h,c
 52194  00D89E  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 52195  00D8A2  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 52196                           
 52197                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 52198  00D8A6  5134               	movf	52,w,b	;volatile
 52199  00D8A8  0B0F               	andlw	15
 52200  00D8AA  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52201  00D8AC  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52202  00D8AE  0D01               	mullw	1
 52203  00D8B0  0E30               	movlw	low _ep_data_in
 52204  00D8B2  24F3               	addwf	prodl,w,c
 52205  00D8B4  6ED9               	movwf	fsr2l,c
 52206  00D8B6  0E01               	movlw	high _ep_data_in
 52207  00D8B8                     L75:
 52208  00D8B8  20F4               	addwfc	prodh,w,c
 52209  00D8BA  6EDA               	movwf	fsr2h,c
 52210  00D8BC  50DF               	movf	indf2,w,c
 52211  00D8BE  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 52212                           
 52213                           ; BSR set to: 13
 52214                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 52215                           
 52216                           ; BSR set to: 13
 52217  00D8C0  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 52218  00D8C2  D006               	goto	i2l377
 52219                           
 52220                           ; BSR set to: 13
 52221                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 52222  00D8C4  0EFB               	movlw	251
 52223  00D8C6  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 52224  00D8C8  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52225  00D8CA  0EFF               	movlw	255
 52226  00D8CC  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 52227  00D8CE  D004               	goto	L76
 52228  00D8D0                     i2l377:
 52229                           
 52230                           ; BSR set to: 13
 52231                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 52232                           
 52233                           ; BSR set to: 13
 52234  00D8D0  0E04               	movlw	4
 52235  00D8D2  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 52236  00D8D4  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52237  00D8D6  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52238  00D8D8                     L76:
 52239  00D8D8  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52240                           
 52241                           ; BSR set to: 13
 52242                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 52243                           
 52244                           ; BSR set to: 13
 52245  00D8DA  BF34               	btfsc	52,7,b	;volatile
 52246  00D8DC  D00A               	goto	i2l379
 52247                           
 52248                           ; BSR set to: 13
 52249                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 52250  00D8DE  5134               	movf	52,w,b	;volatile
 52251  00D8E0  0B0F               	andlw	15
 52252  00D8E2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52253  00D8E4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52254  00D8E6  0D02               	mullw	2
 52255  00D8E8  0E1B               	movlw	low _pBDTEntryOut
 52256  00D8EA  24F3               	addwf	prodl,w,c
 52257  00D8EC  6ED9               	movwf	fsr2l,c
 52258  00D8EE  0E01               	movlw	high _pBDTEntryOut
 52259  00D8F0  D009               	goto	L77
 52260  00D8F2                     i2l379:
 52261                           
 52262                           ; BSR set to: 13
 52263                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 52264                           
 52265                           ; BSR set to: 13
 52266  00D8F2  5134               	movf	52,w,b	;volatile
 52267  00D8F4  0B0F               	andlw	15
 52268  00D8F6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52269  00D8F8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52270  00D8FA  0D02               	mullw	2
 52271  00D8FC  0E52               	movlw	low _pBDTEntryIn
 52272  00D8FE  24F3               	addwf	prodl,w,c
 52273  00D900  6ED9               	movwf	fsr2l,c
 52274  00D902  0E00               	movlw	high _pBDTEntryIn
 52275  00D904                     L77:
 52276  00D904  20F4               	addwfc	prodh,w,c
 52277  00D906  6EDA               	movwf	fsr2h,c
 52278  00D908  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 52279  00D90C  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 52280                           
 52281                           ; BSR set to: 13
 52282                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 52283                           
 52284                           ; BSR set to: 13
 52285  00D910  0E03               	movlw	3
 52286  00D912  1931               	xorwf	49,w,b	;volatile
 52287  00D914  A4D8               	btfss	status,2,c
 52288  00D916  D02D               	goto	i2l381
 52289                           
 52290                           ; BSR set to: 13
 52291                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 52292  00D918  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52293  00D91C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52294  00D920  AEDF               	btfss	indf2,7,c
 52295  00D922  D01A               	goto	i2l384
 52296                           
 52297                           ; BSR set to: 13
 52298                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 52299  00D924  BF34               	btfsc	52,7,b	;volatile
 52300  00D926  D00A               	goto	i2l383
 52301                           
 52302                           ; BSR set to: 13
 52303                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 52304  00D928  5134               	movf	52,w,b	;volatile
 52305  00D92A  0B0F               	andlw	15
 52306  00D92C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52307  00D92E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52308  00D930  0D01               	mullw	1
 52309  00D932  0E2D               	movlw	low _ep_data_out
 52310  00D934  24F3               	addwf	prodl,w,c
 52311  00D936  6ED9               	movwf	fsr2l,c
 52312  00D938  0E01               	movlw	high _ep_data_out
 52313  00D93A  D00A               	goto	L78
 52314  00D93C                     i2l383:
 52315                           
 52316                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 52317                           
 52318                           ; BSR set to: 1
 52319  00D93C  010D               	movlb	13	; () banked
 52320  00D93E  5134               	movf	52,w,b	;volatile
 52321  00D940  0B0F               	andlw	15
 52322  00D942  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52323  00D944  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52324  00D946  0D01               	mullw	1
 52325  00D948  0E30               	movlw	low _ep_data_in
 52326  00D94A  24F3               	addwf	prodl,w,c
 52327  00D94C  6ED9               	movwf	fsr2l,c
 52328  00D94E  0E01               	movlw	high _ep_data_in
 52329  00D950                     L78:
 52330  00D950  20F4               	addwfc	prodh,w,c
 52331  00D952  6EDA               	movwf	fsr2h,c
 52332  00D954  0101               	movlb	1	; () banked
 52333  00D956  82DF               	bsf	indf2,1,c
 52334  00D958                     i2l384:
 52335                           
 52336                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 52337                           
 52338                           ; BSR set to: 1
 52339                           
 52340                           ; BSR set to: 1
 52341  00D958  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52342  00D95C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52343  00D960  0E00               	movlw	0
 52344  00D962  84DB               	bsf	plusw2,2,c
 52345                           
 52346                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 52347  00D964  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52348  00D968  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52349  00D96C  0E00               	movlw	0
 52350  00D96E  8EDB               	bsf	plusw2,7,c
 52351                           
 52352                           ;usb_device.c: 2878: }
 52353  00D970  0012               	return	
 52354  00D972                     i2l381:
 52355                           
 52356                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 52357  00D972  0E04               	movlw	4
 52358  00D974  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52359  00D976  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52360  00D978  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52361  00D97A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52362                           
 52363                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 52364  00D97C  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52365  00D980  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52366  00D984  AEDF               	btfss	indf2,7,c
 52367  00D986  D01B               	goto	i2l386
 52368                           
 52369                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 52370  00D988  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52371  00D98C  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52372  00D990  0E7F               	movlw	127
 52373  00D992  16DF               	andwf	indf2,f,c
 52374                           
 52375                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 52376  00D994  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52377  00D998  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52378  00D99C  0E00               	movlw	0
 52379  00D99E  8CDB               	bsf	plusw2,6,c
 52380                           
 52381                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52382  00D9A0  0E00               	movlw	0
 52383  00D9A2  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52384  00D9A4  0E05               	movlw	5
 52385  00D9A6  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52386  00D9A8  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52387  00D9AC  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52388  00D9B0  0E00               	movlw	0
 52389  00D9B2  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52390  00D9B4  0E02               	movlw	2
 52391  00D9B6  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52392  00D9B8  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52393                           
 52394                           ;usb_device.c: 2893: }
 52395  00D9BC  D006               	goto	i2l387
 52396  00D9BE                     i2l386:
 52397                           
 52398                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 52399  00D9BE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52400  00D9C2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52401  00D9C6  0E00               	movlw	0
 52402  00D9C8  8CDB               	bsf	plusw2,6,c
 52403  00D9CA                     i2l387:
 52404                           
 52405                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 52406  00D9CA  0E04               	movlw	4
 52407  00D9CC  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 52408  00D9CE  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 52409  00D9D0  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 52410  00D9D2  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 52411                           
 52412                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 52413  00D9D4  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 52414  00D9D6  D006               	goto	i2u1226_40
 52415  00D9D8  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52416  00D9DC  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52417  00D9E0  AEDF               	btfss	indf2,7,c
 52418  00D9E2  D030               	goto	i2l388
 52419  00D9E4                     i2u1226_40:
 52420                           
 52421                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 52422  00D9E4  010D               	movlb	13	; () banked
 52423  00D9E6  BF34               	btfsc	52,7,b	;volatile
 52424  00D9E8  D00A               	goto	i2l391
 52425                           
 52426                           ; BSR set to: 13
 52427                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 52428  00D9EA  5134               	movf	52,w,b	;volatile
 52429  00D9EC  0B0F               	andlw	15
 52430  00D9EE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52431  00D9F0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52432  00D9F2  0D01               	mullw	1
 52433  00D9F4  0E2D               	movlw	low _ep_data_out
 52434  00D9F6  24F3               	addwf	prodl,w,c
 52435  00D9F8  6ED9               	movwf	fsr2l,c
 52436  00D9FA  0E01               	movlw	high _ep_data_out
 52437  00D9FC  D00A               	goto	L79
 52438  00D9FE                     i2l391:
 52439                           
 52440                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 52441                           
 52442                           ; BSR set to: 1
 52443  00D9FE  010D               	movlb	13	; () banked
 52444  00DA00  5134               	movf	52,w,b	;volatile
 52445  00DA02  0B0F               	andlw	15
 52446  00DA04  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52447  00DA06  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52448  00DA08  0D01               	mullw	1
 52449  00DA0A  0E30               	movlw	low _ep_data_in
 52450  00DA0C  24F3               	addwf	prodl,w,c
 52451  00DA0E  6ED9               	movwf	fsr2l,c
 52452  00DA10  0E01               	movlw	high _ep_data_in
 52453  00DA12                     L79:
 52454  00DA12  20F4               	addwfc	prodh,w,c
 52455  00DA14  6EDA               	movwf	fsr2h,c
 52456  00DA16  0101               	movlb	1	; () banked
 52457  00DA18  92DF               	bcf	indf2,1,c
 52458                           
 52459                           ; BSR set to: 1
 52460                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 52461                           
 52462                           ; BSR set to: 1
 52463  00DA1A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52464  00DA1E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52465  00DA22  0E3B               	movlw	59
 52466  00DA24  16DF               	andwf	indf2,f,c
 52467                           
 52468                           ; BSR set to: 1
 52469                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 52470  00DA26  0E00               	movlw	0
 52471  00DA28  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 52472  00DA2A  0E05               	movlw	5
 52473  00DA2C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 52474  00DA2E  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 52475  00DA32  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 52476  00DA36  0E00               	movlw	0
 52477  00DA38  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 52478  00DA3A  0E02               	movlw	2
 52479  00DA3C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 52480  00DA3E  ECC5  F09E         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 52481                           
 52482                           ;usb_device.c: 2923: }
 52483  00DA42  D006               	goto	i2l393
 52484  00DA44                     i2l388:
 52485                           
 52486                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 52487  00DA44  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 52488  00DA48  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 52489  00DA4C  0E3B               	movlw	59
 52490  00DA4E  16DF               	andwf	indf2,f,c
 52491  00DA50                     i2l393:
 52492                           
 52493                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 52494  00DA50  010D               	movlb	13	; () banked
 52495  00DA52  5134               	movf	52,w,b	;volatile
 52496  00DA54  0B0F               	andlw	15
 52497  00DA56  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 52498  00DA58  5018               	movf	??_USBStdFeatureReqHandler,w,c
 52499  00DA5A  0D01               	mullw	1
 52500  00DA5C  0E26               	movlw	38
 52501  00DA5E  24F3               	addwf	prodl,w,c
 52502  00DA60  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 52503  00DA62  0E0F               	movlw	15
 52504  00DA64  20F4               	addwfc	prodh,w,c
 52505  00DA66  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 52506                           
 52507                           ; BSR set to: 13
 52508                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 52509  00DA68  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 52510  00DA6C  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 52511  00DA70  0EFE               	movlw	254
 52512  00DA72  16DF               	andwf	indf2,f,c
 52513                           
 52514                           ; BSR set to: 13
 52515  00DA74  0012               	return	
 52516  00DA76                     __end_of_USBStdFeatureReqHandler:
 52517                           	opt stack 0
 52518                           tosu	equ	0xFFF
 52519                           tosh	equ	0xFFE
 52520                           tosl	equ	0xFFD
 52521                           pclatu	equ	0xFFB
 52522                           pclath	equ	0xFFA
 52523                           tblptru	equ	0xFF8
 52524                           tblptrh	equ	0xFF7
 52525                           tblptrl	equ	0xFF6
 52526                           tablat	equ	0xFF5
 52527                           prodh	equ	0xFF4
 52528                           prodl	equ	0xFF3
 52529                           intcon	equ	0xFF2
 52530                           indf0	equ	0xFEF
 52531                           postinc0	equ	0xFEE
 52532                           fsr0h	equ	0xFEA
 52533                           fsr0l	equ	0xFE9
 52534                           wreg	equ	0xFE8
 52535                           indf1	equ	0xFE7
 52536                           postinc1	equ	0xFE6
 52537                           postdec1	equ	0xFE5
 52538                           plusw1	equ	0xFE3
 52539                           fsr1h	equ	0xFE2
 52540                           fsr1l	equ	0xFE1
 52541                           indf2	equ	0xFDF
 52542                           postinc2	equ	0xFDE
 52543                           postdec2	equ	0xFDD
 52544                           plusw2	equ	0xFDB
 52545                           fsr2h	equ	0xFDA
 52546                           fsr2l	equ	0xFD9
 52547                           status	equ	0xFD8
 52548                           
 52549 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 52550 ;; Defined at:
 52551 ;;		line 54 in file "usb_events.c"
 52552 ;; Parameters:    Size  Location     Type
 52553 ;;  event           2   15[COMRAM] enum E6832
 52554 ;;  pdata           2   17[COMRAM] PTR void 
 52555 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 52556 ;;		 -> BDT(48), 
 52557 ;;  size            2   19[COMRAM] unsigned int 
 52558 ;; Auto vars:     Size  Location     Type
 52559 ;;		None
 52560 ;; Return value:  Size  Location     Type
 52561 ;;                  1    wreg      unsigned char 
 52562 ;; Registers used:
 52563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 52564 ;; Tracked objects:
 52565 ;;		On entry : 0/0
 52566 ;;		On exit  : 0/0
 52567 ;;		Unchanged: 0/0
 52568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52569 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52571 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52572 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52573 ;;Total ram usage:        8 bytes
 52574 ;; Hardware stack levels used:    1
 52575 ;; Hardware stack levels required when called:    3
 52576 ;; This function calls:
 52577 ;;		_APP_DeviceCustomHIDInitialize
 52578 ;;		_APP_DeviceMSDInitialize
 52579 ;;		_MSDTransferTerminated
 52580 ;;		_USBCheckHIDRequest
 52581 ;;		_USBCheckMSDRequest
 52582 ;;		i2_SYSTEM_Initialize
 52583 ;; This function is called by:
 52584 ;;		_USBDeviceTasks
 52585 ;;		_USBStdSetCfgHandler
 52586 ;;		_USBSuspend
 52587 ;;		_USBWakeFromSuspend
 52588 ;;		_USBCtrlTrfSetupHandler
 52589 ;;		_USBCheckStdRequest
 52590 ;;		_USBStdFeatureReqHandler
 52591 ;; This function uses a non-reentrant model
 52592 ;;
 52593                           
 52594                           	psect	text221
 52595  013D8A                     __ptext221:
 52596                           	opt stack 0
 52597  013D8A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 52598                           	opt stack 13
 52599                           
 52600                           ;usb_events.c: 56: switch((int)event)
 52601                           
 52602                           ;incstack = 0
 52603  013D8A  D019               	goto	i2l816
 52604  013D8C                     
 52605                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 52606  013D8C  0E01               	movlw	1
 52607  013D8E  EC40  F0A7         	call	i2_SYSTEM_Initialize
 52608                           
 52609                           ;usb_events.c: 79: break;
 52610  013D92  0012               	return	
 52611  013D94                     
 52612                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 52613  013D94  0E02               	movlw	2
 52614  013D96  EC40  F0A7         	call	i2_SYSTEM_Initialize
 52615                           
 52616                           ;usb_events.c: 90: break;
 52617  013D9A  0012               	return	
 52618  013D9C                     
 52619                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 52620  013D9C  EC7C  F0AB         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 52621                           
 52622                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 52623  013DA0  EC7C  F0AE         	call	_APP_DeviceMSDInitialize	;wreg free
 52624                           
 52625                           ;usb_events.c: 100: break;
 52626                           
 52627                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 52628                           
 52629                           ;usb_events.c: 97: break;
 52630  013DA4  0012               	return	
 52631  013DA6                     
 52632                           ;usb_events.c: 105: USBCheckHIDRequest();
 52633  013DA6  ECBC  F093         	call	_USBCheckHIDRequest	;wreg free
 52634                           
 52635                           ;usb_events.c: 108: USBCheckMSDRequest();
 52636  013DAA  ECE9  F096         	call	_USBCheckMSDRequest	;wreg free
 52637                           
 52638                           ;usb_events.c: 112: break;
 52639                           
 52640                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 52641                           
 52642                           ;usb_events.c: 109: break;
 52643  013DAE  0012               	return	
 52644  013DB0                     
 52645                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 52646  013DB0  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 52647  013DB4  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 52648  013DB8  EC97  F0A6         	call	_MSDTransferTerminated	;wreg free
 52649                           
 52650                           ;usb_events.c: 129: }
 52651                           
 52652                           ;usb_events.c: 128: break;
 52653                           
 52654                           ;usb_events.c: 127: default:
 52655                           
 52656                           ;usb_events.c: 125: break;
 52657  013DBC  0012               	return	
 52658  013DBE                     i2l816:
 52659  013DBE  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 52660  013DC2  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 52661                           
 52662                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 52663                           ; Switch size 1, requested type "space"
 52664                           ; Number of cases is 2, Range of values is 0 to 127
 52665                           ; switch strategies available:
 52666                           ; Name         Instructions Cycles
 52667                           ; simple_byte            7     4 (average)
 52668                           ;	Chosen strategy is simple_byte
 52669  013DC6  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 52670  013DC8  0A00               	xorlw	0	; case 0
 52671  013DCA  B4D8               	btfsc	status,2,c
 52672  013DCC  D004               	goto	i2l20016
 52673  013DCE  0A7F               	xorlw	127	; case 127
 52674  013DD0  A4D8               	btfss	status,2,c
 52675  013DD2  0012               	return	
 52676  013DD4  D01A               	goto	i2l20018
 52677  013DD6                     i2l20016:
 52678                           
 52679                           ; Switch size 1, requested type "space"
 52680                           ; Number of cases is 8, Range of values is 1 to 117
 52681                           ; switch strategies available:
 52682                           ; Name         Instructions Cycles
 52683                           ; simple_byte           25    13 (average)
 52684                           ;	Chosen strategy is simple_byte
 52685  013DD6  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 52686  013DD8  0A01               	xorlw	1	; case 1
 52687  013DDA  B4D8               	btfsc	status,2,c
 52688  013DDC  D7DF               	goto	i2l822
 52689  013DDE  0A03               	xorlw	3	; case 2
 52690  013DE0  B4D8               	btfsc	status,2,c
 52691  013DE2  0012               	return	
 52692  013DE4  0A01               	xorlw	1	; case 3
 52693  013DE6  B4D8               	btfsc	status,2,c
 52694  013DE8  D7DE               	goto	i2l824
 52695  013DEA  0A06               	xorlw	6	; case 5
 52696  013DEC  B4D8               	btfsc	status,2,c
 52697  013DEE  D7E0               	goto	i2l826
 52698  013DF0  0A77               	xorlw	119	; case 114
 52699  013DF2  B4D8               	btfsc	status,2,c
 52700  013DF4  0012               	return	
 52701  013DF6  0A01               	xorlw	1	; case 115
 52702  013DF8  B4D8               	btfsc	status,2,c
 52703  013DFA  0012               	return	
 52704  013DFC  0A07               	xorlw	7	; case 116
 52705  013DFE  B4D8               	btfsc	status,2,c
 52706  013E00  D7C9               	goto	i2l821
 52707  013E02  0A01               	xorlw	1	; case 117
 52708  013E04  A4D8               	btfss	status,2,c
 52709  013E06  0012               	return	
 52710  013E08  D7C1               	goto	i2l820
 52711  013E0A                     i2l20018:
 52712                           
 52713                           ; Switch size 1, requested type "space"
 52714                           ; Number of cases is 1, Range of values is 255 to 255
 52715                           ; switch strategies available:
 52716                           ; Name         Instructions Cycles
 52717                           ; simple_byte            4     3 (average)
 52718                           ;	Chosen strategy is simple_byte
 52719  013E0A  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 52720  013E0C  0AFF               	xorlw	255	; case 255
 52721  013E0E  0012               	return	
 52722  013E10                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 52723                           	opt stack 0
 52724                           tosu	equ	0xFFF
 52725                           tosh	equ	0xFFE
 52726                           tosl	equ	0xFFD
 52727                           pclatu	equ	0xFFB
 52728                           pclath	equ	0xFFA
 52729                           tblptru	equ	0xFF8
 52730                           tblptrh	equ	0xFF7
 52731                           tblptrl	equ	0xFF6
 52732                           tablat	equ	0xFF5
 52733                           prodh	equ	0xFF4
 52734                           prodl	equ	0xFF3
 52735                           intcon	equ	0xFF2
 52736                           indf0	equ	0xFEF
 52737                           postinc0	equ	0xFEE
 52738                           fsr0h	equ	0xFEA
 52739                           fsr0l	equ	0xFE9
 52740                           wreg	equ	0xFE8
 52741                           indf1	equ	0xFE7
 52742                           postinc1	equ	0xFE6
 52743                           postdec1	equ	0xFE5
 52744                           plusw1	equ	0xFE3
 52745                           fsr1h	equ	0xFE2
 52746                           fsr1l	equ	0xFE1
 52747                           indf2	equ	0xFDF
 52748                           postinc2	equ	0xFDE
 52749                           postdec2	equ	0xFDD
 52750                           plusw2	equ	0xFDB
 52751                           fsr2h	equ	0xFDA
 52752                           fsr2l	equ	0xFD9
 52753                           status	equ	0xFD8
 52754                           
 52755 ;; *************** function i2_SYSTEM_Initialize *****************
 52756 ;; Defined at:
 52757 ;;		line 39 in file "system.c"
 52758 ;; Parameters:    Size  Location     Type
 52759 ;;  state           1    wreg     enum E6623
 52760 ;; Auto vars:     Size  Location     Type
 52761 ;;  state           1    4[COMRAM] enum E6623
 52762 ;;  SYSTEM_Initi    2    2[COMRAM] unsigned int 
 52763 ;;  SYSTEM_Initi    2    0[COMRAM] unsigned int 
 52764 ;; Return value:  Size  Location     Type
 52765 ;;                  1    wreg      void 
 52766 ;; Registers used:
 52767 ;;		wreg, status,2, status,0
 52768 ;; Tracked objects:
 52769 ;;		On entry : 0/0
 52770 ;;		On exit  : 0/0
 52771 ;;		Unchanged: 0/0
 52772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52774 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52775 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52776 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52777 ;;Total ram usage:        5 bytes
 52778 ;; Hardware stack levels used:    1
 52779 ;; This function calls:
 52780 ;;		Nothing
 52781 ;; This function is called by:
 52782 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52783 ;; This function uses a non-reentrant model
 52784 ;;
 52785                           
 52786                           	psect	text222
 52787  014E80                     __ptext222:
 52788                           	opt stack 0
 52789  014E80                     i2_SYSTEM_Initialize:
 52790                           	opt stack 15
 52791                           
 52792                           ;incstack = 0
 52793                           ;i2SYSTEM_Initialize@state stored from wreg
 52794  014E80  6E05               	movwf	i2SYSTEM_Initialize@state,c
 52795                           
 52796                           ;system.c: 41: switch(state)
 52797  014E82  D01D               	goto	i2l897
 52798  014E84                     
 52799                           ;system.c: 50: {;system.c: 51: unsigned int pll_startup_counter = 600;
 52800  014E84  0E02               	movlw	2
 52801  014E86  6E02               	movwf	i2SYSTEM_Initialize@pll_startup_counter+1,c
 52802  014E88  0E58               	movlw	88
 52803  014E8A  6E01               	movwf	i2SYSTEM_Initialize@pll_startup_counter,c
 52804                           
 52805                           ;system.c: 52: OSCTUNEbits.PLLEN = 1;
 52806  014E8C  8C9B               	bsf	3995,6,c	;volatile
 52807  014E8E                     i2l12916:
 52808  014E8E  0601               	decf	i2SYSTEM_Initialize@pll_startup_counter,f,c
 52809  014E90  A0D8               	btfss	status,0,c
 52810  014E92  0602               	decf	i2SYSTEM_Initialize@pll_startup_counter+1,f,c
 52811  014E94  2801               	incf	i2SYSTEM_Initialize@pll_startup_counter,w,c
 52812  014E96  E1FB               	bnz	i2l12916
 52813  014E98  2802               	incf	i2SYSTEM_Initialize@pll_startup_counter+1,w,c
 52814  014E9A  B4D8               	btfsc	status,2,c
 52815  014E9C  0012               	return	
 52816  014E9E  D7F7               	goto	i2l900
 52817  014EA0                     
 52818                           ;system.c: 78: OSCCON = 0x70;
 52819  014EA0  0E70               	movlw	112
 52820  014EA2  6ED3               	movwf	4051,c	;volatile
 52821                           
 52822                           ;system.c: 84: {;system.c: 85: unsigned int pll_startup_counter = 800;
 52823  014EA4  0E03               	movlw	3
 52824  014EA6  6E04               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,c
 52825  014EA8  0E20               	movlw	32
 52826  014EAA  6E03               	movwf	i2SYSTEM_Initialize@pll_startup_counter_3143,c
 52827  014EAC                     i2l12920:
 52828  014EAC  0603               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143,f,c
 52829  014EAE  A0D8               	btfss	status,0,c
 52830  014EB0  0604               	decf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,f,c
 52831  014EB2  2803               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143,w,c
 52832  014EB4  E1FB               	bnz	i2l12920
 52833  014EB6  2804               	incf	i2SYSTEM_Initialize@pll_startup_counter_3143+1,w,c
 52834  014EB8  B4D8               	btfsc	status,2,c
 52835  014EBA  0012               	return	
 52836  014EBC  D7F7               	goto	i2l906
 52837  014EBE                     i2l897:
 52838  014EBE  5005               	movf	i2SYSTEM_Initialize@state,w,c
 52839                           
 52840                           ; Switch size 1, requested type "space"
 52841                           ; Number of cases is 3, Range of values is 0 to 2
 52842                           ; switch strategies available:
 52843                           ; Name         Instructions Cycles
 52844                           ; simple_byte           10     6 (average)
 52845                           ;	Chosen strategy is simple_byte
 52846  014EC0  0A00               	xorlw	0	; case 0
 52847  014EC2  B4D8               	btfsc	status,2,c
 52848  014EC4  D7DF               	goto	i2l898
 52849  014EC6  0A01               	xorlw	1	; case 1
 52850  014EC8  B4D8               	btfsc	status,2,c
 52851  014ECA  0012               	return	
 52852  014ECC  0A03               	xorlw	3	; case 2
 52853  014ECE  A4D8               	btfss	status,2,c
 52854  014ED0  0012               	return	
 52855  014ED2  D7E6               	goto	i2l904
 52856  014ED4                     __end_ofi2_SYSTEM_Initialize:
 52857                           	opt stack 0
 52858                           tosu	equ	0xFFF
 52859                           tosh	equ	0xFFE
 52860                           tosl	equ	0xFFD
 52861                           pclatu	equ	0xFFB
 52862                           pclath	equ	0xFFA
 52863                           tblptru	equ	0xFF8
 52864                           tblptrh	equ	0xFF7
 52865                           tblptrl	equ	0xFF6
 52866                           tablat	equ	0xFF5
 52867                           prodh	equ	0xFF4
 52868                           prodl	equ	0xFF3
 52869                           intcon	equ	0xFF2
 52870                           indf0	equ	0xFEF
 52871                           postinc0	equ	0xFEE
 52872                           fsr0h	equ	0xFEA
 52873                           fsr0l	equ	0xFE9
 52874                           wreg	equ	0xFE8
 52875                           indf1	equ	0xFE7
 52876                           postinc1	equ	0xFE6
 52877                           postdec1	equ	0xFE5
 52878                           plusw1	equ	0xFE3
 52879                           fsr1h	equ	0xFE2
 52880                           fsr1l	equ	0xFE1
 52881                           indf2	equ	0xFDF
 52882                           postinc2	equ	0xFDE
 52883                           postdec2	equ	0xFDD
 52884                           plusw2	equ	0xFDB
 52885                           fsr2h	equ	0xFDA
 52886                           fsr2l	equ	0xFD9
 52887                           status	equ	0xFD8
 52888                           
 52889 ;; *************** function _USBCheckMSDRequest *****************
 52890 ;; Defined at:
 52891 ;;		line 218 in file "usb_device_msd.c"
 52892 ;; Parameters:    Size  Location     Type
 52893 ;;		None
 52894 ;; Auto vars:     Size  Location     Type
 52895 ;;		None
 52896 ;; Return value:  Size  Location     Type
 52897 ;;                  1    wreg      void 
 52898 ;; Registers used:
 52899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 52900 ;; Tracked objects:
 52901 ;;		On entry : 0/0
 52902 ;;		On exit  : 0/0
 52903 ;;		Unchanged: 0/0
 52904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 52905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52906 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52908 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 52909 ;;Total ram usage:        4 bytes
 52910 ;; Hardware stack levels used:    1
 52911 ;; Hardware stack levels required when called:    1
 52912 ;; This function calls:
 52913 ;;		i2_USBTransferOnePacket
 52914 ;; This function is called by:
 52915 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 52916 ;; This function uses a non-reentrant model
 52917 ;;
 52918                           
 52919                           	psect	text223
 52920  012DD2                     __ptext223:
 52921                           	opt stack 0
 52922  012DD2                     _USBCheckMSDRequest:
 52923                           	opt stack 14
 52924                           
 52925                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 52926                           
 52927                           ;incstack = 0
 52928  012DD2  010D               	movlb	13	; () banked
 52929  012DD4  5130               	movf	48,w,b	;volatile
 52930  012DD6  0B1F               	andlw	31
 52931  012DD8  06E8               	decf	wreg,f,c
 52932  012DDA  A4D8               	btfss	status,2,c
 52933  012DDC  0012               	return	
 52934                           
 52935                           ; BSR set to: 13
 52936                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 52937                           
 52938                           ; BSR set to: 13
 52939                           
 52940                           ; BSR set to: 13
 52941                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 52942  012DDE  5134               	movf	52,w,b	;volatile
 52943  012DE0  A4D8               	btfss	status,2,c
 52944  012DE2  0012               	return	
 52945  012DE4  D04C               	goto	i2l545
 52946  012DE6                     
 52947                           ; BSR set to: 13
 52948                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 52949                           
 52950                           ; BSR set to: 13
 52951  012DE6  5132               	movf	50,w,b	;volatile
 52952  012DE8  1133               	iorwf	51,w,b	;volatile
 52953  012DEA  A4D8               	btfss	status,2,c
 52954  012DEC  0012               	return	
 52955                           
 52956                           ; BSR set to: 13
 52957  012DEE  5136               	movf	54,w,b	;volatile
 52958  012DF0  1137               	iorwf	55,w,b	;volatile
 52959  012DF2  A4D8               	btfss	status,2,c
 52960  012DF4  0012               	return	
 52961                           
 52962                           ; BSR set to: 13
 52963                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 52964                           
 52965                           ; BSR set to: 13
 52966                           
 52967                           ; BSR set to: 13
 52968                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 52969  012DF6  0E00               	movlw	0
 52970  012DF8  0101               	movlb	1	; () banked
 52971  012DFA  6F56               	movwf	_MSD_State& (0+255),b
 52972                           
 52973                           ; BSR set to: 1
 52974                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 52975  012DFC  6955               	setf	_MSDCommandState& (0+255),b
 52976                           
 52977                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 52978  012DFE  0E00               	movlw	0
 52979  012E00  6F54               	movwf	_MSDReadState& (0+255),b
 52980                           
 52981                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 52982  012E02  0E00               	movlw	0
 52983  012E04  6F53               	movwf	_MSDWriteState& (0+255),b
 52984                           
 52985                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 52986  012E06  0E01               	movlw	1
 52987  012E08  6F4E               	movwf	_MSDCBWValid& (0+255),b
 52988                           
 52989                           ; BSR set to: 1
 52990                           
 52991                           ; BSR set to: 1
 52992                           
 52993                           ; BSR set to: 1
 52994                           
 52995                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 52996  012E0A  C11F  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2534
 52997  012E0E  C120  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2534+1
 52998                           
 52999                           ; BSR set to: 1
 53000  012E12  500C               	movf	_USBCheckMSDRequest$2534,w,c
 53001  012E14  100D               	iorwf	_USBCheckMSDRequest$2534+1,w,c
 53002  012E16  B4D8               	btfsc	status,2,c
 53003  012E18  D00A               	goto	i2u1055_40
 53004                           
 53005                           ; BSR set to: 1
 53006                           
 53007                           ; BSR set to: 1
 53008                           
 53009                           ; BSR set to: 1
 53010                           
 53011                           ; BSR set to: 1
 53012  012E1A  C11F  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2535
 53013  012E1E  C120  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2535+1
 53014                           
 53015                           ; BSR set to: 1
 53016                           
 53017                           ; BSR set to: 1
 53018  012E22  C00E  FFD9         	movff	_USBCheckMSDRequest$2535,fsr2l
 53019  012E26  C00F  FFDA         	movff	_USBCheckMSDRequest$2535+1,fsr2h
 53020  012E2A  BEDF               	btfsc	indf2,7,c
 53021  012E2C  D00F               	goto	i2l550
 53022  012E2E                     i2u1055_40:
 53023                           
 53024                           ; BSR set to: 1
 53025                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 53026                           
 53027                           ; BSR set to: 1
 53028  012E2E  0E00               	movlw	0
 53029  012E30  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53030  012E32  0E40               	movlw	64
 53031  012E34  6E02               	movwf	i2USBTransferOnePacket@data,c
 53032  012E36  0E0D               	movlw	13
 53033  012E38  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53034  012E3A  0E40               	movlw	64
 53035  012E3C  6E04               	movwf	i2USBTransferOnePacket@len,c
 53036  012E3E  0E02               	movlw	2
 53037  012E40  EC91  F08A         	call	i2_USBTransferOnePacket
 53038  012E44  C001  F13D         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53039  012E48  C002  F13E         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53040  012E4C                     i2l550:
 53041                           
 53042                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 53043  012E4C  0E80               	movlw	128
 53044  012E4E  6E4F               	movwf	_inPipes+3,c	;volatile
 53045                           
 53046                           ;usb_device_msd.c: 263: break;
 53047  012E50  0012               	return	
 53048  012E52                     
 53049                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 53050  012E52  010D               	movlb	13	; () banked
 53051  012E54  5132               	movf	50,w,b	;volatile
 53052  012E56  1133               	iorwf	51,w,b	;volatile
 53053  012E58  A4D8               	btfss	status,2,c
 53054  012E5A  0012               	return	
 53055                           
 53056                           ; BSR set to: 13
 53057  012E5C  0536               	decf	54,w,b	;volatile
 53058  012E5E  1137               	iorwf	55,w,b	;volatile
 53059  012E60  A4D8               	btfss	status,2,c
 53060  012E62  0012               	return	
 53061                           
 53062                           ; BSR set to: 13
 53063                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 53064                           
 53065                           ; BSR set to: 13
 53066                           
 53067                           ; BSR set to: 13
 53068                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 53069  012E64  0E00               	movlw	0
 53070  012E66  6F38               	movwf	56,b	;volatile
 53071                           
 53072                           ; BSR set to: 13
 53073                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53074  012E68  0E38               	movlw	56
 53075  012E6A  6E4C               	movwf	_inPipes,c	;volatile
 53076  012E6C  0E0D               	movlw	13
 53077  012E6E  6E4D               	movwf	_inPipes+1,c	;volatile
 53078                           
 53079                           ; BSR set to: 13
 53080  012E70  0E00               	movlw	0
 53081  012E72  6E51               	movwf	_inPipes+5,c	;volatile
 53082  012E74  0E01               	movlw	1
 53083  012E76  6E50               	movwf	_inPipes+4,c	;volatile
 53084                           
 53085                           ; BSR set to: 13
 53086  012E78  0EC1               	movlw	193
 53087  012E7A  6E4F               	movwf	_inPipes+3,c	;volatile
 53088                           
 53089                           ; BSR set to: 13
 53090                           ;usb_device_msd.c: 278: }
 53091                           
 53092                           ;usb_device_msd.c: 277: break;
 53093  012E7C  0012               	return	
 53094  012E7E                     i2l545:
 53095                           
 53096                           ; BSR set to: 13
 53097                           
 53098                           ; BSR set to: 13
 53099  012E7E  5131               	movf	49,w,b	;volatile
 53100                           
 53101                           ; Switch size 1, requested type "space"
 53102                           ; Number of cases is 2, Range of values is 254 to 255
 53103                           ; switch strategies available:
 53104                           ; Name         Instructions Cycles
 53105                           ; simple_byte            7     4 (average)
 53106                           ;	Chosen strategy is simple_byte
 53107  012E80  0AFE               	xorlw	254	; case 254
 53108  012E82  B4D8               	btfsc	status,2,c
 53109  012E84  D7E6               	goto	i2l562
 53110  012E86  0A01               	xorlw	1	; case 255
 53111  012E88  A4D8               	btfss	status,2,c
 53112  012E8A  0012               	return	
 53113  012E8C  D7AC               	goto	i2l546
 53114  012E8E                     __end_of_USBCheckMSDRequest:
 53115                           	opt stack 0
 53116                           tosu	equ	0xFFF
 53117                           tosh	equ	0xFFE
 53118                           tosl	equ	0xFFD
 53119                           pclatu	equ	0xFFB
 53120                           pclath	equ	0xFFA
 53121                           tblptru	equ	0xFF8
 53122                           tblptrh	equ	0xFF7
 53123                           tblptrl	equ	0xFF6
 53124                           tablat	equ	0xFF5
 53125                           prodh	equ	0xFF4
 53126                           prodl	equ	0xFF3
 53127                           intcon	equ	0xFF2
 53128                           indf0	equ	0xFEF
 53129                           postinc0	equ	0xFEE
 53130                           fsr0h	equ	0xFEA
 53131                           fsr0l	equ	0xFE9
 53132                           wreg	equ	0xFE8
 53133                           indf1	equ	0xFE7
 53134                           postinc1	equ	0xFE6
 53135                           postdec1	equ	0xFE5
 53136                           plusw1	equ	0xFE3
 53137                           fsr1h	equ	0xFE2
 53138                           fsr1l	equ	0xFE1
 53139                           indf2	equ	0xFDF
 53140                           postinc2	equ	0xFDE
 53141                           postdec2	equ	0xFDD
 53142                           plusw2	equ	0xFDB
 53143                           fsr2h	equ	0xFDA
 53144                           fsr2l	equ	0xFD9
 53145                           status	equ	0xFD8
 53146                           
 53147 ;; *************** function _USBCheckHIDRequest *****************
 53148 ;; Defined at:
 53149 ;;		line 153 in file "usb_device_hid.c"
 53150 ;; Parameters:    Size  Location     Type
 53151 ;;		None
 53152 ;; Auto vars:     Size  Location     Type
 53153 ;;		None
 53154 ;; Return value:  Size  Location     Type
 53155 ;;                  1    wreg      void 
 53156 ;; Registers used:
 53157 ;;		wreg, status,2, status,0
 53158 ;; Tracked objects:
 53159 ;;		On entry : 0/0
 53160 ;;		On exit  : 0/0
 53161 ;;		Unchanged: 0/0
 53162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53163 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53164 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53165 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53166 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53167 ;;Total ram usage:        0 bytes
 53168 ;; Hardware stack levels used:    1
 53169 ;; This function calls:
 53170 ;;		Nothing
 53171 ;; This function is called by:
 53172 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53173 ;; This function uses a non-reentrant model
 53174 ;;
 53175                           
 53176                           	psect	text224
 53177  012778                     __ptext224:
 53178                           	opt stack 0
 53179  012778                     _USBCheckHIDRequest:
 53180                           	opt stack 15
 53181                           
 53182                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 53183                           
 53184                           ;incstack = 0
 53185  012778  010D               	movlb	13	; () banked
 53186  01277A  5130               	movf	48,w,b	;volatile
 53187  01277C  0B1F               	andlw	31
 53188  01277E  06E8               	decf	wreg,f,c
 53189  012780  A4D8               	btfss	status,2,c
 53190  012782  0012               	return	
 53191                           
 53192                           ; BSR set to: 13
 53193                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 53194                           
 53195                           ; BSR set to: 13
 53196                           
 53197                           ; BSR set to: 13
 53198  012784  5134               	movf	52,w,b	;volatile
 53199  012786  A4D8               	btfss	status,2,c
 53200  012788  0012               	return	
 53201                           
 53202                           ; BSR set to: 13
 53203                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 53204                           
 53205                           ; BSR set to: 13
 53206                           
 53207                           ; BSR set to: 13
 53208  01278A  0E06               	movlw	6
 53209  01278C  1931               	xorwf	49,w,b	;volatile
 53210  01278E  B4D8               	btfsc	status,2,c
 53211  012790  D019               	goto	i2l425
 53212  012792  D021               	goto	i2l428
 53213  012794                     
 53214                           ; BSR set to: 13
 53215                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 53216                           
 53217                           ; BSR set to: 13
 53218  012794  0101               	movlb	1	; () banked
 53219  012796  05C3               	decf	_USBActiveConfiguration& (0+255),w,b	;volatile
 53220  012798  A4D8               	btfss	status,2,c
 53221  01279A  D01D               	goto	i2l428
 53222                           
 53223                           ; BSR set to: 1
 53224                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 53225  01279C  0ED0               	movlw	low (_configDescriptor1+18)
 53226  01279E  6E4C               	movwf	_inPipes,c	;volatile
 53227  0127A0  0EA0               	movlw	high (_configDescriptor1+18)
 53228  0127A2  6E4D               	movwf	_inPipes+1,c	;volatile
 53229                           
 53230                           ; BSR set to: 1
 53231  0127A4  0E00               	movlw	0
 53232  0127A6  6E51               	movwf	_inPipes+5,c	;volatile
 53233  0127A8  0E09               	movlw	9
 53234  0127AA  D00A               	goto	L80
 53235  0127AC                     i2l12552:
 53236                           
 53237                           ; BSR set to: 1
 53238  0127AC  0EC0               	movlw	192
 53239  0127AE  6E4F               	movwf	_inPipes+3,c	;volatile
 53240                           
 53241                           ; BSR set to: 1
 53242                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 53243  0127B0  D012               	goto	i2l428
 53244  0127B2                     
 53245                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 53246                           
 53247                           ; BSR set to: 1
 53248  0127B2  0E84               	movlw	low _hid_rpt01
 53249  0127B4  6E4C               	movwf	_inPipes,c	;volatile
 53250  0127B6  0EA1               	movlw	high _hid_rpt01
 53251  0127B8  6E4D               	movwf	_inPipes+1,c	;volatile
 53252  0127BA  0E00               	movlw	0
 53253  0127BC  6E51               	movwf	_inPipes+5,c	;volatile
 53254  0127BE  0E1D               	movlw	29
 53255  0127C0                     L80:
 53256  0127C0  6E50               	movwf	_inPipes+4,c	;volatile
 53257  0127C2  D7F4               	goto	i2l12552
 53258  0127C4                     i2l425:
 53259  0127C4  010D               	movlb	13	; () banked
 53260  0127C6  5133               	movf	51,w,b	;volatile
 53261                           
 53262                           ; Switch size 1, requested type "space"
 53263                           ; Number of cases is 3, Range of values is 33 to 35
 53264                           ; switch strategies available:
 53265                           ; Name         Instructions Cycles
 53266                           ; simple_byte           10     6 (average)
 53267                           ;	Chosen strategy is simple_byte
 53268  0127C8  0A21               	xorlw	33	; case 33
 53269  0127CA  B4D8               	btfsc	status,2,c
 53270  0127CC  D7E3               	goto	i2l426
 53271  0127CE  0A03               	xorlw	3	; case 34
 53272  0127D0  B4D8               	btfsc	status,2,c
 53273  0127D2  D7EF               	goto	i2l429
 53274  0127D4  0A01               	xorlw	1	; case 35
 53275  0127D6                     i2l428:
 53276                           
 53277                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 53278                           
 53279                           ; BSR set to: 13
 53280                           
 53281                           ; BSR set to: 13
 53282  0127D6  010D               	movlb	13	; () banked
 53283  0127D8  3930               	swapf	48,w,b	;volatile
 53284  0127DA  32E8               	rrcf	wreg,f,c
 53285  0127DC  0B03               	andlw	3
 53286  0127DE  06E8               	decf	wreg,f,c
 53287  0127E0  A4D8               	btfss	status,2,c
 53288  0127E2  0012               	return	
 53289  0127E4  D020               	goto	i2l432
 53290  0127E6                     
 53291                           ; BSR set to: 13
 53292                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 53293                           
 53294                           ; BSR set to: 13
 53295  0127E6  0EC1               	movlw	low _idle_rate
 53296  0127E8  6E4C               	movwf	_inPipes,c	;volatile
 53297  0127EA  0E01               	movlw	high _idle_rate
 53298  0127EC  6E4D               	movwf	_inPipes+1,c	;volatile
 53299                           
 53300                           ; BSR set to: 13
 53301  0127EE  0E00               	movlw	0
 53302  0127F0  6E51               	movwf	_inPipes+5,c	;volatile
 53303  0127F2  0E01               	movlw	1
 53304  0127F4  6E50               	movwf	_inPipes+4,c	;volatile
 53305                           
 53306                           ; BSR set to: 13
 53307  0127F6  0EC1               	movlw	193
 53308  0127F8  6E4F               	movwf	_inPipes+3,c	;volatile
 53309                           
 53310                           ;usb_device_hid.c: 223: break;
 53311  0127FA  0012               	return	
 53312  0127FC                     
 53313                           ; BSR set to: 13
 53314                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 53315                           
 53316                           ; BSR set to: 13
 53317  0127FC  0E80               	movlw	128
 53318  0127FE  6E4F               	movwf	_inPipes+3,c	;volatile
 53319                           
 53320                           ; BSR set to: 13
 53321                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 53322  012800  CD33 F1C1          	movff	3379,_idle_rate	;volatile
 53323                           
 53324                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 53325  012804  0012               	return	
 53326  012806                     
 53327                           ; BSR set to: 13
 53328                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 53329                           
 53330                           ; BSR set to: 13
 53331  012806  0EC0               	movlw	low _active_protocol
 53332  012808  6E4C               	movwf	_inPipes,c	;volatile
 53333  01280A  0E01               	movlw	high _active_protocol
 53334  01280C  6E4D               	movwf	_inPipes+1,c	;volatile
 53335                           
 53336                           ; BSR set to: 13
 53337  01280E  0E00               	movlw	0
 53338  012810  6E51               	movwf	_inPipes+5,c	;volatile
 53339  012812  0E01               	movlw	1
 53340  012814  6E50               	movwf	_inPipes+4,c	;volatile
 53341                           
 53342                           ; BSR set to: 13
 53343  012816  0E81               	movlw	129
 53344  012818  6E4F               	movwf	_inPipes+3,c	;volatile
 53345                           
 53346                           ;usb_device_hid.c: 234: break;
 53347  01281A  0012               	return	
 53348  01281C                     
 53349                           ; BSR set to: 13
 53350                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 53351                           
 53352                           ; BSR set to: 13
 53353  01281C  0E80               	movlw	128
 53354  01281E  6E4F               	movwf	_inPipes+3,c	;volatile
 53355                           
 53356                           ; BSR set to: 13
 53357                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 53358  012820  CD32 F1C0          	movff	3378,_active_protocol	;volatile
 53359                           
 53360                           ; BSR set to: 13
 53361                           ;usb_device_hid.c: 239: }
 53362                           
 53363                           ;usb_device_hid.c: 238: break;
 53364  012824  0012               	return	
 53365  012826                     i2l432:
 53366                           
 53367                           ; BSR set to: 13
 53368                           
 53369                           ; BSR set to: 13
 53370  012826  5131               	movf	49,w,b	;volatile
 53371                           
 53372                           ; Switch size 1, requested type "space"
 53373                           ; Number of cases is 6, Range of values is 1 to 11
 53374                           ; switch strategies available:
 53375                           ; Name         Instructions Cycles
 53376                           ; simple_byte           19    10 (average)
 53377                           ;	Chosen strategy is simple_byte
 53378  012828  0A01               	xorlw	1	; case 1
 53379  01282A  B4D8               	btfsc	status,2,c
 53380  01282C  0012               	return	
 53381  01282E  0A03               	xorlw	3	; case 2
 53382  012830  B4D8               	btfsc	status,2,c
 53383  012832  D7D9               	goto	i2l436
 53384  012834  0A01               	xorlw	1	; case 3
 53385  012836  B4D8               	btfsc	status,2,c
 53386  012838  D7E6               	goto	i2l438
 53387  01283A  0A0A               	xorlw	10	; case 9
 53388  01283C  B4D8               	btfsc	status,2,c
 53389  01283E  0012               	return	
 53390  012840  0A03               	xorlw	3	; case 10
 53391  012842  B4D8               	btfsc	status,2,c
 53392  012844  D7DB               	goto	i2l437
 53393  012846  0A01               	xorlw	1	; case 11
 53394  012848  A4D8               	btfss	status,2,c
 53395  01284A  0012               	return	
 53396  01284C  D7E7               	goto	i2l439
 53397  01284E                     __end_of_USBCheckHIDRequest:
 53398                           	opt stack 0
 53399                           tosu	equ	0xFFF
 53400                           tosh	equ	0xFFE
 53401                           tosl	equ	0xFFD
 53402                           pclatu	equ	0xFFB
 53403                           pclath	equ	0xFFA
 53404                           tblptru	equ	0xFF8
 53405                           tblptrh	equ	0xFF7
 53406                           tblptrl	equ	0xFF6
 53407                           tablat	equ	0xFF5
 53408                           prodh	equ	0xFF4
 53409                           prodl	equ	0xFF3
 53410                           intcon	equ	0xFF2
 53411                           indf0	equ	0xFEF
 53412                           postinc0	equ	0xFEE
 53413                           fsr0h	equ	0xFEA
 53414                           fsr0l	equ	0xFE9
 53415                           wreg	equ	0xFE8
 53416                           indf1	equ	0xFE7
 53417                           postinc1	equ	0xFE6
 53418                           postdec1	equ	0xFE5
 53419                           plusw1	equ	0xFE3
 53420                           fsr1h	equ	0xFE2
 53421                           fsr1l	equ	0xFE1
 53422                           indf2	equ	0xFDF
 53423                           postinc2	equ	0xFDE
 53424                           postdec2	equ	0xFDD
 53425                           plusw2	equ	0xFDB
 53426                           fsr2h	equ	0xFDA
 53427                           fsr2l	equ	0xFD9
 53428                           status	equ	0xFD8
 53429                           
 53430 ;; *************** function _MSDTransferTerminated *****************
 53431 ;; Defined at:
 53432 ;;		line 1674 in file "usb_device_msd.c"
 53433 ;; Parameters:    Size  Location     Type
 53434 ;;  handle          2   11[COMRAM] PTR void 
 53435 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 53436 ;;		 -> BDT(48), 
 53437 ;; Auto vars:     Size  Location     Type
 53438 ;;		None
 53439 ;; Return value:  Size  Location     Type
 53440 ;;                  1    wreg      void 
 53441 ;; Registers used:
 53442 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 53443 ;; Tracked objects:
 53444 ;;		On entry : 0/0
 53445 ;;		On exit  : 0/0
 53446 ;;		Unchanged: 0/0
 53447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53449 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53451 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53452 ;;Total ram usage:        4 bytes
 53453 ;; Hardware stack levels used:    1
 53454 ;; Hardware stack levels required when called:    1
 53455 ;; This function calls:
 53456 ;;		i2_USBStallEndpoint
 53457 ;;		i2_USBTransferOnePacket
 53458 ;; This function is called by:
 53459 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53460 ;; This function uses a non-reentrant model
 53461 ;;
 53462                           
 53463                           	psect	text225
 53464  014D2E                     __ptext225:
 53465                           	opt stack 0
 53466  014D2E                     _MSDTransferTerminated:
 53467                           	opt stack 14
 53468                           
 53469                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 53470                           
 53471                           ; BSR set to: 13
 53472                           ;incstack = 0
 53473  014D2E  0101               	movlb	1	; () banked
 53474  014D30  514E               	movf	_MSDCBWValid& (0+255),w,b
 53475  014D32  A4D8               	btfss	status,2,c
 53476  014D34  D00B               	goto	i2l780
 53477                           
 53478                           ; BSR set to: 1
 53479                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 53480  014D36  0E01               	movlw	1
 53481  014D38  6E01               	movwf	i2USBStallEndpoint@dir,c
 53482  014D3A  0E02               	movlw	2
 53483  014D3C  EC0E  F08A         	call	i2_USBStallEndpoint
 53484                           
 53485                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 53486  014D40  0E00               	movlw	0
 53487  014D42  6E01               	movwf	i2USBStallEndpoint@dir,c
 53488  014D44  0E02               	movlw	2
 53489  014D46  EC0E  F08A         	call	i2_USBStallEndpoint
 53490                           
 53491                           ;usb_device_msd.c: 1681: }
 53492  014D4A  0012               	return	
 53493  014D4C                     i2l780:
 53494  014D4C  C11F  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2623
 53495  014D50  C120  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2623+1
 53496  014D54  500E               	movf	_MSDTransferTerminated$2623,w,c
 53497  014D56  180C               	xorwf	MSDTransferTerminated@handle,w,c
 53498  014D58  E114               	bnz	i2l783
 53499  014D5A  500F               	movf	_MSDTransferTerminated$2623+1,w,c
 53500  014D5C  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 53501  014D5E  A4D8               	btfss	status,2,c
 53502  014D60  0012               	return	
 53503                           
 53504                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 53505  014D62  0E00               	movlw	0
 53506  014D64  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53507  014D66  0E40               	movlw	64
 53508  014D68  6E02               	movwf	i2USBTransferOnePacket@data,c
 53509  014D6A  0E0D               	movlw	13
 53510  014D6C  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53511  014D6E  0E40               	movlw	64
 53512  014D70  6E04               	movwf	i2USBTransferOnePacket@len,c
 53513  014D72  0E02               	movlw	2
 53514  014D74  EC91  F08A         	call	i2_USBTransferOnePacket
 53515  014D78  C001  F13D         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53516  014D7C  C002  F13E         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53517  014D80  0012               	return	
 53518  014D82                     i2l783:
 53519  014D82  0012               	return		;funcret
 53520  014D84                     __end_of_MSDTransferTerminated:
 53521                           	opt stack 0
 53522                           tosu	equ	0xFFF
 53523                           tosh	equ	0xFFE
 53524                           tosl	equ	0xFFD
 53525                           pclatu	equ	0xFFB
 53526                           pclath	equ	0xFFA
 53527                           tblptru	equ	0xFF8
 53528                           tblptrh	equ	0xFF7
 53529                           tblptrl	equ	0xFF6
 53530                           tablat	equ	0xFF5
 53531                           prodh	equ	0xFF4
 53532                           prodl	equ	0xFF3
 53533                           intcon	equ	0xFF2
 53534                           indf0	equ	0xFEF
 53535                           postinc0	equ	0xFEE
 53536                           fsr0h	equ	0xFEA
 53537                           fsr0l	equ	0xFE9
 53538                           wreg	equ	0xFE8
 53539                           indf1	equ	0xFE7
 53540                           postinc1	equ	0xFE6
 53541                           postdec1	equ	0xFE5
 53542                           plusw1	equ	0xFE3
 53543                           fsr1h	equ	0xFE2
 53544                           fsr1l	equ	0xFE1
 53545                           indf2	equ	0xFDF
 53546                           postinc2	equ	0xFDE
 53547                           postdec2	equ	0xFDD
 53548                           plusw2	equ	0xFDB
 53549                           fsr2h	equ	0xFDA
 53550                           fsr2l	equ	0xFD9
 53551                           status	equ	0xFD8
 53552                           
 53553 ;; *************** function i2_USBStallEndpoint *****************
 53554 ;; Defined at:
 53555 ;;		line 1073 in file "usb_device.c"
 53556 ;; Parameters:    Size  Location     Type
 53557 ;;  ep              1    wreg     unsigned char 
 53558 ;;  dir             1    0[COMRAM] unsigned char 
 53559 ;; Auto vars:     Size  Location     Type
 53560 ;;  ep              1    5[COMRAM] unsigned char 
 53561 ;;  USBStallEndp    2    6[COMRAM] PTR struct __BDT
 53562 ;;		 -> BDT(48), 
 53563 ;; Return value:  Size  Location     Type
 53564 ;;                  1    wreg      void 
 53565 ;; Registers used:
 53566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 53567 ;; Tracked objects:
 53568 ;;		On entry : 0/0
 53569 ;;		On exit  : 0/0
 53570 ;;		Unchanged: 0/0
 53571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53572 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53573 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53574 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53575 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53576 ;;Total ram usage:        8 bytes
 53577 ;; Hardware stack levels used:    1
 53578 ;; This function calls:
 53579 ;;		Nothing
 53580 ;; This function is called by:
 53581 ;;		_MSDTransferTerminated
 53582 ;; This function uses a non-reentrant model
 53583 ;;
 53584                           
 53585                           	psect	text226
 53586  01141C                     __ptext226:
 53587                           	opt stack 0
 53588  01141C                     i2_USBStallEndpoint:
 53589                           	opt stack 14
 53590                           
 53591                           ;incstack = 0
 53592                           ;i2USBStallEndpoint@ep stored from wreg
 53593  01141C  6E06               	movwf	i2USBStallEndpoint@ep,c
 53594                           
 53595                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 53596  01141E  5006               	movf	i2USBStallEndpoint@ep,w,c
 53597  011420  A4D8               	btfss	status,2,c
 53598  011422  D02B               	goto	i2l192
 53599                           
 53600                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 53601  011424  EE20 F001          	lfsr	2,1
 53602  011428  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53603  01142A  26D9               	addwf	fsr2l,f,c
 53604  01142C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53605  01142E  22DA               	addwfc	fsr2h,f,c
 53606  011430  0E08               	movlw	8
 53607  011432  6EDF               	movwf	indf2,c
 53608                           
 53609                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 53610  011434  EE20 F002          	lfsr	2,2
 53611  011438  505C               	movf	_pBDTEntryEP0OutNext,w,c
 53612  01143A  26D9               	addwf	fsr2l,f,c
 53613  01143C  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 53614  01143E  22DA               	addwfc	fsr2h,f,c
 53615  011440  0E30               	movlw	48
 53616  011442  6EDE               	movwf	postinc2,c
 53617  011444  0E0D               	movlw	13
 53618  011446  6EDD               	movwf	postdec2,c
 53619                           
 53620                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 53621  011448  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53622  01144C  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53623  011450  0E0C               	movlw	12
 53624  011452  6EDF               	movwf	indf2,c
 53625                           
 53626                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 53627  011454  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 53628  011458  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 53629  01145C  0E00               	movlw	0
 53630  01145E  8EDB               	bsf	plusw2,7,c
 53631                           
 53632                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 53633  011460  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 53634  011464  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53635  011468  0E04               	movlw	4
 53636  01146A  6EDF               	movwf	indf2,c
 53637                           
 53638                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 53639  01146C  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 53640  011470  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 53641  011474  0E00               	movlw	0
 53642  011476  8EDB               	bsf	plusw2,7,c
 53643                           
 53644                           ;usb_device.c: 1089: }
 53645  011478  0012               	return	
 53646  01147A                     i2l192:
 53647                           
 53648                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 53649  01147A  5001               	movf	i2USBStallEndpoint@dir,w,c
 53650  01147C  6E02               	movwf	??i2_USBStallEndpoint& (0+255),c
 53651  01147E  6A03               	clrf	(??i2_USBStallEndpoint+1)& (0+255),c
 53652  011480  90D8               	bcf	status,0,c
 53653  011482  3602               	rlcf	??i2_USBStallEndpoint,f,c
 53654  011484  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 53655  011486  5006               	movf	i2USBStallEndpoint@ep,w,c
 53656  011488  6E04               	movwf	(??i2_USBStallEndpoint+2)& (0+255),c
 53657  01148A  6A05               	clrf	(??i2_USBStallEndpoint+3)& (0+255),c
 53658  01148C  90D8               	bcf	status,0,c
 53659  01148E  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53660  011490  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53661  011492  90D8               	bcf	status,0,c
 53662  011494  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53663  011496  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53664  011498  5002               	movf	??i2_USBStallEndpoint,w,c
 53665  01149A  2604               	addwf	??i2_USBStallEndpoint+2,f,c
 53666  01149C  5003               	movf	??i2_USBStallEndpoint+1,w,c
 53667  01149E  2205               	addwfc	??i2_USBStallEndpoint+3,f,c
 53668  0114A0  90D8               	bcf	status,0,c
 53669  0114A2  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53670  0114A4  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53671  0114A6  90D8               	bcf	status,0,c
 53672  0114A8  3604               	rlcf	??i2_USBStallEndpoint+2,f,c
 53673  0114AA  3605               	rlcf	??i2_USBStallEndpoint+3,f,c
 53674  0114AC  0E00               	movlw	0
 53675  0114AE  2404               	addwf	??i2_USBStallEndpoint+2,w,c
 53676  0114B0  6E07               	movwf	i2USBStallEndpoint@p,c
 53677  0114B2  0E0D               	movlw	13
 53678  0114B4  2005               	addwfc	??i2_USBStallEndpoint+3,w,c
 53679  0114B6  6E08               	movwf	i2USBStallEndpoint@p+1,c
 53680                           
 53681                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 53682  0114B8  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 53683  0114BC  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 53684  0114C0  0E00               	movlw	0
 53685  0114C2  84DB               	bsf	plusw2,2,c
 53686                           
 53687                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 53688  0114C4  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 53689  0114C8  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 53690  0114CC  0E00               	movlw	0
 53691  0114CE  8EDB               	bsf	plusw2,7,c
 53692                           
 53693                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 53694  0114D0  5006               	movf	i2USBStallEndpoint@ep,w,c
 53695  0114D2  0D04               	mullw	4
 53696  0114D4  CFF3 F002          	movff	prodl,??i2_USBStallEndpoint
 53697  0114D8  CFF4 F003          	movff	prodh,??i2_USBStallEndpoint+1
 53698  0114DC  5001               	movf	i2USBStallEndpoint@dir,w,c
 53699  0114DE  0D02               	mullw	2
 53700  0114E0  50F3               	movf	prodl,w,c
 53701  0114E2  2602               	addwf	??i2_USBStallEndpoint,f,c
 53702  0114E4  50F4               	movf	prodh,w,c
 53703  0114E6  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 53704  0114E8  90D8               	bcf	status,0,c
 53705  0114EA  3602               	rlcf	??i2_USBStallEndpoint,f,c
 53706  0114EC  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 53707  0114EE  90D8               	bcf	status,0,c
 53708  0114F0  3602               	rlcf	??i2_USBStallEndpoint,f,c
 53709  0114F2  3603               	rlcf	??i2_USBStallEndpoint+1,f,c
 53710  0114F4  0E04               	movlw	4
 53711  0114F6  2602               	addwf	??i2_USBStallEndpoint,f,c
 53712  0114F8  0E00               	movlw	0
 53713  0114FA  2203               	addwfc	??i2_USBStallEndpoint+1,f,c
 53714  0114FC  0E00               	movlw	0
 53715  0114FE  2402               	addwf	??i2_USBStallEndpoint,w,c
 53716  011500  6E07               	movwf	i2USBStallEndpoint@p,c
 53717  011502  0E0D               	movlw	13
 53718  011504  2003               	addwfc	??i2_USBStallEndpoint+1,w,c
 53719  011506  6E08               	movwf	i2USBStallEndpoint@p+1,c
 53720                           
 53721                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 53722  011508  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 53723  01150C  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 53724  011510  0E00               	movlw	0
 53725  011512  84DB               	bsf	plusw2,2,c
 53726                           
 53727                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 53728  011514  C007  FFD9         	movff	i2USBStallEndpoint@p,fsr2l
 53729  011518  C008  FFDA         	movff	i2USBStallEndpoint@p+1,fsr2h
 53730  01151C  0E00               	movlw	0
 53731  01151E  8EDB               	bsf	plusw2,7,c
 53732  011520  0012               	return	
 53733  011522                     __end_ofi2_USBStallEndpoint:
 53734                           	opt stack 0
 53735                           tosu	equ	0xFFF
 53736                           tosh	equ	0xFFE
 53737                           tosl	equ	0xFFD
 53738                           pclatu	equ	0xFFB
 53739                           pclath	equ	0xFFA
 53740                           tblptru	equ	0xFF8
 53741                           tblptrh	equ	0xFF7
 53742                           tblptrl	equ	0xFF6
 53743                           tablat	equ	0xFF5
 53744                           prodh	equ	0xFF4
 53745                           prodl	equ	0xFF3
 53746                           intcon	equ	0xFF2
 53747                           indf0	equ	0xFEF
 53748                           postinc0	equ	0xFEE
 53749                           fsr0h	equ	0xFEA
 53750                           fsr0l	equ	0xFE9
 53751                           wreg	equ	0xFE8
 53752                           indf1	equ	0xFE7
 53753                           postinc1	equ	0xFE6
 53754                           postdec1	equ	0xFE5
 53755                           plusw1	equ	0xFE3
 53756                           fsr1h	equ	0xFE2
 53757                           fsr1l	equ	0xFE1
 53758                           indf2	equ	0xFDF
 53759                           postinc2	equ	0xFDE
 53760                           postdec2	equ	0xFDD
 53761                           plusw2	equ	0xFDB
 53762                           fsr2h	equ	0xFDA
 53763                           fsr2l	equ	0xFD9
 53764                           status	equ	0xFD8
 53765                           
 53766 ;; *************** function _APP_DeviceMSDInitialize *****************
 53767 ;; Defined at:
 53768 ;;		line 84 in file "app_device_msd.c"
 53769 ;; Parameters:    Size  Location     Type
 53770 ;;		None
 53771 ;; Auto vars:     Size  Location     Type
 53772 ;;		None
 53773 ;; Return value:  Size  Location     Type
 53774 ;;                  1    wreg      void 
 53775 ;; Registers used:
 53776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53777 ;; Tracked objects:
 53778 ;;		On entry : 0/0
 53779 ;;		On exit  : 0/0
 53780 ;;		Unchanged: 0/0
 53781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53785 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53786 ;;Total ram usage:        0 bytes
 53787 ;; Hardware stack levels used:    1
 53788 ;; Hardware stack levels required when called:    2
 53789 ;; This function calls:
 53790 ;;		_USBEnableEndpoint
 53791 ;;		_USBMSDInit
 53792 ;; This function is called by:
 53793 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 53794 ;; This function uses a non-reentrant model
 53795 ;;
 53796                           
 53797                           	psect	text227
 53798  015CF8                     __ptext227:
 53799                           	opt stack 0
 53800  015CF8                     _APP_DeviceMSDInitialize:
 53801                           	opt stack 13
 53802                           
 53803                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 53804                           
 53805                           ;incstack = 0
 53806  015CF8  0E1E               	movlw	30
 53807  015CFA  6E09               	movwf	USBEnableEndpoint@options,c
 53808  015CFC  0E02               	movlw	2
 53809  015CFE  EC67  F0AA         	call	_USBEnableEndpoint
 53810                           
 53811                           ;app_device_msd.c: 93: USBMSDInit();
 53812  015D02  ECF8  F087         	call	_USBMSDInit	;wreg free
 53813  015D06  0012               	return		;funcret
 53814  015D08                     __end_of_APP_DeviceMSDInitialize:
 53815                           	opt stack 0
 53816                           tosu	equ	0xFFF
 53817                           tosh	equ	0xFFE
 53818                           tosl	equ	0xFFD
 53819                           pclatu	equ	0xFFB
 53820                           pclath	equ	0xFFA
 53821                           tblptru	equ	0xFF8
 53822                           tblptrh	equ	0xFF7
 53823                           tblptrl	equ	0xFF6
 53824                           tablat	equ	0xFF5
 53825                           prodh	equ	0xFF4
 53826                           prodl	equ	0xFF3
 53827                           intcon	equ	0xFF2
 53828                           indf0	equ	0xFEF
 53829                           postinc0	equ	0xFEE
 53830                           fsr0h	equ	0xFEA
 53831                           fsr0l	equ	0xFE9
 53832                           wreg	equ	0xFE8
 53833                           indf1	equ	0xFE7
 53834                           postinc1	equ	0xFE6
 53835                           postdec1	equ	0xFE5
 53836                           plusw1	equ	0xFE3
 53837                           fsr1h	equ	0xFE2
 53838                           fsr1l	equ	0xFE1
 53839                           indf2	equ	0xFDF
 53840                           postinc2	equ	0xFDE
 53841                           postdec2	equ	0xFDD
 53842                           plusw2	equ	0xFDB
 53843                           fsr2h	equ	0xFDA
 53844                           fsr2l	equ	0xFD9
 53845                           status	equ	0xFD8
 53846                           
 53847 ;; *************** function _USBMSDInit *****************
 53848 ;; Defined at:
 53849 ;;		line 142 in file "usb_device_msd.c"
 53850 ;; Parameters:    Size  Location     Type
 53851 ;;		None
 53852 ;; Auto vars:     Size  Location     Type
 53853 ;;		None
 53854 ;; Return value:  Size  Location     Type
 53855 ;;                  1    wreg      void 
 53856 ;; Registers used:
 53857 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 53858 ;; Tracked objects:
 53859 ;;		On entry : 0/0
 53860 ;;		On exit  : 0/0
 53861 ;;		Unchanged: 0/0
 53862 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 53863 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53864 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53865 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53866 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 53867 ;;Total ram usage:        3 bytes
 53868 ;; Hardware stack levels used:    1
 53869 ;; Hardware stack levels required when called:    1
 53870 ;; This function calls:
 53871 ;;		i2_ExternalFlash_MediaDetect
 53872 ;;		i2_ExternalFlash_MediaInitialize
 53873 ;;		i2_ResetSenseData
 53874 ;;		i2_USBTransferOnePacket
 53875 ;; This function is called by:
 53876 ;;		_APP_DeviceMSDInitialize
 53877 ;; This function uses a non-reentrant model
 53878 ;;
 53879                           
 53880                           	psect	text228
 53881  010FF0                     __ptext228:
 53882                           	opt stack 0
 53883  010FF0                     _USBMSDInit:
 53884                           	opt stack 13
 53885                           
 53886                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 53887                           
 53888                           ;incstack = 0
 53889  010FF0  0E00               	movlw	0
 53890  010FF2  6E01               	movwf	i2USBTransferOnePacket@dir,c
 53891  010FF4  0E40               	movlw	64
 53892  010FF6  6E02               	movwf	i2USBTransferOnePacket@data,c
 53893  010FF8  0E0D               	movlw	13
 53894  010FFA  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 53895  010FFC  0E40               	movlw	64
 53896  010FFE  6E04               	movwf	i2USBTransferOnePacket@len,c
 53897  011000  0E02               	movlw	2
 53898  011002  EC91  F08A         	call	i2_USBTransferOnePacket
 53899  011006  C001  F13D         	movff	?i2_USBTransferOnePacket,_USBMSDOutHandle
 53900  01100A  C002  F13E         	movff	?i2_USBTransferOnePacket+1,_USBMSDOutHandle+1
 53901  01100E  C056  F13B         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 53902  011012  C057  F13C         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 53903                           
 53904                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 53905  011016  0E00               	movlw	0
 53906  011018  0101               	movlb	1	; () banked
 53907  01101A  6F56               	movwf	_MSD_State& (0+255),b
 53908                           
 53909                           ; BSR set to: 1
 53910                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 53911  01101C  6955               	setf	_MSDCommandState& (0+255),b
 53912                           
 53913                           ; BSR set to: 1
 53914                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 53915  01101E  0E00               	movlw	0
 53916  011020  6F54               	movwf	_MSDReadState& (0+255),b
 53917                           
 53918                           ; BSR set to: 1
 53919                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 53920  011022  0E00               	movlw	0
 53921  011024  6F53               	movwf	_MSDWriteState& (0+255),b
 53922                           
 53923                           ; BSR set to: 1
 53924                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 53925  011026  0E00               	movlw	0
 53926  011028  6F4F               	movwf	_MSDHostNoData& (0+255),b
 53927                           
 53928                           ; BSR set to: 1
 53929                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 53930  01102A  0E00               	movlw	0
 53931  01102C  0102               	movlb	2	; () banked
 53932  01102E  6F34               	movwf	_gblNumBLKS& (0+255),b
 53933  011030  0E00               	movlw	0
 53934  011032  6F35               	movwf	(_gblNumBLKS+1)& (0+255),b
 53935  011034  0E00               	movlw	0
 53936  011036  6F36               	movwf	(_gblNumBLKS+2)& (0+255),b
 53937  011038  0E00               	movlw	0
 53938  01103A  6F37               	movwf	(_gblNumBLKS+3)& (0+255),b
 53939                           
 53940                           ; BSR set to: 2
 53941                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 53942  01103C  0E00               	movlw	0
 53943  01103E  6F30               	movwf	_gblBLKLen& (0+255),b
 53944  011040  0E00               	movlw	0
 53945  011042  6F31               	movwf	(_gblBLKLen+1)& (0+255),b
 53946  011044  0E00               	movlw	0
 53947  011046  6F32               	movwf	(_gblBLKLen+2)& (0+255),b
 53948  011048  0E00               	movlw	0
 53949  01104A  6F33               	movwf	(_gblBLKLen+3)& (0+255),b
 53950                           
 53951                           ; BSR set to: 2
 53952                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 53953  01104C  0E01               	movlw	1
 53954  01104E  0101               	movlb	1	; () banked
 53955  011050  6F4E               	movwf	_MSDCBWValid& (0+255),b
 53956                           
 53957                           ; BSR set to: 1
 53958                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 53959  011052  0E00               	movlw	0
 53960  011054  0102               	movlb	2	; () banked
 53961  011056  6F3F               	movwf	(_gblMediaPresent+1)& (0+255),b
 53962  011058  0E00               	movlw	0
 53963  01105A  6F3E               	movwf	_gblMediaPresent& (0+255),b
 53964                           
 53965                           ; BSR set to: 2
 53966                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 53967  01105C  0E00               	movlw	0
 53968  01105E  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 53969  011060  D04A               	goto	i2l534
 53970  011062                     
 53971                           ; BSR set to: 2
 53972                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 53973                           
 53974                           ; BSR set to: 2
 53975  011062  510D               	movf	(_gblCBW+13)& (0+255),w,b
 53976  011064  0D01               	mullw	1
 53977  011066  0E50               	movlw	low _SoftDetach
 53978  011068  24F3               	addwf	prodl,w,c
 53979  01106A  6ED9               	movwf	fsr2l,c
 53980  01106C  0E01               	movlw	high _SoftDetach
 53981  01106E  20F4               	addwfc	prodh,w,c
 53982  011070  6EDA               	movwf	fsr2h,c
 53983  011072  0E00               	movlw	0
 53984  011074  6EDF               	movwf	indf2,c
 53985                           
 53986                           ; BSR set to: 2
 53987                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 53988  011076  C2AC  F001         	movff	_LUN+21,i2ExternalFlash_MediaDetect@config
 53989  01107A  C2AD  F002         	movff	_LUN+22,i2ExternalFlash_MediaDetect@config+1
 53990  01107E  EE22  F0A0         	lfsr	2,_LUN+9
 53991  011082  D801               	call	i2u1026_48
 53992  011084  D00A               	goto	i2u1026_49
 53993  011086                     i2u1026_48:
 53994  011086  0005               	push	
 53995  011088  6EFA               	movwf	pclath,c
 53996  01108A  50DE               	movf	postinc2,w,c
 53997  01108C  6EFD               	movwf	tosl,c
 53998  01108E  50DE               	movf	postinc2,w,c
 53999  011090  6EFE               	movwf	tosh,c
 54000  011092  50DE               	movf	postinc2,w,c
 54001  011094  6EFF               	movwf	tosu,c
 54002  011096  50FA               	movf	pclath,w,c
 54003  011098  0012               	return		;indir
 54004  01109A                     i2u1026_49:
 54005  01109A  0900               	iorlw	0
 54006  01109C  B4D8               	btfsc	status,2,c
 54007  01109E  D027               	goto	i2l537
 54008                           
 54009                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 54010  0110A0  C2AC  F001         	movff	_LUN+21,i2ExternalFlash_MediaInitialize@config
 54011  0110A4  C2AD  F002         	movff	_LUN+22,i2ExternalFlash_MediaInitialize@config+1
 54012  0110A8  D801               	call	i2u1028_48
 54013  0110AA  D00B               	goto	i2u1028_49
 54014  0110AC                     i2u1028_48:
 54015  0110AC  0005               	push	
 54016  0110AE  6EFA               	movwf	pclath,c
 54017  0110B0  0102               	movlb	2	; () banked
 54018  0110B2  5197               	movf	_LUN& (0+255),w,b
 54019  0110B4  6EFD               	movwf	tosl,c
 54020  0110B6  5198               	movf	(_LUN+1)& (0+255),w,b
 54021  0110B8  6EFE               	movwf	tosh,c
 54022  0110BA  5199               	movf	(_LUN+2)& (0+255),w,b
 54023  0110BC  6EFF               	movwf	tosu,c
 54024  0110BE  50FA               	movf	pclath,w,c
 54025  0110C0  0012               	return		;indir
 54026  0110C2                     i2u1028_49:
 54027  0110C2  5001               	movf	?i2_ExternalFlash_MediaInitialize,w,c
 54028  0110C4  1002               	iorwf	?i2_ExternalFlash_MediaInitialize+1,w,c
 54029  0110C6  B4D8               	btfsc	status,2,c
 54030  0110C8  D012               	goto	i2l537
 54031                           
 54032                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 54033  0110CA  C20D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 54034  0110CE  0E01               	movlw	1
 54035  0110D0  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 54036  0110D2  0E00               	movlw	0
 54037  0110D4  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 54038  0110D6  2A0C               	incf	??_USBMSDInit,f,c
 54039  0110D8  D003               	goto	i2u1030_44
 54040  0110DA                     i2u1030_45:
 54041  0110DA  90D8               	bcf	status,0,c
 54042  0110DC  360D               	rlcf	??_USBMSDInit+1,f,c
 54043  0110DE  360E               	rlcf	??_USBMSDInit+2,f,c
 54044  0110E0                     i2u1030_44:
 54045  0110E0  2E0C               	decfsz	??_USBMSDInit,f,c
 54046  0110E2  D7FB               	goto	i2u1030_45
 54047  0110E4  500D               	movf	??_USBMSDInit+1,w,c
 54048  0110E6  0102               	movlb	2	; () banked
 54049  0110E8  133E               	iorwf	_gblMediaPresent& (0+255),f,b
 54050  0110EA  500E               	movf	??_USBMSDInit+2,w,c
 54051  0110EC  133F               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 54052  0110EE                     i2l537:
 54053                           
 54054                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 54055                           
 54056                           ; BSR set to: 2
 54057                           
 54058                           ; BSR set to: 2
 54059  0110EE  ECC1  F0A3         	call	i2_ResetSenseData	;wreg free
 54060  0110F2  0102               	movlb	2	; () banked
 54061  0110F4  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 54062  0110F6                     i2l534:
 54063                           
 54064                           ; BSR set to: 2
 54065                           
 54066                           ; BSR set to: 2
 54067  0110F6  510D               	movf	(_gblCBW+13)& (0+255),w,b
 54068  0110F8  A4D8               	btfss	status,2,c
 54069  0110FA  0012               	return	
 54070  0110FC  D7B2               	goto	i2l535
 54071  0110FE                     __end_of_USBMSDInit:
 54072                           	opt stack 0
 54073                           tosu	equ	0xFFF
 54074                           tosh	equ	0xFFE
 54075                           tosl	equ	0xFFD
 54076                           pclatu	equ	0xFFB
 54077                           pclath	equ	0xFFA
 54078                           tblptru	equ	0xFF8
 54079                           tblptrh	equ	0xFF7
 54080                           tblptrl	equ	0xFF6
 54081                           tablat	equ	0xFF5
 54082                           prodh	equ	0xFF4
 54083                           prodl	equ	0xFF3
 54084                           intcon	equ	0xFF2
 54085                           indf0	equ	0xFEF
 54086                           postinc0	equ	0xFEE
 54087                           fsr0h	equ	0xFEA
 54088                           fsr0l	equ	0xFE9
 54089                           wreg	equ	0xFE8
 54090                           indf1	equ	0xFE7
 54091                           postinc1	equ	0xFE6
 54092                           postdec1	equ	0xFE5
 54093                           plusw1	equ	0xFE3
 54094                           fsr1h	equ	0xFE2
 54095                           fsr1l	equ	0xFE1
 54096                           indf2	equ	0xFDF
 54097                           postinc2	equ	0xFDE
 54098                           postdec2	equ	0xFDD
 54099                           plusw2	equ	0xFDB
 54100                           fsr2h	equ	0xFDA
 54101                           fsr2l	equ	0xFD9
 54102                           status	equ	0xFD8
 54103                           
 54104 ;; *************** function i2_ResetSenseData *****************
 54105 ;; Defined at:
 54106 ;;		line 1373 in file "usb_device_msd.c"
 54107 ;; Parameters:    Size  Location     Type
 54108 ;;		None
 54109 ;; Auto vars:     Size  Location     Type
 54110 ;;		None
 54111 ;; Return value:  Size  Location     Type
 54112 ;;                  1    wreg      void 
 54113 ;; Registers used:
 54114 ;;		wreg, status,2
 54115 ;; Tracked objects:
 54116 ;;		On entry : 0/0
 54117 ;;		On exit  : 0/0
 54118 ;;		Unchanged: 0/0
 54119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54120 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54123 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54124 ;;Total ram usage:        0 bytes
 54125 ;; Hardware stack levels used:    1
 54126 ;; This function calls:
 54127 ;;		Nothing
 54128 ;; This function is called by:
 54129 ;;		_USBMSDInit
 54130 ;; This function uses a non-reentrant model
 54131 ;;
 54132                           
 54133                           	psect	text229
 54134  014782                     __ptext229:
 54135                           	opt stack 0
 54136  014782                     i2_ResetSenseData:
 54137                           	opt stack 13
 54138                           
 54139                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 54140                           
 54141                           ; BSR set to: 2
 54142                           ;incstack = 0
 54143  014782  0101               	movlb	1	; () banked
 54144  014784  9100               	bcf	_gblSenseData& (0+255),0,b
 54145  014786  9300               	bcf	_gblSenseData& (0+255),1,b
 54146  014788  9500               	bcf	_gblSenseData& (0+255),2,b
 54147  01478A  9700               	bcf	_gblSenseData& (0+255),3,b
 54148  01478C  8900               	bsf	_gblSenseData& (0+255),4,b
 54149  01478E  8B00               	bsf	_gblSenseData& (0+255),5,b
 54150  014790  8D00               	bsf	_gblSenseData& (0+255),6,b
 54151                           
 54152                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 54153  014792  9F00               	bcf	_gblSenseData& (0+255),7,b
 54154                           
 54155                           ; BSR set to: 1
 54156                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 54157  014794  0E00               	movlw	0
 54158  014796  6F01               	movwf	(_gblSenseData+1)& (0+255),b
 54159                           
 54160                           ; BSR set to: 1
 54161                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 54162  014798  9102               	bcf	(_gblSenseData+2)& (0+255),0,b
 54163  01479A  9302               	bcf	(_gblSenseData+2)& (0+255),1,b
 54164  01479C  9502               	bcf	(_gblSenseData+2)& (0+255),2,b
 54165  01479E  9702               	bcf	(_gblSenseData+2)& (0+255),3,b
 54166                           
 54167                           ; BSR set to: 1
 54168                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 54169  0147A0  9B02               	bcf	(_gblSenseData+2)& (0+255),5,b
 54170                           
 54171                           ; BSR set to: 1
 54172                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 54173  0147A2  9D02               	bcf	(_gblSenseData+2)& (0+255),6,b
 54174                           
 54175                           ; BSR set to: 1
 54176                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 54177  0147A4  9F02               	bcf	(_gblSenseData+2)& (0+255),7,b
 54178                           
 54179                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 54180  0147A6  0E00               	movlw	0
 54181  0147A8  6F03               	movwf	(_gblSenseData+3)& (0+255),b
 54182                           
 54183                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 54184  0147AA  0E00               	movlw	0
 54185  0147AC  6F04               	movwf	(_gblSenseData+4)& (0+255),b
 54186                           
 54187                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 54188  0147AE  0E00               	movlw	0
 54189  0147B0  6F05               	movwf	(_gblSenseData+5)& (0+255),b
 54190                           
 54191                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 54192  0147B2  0E00               	movlw	0
 54193  0147B4  6F06               	movwf	(_gblSenseData+6)& (0+255),b
 54194                           
 54195                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 54196  0147B6  0E0A               	movlw	10
 54197  0147B8  6F07               	movwf	(_gblSenseData+7)& (0+255),b
 54198                           
 54199                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 54200  0147BA  0E00               	movlw	0
 54201  0147BC  6F08               	movwf	(_gblSenseData+8)& (0+255),b
 54202  0147BE  0E00               	movlw	0
 54203  0147C0  6F09               	movwf	(_gblSenseData+9)& (0+255),b
 54204  0147C2  0E00               	movlw	0
 54205  0147C4  6F0A               	movwf	(_gblSenseData+10)& (0+255),b
 54206  0147C6  0E00               	movlw	0
 54207  0147C8  6F0B               	movwf	(_gblSenseData+11)& (0+255),b
 54208                           
 54209                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 54210  0147CA  0E00               	movlw	0
 54211  0147CC  6F0C               	movwf	(_gblSenseData+12)& (0+255),b
 54212                           
 54213                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 54214  0147CE  0E00               	movlw	0
 54215  0147D0  6F0D               	movwf	(_gblSenseData+13)& (0+255),b
 54216                           
 54217                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 54218  0147D2  0E00               	movlw	0
 54219  0147D4  6F0E               	movwf	(_gblSenseData+14)& (0+255),b
 54220                           
 54221                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 54222  0147D6  0E00               	movlw	0
 54223  0147D8  6F0F               	movwf	(_gblSenseData+15)& (0+255),b
 54224                           
 54225                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 54226  0147DA  0E00               	movlw	0
 54227  0147DC  6F10               	movwf	(_gblSenseData+16)& (0+255),b
 54228                           
 54229                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 54230  0147DE  0E00               	movlw	0
 54231  0147E0  6F11               	movwf	(_gblSenseData+17)& (0+255),b
 54232                           
 54233                           ; BSR set to: 1
 54234  0147E2  0012               	return		;funcret
 54235  0147E4                     __end_ofi2_ResetSenseData:
 54236                           	opt stack 0
 54237                           tosu	equ	0xFFF
 54238                           tosh	equ	0xFFE
 54239                           tosl	equ	0xFFD
 54240                           pclatu	equ	0xFFB
 54241                           pclath	equ	0xFFA
 54242                           tblptru	equ	0xFF8
 54243                           tblptrh	equ	0xFF7
 54244                           tblptrl	equ	0xFF6
 54245                           tablat	equ	0xFF5
 54246                           prodh	equ	0xFF4
 54247                           prodl	equ	0xFF3
 54248                           intcon	equ	0xFF2
 54249                           indf0	equ	0xFEF
 54250                           postinc0	equ	0xFEE
 54251                           fsr0h	equ	0xFEA
 54252                           fsr0l	equ	0xFE9
 54253                           wreg	equ	0xFE8
 54254                           indf1	equ	0xFE7
 54255                           postinc1	equ	0xFE6
 54256                           postdec1	equ	0xFE5
 54257                           plusw1	equ	0xFE3
 54258                           fsr1h	equ	0xFE2
 54259                           fsr1l	equ	0xFE1
 54260                           indf2	equ	0xFDF
 54261                           postinc2	equ	0xFDE
 54262                           postdec2	equ	0xFDD
 54263                           plusw2	equ	0xFDB
 54264                           fsr2h	equ	0xFDA
 54265                           fsr2l	equ	0xFD9
 54266                           status	equ	0xFD8
 54267                           
 54268 ;; *************** function i2_ExternalFlash_MediaInitialize *****************
 54269 ;; Defined at:
 54270 ;;		line 10 in file "external_flash.c"
 54271 ;; Parameters:    Size  Location     Type
 54272 ;;  config          2    0[COMRAM] PTR void 
 54273 ;;		 -> NULL(0), 
 54274 ;; Auto vars:     Size  Location     Type
 54275 ;;		None
 54276 ;; Return value:  Size  Location     Type
 54277 ;;                  2    0[COMRAM] PTR struct .
 54278 ;; Registers used:
 54279 ;;		wreg, status,2, status,0
 54280 ;; Tracked objects:
 54281 ;;		On entry : 0/0
 54282 ;;		On exit  : 0/0
 54283 ;;		Unchanged: 0/0
 54284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54289 ;;Total ram usage:        2 bytes
 54290 ;; Hardware stack levels used:    1
 54291 ;; This function calls:
 54292 ;;		Nothing
 54293 ;; This function is called by:
 54294 ;;		_USBMSDInit
 54295 ;;		_MSDProcessCommand
 54296 ;; This function uses a non-reentrant model
 54297 ;;
 54298                           
 54299                           	psect	text230
 54300  015C6A                     __ptext230:
 54301                           	opt stack 0
 54302  015C6A                     i2_ExternalFlash_MediaInitialize:
 54303                           	opt stack 13
 54304                           
 54305                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 54306                           
 54307                           ; BSR set to: 1
 54308                           ;incstack = 0
 54309  015C6A  0102               	movlb	2	; () banked
 54310  015C6C  8193               	bsf	(_mediaInformation+1)& (0+255),0,b
 54311                           
 54312                           ; BSR set to: 2
 54313                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 54314  015C6E  0E02               	movlw	2
 54315  015C70  6F95               	movwf	(_mediaInformation+3)& (0+255),b
 54316  015C72  0E00               	movlw	0
 54317  015C74  6F94               	movwf	(_mediaInformation+2)& (0+255),b
 54318                           
 54319                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 54320  015C76  0E00               	movlw	0
 54321  015C78  6F92               	movwf	_mediaInformation& (0+255),b
 54322                           
 54323                           ; BSR set to: 2
 54324                           ;external_flash.c: 15: return &mediaInformation;
 54325  015C7A  0E92               	movlw	low _mediaInformation
 54326  015C7C  6E01               	movwf	?i2_ExternalFlash_MediaInitialize,c
 54327  015C7E  0E02               	movlw	high _mediaInformation
 54328  015C80  6E02               	movwf	?i2_ExternalFlash_MediaInitialize+1,c
 54329  015C82  0012               	return	
 54330  015C84                     __end_ofi2_ExternalFlash_MediaInitialize:
 54331                           	opt stack 0
 54332                           tosu	equ	0xFFF
 54333                           tosh	equ	0xFFE
 54334                           tosl	equ	0xFFD
 54335                           pclatu	equ	0xFFB
 54336                           pclath	equ	0xFFA
 54337                           tblptru	equ	0xFF8
 54338                           tblptrh	equ	0xFF7
 54339                           tblptrl	equ	0xFF6
 54340                           tablat	equ	0xFF5
 54341                           prodh	equ	0xFF4
 54342                           prodl	equ	0xFF3
 54343                           intcon	equ	0xFF2
 54344                           indf0	equ	0xFEF
 54345                           postinc0	equ	0xFEE
 54346                           fsr0h	equ	0xFEA
 54347                           fsr0l	equ	0xFE9
 54348                           wreg	equ	0xFE8
 54349                           indf1	equ	0xFE7
 54350                           postinc1	equ	0xFE6
 54351                           postdec1	equ	0xFE5
 54352                           plusw1	equ	0xFE3
 54353                           fsr1h	equ	0xFE2
 54354                           fsr1l	equ	0xFE1
 54355                           indf2	equ	0xFDF
 54356                           postinc2	equ	0xFDE
 54357                           postdec2	equ	0xFDD
 54358                           plusw2	equ	0xFDB
 54359                           fsr2h	equ	0xFDA
 54360                           fsr2l	equ	0xFD9
 54361                           status	equ	0xFD8
 54362                           
 54363 ;; *************** function i2_ExternalFlash_MediaDetect *****************
 54364 ;; Defined at:
 54365 ;;		line 29 in file "external_flash.c"
 54366 ;; Parameters:    Size  Location     Type
 54367 ;;  config          2    0[COMRAM] PTR void 
 54368 ;;		 -> NULL(0), 
 54369 ;; Auto vars:     Size  Location     Type
 54370 ;;		None
 54371 ;; Return value:  Size  Location     Type
 54372 ;;                  1    wreg      unsigned char 
 54373 ;; Registers used:
 54374 ;;		wreg
 54375 ;; Tracked objects:
 54376 ;;		On entry : 0/0
 54377 ;;		On exit  : 0/0
 54378 ;;		Unchanged: 0/0
 54379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54380 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54382 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54384 ;;Total ram usage:        2 bytes
 54385 ;; Hardware stack levels used:    1
 54386 ;; This function calls:
 54387 ;;		Nothing
 54388 ;; This function is called by:
 54389 ;;		_USBMSDInit
 54390 ;;		_MSDProcessCommand
 54391 ;; This function uses a non-reentrant model
 54392 ;;
 54393                           
 54394                           	psect	text231
 54395  015DBE                     __ptext231:
 54396                           	opt stack 0
 54397  015DBE                     i2_ExternalFlash_MediaDetect:
 54398                           	opt stack 13
 54399                           
 54400                           ;external_flash.c: 31: return 1;
 54401                           
 54402                           ; BSR set to: 2
 54403                           ;incstack = 0
 54404  015DBE  0E01               	movlw	1
 54405  015DC0  0012               	return	
 54406  015DC2                     __end_ofi2_ExternalFlash_MediaDetect:
 54407                           	opt stack 0
 54408                           tosu	equ	0xFFF
 54409                           tosh	equ	0xFFE
 54410                           tosl	equ	0xFFD
 54411                           pclatu	equ	0xFFB
 54412                           pclath	equ	0xFFA
 54413                           tblptru	equ	0xFF8
 54414                           tblptrh	equ	0xFF7
 54415                           tblptrl	equ	0xFF6
 54416                           tablat	equ	0xFF5
 54417                           prodh	equ	0xFF4
 54418                           prodl	equ	0xFF3
 54419                           intcon	equ	0xFF2
 54420                           indf0	equ	0xFEF
 54421                           postinc0	equ	0xFEE
 54422                           fsr0h	equ	0xFEA
 54423                           fsr0l	equ	0xFE9
 54424                           wreg	equ	0xFE8
 54425                           indf1	equ	0xFE7
 54426                           postinc1	equ	0xFE6
 54427                           postdec1	equ	0xFE5
 54428                           plusw1	equ	0xFE3
 54429                           fsr1h	equ	0xFE2
 54430                           fsr1l	equ	0xFE1
 54431                           indf2	equ	0xFDF
 54432                           postinc2	equ	0xFDE
 54433                           postdec2	equ	0xFDD
 54434                           plusw2	equ	0xFDB
 54435                           fsr2h	equ	0xFDA
 54436                           fsr2l	equ	0xFD9
 54437                           status	equ	0xFD8
 54438                           
 54439 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 54440 ;; Defined at:
 54441 ;;		line 46 in file "app_device_custom_hid.c"
 54442 ;; Parameters:    Size  Location     Type
 54443 ;;		None
 54444 ;; Auto vars:     Size  Location     Type
 54445 ;;		None
 54446 ;; Return value:  Size  Location     Type
 54447 ;;                  1    wreg      void 
 54448 ;; Registers used:
 54449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54450 ;; Tracked objects:
 54451 ;;		On entry : 0/0
 54452 ;;		On exit  : 0/0
 54453 ;;		Unchanged: 0/0
 54454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54459 ;;Total ram usage:        0 bytes
 54460 ;; Hardware stack levels used:    1
 54461 ;; Hardware stack levels required when called:    2
 54462 ;; This function calls:
 54463 ;;		_USBEnableEndpoint
 54464 ;;		i2_USBTransferOnePacket
 54465 ;; This function is called by:
 54466 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 54467 ;; This function uses a non-reentrant model
 54468 ;;
 54469                           
 54470                           	psect	text232
 54471  0156F8                     __ptext232:
 54472                           	opt stack 0
 54473  0156F8                     _APP_DeviceCustomHIDInitialize:
 54474                           	opt stack 13
 54475                           
 54476                           ;app_device_custom_hid.c: 50: USBInHandle = 0;
 54477                           
 54478                           ;incstack = 0
 54479  0156F8  0E00               	movlw	0
 54480  0156FA  0101               	movlb	1	; () banked
 54481  0156FC  6F35               	movwf	_USBInHandle& (0+255),b
 54482  0156FE  0E00               	movlw	0
 54483  015700  6F36               	movwf	(_USBInHandle+1)& (0+255),b
 54484                           
 54485                           ; BSR set to: 1
 54486                           ;app_device_custom_hid.c: 53: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 54487  015702  0E1E               	movlw	30
 54488  015704  6E09               	movwf	USBEnableEndpoint@options,c
 54489  015706  0E01               	movlw	1
 54490  015708  EC67  F0AA         	call	_USBEnableEndpoint
 54491                           
 54492                           ;app_device_custom_hid.c: 56: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 54493  01570C  0E00               	movlw	0
 54494  01570E  6E01               	movwf	i2USBTransferOnePacket@dir,c
 54495  015710  0E80               	movlw	low _ReceivedDataBuffer
 54496  015712  6E02               	movwf	i2USBTransferOnePacket@data,c
 54497  015714  0E03               	movlw	high _ReceivedDataBuffer
 54498  015716  6E03               	movwf	i2USBTransferOnePacket@data+1,c
 54499  015718  0E40               	movlw	64
 54500  01571A  6E04               	movwf	i2USBTransferOnePacket@len,c
 54501  01571C  0E01               	movlw	1
 54502  01571E  EC91  F08A         	call	i2_USBTransferOnePacket
 54503  015722  C001  F137         	movff	?i2_USBTransferOnePacket,_USBOutHandle
 54504  015726  C002  F138         	movff	?i2_USBTransferOnePacket+1,_USBOutHandle+1
 54505  01572A  0012               	return		;funcret
 54506  01572C                     __end_of_APP_DeviceCustomHIDInitialize:
 54507                           	opt stack 0
 54508                           tosu	equ	0xFFF
 54509                           tosh	equ	0xFFE
 54510                           tosl	equ	0xFFD
 54511                           pclatu	equ	0xFFB
 54512                           pclath	equ	0xFFA
 54513                           tblptru	equ	0xFF8
 54514                           tblptrh	equ	0xFF7
 54515                           tblptrl	equ	0xFF6
 54516                           tablat	equ	0xFF5
 54517                           prodh	equ	0xFF4
 54518                           prodl	equ	0xFF3
 54519                           intcon	equ	0xFF2
 54520                           indf0	equ	0xFEF
 54521                           postinc0	equ	0xFEE
 54522                           fsr0h	equ	0xFEA
 54523                           fsr0l	equ	0xFE9
 54524                           wreg	equ	0xFE8
 54525                           indf1	equ	0xFE7
 54526                           postinc1	equ	0xFE6
 54527                           postdec1	equ	0xFE5
 54528                           plusw1	equ	0xFE3
 54529                           fsr1h	equ	0xFE2
 54530                           fsr1l	equ	0xFE1
 54531                           indf2	equ	0xFDF
 54532                           postinc2	equ	0xFDE
 54533                           postdec2	equ	0xFDD
 54534                           plusw2	equ	0xFDB
 54535                           fsr2h	equ	0xFDA
 54536                           fsr2l	equ	0xFD9
 54537                           status	equ	0xFD8
 54538                           
 54539 ;; *************** function i2_USBTransferOnePacket *****************
 54540 ;; Defined at:
 54541 ;;		line 995 in file "usb_device.c"
 54542 ;; Parameters:    Size  Location     Type
 54543 ;;  ep              1    wreg     unsigned char 
 54544 ;;  dir             1    0[COMRAM] unsigned char 
 54545 ;;  data            2    1[COMRAM] PTR unsigned char 
 54546 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 54547 ;;		 -> msd_cbw(31), NULL(0), 
 54548 ;;  len             1    3[COMRAM] unsigned char 
 54549 ;; Auto vars:     Size  Location     Type
 54550 ;;  ep              1    8[COMRAM] unsigned char 
 54551 ;;  USBTransferO    2    9[COMRAM] PTR volatile struct __BD
 54552 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 54553 ;; Return value:  Size  Location     Type
 54554 ;;                  2    0[COMRAM] PTR void 
 54555 ;; Registers used:
 54556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54557 ;; Tracked objects:
 54558 ;;		On entry : 0/0
 54559 ;;		On exit  : 0/0
 54560 ;;		Unchanged: 0/0
 54561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54562 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54563 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54564 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54565 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54566 ;;Total ram usage:       11 bytes
 54567 ;; Hardware stack levels used:    1
 54568 ;; This function calls:
 54569 ;;		Nothing
 54570 ;; This function is called by:
 54571 ;;		_USBMSDInit
 54572 ;;		_USBCheckMSDRequest
 54573 ;;		_MSDTransferTerminated
 54574 ;;		_APP_DeviceCustomHIDInitialize
 54575 ;; This function uses a non-reentrant model
 54576 ;;
 54577                           
 54578                           	psect	text233
 54579  011522                     __ptext233:
 54580                           	opt stack 0
 54581  011522                     i2_USBTransferOnePacket:
 54582                           	opt stack 14
 54583                           
 54584                           ;incstack = 0
 54585                           ;i2USBTransferOnePacket@ep stored from wreg
 54586  011522  6E09               	movwf	i2USBTransferOnePacket@ep,c
 54587                           
 54588                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 54589  011524  5001               	movf	i2USBTransferOnePacket@dir,w,c
 54590  011526  B4D8               	btfsc	status,2,c
 54591  011528  D007               	goto	i2l184
 54592                           
 54593                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 54594  01152A  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54595  01152C  0D02               	mullw	2
 54596  01152E  0E52               	movlw	low _pBDTEntryIn
 54597  011530  24F3               	addwf	prodl,w,c
 54598  011532  6ED9               	movwf	fsr2l,c
 54599  011534  0E00               	movlw	high _pBDTEntryIn
 54600  011536  D006               	goto	L81
 54601  011538                     i2l184:
 54602                           
 54603                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 54604  011538  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54605  01153A  0D02               	mullw	2
 54606  01153C  0E1B               	movlw	low _pBDTEntryOut
 54607  01153E  24F3               	addwf	prodl,w,c
 54608  011540  6ED9               	movwf	fsr2l,c
 54609  011542  0E01               	movlw	high _pBDTEntryOut
 54610  011544                     L81:
 54611  011544  20F4               	addwfc	prodh,w,c
 54612  011546  6EDA               	movwf	fsr2h,c
 54613  011548  CFDE F00A          	movff	postinc2,i2USBTransferOnePacket@handle
 54614  01154C  CFDD F00B          	movff	postdec2,i2USBTransferOnePacket@handle+1
 54615                           
 54616                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 54617  011550  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54618  011552  100B               	iorwf	i2USBTransferOnePacket@handle+1,w,c
 54619  011554  A4D8               	btfss	status,2,c
 54620  011556  D005               	goto	i2l186
 54621                           
 54622                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 54623  011558  0E00               	movlw	0
 54624  01155A  6E01               	movwf	?i2_USBTransferOnePacket,c
 54625  01155C  0E00               	movlw	0
 54626  01155E  6E02               	movwf	?i2_USBTransferOnePacket+1,c
 54627  011560  0012               	return	
 54628  011562                     i2l186:
 54629                           
 54630                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 54631  011562  EE20 F002          	lfsr	2,2
 54632  011566  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54633  011568  26D9               	addwf	fsr2l,f,c
 54634  01156A  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 54635  01156C  22DA               	addwfc	fsr2h,f,c
 54636  01156E  C002  FFDE         	movff	i2USBTransferOnePacket@data,postinc2
 54637  011572  C003  FFDD         	movff	i2USBTransferOnePacket@data+1,postdec2
 54638                           
 54639                           ;usb_device.c: 1030: handle->CNT = len;
 54640  011576  EE20 F001          	lfsr	2,1
 54641  01157A  500A               	movf	i2USBTransferOnePacket@handle,w,c
 54642  01157C  26D9               	addwf	fsr2l,f,c
 54643  01157E  500B               	movf	i2USBTransferOnePacket@handle+1,w,c
 54644  011580  22DA               	addwfc	fsr2h,f,c
 54645  011582  C004  FFDF         	movff	i2USBTransferOnePacket@len,indf2
 54646                           
 54647                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 54648  011586  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54649  01158A  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 54650  01158E  0E40               	movlw	64
 54651  011590  16DF               	andwf	indf2,f,c
 54652                           
 54653                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 54654  011592  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54655  011596  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 54656  01159A  0E00               	movlw	0
 54657  01159C  86DB               	bsf	plusw2,3,c
 54658                           
 54659                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 54660  01159E  C00A  FFD9         	movff	i2USBTransferOnePacket@handle,fsr2l
 54661  0115A2  C00B  FFDA         	movff	i2USBTransferOnePacket@handle+1,fsr2h
 54662  0115A6  0E00               	movlw	0
 54663  0115A8  8EDB               	bsf	plusw2,7,c
 54664                           
 54665                           ;usb_device.c: 1036: if(dir != 0)
 54666  0115AA  5001               	movf	i2USBTransferOnePacket@dir,w,c
 54667  0115AC  B4D8               	btfsc	status,2,c
 54668  0115AE  D018               	goto	i2l188
 54669                           
 54670                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 54671  0115B0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54672  0115B2  0D02               	mullw	2
 54673  0115B4  0E52               	movlw	low _pBDTEntryIn
 54674  0115B6  24F3               	addwf	prodl,w,c
 54675  0115B8  6ED9               	movwf	fsr2l,c
 54676  0115BA  0E00               	movlw	high _pBDTEntryIn
 54677  0115BC  20F4               	addwfc	prodh,w,c
 54678  0115BE  6EDA               	movwf	fsr2h,c
 54679  0115C0  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 54680  0115C4  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 54681  0115C8  0E04               	movlw	4
 54682  0115CA  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 54683  0115CC  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 54684  0115CE  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 54685  0115D0  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 54686  0115D2  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54687  0115D4  0D02               	mullw	2
 54688  0115D6  0E52               	movlw	low _pBDTEntryIn
 54689  0115D8  24F3               	addwf	prodl,w,c
 54690  0115DA  6ED9               	movwf	fsr2l,c
 54691  0115DC  0E00               	movlw	high _pBDTEntryIn
 54692  0115DE  D017               	goto	L82
 54693  0115E0                     i2l188:
 54694                           
 54695                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 54696  0115E0  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54697  0115E2  0D02               	mullw	2
 54698  0115E4  0E1B               	movlw	low _pBDTEntryOut
 54699  0115E6  24F3               	addwf	prodl,w,c
 54700  0115E8  6ED9               	movwf	fsr2l,c
 54701  0115EA  0E01               	movlw	high _pBDTEntryOut
 54702  0115EC  20F4               	addwfc	prodh,w,c
 54703  0115EE  6EDA               	movwf	fsr2h,c
 54704  0115F0  CFDE F005          	movff	postinc2,??i2_USBTransferOnePacket
 54705  0115F4  CFDD F006          	movff	postdec2,??i2_USBTransferOnePacket+1
 54706  0115F8  0E04               	movlw	4
 54707  0115FA  1805               	xorwf	??i2_USBTransferOnePacket,w,c
 54708  0115FC  6E07               	movwf	(??i2_USBTransferOnePacket+2)& (0+255),c
 54709  0115FE  5006               	movf	??i2_USBTransferOnePacket+1,w,c
 54710  011600  6E08               	movwf	(??i2_USBTransferOnePacket+3)& (0+255),c
 54711  011602  5009               	movf	i2USBTransferOnePacket@ep,w,c
 54712  011604  0D02               	mullw	2
 54713  011606  0E1B               	movlw	low _pBDTEntryOut
 54714  011608  24F3               	addwf	prodl,w,c
 54715  01160A  6ED9               	movwf	fsr2l,c
 54716  01160C  0E01               	movlw	high _pBDTEntryOut
 54717  01160E                     L82:
 54718  01160E  20F4               	addwfc	prodh,w,c
 54719  011610  6EDA               	movwf	fsr2h,c
 54720  011612  C007  FFDE         	movff	??i2_USBTransferOnePacket+2,postinc2
 54721  011616  C008  FFDD         	movff	??i2_USBTransferOnePacket+3,postdec2
 54722                           
 54723                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 54724  01161A  C00A  F001         	movff	i2USBTransferOnePacket@handle,?i2_USBTransferOnePacket
 54725  01161E  C00B  F002         	movff	i2USBTransferOnePacket@handle+1,?i2_USBTransferOnePacket+1
 54726  011622  0012               	return	
 54727  011624                     __end_ofi2_USBTransferOnePacket:
 54728                           	opt stack 0
 54729                           tosu	equ	0xFFF
 54730                           tosh	equ	0xFFE
 54731                           tosl	equ	0xFFD
 54732                           pclatu	equ	0xFFB
 54733                           pclath	equ	0xFFA
 54734                           tblptru	equ	0xFF8
 54735                           tblptrh	equ	0xFF7
 54736                           tblptrl	equ	0xFF6
 54737                           tablat	equ	0xFF5
 54738                           prodh	equ	0xFF4
 54739                           prodl	equ	0xFF3
 54740                           intcon	equ	0xFF2
 54741                           indf0	equ	0xFEF
 54742                           postinc0	equ	0xFEE
 54743                           fsr0h	equ	0xFEA
 54744                           fsr0l	equ	0xFE9
 54745                           wreg	equ	0xFE8
 54746                           indf1	equ	0xFE7
 54747                           postinc1	equ	0xFE6
 54748                           postdec1	equ	0xFE5
 54749                           plusw1	equ	0xFE3
 54750                           fsr1h	equ	0xFE2
 54751                           fsr1l	equ	0xFE1
 54752                           indf2	equ	0xFDF
 54753                           postinc2	equ	0xFDE
 54754                           postdec2	equ	0xFDD
 54755                           plusw2	equ	0xFDB
 54756                           fsr2h	equ	0xFDA
 54757                           fsr2l	equ	0xFD9
 54758                           status	equ	0xFD8
 54759                           
 54760 ;; *************** function _USBEnableEndpoint *****************
 54761 ;; Defined at:
 54762 ;;		line 878 in file "usb_device.c"
 54763 ;; Parameters:    Size  Location     Type
 54764 ;;  ep              1    wreg     unsigned char 
 54765 ;;  options         1    8[COMRAM] unsigned char 
 54766 ;; Auto vars:     Size  Location     Type
 54767 ;;  ep              1   11[COMRAM] unsigned char 
 54768 ;;  p               2    9[COMRAM] PTR unsigned char 
 54769 ;;		 -> UEP0(1), 
 54770 ;; Return value:  Size  Location     Type
 54771 ;;                  1    wreg      void 
 54772 ;; Registers used:
 54773 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 54774 ;; Tracked objects:
 54775 ;;		On entry : 0/0
 54776 ;;		On exit  : 0/0
 54777 ;;		Unchanged: 0/0
 54778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54779 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54780 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54781 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54782 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54783 ;;Total ram usage:        4 bytes
 54784 ;; Hardware stack levels used:    1
 54785 ;; Hardware stack levels required when called:    1
 54786 ;; This function calls:
 54787 ;;		_USBConfigureEndpoint
 54788 ;; This function is called by:
 54789 ;;		_APP_DeviceCustomHIDInitialize
 54790 ;;		_APP_DeviceMSDInitialize
 54791 ;; This function uses a non-reentrant model
 54792 ;;
 54793                           
 54794                           	psect	text234
 54795  0154CE                     __ptext234:
 54796                           	opt stack 0
 54797  0154CE                     _USBEnableEndpoint:
 54798                           	opt stack 13
 54799                           
 54800                           ;incstack = 0
 54801                           ;USBEnableEndpoint@ep stored from wreg
 54802  0154CE  6E0C               	movwf	USBEnableEndpoint@ep,c
 54803                           
 54804                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 54805  0154D0  A409               	btfss	USBEnableEndpoint@options,2,c
 54806  0154D2  D005               	goto	i2l179
 54807                           
 54808                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 54809  0154D4  0E00               	movlw	0
 54810  0154D6  6E01               	movwf	USBConfigureEndpoint@direction,c
 54811  0154D8  500C               	movf	USBEnableEndpoint@ep,w,c
 54812  0154DA  EC5F  F09D         	call	_USBConfigureEndpoint
 54813  0154DE                     i2l179:
 54814                           
 54815                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 54816  0154DE  A209               	btfss	USBEnableEndpoint@options,1,c
 54817  0154E0  D005               	goto	i2l180
 54818                           
 54819                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 54820  0154E2  0E01               	movlw	1
 54821  0154E4  6E01               	movwf	USBConfigureEndpoint@direction,c
 54822  0154E6  500C               	movf	USBEnableEndpoint@ep,w,c
 54823  0154E8  EC5F  F09D         	call	_USBConfigureEndpoint
 54824  0154EC                     i2l180:
 54825                           
 54826                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 54827  0154EC  500C               	movf	USBEnableEndpoint@ep,w,c
 54828  0154EE  0D01               	mullw	1
 54829  0154F0  0E26               	movlw	38
 54830  0154F2  24F3               	addwf	prodl,w,c
 54831  0154F4  6E0A               	movwf	USBEnableEndpoint@p,c
 54832  0154F6  0E0F               	movlw	15
 54833  0154F8  20F4               	addwfc	prodh,w,c
 54834  0154FA  6E0B               	movwf	USBEnableEndpoint@p+1,c
 54835                           
 54836                           ;usb_device.c: 901: *p = options;
 54837  0154FC  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 54838  015500  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 54839  015504  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 54840  015508  0012               	return		;funcret
 54841  01550A                     __end_of_USBEnableEndpoint:
 54842                           	opt stack 0
 54843                           tosu	equ	0xFFF
 54844                           tosh	equ	0xFFE
 54845                           tosl	equ	0xFFD
 54846                           pclatu	equ	0xFFB
 54847                           pclath	equ	0xFFA
 54848                           tblptru	equ	0xFF8
 54849                           tblptrh	equ	0xFF7
 54850                           tblptrl	equ	0xFF6
 54851                           tablat	equ	0xFF5
 54852                           prodh	equ	0xFF4
 54853                           prodl	equ	0xFF3
 54854                           intcon	equ	0xFF2
 54855                           indf0	equ	0xFEF
 54856                           postinc0	equ	0xFEE
 54857                           fsr0h	equ	0xFEA
 54858                           fsr0l	equ	0xFE9
 54859                           wreg	equ	0xFE8
 54860                           indf1	equ	0xFE7
 54861                           postinc1	equ	0xFE6
 54862                           postdec1	equ	0xFE5
 54863                           plusw1	equ	0xFE3
 54864                           fsr1h	equ	0xFE2
 54865                           fsr1l	equ	0xFE1
 54866                           indf2	equ	0xFDF
 54867                           postinc2	equ	0xFDE
 54868                           postdec2	equ	0xFDD
 54869                           plusw2	equ	0xFDB
 54870                           fsr2h	equ	0xFDA
 54871                           fsr2l	equ	0xFD9
 54872                           status	equ	0xFD8
 54873                           
 54874 ;; *************** function _USBConfigureEndpoint *****************
 54875 ;; Defined at:
 54876 ;;		line 1545 in file "usb_device.c"
 54877 ;; Parameters:    Size  Location     Type
 54878 ;;  EPNum           1    wreg     unsigned char 
 54879 ;;  direction       1    0[COMRAM] unsigned char 
 54880 ;; Auto vars:     Size  Location     Type
 54881 ;;  EPNum           1    5[COMRAM] unsigned char 
 54882 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 54883 ;;		 -> BDT(48), 
 54884 ;; Return value:  Size  Location     Type
 54885 ;;                  1    wreg      void 
 54886 ;; Registers used:
 54887 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 54888 ;; Tracked objects:
 54889 ;;		On entry : 0/0
 54890 ;;		On exit  : 0/0
 54891 ;;		Unchanged: 0/0
 54892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 54893 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54894 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54895 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54896 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 54897 ;;Total ram usage:        8 bytes
 54898 ;; Hardware stack levels used:    1
 54899 ;; This function calls:
 54900 ;;		Nothing
 54901 ;; This function is called by:
 54902 ;;		_USBEnableEndpoint
 54903 ;; This function uses a non-reentrant model
 54904 ;;
 54905                           
 54906                           	psect	text235
 54907  013ABE                     __ptext235:
 54908                           	opt stack 0
 54909  013ABE                     _USBConfigureEndpoint:
 54910                           	opt stack 13
 54911                           
 54912                           ;incstack = 0
 54913                           ;USBConfigureEndpoint@EPNum stored from wreg
 54914  013ABE  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 54915                           
 54916                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 54917  013AC0  0E00               	movlw	0
 54918  013AC2  6E07               	movwf	USBConfigureEndpoint@handle,c
 54919  013AC4  0E0D               	movlw	13
 54920  013AC6  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 54921                           
 54922                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 54923  013AC8  5001               	movf	USBConfigureEndpoint@direction,w,c
 54924  013ACA  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 54925  013ACC  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 54926  013ACE  90D8               	bcf	status,0,c
 54927  013AD0  3602               	rlcf	??_USBConfigureEndpoint,f,c
 54928  013AD2  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 54929  013AD4  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54930  013AD6  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 54931  013AD8  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 54932  013ADA  90D8               	bcf	status,0,c
 54933  013ADC  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54934  013ADE  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54935  013AE0  90D8               	bcf	status,0,c
 54936  013AE2  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54937  013AE4  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54938  013AE6  5002               	movf	??_USBConfigureEndpoint,w,c
 54939  013AE8  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 54940  013AEA  5003               	movf	??_USBConfigureEndpoint+1,w,c
 54941  013AEC  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 54942  013AEE  90D8               	bcf	status,0,c
 54943  013AF0  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54944  013AF2  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54945  013AF4  90D8               	bcf	status,0,c
 54946  013AF6  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 54947  013AF8  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 54948  013AFA  5004               	movf	??_USBConfigureEndpoint+2,w,c
 54949  013AFC  2607               	addwf	USBConfigureEndpoint@handle,f,c
 54950  013AFE  5005               	movf	??_USBConfigureEndpoint+3,w,c
 54951  013B00  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 54952                           
 54953                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 54954  013B02  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54955  013B06  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54956  013B0A  9EDF               	bcf	indf2,7,c
 54957                           
 54958                           ;usb_device.c: 1559: if(direction == 0)
 54959  013B0C  5001               	movf	USBConfigureEndpoint@direction,w,c
 54960  013B0E  A4D8               	btfss	status,2,c
 54961  013B10  D007               	goto	i2l226
 54962                           
 54963                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 54964  013B12  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54965  013B14  0D02               	mullw	2
 54966  013B16  0E1B               	movlw	low _pBDTEntryOut
 54967  013B18  24F3               	addwf	prodl,w,c
 54968  013B1A  6ED9               	movwf	fsr2l,c
 54969  013B1C  0E01               	movlw	high _pBDTEntryOut
 54970  013B1E  D006               	goto	L83
 54971  013B20                     i2l226:
 54972                           
 54973                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 54974  013B20  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 54975  013B22  0D02               	mullw	2
 54976  013B24  0E52               	movlw	low _pBDTEntryIn
 54977  013B26  24F3               	addwf	prodl,w,c
 54978  013B28  6ED9               	movwf	fsr2l,c
 54979  013B2A  0E00               	movlw	high _pBDTEntryIn
 54980  013B2C                     L83:
 54981  013B2C  20F4               	addwfc	prodh,w,c
 54982  013B2E  6EDA               	movwf	fsr2h,c
 54983  013B30  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 54984  013B34  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 54985                           
 54986                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 54987  013B38  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 54988  013B3C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 54989  013B40  9CDF               	bcf	indf2,6,c
 54990                           
 54991                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 54992  013B42  EE20 F004          	lfsr	2,4
 54993  013B46  5007               	movf	USBConfigureEndpoint@handle,w,c
 54994  013B48  26D9               	addwf	fsr2l,f,c
 54995  013B4A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 54996  013B4C  22DA               	addwfc	fsr2h,f,c
 54997  013B4E  8CDF               	bsf	indf2,6,c
 54998  013B50  0012               	return		;funcret
 54999  013B52                     __end_of_USBConfigureEndpoint:
 55000                           	opt stack 0
 55001                           tosu	equ	0xFFF
 55002                           tosh	equ	0xFFE
 55003                           tosl	equ	0xFFD
 55004                           pclatu	equ	0xFFB
 55005                           pclath	equ	0xFFA
 55006                           tblptru	equ	0xFF8
 55007                           tblptrh	equ	0xFF7
 55008                           tblptrl	equ	0xFF6
 55009                           tablat	equ	0xFF5
 55010                           prodh	equ	0xFF4
 55011                           prodl	equ	0xFF3
 55012                           intcon	equ	0xFF2
 55013                           indf0	equ	0xFEF
 55014                           postinc0	equ	0xFEE
 55015                           fsr0h	equ	0xFEA
 55016                           fsr0l	equ	0xFE9
 55017                           wreg	equ	0xFE8
 55018                           indf1	equ	0xFE7
 55019                           postinc1	equ	0xFE6
 55020                           postdec1	equ	0xFE5
 55021                           plusw1	equ	0xFE3
 55022                           fsr1h	equ	0xFE2
 55023                           fsr1l	equ	0xFE1
 55024                           indf2	equ	0xFDF
 55025                           postinc2	equ	0xFDE
 55026                           postdec2	equ	0xFDD
 55027                           plusw2	equ	0xFDB
 55028                           fsr2h	equ	0xFDA
 55029                           fsr2l	equ	0xFD9
 55030                           status	equ	0xFD8
 55031                           
 55032 ;; *************** function _USBCtrlTrfOutHandler *****************
 55033 ;; Defined at:
 55034 ;;		line 2540 in file "usb_device.c"
 55035 ;; Parameters:    Size  Location     Type
 55036 ;;		None
 55037 ;; Auto vars:     Size  Location     Type
 55038 ;;		None
 55039 ;; Return value:  Size  Location     Type
 55040 ;;                  1    wreg      void 
 55041 ;; Registers used:
 55042 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55043 ;; Tracked objects:
 55044 ;;		On entry : 0/0
 55045 ;;		On exit  : 0/0
 55046 ;;		Unchanged: 0/0
 55047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55050 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55051 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55052 ;;Total ram usage:        0 bytes
 55053 ;; Hardware stack levels used:    1
 55054 ;; Hardware stack levels required when called:    2
 55055 ;; This function calls:
 55056 ;;		_USBCtrlTrfRxService
 55057 ;; This function is called by:
 55058 ;;		_USBCtrlEPService
 55059 ;; This function uses a non-reentrant model
 55060 ;;
 55061                           
 55062                           	psect	text236
 55063  014844                     __ptext236:
 55064                           	opt stack 0
 55065  014844                     _USBCtrlTrfOutHandler:
 55066                           	opt stack 13
 55067                           
 55068                           ;usb_device.c: 2542: if(controlTransferState == 2)
 55069                           
 55070                           ;incstack = 0
 55071  014844  0E02               	movlw	2
 55072  014846  0101               	movlb	1	; () banked
 55073  014848  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55074  01484A  A4D8               	btfss	status,2,c
 55075  01484C  D003               	goto	i2l332
 55076                           
 55077                           ; BSR set to: 1
 55078                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 55079  01484E  EC7F  F088         	call	_USBCtrlTrfRxService	;wreg free
 55080                           
 55081                           ;usb_device.c: 2545: }
 55082  014852  0012               	return	
 55083  014854                     i2l332:
 55084                           
 55085                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 55086  014854  0E00               	movlw	0
 55087  014856  0101               	movlb	1	; () banked
 55088  014858  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 55089                           
 55090                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 55091  01485A  515E               	movf	_BothEP0OutUOWNsSet& (0+255),w,b	;volatile
 55092  01485C  A4D8               	btfss	status,2,c
 55093  01485E  D01F               	goto	i2l334
 55094                           
 55095                           ; BSR set to: 1
 55096                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 55097  014860  EE20 F001          	lfsr	2,1
 55098  014864  505C               	movf	_pBDTEntryEP0OutNext,w,c
 55099  014866  26D9               	addwf	fsr2l,f,c
 55100  014868  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 55101  01486A  22DA               	addwfc	fsr2h,f,c
 55102  01486C  0E08               	movlw	8
 55103  01486E  6EDF               	movwf	indf2,c
 55104                           
 55105                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55106  014870  EE20 F002          	lfsr	2,2
 55107  014874  505C               	movf	_pBDTEntryEP0OutNext,w,c
 55108  014876  26D9               	addwf	fsr2l,f,c
 55109  014878  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 55110  01487A  22DA               	addwfc	fsr2h,f,c
 55111  01487C  0E30               	movlw	48
 55112  01487E  6EDE               	movwf	postinc2,c
 55113  014880  0E0D               	movlw	13
 55114  014882  6EDD               	movwf	postdec2,c
 55115                           
 55116                           ; BSR set to: 1
 55117                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 55118  014884  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55119  014888  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55120  01488C  0E0C               	movlw	12
 55121  01488E  6EDF               	movwf	indf2,c
 55122                           
 55123                           ; BSR set to: 1
 55124                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55125  014890  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55126  014894  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55127  014898  0E00               	movlw	0
 55128  01489A  8EDB               	bsf	plusw2,7,c
 55129                           
 55130                           ;usb_device.c: 2563: }
 55131  01489C  0012               	return	
 55132  01489E                     i2l334:
 55133                           
 55134                           ; BSR set to: 1
 55135                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 55136                           
 55137                           ; BSR set to: 1
 55138  01489E  0E00               	movlw	0
 55139  0148A0  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55140                           
 55141                           ; BSR set to: 1
 55142  0148A2  0012               	return	
 55143  0148A4                     __end_of_USBCtrlTrfOutHandler:
 55144                           	opt stack 0
 55145                           tosu	equ	0xFFF
 55146                           tosh	equ	0xFFE
 55147                           tosl	equ	0xFFD
 55148                           pclatu	equ	0xFFB
 55149                           pclath	equ	0xFFA
 55150                           tblptru	equ	0xFF8
 55151                           tblptrh	equ	0xFF7
 55152                           tblptrl	equ	0xFF6
 55153                           tablat	equ	0xFF5
 55154                           prodh	equ	0xFF4
 55155                           prodl	equ	0xFF3
 55156                           intcon	equ	0xFF2
 55157                           indf0	equ	0xFEF
 55158                           postinc0	equ	0xFEE
 55159                           fsr0h	equ	0xFEA
 55160                           fsr0l	equ	0xFE9
 55161                           wreg	equ	0xFE8
 55162                           indf1	equ	0xFE7
 55163                           postinc1	equ	0xFE6
 55164                           postdec1	equ	0xFE5
 55165                           plusw1	equ	0xFE3
 55166                           fsr1h	equ	0xFE2
 55167                           fsr1l	equ	0xFE1
 55168                           indf2	equ	0xFDF
 55169                           postinc2	equ	0xFDE
 55170                           postdec2	equ	0xFDD
 55171                           plusw2	equ	0xFDB
 55172                           fsr2h	equ	0xFDA
 55173                           fsr2l	equ	0xFD9
 55174                           status	equ	0xFD8
 55175                           
 55176 ;; *************** function _USBCtrlTrfRxService *****************
 55177 ;; Defined at:
 55178 ;;		line 1854 in file "usb_device.c"
 55179 ;; Parameters:    Size  Location     Type
 55180 ;;		None
 55181 ;; Auto vars:     Size  Location     Type
 55182 ;;  byteToRead      1    1[COMRAM] unsigned char 
 55183 ;;  i               1    0[COMRAM] unsigned char 
 55184 ;; Return value:  Size  Location     Type
 55185 ;;                  1    wreg      void 
 55186 ;; Registers used:
 55187 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 55188 ;; Tracked objects:
 55189 ;;		On entry : 0/0
 55190 ;;		On exit  : 0/0
 55191 ;;		Unchanged: 0/0
 55192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55193 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55194 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55195 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55196 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55197 ;;Total ram usage:        2 bytes
 55198 ;; Hardware stack levels used:    1
 55199 ;; Hardware stack levels required when called:    1
 55200 ;; This function calls:
 55201 ;;		_USBCtrlEPAllowStatusStage
 55202 ;; This function is called by:
 55203 ;;		_USBCtrlTrfOutHandler
 55204 ;; This function uses a non-reentrant model
 55205 ;;
 55206                           
 55207                           	psect	text237
 55208  0110FE                     __ptext237:
 55209                           	opt stack 0
 55210  0110FE                     _USBCtrlTrfRxService:
 55211                           	opt stack 13
 55212                           
 55213                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 55214                           
 55215                           ;incstack = 0
 55216  0110FE  0101               	movlb	1	; () banked
 55217  011100  EE20 F001          	lfsr	2,1
 55218  011104  5143               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 55219  011106  26D9               	addwf	fsr2l,f,c
 55220  011108  5144               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 55221  01110A  22DA               	addwfc	fsr2h,f,c
 55222  01110C  50DF               	movf	indf2,w,c
 55223  01110E  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 55224                           
 55225                           ; BSR set to: 1
 55226                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 55227  011110  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55228  011112  5D16               	subwf	(_outPipes+4)& (0+255),w,b	;volatile
 55229  011114  0E00               	movlw	0
 55230  011116  5917               	subwfb	(_outPipes+5)& (0+255),w,b	;volatile
 55231  011118  A0D8               	btfss	status,0,c
 55232                           
 55233                           ; BSR set to: 1
 55234                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 55235  01111A  C116  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead	;volatile
 55236                           
 55237                           ; BSR set to: 1
 55238                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 55239                           
 55240                           ; BSR set to: 1
 55241  01111E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55242  011120  5F16               	subwf	(_outPipes+4)& (0+255),f,b	;volatile
 55243  011122  0E00               	movlw	0
 55244  011124  5B17               	subwfb	(_outPipes+5)& (0+255),f,b	;volatile
 55245                           
 55246                           ; BSR set to: 1
 55247                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 55248  011126  0E00               	movlw	0
 55249  011128  6E01               	movwf	USBCtrlTrfRxService@i,c
 55250  01112A  D011               	goto	i2l260
 55251  01112C                     
 55252                           ; BSR set to: 1
 55253                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 55254                           
 55255                           ; BSR set to: 1
 55256  01112C  5001               	movf	USBCtrlTrfRxService@i,w,c
 55257  01112E  0D01               	mullw	1
 55258  011130  0E38               	movlw	56
 55259  011132  24F3               	addwf	prodl,w,c
 55260  011134  6ED9               	movwf	fsr2l,c
 55261  011136  0E0D               	movlw	13
 55262  011138  20F4               	addwfc	prodh,w,c
 55263  01113A  6EDA               	movwf	fsr2h,c
 55264  01113C  C112  FFE1         	movff	_outPipes,fsr1l	;volatile
 55265  011140  C113  FFE2         	movff	_outPipes+1,fsr1h	;volatile
 55266  011144  CFDF FFE7          	movff	indf2,indf1
 55267                           
 55268                           ; BSR set to: 1
 55269  011148  4B12               	infsnz	_outPipes& (0+255),f,b	;volatile
 55270  01114A  2B13               	incf	(_outPipes+1)& (0+255),f,b	;volatile
 55271                           
 55272                           ; BSR set to: 1
 55273  01114C  2A01               	incf	USBCtrlTrfRxService@i,f,c
 55274  01114E                     i2l260:
 55275                           
 55276                           ; BSR set to: 1
 55277                           
 55278                           ; BSR set to: 1
 55279  01114E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 55280  011150  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 55281  011152  A0D8               	btfss	status,0,c
 55282  011154  D7EB               	goto	i2l261
 55283                           
 55284                           ; BSR set to: 1
 55285                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 55286                           
 55287                           ; BSR set to: 1
 55288  011156  5116               	movf	(_outPipes+4)& (0+255),w,b	;volatile
 55289  011158  1117               	iorwf	(_outPipes+5)& (0+255),w,b	;volatile
 55290  01115A  B4D8               	btfsc	status,2,c
 55291  01115C  D032               	goto	i2l263
 55292                           
 55293                           ; BSR set to: 1
 55294                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 55295  01115E  EE20 F001          	lfsr	2,1
 55296  011162  505C               	movf	_pBDTEntryEP0OutNext,w,c
 55297  011164  26D9               	addwf	fsr2l,f,c
 55298  011166  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 55299  011168  22DA               	addwfc	fsr2h,f,c
 55300  01116A  0E08               	movlw	8
 55301  01116C  6EDF               	movwf	indf2,c
 55302                           
 55303                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 55304  01116E  EE20 F002          	lfsr	2,2
 55305  011172  505C               	movf	_pBDTEntryEP0OutNext,w,c
 55306  011174  26D9               	addwf	fsr2l,f,c
 55307  011176  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 55308  011178  22DA               	addwfc	fsr2h,f,c
 55309  01117A  0E38               	movlw	56
 55310  01117C  6EDE               	movwf	postinc2,c
 55311  01117E  0E0D               	movlw	13
 55312  011180  6EDD               	movwf	postdec2,c
 55313                           
 55314                           ; BSR set to: 1
 55315                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 55316  011182  C143  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55317  011186  C144  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55318  01118A  BCDF               	btfsc	indf2,6,c
 55319  01118C  D00D               	goto	i2l264
 55320                           
 55321                           ; BSR set to: 1
 55322                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 55323  01118E  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55324  011192  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55325  011196  0E48               	movlw	72
 55326  011198  6EDF               	movwf	indf2,c
 55327                           
 55328                           ; BSR set to: 1
 55329                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55330  01119A  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55331  01119E  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55332  0111A2  0E00               	movlw	0
 55333  0111A4  8EDB               	bsf	plusw2,7,c
 55334                           
 55335                           ;usb_device.c: 1891: }
 55336  0111A6  0012               	return	
 55337  0111A8                     i2l264:
 55338                           
 55339                           ; BSR set to: 1
 55340                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 55341                           
 55342                           ; BSR set to: 1
 55343  0111A8  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55344  0111AC  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55345  0111B0  0E08               	movlw	8
 55346  0111B2  6EDF               	movwf	indf2,c
 55347                           
 55348                           ; BSR set to: 1
 55349                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55350  0111B4  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55351  0111B8  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55352  0111BC  0E00               	movlw	0
 55353  0111BE  8EDB               	bsf	plusw2,7,c
 55354                           
 55355                           ; BSR set to: 1
 55356                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 55357  0111C0  0012               	return	
 55358  0111C2                     i2l263:
 55359                           
 55360                           ; BSR set to: 1
 55361                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 55362                           
 55363                           ; BSR set to: 1
 55364  0111C2  EE20 F001          	lfsr	2,1
 55365  0111C6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 55366  0111C8  26D9               	addwf	fsr2l,f,c
 55367  0111CA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 55368  0111CC  22DA               	addwfc	fsr2h,f,c
 55369  0111CE  0E08               	movlw	8
 55370  0111D0  6EDF               	movwf	indf2,c
 55371                           
 55372                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55373  0111D2  EE20 F002          	lfsr	2,2
 55374  0111D6  505C               	movf	_pBDTEntryEP0OutNext,w,c
 55375  0111D8  26D9               	addwf	fsr2l,f,c
 55376  0111DA  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 55377  0111DC  22DA               	addwfc	fsr2h,f,c
 55378  0111DE  0E30               	movlw	48
 55379  0111E0  6EDE               	movwf	postinc2,c
 55380  0111E2  0E0D               	movlw	13
 55381  0111E4  6EDD               	movwf	postdec2,c
 55382                           
 55383                           ; BSR set to: 1
 55384                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 55385  0111E6  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55386  0111EA  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55387  0111EE  0E04               	movlw	4
 55388  0111F0  6EDF               	movwf	indf2,c
 55389                           
 55390                           ; BSR set to: 1
 55391                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 55392  0111F2  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55393  0111F6  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55394  0111FA  0E00               	movlw	0
 55395  0111FC  8EDB               	bsf	plusw2,7,c
 55396                           
 55397                           ; BSR set to: 1
 55398                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 55399                           
 55400                           ; BSR set to: 1
 55401                           ;usb_device.c: 1917: {;usb_device.c: 1923: outPipes[0].pFunc();
 55402  0111FE  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 55403                           
 55404                           ; BSR set to: 1
 55405                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 55406  011200  515C               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 55407  011202  A4D8               	btfss	status,2,c
 55408  011204  0012               	return	
 55409                           
 55410                           ; BSR set to: 1
 55411                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 55412  011206  ECC6  F095         	call	_USBCtrlEPAllowStatusStage	;wreg free
 55413  01120A  0012               	return	
 55414  01120C                     __end_of_USBCtrlTrfRxService:
 55415                           	opt stack 0
 55416                           tosu	equ	0xFFF
 55417                           tosh	equ	0xFFE
 55418                           tosl	equ	0xFFD
 55419                           pclatu	equ	0xFFB
 55420                           pclath	equ	0xFFA
 55421                           tblptru	equ	0xFF8
 55422                           tblptrh	equ	0xFF7
 55423                           tblptrl	equ	0xFF6
 55424                           tablat	equ	0xFF5
 55425                           prodh	equ	0xFF4
 55426                           prodl	equ	0xFF3
 55427                           intcon	equ	0xFF2
 55428                           indf0	equ	0xFEF
 55429                           postinc0	equ	0xFEE
 55430                           fsr0h	equ	0xFEA
 55431                           fsr0l	equ	0xFE9
 55432                           wreg	equ	0xFE8
 55433                           indf1	equ	0xFE7
 55434                           postinc1	equ	0xFE6
 55435                           postdec1	equ	0xFE5
 55436                           plusw1	equ	0xFE3
 55437                           fsr1h	equ	0xFE2
 55438                           fsr1l	equ	0xFE1
 55439                           indf2	equ	0xFDF
 55440                           postinc2	equ	0xFDE
 55441                           postdec2	equ	0xFDD
 55442                           plusw2	equ	0xFDB
 55443                           fsr2h	equ	0xFDA
 55444                           fsr2l	equ	0xFD9
 55445                           status	equ	0xFD8
 55446                           
 55447 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 55448 ;; Defined at:
 55449 ;;		line 1418 in file "usb_device.c"
 55450 ;; Parameters:    Size  Location     Type
 55451 ;;		None
 55452 ;; Auto vars:     Size  Location     Type
 55453 ;;		None
 55454 ;; Return value:  Size  Location     Type
 55455 ;;                  1    wreg      void 
 55456 ;; Registers used:
 55457 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 55458 ;; Tracked objects:
 55459 ;;		On entry : 0/0
 55460 ;;		On exit  : 0/0
 55461 ;;		Unchanged: 0/0
 55462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55467 ;;Total ram usage:        0 bytes
 55468 ;; Hardware stack levels used:    1
 55469 ;; This function calls:
 55470 ;;		Nothing
 55471 ;; This function is called by:
 55472 ;;		_USBDeviceTasks
 55473 ;;		_USBCtrlEPServiceComplete
 55474 ;;		_USBCtrlTrfRxService
 55475 ;; This function uses a non-reentrant model
 55476 ;;
 55477                           
 55478                           	psect	text238
 55479  012B8C                     __ptext238:
 55480                           	opt stack 0
 55481  012B8C                     _USBCtrlEPAllowStatusStage:
 55482                           	opt stack 13
 55483                           
 55484                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 55485                           
 55486                           ;incstack = 0
 55487  012B8C  0101               	movlb	1	; () banked
 55488  012B8E  515B               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 55489  012B90  A4D8               	btfss	status,2,c
 55490  012B92  0012               	return	
 55491                           
 55492                           ; BSR set to: 1
 55493                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 55494  012B94  0E01               	movlw	1
 55495  012B96  6F5B               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 55496                           
 55497                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 55498  012B98  515A               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 55499  012B9A  A4D8               	btfss	status,2,c
 55500  012B9C  0012               	return	
 55501                           
 55502                           ; BSR set to: 1
 55503                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 55504  012B9E  0E01               	movlw	1
 55505  012BA0  6F5A               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 55506                           
 55507                           ; BSR set to: 1
 55508                           ;usb_device.c: 1434: if(controlTransferState == 2)
 55509  012BA2  0E02               	movlw	2
 55510  012BA4  1962               	xorwf	_controlTransferState& (0+255),w,b	;volatile
 55511  012BA6  A4D8               	btfss	status,2,c
 55512  012BA8  D015               	goto	i2l214
 55513                           
 55514                           ; BSR set to: 1
 55515                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 55516  012BAA  EE20 F001          	lfsr	2,1
 55517  012BAE  5052               	movf	_pBDTEntryIn,w,c
 55518  012BB0  26D9               	addwf	fsr2l,f,c
 55519  012BB2  5053               	movf	_pBDTEntryIn+1,w,c
 55520  012BB4  22DA               	addwfc	fsr2h,f,c
 55521  012BB6  0E00               	movlw	0
 55522  012BB8  6EDF               	movwf	indf2,c
 55523                           
 55524                           ; BSR set to: 1
 55525                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 55526  012BBA  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55527  012BBE  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55528  012BC2  0E48               	movlw	72
 55529  012BC4  6EDF               	movwf	indf2,c
 55530                           
 55531                           ; BSR set to: 1
 55532                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55533  012BC6  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55534  012BCA  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55535  012BCE  0E00               	movlw	0
 55536  012BD0  8EDB               	bsf	plusw2,7,c
 55537                           
 55538                           ;usb_device.c: 1439: }
 55539  012BD2  0012               	return	
 55540  012BD4                     i2l214:
 55541                           
 55542                           ; BSR set to: 1
 55543                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 55544                           
 55545                           ; BSR set to: 1
 55546  012BD4  0562               	decf	_controlTransferState& (0+255),w,b	;volatile
 55547  012BD6  A4D8               	btfss	status,2,c
 55548  012BD8  0012               	return	
 55549                           
 55550                           ; BSR set to: 1
 55551                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 55552  012BDA  0E00               	movlw	0
 55553  012BDC  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55554                           
 55555                           ; BSR set to: 1
 55556                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 55557  012BDE  EE20 F001          	lfsr	2,1
 55558  012BE2  5143               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 55559  012BE4  26D9               	addwf	fsr2l,f,c
 55560  012BE6  5144               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 55561  012BE8  22DA               	addwfc	fsr2h,f,c
 55562  012BEA  0E08               	movlw	8
 55563  012BEC  6EDF               	movwf	indf2,c
 55564                           
 55565                           ; BSR set to: 1
 55566                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 55567  012BEE  EE20 F002          	lfsr	2,2
 55568  012BF2  5143               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 55569  012BF4  26D9               	addwf	fsr2l,f,c
 55570  012BF6  5144               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 55571  012BF8  22DA               	addwfc	fsr2h,f,c
 55572  012BFA  0E30               	movlw	48
 55573  012BFC  6EDE               	movwf	postinc2,c
 55574  012BFE  0E0D               	movlw	13
 55575  012C00  6EDD               	movwf	postdec2,c
 55576                           
 55577                           ; BSR set to: 1
 55578                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 55579  012C02  C143  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55580  012C06  C144  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55581  012C0A  0E04               	movlw	4
 55582  012C0C  6EDF               	movwf	indf2,c
 55583                           
 55584                           ; BSR set to: 1
 55585                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 55586  012C0E  C143  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 55587  012C12  C144  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 55588  012C16  0E00               	movlw	0
 55589  012C18  8EDB               	bsf	plusw2,7,c
 55590                           
 55591                           ; BSR set to: 1
 55592                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 55593  012C1A  0E01               	movlw	1
 55594  012C1C  6F5E               	movwf	_BothEP0OutUOWNsSet& (0+255),b	;volatile
 55595                           
 55596                           ; BSR set to: 1
 55597                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 55598  012C1E  EE20 F001          	lfsr	2,1
 55599  012C22  505C               	movf	_pBDTEntryEP0OutNext,w,c
 55600  012C24  26D9               	addwf	fsr2l,f,c
 55601  012C26  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 55602  012C28  22DA               	addwfc	fsr2h,f,c
 55603  012C2A  0E08               	movlw	8
 55604  012C2C  6EDF               	movwf	indf2,c
 55605                           
 55606                           ; BSR set to: 1
 55607                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 55608  012C2E  EE20 F002          	lfsr	2,2
 55609  012C32  505C               	movf	_pBDTEntryEP0OutNext,w,c
 55610  012C34  26D9               	addwf	fsr2l,f,c
 55611  012C36  505D               	movf	_pBDTEntryEP0OutNext+1,w,c
 55612  012C38  22DA               	addwfc	fsr2h,f,c
 55613  012C3A  0E30               	movlw	48
 55614  012C3C  6EDE               	movwf	postinc2,c
 55615  012C3E  0E0D               	movlw	13
 55616  012C40  6EDD               	movwf	postdec2,c
 55617                           
 55618                           ; BSR set to: 1
 55619                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 55620  012C42  C05C  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 55621  012C46  C05D  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 55622  012C4A  0E80               	movlw	128
 55623  012C4C  6EDF               	movwf	indf2,c
 55624                           
 55625                           ; BSR set to: 1
 55626                           
 55627                           ; BSR set to: 1
 55628                           
 55629                           ; BSR set to: 1
 55630  012C4E  0012               	return	
 55631  012C50                     __end_of_USBCtrlEPAllowStatusStage:
 55632                           	opt stack 0
 55633                           tosu	equ	0xFFF
 55634                           tosh	equ	0xFFE
 55635                           tosl	equ	0xFFD
 55636                           pclatu	equ	0xFFB
 55637                           pclath	equ	0xFFA
 55638                           tblptru	equ	0xFF8
 55639                           tblptrh	equ	0xFF7
 55640                           tblptrl	equ	0xFF6
 55641                           tablat	equ	0xFF5
 55642                           prodh	equ	0xFF4
 55643                           prodl	equ	0xFF3
 55644                           intcon	equ	0xFF2
 55645                           indf0	equ	0xFEF
 55646                           postinc0	equ	0xFEE
 55647                           fsr0h	equ	0xFEA
 55648                           fsr0l	equ	0xFE9
 55649                           wreg	equ	0xFE8
 55650                           indf1	equ	0xFE7
 55651                           postinc1	equ	0xFE6
 55652                           postdec1	equ	0xFE5
 55653                           plusw1	equ	0xFE3
 55654                           fsr1h	equ	0xFE2
 55655                           fsr1l	equ	0xFE1
 55656                           indf2	equ	0xFDF
 55657                           postinc2	equ	0xFDE
 55658                           postdec2	equ	0xFDD
 55659                           plusw2	equ	0xFDB
 55660                           fsr2h	equ	0xFDA
 55661                           fsr2l	equ	0xFD9
 55662                           status	equ	0xFD8
 55663                           
 55664 ;; *************** function _USBCtrlTrfInHandler *****************
 55665 ;; Defined at:
 55666 ;;		line 2594 in file "usb_device.c"
 55667 ;; Parameters:    Size  Location     Type
 55668 ;;		None
 55669 ;; Auto vars:     Size  Location     Type
 55670 ;;  lastDTS         1    1[COMRAM] unsigned char 
 55671 ;; Return value:  Size  Location     Type
 55672 ;;                  1    wreg      void 
 55673 ;; Registers used:
 55674 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 55675 ;; Tracked objects:
 55676 ;;		On entry : 0/0
 55677 ;;		On exit  : 0/0
 55678 ;;		Unchanged: 0/0
 55679 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55680 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55681 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55682 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55683 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55684 ;;Total ram usage:        1 bytes
 55685 ;; Hardware stack levels used:    1
 55686 ;; Hardware stack levels required when called:    1
 55687 ;; This function calls:
 55688 ;;		_USBCtrlTrfTxService
 55689 ;; This function is called by:
 55690 ;;		_USBCtrlEPService
 55691 ;; This function uses a non-reentrant model
 55692 ;;
 55693                           
 55694                           	psect	text239
 55695  012C50                     __ptext239:
 55696                           	opt stack 0
 55697  012C50                     _USBCtrlTrfInHandler:
 55698                           	opt stack 14
 55699                           
 55700                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 55701                           
 55702                           ; BSR set to: 1
 55703                           ;incstack = 0
 55704  012C50  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55705  012C54  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55706  012C58  0E00               	movlw	0
 55707  012C5A  BCDF               	btfsc	indf2,6,c
 55708  012C5C  0E01               	movlw	1
 55709  012C5E  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 55710                           
 55711                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 55712  012C60  0E04               	movlw	4
 55713  012C62  1852               	xorwf	_pBDTEntryIn,w,c
 55714  012C64  6E52               	movwf	_pBDTEntryIn,c
 55715  012C66  5053               	movf	_pBDTEntryIn+1,w,c
 55716  012C68  6E53               	movwf	_pBDTEntryIn+1,c
 55717                           
 55718                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 55719  012C6A  0E08               	movlw	8
 55720  012C6C  185E               	xorwf	_USBDeviceState,w,c	;volatile
 55721  012C6E  A4D8               	btfss	status,2,c
 55722  012C70  D00C               	goto	i2l341
 55723                           
 55724                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 55725  012C72  010D               	movlb	13	; () banked
 55726  012C74  5132               	movf	50,w,b	;volatile
 55727  012C76  0B7F               	andlw	127
 55728  012C78  010F               	movlb	15	; () banked
 55729  012C7A  6F38               	movwf	56,b	;volatile
 55730                           
 55731                           ; BSR set to: 15
 55732                           ;usb_device.c: 2609: if(UADDR != 0u)
 55733  012C7C  5138               	movf	56,w,b	;volatile
 55734  012C7E  B4D8               	btfsc	status,2,c
 55735  012C80  D002               	goto	i2l340
 55736                           
 55737                           ; BSR set to: 15
 55738                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 55739  012C82  0E10               	movlw	16
 55740  012C84  D001               	goto	L84
 55741  012C86                     i2l340:
 55742                           
 55743                           ; BSR set to: 15
 55744                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 55745                           
 55746                           ; BSR set to: 15
 55747  012C86  0E04               	movlw	4
 55748  012C88                     L84:
 55749  012C88  6E5E               	movwf	_USBDeviceState,c	;volatile
 55750  012C8A                     i2l341:
 55751                           
 55752                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 55753                           
 55754                           ; BSR set to: 15
 55755                           
 55756                           ; BSR set to: 15
 55757  012C8A  0101               	movlb	1	; () banked
 55758  012C8C  0562               	decf	_controlTransferState& (0+255),w,b	;volatile
 55759  012C8E  A4D8               	btfss	status,2,c
 55760  012C90  D03B               	goto	i2l342
 55761                           
 55762                           ; BSR set to: 1
 55763                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 55764  012C92  EE20 F002          	lfsr	2,2
 55765  012C96  5052               	movf	_pBDTEntryIn,w,c
 55766  012C98  26D9               	addwf	fsr2l,f,c
 55767  012C9A  5053               	movf	_pBDTEntryIn+1,w,c
 55768  012C9C  22DA               	addwfc	fsr2h,f,c
 55769  012C9E  0E38               	movlw	56
 55770  012CA0  6EDE               	movwf	postinc2,c
 55771  012CA2  0E0D               	movlw	13
 55772  012CA4  6EDD               	movwf	postdec2,c
 55773                           
 55774                           ; BSR set to: 1
 55775                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 55776  012CA6  EC27  F094         	call	_USBCtrlTrfTxService	;wreg free
 55777                           
 55778                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 55779  012CAA  0E02               	movlw	2
 55780  012CAC  0101               	movlb	1	; () banked
 55781  012CAE  1963               	xorwf	_shortPacketStatus& (0+255),w,b	;volatile
 55782  012CB0  A4D8               	btfss	status,2,c
 55783  012CB2  D00D               	goto	i2l343
 55784                           
 55785                           ; BSR set to: 1
 55786                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 55787  012CB4  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55788  012CB8  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55789  012CBC  0E04               	movlw	4
 55790  012CBE  6EDF               	movwf	indf2,c
 55791                           
 55792                           ; BSR set to: 1
 55793                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55794  012CC0  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55795  012CC4  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55796  012CC8  0E00               	movlw	0
 55797  012CCA  8EDB               	bsf	plusw2,7,c
 55798                           
 55799                           ;usb_device.c: 2635: }
 55800  012CCC  0012               	return	
 55801  012CCE                     i2l343:
 55802                           
 55803                           ; BSR set to: 1
 55804                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 55805                           
 55806                           ; BSR set to: 1
 55807  012CCE  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 55808  012CD0  A4D8               	btfss	status,2,c
 55809  012CD2  D00D               	goto	i2l345
 55810                           
 55811                           ; BSR set to: 1
 55812                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 55813  012CD4  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55814  012CD8  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55815  012CDC  0E48               	movlw	72
 55816  012CDE  6EDF               	movwf	indf2,c
 55817                           
 55818                           ; BSR set to: 1
 55819                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55820  012CE0  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55821  012CE4  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55822  012CE8  0E00               	movlw	0
 55823  012CEA  8EDB               	bsf	plusw2,7,c
 55824                           
 55825                           ;usb_device.c: 2642: }
 55826  012CEC  0012               	return	
 55827  012CEE                     i2l345:
 55828                           
 55829                           ; BSR set to: 1
 55830                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 55831                           
 55832                           ; BSR set to: 1
 55833  012CEE  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55834  012CF2  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55835  012CF6  0E08               	movlw	8
 55836  012CF8  6EDF               	movwf	indf2,c
 55837                           
 55838                           ; BSR set to: 1
 55839                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 55840  012CFA  C052  FFD9         	movff	_pBDTEntryIn,fsr2l
 55841  012CFE  C053  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 55842  012D02  0E00               	movlw	0
 55843  012D04  8EDB               	bsf	plusw2,7,c
 55844                           
 55845                           ; BSR set to: 1
 55846                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 55847                           
 55848                           ; BSR set to: 1
 55849  012D06  0012               	return	
 55850  012D08                     i2l342:
 55851                           
 55852                           ; BSR set to: 1
 55853                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 55854  012D08  BF15               	btfsc	(_outPipes+3)& (0+255),7,b	;volatile
 55855                           
 55856                           ; BSR set to: 1
 55857                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 55858                           
 55859                           ; BSR set to: 1
 55860                           ;usb_device.c: 2658: {;usb_device.c: 2659: outPipes[0].pFunc();
 55861  012D0A  9F15               	bcf	(_outPipes+3)& (0+255),7,b	;volatile
 55862                           
 55863                           ; BSR set to: 1
 55864                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 55865                           
 55866                           ; BSR set to: 1
 55867  012D0C  0E00               	movlw	0
 55868  012D0E  6F62               	movwf	_controlTransferState& (0+255),b	;volatile
 55869  012D10  0012               	return	
 55870  012D12                     __end_of_USBCtrlTrfInHandler:
 55871                           	opt stack 0
 55872                           tosu	equ	0xFFF
 55873                           tosh	equ	0xFFE
 55874                           tosl	equ	0xFFD
 55875                           pclatu	equ	0xFFB
 55876                           pclath	equ	0xFFA
 55877                           tblptru	equ	0xFF8
 55878                           tblptrh	equ	0xFF7
 55879                           tblptrl	equ	0xFF6
 55880                           tablat	equ	0xFF5
 55881                           prodh	equ	0xFF4
 55882                           prodl	equ	0xFF3
 55883                           intcon	equ	0xFF2
 55884                           indf0	equ	0xFEF
 55885                           postinc0	equ	0xFEE
 55886                           fsr0h	equ	0xFEA
 55887                           fsr0l	equ	0xFE9
 55888                           wreg	equ	0xFE8
 55889                           indf1	equ	0xFE7
 55890                           postinc1	equ	0xFE6
 55891                           postdec1	equ	0xFE5
 55892                           plusw1	equ	0xFE3
 55893                           fsr1h	equ	0xFE2
 55894                           fsr1l	equ	0xFE1
 55895                           indf2	equ	0xFDF
 55896                           postinc2	equ	0xFDE
 55897                           postdec2	equ	0xFDD
 55898                           plusw2	equ	0xFDB
 55899                           fsr2h	equ	0xFDA
 55900                           fsr2l	equ	0xFD9
 55901                           status	equ	0xFD8
 55902                           
 55903 ;; *************** function _USBCtrlTrfTxService *****************
 55904 ;; Defined at:
 55905 ;;		line 1773 in file "usb_device.c"
 55906 ;; Parameters:    Size  Location     Type
 55907 ;;		None
 55908 ;; Auto vars:     Size  Location     Type
 55909 ;;  byteToSend      1    0[COMRAM] unsigned char 
 55910 ;; Return value:  Size  Location     Type
 55911 ;;                  1    wreg      void 
 55912 ;; Registers used:
 55913 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 55914 ;; Tracked objects:
 55915 ;;		On entry : 0/0
 55916 ;;		On exit  : 0/0
 55917 ;;		Unchanged: 0/0
 55918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 55919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55920 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55922 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 55923 ;;Total ram usage:        1 bytes
 55924 ;; Hardware stack levels used:    1
 55925 ;; This function calls:
 55926 ;;		Nothing
 55927 ;; This function is called by:
 55928 ;;		_USBCtrlEPAllowDataStage
 55929 ;;		_USBCtrlTrfInHandler
 55930 ;; This function uses a non-reentrant model
 55931 ;;
 55932                           
 55933                           	psect	text240
 55934  01284E                     __ptext240:
 55935                           	opt stack 0
 55936  01284E                     _USBCtrlTrfTxService:
 55937                           	opt stack 12
 55938                           
 55939                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 55940                           
 55941                           ; BSR set to: 1
 55942                           ;incstack = 0
 55943  01284E  0E08               	movlw	8
 55944  012850  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 55945                           
 55946                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 55947  012852  5051               	movf	_inPipes+5,w,c	;volatile
 55948  012854  E111               	bnz	i2l12968
 55949  012856  0E08               	movlw	8
 55950  012858  5C50               	subwf	_inPipes+4,w,c	;volatile
 55951  01285A  B0D8               	btfsc	status,0,c
 55952  01285C  D00D               	goto	i2l247
 55953                           
 55954                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 55955  01285E  C050  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend	;volatile
 55956                           
 55957                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 55958  012862  0101               	movlb	1	; () banked
 55959  012864  5163               	movf	_shortPacketStatus& (0+255),w,b	;volatile
 55960  012866  A4D8               	btfss	status,2,c
 55961  012868  D002               	goto	i2l245
 55962                           
 55963                           ; BSR set to: 1
 55964                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 55965  01286A  0E01               	movlw	1
 55966  01286C  D004               	goto	L85
 55967  01286E                     i2l245:
 55968                           
 55969                           ; BSR set to: 1
 55970                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 55971                           
 55972                           ; BSR set to: 1
 55973  01286E  0563               	decf	_shortPacketStatus& (0+255),w,b	;volatile
 55974  012870  A4D8               	btfss	status,2,c
 55975  012872  D002               	goto	i2l247
 55976                           
 55977                           ; BSR set to: 1
 55978                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 55979  012874  0E02               	movlw	2
 55980  012876                     L85:
 55981  012876  6F63               	movwf	_shortPacketStatus& (0+255),b	;volatile
 55982  012878                     i2l247:
 55983  012878                     i2l12968:
 55984                           
 55985                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 55986  012878  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 55987  01287A  5E50               	subwf	_inPipes+4,f,c	;volatile
 55988  01287C  0E00               	movlw	0
 55989  01287E  5A51               	subwfb	_inPipes+5,f,c	;volatile
 55990                           
 55991                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 55992  012880  EE20 F001          	lfsr	2,1
 55993  012884  5052               	movf	_pBDTEntryIn,w,c
 55994  012886  26D9               	addwf	fsr2l,f,c
 55995  012888  5053               	movf	_pBDTEntryIn+1,w,c
 55996  01288A  22DA               	addwfc	fsr2h,f,c
 55997  01288C  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 55998                           
 55999                           ;usb_device.c: 1810: pDst = (volatile uint8_t*)CtrlTrfData;
 56000  012890  0E38               	movlw	56
 56001  012892  0101               	movlb	1	; () banked
 56002  012894  6F41               	movwf	_pDst& (0+255),b
 56003  012896  0E0D               	movlw	13
 56004  012898  6F42               	movwf	(_pDst+1)& (0+255),b
 56005                           
 56006                           ; BSR set to: 1
 56007                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 56008  01289A  A04F               	btfss	_inPipes+3,0,c	;volatile
 56009  01289C  D01D               	goto	i2l249
 56010  01289E  D03C               	goto	i2l253
 56011  0128A0                     
 56012                           ; BSR set to: 1
 56013                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 56014                           
 56015                           ; BSR set to: 1
 56016  0128A0  C04C  FFF6         	movff	_inPipes,tblptrl	;volatile
 56017  0128A4  C04D  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56018  0128A8  0E00               	movlw	low (__mediumconst shr (0+16))
 56019  0128AA  6EF8               	movwf	tblptru,c
 56020  0128AC  C141  FFD9         	movff	_pDst,fsr2l
 56021  0128B0  C142  FFDA         	movff	_pDst+1,fsr2h
 56022  0128B4  0E0E               	movlw	(high __ramtop+-1)
 56023  0128B6  64F7               	cpfsgt	tblptrh,c
 56024  0128B8  D003               	bra	i2u1105_47
 56025  0128BA  0008               	tblrd		*
 56026  0128BC  50F5               	movf	tablat,w,c
 56027  0128BE  D005               	bra	i2u1105_40
 56028  0128C0                     i2u1105_47:
 56029  0128C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 56030  0128C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 56031  0128C8  50EF               	movf	indf0,w,c
 56032  0128CA                     i2u1105_40:
 56033  0128CA  6EDF               	movwf	indf2,c
 56034  0128CC  4A4C               	infsnz	_inPipes,f,c	;volatile
 56035  0128CE  2A4D               	incf	_inPipes+1,f,c	;volatile
 56036  0128D0  0101               	movlb	1	; () banked
 56037  0128D2  4B41               	infsnz	_pDst& (0+255),f,b
 56038  0128D4  2B42               	incf	(_pDst+1)& (0+255),f,b
 56039                           
 56040                           ; BSR set to: 1
 56041                           ;usb_device.c: 1816: byteToSend--;
 56042  0128D6  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56043  0128D8                     i2l249:
 56044                           
 56045                           ; BSR set to: 1
 56046                           
 56047                           ; BSR set to: 1
 56048  0128D8  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56049  0128DA  B4D8               	btfsc	status,2,c
 56050  0128DC  0012               	return	
 56051  0128DE  D7E0               	goto	i2l250
 56052  0128E0                     
 56053                           ; BSR set to: 1
 56054                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 56055                           
 56056                           ; BSR set to: 1
 56057  0128E0  C04C  FFF6         	movff	_inPipes,tblptrl	;volatile
 56058  0128E4  C04D  FFF7         	movff	_inPipes+1,tblptrh	;volatile
 56059  0128E8  0E00               	movlw	low (__mediumconst shr (0+16))
 56060  0128EA  6EF8               	movwf	tblptru,c
 56061  0128EC  C141  FFD9         	movff	_pDst,fsr2l
 56062  0128F0  C142  FFDA         	movff	_pDst+1,fsr2h
 56063  0128F4  0E0E               	movlw	(high __ramtop+-1)
 56064  0128F6  64F7               	cpfsgt	tblptrh,c
 56065  0128F8  D003               	bra	i2u1107_47
 56066  0128FA  0008               	tblrd		*
 56067  0128FC  50F5               	movf	tablat,w,c
 56068  0128FE  D005               	bra	i2u1107_40
 56069  012900                     i2u1107_47:
 56070  012900  CFF6 FFE9          	movff	tblptrl,fsr0l
 56071  012904  CFF7 FFEA          	movff	tblptrh,fsr0h
 56072  012908  50EF               	movf	indf0,w,c
 56073  01290A                     i2u1107_40:
 56074  01290A  6EDF               	movwf	indf2,c
 56075  01290C  4A4C               	infsnz	_inPipes,f,c	;volatile
 56076  01290E  2A4D               	incf	_inPipes+1,f,c	;volatile
 56077  012910  0101               	movlb	1	; () banked
 56078  012912  4B41               	infsnz	_pDst& (0+255),f,b
 56079  012914  2B42               	incf	(_pDst+1)& (0+255),f,b
 56080                           
 56081                           ; BSR set to: 1
 56082                           ;usb_device.c: 1824: byteToSend--;
 56083  012916  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 56084  012918                     i2l253:
 56085                           
 56086                           ; BSR set to: 1
 56087                           
 56088                           ; BSR set to: 1
 56089  012918  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 56090  01291A  B4D8               	btfsc	status,2,c
 56091  01291C  0012               	return	
 56092  01291E  D7E0               	goto	i2l254
 56093  012920                     __end_of_USBCtrlTrfTxService:
 56094                           	opt stack 0
 56095                           tosu	equ	0xFFF
 56096                           tosh	equ	0xFFE
 56097                           tosl	equ	0xFFD
 56098                           pclatu	equ	0xFFB
 56099                           pclath	equ	0xFFA
 56100                           tblptru	equ	0xFF8
 56101                           tblptrh	equ	0xFF7
 56102                           tblptrl	equ	0xFF6
 56103                           tablat	equ	0xFF5
 56104                           prodh	equ	0xFF4
 56105                           prodl	equ	0xFF3
 56106                           intcon	equ	0xFF2
 56107                           indf0	equ	0xFEF
 56108                           postinc0	equ	0xFEE
 56109                           fsr0h	equ	0xFEA
 56110                           fsr0l	equ	0xFE9
 56111                           wreg	equ	0xFE8
 56112                           indf1	equ	0xFE7
 56113                           postinc1	equ	0xFE6
 56114                           postdec1	equ	0xFE5
 56115                           plusw1	equ	0xFE3
 56116                           fsr1h	equ	0xFE2
 56117                           fsr1l	equ	0xFE1
 56118                           indf2	equ	0xFDF
 56119                           postinc2	equ	0xFDE
 56120                           postdec2	equ	0xFDD
 56121                           plusw2	equ	0xFDB
 56122                           fsr2h	equ	0xFDA
 56123                           fsr2l	equ	0xFD9
 56124                           status	equ	0xFD8
 56125                           tosu	equ	0xFFF
 56126                           tosh	equ	0xFFE
 56127                           tosl	equ	0xFFD
 56128                           pclatu	equ	0xFFB
 56129                           pclath	equ	0xFFA
 56130                           tblptru	equ	0xFF8
 56131                           tblptrh	equ	0xFF7
 56132                           tblptrl	equ	0xFF6
 56133                           tablat	equ	0xFF5
 56134                           prodh	equ	0xFF4
 56135                           prodl	equ	0xFF3
 56136                           intcon	equ	0xFF2
 56137                           indf0	equ	0xFEF
 56138                           postinc0	equ	0xFEE
 56139                           fsr0h	equ	0xFEA
 56140                           fsr0l	equ	0xFE9
 56141                           wreg	equ	0xFE8
 56142                           indf1	equ	0xFE7
 56143                           postinc1	equ	0xFE6
 56144                           postdec1	equ	0xFE5
 56145                           plusw1	equ	0xFE3
 56146                           fsr1h	equ	0xFE2
 56147                           fsr1l	equ	0xFE1
 56148                           indf2	equ	0xFDF
 56149                           postinc2	equ	0xFDE
 56150                           postdec2	equ	0xFDD
 56151                           plusw2	equ	0xFDB
 56152                           fsr2h	equ	0xFDA
 56153                           fsr2l	equ	0xFD9
 56154                           status	equ	0xFD8
 56155                           
 56156                           	psect	text241
 56157  000000                     __ptext241:
 56158                           	opt stack 0
 56159                           tosu	equ	0xFFF
 56160                           tosh	equ	0xFFE
 56161                           tosl	equ	0xFFD
 56162                           pclatu	equ	0xFFB
 56163                           pclath	equ	0xFFA
 56164                           tblptru	equ	0xFF8
 56165                           tblptrh	equ	0xFF7
 56166                           tblptrl	equ	0xFF6
 56167                           tablat	equ	0xFF5
 56168                           prodh	equ	0xFF4
 56169                           prodl	equ	0xFF3
 56170                           intcon	equ	0xFF2
 56171                           indf0	equ	0xFEF
 56172                           postinc0	equ	0xFEE
 56173                           fsr0h	equ	0xFEA
 56174                           fsr0l	equ	0xFE9
 56175                           wreg	equ	0xFE8
 56176                           indf1	equ	0xFE7
 56177                           postinc1	equ	0xFE6
 56178                           postdec1	equ	0xFE5
 56179                           plusw1	equ	0xFE3
 56180                           fsr1h	equ	0xFE2
 56181                           fsr1l	equ	0xFE1
 56182                           indf2	equ	0xFDF
 56183                           postinc2	equ	0xFDE
 56184                           postdec2	equ	0xFDD
 56185                           plusw2	equ	0xFDB
 56186                           fsr2h	equ	0xFDA
 56187                           fsr2l	equ	0xFD9
 56188                           status	equ	0xFD8
 56189                           
 56190                           	psect	rparam
 56191  0000                     tosu	equ	0xFFF
 56192                           tosh	equ	0xFFE
 56193                           tosl	equ	0xFFD
 56194                           pclatu	equ	0xFFB
 56195                           pclath	equ	0xFFA
 56196                           tblptru	equ	0xFF8
 56197                           tblptrh	equ	0xFF7
 56198                           tblptrl	equ	0xFF6
 56199                           tablat	equ	0xFF5
 56200                           prodh	equ	0xFF4
 56201                           prodl	equ	0xFF3
 56202                           intcon	equ	0xFF2
 56203                           indf0	equ	0xFEF
 56204                           postinc0	equ	0xFEE
 56205                           fsr0h	equ	0xFEA
 56206                           fsr0l	equ	0xFE9
 56207                           wreg	equ	0xFE8
 56208                           indf1	equ	0xFE7
 56209                           postinc1	equ	0xFE6
 56210                           postdec1	equ	0xFE5
 56211                           plusw1	equ	0xFE3
 56212                           fsr1h	equ	0xFE2
 56213                           fsr1l	equ	0xFE1
 56214                           indf2	equ	0xFDF
 56215                           postinc2	equ	0xFDE
 56216                           postdec2	equ	0xFDD
 56217                           plusw2	equ	0xFDB
 56218                           fsr2h	equ	0xFDA
 56219                           fsr2l	equ	0xFD9
 56220                           status	equ	0xFD8
 56221                           
 56222                           	psect	temp
 56223  00005F                     btemp:
 56224                           	opt stack 0
 56225  00005F                     	ds	1
 56226  0000                     int$flags	set	btemp
 56227  0000                     wtemp8	set	btemp+1
 56228  0000                     ttemp5	set	btemp+1
 56229  0000                     ttemp6	set	btemp+4
 56230  0000                     ttemp7	set	btemp+8
 56231                           tosu	equ	0xFFF
 56232                           tosh	equ	0xFFE
 56233                           tosl	equ	0xFFD
 56234                           pclatu	equ	0xFFB
 56235                           pclath	equ	0xFFA
 56236                           tblptru	equ	0xFF8
 56237                           tblptrh	equ	0xFF7
 56238                           tblptrl	equ	0xFF6
 56239                           tablat	equ	0xFF5
 56240                           prodh	equ	0xFF4
 56241                           prodl	equ	0xFF3
 56242                           intcon	equ	0xFF2
 56243                           indf0	equ	0xFEF
 56244                           postinc0	equ	0xFEE
 56245                           fsr0h	equ	0xFEA
 56246                           fsr0l	equ	0xFE9
 56247                           wreg	equ	0xFE8
 56248                           indf1	equ	0xFE7
 56249                           postinc1	equ	0xFE6
 56250                           postdec1	equ	0xFE5
 56251                           plusw1	equ	0xFE3
 56252                           fsr1h	equ	0xFE2
 56253                           fsr1l	equ	0xFE1
 56254                           indf2	equ	0xFDF
 56255                           postinc2	equ	0xFDE
 56256                           postdec2	equ	0xFDD
 56257                           plusw2	equ	0xFDB
 56258                           fsr2h	equ	0xFDA
 56259                           fsr2l	equ	0xFD9
 56260                           status	equ	0xFD8


Data Sizes:
    Strings     69
    Constant    4694
    Data        157
    BSS         1584
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     75      94
    BANK0           160    158     160
    BANK1           256     60     256
    BANK2           256      0     228
    BANK3           256      0     192
    BANK4           256      0      80
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S2167$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 8
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), configFile_extention(BANK2[3]), configFile_name(BANK2[8]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    strlen@cp	PTR const unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), 

    stricmp@s2	PTR const unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    stricmp@s1	PTR const unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> config(BANK1[40]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[50]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 3759
		 -> configFile_used_extention(BANK2[3]), configFile_used_name(BANK2[8]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> STR_6(CODE[6]), STR_5(CODE[9]), STR_4(CODE[7]), STR_3(CODE[9]), 
		 -> dc_manual(CODE[80]), dc_zero(CODE[80]), STR_2(CODE[7]), STR_1(CODE[9]), 
		 -> dc_arc2(CODE[80]), dc_arc1(CODE[80]), dc_divide2(CODE[80]), dc_divide1(CODE[80]), 
		 -> dc_setup2(CODE[80]), dc_setup1(CODE[80]), dc_main(CODE[80]), dc_startup(BANK4[80]), 
		 -> config(BANK1[40]), os.current_position_in_degrees(BANK1[2]), os.current_position_in_steps(BANK1[4]), ReceivedDataBuffer(BANK3[64]), 
		 -> os(BANK1[50]), inq_resp(CODE[36]), RAM(DATA[3759]), 

    ultoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ultoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@buf	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    ltoa@cp	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    atol@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _parse_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@value_string	PTR unsigned char  size(2) Largest target is 12
		 -> configFile_read@value_string(BANK1[12]), 

    _get_item@item_string	PTR unsigned char  size(2) Largest target is 31
		 -> configFile_read@item_string(BANK1[31]), 

    _get_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    sp__ltoa	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _add_item@item_string	PTR unsigned char  size(2) Largest target is 24
		 -> ccw_limit_string(CODE[10]), use_ccw_limit_string(CODE[14]), cw_limit_string(CODE[9]), use_cw_limit_string(CODE[13]), 
		 -> beep_duration_string(CODE[14]), maximum_speed_manual_string(CODE[21]), initial_speed_manual_string(CODE[21]), maximum_speed_arc_string(CODE[18]), 
		 -> initial_speed_arc_string(CODE[18]), maximum_speed_string(CODE[14]), minimum_speed_string(CODE[14]), overshoot_cost_in_steps_string(CODE[24]), 
		 -> inverse_direction_string(CODE[18]), overshoot_in_steps_string(CODE[19]), full_circle_in_steps_string(CODE[21]), 

    _add_item@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    _parse_set_manual_speed@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_set_manual_speed@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_set_manual_speed@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps_with_overshoot@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps_with_overshoot@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_jump_steps@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_jump_steps@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _parse_command_long@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    _parse_command_long@out_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    _fill_buffer_get_mode_details@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    api_parse@out_idx_ptr	PTR unsigned char  size(2) Largest target is 1
		 -> api_parse@out_idx(BANK0[1]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ToSendDataBuffer(BANK3[64]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> ReceivedDataBuffer(BANK3[64]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), _flash_get_status@status(BANK0[2]), msd_buffer(BIGRAMll[512]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(BANK0[4]), _flash_get_status@command(BANK0[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(BANK0[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(BANK0[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(BANK0[4]), 
		 -> _flash_copy_page_to_buffer@command(BANK0[4]), _flash_wakeup@command(BANK0[1]), _flash_set_page_size@command(BANK0[4]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 32
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3
		 -> configFile_used_extention(BANK2[3]), configFile_extention(BANK2[3]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 8
		 -> configFile_used_name(BANK2[8]), configFile_name(BANK2[8]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(COMRAM[32]), fat_get_file_size@file_size(BANK0[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(BANK0[2]), 
		 -> _root_is_available@first_byte(BANK0[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> ConfigFile_buffer(BIGRAMll[512]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _display_itoa_long@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_itoa@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_prepare@temp(BANK0[10]), display_content(BANK2[80]), 

    _display_signed_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    _display_padded_itoa@text	PTR unsigned char  size(2) Largest target is 10
		 -> display_prepare@temp(BANK0[10]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(BANK0[10]), _display_padded_itoa@tmp(BANK0[10]), display_content(BANK2[80]), 

    i2c_display_program_custom_character@bit_pattern	PTR unsigned char  size(2) Largest target is 8
		 -> bit_pattern_ae(CODE[8]), bit_pattern_degree(CODE[8]), bit_pattern_verticalbar(CODE[8]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_eeprom_read@data	PTR unsigned char  size(2) Largest target is 50
		 -> i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), os.current_position_in_steps(BANK1[4]), 
		 -> os(BANK1[50]), 

    i2c_eeprom_write@data	PTR unsigned char  size(2) Largest target is 50
		 -> i2c_eeprom_writeInt16@data(COMRAM[2]), i2c_eeprom_writeUint32@data(COMRAM[4]), i2c_eeprom_writeUint16@data(COMRAM[2]), os.current_position_in_steps(BANK1[4]), 
		 -> os(BANK1[50]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 50
		 -> i2c_eeprom_readInt16@data(COMRAM[2]), i2c_eeprom_readUint32@data(COMRAM[4]), i2c_eeprom_readUint16@data(COMRAM[2]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> os.current_position_in_steps(BANK1[4]), os(BANK1[50]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_display_program_custom_character@data_array(BANK0[11]), _ic2_display_set_cgram_address@data_array(BANK0[3]), _ic2_display_set_ddram_address@data_array(BANK0[2]), i2c_display_init@init_sequence(BANK0[9]), 
		 -> _i2c_display_send_init_sequence@init_sequence(COMRAM[9]), i2c_eeprom_read@addr(BANK0[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), 
		 -> i2c_eeprom_writeByte@dat(COMRAM[2]), i2c_adc_start@configuration_byte(COMRAM[1]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2623	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK1[1]), USBActiveConfiguration(BANK1[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2589	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2588	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2535	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2534	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S2167$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK2[5]), 

    S2167$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(3) Largest target is 0

    S2167$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S2167$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S2167$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S2167$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S2167$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(3) Largest target is 1
		 -> i2_ExternalFlash_MediaDetect(), ExternalFlash_MediaDetect(), 

    S2167$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(3) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S2167$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(3) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S2167$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(3) Largest target is 3
		 -> i2_ExternalFlash_MediaInitialize(), ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 512
		 -> fat_create_file@root_entry(BANK0[32]), _flash_set_page_size@command(BANK0[4]), display_content(BANK2[80]), ToSendDataBuffer(BANK3[64]), 
		 -> msd_buffer(BIGRAMll[512]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK3[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(3) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(3) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _SYS_InterruptHigh in COMRAM

    _SYS_InterruptHigh->_motor_isr
    _i2c_eeprom_save_position->_i2c_eeprom_write
    _i2c_eeprom_write->i2__i2c_write
    i2__i2c_write->i2__i2c_wait_idle
    i2__i2c_eeprom_busy->i2__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    i2_USBDeviceInit->i2_memset
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->i2_USBTransferOnePacket
    _MSDTransferTerminated->i2_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->i2_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService

Critical Paths under _main in BANK0

    _motor_calculate_position_in_degrees->___fldiv
    _motor_calculate_position_in_degrees->___flmul
    _i2c_eeprom_recover_position->_i2c_eeprom_read
    _i2c_eeprom_read->__i2c_read
    __i2c_read->__i2c_wait_idle
    __i2c_eeprom_busy->__i2c_wait_idle
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_restore_mbr_fbr->_flash_sector_write
    _fat_get_format_status->_flash_sector_read
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_ddram_address
    __ic2_display_set_ddram_address->__i2c_write
    _display_init->_i2c_display_program_custom_character
    _i2c_display_program_custom_character->__ic2_display_set_cgram_address
    __ic2_display_set_cgram_address->__i2c_write
    _i2c_display_init->__i2c_write
    __i2c_write->__i2c_wait_idle
    __display_start->__display_itoa_u16
    __display_itoa_u16->_itoa
    _configFile_write->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    _fat_modify_file->__find_nth_cluster
    _fat_create_file->__make_cluster_chain
    __write_root->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_copy_page_to_buffer->__flash_is_busy
    __make_cluster_chain->__get_available_cluster
    __get_available_cluster->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __add_item->_ltoa
    _ltoa->_ultoa
    _ultoa->___lldiv
    _configFile_read->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __find_nth_cluster->__read_fat
    __read_fat->_flash_partial_read
    _fat_get_file_information->_flash_partial_read
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    _fat_find_file->_flash_sector_read
    __parse_item->__steps_from_degrees
    _stricmp->_toupper
    _atol->___lmul
    _atoi->___wmul
    __steps_from_degrees->___fldiv
    __steps_from_degrees->___flmul
    ___flge->___xxtofl
    _motor_process_cue->__motor_run
    _encoder_statemachine->_motor_divide_jump_to_nearest
    _motor_move_degrees_int->__motor_steps_from_degrees_int
    __motor_steps_from_degrees_int->___fldiv
    __motor_steps_from_degrees_int->___flmul
    _motor_increase_manual_speed->_motor_set_manual_speed
    _motor_divide_jump_to_nearest->_motor_goto_steps
    _motor_divide_jump->_motor_goto_steps
    __step_position_from_divide_position->___fldiv
    __step_position_from_divide_position->___flmul
    _motor_decrease_manual_speed->_motor_set_manual_speed
    _motor_arc_move->_motor_move_steps
    _display_prepare->__display_itoa_long
    _motor_speed_from_index->__motor_get_speed_in_degrees
    __motor_get_speed_in_degrees->___fldiv
    ___fldiv->___xxtofl
    __display_signed_itoa->__display_padded_itoa
    __display_padded_itoa->_itoa
    __display_itoa_long->__display_itoa
    __display_itoa->_motor_speed_from_index
    _itoa->_utoa
    _utoa->___lwdiv
    _adc_read_temperature->___flmul
    ___xxtofl->___fltol
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___flneg
    _USBDeviceInit->_memset
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _flash_sector_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    _flash_sector_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx
    _APP_DeviceCustomHIDTasks->_api_parse
    _api_prepare->__fill_buffer_get_display
    __fill_buffer_get_status->_memcpy
    __fill_buffer_get_display->_display_get_character
    _api_parse->__parse_command_long
    __parse_command_short->_motor_goto_steps
    _motor_set_zero->__motor_move_back_forth
    __motor_move_back_forth->__motor_schedule_command
    _motor_move_endless->__motor_move_steps
    _motor_goto_steps->__motor_decide_direction
    __motor_decide_direction->__motor_distance_to_limit
    __parse_command_long->__parse_jump_steps
    __parse_command_long->__parse_jump_steps_with_overshoot
    __parse_set_manual_speed->_motor_set_manual_speed
    _motor_set_manual_speed->_motor_change_speed
    __parse_jump_steps_with_overshoot->_motor_move_steps
    __parse_jump_steps->_motor_move_steps
    _motor_move_steps->__motor_move_steps
    __motor_move_steps->__motor_distance_to_limit
    __motor_distance_to_limit->___lmul

Critical Paths under _SYS_InterruptHigh in BANK0

    None.

Critical Paths under _main in BANK1

    _system_init->_configFile_read

Critical Paths under _SYS_InterruptHigh in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _SYS_InterruptHigh in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _SYS_InterruptHigh in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _SYS_InterruptHigh in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _SYS_InterruptHigh in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _SYS_InterruptHigh in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _SYS_InterruptHigh in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _SYS_InterruptHigh in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _SYS_InterruptHigh in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _SYS_InterruptHigh in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _SYS_InterruptHigh in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _SYS_InterruptHigh in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _SYS_InterruptHigh in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0  754092
                                            157 BANK0      1     1      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                    _USBDeviceAttach
                      _USBDeviceInit
               _adc_read_temperature
                    _display_prepare
                     _display_update
               _encoder_statemachine
_motor_calculate_position_in_degrees
                  _motor_process_cue
                        _system_init
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0  391180
                    __backlight_init
                  __system_pin_setup
                __system_timer0_init
                           _adc_init
                    _configFile_read
             _configFile_readDefault
                   _configFile_write
                       _display_init
                     _display_update
                       _encoder_init
                           _fat_init
                         _flash_init
        _i2c_eeprom_recover_position
                           _i2c_init
_motor_calculate_position_in_degrees
                         _motor_init
 ---------------------------------------------------------------------------------
 (2) _motor_init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _motor_calculate_position_in_degrees                  4     4      0    9741
                                             49 BANK0      4     4      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_recover_position                          0     0      0    3647
                    _i2c_eeprom_read
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_read                                      8     3      5    3647
                                             17 BANK0      8     3      5
                   __i2c_eeprom_busy
                          __i2c_read
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_read                                           12     9      3     534
                                              5 BANK0     12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_eeprom_busy                                     1     1      0      23
                                              5 BANK0      1     1      0
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0   11368
               __flash_set_page_size
                           _spi_init
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 BANK0      1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0   11146
                                             19 BANK0      5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   24913
              _fat_get_format_status
                _fat_restore_mbr_fbr
 ---------------------------------------------------------------------------------
 (3) _fat_restore_mbr_fbr                                  2     2      0   17966
                                             36 BANK0      2     2      0
                           __get_fbr
                           __get_mbr
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6947
                                             43 BANK0      4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     289
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) _encoder_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _display_update                                       1     1      0    2472
                                             16 BANK0      1     1      0
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (3) _i2c_display_write_fixed                              4     1      3     290
                                              5 BANK0      4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (3) _i2c_display_cursor                                   3     2      1    2092
                                             13 BANK0      3     2      1
     __ic2_display_set_ddram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_ddram_address                       3     3      0    1933
                                             10 BANK0      3     3      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (2) _display_init                                         0     0      0   16444
                     __display_start
                   _i2c_display_init
_i2c_display_program_custom_characte
 ---------------------------------------------------------------------------------
 (3) _i2c_display_program_custom_character                19    17      2    4270
                                             14 BANK0     19    17      2
                         __i2c_write
     __ic2_display_set_cgram_address
 ---------------------------------------------------------------------------------
 (4) __ic2_display_set_cgram_address                       4     4      0    1958
                                             10 BANK0      4     4      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_display_init                                    10    10      0    1887
                                             10 BANK0     10    10      0
                         __i2c_write
 ---------------------------------------------------------------------------------
 (4) __i2c_write                                           5     2      3    1862
                                              5 BANK0      5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (5) __i2c_wait_idle                                       5     5      0       0
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (5) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (5) __i2c_send                                            1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) __display_start                                       1     1      0   10287
                                             28 BANK0      1     1      0
                  __display_itoa_u16
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __display_itoa_u16                                    4     0      4    3164
                                             24 BANK0      4     0      4
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _configFile_write                                     6     6      0  231530
                                            131 BANK0      6     6      0
                          __add_item
                    _fat_create_file
                      _fat_find_file
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) _fat_resize_file                                     47    43      4   75708
                                             76 BANK0     47    43      4
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) _fat_modify_file                                     66    58      8   58065
                                             65 BANK0     66    58      8
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) _fat_create_file                                     49    41      8   83356
                                             76 BANK0     49    41      8
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) __write_root                                          7     5      2   24113
                                             40 BANK0      7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) _flash_partial_write                                  9     1      8   23640
                                             31 BANK0      9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) __make_cluster_chain                                 23    19      4   35886
                                             53 BANK0     23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) __write_value_to_offset                               8     2      6     934
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (5) __get_available_cluster                              10     6      4    7752
                                             43 BANK0     10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __get_available_offset_from_buffer                    8     4      4     712
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (6) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) __get_time                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_date                                            2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __get_available_root_entry                            1     1      0    7485
                                             53 BANK0      1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __add_item                                           11     3      8    6260
                                             36 BANK0     11     3      8
                               _ltoa
 ---------------------------------------------------------------------------------
 (4) _ltoa                                                10     2      8    1853
                                             26 BANK0     10     2      8
                              _ultoa
 ---------------------------------------------------------------------------------
 (5) _ultoa                                               13     5      8    1423
                                             13 BANK0     13     5      8
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (6) ___llmod                                              9     1      8     337
                                              0 BANK0      9     1      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     518
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (2) _configFile_readDefault                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _configFile_read                                     60    60      0   91065
                                              0 BANK1     60    60      0
                          __get_item
                        __parse_item
                      _fat_find_file
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   42312
                                            105 BANK0     52    42     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (4) _fat_read_from_file_fast                             40    26     14   33651
                                             65 BANK0     40    26     14
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16816
                                             55 BANK0     10     6      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 BANK0      9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8284
                                             47 BANK0      8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     469
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __data_sector_from_cluster                            2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2    7751
                                             47 BANK0      8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14768
                                             53 BANK0     13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7395
                                             47 BANK0      6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) _flash_partial_read                                   8     0      8    7123
                                             39 BANK0      8     0      8
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __sector_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7661
                                             43 BANK0     11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 BANK0      9     3      6
 ---------------------------------------------------------------------------------
 (3) __parse_item                                          4     0      4   24816
                                             57 BANK0      4     0      4
                __steps_from_degrees
                               _atoi
                               _atol
                            _stricmp
 ---------------------------------------------------------------------------------
 (4) _stricmp                                              6     2      4    3006
                                              1 BANK0      6     2      4
                            _toupper
 ---------------------------------------------------------------------------------
 (5) _toupper                                              1     1      0      67
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) _atol                                                14    10      4    1878
                                             12 BANK0     14    10      4
                             ___lmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _atoi                                                 7     5      2    8327
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (5) _isdigit                                              3     3      0      68
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    7141
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) __steps_from_degrees                                  8     4      4   10723
                                             49 BANK0      8     4      4
                            ___fldiv
                             ___flge
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     716
                                             24 BANK0     12     4      8
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) __get_item                                           11     5      6    1132
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (2) _adc_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_pin_setup                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __backlight_init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _motor_process_cue                                    0     0      0     377
                         __motor_run
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) __motor_run                                          12     5      7     377
                                              0 BANK0     12     5      7
 ---------------------------------------------------------------------------------
 (1) _encoder_statemachine                                 4     4      0  118356
                                             72 BANK0      4     4      0
        __divide_jump_size_decrement
        __divide_jump_size_increment
        __encoder_next_arc_step_size
     __encoder_next_divide_step_size
       __encoder_next_setup_stepsize
                     _motor_arc_move
                 _motor_change_speed
        _motor_decrease_manual_speed
                  _motor_divide_jump
       _motor_divide_jump_to_nearest
                   _motor_goto_steps
        _motor_increase_manual_speed
             _motor_move_degrees_int
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_move_degrees_int                              10     5      5   20726
                                             57 BANK0     10     5      5
                  __motor_move_steps
      __motor_steps_from_degrees_int
 ---------------------------------------------------------------------------------
 (3) __motor_steps_from_degrees_int                        8     4      4   12986
                                             49 BANK0      8     4      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_increase_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump_to_nearest                        10    10      0   34265
                                             62 BANK0     10    10      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (2) _motor_divide_jump                                    7     7      0   21548
                                             62 BANK0      7     7      0
__step_position_from_divide_position
                   _motor_goto_steps
 ---------------------------------------------------------------------------------
 (3) __step_position_from_divide_position                  8     4      4    9941
                                             49 BANK0      8     4      4
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) _motor_decrease_manual_speed                          0     0      0     644
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (2) _motor_arc_move                                       5     5      0   18281
                                             52 BANK0      5     5      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (2) __encoder_next_setup_stepsize                         4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __encoder_next_divide_step_size                       1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __encoder_next_arc_step_size                          4     2      2     111
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_increment                          1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) __divide_jump_size_decrement                          3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                     14    14      0   45294
                                            102 BANK0     14    14      0
                     __display_clear
                      __display_itoa
                 __display_itoa_long
               __display_padded_itoa
               __display_signed_itoa
                             _memcpy
             _motor_speed_from_index
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _motor_speed_from_index                               2     0      2    8013
                                             61 BANK0      2     0      2
        __motor_get_speed_in_degrees
 ---------------------------------------------------------------------------------
 (3) __motor_get_speed_in_degrees                         12    10      2    7813
                                             49 BANK0     12    10      2
                            ___fldiv
                            ___fltol
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2875
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __display_signed_itoa                                 4     0      4    4979
                                             47 BANK0      4     0      4
               __display_padded_itoa
 ---------------------------------------------------------------------------------
 (3) __display_padded_itoa                                23    18      5    4668
                                             24 BANK0     23    18      5
                               _itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (2) __display_itoa_long                                  15     8      7   10370
                                             87 BANK0     15     8      7
                            ___aldiv
                            ___almod
                      __display_itoa
                             _strlen
 ---------------------------------------------------------------------------------
 (3) __display_itoa                                       24    19      5    6858
                                             63 BANK0     24    19      5
                               _itoa
             _motor_speed_from_index (ARG)
                             _strlen
 ---------------------------------------------------------------------------------
 (2) _strlen                                               6     4      2     535
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _itoa                                                 8     2      6    2388
                                             16 BANK0      8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (6) _utoa                                                 9     3      6    1424
                                              7 BANK0      9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              5     1      4     337
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              7     3      4     518
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (3) ___almod                                             10     2      8     474
                                              0 BANK0     10     2      8
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     478
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (1) _adc_read_temperature                                 8     8      0   10091
                                             49 BANK0      8     8      0
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (3) ___xxtofl                                            14    10      4    2280
                                             10 BANK0     14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4    1297
                                              0 BANK0     10     6      4
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     223
                                             24 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    3220
                                             24 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) ___fladd                                             20    12      8    3000
                                             28 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1132
                                              8 BANK0      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6     930
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      68
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  113476
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  113476
                                             76 BANK0      6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  108676
                                             71 BANK0      5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   55089
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   53383
                                             57 BANK0     14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24725
                                             47 BANK0      5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17553
                                             36 BANK0     11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17208
                                             31 BANK0      5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 BANK0     11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 BANK0     10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 BANK0     12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13450
                                             53 BANK0      4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2318
                                             10 BANK0      7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1706
                                              8 BANK0      2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (3) _USBStallEndpoint                                     8     7      1    1661
                                              0 BANK0      8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6470
                                             43 BANK0     10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6189
                                             39 BANK0      4     0      4
                __flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 BANK0     20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 BANK0      2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 BANK0      1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 BANK0      5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaInitialize                        2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) _ExternalFlash_MediaDetect                            2     0      2     102
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             1     1      0   61881
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (2) _api_prepare                                          5     1      4   16562
                                             16 BANK0      5     1      4
           __fill_buffer_get_display
      __fill_buffer_get_mode_details
            __fill_buffer_get_status
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_status                              2     0      2    7734
                                             11 BANK0      2     0      2
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              11     5      6    7007
                                              0 BANK0     11     5      6
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_mode_details                        4     2      2     529
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (3) __fill_buffer_get_display                            12     9      3     827
                                              4 BANK0     12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (4) _display_get_character                                4     3      1     133
                                              0 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 (2) _api_parse                                           11     6      5   42318
                                             71 BANK0     11     6      5
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (3) __parse_command_short                                 1     1      0   21737
                                             62 BANK0      1     1      0
            _motor_clear_command_cue
                   _motor_goto_steps
                 _motor_move_endless
                     _motor_set_zero
                         _motor_stop
 ---------------------------------------------------------------------------------
 (2) _motor_stop                                           2     2      0       0
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _motor_set_zero                                       1     1      0    2728
                                             10 BANK0      1     1      0
             __motor_move_back_forth
 ---------------------------------------------------------------------------------
 (3) __motor_move_back_forth                               2     2      0    2706
                                              8 BANK0      2     2      0
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_move_endless                                   3     1      2    7495
                                             44 BANK0      3     1      2
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (2) _motor_goto_steps                                    12     5      7   11492
                                             50 BANK0     12     5      7
          __motor_calculate_distance
            __motor_decide_direction
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_decide_direction                             21    16      5    2526
                                             29 BANK0     21    16      5
          __motor_calculate_distance
           __motor_distance_to_limit
 ---------------------------------------------------------------------------------
 (4) __motor_calculate_distance                           13     9      4     581
                                              0 BANK0     13     9      4
 ---------------------------------------------------------------------------------
 (4) _motor_clear_command_cue                              0     0      0       0
 ---------------------------------------------------------------------------------
 (3) __parse_command_long                                  7     1      6   19829
                                             64 BANK0      7     1      6
                  __parse_jump_steps
   __parse_jump_steps_with_overshoot
            __parse_set_manual_speed
 ---------------------------------------------------------------------------------
 (4) __parse_set_manual_speed                              9     3      6    1068
                                              4 BANK0      9     3      6
             _motor_set_manual_speed
 ---------------------------------------------------------------------------------
 (3) _motor_set_manual_speed                               2     0      2     644
                                              2 BANK0      2     0      2
                 _motor_change_speed
 ---------------------------------------------------------------------------------
 (4) _motor_change_speed                                   2     0      2     289
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps_with_overshoot                    12     6      6    9123
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (4) __parse_jump_steps                                   12     6      6    9125
                                             52 BANK0     12     6      6
                   _motor_move_steps
 ---------------------------------------------------------------------------------
 (3) _motor_move_steps                                     8     1      7    8518
                                             44 BANK0      8     1      7
                            ___fltol (ARG)
                  __motor_move_steps
 ---------------------------------------------------------------------------------
 (3) __motor_move_steps                                   15     7      8    7095
                                             29 BANK0     15     7      8
           __motor_distance_to_limit
            __motor_schedule_command
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (4) __motor_schedule_command                              8     1      7    2646
                                              0 BANK0      8     1      7
                 _motor_items_in_cue
 ---------------------------------------------------------------------------------
 (2) _motor_items_in_cue                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __motor_distance_to_limit                            17    13      4    1115
                                             12 BANK0     17    13      4
                             ___lmul
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8     956
                                              0 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _USBTransferOnePacket                                11     7      4    3001
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (13) _SYS_InterruptHigh                                  14    14      0   56241
                                             61 COMRAM    14    14      0
                     _USBDeviceTasks
                          _motor_isr
                           _tmr0_isr
 ---------------------------------------------------------------------------------
 (14) _tmr0_isr                                            0     0      0       0
                        _encoder_run
 ---------------------------------------------------------------------------------
 (15) _encoder_run                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (14) _motor_isr                                          24    24      0    1619
                                             37 COMRAM    24    24      0
           _i2c_eeprom_save_position
 ---------------------------------------------------------------------------------
 (15) _i2c_eeprom_save_position                            0     0      0    1528
                   _i2c_eeprom_write
 ---------------------------------------------------------------------------------
 (16) _i2c_eeprom_write                                   27    22      5    1528
                                             10 COMRAM    27    22      5
                 i2__i2c_eeprom_busy
                       i2__i2c_write
 ---------------------------------------------------------------------------------
 (17) i2__i2c_write                                        5     2      3     186
                                              5 COMRAM     5     2      3
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (17) i2__i2c_eeprom_busy                                  1     1      0      23
                                              5 COMRAM     1     1      0
                        i2__i2c_send
                       i2__i2c_start
                        i2__i2c_stop
                   i2__i2c_wait_idle
 ---------------------------------------------------------------------------------
 (18) i2__i2c_wait_idle                                    5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_stop                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_start                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2__i2c_send                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _USBDeviceTasks                                      1     1      0   54622
                                             30 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
                    i2_USBDeviceInit
 ---------------------------------------------------------------------------------
 (15) i2_USBDeviceInit                                     1     1      0     610
                                              8 COMRAM     1     1      0
                           i2_memset
 ---------------------------------------------------------------------------------
 (15) _USBWakeFromSuspend                                  0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBSuspend                                          0     0      0    7487
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USBStallHandler                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (15) _USBIncrement1msInternalTimers                       0     0      0       0
 ---------------------------------------------------------------------------------
 (15) _USBCtrlEPService                                    1     1      0   31505
                                             29 COMRAM     1     1      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (16) i2_memcpy                                           11     5      6     221
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfSetupHandler                              0     0      0   31055
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (17) _USBCtrlEPServiceComplete                            0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowDataStage                             0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (17) _USBCheckStdRequest                                  0     0      0   23476
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (18) _USBStdSetCfgHandler                                 1     1      0    7985
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                           i2_memset
 ---------------------------------------------------------------------------------
 (16) i2_memset                                            8     2      6     408
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (18) _USBStdGetStatusHandler                              3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (18) _USBStdGetDscHandler                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (18) _USBStdFeatureReqHandler                             6     6      0    7958
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (15) _USER_USB_CALLBACK_EVENT_HANDLER                     8     2      6    7487
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
                i2_SYSTEM_Initialize
 ---------------------------------------------------------------------------------
 (16) i2_SYSTEM_Initialize                                 5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (16) _USBCheckMSDRequest                                  4     4      0     736
                                             11 COMRAM     4     4      0
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (16) _USBCheckHIDRequest                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _MSDTransferTerminated                               4     2      2    1075
                                             11 COMRAM     4     2      2
                 i2_USBStallEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBStallEndpoint                                  8     7      1     252
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceMSDInitialize                             0     0      0    1473
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (17) _USBMSDInit                                          3     3      0     740
                                             11 COMRAM     3     3      0
        i2_ExternalFlash_MediaDetect *
    i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (18) i2_ResetSenseData                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaInitialize                     2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) i2_ExternalFlash_MediaDetect                         2     0      2      26
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (16) _APP_DeviceCustomHIDInitialize                       0     0      0    1421
                  _USBEnableEndpoint
             i2_USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (17) i2_USBTransferOnePacket                             11     7      4     688
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 (17) _USBEnableEndpoint                                   4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (18) _USBConfigureEndpoint                                8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfOutHandler                                0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (17) _USBCtrlTrfRxService                                 2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (18) _USBCtrlEPAllowStatusStage                           0     0      0       0
 ---------------------------------------------------------------------------------
 (16) _USBCtrlTrfInHandler                                 1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (19) _USBCtrlTrfTxService                                 1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_jump_steps
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_jump_steps_with_overshoot
           _motor_move_steps
             ___fltol (ARG)
             __motor_move_steps (ARG)
               __motor_distance_to_limit
                 ___lmul
               __motor_schedule_command
                 _motor_items_in_cue
               _motor_items_in_cue
         __parse_set_manual_speed
           _motor_set_manual_speed
             _motor_change_speed
       __parse_command_short
         _motor_clear_command_cue
         _motor_goto_steps
           __motor_calculate_distance
           __motor_decide_direction
             __motor_calculate_distance
             __motor_distance_to_limit
               ___lmul
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_move_endless
           __motor_move_steps
             __motor_distance_to_limit
               ___lmul
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_set_zero
           __motor_move_back_forth
             __motor_schedule_command
               _motor_items_in_cue
             _motor_items_in_cue
         _motor_stop
     _api_prepare
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_mode_details
       __fill_buffer_get_status
         _memcpy
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceAttach
   _USBDeviceInit
     _memset
   _adc_read_temperature
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flneg
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _display_prepare
     __display_clear
     __display_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _motor_speed_from_index (ARG)
         __motor_get_speed_in_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___lmul
           ___xxtofl
             ___fltol (ARG)
       _strlen (ARG)
     __display_itoa_long
       ___aldiv
       ___almod
       __display_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _motor_speed_from_index (ARG)
           __motor_get_speed_in_degrees
             ___fldiv
               ___xxtofl (ARG)
                 ___fltol (ARG)
             ___fltol
             ___lmul
             ___xxtofl
               ___fltol (ARG)
         _strlen (ARG)
       _strlen
     __display_padded_itoa
       _itoa
         _utoa
           ___lwdiv
           ___lwmod
       _strlen
     __display_signed_itoa
       __display_padded_itoa
         _itoa
           _utoa
             ___lwdiv
             ___lwmod
         _strlen
     _memcpy
     _motor_speed_from_index
       __motor_get_speed_in_degrees
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___lmul
         ___xxtofl
           ___fltol (ARG)
     _strlen
   _display_update
     _i2c_display_cursor
       __ic2_display_set_ddram_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
   _encoder_statemachine
     __divide_jump_size_decrement
     __divide_jump_size_increment
     __encoder_next_arc_step_size
     __encoder_next_divide_step_size
     __encoder_next_setup_stepsize
     _motor_arc_move
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       _motor_move_steps
         ___fltol (ARG)
         __motor_move_steps (ARG)
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_change_speed
     _motor_decrease_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_divide_jump
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_divide_jump_to_nearest
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
       __step_position_from_divide_position
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
       _motor_goto_steps
         __motor_calculate_distance
         __motor_decide_direction
           __motor_calculate_distance
           __motor_distance_to_limit
             ___lmul
         __motor_move_steps
           __motor_distance_to_limit
             ___lmul
           __motor_schedule_command
             _motor_items_in_cue
           _motor_items_in_cue
     _motor_goto_steps
       __motor_calculate_distance
       __motor_decide_direction
         __motor_calculate_distance
         __motor_distance_to_limit
           ___lmul
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_increase_manual_speed
       _motor_set_manual_speed
         _motor_change_speed
     _motor_move_degrees_int
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
       __motor_steps_from_degrees_int
         ___fladd
           ___flneg (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fldiv
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___flmul
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___fltol
         ___xxtofl
           ___fltol (ARG)
     _motor_move_endless
       __motor_move_steps
         __motor_distance_to_limit
           ___lmul
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_set_zero
       __motor_move_back_forth
         __motor_schedule_command
           _motor_items_in_cue
         _motor_items_in_cue
     _motor_stop
   _motor_calculate_position_in_degrees
     ___fldiv
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___flmul
       ___xxtofl (ARG)
         ___fltol (ARG)
     ___fltol
     ___xxtofl
       ___fltol (ARG)
   _motor_process_cue
     __motor_run
     _motor_items_in_cue
   _system_init
     __backlight_init
     __system_pin_setup
     __system_timer0_init
     _adc_init
     _configFile_read
       __get_item
       __parse_item
         __steps_from_degrees
           ___fldiv
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flge
             ___fltol (ARG)
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___fltol (ARG)
           ___fltol
           ___xxtofl
             ___fltol (ARG)
         _atoi
           ___wmul
           _isdigit
         _atol
           ___lmul
           _isdigit
         _stricmp
           _toupper
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _configFile_readDefault
     _configFile_write
       __add_item
         _ltoa
           _ultoa
             ___lldiv
             ___llmod
       _fat_create_file
         __get_available_root_entry
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
         __get_date
         __get_time
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _strncmp
         _memcpy
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
         _strncmp
       _fat_modify_file
         __data_sector_from_cluster
         __find_nth_cluster
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         _flash_partial_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_copy_page_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
       _fat_resize_file
         __make_cluster_chain
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           __get_available_cluster
             __cluster_from_sector_and_offset
             __get_available_offset_from_buffer
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
           __get_available_offset_from_buffer
           __read_value_from_offset
           __write_value_to_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
         __write_root
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
     _display_init
       __display_start
         __display_itoa_u16
           _itoa
             _utoa
               ___lwdiv
               ___lwmod
         _memcpy
       _i2c_display_init
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
       _i2c_display_program_custom_character
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __ic2_display_set_cgram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
     _display_update
       _i2c_display_cursor
         __ic2_display_set_ddram_address
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
       _i2c_display_write_fixed
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
     _encoder_init
     _fat_init
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
       _fat_restore_mbr_fbr
         __get_fbr
         __get_mbr
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
     _i2c_eeprom_recover_position
       _i2c_eeprom_read
         __i2c_eeprom_busy
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_read
           __i2c_acknowledge
           __i2c_get
           __i2c_not_acknowledge
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
     _i2c_init
     _motor_calculate_position_in_degrees
       ___fldiv
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___flmul
         ___xxtofl (ARG)
           ___fltol (ARG)
       ___fltol
       ___xxtofl
         ___fltol (ARG)
     _motor_init

 _SYS_InterruptHigh (ROOT)
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 i2_USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   i2_ExternalFlash_MediaDetect *
                   i2_ExternalFlash_MediaInitialize *
                   i2_ResetSenseData *
                   i2_USBTransferOnePacket *
               _MSDTransferTerminated
                 i2_USBStallEndpoint
                 i2_USBTransferOnePacket
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 i2_USBTransferOnePacket
               i2_SYSTEM_Initialize
             i2_memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               i2_USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 i2_ExternalFlash_MediaDetect *
                 i2_ExternalFlash_MediaInitialize *
                 i2_ResetSenseData *
                 i2_USBTransferOnePacket *
             _MSDTransferTerminated
               i2_USBStallEndpoint
               i2_USBTransferOnePacket
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               i2_USBTransferOnePacket
             i2_SYSTEM_Initialize
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             i2_USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               i2_ExternalFlash_MediaDetect *
               i2_ExternalFlash_MediaInitialize *
               i2_ResetSenseData *
               i2_USBTransferOnePacket *
           _MSDTransferTerminated
             i2_USBStallEndpoint
             i2_USBTransferOnePacket
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             i2_USBTransferOnePacket
           i2_SYSTEM_Initialize
       i2_memcpy
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           i2_USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             i2_ExternalFlash_MediaDetect *
             i2_ExternalFlash_MediaInitialize *
             i2_ResetSenseData *
             i2_USBTransferOnePacket *
         _MSDTransferTerminated
           i2_USBStallEndpoint
           i2_USBTransferOnePacket
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           i2_USBTransferOnePacket
         i2_SYSTEM_Initialize
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         i2_USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           i2_ExternalFlash_MediaDetect *
           i2_ExternalFlash_MediaInitialize *
           i2_ResetSenseData *
           i2_USBTransferOnePacket *
       _MSDTransferTerminated
         i2_USBStallEndpoint
         i2_USBTransferOnePacket
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         i2_USBTransferOnePacket
       i2_SYSTEM_Initialize
     i2_USBDeviceInit
       i2_memset
   _motor_isr
     _i2c_eeprom_save_position
       _i2c_eeprom_write
         i2__i2c_eeprom_busy
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
         i2__i2c_write
           i2__i2c_send
           i2__i2c_start
           i2__i2c_stop
           i2__i2c_wait_idle
   _tmr0_isr
     _encoder_run

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     400      36       66.7%
BIGRAMlh           500      0       0      35        0.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      50      13       31.3%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      E4       9       89.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     3C     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     9E      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4B      5E       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     3F2      31        0.0%
DATA                 0      0     7F2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Jan 04 23:02:18 2020

                           __end_of_fat_read_from_file 1FAA  
                               _motor_next_speed_check 022C  
                      __size_of__write_value_to_offset 0036  
                                           _USB_SD_Ptr 9DE4  
                                         ___fldiv@aexp 0090  
                                         ___fldiv@bexp 008F  
                             fat_create_file@extension 00AE  
                                  __get_item@value_ctr 0069  
                                         ___fldiv@sign 0088  
               motor_calculate_position_in_degrees@tmp 0091  
                                  __system_timer0_init 58D6  
                      __size_of_configFile_readDefault 0074  
                     __motor_move_steps@return_value_1 0085  
                     __motor_move_steps@return_value_2 0086  
                         __motor_schedule_command@type 0066  
                            __end_of_motor_divide_jump 2F46  
                              configFile_read@position 01FC  
                                                   _os 0164  
                                        _USBDeviceInit FCDC  
                                  ___wmul@multiplicand 0062  
                                   _USBCheckHIDRequest 2778  
                          ??__data_sector_from_cluster 0062  
               __end_of__encoder_next_divide_step_size 584C  
              __size_of__encoder_next_divide_step_size 002E  
                       __encoder_next_divide_step_size 581E  
                                     __i2c_eeprom_busy 59AC  
                                     ??__flash_is_busy 0071  
                           ??__sector_from_file_number 0062  
                                         __CFG_CP0$OFF 000000  
                       __root_is_available@root_sector 008F  
                                  __end_of_system_init 05B2  
                             ?_i2c_display_write_fixed 0065  
                              fat_modify_file@position 00BF  
                                      _fat_resize_file 1624  
                 USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                 USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                        __motor_schedule_command@speed 0064  
                                                  l206 5754  
                                                  l207 5752  
                                                  l145 FD26  
                                                  l147 FD4E  
                                                  l149 FD88  
                          __end_of_USBStdGetDscHandler 094C  
                                                  l184 1330  
                                                  l192 126E  
                                                  l186 135A  
                                                  l602 DF12  
                                                  l188 13D8  
                                                  l700 D240  
                                                  l620 46C0  
                                                  l612 0816  
                                                  l701 CF80  
                                                  l613 0810  
                                                  l605 DF1A  
                                                  l710 D080  
                                                  l630 C12C  
                                                  l622 46DC  
                                                  l703 D264  
                                                  l711 D0EE  
                                                  l631 BD8C  
                                                  l615 081A  
                                                  l720 D226  
                                                  l712 D0EA  
                                                  l704 D02C  
                                                  l640 BED0  
                                                  l624 46E8  
                                                  l608 0768  
                                                  l641 BEDA  
                                                  l625 46EE  
                                                  l714 D102  
                                                  l706 D032  
                                                  l650 BFD2  
                                                  l642 BEFE  
                                                  l634 BD9C  
                                                  l626 46F4  
                                                  l570 DF32  
                                                  l731 0E34  
                                                  l715 D186  
                                                  l707 D03E  
                                                  l619 46FC  
                                                  l571 DCF6  
                                                  l708 D05C  
                                                  l660 C078  
                                                  l652 C008  
                                                  l644 BF2E  
                                                  l636 BDAC  
                                                  l580 DE08  
                                                  l900 4A24  
                                                  l709 D0A8  
                                                  l661 C08C  
                                                  l637 BDB6  
                                                  l734 0E40  
                                                  l726 0DDE  
                                                  l718 D1F6  
                                                  l670 C124  
                                                  l662 C0B4  
                                                  l654 C024  
                                                  l646 BF6E  
                                                  l582 DE20  
                                                  l735 0E68  
                                                  l719 D20E  
                                                  l639 BE0A  
                                                  l591 DE94  
                                                  l575 DD1A  
                                                  l728 0DF6  
                                                  l664 C0E8  
                                                  l656 C03C  
                                                  l592 DE98  
                                                  l904 4A36  
                                                  l753 0ED2  
                                                  l737 0EA4  
                                                  l681 E9A6  
                                                  l665 C0BC  
                                                  l649 BFA6  
                                                  l593 DEBE  
                                                  l577 DE46  
                                                  l770 0D58  
                                                  l738 0E8A  
                                                  l690 E8BC  
                                                  l682 E7E8  
                                                  l666 C0CE  
                                                  l578 DE2C  
                                                  l586 DF50  
                                                  l906 4A42  
                                                  l675 2D5E  
                                                  l763 0DA2  
                                                  l771 0D94  
                                                  l747 0EB2  
                                                  l691 E8E6  
                                                  l667 C0E4  
                                                  l587 DE66  
                                                  l579 DDFE  
                                                  l764 0D0C  
                                                  l684 E9CA  
                                                  l692 E914  
                                                  _BDT 000D00  
                                                  l677 2D7A  
                                                  l757 0CE0  
                                                  l749 0EC0  
                                                  l693 E926  
                                                  l685 E842  
                                                  l589 DE72  
                                                  l950 3480  
                                                  l766 0D14  
                                                  l694 E92C  
                                                  l686 E84E  
                                                  l862 391A  
                                                  l767 0D22  
                                                  l695 E940  
                                                  l687 E858  
                                                  l871 395C  
                                                  l863 3934  
                                                  l944 341C  
                                                  l768 0D36  
                                                  l696 E98E  
                                                  l688 E86C  
                                                  l872 3960  
                                                  l769 0D44  
                                                  l873 3966  
                                                  l867 396C  
                                                  l869 398E  
                                                  l897 4A54  
                                                  l986 5CCE  
                                                  l898 4A18  
                                                  _LBA 0125  
                                        ?_display_init 0001  
                                                  _PR2 000FCB  
                                                  _LUN 0297  
                                                  _UIE 000F36  
                                                  _UIR 000F62  
                                     ??_motor_set_zero 006A  
                                   api_prepare@command 0074  
                                           _USBSuspend 57EE  
                               __end_of_display_update 55EE  
                                 USBStdSetCfgHandler@i 0018  
                               i2c_eeprom_read@address 0071  
                                                  prod 000FF3  
                                                  tosl 000FFD  
                                                  wreg 000FE8  
                                       _USBDeviceTasks FF6E  
                                  ?_USBCheckHIDRequest 0001  
                                         __CFG_IESO$ON 000000  
                                       _USBDeviceState 005E  
                                         ___flmul@aexp 0089  
                                         ___flmul@bexp 008A  
                                         ?__write_root 0088  
                              __parse_item@item_string 0099  
                                         ___flmul@sign 0084  
                                         ___flmul@temp 008F  
                                         ___flmul@prod 008B  
                            __size_of_i2c_display_init 0050  
                                    ?_motor_goto_steps 0092  
                                ??_USBCtrlTrfRxService 0001  
                             __size_ofi2_USBDeviceInit 0144  
                             USBEnableEndpoint@options 0009  
                             ?__motor_decide_direction 007D  
                                    __find_nth_cluster 34BC  
                                    ??_MSDErrorHandler 0068  
                                 ?__system_timer0_init 0001  
                                  api_prepare@inBuffer 0070  
                                         ___fltol@exp1 0069  
                    __size_of__offset_from_file_number 002A  
                          __flash_write_to_buffer@data 0075  
                                                 l2000 DB8C  
                                                 l2001 DB90  
                                                 l2002 DB94  
                                                 l2003 DB98  
                                                 l2004 DB9C  
                                                 l2005 DBA0  
                                                 l1221 4CFA  
                                                 l2006 DBA4  
                                                 l1143 5D90  
                                                 l2200 3C6C  
                                                 l1400 A392  
                                                 l1128 5D98  
                                                 l1160 5008  
                                                 l1401 A3DC  
                                                 l1161 4FEA  
                                                 l1137 5D5E  
                                                 l1410 A436  
                                                 l1082 05A8  
                                                 l1331 20DC  
                                                 l1411 A46A  
                                                 l1403 A418  
                                                 l1155 5D56  
                                                 l2300 F26E  
                                                 l1324 51F8  
                                                 l1332 20C6  
                                                 l1340 52DE  
                                                 l1420 A54C  
                                                 l1412 A456  
                                                 l1404 A3E8  
                                                 l2060 31B4  
                                                 l1421 A538  
                                                 l1149 5D6A  
                                                 l2310 F238  
                                                 l2206 3822  
                                                 l1326 5204  
                                                 l1350 E482  
                                                 l1334 213A  
                                                 l1430 A6E2  
                                                 l1414 A460  
                                                 l1166 3A6E  
                                                 l2303 F14E  
                                                 l1335 210A  
                                                 l1431 A6B2  
                                                 l1423 A542  
                                                 l1415 A47E  
                                                 l3015 195C  
                                                 l1263 403C  
                                                 l1167 3A50  
                                                 l2320 F902  
                                                 l1352 E518  
                                                 l1440 A85C  
                                                 l1424 A560  
                                                 l1416 A4C2  
                                                 l3024 F604  
                                                 l3040 C1EA  
                                                 l3112 3E74  
                                                 l3016 1924  
                                                 l2064 3208  
                                                 l2321 F90A  
                                                 l2305 F160  
                                                 l2209 3860  
                                                 l1361 E5AA  
                                                 l1345 E48C  
                                                 l1441 A84C  
                                                 l1433 A770  
                                                 l1425 A5D0  
                                                 l3041 C220  
                                                 l3113 3E82  
                                                 l1257 4DCA  
                                                 l2314 F9C6  
                                                 l2330 F970  
                                                 l2322 F912  
                                                 l1362 E57A  
                                                 l1450 A930  
                                                 l1442 A86C  
                                                 l1434 A740  
                                                 l1426 A5A0  
                                                 l1418 A510  
                                                 l3050 C406  
                                                 l3042 C256  
                                                 l3018 19CE  
                                                 l1258 4DAC  
                                                 l2331 F976  
                                                 l2323 F91A  
                                                 l2315 F8E2  
                                                 l2307 F1DE  
                                                 l1355 E4FC  
                                                 l1443 A854  
                                                 l3027 F666  
                                                 l3051 C43C  
                                                 l3043 C28C  
                                                 l3019 19CA  
                                                 l2340 3D6A  
                                                 l2500 F5F2  
                                                 l2324 F922  
                                                 l2260 243E  
                                                 l1356 E510  
                                                 l1460 AB0C  
                                                 l1452 A994  
                                                 l1444 A8C6  
                                                 l1436 A816  
                                                 l1428 A654  
                                                 l3060 F0E8  
                                                 l3052 C49E  
                                                 l3044 C2C2  
                                                 l3108 3E40  
                                                 l1380 309E  
                                                 l2341 3D0C  
                                                 l2333 F992  
                                                 l2325 F952  
                                                 l2317 F8EA  
                                                 l2261 244C  
                                                 l1357 E570  
                                                 l1349 E464  
                                                 l1461 AAD4  
                                                 l1453 A9FC  
                                                 l1445 A896  
                                                 l1437 A7E6  
                                                 l3053 C4D4  
                                                 l3045 C2F8  
                                                 l3109 3E34  
                                                 l1373 303E  
                                                 l2350 FCD8  
                                                 l2342 3D86  
                                                 l2326 F958  
                                                 l2318 F8F2  
                                                 l2262 2460  
                                                 l3150 2AF4  
                                                 l1358 E52A  
                                                 l1390 AF1C  
                                                 l1470 AC38  
                                                 l1454 A9B2  
                                                 l3046 C32E  
                                                 l3038 C1B4  
                                                 l3070 F39C  
                                                 l2343 3D2A  
                                                 l2335 F9AE  
                                                 l2327 F95E  
                                                 l2319 F8FA  
                                                 l2263 2474  
                                                 l2191 4B18  
                                                 l1359 E56E  
                                                 l1367 0F32  
                                                 l1471 ACDE  
                                                 l1463 AB80  
                                                 l1455 AA0C  
                                                 l1447 A924  
                                                 l1439 A82E  
                                                 l1391 A334  
                                                 l3047 C364  
                                                 l3071 F3CE  
                                                 l2183 53FE  
                                                 l2360 3F14  
                                                 l2344 3D48  
                                                 l2520 21B4  
                                                 l2328 F964  
                                                 l2280 0A0C  
                                                 l2272 09B8  
                                                 l2264 2482  
                                                 l1544 4C16  
                                                 l3152 2B22  
                                                 l1480 ADAC  
                                                 l1472 AC56  
                                                 l1464 AB50  
                                                 l1456 A9BE  
                                                 l1392 A372  
                                                 l3048 C39A  
                                                 l1800 D42A  
                                                 l1376 305E  
                                                 l1536 4406  
                                                 l2184 53DA  
                                                 l2513 FE4E  
                                                 l2329 F96A  
                                                 l2257 24C2  
                                                 l2265 24A2  
                                                 l1545 4BD2  
                                                 l3153 2B16  
                                                 l1473 ACF4  
                                                 l1457 AA66  
                                                 l1449 A960  
                                                 l1393 A354  
                                                 l3057 EF74  
                                                 l3049 C3D0  
                                                 l2097 4122  
                                                 l1801 D432  
                                                 l1537 442A  
                                                 l2185 540E  
                                                 l3090 4C4E  
                                                 l2354 FAEE  
                                                 l2274 09BE  
                                                 l2290 2F94  
                                                 l1562 40AC  
                                                 l3170 3298  
                                                 l3162 3230  
                                                 l1482 AE4E  
                                                 l1474 AC62  
                                                 l1466 AB98  
                                                 l1458 AA36  
                                                 l2450 ECE8  
                                                 l2442 EBE2  
                                                 l1810 D536  
                                                 l1554 4974  
                                                 l1378 307E  
                                                 l2186 53EC  
                                                 l2515 FE72  
                                                 l2355 FB20  
                                                 l2523 223E  
                                                 l1547 4BFC  
                                                 l1563 40B6  
                                                 l3171 32AE  
                                                 l3163 3244  
                                                 l1491 AEEA  
                                                 l1483 AE78  
                                                 l1475 ACA0  
                                                 l1467 AC0A  
                                                 l1395 A35E  
                                                 l2443 EC3E  
                                                 l3059 F082  
                                                 l2099 4188  
                                                 l1803 D4A8  
                                                 l1555 497E  
                                                 l3075 C8B0  
                                                 l2516 FF12  
                                                 l2460 1D5A  
                                                 l2348 FC40  
                                                 l2356 FB86  
                                                 l2276 0A36  
                                                 l2292 2FD4  
                                                 l3156 2B56  
                                                 l1476 AD68  
                                                 l1468 ABDA  
                                                 l3340 0B1E  
                                                 l1820 452C  
                                                 l3068 F412  
                                                 l1804 D4A0  
                                                 l3076 C8C6  
                           USBConfigureEndpoint@handle 0007  
                                                 l2277 09D8  
                                                 l2269 096A  
                                                 l2293 2F9E  
                                                 l1565 40EE  
                                                 l2197 3C36  
                                                 l1581 4EEA  
                                                 l3157 2B64  
                                                 l3149 2ADC  
                                                 l3165 3262  
                                                 l1493 AF14  
                                                 l1485 AE86  
                                                 l1477 AD30  
                                                 l1397 A368  
                                                 l2509 0BB4  
                                                 l3341 0B5C  
                                                 l3069 F306  
                                                 l1805 D4E8  
                                                 l2454 1D02  
                                                 l2470 EDDC  
                                                 l2606 50D4  
                                                 l2278 0A6C  
                                                 l2294 2FAA  
                                                 l1590 4A8C  
                                                 l1582 4EF4  
                                                 l3158 2B7A  
                                                 l3166 3256  
                                                 l1822 4584  
                                                 l1830 5978  
                                                 l2471 EDEC  
                                                 l2463 ED9E  
                                                 l2279 09F0  
                                                 l1567 410E  
                                                 l1487 AEB0  
                                                 l1479 ADDC  
                                                 l1399 AF78  
                                                 l2703 432A  
                                                 l2447 EC4A  
                                                 l2456 1D14  
                                                 l2472 EE1A  
                                                 l2608 50F0  
                                                 l2288 2F5A  
                                                 l3600 CD84  
                                                 l2704 42F6  
                                                 l2616 2EDA  
                                                 l2800 B150  
                                                 l2448 EC4C  
                                                 l3089 4C3A  
                                                 l2457 1D24  
                                                 l2473 EE32  
                                                 l2609 50F8  
                                                 l3345 57AC  
                                                 l3169 328A  
                                                 l1489 AEDC  
                                                 l2713 5834  
                                                 l2801 B160  
                                                 l2449 ECB8  
                                                 l1809 D522  
                                                 l2458 1D34  
                                                 l2474 EE56  
                                                 l3370 23BA  
                                                 l2722 439A  
                                                 l2714 5824  
                                                 l2706 4302  
                                                 l2810 B1DE  
                                                 l3338 0AAC  
                                                 l1850 1E32  
                                                 l1914 1634  
                                                 l2459 1D40  
                                                 l2475 EE80  
                                                 l2467 EDB0  
                                                 l1595 5B00  
                                                 l1691 56AC  
                                                 l3611 CE78  
                                                 l3603 CDF0  
                                                 l3371 23AA  
                                                 l2723 4366  
                                                 l2707 430C  
                                                 l2619 2EFE  
                                                 l2811 B200  
                                                 l3339 0AE0  
                                                 l1755 48B2  
                                                 l1771 2A4A  
                                                 l1499 55C4  
                                                 l2539 232C  
                                                 l2476 EEB2  
                                                 l2468 EDC0  
                                                 l3620 CECC  
                                                 l3604 CDB8  
                                                 l3700 CC2C  
                                                 l2732 542A  
                                                 l2716 5828  
                                                 l2708 4316  
                                                 l2812 B20E  
                                                 l2804 B192  
                                                 l1828 5966  
                                                 l1924 DFCE  
                                                 l1916 1644  
                                                 l1932 296E  
                                                 l1940 293A  
                                                 l2477 EEE2  
                                                 l2469 EDCC  
                                                 l2493 F506  
                                                 l2645 36E6  
                                                 l1589 4A82  
                                                 l3613 CE88  
                                                 l2725 4372  
                                                 l2717 582C  
                                                 l2709 4320  
                                                 l2821 B28E  
                                                 l1781 354E  
                                                 l1757 48EC  
                                                 l1925 E166  
                                                 l1917 1700  
                                                 l1941 293E  
                                                 l1933 2922  
                                                 l2478 EF50  
                                                 l2726 437C  
                                                 l2718 5830  
                                                 l2902 B742  
                                                 l2830 B2FC  
                                                 l2814 B248  
                                                 l1782 34E4  
                                                 l1774 2AA4  
                                                 l1926 E054  
                                                 l1918 16F8  
                                                 l1950 2962  
                                                 l1942 2942  
                                                 l2495 F51E  
                                                 l2487 33D0  
                                                 l1695 5678  
                                                 l3607 CDDA  
                                                 l2727 4386  
                                                 l2807 B7AA  
                                                 l2911 B70E  
                                                 l2903 B6C4  
                                                 l2815 B216  
                                                 l1847 1EC0  
                                                 l1783 3530  
                                                 l1791 D2E2  
                                                 l1863 035A  
                                                 l1927 E07C  
                                                 l1951 2966  
                                                 l1943 2946  
                                                 l1935 2926  
                                                 l2496 F536  
                                                 l3632 CF58  
                                                 l3616 CEAC  
                                                 l3608 CDDE  
                                                 l3376 23DE  
                                                 l3368 234E  
                                                 l3560 4E4C  
                                                 l2728 4390  
                                                 l2912 B726  
                                                 l2904 B6E0  
                                                 l2840 B3E6  
                                                 l2816 B220  
                                                 l1856 1EAA  
                                                 l1776 2AAE  
                                                 l1792 D388  
                                                 l1928 E124  
                                                 l1960 DA80  
                                                 l1952 296A  
                                                 l1944 294A  
                                                 l1936 292A  
                                                 l3633 CF60  
                                                 l3625 CEEC  
                                                 l3377 23D2  
                                                 l3561 4E44  
                                                 l2737 4456  
                                                 l2841 B39E  
                                                 l2825 B38C  
                                                 l2833 B322  
                                                 l2809 B238  
                                                 l2817 B22E  
                                                 l1793 D334  
                                                 l1865 036C  
                                                 l1961 DA84  
                                                 l1945 294E  
                                                 l1937 292E  
                                                 l2498 F58A  
                                                 l3810 57DA  
                                                 l3634 CF62  
                                                 l3618 CEC2  
                                                 l3730 0174  
                                                 l3570 5364  
                                                 l3642 D572  
                                                 l2914 B730  
                                                 l2850 B406  
                                                 l2842 B3AE  
                                                 l2834 B334  
                                                 l2826 B2B6  
                                                 l3490 4606  
                                                 l1794 D450  
                                                 l1866 03CA  
                                                 l1970 DB18  
                                                 l1962 DA96  
                                                 l1946 2952  
                                                 l1938 2932  
                                                 l2499 F5D8  
                                                 l3811 57C8  
                                                 l3379 23FA  
                                                 l3731 015C  
                                                 l3723 00F6  
                                                 l3571 535C  
                                                 l3651 D624  
                                                 l3643 D56E  
                                                 l2907 B6EE  
                                                 l2851 B418  
                                                 l2843 B3BC  
                                                 l2827 B2CA  
                                                 l2819 B262  
                                                 l1859 41AA  
                                                 l1891 1F5C  
                                                 l1971 DB1C  
                                                 l1963 DAA8  
                                                 l1947 2956  
                                                 l1939 2936  
                                                 l3804 4830  
                                                 l3628 CF32  
                                                 l3724 0106  
                                                 l3564 4E6C  
                                                 l3660 D6E8  
                                                 l3652 D6D2  
                                                 l2772 B760  
                                                 l2908 B6F8  
                                                 l1788 D2D8  
                                                 l1956 DBA8  
                                                 l1980 DB40  
                                                 l1972 DB20  
                                                 l1964 DABA  
                                                 l1948 295A  
                                                 l3805 47F6  
                                                 l3733 01A6  
                                                 l3725 0124  
                                                 l2941 EB8A  
                                                 l3565 4E76  
                                                 l3653 D682  
                                                 l2909 B706  
                                                 l2861 B4CA  
                                                 l2853 B44C  
                                                 l2845 B3F6  
                                                 l2837 B366  
                                                 l3493 463A  
                                                 l1981 DB44  
                                                 l1973 DB24  
                                                 l1965 DACC  
                                                 l1957 DA78  
                                                 l1949 295E  
                                                 l3590 CCBC  
                                                 l3734 019A  
                                                 l3574 537C  
                                                 l3670 D7D0  
                                                 l3654 D6AA  
                                                 l3646 D5B2  
                                                 l2862 B486  
                                                 l2846 B3C4  
                                                 l2774 B1B8  
                                                 l2782 B018  
                                                 l3750 2662  
                                                 l1894 E1CC  
                                                 l3494 4648  
                                                 l1798 D41C  
                                                 l1990 DB68  
                                                 l1982 DB48  
                                                 l1974 DB28  
                                                 l1966 DADE  
                                                 l3591 CCB8  
                                                 l3727 0136  
                                                 l3575 5386  
                                                 l3671 D7DC  
                                                 l3647 D5AE  
                                                 l2871 B4F4  
                                                 l2863 B492  
                                                 l2855 B458  
                                                 l2847 B3CE  
                                                 l2783 B028  
                                                 l2775 AFB0  
                                                 l3751 2624  
                                                 l1991 DB6C  
                                                 l1983 DB4C  
                                                 l1975 DB2C  
                                                 l1967 DAF0  
                                                 l1959 DA7C  
                                                 l3680 C962  
                                                 l3728 012A  
                                                 l2944 EBA0  
                                                 l3672 D7DE  
                                                 l3656 D6D0  
                                                 l2864 B4A0  
                                                 l2856 B464  
                                                 l2848 B3DC  
                                                 l2792 B0C2  
                                                 l2776 AFC0  
                                                 l3744 25D0  
                                                 l3832 3FFE  
                                                 l1896 E396  
                                                 l1992 DB70  
                                                 l1984 DB50  
                                                 l1976 DB30  
                                                 l1968 DB02  
                                                 l3593 CD18  
                                                 l3585 CC74  
                                                 l3681 C95E  
                                                 l3649 D5FC  
                                                 l2881 B5D6  
                                                 l2873 B538  
                                                 l3753 2696  
                                                 l3745 25CA  
                                                 l3761 1862  
                                                 l3841 5C98  
                                                 l3833 3F9C  
                                                 l1897 E284  
                                                 l3489 4612  
                                                 l1993 DB74  
                                                 l1985 DB54  
                                                 l1977 DB34  
                                                 l1969 DB14  
                                                 l3594 CCDC  
                                                 l3586 CC70  
                                                 l3682 C972  
                                                 l2938 EB64  
                                                 l3826 5464  
                                                 l3666 D73E  
                                                 l2866 B4DA  
                                                 l2794 B0E8  
                                                 l2786 B05A  
                                                 l3818 49C4  
                                                 l3834 3FF4  
                                                 l1898 E2AC  
                                                 l1994 DB78  
                                                 l1986 DB58  
                                                 l1978 DB38  
                                                 l3683 C990  
                                                 l3739 01E6  
                                                 l3827 545E  
                                                 l3659 D706  
                                                 l2883 B650  
                                                 l2891 B62E  
                                                 l2867 B4A8  
                                                 l2795 B0F8  
                                                 l2779 AFF2  
                                                 l3747 2612  
                                                 l3819 49BA  
                                                 l1899 E354  
                                                 l1987 DB5C  
                                                 l1979 DB3C  
                                                 l3676 C922  
                                                 l3668 D782  
                                                 l2884 B5EA  
                                                 l2876 B590  
                                                 l2868 B4B2  
                                                 l2788 B080  
                                                 l3772 5B40  
                                                 l3764 18C4  
                                                 l1996 DB7C  
                                                 l1988 DB60  
                                                 l3597 CD94  
                                                 l3677 C91E  
                                                 l3669 D7A6  
                                                 l2893 B636  
                                                 l2885 B5FE  
                                                 l2869 B4C0  
                                                 l2789 B090  
                                                 l3765 186C  
                                                 l1997 DB80  
                                                 l1989 DB64  
                            ?__offset_from_file_number 0060  
                                                 l3598 CD72  
                                                 l3694 CB88  
                                                 l3678 C932  
                                                 l3782 32C8  
                                                 l2894 B648  
                                                 l2878 B5AC  
                                                 l2798 B12A  
                                                 l1998 DB84  
                                                 l3599 CD80  
                                                 l3687 CB50  
                                                 l2879 B5BE  
                                                 l3767 190A  
                                                 l1999 DB88  
                                                 l3696 CBCC  
                                                 l3688 CB32  
                                                 l3784 3304  
                                                 l2896 B668  
                                                 l2888 B60C  
                                                 l3792 4E06  
                                                 l3697 CBEA  
                                                 l3785 3346  
                                                 l2897 B6A0  
                                                 l2889 B620  
                                                 l3778 532E  
                                                 l3699 CC0E  
                                                 l2899 B6AA  
                                                 l3796 1732  
                                                 l3798 178E  
                                                 l3799 17FC  
                  __end_of__encoder_next_arc_step_size 43D4  
                          __encoder_next_arc_step_size 4364  
                        __size_of_encoder_statemachine 082A  
                                ??i2_SYSTEM_Initialize 0001  
                                                 STR_1 A314  
                                                 STR_2 A31D  
                                                 STR_3 A314  
                                                 STR_4 A31D  
                                                 STR_5 A314  
                                                 STR_6 A324  
                                                 STR_7 A30B  
                                                 STR_8 A30B  
                                                 STR_9 A30B  
                                   ??_motor_goto_steps 0099  
                                ??_USBCtrlTrfTxService 0001  
                                                 _UCFG 000F39  
                                 _configFile_extention 02E1  
                                                 _UEP0 000F26  
                                                 _UEP1 000F27  
                                     ?_fat_create_file 00AC  
                                                 _UEIE 000F37  
                                                 _UEIR 000F63  
                                                 _UCON 000F65  
                                                 _TMR2 000FCC  
                          __size_ofi2_USBStallEndpoint 0106  
                                   ?__find_nth_cluster 0097  
                                       ??_encoder_init 0060  
                              ??_fat_get_format_status 008B  
                                 api_parse@out_idx_ptr 00AE  
                                       _ResetSenseData 4720  
                          __end_of_fat_restore_mbr_fbr 3BE4  
                                                 _enc1 0146  
                                                 _enc2 0145  
               USBStdFeatureReqHandler@current_ep_data 001B  
                                                 _pDst 0141  
                                                 _atoi 25C8  
                                                 _atol 1820  
                                                 _main 3900  
                              _bit_pattern_verticalbar A2D5  
                                                 _itoa 5308  
                             ??i2_USBTransferOnePacket 0005  
                                  _use_cw_limit_string A2A5  
                                                 _ltoa 4DD8  
                          __size_of_APP_DeviceMSDTasks 0012  
                                                 fsr0h 000FEA  
                                                 fsr1h 000FE2  
                              __end_of_display_prepare AF94  
                    motor_goto_steps@distance_in_steps 0099  
                                                 indf0 000FEF  
                                                 fsr2h 000FDA  
                                                 fsr0l 000FE9  
                                                 indf1 000FE7  
                                                 indf2 000FDF  
                                                 fsr1l 000FE1  
                                                 fsr2l 000FD9  
                                      _USBDeviceAttach 572C  
                                                 btemp 005F  
                                                 _utoa 32C0  
                               __CFG_DSWDTOSC$T1OSCREF 000000  
                           ??_ExternalFlash_SectorRead 0093  
                         ?i2_ExternalFlash_MediaDetect 0001  
                            _ExternalFlash_MediaDetect 5D7A  
                                                 prodh 000FF4  
                                                 prodl 000FF3  
     __get_available_offset_from_buffer@minimum_offset 0060  
                       fat_modify_file@number_of_bytes 00BD  
                                                 start 908E  
                      __end_of_APP_DeviceMSDInitialize 5D08  
                         ?__motor_get_speed_in_degrees 0091  
                                      ___fldiv@new_exp 0089  
                                _display_get_character 584C  
                                 ??_USBCheckHIDRequest 0001  
  __motor_distance_to_limit@absolute_position_in_steps 0079  
                                     ?_MSDWriteHandler 0001  
                              __end_of_fat_modify_file E188  
                        ??__encoder_next_arc_step_size 0062  
                                  ??__find_nth_cluster 009B  
                       ??_MSDProcessCommandMediaAbsent 00A7  
                           __end_of_USBCheckStdRequest 2778  
                               ??_USBCtrlTrfOutHandler 0003  
                         ??__flash_copy_page_to_buffer 0076  
                       ?__flash_write_page_from_buffer 0073  
                                         ___param_bank 000000  
                            ??_USBStdFeatureReqHandler 0018  
                                         _USBOutHandle 0137  
                     __end_of__fat_sector_from_cluster 5C1C  
                               __get_available_cluster 29F0  
                        __write_value_to_offset@buffer 0062  
                               __get_item@value_string 0062  
                           __end_ofi2__i2c_eeprom_busy 5A98  
                        __size_of__display_padded_itoa 00E2  
                      __end_of__parse_set_manual_speed 3F18  
                      __size_of__flash_write_to_buffer 0052  
                             ??_USBStdGetStatusHandler 0001  
                        __write_value_to_offset@offset 0060  
                                       ?_USBDeviceInit 0001  
                                    __flash_get_status 56C4  
                 __make_cluster_chain@sector_in_buffer 00A6  
                     __fat_offset_from_cluster@cluster 0060  
                    motor_speed_from_index@speed_index 009D  
                                        __CFG_PLLDIV$2 000000  
                                 _configFile_used_name 02CE  
                           __end_of_motor_speed_lookup 9461  
                                    ?_motor_move_steps 008C  
                        i2c_display_write_fixed@length 0067  
                                                l20002 4344  
                                                l20004 435A  
                                                l20006 43B4  
                                                l13000 47F6  
                                                l20008 43CA  
                                                l12056 0B94  
                                                l14006 3F9C  
                                                l15012 1EC0  
                                                l13078 E9A0  
                                                l14232 D7D0  
                                                l13338 EE1A  
                                                l12670 0E40  
                                                l16110 E4A6  
                                                l16050 4034  
                                                l16224 03CA  
                                                l13770 BEF6  
                                                l17026 DD12  
                                                l16090 E3FC  
                                                l16410 3BA4  
                                                l17204 0A06  
                                                l17134 55BC  
                                                l16166 43D8  
                                                l16504 2FA2  
                                                l13936 2A14  
                                                l13960 2AB4  
                                         spi_tx@length 0062  
                                                l16358 3184  
                                                l18064 4A24  
                                                l17520 0F32  
                                                l16376 31D8  
                                                l16730 F6F0  
                                                l16714 F65E  
                                                l18068 4A42  
                                                l15588 265E  
                                                l14948 595E  
                                                l16396 3B5C  
                                                l17490 51FC  
                                                l14978 1E14  
                                                l16940 57C8  
                                                l17484 51F0  
                                                l16694 F5FC  
                                                l17912 FD80  
                                                l17592 ECB8  
                                                l18730 A508  
                                                l18716 A4BA  
                                                l17598 ECE8  
                                                l17884 FD1E  
                                        ___fltol@sign1 0068  
                                motor_move_steps@speed 0090  
                                      __end_of___aldiv 2B8C  
                                   ?__flash_get_status 006C  
                                       ??_display_init 0081  
                                                l19996 DBC2  
                                                l19998 DCDA  
                                                ?_atoi 0066  
                                      __end_of___almod 32C0  
                                                ?_atol 006C  
                                      __end_of___fladd CF7E  
                                                ?_main 0001  
                  __end_of_initial_speed_manual_string A1FD  
                          _initial_speed_manual_string A1E8  
                                      __end_of___fldiv D7FA  
                                                ?_itoa 0070  
                                      __end_of___flneg 57BE  
                                                STR_10 A30B  
                                                ?_ltoa 007A  
                                                STR_11 A30B  
                                                STR_12 A30B  
                                                STR_13 A30B  
                                                STR_14 A30B  
                                                STR_15 A2F6  
                                                STR_16 A302  
                                                STR_17 A32A  
                                                STR_18 A2E9  
                                      __end_of___flmul CC42  
                                     ??__display_clear 0060  
                                      _cw_limit_string A2BC  
                    __size_of_USBCtrlEPServiceComplete 00FA  
                                      __end_of___fltol 240C  
                                      __end_of___lldiv 3E94  
                                                ?_utoa 0067  
                     MSDCheckForErrorCases@DeviceBytes 006A  
                                                u10205 4220  
                                                u10330 0CCC  
                                                u11115 E814  
                                                u10095 40C2  
                                                u10185 4A98  
                                                u11225 CFAC  
                                                u11090 4818  
                                                u11308 D0B8  
                                                u13020 D73A  
                                                u11420 4666  
                                                u11309 D0CC  
                                                u10710 0EA0  
                                                u11350 D1C2  
                                                u11430 4674  
                                                u11168 E896  
                                                u11360 D1C4  
                                                u11248 CFE4  
                                                u11440 4682  
                                                u11097 480E  
                                                u11169 E8AA  
                                                u11249 CFF8  
                                      __end_of___llmod 465A  
                               __end_of_USBDeviceTasks 00B4  
                                                u11610 ED9A  
                                                u10730 0EBA  
                                                u13210 CB84  
                                                u13050 D790  
                                                u11450 4690  
                                                u11700 EE16  
                                                u13060 D7B4  
                                                u14100 1EB6  
                                                u11460 469E  
                                                u11428 466A  
                                                u11710 EE2E  
                                                u10750 0ECE  
                                                u12430 C050  
                                                u13150 C97E  
                                                u14110 1EC0  
                                                u14030 597E  
                                                u11470 46AA  
                                                u11438 4678  
                                                u10680 0E86  
                                                u12440 C062  
                                                u12360 BF26  
                                                u12328 BE1A  
                                                u13240 CBDA  
                                                u13160 CAF4  
                                                u11448 4686  
                                                u12329 BE2E  
                                                u11545 498A  
                                                u11378 D1D0  
                                                u12338 BE4E  
                                                u13250 CBF8  
                                                u13330 236C  
                                                u11810 3E44  
                                                u12610 2AB4  
                                                u11458 4694  
                                                u11379 D1E4  
                                                u12339 BE62  
                                                u11555 5998  
                                                u10780 56A8  
                                                u15004 0746  
                                                u10940 4E50  
                                                u14140 4184  
                                                u11476 46AC  
                                                u11468 46A2  
                                                u15005 0740  
                                                u13165 CAEA  
                                                u14230 FC1E  
                                                u10790 5674  
                                                u12470 C0F0  
                                                u15014 0780  
                                                u12630 351C  
                                                u14150 E1A8  
                                                u15015 077A  
                                                u13335 2362  
                                                u15111 4F80  
                                                u15200 E410  
                                                u11840 4616  
                                                u12378 BF4A  
                                                u13370 23E4  
                                                u13450 01B0  
                                                u10970 5368  
                                                u15210 E486  
                                                u14330 4A06  
                                                u12379 BF5E  
                                                u14155 E19C  
                                                u14260 FACC  
                                                u15140 4082  
                                                u15054 07DE  
                                                u15038 07A8  
                                                u16110 3266  
                                                u12670 4580  
                                                u12590 2A74  
                                                u15055 07D8  
                                                u15039 07BE  
                                                u14175 E240  
                                                u14600 CD5A  
                                                u15240 E4BA  
                                                u15400 16B2  
                                                u16050 2B26  
                                                u15250 E514  
                                                u12690 3FC2  
                                                u15410 16CC  
                            ?_USBCtrlEPServiceComplete 0001  
                                                u16300 DD42  
                                                u13900 D3BE  
                                                u13820 306A  
                                                u15405 16A8  
                                                u14630 CD9C  
                                                u13910 D3CA  
                                                u15350 0392  
                                                u13830 308A  
                                                u15095 4CEA  
                                   ??_motor_move_steps 0093  
                                                u13920 D3F6  
                                                u15600 3B86  
                                                u17130 2E9E  
                                                u15355 0388  
                                                u17300 FDE4  
                                                u14580 CD48  
                                                u15460 DFF4  
                                                u15620 3BCE  
                                                u14590 CD58  
                                                u13950 D480  
                                                u13870 D31A  
                                                u15390 1680  
                                                u15550 31BA  
                                                u16280 DD0C  
                                                u14840 CF3E  
                                                u14760 CED0  
                                                u18040 B2C4  
                                                u15465 DFEA  
                                                u18050 B2F6  
                                                u17090 EC46  
                                                u15810 F6DC  
                                                u13970 D4FC  
                                                u13890 D394  
                                                u15395 1676  
                                                u15660 2FD2  
                                                u13980 D508  
                                                u15580 320E  
                                                u15725 05E6  
                                                u16470 DEF2  
                                                u17270 FD42  
                                                u14790 CEE8  
                                                u18080 B32E  
                                                u18330 B528  
                                                u18090 B360  
                                                u15770 F644  
                                                u14990 072E  
                                                u18350 B57E  
                                                u18351 B57C  
                                                u17650 3436  
                                                u14978 06FC  
                                                u17810 B08C  
                                                u17730 AFBC  
                                                u14979 0710  
                                      __end_of___lwdiv 4E80  
                                                u17900 B18C  
                                                u17820 B0BC  
                                                u17740 AFEC  
                                                u16941 F45E  
                                                u17670 344A  
                                                u19270 393C  
                                                u17850 B0F4  
                                                u17770 B024  
                         __flash_write_to_buffer@start 0073  
                                                u18660 EB4E  
                                                u16980 5230  
                                                u18740 A4EA  
                                                u17860 B124  
                                                u17780 B054  
                                                u18670 EB5E  
                                                u18680 EB74  
                                                u18690 EB84  
                                                u17890 B15C  
                          __size_of_motor_change_speed 000A  
                                                u19907 4FA6  
                                                u19917 4BEE  
                                                u19927 4C00  
                                                u19937 4C0A  
                                      __end_of___lwmod 5390  
                                                i2l300 359C  
                                                i2l220 38B8  
                                                i2l214 2BD4  
                                                i2l222 38CE  
                                                i2l231 1A90  
                                                i2l232 1A3A  
                                                i2l160 FFBE  
                                                i2l321 37BE  
                                                i2l145 023E  
                                                u19897 4F92  
                                                i2l250 28A0  
                                                i2l226 3B20  
                                                i2l322 37B8  
                                                i2l162 FFE4  
                                      __end_of_dc_arc1 9F2E  
                                                i2l307 53D0  
                                                i2l315 561A  
                                                i2l147 0266  
                                                i2l155 FF84  
                                      __end_of_dc_arc2 9EDE  
                                                i2l340 2C86  
                                                i2l260 114E  
                                                i2l332 4854  
                                                i2l180 54EC  
                                                i2l236 1ABA  
                                                i2l308 53CE  
                                                i2l316 5618  
                                                i2l172 0072  
                                                i2l164 FFFA  
                                                i2l156 FF94  
                                        __CFG_WDTEN$ON 000000  
                                                i2l253 2918  
                                                i2l245 286E  
                                                i2l341 2C8A  
                                                i2l261 112C  
                                                i2l149 029E  
                                                i2l165 0006  
                                                i2l157 FF9C  
                                                i2l254 28E0  
                                                i2l342 2D08  
                                                i2l334 489E  
                                                i2l174 0090  
                                                i2l166 002E  
                                                i2l247 2878  
                                                i2l343 2CCE  
                                                i2l263 11C2  
                                                i2l167 0038  
                                                i2l159 FFB2  
                                                i2l264 11A8  
                                                i2l184 1538  
                                                i2l192 147A  
                                                i2l432 2826  
                                                i2l280 0934  
                                                i2l272 2532  
                                                i2l360 26C4  
                                                i2l176 00AC  
                                                i2l249 28D8  
                                                i2l345 2CEE  
                                                i2l425 27C4  
                                                i2l281 0830  
                                                i2l361 26D6  
                                                i2l169 004A  
                                                i2l186 1562  
                                                i2l426 2794  
                                                i2l274 25A6  
                                                i2l362 26DC  
                                                i2l179 54DE  
                                                i2l283 0842  
                                                i2l355 2734  
                                                i2l188 15E0  
                                                i2l436 27E6  
                                                i2l428 27D6  
                                                i2l372 D81A  
                                                i2l284 08CC  
                                                i2l364 26E2  
                                                i2l356 26B0  
                                                i2l437 27FC  
                                                i2l429 27B2  
                                                i2l381 D972  
                                                i2l373 D820  
                                                i2l293 35D8  
                                                i2l365 26FE  
                                                i2l534 10F6  
                                                i2l438 2806  
                                                i2l550 2E4C  
                                                i2l286 08D2  
                                                i2l294 356E  
                                                i2l366 2716  
                                                i2l358 26B8  
                                                i2l535 1062  
                                                i2l439 281C  
                                                i2l391 D9FE  
                                                i2l383 D93C  
                                                i2l375 D888  
                                                i2l287 0928  
                                                i2l359 26BE  
                                                i2l384 D958  
                                                i2l537 10EE  
                                                i2l545 2E7E  
                                                i2l393 DA50  
                                                i2l377 D8D0  
                                                i2l289 092E  
                                                i2l297 35EE  
                                                i2l562 2E52  
                                                i2l546 2DE6  
                                                i2l386 D9BE  
                                                i2l298 357E  
                                                i2l387 D9CA  
                                                i2l379 D8F2  
                                                i2l299 3582  
                                                i2l900 4E8E  
                                                i2l820 3D8C  
                                                i2l388 DA44  
                                                i2l821 3D94  
                                                i2l822 3D9C  
                                                i2l904 4EA0  
                                                i2l816 3DBE  
                                                i2l824 3DA6  
                                                i2l906 4EAC  
                                                i2l826 3DB0  
                                                i2l780 4D4C  
                                                i2l783 4D82  
                                                _UADDR 000F38  
                                                i2l897 4EBE  
                                                i2l898 4E84  
          __end_of_motor_calculate_position_in_degrees 232E  
         __size_of_motor_calculate_position_in_degrees 00DE  
                 ?_motor_calculate_position_in_degrees 0001  
                ??_motor_calculate_position_in_degrees 0091  
                  _motor_calculate_position_in_degrees 2250  
                                      __end_of_dc_main A0BE  
                                                _TMR0H 000FD7  
                                                _TMR0L 000FD6  
                                                _PORTA 000F80  
                                                _PORTE 000F84  
                                                _RPOR4 000EC4  
                                     ??__display_start 007C  
                          __motor_move_steps@direction 008B  
                      __end_of__motor_schedule_command 1DDC  
                                                _USTAT 000F64  
                                      __end_of_dc_zero 9E8E  
                           ?__motor_calculate_distance 0060  
                                     __i2c_read@length 0067  
                                 _beep_duration_string A27B  
                          ?_ExternalFlash_CapacityRead 0060  
                                      ?_display_update 0001  
                             __find_nth_cluster@offset 009B  
                   __size_of_USBCtrlEPAllowStatusStage 00C4  
                                      _i2c_eeprom_read 4CD8  
                                  ___lmul@multiplicand 0064  
                               __motor_move_back_forth 336A  
                            __end_of__find_nth_cluster 3562  
                             __find_nth_cluster@sector 009F  
                                     __end_of_MSDTasks DF54  
                                           i2memcpy@d1 0001  
                                       __CFG_FCMEN$OFF 000000  
                                      __read_fat@value 0095  
                                   _USBCheckMSDRequest 2DD2  
                                           i2memcpy@s1 0003  
                      __end_of_USBCtrlEPAllowDataStage 3900  
            motor_divide_jump@target_position_in_steps 009F  
                                                _sd000 A2E5  
                               __write_value_to_offset 5626  
                                                _sd001 A0FE  
                                                _sd002 A132  
                                                _sd003 A1A1  
                       ?_USBIncrement1msInternalTimers 0001  
                       __size_of_MSDTransferTerminated 0056  
                                  ??__flash_get_status 006E  
                __i2c_display_send_init_sequence@F7089 02BD  
                        __end_of_MSDTransferTerminated 4D84  
                                         _gblCBWLength 0151  
                                           i2memset@p1 0001  
                               ?_MSDCheckForErrorCases 006A  
                                ??__system_timer0_init 0060  
                                 _use_ccw_limit_string A26D  
                               _configFile_readDefault 4280  
                                      __end_of_isdigit 5B48  
                                i2USBStallEndpoint@dir 0001  
                               __end_of_ResetSenseData 4782  
                                                atoi@a 006B  
                                                atol@a 0075  
                                                atol@c 0079  
                                                atoi@s 0066  
                                                atol@s 006C  
                              __end_of__backlight_init 5DBA  
                                      __motor_run@type 0066  
                                                _ultoa 1722  
                             __parse_command_long@data 00A0  
                            __data_sector_from_cluster 5CE8  
                            fat_get_format_status@cntr 008D  
                      __end_of_motor_postscaler_lookup 9A16  
                       __end_of_motor_prescaler_lookup 9DE4  
                                                pclath 000FFA  
                           __end_of__display_itoa_long 0FF0  
                                                tablat 000FF5  
                           i2__i2c_write@slave_address 0009  
                            __size_of_USBStallEndpoint 010A  
                                  ?_USBCheckMSDRequest 0001  
                                      _MSDCommandState 0155  
                          ??_ExternalFlash_SectorWrite 008D  
                                                plusw1 000FE3  
                                                plusw2 000FDB  
                                          ?_USBMSDInit 0001  
             ExternalFlash_WriteProtectStateGet@config 0060  
                                                ttemp5 0060  
                                                ttemp6 0063  
                                                ttemp7 0067  
                                                utoa@c 006F  
                                                utoa@v 006D  
                                                status 000FD8  
                          ?__flash_copy_page_to_buffer 0073  
                                    __CFG_DSWDTPS$8192 000000  
                                                wtemp8 0060  
                             __end_ofi2_ResetSenseData 47E4  
                                      __end_of_stricmp 4A12  
                                      __end_of_strncmp 401A  
                                      __end_of_toupper 5C9C  
                                     __end_ofi2_memcpy 495E  
                                     __end_ofi2_memset 592E  
                       ??_MSDComputeDeviceInAndResidue 0062  
                                 __size_of__parse_item 03C0  
                                       _MSDReadHandler E7E6  
                                           _i2c_buffer 0226  
          i2c_display_program_custom_character@address 007F  
                                  __steps_from_degrees EF54  
                         __size_of_USBStdSetCfgHandler 00DE  
                    fat_create_file@number_of_clusters 00B8  
                        ??i2_ExternalFlash_MediaDetect 0003  
                          __end_of__make_cluster_chain D540  
                    __make_cluster_chain@first_cluster 0095  
                                      __initialization 3996  
                         ?_motor_decrease_manual_speed 0001  
                        fat_read_from_file@file_number 00D7  
                            __end_of__flash_get_status 56F8  
                         fat_get_file_information@data 008F  
                          fat_read_from_file_fast@data 00A9  
              __end_ofi2_ExternalFlash_MediaInitialize 5C84  
             __size_ofi2_ExternalFlash_MediaInitialize 001A  
                __end_of_ExternalFlash_MediaInitialize 5B8C  
               __size_of_ExternalFlash_MediaInitialize 0022  
                    ??i2_ExternalFlash_MediaInitialize 0003  
                     ?i2_ExternalFlash_MediaInitialize 0001  
                      i2_ExternalFlash_MediaInitialize 5C6A  
                        _ExternalFlash_MediaInitialize 5B6A  
                 __offset_from_file_number@file_number 0062  
                                          _system_init 0478  
        __motor_decide_direction@distance_to_limit_ccw 0086  
                              __end_of_fat_resize_file 1722  
                                         __end_of_atoi 26A0  
                                         __end_of_atol 191C  
                                         __end_of_main 3996  
                                         __end_of_itoa 534C  
               __end_of__ic2_display_set_ddram_address 5AE0  
              __size_of__ic2_display_set_ddram_address 0024  
                       __ic2_display_set_ddram_address 5ABC  
                                         __end_of_ltoa 4E2C  
                      __end_of_i2c_display_write_fixed 4DD8  
                                         __end_of_utoa 336A  
                        fat_read_from_file_fast@length 00A5  
                        fat_read_from_file_fast@offset 00BF  
                             __parse_command_short@cmd 009E  
                   fat_read_from_file_fast@read_length 00C3  
                                     __end_of_i2c_init 5BE6  
                           __display_signed_itoa@value 008F  
                        fat_read_from_file_fast@sector 00BB  
                             __end_of__i2c_acknowledge 5D70  
                          configFile_write@file_number 00E4  
                           __size_of_motor_divide_jump 00B8  
                         __motor_run@distance_in_steps 0060  
                       ??__encoder_next_setup_stepsize 0062  
                                 ??_USBCheckMSDRequest 000C  
                    __fill_buffer_get_status@outBuffer 006B  
                                 _adc_read_temperature E9D0  
                                       __CFG_OSC$HSPLL 000000  
               MSDComputeDeviceInAndResidue@DiExpected 0060  
                              _USBCheckMSDRequest$2534 000C  
                              _USBCheckMSDRequest$2535 000E  
                            __size_of_USBCtrlEPService 009A  
                 __end_of_motor_divide_jump_to_nearest F8DC  
                __size_of_motor_divide_jump_to_nearest 015C  
                         _motor_divide_jump_to_nearest F780  
                                         __get_fbr@idx 0060  
                                    ?i2__i2c_wait_idle 0001  
                                               ??_atoi 0068  
                                               ??_atol 0070  
                                 api_prepare@outBuffer 0072  
                                               ??_main 00FD  
                                     __end_of__i2c_get 5D66  
                                               ??_itoa 0076  
                                               ??_ltoa 0082  
                                   USBStallEndpoint@ep 0065  
                                               ??_utoa 006D  
                                        __activetblptr 000003  
                                      ?_USBDeviceTasks 0001  
        __motor_decide_direction@distance_to_target_cw 008A  
                             _fat_get_file_information 4112  
                                   __write_root@offset 008C  
                                         __get_mbr@idx 0060  
           __end_of_ExternalFlash_WriteProtectStateGet 5DBE  
          __size_of_ExternalFlash_WriteProtectStateGet 0004  
                 ??_ExternalFlash_WriteProtectStateGet 0062  
                  ?_ExternalFlash_WriteProtectStateGet 0060  
                   _ExternalFlash_WriteProtectStateGet 5DBA  
                                  __find_nth_cluster@n 0099  
                                          ?_USBSuspend 0001  
                                   __write_root@sector 008A  
                                   ??i2__i2c_wait_idle 0001  
                                 __size_of_api_prepare 00DE  
                                _motor_final_stepcount 0121  
                             __steps_from_degrees@temp 0095  
                                 ?__steps_from_degrees 0091  
                        __get_available_cluster@offset 0091  
                                   _motor_items_in_cue 5D46  
                          __motor_move_steps@overshoot 0083  
                        __get_available_cluster@sector 0093  
                              motor_move_endless@speed 008C  
                        __flash_write_to_buffer@buffer 0079  
                              __end_of_USBDeviceAttach 575E  
                               __flash_write_to_buffer 4ED4  
               __end_of__ic2_display_set_cgram_address 5958  
              __size_of__ic2_display_set_cgram_address 002A  
                       __ic2_display_set_cgram_address 592E  
                                     ___llmod@dividend 0060  
                                               _ADRESH 000FC4  
                                               _ADRESL 000FC3  
                     __end_of__fat_offset_from_cluster 5C36  
                                               _CCPR1L 000FBB  
                                     _ccw_limit_string A2B2  
                                               _EECON2 000FA7  
                                               _DMABCH 000F66  
                                               _DMABCL 000F67  
                                      ?_ResetSenseData 0001  
                          ??__get_available_root_entry 0095  
                                               ?_ultoa 006D  
                                           __i2c_start 5D96  
                               SYSTEM_Initialize@state 0064  
                                           __i2c_write 4FC6  
                          motor_move_endless@direction 008E  
                                     __end_of_adc_init 4BD0  
                                               i2l1211 3F74  
                                               i2l1212 3F44  
                            fat_read_from_file@cluster 00D9  
                                               i2l1143 5DA0  
                                  ?_motor_items_in_cue 0001  
                                               i2l1128 5DA8  
                                               i2l1160 52B6  
                                               i2l1161 529A  
                                               i2l1066 5574  
                                               i2l2571 B7D0  
                                               i2l2580 BB42  
                                               i2l2573 B808  
                                               i2l2583 B988  
                                               i2l2751 1B5E  
                                               i2l2592 BCDE  
                                               i2l2584 B9DC  
                                               i2l2576 B80A  
                 __flash_write_page_from_buffer@buffer 0075  
                                               i2l2585 BB00  
                                               i2l2577 B864  
                                               i2l2761 1BCE  
                                               i2l2753 1B74  
                                               i2l2745 1B82  
                                               i2l3810 591C  
                                               i2l2578 B894  
                                               i2l2754 1B7C  
                                               i2l3811 590C  
                                               i2l2755 1BF2  
                                               i2l2763 1BE4  
                                               i2l3804 494C  
                                               i2l2588 BC22  
                                               i2l2764 1BEC  
                                               i2l2748 1B3C  
                                               i2l3805 4914  
                                               i2l2758 1BAC  
                      ??_APP_DeviceCustomHIDInitialize 000D  
                             ?__fill_buffer_get_status 006B  
                                     __end_of__get_fbr DCEA  
                                     __end_of__get_mbr 29F0  
                                               _OSCCON 000FD3  
                          __flash_partial_read@address 0083  
                                       __CFG_WDTPS$512 000000  
                                               _RPOR21 000ED5  
                                               _RPOR23 000ED7  
                                       __CFG_WPCFG$OFF 000000  
                                __display_itoa@missing 00B5  
                               __end_of_MSDReadHandler E9D0  
                                    __spi_init@details 0060  
                              i2c_eeprom_write@address 000B  
                                     __end_of___xxtofl 01F8  
                             i2USBTransferOnePacket@ep 0009  
                                     ??__i2c_wait_idle 0060  
                                    ??i2_USBDeviceInit 0009  
                               ?_display_get_character 0060  
                                     ?_display_prepare 0001  
                      __size_ofi2_USBTransferOnePacket 0102  
                         ?__divide_jump_size_decrement 0001  
                              ?_motor_speed_from_index 009D  
                          __flash_partial_read@command 007F  
                                       __CFG_WPDIS$OFF 000000  
                             __motor_distance_to_limit FE26  
                                     _configFile_write C536  
                                     __read_fat@offset 0093  
                                     __end_of_fat_init 5CE8  
                                     __read_fat@sector 0091  
                                    _shortPacketStatus 0163  
                     __end_of_initial_speed_arc_string A249  
                                       __CFG_XINST$OFF 000000  
                                     _i2c_eeprom_write 3F18  
                                     ?_fat_modify_file 00A1  
                             __size_of_configFile_read 01A4  
                                  _motor_current_speed 00FE  
                                      USBDeviceTasks@i 001F  
                                          i2memcpy@tmp 000B  
                                         _CCPTMRS0bits 000F52  
        __parse_jump_steps_with_overshoot@return_value 009B  
                                    _motor_process_cue 3602  
                          USBStdFeatureReqHandler@pUEP 0019  
                             USBTransferOnePacket@data 0061  
                           USBCtrlTrfInHandler@lastDTS 0002  
                                 __size_of_encoder_run 00F4  
                         __end_of__flash_set_page_size 4442  
                                               ___flge 0A76  
                                      ??_USBDeviceInit 0068  
                   __flash_copy_page_to_buffer@command 0079  
                             flash_partial_read@length 008B  
                                               ___lmul 4C28  
                              __end_of_cw_limit_string A2C5  
                                               _gblCBW 0200  
                                            ??___aldiv 0068  
                             ?_motor_clear_command_cue 0001  
                                    _fat_get_file_size 418C  
                                            ??___almod 0068  
                                   __size_of__i2c_read 0094  
                                            ??___fladd 0084  
                                               ___wmul 59FC  
                                   __size_of__i2c_send 000A  
                                            ??___fldiv 0080  
                                            ??___flneg 007C  
                                       __CFG_STVREN$ON 000000  
                       __read_value_from_offset@buffer 0062  
                                            ??___flmul 0080  
                                   __size_of__i2c_stop 0008  
                                            ??___fltol 0064  
                        ??_motor_decrease_manual_speed 0064  
                                            ??___lldiv 0068  
                                            ??___llmod 0068  
          i2SYSTEM_Initialize@pll_startup_counter_3143 0003  
            SYSTEM_Initialize@pll_startup_counter_3143 0062  
                                            ??___lwdiv 0064  
                                   ?_motor_process_cue 0001  
                         __size_of_flash_partial_write 006C  
                                           _SoftDetach 0150  
                                            ??___lwmod 0064  
                                               _config 0196  
                                               _buffer 0A00  
                                    _USBEnableEndpoint 54CE  
                       __read_value_from_offset@offset 0060  
                      __size_of_USBStdGetStatusHandler 00A0  
                                ?_adc_read_temperature 0001  
                                 ??_motor_items_in_cue 0060  
                            _configFile_used_extention 02DE  
                                               _memcpy 47E4  
                                   ?_fat_get_file_size 0095  
                                               _memset 57BE  
                     __end_of__sector_from_file_number 578E  
                              __end_of_i2c_eeprom_read 4D2E  
                                               _params 021F  
                                               clear_0 39DE  
                                               clear_1 39F0  
                                               clear_2 39FC  
                                               clear_3 3A08  
                                               clear_4 3A1A  
                            _ExternalFlash_SectorWrite 565C  
                                    api_parse@inBuffer 00A7  
                                      __CFG_CLKOEC$OFF 000000  
                                     __end_of_inq_resp A184  
                                     __motor_run@speed 0064  
                                 __end_of_encoder_init 5ABC  
                                               _spi_tx 4AC6  
                                   ?_USBEnableEndpoint 0009  
                           ??_i2c_eeprom_save_position 0026  
                                   _flash_partial_read 5A4C  
               __make_cluster_chain@number_of_clusters 0097  
                                               _tx_buf 02C6  
                                i2c_display_init@F7092 02B4  
                                               _strlen 5454  
                              _motor_current_stepcount 0058  
                           __parse_command_long@length 00A6  
             i2c_display_program_custom_character@cntr 0080  
                              motor_set_zero@direction 006A  
                                     __end_of_tmr0_isr 557E  
                        __size_of_USBTransferOnePacket 0106  
                                  __size_of_USBMSDInit 010E  
                 __size_of_i2c_eeprom_recover_position 001C  
                          i2c_display_write_fixed@data 0065  
                        ?_motor_divide_jump_to_nearest 0001  
                               __size_of__flash_wakeup 0058  
                                               itoa@cp 0076  
                                  ??_motor_process_cue 006C  
                                ??__steps_from_degrees 0095  
                        __size_of__display_signed_itoa 0044  
                                            ??_isdigit 0060  
                           __end_of_motor_steps_lookup 982F  
                                __end_of_fat_find_file 1EC4  
                 __size_of__motor_get_speed_in_degrees 013A  
                              ?_motor_set_manual_speed 0062  
                                               ltoa@cp 0082  
                       __parse_command_long@out_buffer 00A2  
                                  ??_fat_get_file_size 0099  
                        __size_of__parse_command_short 015C  
                     __size_of__read_value_from_offset 0048  
                     __size_of_fat_read_from_file_fast 0226  
                         ?__divide_jump_size_increment 0001  
                                         __mediumconst 9092  
                           __size_of__find_nth_cluster 00A6  
                                               tblptrh 000FF7  
                                               tblptrl 000FF6  
                                               tblptru 000FF8  
                                     __end_of_spi_init 5414  
                     __size_of_APP_DeviceMSDInitialize 0010  
                                      _motor_direction 0148  
                      ??__flash_compare_page_to_buffer 0076  
                                  ??_USBEnableEndpoint 000A  
                                  ?_flash_partial_read 0087  
                                     _i2c_display_init 4F76  
                                               ultoa@c 0079  
                                        spi_tx_rx@data 0064  
                    __size_of__fat_sector_from_cluster 001A  
                                               ultoa@v 0075  
                           __end_of__root_is_available 4588  
                            ?__fat_sector_from_cluster 0060  
                                        spi_tx_tx@data 0064  
                                            ??_stricmp 0065  
                                motor_goto_steps@speed 0096  
                                          _CtrlTrfData 000D38  
                                    __system_pin_setup 4588  
                                            ??_strncmp 0066  
                                            ??_toupper 0060  
                                   __size_of__add_item 00FA  
                                 __size_of__write_root 004C  
                                     ?__backlight_init 0001  
                    i2ExternalFlash_MediaDetect@config 0001  
                      ExternalFlash_MediaDetect@config 0060  
                                 _controlTransferState 0162  
                           ??_APP_DeviceCustomHIDTasks 00B2  
                                           ___flge@ff1 0078  
                                           ___flge@ff2 007C  
                                 __CFG_LS48MHZ$SYS48X8 000000  
                                         ___xxtofl@arg 0074  
                                         ___xxtofl@exp 0073  
                                    _SYSTEM_Initialize 4A12  
                                         ___xxtofl@val 006A  
                                fat_modify_file@length 00A5  
                                   ?__system_pin_setup 0001  
                                fat_modify_file@offset 00BB  
                             __end_of__i2c_eeprom_busy 59D4  
                                           __accesstop 0060  
                              __end_of__initialization 3A20  
                       __end_of_motor_speed_from_index 5CB2  
                                fat_modify_file@sector 00B5  
                    MSDCheckForErrorCases@MSDErrorCase 006F  
                                           ___flneg@f1 0078  
                                      ?_MSDReadHandler 0001  
                                         ?i2__i2c_send 0001  
                         fat_resize_file@first_cluster 00B8  
                                         ?i2__i2c_stop 0001  
                                 __end_of_display_init 5544  
                                   ?_SYSTEM_Initialize 0001  
                               __size_of__display_itoa 0224  
                                        ___rparam_used 000001  
        motor_isr@steps_until_standstill_if_accelerate 0038  
                             __size_of_USBStallHandler 0044  
                                           ___fltol@f1 0060  
                         __end_of__i2c_not_acknowledge 5D5C  
                      ExternalFlash_SectorWrite@config 0084  
                      ExternalFlash_SectorWrite@buffer 008A  
                            __end_of_motor_process_cue 369C  
                          __end_of__parse_command_long 3D8A  
                                   __size_of__get_date 000C  
                            __end_of_fat_get_file_size 4206  
                                   __size_of__get_item 018A  
                                  __size_of_USBSuspend 0030  
                                   __size_of__get_time 000C  
                                  ??__system_pin_setup 0060  
                                  _motor_maximum_speed 0133  
                                 ??_flash_partial_read 008F  
                  __end_of_motor_increase_manual_speed 5C50  
                          _motor_increase_manual_speed 5C36  
                                       __pcstackCOMRAM 0001  
                           __size_of__flash_get_status 0034  
                            __end_of_USBEnableEndpoint 550A  
                  __size_of_ExternalFlash_CapacityRead 0014  
                                        __end_of_sd000 A2E9  
                                        __end_of_sd001 A132  
                                        __end_of_sd002 A160  
                                        __end_of_sd003 A1BB  
                                            ?_MSDTasks 0001  
                                         __pidataBANK2 5106  
                                         __pidataBANK4 4F26  
                             __parse_item@value_string 009B  
                                     ?_fat_resize_file 00AC  
                                  ??_SYSTEM_Initialize 0060  
                            __get_available_root_entry 5958  
                 ExternalFlash_SectorWrite@sector_addr 0086  
                      __end_of_bit_pattern_verticalbar A2DD  
                     __size_of_USBCtrlEPAllowDataStage 0098  
                                   __size_of__read_fat 0058  
                                      _active_protocol 01C0  
                                  i2USBStallEndpoint@p 0007  
                        __size_of_USBConfigureEndpoint 0094  
                   __size_of_ExternalFlash_MediaDetect 000A  
                          __end_of_USBCtrlTrfInHandler 2D12  
                                        __end_of_ultoa 1820  
                                  display_prepare@cntr 00D3  
                                  display_prepare@temp 00C8  
                                         _gblSenseData 0100  
                          motor_change_speed@new_speed 0060  
                                      _MSDErrorHandler 0CB2  
                       ?_ExternalFlash_MediaInitialize 0060  
                 __sector_from_file_number@file_number 0062  
                               i2_USBTransferOnePacket 1522  
                       __end_of_motor_set_manual_speed 5106  
                                   __size_of_api_parse 012A  
                      ??__motor_steps_from_degrees_int 0095  
                                      _motor_move_type 0149  
                                   _motor_move_endless 587A  
                                   _flash_sector_write 5016  
                                           _dc_divide1 9F7E  
                                           _dc_divide2 9F2E  
                                   _fat_read_from_file 1EC4  
                                   __size_of__spi_init 0038  
                                            ?i2_memcpy 0001  
                                            ?i2_memset 0001  
                              flash_sector_write@match 0083  
                __end_of_MSDProcessCommandMediaPresent C176  
               __size_of_MSDProcessCommandMediaPresent 03EC  
                        _MSDProcessCommandMediaPresent BD8A  
                               flash_partial_read@data 008D  
                            __end_of__system_pin_setup 45F2  
                               flash_partial_read@page 0087  
                 __size_of_motor_decrease_manual_speed 0022  
                             ??_USBCtrlTrfSetupHandler 001E  
                              _USBTicksSinceSuspendEnd 0157  
                       motor_move_degrees_int@distance 0099  
                    __flash_copy_page_to_buffer@buffer 0075  
                                     ?_USBDeviceAttach 0001  
                                  ?_motor_move_endless 008C  
                            __end_of_SYSTEM_Initialize 4A6C  
                                    __end_of__i2c_read 3ABE  
                                    __end_of__i2c_send 5D7A  
                               _USBStdGetStatusHandler 3562  
                                  ?_flash_sector_write 007F  
                                  USBStallEndpoint@dir 0060  
                                    __end_of__i2c_stop 5D96  
                                          ?__i2c_start 0001  
                                              ??_ultoa 0075  
                      ?__encoder_next_divide_step_size 0001  
                     ??__encoder_next_divide_step_size 0060  
                                  ?_fat_read_from_file 00C9  
                                          ?__i2c_write 0065  
                        __read_value_from_offset@value 0067  
                                           __pbssBANK0 00FE  
                                           __pbssBANK1 0100  
                                           __pbssBANK2 0200  
                                           __pbssBANK3 0300  
                                           _dc_startup 0400  
       __motor_decide_direction@distance_to_target_ccw 008E  
                     __size_of_i2c_display_write_fixed 0054  
                                     _USBStallEndpoint 120C  
                                           _gblNumBLKS 0234  
                                            ?_i2c_init 0001  
                            _overshoot_in_steps_string A212  
                                     _mediaInformation 0292  
                       __size_of_fat_get_format_status 00AE  
                       fat_get_file_information@offset 0094  
                       __get_available_cluster@cluster 008F  
                        __end_of_fat_get_format_status 3212  
                                        __flash_wakeup 4BD0  
                             __fill_buffer_get_display 2F46  
                              ?__get_available_cluster 008B  
                                            ?__i2c_get 0001  
                          __size_of_USBWakeFromSuspend 0038  
                                          _pBDTEntryIn 0052  
                          __size_of_i2c_display_cursor 0022  
                     __end_of_USBCtrlEPServiceComplete 1B10  
                __end_of_APP_DeviceCustomHIDInitialize 572C  
               __size_of_APP_DeviceCustomHIDInitialize 0034  
                        _APP_DeviceCustomHIDInitialize 56F8  
                          MSDTransferTerminated@handle 000C  
                               __motor_move_steps@type 0084  
                   __size_of__data_sector_from_cluster 0010  
                            __size_of_motor_goto_steps 009A  
                     __size_of__motor_decide_direction 0196  
                   ExternalFlash_SectorSizeRead@config 0060  
                                 USBCtrlTrfRxService@i 0001  
                                              ?___flge 0078  
                                              ?___lmul 0060  
                                           ??_MSDTasks 00AC  
                               __display_itoa@decimals 00A1  
                         __parse_jump_steps@out_buffer 0096  
                                 ??_motor_move_endless 008E  
                               ??_adc_read_temperature 0091  
                                              ?___wmul 0060  
                         __end_of_encoder_statemachine B7BE  
                                 ??_flash_sector_write 0083  
                    __size_of__fat_offset_from_cluster 001A  
                       __flash_write_to_buffer@command 007A  
                                 ??_fat_read_from_file 00D3  
                         __size_of__flash_partial_read 007A  
                            ?__fat_offset_from_cluster 0060  
                                    __end_of__add_item 1A16  
                                            MSDTasks@i 00B1  
                             ??_motor_move_degrees_int 009E  
                                              ?_memcpy 0060  
                                              ?_memset 0060  
                                           __motor_run EBAE  
                                       ___lmul@product 0068  
                                           _device_dsc A25B  
                  fat_get_file_information@file_number 0096  
                                     ??_display_update 0070  
                                     ?_i2c_eeprom_read 0071  
                                     _USBCtrlEPService 3736  
                                    ??_configFile_read 01C4  
                                           _ep_data_in 0130  
                                              ?_spi_tx 0060  
                                   __display_clear@col 0063  
                                            ?_adc_init 0001  
            __motor_calculate_distance@target_position 0060  
                              ?__motor_move_back_forth 0001  
                                   __display_clear@row 0062  
                                              ?_strlen 0060  
                                            ?__get_fbr 0060  
                __data_sector_from_cluster@fat_cluster 0060  
                                            ?__get_mbr 0060  
                          __end_of_USBCtrlTrfRxService 120C  
            __ic2_display_set_ddram_address@data_array 006B  
                                        __display_itoa E3AE  
                              ?__write_value_to_offset 0060  
                                   _USBCheckStdRequest 26A0  
                                   __size_of_motor_isr 05CC  
                                    _configDescriptor1 A0BE  
                 __size_of__divide_jump_size_decrement 006E  
                                              i2l20016 3DD6  
                                              i2l20018 3E0A  
                                              i2l12552 27AC  
                                              i2l12920 4EAC  
                                              i2l13538 252A  
                                              i2l12916 4E8E  
                                              i2l13468 590C  
                                              i2l12968 2878  
                                              i2l18018 0042  
                                              i2l19030 B894  
                                              i2l19024 B864  
                              ??_MSDCheckForErrorCases 006E  
                                              i2l17812 0236  
                                              i2l16928 4914  
                                              i2l17840 0296  
                                    i2__i2c_write@data 0006  
                                            ?___xxtofl 006A  
                                    i2__i2c_write@cntr 000A  
                              ?_configFile_readDefault 0001  
                          __end_ofi2_SYSTEM_Initialize 4ED4  
                                           ??i2_memcpy 0007  
                          ??__motor_calculate_distance 0064  
                                           ??i2_memset 0007  
                                           _flash_init 5D08  
                   __fill_buffer_get_display@outBuffer 0064  
                             ?__parse_set_manual_speed 0064  
                          __end_of_USBCtrlTrfTxService 2920  
                                    __end_of__get_date 5D2E  
                                  _USBStdSetCfgHandler 24EA  
                                    __end_of__get_item F780  
                                   i2__i2c_eeprom_busy 5A72  
                                    __end_of__get_time 5D22  
                     __end_of_maximum_speed_arc_string A237  
                                   __size_of_spi_tx_rx 0098  
                                   __size_of_spi_tx_tx 0090  
                                            ?_fat_init 0001  
                __parse_jump_steps_with_overshoot@data 0094  
                                              _RPINR21 000EFC  
                                              _RPINR22 000EFD  
                                              _SSP1ADD 000FC8  
                        i2c_display_init@init_sequence 006B  
                                    __end_of_dc_manual 9E3E  
                         __end_of__display_padded_itoa 2170  
                                              _SSP1BUF 000FC9  
                                              _RXADDRH 000F68  
                                              _RXADDRL 000F69  
                           __end_ofi2_USBStallEndpoint 1522  
                       ??_motor_divide_jump_to_nearest 009E  
                                              _TXADDRH 000F6A  
                                              _TXADDRL 000F6B  
                                  ?_USBCheckStdRequest 0001  
                         __size_of_USBStdGetDscHandler 012C  
                                   _motor_speed_lookup 9093  
                                 __flash_set_page_size 43D4  
                                    __end_of_dc_setup1 A06E  
                                    __end_of_dc_setup2 A01E  
                                              _UIEbits 000F36  
                         __parse_set_manual_speed@data 0064  
                            __size_of_motor_move_steps 002E  
                                  i2c_eeprom_read@addr 0077  
                           __end_of_APP_DeviceMSDTasks 5CD8  
                                              _UIRbits 000F62  
                                    __end_of__read_fat 4B78  
                                  i2c_eeprom_read@data 0073  
          MSDCheckForErrorCases@HostMoreDataThanDevice 006E  
                    __size_of__sector_from_file_number 0030  
                __end_of__flash_compare_page_to_buffer 4112  
               __size_of__flash_compare_page_to_buffer 007C  
                        __flash_compare_page_to_buffer 4096  
                                  ?i2__i2c_eeprom_busy 0001  
                                           ??_i2c_init 0060  
                                     __CFG_CFGPLLEN$ON 000000  
                             __i2c_write@slave_address 0068  
                            ?__sector_from_file_number 0060  
                             ?__motor_schedule_command 0060  
                                         ??_USBMSDInit 000C  
                        fat_read_from_file@return_code 00D8  
                                    __read_fat@cluster 008F  
                       __end_of__get_available_cluster 2ABE  
                                       ?__flash_wakeup 0001  
               fat_read_from_file_fast@working_cluster 00BD  
             __encoder_next_arc_step_size@old_stepsize 0060  
                               fat_find_file@extension 008D  
                                    __end_of_api_parse 0A76  
                                    ?i2_ResetSenseData 0001  
                                           ??__i2c_get 0060  
                                    _MSDProcessCommand 06EC  
                           __display_padded_itoa@value 0078  
                           __size_of_motor_process_cue 009A  
                             fat_find_file@file_number 0091  
                            motor_goto_steps@direction 009D  
                                        __i2c_send@dat 0060  
                  __motor_move_steps@distance_in_steps 007D  
                            __flash_get_status@command 006E  
                                            ?_tmr0_isr 0001  
                                              __Hparam 0000  
                      ??_USBIncrement1msInternalTimers 0001  
                                 ?_USBStdSetCfgHandler 0001  
                           __size_of_fat_get_file_size 007A  
            __end_of__get_available_offset_from_buffer 4902  
           __size_of__get_available_offset_from_buffer 005E  
                  ??__get_available_offset_from_buffer 0064  
                   ?__get_available_offset_from_buffer 0060  
                    __get_available_offset_from_buffer 48A4  
                                    __end_of__spi_init 55B6  
                          __size_of_USBCheckHIDRequest 00D6  
                                              __Lparam 0000  
                 __size_of__divide_jump_size_increment 0040  
                                   ??i2_ResetSenseData 0001  
                                   __display_itoa@text 00A2  
                             __size_of_fat_create_file 013C  
                                    __end_of_hid_rpt01 A1A1  
                                   ?_MSDProcessCommand 0001  
                              __end_of_MSDErrorHandler 0DCC  
                           _MSDTransferTerminated$2623 000E  
                           __size_of_USBEnableEndpoint 003C  
                                         ?_system_init 0001  
                         __size_of_fat_restore_mbr_fbr 0092  
                             _inverse_direction_string A249  
                                __size_of_encoder_init 0024  
                           ??_fat_get_file_information 0091  
                                 ??_USBCheckStdRequest 001E  
                                              ___aldiv 2ABE  
                                      __size_of___flge 0122  
                                              ___almod 3212  
                                            ?_spi_init 0001  
                                              ___fladd CC42  
                        __size_of_USBCtrlTrfOutHandler 0060  
                                   __display_itoa_long 0EE2  
                i2ExternalFlash_MediaInitialize@config 0001  
                  ExternalFlash_MediaInitialize@config 0060  
                                              ___fldiv D540  
                                     _ToSendDataBuffer 0340  
                                              ___flneg 578E  
                                      __size_of___lmul 0058  
                    __end_of__data_sector_from_cluster 5CF8  
                                              ___flmul C8F0  
                                              ___fltol 232E  
                                              ___lldiv 3E10  
                             __end_of_ccw_limit_string A2BC  
                                     ??_USBDeviceTasks 001F  
                                      __size_of___wmul 0028  
                                              ___llmod 45F2  
                    __motor_decide_direction@overshoot 0081  
                                              ___lwdiv 4E2C  
                                    ??_USBStallHandler 0001  
                                              ___lwmod 534C  
                                              _dc_arc1 9EDE  
                                              _dc_arc2 9E8E  
       i2c_display_program_custom_character@data_array 0074  
                                              _dc_main A06E  
                       __end_of__motor_move_back_forth 3414  
                                    ?__i2c_acknowledge 0001  
               __ic2_display_set_cgram_address@address 006D  
                           __end_of_motor_change_speed 5D8E  
                                 ??i2__i2c_eeprom_busy 0006  
                                              _dc_zero 9E3E  
                                  __size_of__i2c_start 0008  
                              __size_of_motor_arc_move 00E4  
                                              __pcinit 3996  
                                      __size_of_memcpy 0060  
                                  __size_of__i2c_write 0050  
                                      __size_of_memset 0030  
                             __size_of_MSDWriteHandler 02EC  
                            __end_of_configDescriptor1 A0FE  
                       __end_of__write_value_to_offset 565C  
                                  ??_MSDProcessCommand 00A7  
                  __motor_move_steps@distance_to_limit 0087  
                                              __ramtop 0F00  
                                    __motor_move_steps ED84  
                         ExternalFlash_SectorRead@page 0093  
                               __display_itoa_u16@text 007A  
                                           ??_adc_init 0060  
                                              __ptext0 3900  
                                              __ptext1 0478  
                                              __ptext2 5BAC  
                                              __ptext3 2250  
                                              __ptext4 5BCA  
                                              __ptext5 5BE6  
                                              __ptext6 4CD8  
                                              __ptext7 3A2A  
                                              __ptext8 5D52  
                                              __ptext9 5D5C  
                                       ?__display_itoa 009F  
                                              _inPipes 004C  
                    __size_of_ExternalFlash_SectorRead 0034  
                                      __size_of_spi_tx 005A  
                          _USBDeferOUTDataStagePackets 0158  
                                   ??__i2c_acknowledge 0060  
                                            _T0CONbits 000FD5  
                                           ??__get_fbr 0062  
                       __end_of_configFile_readDefault 42F4  
                                  ?__display_itoa_long 00B7  
                                           ??__get_mbr 0062  
                            ?_ExternalFlash_SectorRead 008B  
              motor_divide_jump@target_divide_position 00A3  
                                 __motor_run@direction 006B  
                                      __size_of_strlen 003E  
                          __end_of__system_timer0_init 5902  
                              __read_value_from_offset 5234  
                                   ?__motor_move_steps 007D  
                              _fat_read_from_file_fast E188  
                                         ??_USBSuspend 0018  
                                            _T2CONbits 000FCA  
                                   __end_of_USBMSDInit 10FE  
                                              _isdigit 5B26  
                                     ??_ResetSenseData 0060  
                              ?__flash_write_to_buffer 0073  
                             __end_of_configFile_write C8F0  
                                           ??___xxtofl 006E  
                              _APP_DeviceMSDInitialize 5CF8  
                                              _msd_cbw 000D40  
                                     ___aldiv@dividend 0060  
                                              _msd_csw 000D80  
                                 __i2c_not_acknowledge 5D52  
                             __offset_from_file_number 5982  
                             __end_of_i2c_eeprom_write 3F9A  
                          __display_itoa_long@decimals 00BB  
                                      i2_USBDeviceInit 01F8  
                                     i2USBDeviceInit@i 0009  
                           __size_of__system_pin_setup 006A  
                      ?__ic2_display_set_ddram_address 0001  
                     ??__ic2_display_set_ddram_address 006A  
                                           ??_fat_init 008F  
                    __parse_set_manual_speed@new_speed 006B  
                   __size_of_ExternalFlash_SectorWrite 0034  
                __end_of__motor_steps_from_degrees_int 0CB2  
               __size_of__motor_steps_from_degrees_int 011A  
                        __motor_steps_from_degrees_int 0B98  
                                ?__flash_set_page_size 0001  
                                   __end_of_USB_CD_Ptr 9DEE  
                                           _msd_buffer 000600  
                           ??__motor_distance_to_limit 0070  
                           __size_of_SYSTEM_Initialize 005A  
                      __size_of_USBCtrlTrfSetupHandler 0090  
                                  ??__motor_move_steps 0085  
                                              _stricmp 49B8  
                                __size_of_display_init 003A  
                              __size_of__flash_is_busy 0024  
                         fat_get_file_size@file_number 00A1  
                                              _strncmp 3F9A  
                                              _toupper 5C84  
                                  _flash_partial_write 44B0  
                                 end_of_initialization 3A20  
                  __end_of_maximum_speed_manual_string A1E8  
                          _maximum_speed_manual_string A1D3  
                              ??_display_get_character 0061  
                                _MSDTransferTerminated 4D2E  
                __flash_compare_page_to_buffer@command 007B  
                       ?_MSDProcessCommandMediaPresent 0001  
                                   __end_of_USB_SD_Ptr 9DEC  
                           __end_of_bit_pattern_degree A2D5  
                                  i2__i2c_write@length 0008  
                              __size_of_motor_set_zero 003C  
                            __size_ofi2__i2c_wait_idle 0058  
                                  i2c_eeprom_write@dat 0013  
                                              memcpy@d 0066  
                                              memcpy@n 0064  
                                              memcpy@s 0068  
                                        ??__parse_item 009D  
              __motor_get_speed_in_degrees@speed_index 0091  
                                  _pBDTEntryEP0OutNext 005C  
                            __end_of_MSDProcessCommand 0820  
                                              itoa@buf 0070  
                                              memset@c 0062  
                                              itoa@val 0072  
                                              memset@n 0064  
                                              memset@p 0066  
                                         _encoder_init 5A98  
                                      _USB1msTickCount 0129  
                                 ??__display_itoa_long 00BE  
                                            i2u1030_44 10E0  
                                            i2u1030_45 10DA  
                             __flash_partial_read@data 0079  
                                            i2u1105_40 28CA  
                                            i2u1201_40 0898  
                                            i2u1105_47 28C0  
                                            i2u1201_47 088E  
                                            i2u1202_40 08C8  
                                            i2u1202_47 08BE  
                                            i2u1107_40 290A  
                                            i2u1026_48 1086  
                                            i2u1026_49 109A  
                                            i2u1107_47 2900  
                                            i2u1204_40 091E  
                                            i2u1204_47 0914  
                                            i2u1028_48 10AC  
                                            i2u1028_49 10C2  
                             ?_USBStdFeatureReqHandler 0001  
                                            i2u1055_40 2E2E  
                             __flash_partial_read@page 0073  
                                            i2u1226_40 D9E4  
                        i2c_eeprom_write@slave_address 0024  
                                            i2u1360_40 4CBA  
                                              ltoa@buf 007A  
                                            i2u1361_40 4CC4  
                                            i2u1360_48 4CBC  
                                            i2u1361_46 4CC6  
                                            i2u1506_45 3F24  
                                            i2u1507_40 3F7C  
                                            i2u1356_40 4C8A  
                                            i2u1197_40 255E  
                                            i2u1357_40 4C96  
                                            i2u1356_48 4C8C  
                                              ltoa@val 007C  
                                            i2u1614_40 4936  
                                            i2u1358_40 4CA2  
                                            i2u1357_48 4C98  
                                            i2u1614_47 492C  
                                            i2u1359_40 4CAE  
                                            i2u1358_48 4CA4  
                                            i2u1359_48 4CB0  
                                            i2u1722_40 025A  
                                    __end_of_motor_isr BD8A  
                                            i2u1725_40 02FA  
                                            i2u1901_41 B7F4  
                                            i2u1911_40 BB58  
                                            i2u1912_40 BB78  
                                            i2u1904_41 B8AE  
                                            i2u1754_40 00B0  
                                            i2u1906_40 B978  
                            __motor_calculate_distance 2170  
                                ??_USBStdSetCfgHandler 0018  
                      __parse_command_long@out_idx_ptr 00A4  
                                      ___lldiv@divisor 0064  
                                           ??_tmr0_isr 0001  
                                      ___lldiv@counter 006C  
                                 __size_ofi2__i2c_send 0008  
              motor_move_degrees_int@distance_in_steps 009E  
                                 __size_ofi2__i2c_stop 0008  
                         ?_i2c_eeprom_recover_position 0001  
                            motor_goto_steps@overshoot 0098  
                      ?__ic2_display_set_cgram_address 0001  
                     ??__ic2_display_set_cgram_address 006A  
                                   __end_of_USBSuspend 581E  
                          __end_of_use_cw_limit_string A2B2  
                                  _motor_period_lookup 9A16  
              __fill_buffer_get_mode_details@outBuffer 0060  
                              _USBCtrlEPAllowDataStage 3868  
                                    __end_of_spi_tx_rx 3868  
                                    __end_of_spi_tx_tx 3C74  
                             __end_of_i2c_display_init 4FC6  
                                     ___aldiv@quotient 006A  
                                              postdec1 000FE5  
                                              postdec2 000FDD  
         __make_cluster_chain@different_sector_cluster 009F  
                 __end_of_ExternalFlash_SectorSizeRead 5D3A  
                __size_of_ExternalFlash_SectorSizeRead 000C  
                         _ExternalFlash_SectorSizeRead 5D2E  
                                           ??_spi_init 0063  
                                              postinc0 000FEE  
                                              postinc1 000FE6  
                                              postinc2 000FDE  
                                 ?_flash_partial_write 007F  
                            __end_of__motor_move_steps EF54  
                     __size_of__fill_buffer_get_status 0214  
                                              utoa@buf 0067  
                                           _motor_init 5BAC  
              MSDProcessCommandMediaPresent@sectorSize 009E  
                                           _motor_mode 0147  
                             _USBCtrlEPServiceComplete 1A16  
                                              utoa@val 0069  
                                            _MSD_State 0156  
                                           _motor_stop 5066  
              __end_of__cluster_from_sector_and_offset 59FC  
             __size_of__cluster_from_sector_and_offset 0028  
                    ??__cluster_from_sector_and_offset 0064  
                     ?__cluster_from_sector_and_offset 0060  
                      __cluster_from_sector_and_offset 59D4  
                                          ?__motor_run 0060  
                                              strlen@s 0060  
                          __size_of_USBCheckMSDRequest 00BC  
                                        ??_api_prepare 0074  
                      __size_of_motor_move_degrees_int 004A  
                           _USBStatusStageEnabledFlag1 015B  
                           _USBStatusStageEnabledFlag2 015A  
                             flash_partial_write@match 0087  
                                       _bit_pattern_ae A2C5  
                                   USBEnableEndpoint@p 000A  
                         __size_of__make_cluster_chain 02D6  
                                            _PORTAbits 000F80  
                                            _PORTDbits 000F83  
                                            _PORTEbits 000F84  
                             flash_partial_write@start 0081  
                       __end_of__flash_write_to_buffer 4F26  
                                     __CFG_DSBOREN$OFF 000000  
                                   __get_item@item_ctr 006A  
                                         _display_init 550A  
motor_divide_jump_to_nearest@nearest_position_in_steps 009E  
                                          ___fladd@grs 008F  
                   __size_of__get_available_root_entry 002A  
                                 spi_tx_rx@data_length 0066  
                                ?__i2c_not_acknowledge 0001  
                     __make_cluster_chain@next_cluster 00AA  
                               fat_modify_file@cluster 00B9  
                                          ?_flash_init 0001  
                                     __CFG_CPUDIV$OSC1 000000  
                      adc_read_temperature@temperature 0095  
                                        ___xxtofl@sign 0072  
                                            _TRISAbits 000F92  
                                            _TRISBbits 000F93  
                                            _TRISCbits 000F94  
                                   api_parse@outBuffer 00AA  
                                            _TRISDbits 000F95  
                                            _TRISEbits 000F96  
                     __size_of_motor_clear_command_cue 000C  
                                   _ReceivedDataBuffer 0380  
                                   _BothEP0OutUOWNsSet 015E  
                                          ___fldiv@grs 008B  
                                          ___fldiv@rem 0084  
                                        __pbssBIGRAMll 0800  
                                     ??_MSDReadHandler 0095  
                            __flash_partial_read@start 0075  
                            USBConfigureEndpoint@EPNum 0006  
                              _i2c_display_write_fixed 4D84  
                           motor_arc_move@arc_in_steps 0095  
     __parse_jump_steps_with_overshoot@number_of_steps 009C  
                                    __CFG_SOSCSEL$HIGH 000000  
                           ?_USBCtrlEPAllowStatusStage 0001  
                                        ?i2__i2c_start 0001  
                                 _encoder_statemachine AF94  
                  USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                                        ?i2__i2c_write 0006  
                              __size_of__display_clear 004A  
                                            _USTATcopy 01C2  
                                      ??__flash_wakeup 0068  
        MSDProcessCommandMediaPresent@NumBytesInPacket 009D  
  __step_position_from_divide_position@divide_position 0091  
                 __end_of__encoder_next_setup_stepsize 4364  
                __size_of__encoder_next_setup_stepsize 0070  
                         __encoder_next_setup_stepsize 42F4  
                                          ___flmul@grs 0085  
                              __size_of__display_start 00B2  
                         __end_of_USBTransferOnePacket 141C  
                                   _motor_steps_lookup 9461  
                                          _CCP1CONbits 000FBA  
                                    ?__i2c_eeprom_busy 0001  
                                __i2c_eeprom_busy@busy 0065  
                  __end_ofi2_ExternalFlash_MediaDetect 5DC2  
                                i2c_eeprom_read@length 0075  
                          i2_ExternalFlash_MediaDetect 5DBE  
                    __parse_jump_steps@number_of_steps 009C  
                         __end_of__display_signed_itoa 5308  
                  __end_of__motor_get_speed_in_degrees 06EC  
                          __motor_get_speed_in_degrees 05B2  
                               i2c_display_cursor@line 006E  
                     __fat_sector_from_cluster@cluster 0060  
                                     __CFG_IOL1WAY$OFF 000000  
                                        ??_encoder_run 0001  
                         __end_of__parse_command_short FA38  
                                   ??__i2c_eeprom_busy 0065  
                              __motor_decide_direction F460  
                       ?__flash_compare_page_to_buffer 0073  
                        __fill_buffer_get_display@cntr 006C  
                                   __root_is_available 451C  
                        __fill_buffer_get_display@line 006D  
                                    __CFG_WPEND$PAGE_0 000000  
                                     _motor_goto_steps 369C  
                   __flash_compare_page_to_buffer@page 0073  
                                  __CFG_MSSP7B_EN$MSK7 000000  
                                  __end_of__parse_item C536  
                   __make_cluster_chain@minimum_sector 009D  
                                     ?_MSDErrorHandler 0001  
                fat_resize_file@new_number_of_clusters 00B6  
                   __find_nth_cluster@sector_in_buffer 009D  
                         fat_resize_file@new_file_size 00AC  
                                     __write_root@data 0088  
                               _USBCtrlTrfSetupHandler 3C74  
                        ??_i2c_eeprom_recover_position 0079  
                                ??_flash_partial_write 0087  
                         __write_value_to_offset@value 0064  
                                 __display_padded_itoa 208E  
                               __end_of_bit_pattern_ae A2CD  
                     ExternalFlash_CapacityRead@config 0060  
                              ?i2_USBTransferOnePacket 0001  
                             __size_of_display_prepare 0C64  
                                       __end_of___flge 0B98  
                        ??__motor_get_speed_in_degrees 0093  
                                __end_of_USBDeviceInit FE26  
                __end_of_USBIncrement1msInternalTimers 5BAC  
               __size_of_USBIncrement1msInternalTimers 0020  
                        _USBIncrement1msInternalTimers 5B8C  
                          __end_of__steps_from_degrees F10E  
                                       __end_of___lmul 4C80  
                      __sector_from_file_number@sector 0063  
                                      ??__display_itoa 00A4  
                        ?_ExternalFlash_SectorSizeRead 0060  
                                       __end_of___wmul 5A24  
                          __size_of_motor_items_in_cue 000C  
                            ??__read_value_from_offset 0064  
                                  ?__root_is_available 0001  
                                    __size_of_MSDTasks 026A  
                            ??_fat_read_from_file_fast 00AF  
                             __end_of_USBStallEndpoint 1316  
                                            i2memcpy@d 0007  
                                            i2memcpy@n 0005  
                                    ??_fat_create_file 00B4  
                       adc_read_temperature@adc_result 0093  
                              __end_ofi2_USBDeviceInit 033C  
                                            i2memcpy@s 0009  
                             __size_of_fat_modify_file 0234  
                            ??_APP_DeviceMSDInitialize 000F  
                                            i2memset@c 0003  
                                            i2memset@n 0005  
                                            i2memset@p 0007  
                                       __end_of_memcpy 4844  
                                      _MSDRetryAttempt 0152  
                                 i2USBStallEndpoint@ep 0006  
                                       __end_of_memset 57EE  
                                     __CFG_DSWDTEN$OFF 000000  
                                    _USBBusIsSuspended 0160  
                            flash_partial_write@length 0083  
                                       __end_of_spi_tx 4B20  
                __get_available_root_entry@file_number 0095  
                                  fat_modify_file@data 00A7  
                                       __end_of_strlen 5492  
                         __display_padded_itoa@padding 008E  
                            __flash_set_page_size@size 0077  
                                  start_initialization 3996  
                                  fat_modify_file@root 00C3  
                              ?_USBStdGetStatusHandler 0001  
                                        ??__write_root 008A  
                             i2SYSTEM_Initialize@state 0005  
                        ExternalFlash_SectorWrite@page 008D  
                        USBCtrlTrfRxService@byteToRead 0002  
                               ??__flash_set_page_size 0073  
                                 display_prepare@space 00D2  
                                    ??_MSDWriteHandler 008F  
                                  __end_of_api_prepare 24EA  
                    __end_of__get_available_root_entry 5982  
                            __display_itoa_long@length 00C2  
         __motor_decide_direction@distance_to_limit_cw 0082  
  __step_position_from_divide_position@target_position 0095  
                           ??__fill_buffer_get_display 0067  
                                    __size_ofi2_memcpy 005C  
                           i2c_display_cursor@position 006D  
                               ?_MSDTransferTerminated 000C  
                                    __size_ofi2_memset 002C  
                                       ??i2__i2c_start 0001  
                                      _USBMSDOutHandle 013D  
                         __end_of_USBConfigureEndpoint 3B52  
                                ?_encoder_statemachine 0001  
                                       ??i2__i2c_write 0009  
                                         ??__i2c_start 0060  
                                         ??__i2c_write 0068  
                      __end_of_USBStdFeatureReqHandler DA76  
                                  __flash_partial_read 4206  
                                    USBStallEndpoint@p 0066  
                                     _motor_move_steps 58A8  
                                        _MSDHostNoData 014F  
                                 ??__root_is_available 008F  
                               _motor_move_degrees_int 51A0  
                    __end_of_USBCtrlEPAllowStatusStage 2C50  
                         ?__encoder_next_arc_step_size 0060  
                    __size_of_i2c_eeprom_save_position 001A  
                             __end_of_USBCtrlEPService 37D0  
                       ?__motor_steps_from_degrees_int 0091  
                           __size_of_MSDProcessCommand 0134  
                                  __size_of__motor_run 01D6  
                            ?_i2c_eeprom_save_position 0001  
                                            __i2c_read 3A2A  
                                            __i2c_send 5D70  
                                      ___llmod@divisor 0064  
                                            __i2c_stop 5D8E  
                        ?__encoder_next_setup_stepsize 0060  
                                      ___llmod@counter 0068  
              _ExternalFlash_MediaInitialize$intlevel0 5B70  
             __end_of__parse_jump_steps_with_overshoot FB8A  
            __size_of__parse_jump_steps_with_overshoot 0152  
                   ??__parse_jump_steps_with_overshoot 009A  
                    ?__parse_jump_steps_with_overshoot 0094  
                     __parse_jump_steps_with_overshoot FA38  
                                    __size_of_i2c_init 001C  
                           configFile_read@file_number 01FB  
                            ??_USBCtrlEPAllowDataStage 0002  
                                _motor_cue_write_index 014A  
                                      _configFile_name 02D6  
                      ??__fill_buffer_get_mode_details 0062  
                                      _configFile_read F2BC  
                                       USBDeviceInit@i 0068  
                  __end_of_motor_decrease_manual_speed 5B6A  
                          _motor_decrease_manual_speed 5B48  
                             __size_of__backlight_init 0004  
                           __flash_partial_read@length 0077  
                        __root_is_available@first_byte 0094  
                               _pBDTEntryEP0OutCurrent 0143  
                               __size_of_fat_find_file 00E8  
                     __end_of_fat_get_file_information 418C  
                                          _DMACON1bits 000F88  
                               i2c_eeprom_write@length 000F  
                                          _DMACON2bits 000F86  
                                  __size_of_flash_init 000E  
                              USBTransferOnePacket@dir 0060  
                              USBTransferOnePacket@len 0063  
                                    __size_of__i2c_get 000A  
                                        _MSDTasks$2588 00AD  
                          MSDErrorHandler@OldMSD_State 0069  
                                        _MSDTasks$2589 00AF  
                       __end_ofi2_USBTransferOnePacket 1624  
                          __size_of_flash_partial_read 0026  
                                             ??___flge 0080  
                                             ??___lmul 0068  
                                spi_init@configuration 0063  
                                ?__display_padded_itoa 0078  
                              flash_partial_read@start 0089  
                      motor_move_degrees_int@direction 00A2  
                                             ??___wmul 0064  
                                  _USBStdGetDscHandler 0820  
                           __size_of__motor_move_steps 01D0  
                                 ?__flash_partial_read 0073  
                                          ?_motor_init 0001  
                                  __end_of_encoder_run 1C04  
                                    __CFG_ADCSEL$BIT12 000000  
                    __size_of_APP_DeviceCustomHIDTasks 00A8  
                           fat_get_file_size@file_size 009D  
                                          __pdataBANK2 0297  
                                          __pdataBANK4 0400  
                             motor_isr@steps_remaining 003A  
                                          ?_motor_stop 0001  
                            ?_APP_DeviceCustomHIDTasks 0001  
                                       _motor_arc_move 1FAA  
                    __end_of_overshoot_in_steps_string A225  
                                 __size_of_system_init 013A  
                                             ??_memcpy 0066  
                              __size_of__i2c_wait_idle 0064  
                                             ??_memset 0066  
     __motor_decide_direction@target_position_in_steps 007D  
                         __size_of__parse_command_long 0086  
                                   __end_of__i2c_start 5D9E  
                                             ??_spi_tx 0064  
                                   __end_of__i2c_write 5016  
                                     __get_item@buffer 0064  
                            __root_is_available@offset 0091  
          __parse_jump_steps_with_overshoot@out_buffer 0096  
                                             ??_strlen 0062  
                               ??__i2c_not_acknowledge 0060  
                                            ___fladd@a 0080  
                                            ___fladd@b 007C  
  motor_divide_jump_to_nearest@nearest_divide_position 00A2  
                                            __add_item 191C  
                               _USBActiveConfiguration 01C3  
                       __end_of_USBStdGetStatusHandler 3602  
                                            ___fldiv@a 007C  
                                            ___fldiv@b 0078  
                             __size_of_fat_resize_file 00FE  
                             __fat_sector_from_cluster 5C02  
                          api_parse@receivedDataLength 00A9  
                                     api_parse@out_idx 00B0  
                                    __size_of_adc_init 0058  
                                            ___flmul@a 007C  
                                            ___flmul@b 0078  
                                          __pbssCOMRAM 004C  
                                    __size_of__get_fbr 0274  
                            ??_i2c_display_write_fixed 0068  
                                        __pcstackBANK0 0060  
                                        __pcstackBANK1 01C4  
                         __size_of_USBCtrlTrfInHandler 00C2  
                                    __size_of__get_mbr 00D0  
                         ??_ExternalFlash_CapacityRead 0064  
                       __size_of_MSDCheckForErrorCases 0116  
             __get_available_offset_from_buffer@buffer 0062  
                        __end_of_MSDCheckForErrorCases 0EE2  
                     __end_of__motor_distance_to_limit FF6E  
                                  _fat_restore_mbr_fbr 3B52  
                           fat_create_file@file_number 00BC  
                                    __size_of___xxtofl 0144  
                                            _gblBLKLen 0230  
             __get_available_offset_from_buffer@offset 0066  
                   __end_of_flash_command_pagesize_512 A2E5  
                           _flash_command_pagesize_512 A2E1  
                   __end_of_flash_command_pagesize_528 A2E1  
                           _flash_command_pagesize_528 A2DD  
                                       __flash_is_busy 5AE0  
                                 ?_USBStdGetDscHandler 0001  
                                         _isdigit$8435 0061  
         __end_of_i2c_display_program_custom_character 4096  
        __size_of_i2c_display_program_custom_character 007C  
               ??_i2c_display_program_custom_character 0070  
                ?_i2c_display_program_custom_character 006E  
                 _i2c_display_program_custom_character 401A  
                                            __get_date 5D22  
                                    _flash_sector_read 5A24  
                                    __size_of_fat_init 0010  
                  fat_get_file_information@root_sector 0092  
                      __end_of__read_value_from_offset 527C  
                                            __get_item F5F6  
                      __end_of_fat_read_from_file_fast E3AE  
                                       _motor_set_zero 5492  
                                            __get_time 5D16  
                               flash_sector_write@data 0081  
                                     i2__i2c_wait_idle 4C80  
                               flash_sector_write@page 007F  
                                  __end_of__write_root 51A0  
                                            _dc_manual 9DEE  
                          motor_move_degrees_int@speed 009B  
                           __end_of_USBWakeFromSuspend 5626  
                            ??__motor_decide_direction 0082  
                                   ?_flash_sector_read 0087  
                           __end_of_i2c_display_cursor 5B26  
                                          __parse_item C176  
                  __end_of__divide_jump_size_decrement 44B0  
                          __divide_jump_size_decrement 4442  
                                           ?__i2c_read 0065  
                                           ?__i2c_send 0001  
                                            _dc_setup1 A01E  
                                            _dc_setup2 9FCE  
                                      _USBStallHandler 5390  
                             __display_padded_itoa@len 008C  
                                         _pBDTEntryOut 011B  
                                           ?__i2c_stop 0001  
                           fat_modify_file@file_number 00B7  
                             __display_padded_itoa@pos 008D  
                             __display_padded_itoa@tmp 0082  
                             motor_move_steps@distance 008C  
                                            __read_fat 4B20  
                          configFile_read@value_string 01EB  
                     __size_of__parse_set_manual_speed 0084  
                             __size_of_USBDeviceAttach 0032  
                     __end_of_ExternalFlash_SectorRead 56C4  
          __end_of__step_position_from_divide_position 1CF0  
         __size_of__step_position_from_divide_position 00EC  
                ??__step_position_from_divide_position 0095  
                 ?__step_position_from_divide_position 0091  
                  __step_position_from_divide_position 1C04  
                              __motor_move_steps@speed 0081  
                   __get_available_cluster@skip_sector 008D  
                                   i2_USBStallEndpoint 141C  
                                     ___lwdiv@dividend 0060  
                                 _motor_cue_read_index 014B  
                                _fat_get_format_status 3164  
                    fat_read_from_file_fast@start_byte 00A1  
                                    fat_find_file@name 008B  
                       MSDProcessCommandMediaPresent@i 00A6  
                                 ?_fat_restore_mbr_fbr 0001  
                                  ??_flash_sector_read 008B  
                                            _api_parse 094C  
                                            __pintcode 9008  
                            fat_create_file@root_entry 00BD  
                               __end_of_motor_arc_move 208E  
                              __fill_buffer_get_status E5D2  
                                   _APP_DeviceMSDTasks 5CC6  
                                        __pmediumconst 9092  
                                             ?___aldiv 0060  
                                    __size_of_tmr0_isr 003A  
                                             ?___almod 0060  
                                             ?___fladd 007C  
                                  fat_find_file@offset 0094  
                                ??__flash_partial_read 007B  
                               __parse_jump_steps@data 0094  
                                             ?___fldiv 0078  
                                            __ptext100 42F4  
                                            __ptext101 581E  
                                            __ptext110 208E  
                                            __ptext102 4364  
                                             ?___flneg 0078  
                                            __ptext111 0EE2  
                                            __ptext103 5414  
                                            __ptext200 4C80  
                                            __ptext120 51EA  
                                            __ptext112 E3AE  
                                            __ptext104 4442  
                                            __ptext201 5D9E  
                                            __ptext121 E9D0  
                                            __ptext113 5454  
                                            __ptext105 A330  
                                            __ptext210 3736  
                                            __ptext202 5DA6  
                                            __ptext130 4A12  
                                            __ptext122 00B4  
                                            __ptext114 5308  
                                            __ptext106 5C9C  
                                            __ptext211 4902  
                                            __ptext203 5DAE  
                                            __ptext131 5CC6  
                                            __ptext123 232E  
                                            __ptext115 32C0  
                                            __ptext107 05B2  
                                            __ptext220 D7FA  
                                            __ptext212 3C74  
                                            __ptext204 FF6E  
                                            __ptext140 4ED4  
                                            __ptext132 DCEA  
                                            __ptext124 578E  
                                            __ptext116 534C  
                                            __ptext108 D540  
                                            __ptext221 3D8A  
                                            __ptext213 1A16  
                                            __ptext205 01F8  
                                            __ptext141 3BE4  
                                            __ptext133 06EC  
                                            __ptext125 C8F0  
                                            __ptext117 4E2C  
                                            __ptext109 52C4  
                                            __ptext230 5C6A  
                                            __ptext222 4E80  
                                            __ptext214 3868  
                                            __ptext206 55EE  
                                            __ptext150 5A24  
                                            __ptext142 4A6C  
                                            __ptext134 46BE  
                                            __ptext126 CC42  
                                            __ptext118 3212  
                                            __ptext231 5DBE  
                                            __ptext223 2DD2  
                                            __ptext215 26A0  
                                            __ptext207 57EE  
                                            __ptext151 4206  
                                            __ptext143 4096  
                                            __ptext135 BD8A  
                                            __ptext127 FCDC  
                                            __ptext119 2ABE  
                                            __ptext240 284E  
                                            __ptext232 56F8  
                                            __ptext224 2778  
                                            __ptext216 24EA  
                                            __ptext208 5390  
                                            __ptext160 5B6A  
                                            __ptext152 5AE0  
                                            __ptext144 E7E6  
                                            __ptext136 CF7E  
                                            __ptext128 57BE  
                                            __ptext241 0000  
                                            __ptext233 1522  
                                            __ptext225 4D2E  
                                            __ptext217 5902  
                                            __ptext209 5B8C  
                                            __ptext161 5D7A  
                                            __ptext153 4BD0  
                                            __ptext145 0DCC  
                                            __ptext137 5DBA  
                                            __ptext129 572C  
                        ??__divide_jump_size_decrement 0060  
                                            __ptext234 54CE  
                                            __ptext226 141C  
                                            __ptext218 3562  
                                            __ptext170 F8DC  
                                            __ptext162 3414  
                                            __ptext154 4AC6  
                                            __ptext146 0CB2  
                                            __ptext138 565C  
                                            __ptext235 3ABE  
                                            __ptext227 5CF8  
                                            __ptext219 0820  
                                            __ptext171 5066  
                                            __ptext163 240C  
                                            __ptext155 56C4  
                                            __ptext147 120C  
                                            __ptext139 5016  
                                            __ptext236 4844  
                                            __ptext228 0FF0  
                                            __ptext180 3E94  
                                            __ptext172 5492  
                                            __ptext164 E5D2  
                                            __ptext156 37D0  
                                            __ptext148 4720  
                                            __ptext237 10FE  
                                            __ptext229 4782  
                                            __ptext181 50B6  
                                            __ptext173 336A  
                                            __ptext165 47E4  
                                            __ptext157 2D12  
                                            __ptext149 5690  
                                            __ptext238 2B8C  
                                            __ptext190 4C28  
                                            __ptext182 5D84  
                                            __ptext174 587A  
                                            __ptext166 F10E  
                                            __ptext158 5D2E  
                                            __ptext239 2C50  
                                            __ptext191 1316  
                                            __ptext183 FA38  
                                            __ptext175 369C  
                                            __ptext167 2F46  
                                            __ptext159 5CB2  
                                            __ptext184 FB8A  
                                            __ptext176 F460  
                                            __ptext168 584C  
                                            __ptext193 5544  
                                            __ptext185 58A8  
                                            __ptext177 2170  
                                            __ptext169 094C  
                                            __ptext194 1B10  
                                            __ptext186 ED84  
                                            __ptext178 5D3A  
                                            __ptext195 B7BE  
                                            __ptext187 1CF0  
                                            __ptext179 3D04  
                                            __ptext196 5C50  
                                            __ptext188 5D46  
                                            __ptext197 3F18  
                                            __ptext189 FE26  
                                            __ptext198 527C  
                                            __ptext199 5A72  
                                             ?___flmul 0078  
                          __size_of_motor_move_endless 002E  
                                             ?___fltol 0060  
                                  fat_find_file@sector 0092  
                                             ?___lldiv 0060  
                                             ?___llmod 0060  
                      motor_move_degrees_int@overshoot 009D  
                          __size_of_flash_sector_write 0050  
                                             ?___lwdiv 0060  
                                            __spi_init 557E  
                                             ?___lwmod 0060  
                           ??__offset_from_file_number 0062  
                          __size_of_fat_read_from_file 00E6  
                     __size_of__motor_schedule_command 00EC  
                                            _hid_rpt01 A184  
                                  ?i2_USBStallEndpoint 0001  
                        __size_of_adc_read_temperature 01DE  
                        __parse_jump_steps@out_idx_ptr 0098  
                                            _idle_rate 01C1  
                   __size_of__motor_calculate_distance 00E0  
                                   display_update@line 0070  
                                    __size_of_spi_init 0040  
                                     ___almod@dividend 0060  
                                     ?i2_USBDeviceInit 0001  
                                          _api_prepare 240C  
                            fat_modify_file@start_byte 00A1  
                                      __i2c_write@data 0065  
                                      __i2c_write@cntr 0069  
                                  fat_create_file@name 00AC  
                                  ?_APP_DeviceMSDTasks 0001  
                            __size_ofi2_ResetSenseData 0062  
                   __motor_calculate_distance@distance 0069  
                   __flash_write_to_buffer@data_length 0077  
                                  fat_create_file@size 00B0  
                                           ?__add_item 0084  
                                 _USBTransferOnePacket 1316  
                           __make_cluster_chain@offset 00A8  
            __ic2_display_set_cgram_address@data_array 006A  
                           ?_ExternalFlash_MediaDetect 0060  
                           __make_cluster_chain@sector 00A4  
                       ??_ExternalFlash_SectorSizeRead 0062  
                                 __display_signed_itoa 52C4  
                  __end_of__divide_jump_size_increment 5454  
                          __divide_jump_size_increment 5414  
                                    ??_display_prepare 00C6  
                                             ?_isdigit 0001  
                              _motor_clear_command_cue 5D3A  
                                 __CFG_RTCOSC$T1OSCREF 000000  
                                 __parse_command_short F8DC  
                               fat_read_from_file@data 00D1  
                  __fill_buffer_get_display@secondHalf 0066  
                                    ?_configFile_write 0001  
                               __end_of__flash_is_busy 5B04  
                                        _fat_find_file 1DDC  
                                    __display_itoa@len 00B4  
                                    __display_itoa@pos 00B6  
                                    __display_itoa@tmp 00AA  
                               fat_read_from_file@root 00DD  
                                    __display_itoa_u16 2FFE  
                                    ?_i2c_eeprom_write 000B  
                         __end_of_USBCtrlTrfOutHandler 48A4  
                             __size_of_i2c_eeprom_read 0056  
                                    ??_fat_modify_file 00A9  
                               ??_encoder_statemachine 00A8  
                             ??_motor_speed_from_index 009F  
                            __end_of_flash_sector_read 5A4C  
                                ??_USBStdGetDscHandler 0001  
                  __size_of__flash_copy_page_to_buffer 005A  
                                          _ep_data_out 012D  
                                     ___lwdiv@quotient 0064  
                               __end_of_motor_set_zero 54CE  
                                   ??_configFile_write 00E3  
                                   _motor_change_speed 5D84  
                                        _MSDWriteState 0153  
                         __size_of_USBCtrlTrfRxService 010E  
                                             ?_stricmp 0061  
                                    _ConfigFile_buffer 0800  
                                   ?__display_itoa_u16 0078  
                        USBConfigureEndpoint@direction 0001  
                                             ?_strncmp 0060  
                                             ?_toupper 0001  
                                       __display_clear 51EA  
                                   ??_i2c_eeprom_write 0010  
                            __size_of__i2c_acknowledge 000A  
                                           ?__get_date 0060  
               __cluster_from_sector_and_offset@offset 0062  
                                       __size_of_ultoa 00FE  
                              __end_of_configFile_read F460  
                                 ??i2_USBStallEndpoint 0002  
                                           ?__get_item 0060  
               __cluster_from_sector_and_offset@sector 0060  
                                      _config_internal 023B  
                                           ?__get_time 0060  
                        ??__divide_jump_size_increment 0060  
                                  __size_of_motor_init 001E  
                         __size_ofi2_SYSTEM_Initialize 0054  
                              i2__i2c_eeprom_busy@busy 0006  
                                      _config_external 0238  
                                       __display_start 30B2  
                                  __size_of_motor_stop 0050  
                                      ___aldiv@divisor 0064  
                         __size_of_USBCtrlTrfTxService 00D2  
                       __size_of_display_get_character 002E  
                                  __make_cluster_chain D26A  
                                      ___aldiv@counter 0068  
                                 ??_APP_DeviceMSDTasks 00B2  
                        __end_of_display_get_character 587A  
                                       ___wmul@product 0064  
                                             _LATAbits 000F89  
                                             _LATBbits 000F8A  
                                             _LATCbits 000F8B  
                                             _LATDbits 000F8C  
                           __end_of_USBCheckHIDRequest 284E  
                       __root_is_available@file_number 0093  
                 __flash_compare_page_to_buffer@buffer 0075  
                                  ?_motor_change_speed 0060  
                           ??_USBCtrlEPServiceComplete 0002  
                                           ?__read_fat 008F  
                                  ??__display_itoa_u16 007C  
                              __i2c_read@slave_address 006F  
                                             _IPR2bits 000FA2  
                                             _PIE1bits 000F9D  
                                             _PIE2bits 000FA0  
                      motor_isr@steps_until_standstill 0036  
                           configFile_read@item_string 01CC  
                                          _encoder_run 1B10  
                             __fat_offset_from_cluster 5C1C  
                                ??_fat_restore_mbr_fbr 0084  
                 __flash_compare_page_to_buffer@status 0079  
                                             _PIR1bits 000F9E  
                                             _PIR2bits 000FA1  
                               ??__display_padded_itoa 007D  
                                   __end_of_dc_divide1 9FCE  
                                   __end_of_dc_divide2 9F7E  
                                             _RCONbits 000FD0  
                                           ?_api_parse 00A7  
                                             _UEP0bits 000F26  
                                      ?_motor_arc_move 0001  
                                             _MSDTasks DCEA  
                                            _motor_isr B7BE  
                           _USBDeferINDataStagePackets 0159  
                                 _active_configuration 014C  
                             ??_motor_set_manual_speed 0064  
                                    ?_i2c_display_init 0001  
                              spi_tx_rx@command_length 0062  
                              flash_partial_write@data 0085  
                                   _bit_pattern_degree A2CD  
                          __size_of_USBCheckStdRequest 00D8  
                      ??_MSDProcessCommandMediaPresent 0099  
                              flash_partial_write@page 007F  
                __end_of__fill_buffer_get_mode_details F2BC  
               __size_of__fill_buffer_get_mode_details 01AE  
                        __fill_buffer_get_mode_details F10E  
                                             _UCONbits 000F65  
                                           ?__spi_init 0060  
                                 __end_ofi2__i2c_start 5DAE  
                                 __end_ofi2__i2c_write 52C4  
                                 _USBConfigureEndpoint 3ABE  
                                         ??__motor_run 0067  
                           ?__data_sector_from_cluster 0060  
               __ic2_display_set_ddram_address@address 006A  
                                   ??_i2c_display_init 006A  
                 __size_of__encoder_next_arc_step_size 0070  
                                    __i2c_write@length 0067  
                                    ??__backlight_init 0060  
                                            _spi_tx_rx 37D0  
                                            _spi_tx_tx 3BE4  
                          __size_ofi2__i2c_eeprom_busy 0026  
                      __end_of__motor_decide_direction F5F6  
                                 ?__make_cluster_chain 0095  
                      __make_cluster_chain@next_offset 009B  
                   __flash_write_page_from_buffer@page 0073  
                     __size_of_USBStdFeatureReqHandler 027C  
                                       _USBMSDInHandle 013B  
                                           _ADCON0bits 000FC2  
                                           _ADCON1bits 000FC1  
                                flash_sector_read@data 0089  
                                    ___wmul@multiplier 0060  
                                ?_USBTransferOnePacket 0060  
                                flash_sector_read@page 0087  
                                 ??_motor_change_speed 0062  
                             _initial_speed_arc_string A237  
                    __end_of__motor_calculate_distance 2250  
                __motor_steps_from_degrees_int@degrees 0091  
                                ?__display_signed_itoa 008F  
                  _ExternalFlash_MediaDetect$intlevel0 5D80  
                                    _SYS_InterruptHigh 9008  
                            __end_of__display_itoa_u16 30B2  
                                ?__parse_command_short 0001  
                            i2c_display_cursor@address 006F  
                                     __CFG_WPFP$PAGE_1 000000  
                                       ?_fat_find_file 008B  
                         i2c_eeprom_read@slave_address 0078  
                                         ??_flash_init 0078  
                                         _RemoteWakeup 0161  
                    __end_of_ExternalFlash_MediaDetect 5D84  
                                             i2_memcpy 4902  
                                             i2_memset 5902  
                    MSDCheckForErrorCases@DeviceNoData 0070  
                                 spi_tx_tx@data_length 0066  
                      fat_read_from_file_fast@position 00C5  
                                      ?__flash_is_busy 0001  
                     __end_of__fill_buffer_get_display 2FFE  
                                          __write_root 5154  
                                   ?_SYS_InterruptHigh 0001  
                             __end_of_motor_goto_steps 3736  
                  __fill_buffer_get_display@start_line 006E  
                               __end_of__display_clear 5234  
                    __size_of_fat_get_file_information 007A  
                                           spi_tx@data 0060  
                            ?_fat_get_file_information 008F  
               __end_of_overshoot_cost_in_steps_string A1D3  
                       _overshoot_cost_in_steps_string A1BB  
                              __end_of_USBStallHandler 53D4  
                    __motor_schedule_command@direction 0067  
                             __sector_from_file_number 575E  
                                      ?_motor_set_zero 0001  
                                       __i2c_read@data 0065  
                      ??__flash_write_page_from_buffer 0076  
                              __size_of_display_update 0038  
                                       __i2c_read@cntr 0070  
                         __end_of_maximum_speed_string A297  
                               __end_of__display_start 3164  
                         __end_of_minimum_speed_string A2A5  
                                    ___lmul@multiplier 0060  
                                     __add_item@buffer 008A  
                                            copy_data0 39AA  
                                            copy_data1 39CA  
                         __size_of__system_timer0_init 002C  
                                    ??_fat_resize_file 00B0  
                            __display_signed_itoa@text 0091  
          __encoder_next_divide_step_size@old_stepsize 0060  
                                     __add_item@length 008E  
                          ??_USBCtrlEPAllowStatusStage 0001  
                            __find_nth_cluster@cluster 0097  
                          __end_of_USBStdSetCfgHandler 25C8  
                          __display_padded_itoa@length 007A  
                                             _i2c_init 5BCA  
                                  ??_SYS_InterruptHigh 003E  
                                        ??i2__i2c_send 0001  
                                          ??__i2c_read 0068  
                                          ??__i2c_send 0060  
                                         _MSDReadState 0154  
                                        ??i2__i2c_stop 0001  
                                          ??__i2c_stop 0060  
                                   __end_of__motor_run ED84  
                                   __end_of_device_dsc A26D  
                          __size_of__display_itoa_long 010E  
            __encoder_next_setup_stepsize@old_stepsize 0060  
                             MSDErrorHandler@ErrorCase 0068  
                               ?_fat_get_format_status 0001  
                                             __i2c_get 5D5C  
                              ?_USBCtrlTrfSetupHandler 0001  
                                      _fat_create_file 033C  
                            ??__fill_buffer_get_status 006D  
                                           _ANCON0bits 000F48  
                                           _ANCON1bits 000F49  
                              USBStdGetStatusHandler@p 0002  
                             fat_read_from_file@length 00CD  
                                             __Hrparam 0000  
                                  __display_itoa@value 009F  
                               _motor_prescaler_lookup 9BFD  
                                            memcpy@tmp 006A  
                                             __Lrparam 0000  
                               USBTransferOnePacket@ep 0068  
                                    __parse_jump_steps FB8A  
                    __size_of__motor_distance_to_limit 0148  
                                             _SetupPkt 000D30  
                                   __end_of_flash_init 5D16  
                                       _TransferLength 0139  
                                           ?_motor_isr 0001  
                            ?__motor_distance_to_limit 006C  
                         ?_motor_increase_manual_speed 0001  
                           __end_of_USBCheckMSDRequest 2E8E  
                                      api_parse@in_idx 00B1  
                fat_read_from_file_fast@cluster_number 00AD  
                                ?_USBConfigureEndpoint 0001  
                                __flash_is_busy@status 0071  
                                     __size_of___aldiv 00CE  
                             _ExternalFlash_SectorRead 5690  
                            display_get_character@line 0063  
                                   ?__parse_jump_steps 0094  
                                     __size_of___almod 00AE  
                                     __size_of___fladd 033C  
                                    ??_USBDeviceAttach 0060  
                                       __i2c_wait_idle 465A  
                                      _MSDWriteHandler CF7E  
                                     __size_of___fldiv 02BA  
                             __end_of_motor_move_steps 58D6  
                                     __size_of___flneg 0030  
                                     __size_of___flmul 0352  
                                     __size_of___fltol 00DE  
                         fat_create_file@first_cluster 00BA  
                                     __size_of___lldiv 0084  
                                     __size_of___llmod 0068  
                                      i2__i2c_send@dat 0001  
                                ??__make_cluster_chain 0099  
                                     __size_of___lwdiv 0054  
                       __display_itoa_long@short_value 00C3  
                                     __size_of___lwmod 0044  
            ExternalFlash_SectorWrite@allowWriteToZero 008C  
                                           ?_spi_tx_rx 0060  
                                           ?_spi_tx_tx 0060  
                 __size_ofi2_ExternalFlash_MediaDetect 0004  
                                          _MSDCBWValid 014E  
                            __size_of__i2c_eeprom_busy 0028  
                            __end_of_SYS_InterruptHigh 908E  
                            ??_motor_clear_command_cue 0060  
                        __display_itoa_long@last_digit 00C5  
                                    ?_USBStallEndpoint 0060  
                           i2c_display_write_fixed@pos 0068  
                                             _adc_init 4B78  
                          __steps_from_degrees@degrees 0091  
  __motor_distance_to_limit@distance_to_limit_in_steps 0074  
                                             __get_fbr DA76  
                                             __get_mbr 2920  
                                          ??__add_item 008C  
                     __end_of_i2c_eeprom_save_position 5C6A  
                                   ??_USBStallEndpoint 0061  
                                  ??__parse_jump_steps 009A  
                      __flash_copy_page_to_buffer@page 0073  
                   __end_of_ExternalFlash_CapacityRead 5CC6  
                           _ExternalFlash_CapacityRead 5CB2  
                                             ___xxtofl 00B4  
                              ??_MSDTransferTerminated 000E  
                                     __size_of_isdigit 0022  
                              __size_of_USBDeviceTasks 0146  
         __parse_jump_steps_with_overshoot@out_idx_ptr 0098  
                                      ___lwdiv@divisor 0062  
                              __display_itoa_u16@value 0078  
                                             _fat_init 5CD8  
                              ?_motor_move_degrees_int 0099  
                                      ?__display_clear 0001  
                                      ___lwdiv@counter 0066  
                           __size_of_flash_sector_read 0028  
                             ??__get_available_cluster 008F  
                                             __ptext10 5D66  
                                             __ptext11 59AC  
                                             __ptext20 DA76  
                                             __ptext12 5D08  
                                             __ptext21 5A98  
                                             __ptext13 53D4  
                                             __ptext30 4FC6  
                                             __ptext22 55B6  
                                             __ptext14 557E  
                                             __ptext31 465A  
                                             __ptext23 4D84  
                                             __ptext15 43D4  
                                             __ptext40 033C  
                                             __ptext32 5D8E  
                                             __ptext24 5B04  
                                             __ptext16 5CD8  
                                             __ptext41 5154  
                                             __ptext33 5D96  
                                             __ptext25 5ABC  
                                             __ptext17 3B52  
                                             __ptext50 5D22  
                                             __ptext42 44B0  
                                             __ptext34 5D70  
                                             __ptext26 550A  
                                             __ptext18 3164  
                                             __ptext51 5958  
                                             __ptext43 495E  
                                             __ptext35 30B2  
                                             __ptext27 401A  
                                             __ptext19 2920  
                                             __ptext60 E188  
                                             __ptext52 191C  
                                             __ptext44 D26A  
                                             __ptext36 2FFE  
                                             __ptext28 592E  
                                             __ptext61 34BC  
                                             __ptext53 4DD8  
                                             __ptext45 5626  
                                             __ptext37 C536  
                                             __ptext29 4F76  
                                             __ptext70 5A4C  
                                             __ptext62 5234  
                                             __ptext54 1722  
                                             __ptext46 29F0  
                                             __ptext38 1624  
                                             __ptext71 575E  
                                             __ptext63 4B20  
                                             __ptext55 45F2  
                                             __ptext47 48A4  
                                             __ptext39 DF54  
                                             __ptext80 5B26  
                                             __ptext72 5982  
                                             __ptext64 5C02  
                                             __ptext56 3E10  
                                             __ptext48 59D4  
                                             __ptext81 59FC  
                                             __ptext73 1DDC  
                                             __ptext65 5C1C  
                                             __ptext57 4280  
                                             __ptext49 5D16  
                                             __ptext90 EBAE  
                                             __ptext82 EF54  
                                             __ptext74 3F9A  
                                             __ptext66 5CE8  
                                             __ptext58 F2BC  
                                             __ptext91 AF94  
                                             __ptext83 0A76  
                                             __ptext75 C176  
                                             __ptext67 4112  
                                             __ptext59 1EC4  
                                             __ptext92 51A0  
                                             __ptext84 F5F6  
                                             __ptext76 49B8  
                                             __ptext68 418C  
                                             __ptext93 0B98  
                                             __ptext85 4B78  
                                             __ptext77 5C84  
                                             __ptext69 451C  
                                             __ptext94 5C36  
                                             __ptext86 58D6  
                                             __ptext78 1820  
                                             __ptext95 F780  
                                             __ptext87 4588  
                                             __ptext79 25C8  
                                             __ptext96 2E8E  
                                             __ptext88 5DB6  
                                             __ptext97 1C04  
                                             __ptext89 3602  
                                             __ptext98 5B48  
                                             __ptext99 1FAA  
                                         _SSP1CON1bits 000FC6  
                      __size_of_motor_speed_from_index 0016  
                                         _SSP1CON2bits 000FC5  
                                      ?__display_start 0001  
                         __flash_set_page_size@command 0073  
                                         _SSP2CON1bits 000F72  
                 __end_of_MSDProcessCommandMediaAbsent 4720  
                __size_of_MSDProcessCommandMediaAbsent 0062  
                         _MSDProcessCommandMediaAbsent 46BE  
                                      ___almod@divisor 0064  
                                          ??__get_date 0062  
                                __flash_wakeup@command 0068  
                                          ??__get_item 0066  
                                      ___almod@counter 0068  
                                          ??__get_time 0062  
                                     __size_of_stricmp 005A  
                     __end_of_inverse_direction_string A25B  
                                     ?_configFile_read 0001  
                                     __size_of_strncmp 0080  
                                     __size_of_toupper 0018  
                                  __parse_command_long 3D04  
                           ?_ExternalFlash_SectorWrite 0084  
                       ExternalFlash_SectorRead@config 008B  
                       ExternalFlash_SectorRead@buffer 0091  
                   __end_of__flash_copy_page_to_buffer 49B8  
                           __flash_copy_page_to_buffer 495E  
                              __size_of_ResetSenseData 0062  
                     __end_of_APP_DeviceCustomHIDTasks 34BC  
                                    ??_i2c_eeprom_read 0076  
                                __end_of__flash_wakeup 4C28  
                              __parse_set_manual_speed 3E94  
                                        __size_of_atoi 00D8  
                                        __size_of_atol 00FC  
                       __end_of_USBCtrlTrfSetupHandler 3D04  
                                        __size_of_main 0096  
                                    ?_USBCtrlEPService 0001  
                                        __size_of_itoa 0044  
                                             _inq_resp A160  
                                        __size_of_ltoa 0054  
                                        __size_of_utoa 00AA  
                                          ??__read_fat 0091  
                          __end_of_flash_partial_write 451C  
                                           strncmp@len 0064  
                              fat_get_file_size@offset 009B  
                              fat_get_file_size@sector 0099  
                            __end_of__parse_jump_steps FCDC  
                fat_read_from_file_fast@needed_cluster 00C1  
                                   ??_USBCtrlEPService 001E  
                                             _tmr0_isr 5544  
                             ??__motor_move_back_forth 0068  
                                  _USBCtrlTrfInHandler 2C50  
                   _MSDProcessCommandMediaPresent$2606 009B  
                             ??__write_value_to_offset 0066  
                  __parse_set_manual_speed@out_idx_ptr 0068  
                       fat_read_from_file_fast@cluster 00AB  
                                          ??_api_parse 00AC  
                               __end_of__i2c_wait_idle 46BE  
                fat_resize_file@old_number_of_clusters 00B4  
                                  __end_ofi2__i2c_send 5DB6  
                           __end_of_motor_items_in_cue 5D52  
                                             _outPipes 0112  
      i2c_display_program_custom_character@bit_pattern 006E  
                                  __end_ofi2__i2c_stop 5DA6  
                                             _spi_init 53D4  
                              __motor_schedule_command 1CF0  
                             ??_configFile_readDefault 0060  
                                 _USBCtrlTrfOutHandler 4844  
                                             int$flags 005F  
                     __end_of__offset_from_file_number 59AC  
                           ??__fat_sector_from_cluster 0062  
                                             atoi@sign 006A  
                            _USBCtrlEPAllowStatusStage 2B8C  
                      __size_of_motor_set_manual_speed 0050  
                                         ??_motor_init 0060  
                                          ??__spi_init 0063  
                                             atol@sign 0074  
                                         ??_motor_stop 0060  
                        ??_motor_increase_manual_speed 0064  
                                 ?__parse_command_long 00A0  
                                         _SSP1STATbits 000FC7  
                               ??_USBTransferOnePacket 0064  
                             __end_ofi2__i2c_wait_idle 4CD8  
                                    main@startup_timer 00FD  
                          __end_of_motor_period_lookup 9BFD  
               __make_cluster_chain@remaining_clusters 00A2  
                                  __display_start@cntr 007C  
                                         _SSP2STATbits 000F73  
                               ??__display_signed_itoa 0093  
                                __end_of__display_itoa E5D2  
                                     i2_ResetSenseData 4782  
                       ?_APP_DeviceCustomHIDInitialize 0001  
                                      ??_fat_find_file 008F  
                               ??__parse_command_short 009E  
                MSDProcessCommandMediaPresent@capacity 00A2  
                        display_get_character@position 0060  
                             __size_of_MSDErrorHandler 011A  
                       ?__fill_buffer_get_mode_details 0060  
                                      __add_item@value 0086  
                              _motor_postscaler_lookup 982F  
                            _USBDeferStatusStagePacket 015C  
                           __size_of__display_itoa_u16 00B4  
                      __end_of__fill_buffer_get_status E7E6  
                    __fill_buffer_get_display@position 006F  
                                          _OSCTUNEbits 000F9B  
                                           _INTCONbits 000FF2  
                       __end_of_motor_move_degrees_int 51EA  
                       __parse_jump_steps@return_value 009B  
                            motor_move_steps@direction 0093  
                         __size_of__steps_from_degrees 01BA  
                                 ?_USBCtrlTrfInHandler 0001  
                                             memcpy@d1 0060  
                                             memcpy@s1 0062  
                                 i2c_eeprom_write@data 000D  
                                 i2c_eeprom_write@cntr 0025  
                        USBCtrlTrfTxService@byteToSend 0001  
                   __motor_get_speed_in_degrees@lookup 0099  
                            __display_padded_itoa@text 007B  
                                             itoa@base 0074  
                __motor_move_back_forth@return_value_1 0068  
                __motor_move_back_forth@return_value_2 0069  
                                             isdigit@c 0062  
                                             memset@p1 0060  
                                            ultoa@base 0073  
                     fat_read_from_file@cluster_number 00DB  
                 __end_of_MSDComputeDeviceInAndResidue 2DD2  
                __size_of_MSDComputeDeviceInAndResidue 00C0  
                         _MSDComputeDeviceInAndResidue 2D12  
                           fat_modify_file@return_code 00B8  
                                     ?_USBStallHandler 0001  
                             USBStdFeatureReqHandler@p 001C  
                           ?__get_available_root_entry 0001  
                              spi_tx_tx@command_length 0062  
                        __size_of__flash_set_page_size 006E  
                                     __i2c_acknowledge 5D66  
                              __end_of_fat_create_file 0478  
                                             intlevel2 0000  
                                     spi_tx_rx@command 0060  
                             __flash_get_status@status 006F  
                                             ltoa@base 0080  
                          __size_of__root_is_available 006C  
                              fat_restore_mbr_fbr@cntr 0084  
                               __size_of_USBDeviceInit 014A  
                      __end_of_motor_clear_command_cue 5D46  
                        ?_MSDProcessCommandMediaAbsent 0001  
              __end_of_USER_USB_CALLBACK_EVENT_HANDLER 3E10  
             __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                    ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                     ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                      _USER_USB_CALLBACK_EVENT_HANDLER 3D8A  
            __motor_schedule_command@distance_in_steps 0060  
                                   __end_of_motor_init 5BCA  
                                         ?__parse_item 0099  
                                     ___lwmod@dividend 0060  
                  __end_of_full_circle_in_steps_string A212  
                          _full_circle_in_steps_string A1FD  
                         i2USBTransferOnePacket@handle 000A  
                    __end_of_ExternalFlash_SectorWrite 5690  
                                     ___lldiv@dividend 0060  
                                   __end_of_motor_stop 50B6  
                __end_of__flash_write_page_from_buffer 4AC6  
               __size_of__flash_write_page_from_buffer 005A  
                        __flash_write_page_from_buffer 4A6C  
               i2SYSTEM_Initialize@pll_startup_counter 0001  
                 SYSTEM_Initialize@pll_startup_counter 0060  
                                            stricmp@s1 0061  
                                            stricmp@s2 0063  
                             _maximum_speed_arc_string A225  
                         __end_of_beep_duration_string A289  
                         fat_read_from_file@start_byte 00C9  
                                      _display_content 0242  
                           __end_of_flash_partial_read 5A72  
                              __end_of_MSDWriteHandler D26A  
                                            strncmp@s1 0060  
                  __end_of_i2c_eeprom_recover_position 5C02  
                                            strncmp@s2 0062  
                          _i2c_eeprom_recover_position 5BE6  
                              __write_root@file_number 008E  
                                     spi_tx_tx@command 0060  
                                __size_ofi2__i2c_start 0008  
                              __size_of_MSDReadHandler 01EA  
                                __size_ofi2__i2c_write 0048  
                                __add_item@item_string 0084  
                   __parse_set_manual_speed@out_buffer 0066  
                                  fat_resize_file@root 00BB  
                           i2USBTransferOnePacket@data 0002  
                                        ??_system_init 00FD  
                                __get_item@item_string 0060  
                    __size_of__fill_buffer_get_display 00B8  
                         __end_of_use_ccw_limit_string A27B  
                             ?__read_value_from_offset 0060  
                             ?_fat_read_from_file_fast 00A1  
                               _motor_speed_from_index 5C9C  
                            ?__fill_buffer_get_display 0064  
                               ??_USBConfigureEndpoint 0002  
                                      ?__i2c_wait_idle 0001  
                                ?_USBCtrlTrfOutHandler 0001  
                             motor_goto_steps@position 0092  
                                      _display_prepare A330  
                                          ??_motor_isr 0026  
                             ??__flash_write_to_buffer 007A  
                             ?_APP_DeviceMSDInitialize 0001  
                                  _USBCtrlTrfRxService 10FE  
                                   _USBWakeFromSuspend 55EE  
                                ??__parse_command_long 00A6  
                                 _maximum_speed_string A289  
                                   _i2c_display_cursor 5B04  
                      motor_set_manual_speed@new_speed 0062  
                                 _minimum_speed_string A297  
                              _USBStdFeatureReqHandler D7FA  
                                      _fat_modify_file DF54  
                                  i2_SYSTEM_Initialize 4E80  
                                          ??_spi_tx_rx 0068  
                                          ??_spi_tx_tx 0068  
                                  _USBCtrlTrfTxService 284E  
                           __size_of_SYS_InterruptHigh 0086  
                                         ?_api_prepare 0070  
                    __motor_get_speed_in_degrees@speed 0095  
                __flash_write_page_from_buffer@command 0079  
                                             utoa@base 006B  
                                             ultoa@buf 006D  
                                    _motor_divide_jump 2E8E  
                                             ultoa@val 006F  
                                      _gblMediaPresent 023E  
                   __motor_steps_from_degrees_int@temp 0095  
                             configFile_read@file_size 01F7  
                  ExternalFlash_SectorRead@sector_addr 008D  
                                    _motor_command_cue 0300  
                  __motor_calculate_distance@direction 0068  
                                  ?_USBWakeFromSuspend 0001  
                                           _PPSCONbits 000EBF  
                                     ___lldiv@quotient 0068  
                                      ___lwmod@divisor 0062  
                          ??_ExternalFlash_MediaDetect 0062  
                                  ?_i2c_display_cursor 006D  
                                ??_USBCtrlTrfInHandler 0002  
                                   ?_motor_divide_jump 0001  
                                             stricmp@r 0066  
                                             strlen@cp 0064  
                                _USBAlternateInterface 01BE  
                                      ___lwmod@counter 0064  
                        __size_of__i2c_not_acknowledge 000A  
                                             toupper@c 0060  
                                          _ptrNextData 013F  
                                         ___aldiv@sign 0069  
                     __make_cluster_chain@data_changed 00A1  
                            motor_move_steps@overshoot 0092  
                            i2USBTransferOnePacket@dir 0001  
                            i2USBTransferOnePacket@len 0004  
                                  USBEnableEndpoint@ep 000C  
                                      _endpoint_number 015F  
                                       _display_update 55B6  
                  __get_available_cluster@first_sector 008B  
                               _motor_set_manual_speed 50B6  
                             _i2c_eeprom_save_position 5C50  
                      __size_of__get_available_cluster 00CE  
                                 ?_USBCtrlTrfRxService 0001  
                 __size_of_motor_increase_manual_speed 001A  
                                        ___fladd@signs 008C  
                         __end_of_adc_read_temperature EBAE  
                            ??__parse_set_manual_speed 006A  
                                _MSDCheckForErrorCases 0DCC  
                                  ??_motor_divide_jump 009E  
                           ??__fat_offset_from_cluster 0062  
                        ?_MSDComputeDeviceInAndResidue 0060  
                                         i2__i2c_start 5DA6  
                              motor_arc_move@direction 0094  
                                 ?i2_SYSTEM_Initialize 0001  
                                         i2__i2c_write 527C  
                             ?_USBCtrlEPAllowDataStage 0001  
                                       _MSBBufferIndex 0240  
                                         ___almod@sign 0069  
                                 ?_USBCtrlTrfTxService 0001  
                      __offset_from_file_number@offset 0063  
                                         ___fladd@aexp 008D  
                                        ?_encoder_init 0001  
                                         ___fladd@bexp 008E  
                                           _USBMSDInit 0FF0  
                         _USBStatusStageTimeoutCounter 015D  
                                          i2__i2c_send 5DAE  
                      ??_ExternalFlash_MediaInitialize 0062  
                                          i2__i2c_stop 5D9E  
                                     ??_motor_arc_move 0094  
                                 ??_USBWakeFromSuspend 0018  
                             __display_itoa_long@value 00B7  
                          __end_of__flash_partial_read 4280  
                            configFile_write@file_size 00E5  
                           USBTransferOnePacket@handle 0069  
                                      __backlight_init 5DB6  
                                 ??_i2c_display_cursor 006E  
                                         ?_encoder_run 0001  
    motor_divide_jump_to_nearest@divide_position_float 00A4  
                           __size_of__parse_jump_steps 0152  
                            __size_of_configFile_write 03BA  
                              __display_itoa_long@text 00BC  
                            ??__motor_schedule_command 0067  
                   __motor_distance_to_limit@direction 0078  
                           fat_resize_file@file_number 00BA  
                                           _USB_CD_Ptr 9DEC  
                           __end_of_motor_move_endless 58A8  
                            __size_of_i2c_eeprom_write 0082  
                                          _power_state 014D  
                                          _USBInHandle 0135  
                             _APP_DeviceCustomHIDTasks 3414  
                      __size_of__motor_move_back_forth 00AA  
                           __end_of_flash_sector_write 5066  
